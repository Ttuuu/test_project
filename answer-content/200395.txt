<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is the power of classes: they encapsulate a common concept, so that you write them once, and reuse them multiple times. (And all in all this is the main act of programming: spot common patterns and derieve generalizations from these patterns.)</p>

<p>So, you have multiple classes along the lines of:</p>

<pre><code>private class Listener17 implements ActionListener {
    public void actionPerformed(ActionEvent e) {
        input.setText(input.getText() + "sin");
    }
}
private class Listener18 implements ActionListener {
    public void actionPerformed(ActionEvent e) {
        input.setText(input.getText() + "cos");
    }
}   
</code></pre>

<p>... which differ only in the text you append. Thus, make ONE class of these, and pass the text to append as a parameter:</p>

<pre><code>private class AppendingTextListener implements ActionListener {
    private final String textToAppend;

    AppendingTextListener(String textToAppend) {
        this.textToAppend = textToAppend;
    }

    public void actionPerformed(ActionEvent e) {
        input.setText(input.getText() + textToAppend);
    }
}
</code></pre>

<p>and then:</p>

<pre><code>butt0.addActionListener(new AppendingTextListener("0"));
butt1.addActionListener(new AppendingTextListener("1"));
...
</code></pre>
    </div>