<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I use the following sub to speed up processing: </p>

<pre><code>Public Sub AppSpeed(Optional iWhat As Long = xlDown)

    Dim bDir As Boolean

    bDir = True
    If iWhat = xlUp Then bDir = False

    On Error Resume Next

    With Application
         .Calculation = IIf(bDir, xlCalculationAutomatic, xlCalculationManual)
         .ScreenUpdating = bDir
         .DisplayStatusBar = bDir
         .EnableEvents = bDir
         .DisplayPageBreaks = bDir
         .PrintCommunication = bDir
   End With
End Sub
</code></pre>

<p>and I call it like</p>

<pre><code>AppSpeed xlUp ' at the beginning of the app
</code></pre>

<p>and</p>

<pre><code>AppSpeed xlDown  ' az the end of processing
</code></pre>

<p>The inconvenience of this solution is that you can't monitor what's happening so Dim a counter like filecounter and put the following snippet somewhere in the loop e.g. after <code>wb.SaveAs</code> to see that something is happening</p>

<pre><code>    filecounter = filecounter + 1
    If 100 * (filecounter \ 100) = filecounter Then
        AppSpeed xlDown
        Application.StatusBar = folderpath &amp; " " &amp; CStr(filecounter)
        DoEvents
        AppSpeed xlUp
    End If
</code></pre>

<p>Next advice is to reduce the number of files in one folder. The documenations do not really help in this matter. My experience is that it is worth to keep the number of files under 1000 in one folder because access time increases enormously over that. You have a flexible structure so can quickly test it by dividing the files to multiple folders. </p>
    </div>