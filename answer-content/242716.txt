<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Good</h1>

<ul>
<li>good variable names</li>
<li>nice indentation</li>
<li>good use of <code>$()</code></li>
<li>double quoting <code>$</code> variable interpolation</li>
</ul>

<h1>Challenges</h1>

<p>I'm guessing some part of what you removed and <code>xxx</code>d has caused the <code>putdata</code> function to not do anything with the argument you are passing in.  If I guessed wrong, then you should remove the arguments so it doesn't cause someone else confusion.</p>

<p>Do you want this to be totally silent?    I'm not sure if the <code>aws</code> command produces any output here.  Adding a <code>date</code> command in the <code>while</code> loop would help debugging if you come back to the terminal later to figure out what happened.  I'd run this in a terminal under <code>tmux</code> for a few weeks before I started trying it in containers.  This sort of thing can have fun edge cases when some API falls over.  It can take a while to catch all of those.</p>

<p>It sounds like you'd like some logging.  That can be done in bash with redirection such as <code>&gt;&gt; logfile</code>.  Of course, there are <a href="https://serverfault.com/a/103569/205542">more advanced choices</a>.</p>

<p>I'd put a blank link before the <code>while</code> loop and get rid of the blank line inside of it.</p>

<p>You mention rewriting in python.  I wouldn't worry about it for anything this small.  But generally for AWS programming python is the winning choice since <a href="https://boto3.amazonaws.com/v1/documentation/api/latest/index.html" rel="nofollow noreferrer">AWS provides their API that way</a>.  Functionality may be available through the API before it is available in console.  Everything in the <code>aws</code> CLI command is built with this.  You can use <code>jq</code> to process JSON that comes back from running the <code>aws</code> command to do the same stuff in bash, but it is more work than python where you get a dictionary back and not have to parse any JSON.</p>

<p>Finally, using <a href="https://www.shellcheck.net/" rel="nofollow noreferrer">shellcheck</a> is a good habit to get into when shell coding.</p>
    </div>