<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As @BlindMan67 commented, the Nodes themselves are not protected.
Apart from that, I don't see many glaring problems. Below is a short example of how to fix that (However, it does use a function closure, which may not be your style)</p>

<pre><code>const [Deck, Node] = (function() {
    // Class definition for nodes, not included
    const NodeHeads = new Map(),
          NodeTails = new Map();
    // A deck is a collection of values with support to add and remove
    // values at both sides as well as in the middle.
    // Because its a doubly linkes list, adding and removing values at
    // the sides has O(1) time complexity, while in middle O(n).
    // Because of its circular nature, only the head is stored, the tail
    // can be derived by taking head.previous.
    class Deck {

        // Constructor optionally specifying the initial values.
        constructor(values = null) {
            NodeHeads.set(this, null);
            if (values !== null) {
                for (const value of values) {
                    this.push(value);
                }
            }
        }

        // Inserts a value at the tail.
        // @returns this deck.
        push(value) {
            const node = new Node(value);
            if (this.empty()) {
                NodeHeads.set(this, node);
            } else {
                NodeTails.get(this).append(node);
            }
            return this;
        }
        get head() {
            return NodeHeads.get(this).value;
        }
        // ...etc...

    }
    return [Deck, Node]
})();
</code></pre>
    </div>