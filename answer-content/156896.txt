<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>You ignored the instructions</h3>
<p>According to the problem statement, the <code>String</code> passed in has enough room to hold all the expanded characters, and you are supposed to do the expansion in-place.  You went ahead and allocated a second character array and copied the characters from one array to another.</p>
<p>The whole backwards loop you used only makes sense if you are expanding in-place in the same array.  If you allocate a new array, you might as well write the loop in the forwards direction since it doesn't make any difference.</p>
<h3>Other things</h3>
<ol>
<li>I find it easier to read an if-else statement if the if condition is written in the positive sense <code>if (c == ' ')</code> rather than <code>if (c != ' ')</code>.</li>
<li>Although your backwards loop does the right thing, I had to stare at it for a long time to convince myself that it was correct.  Instead of an expression for the insertion point, I would just use another index.</li>
</ol>
<p>(I just noticed that @rolfl already covered these points)</p>
<h3>Rewrite</h3>
<p>Here is how I would have modified your function.  (It looks a lot like @rolfl's version actually):</p>
<pre><code>public static String conversion(String str, int length)
{
    char[] strChars  = str.toCharArray();
    int    numSpaces = 0;

    for (int i = 0; i &lt; length; i++) {
        if (strChars[i] == ' ') {
            numSpaces++;
        }
    }

    int newLength = length + 2 * numSpaces;

    for (int i = length - 1, j = newLength - 1; i &gt;= 0; i--) {
        char c = strChars[i];
        if (c == ' ') {
            strChars[j--] = '0';
            strChars[j--] = '2';
            strChars[j--] = '%';
        } else {
            strChars[j--] = c;
        }
    }

    return String.valueOf(strChars);
}
</code></pre>
    </div>