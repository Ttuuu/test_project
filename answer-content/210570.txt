<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>But we can go further:</p>

<p><strong>Solution 2</strong></p>

<pre><code>import requests
from bs4 import BeautifulSoup
import pprint

def clinicalTrialsGov (nctid):
    data = BeautifulSoup(requests.get("https://clinicaltrials.gov/ct2/show/" + nctid + "?displayxml=true").text, "xml")
    subset = ['study_type', 'allocation', 'intervention_model',
              'primary_purpose', 'masking', 'enrollment',
              'official_title', 'condition', 'minimum_age',
              'maximum_age', 'gender', 'healthy_volunteers',
              'phase', 'primary_outcome', 'secondary_outcome',
              'number_of_arms', 'intervention_name',
              'intervention_type', 'arm_group_type']
    tag_dict = {f'ct{subset_detail.capitalize()}' : [current_tag.text
                                                     for current_tag
                                                     in data.find_all(subset_detail)
                                                     if current_tag.text.strip()]
                for subset_detail in subset}
    result_data = {k: ", ".join(v) for (k, v) in tag_dict.items() if v} 
    result_data['ctID'] = nctid
    return result_data

pprint.pprint(clinicalTrialsGov("NCT01220960"))
</code></pre>

<ul>
<li>Instead of looking for almost all tags at the same time, I use a dictionary comprehension to look for each tag seperately and creating a list containing the text retrieved linked to the tag. This works if there's zero, one or many matching tags.</li>
<li>I created another dictionary (<code>result_data</code>) to merge the answers (if there's more than one) and filter out the tags that don't have text associated with them.</li>
</ul>
    </div>