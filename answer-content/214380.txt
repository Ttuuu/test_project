<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are using a transaction per insert statement, that will basically do nothing as a single statement on it's own is effectively a transaction.</p>

<p>You want to perform the loop within a single transaction so that the disk is written just the once, rather than for every insert.</p>

<p>I'd suggest changing :-</p>

<pre><code>                            for (int i = 0; i &lt; itemArray.length(); i++) {
                                itemCode = itemArray.getJSONObject(i).getString("ITEMCODE");
                                itemBrand = itemArray.getJSONObject(i).getString("BRAND");
                                itemDesc = itemArray.getJSONObject(i).getString("DESCRIPTION");

                                DatabaseOperations dop = new DatabaseOperations(ctx);
                                dop.insertItems(dop, itemCode, itemBrand, itemDesc);
                            }  
</code></pre>

<p>to :-</p>

<pre><code>                        DatabaseOperations dop = new DatabaseOperations(ctx);
                        dop.getWritableDatabase().beginTransaction();
                        for (int i = 0; i &lt; itemArray.length(); i++) {
                            itemCode = itemArray.getJSONObject(i).getString("ITEMCODE");
                            itemBrand = itemArray.getJSONObject(i).getString("BRAND");
                            itemDesc = itemArray.getJSONObject(i).getString("DESCRIPTION");

                            dop.insertItems(dop, itemCode, itemBrand, itemDesc);
                        }
                        dop.setTransactionSuccessful();
                        dop.endTransaction();  
</code></pre>

<p>Along with changing the <strong>insertItems</strong> method to :-</p>

<pre><code>    public void insertItems (DatabaseOperations dop,
                             String itemCode, String brand, String desc) {
        SQLiteDatabase sq = dop.getWritableDatabase();

        ContentValues cv = new ContentValues();
        cv.put(TableData.TableInfo.COL_ITEMS_ITEMCODE, itemCode);
        cv.put(TableData.TableInfo.COL_ITEMS_BRAND, brand);
        cv.put(TableData.TableInfo.COL_ITEMS_DESCRIPTION, desc);
        sq.insert(TableData.TableInfo.TB_ITEMS, null, cv);
    }
</code></pre>

<ul>
<li><p>Note this is in-principle code, it has not been run or tested and may therefore contain some errors.</p></li>
<li><p>Note in regard to SQL Injection, the Android convenience methods, such as <strong>insert</strong> do provide protection against SQL injection as the values extracted from the ContentValues are appropriately enclosed when the underlying SQL is built by the methods.</p></li>
</ul>
    </div>