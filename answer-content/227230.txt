<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2><code>typedef</code> is your friend</h2>

<p>You're using C99, so <code>typedef struct { ... } rectangle;</code> instead of the older style.</p>

<h2>Additional structs</h2>

<p>If you want to tighten up some of your code, one potential way is to make a coordinate struct. This would halve the number of members of <code>rectangle</code>, for instance. Such nesting would not have a performance impact. It would also be used instead of <code>new_x</code> / <code>new_y</code> (for instance).</p>

<h2>Failure handling</h2>

<p>The old-school C behaviour for <code>malloc</code> failure is to not only return <code>null</code>, but to set <code>errno</code>. This should not be ignored. Have a read through <a href="http://pubs.opengroup.org/onlinepubs/009695399/functions/perror.html" rel="nofollow noreferrer">http://pubs.opengroup.org/onlinepubs/009695399/functions/perror.html</a></p>
    </div>