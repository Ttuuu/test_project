<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Robust input is difficult to get right in C!</p>
<p>The input loop is broken when we reach end of file: it will loop indefinitely.  What we want to do is to give up completely when we get <code>EOF</code> back from <code>scanf()</code>:</p>
<pre><code>  int items = scanf("%d", &amp;letter);
  if (items == EOF) {
      fputs("Failed to read input\n", stderr);
      return EXIT_FAILURE;
  }
  if (items != 1) {
      /* skip the rest of this line, discarding the return value
         (we'll deal with errors next time round the loop). */
      scanf("%*[^\n]");
      continue;
  }
</code></pre>
<p>(We'll need to include <code>&lt;stdlib.h&gt;</code> for a definition of <code>EXIT_FAILURE</code>.)</p>
<hr>
<p>The alphabetic characters can be declared <code>static</code> rather than <code>auto</code>.  Although <code>main()</code> is only executed once in this program, the <code>static</code> declaration can help your compiler avoid unnecessary code.</p>
<hr>
<p>The declaration of <code>main()</code> should be a prototype - explicitly show it takes no arguments by writing <code>(void)</code>.</p>
<hr>
<h1>Modified program</h1>
<p>This includes some observations mentioned in other reviews; I won't repeat them here.</p>
<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int main(void)
{
    static const char alphabet[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    static const int length = sizeof alphabet - 1; /* don't count the NUL */

    int letter = 0;
    do {
        int items = scanf("%d", &amp;letter);
        if (items == EOF) {
            fputs("Failed to read input\n", stderr);
            return EXIT_FAILURE;
        }
        if (items != 1) {
            /* skip the rest of this line, discarding the return value
               (we'll deal with errors next time round the loop). */
            scanf("%*[^\n]");
            continue;
        }
    } while (letter &lt; 1 || letter &gt; length);

    printf("The number %i corresponds to the letter '%c'\n",
           letter, alphabet[letter-1]);
}
</code></pre>
    </div>