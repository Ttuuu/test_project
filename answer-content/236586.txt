<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First off, my basic maths is a bit rusty, but is <code>radix</code> correct? Shouldn't <code>Math.pow(x,1/y)</code> be <code>Math.pow(y,1/x)</code>?</p>

<p>I'm not a big fan of "extending" the native <code>Math</code> object. The <code>Math</code> object isn't a regular JavaScript object so you shouldn't assume that all implementations will allow you to add new properties to it. It would be better to create your own object and copy the properties and methods needed over from <code>Math</code>.</p>

<p>The code in general leans a bit to the cryptic side. Especially the many regular expressions urgently need some comments and the code could be split up into functions with descriptive names.</p>

<p>The use of the <code>String</code> constructor seems unnecessary in most places and could be replaced with more readable alternatives.</p>

<p>Checking the return values from <code>getLeft/RightParam</code> with <code>typeof</code> seems overkill. I'd use a simple truthy check (<code>if (number) {</code>) instead.</p>

<p>The <code>getLeftParam</code> and <code>getRightParam</code> functions share a lot of similar code.</p>

<p>The repeated use of <code>while (typeof text == "string") {</code> looks strange to me, because in as far as I can see in all cases the condition never becomes <code>false</code>.</p>

<p>Error handling seems inconsistent. Sometimes errors are returned, sometimes thrown. And the choices of error objects (<code>ReferenceError</code>, <code>TypeError</code>, etc.) seem arbitrary.</p>

<p>And as a pure gut feeling I don't think the code supports arbitrary deep brackets.</p>

<p>Finally, while I do think this can be valid use of "evil" <code>eval</code>, you do put a lot of (necessary) work into validating and replacing in order to extend the syntax and use it safely. However I believe it wouldn't be much more work to instead write a full parser/interpreter that avoids using <code>eval</code>.</p>
    </div>