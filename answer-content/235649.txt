<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Yes, it is.</h3>
<p>For some reason you put everything upside-down: where you don't need a prepared statement (for a constant query) you are using it, but where a prepared statement is mandatory - for a query that uses variables - you don't.</p>
<p>But I would say, it is not the main problem of this code. The main problem is this code being a total mess. There are two blocks of code that do absolutely nothing useful, one of them even fails, but you don't notice it.</p>
<p>I would review only a database interaction part</p>
<h3>1. Useless code</h3>
<p>The following block of code does absolutely nothing</p>
<pre><code>            $sql2 = "SELECT * FROM gallery;";
            $stmt = mysqli_stmt_init($conn);
            if (!mysqli_stmt_prepare($stmt, $sql2)) {
                echo "SQL statement failed!";
            } else {
                mysqli_stmt_execute($stmt);
                $result2 = mysqli_stmt_get_result($stmt);
                $rowCount = mysqli_num_rows($result2);
</code></pre>
<p>it takes you $rowCount which is nowhere used. You can safely take this code away.</p>
<p>Another block,</p>
<pre><code>                if (!mysqli_stmt_prepare($stmt, $sql2)) {
                    echo "SQL statement failed!";
                } else {
                    mysqli_stmt_bind_param($stmt, "sssssssssss", $cid, $new_topic_id, $creator, $title, $content, $imageNamn, $imageMail, $imageNummer, $imagePris, $imagestad, $imageFullName);
</code></pre>
<p>is also doing nothing useful (as you are already executed this query), and even fails on the bind_param part, because of the flawed</p>
<h3>2. Error reporting</h3>
<p>There are two things you are doing wrong in regard of error reporting</p>
<ul>
<li>using procedural interface that <strong>silently</strong> fails on errors</li>
<li>checking the function results manually</li>
</ul>
<p>To fix these issues, you have to use OOP syntax and add a specific command to your mysqli connection code,</p>
<pre><code>mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
</code></pre>
<p>(just for reference, here is a <a href="https://phpdelusions.net/mysqli/mysqli_connect" rel="nofollow noreferrer">canonical example for mysqli connect</a> I wrote).</p>
<p>After that, all MySQL errors will pop up automatically, therefore you won't have to check every function's result manually.</p>
<h3>3. SQL injection.</h3>
<p>Finally to the SQL injection. The rules are simple:</p>
<ul>
<li>if your query doesn't accept any variables, then you don't have to run it using a prepared statement. Use a regular query() instead.</li>
<li>if your query accepts <strong>any</strong> variables, then it must be executed using prepared statement</li>
</ul>
<p>Now you can see that if <code>SELECT * FROM gallery</code> had any meaning, you would have run it using <code>query()</code>, not a prepared statement. But as it is just useless, we won't run this query at all.</p>
<p>All other queries must be run using prepared statements:</p>
<pre><code>$sql = "INSERT INTO topics (category_id, topic_title, topic_creator, topic_date, topic_reply_date, imgFullNameGallery, topic_pris) 
        VALUES (?,?,?,now(), now(),?,?)";
$stmt = $conn-&gt;prepare($sql);
$stmt-&gt;bind_param("sssss", $cid, $title, $creator, $imageFullName, $imagePris);
$stmt-&gt;execute();
$new_topic_id = mysqli_insert_id($conn);

$sql = "INSERT INTO gallery (category_id, topic_id, post_creator, titleGallery, descGallery, namnGallery, emailGallery, nummerGallery, prisGallery, stad, post_date, imgFullNameGallery)
         VALUES (?,?,?,?,?,?,?,?,?,?,?)";
$stmt = $conn-&gt;prepare($sql);
$stmt-&gt;bind_param("sssssssssss", $cid, $new_topic_id, $creator, $title, $content, $imageNamn, $imageMail, $imageNummer, $imagePris, $imagestad, $imageFullName);
$stmt-&gt;execute();

$sql = "UPDATE categories SET last_post_date=now(), last_user_posted=? WHERE id=? LIMIT 1";
$stmt = $conn-&gt;prepare($sql);
$stmt-&gt;bind_param("ss", $creator, $cid);
$stmt-&gt;execute();

move_uploaded_file($fileTempName, $fileDestination);
header("location: view_topic.php?cid=".$cid."&amp;tid=".$new_topic_id);          
</code></pre>
    </div>