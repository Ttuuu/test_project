<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Getting rid of the manual index <code>k</code> which is unnecessary:  </p>

<pre><code>def kadane1DwithBounds(maxRows):
    global temp

    m = s = sum(temp[i] for i in xrange(maxRows))
    for i in xrange(N - maxRows):
        s += temp[maxRows + i] - temp[i]
        if s &gt; m:
           m = s
    return m

def kadane2DwithBounds(maxRows, maxCols):
    global temp

    for i in xrange(N):
        temp[i] = sum(table[i][j] for j in xrange(maxCols))

    m = kadane1DwithBounds(maxRows)
    for j in xrange(M - maxCols):
        for i in xrange(N):
            delta = table[i][maxCols + j] - table[i][j]
            temp[i] += delta
        m = max(m, kadane1DwithBounds(maxRows))
    return m
</code></pre>

<p>Testing this on a 36x72 matrix with a 6x4 submatrix the new routines take about 68% of the original ones, so roughly minus one third.</p>
    </div>