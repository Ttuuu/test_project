<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>overall this code looks nice and tidy, and it passes <code>pylint</code> with minimal errors which is a good start!</p>

<p>Some observations:</p>

<p>If you're returning in an <code>if</code> block you don't need to use <code>elif</code> and/or <code>else</code> since on match the code will never continue.  I'd probably use <code>or</code> instead of 3 <code>elif</code> statements to avoid having the `return "won" repeated. And maybe carry the result in a variable - this allows you to set a default and avoid one test. So something like:</p>

<pre><code>def check_victory(computer_choice, user_choice):
    result = "lost"
    if user_choice == computer_choice:
        result = "tie"
    if computer_choice == "rock" and user_choice == "paper" or \
       computer_choice == "paper" and user_choice == "scissors" or \
       computer_choice == "scissors" and user_choice == "rock":
        result = "won"
    return result
</code></pre>

<p>Another thing might be to replace some of the descriptive comments with docstrings - less important in a small program, but a useful habit to get into for more complex projects later on.</p>

<p>Finally since you're using f-strings for the first print, you could use them for both?</p>

<pre><code>print(f"Computer choose: {computer_choice}")
print(f"You {check_victory(computer_choice, user_choice)}\n\n")
</code></pre>

<p>Only other things are 'features' like documenting the choices available, providing 'shortcuts' like r/p/s etc - but those are 'optional extras' and nothing to do with the code quality!</p>
    </div>