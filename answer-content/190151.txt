<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can chain together <code>dict.get()</code> functions and use the optional <code>default</code> argument and specify an empty dict to return instead of <code>None</code> if the key doesn't exist. Except, let the last <code>.get()</code> return <code>None</code> if the key is not found.</p>

<p>If any of the keys to be traversed are missing, a empty dict is returned and the following <code>.get()</code>s in the chain will be called on the empty dict, which is fine., The final <code>.get()</code> in the chain will either return the value if all the keys exist or will return <code>None</code> as desired.</p>

<p>example 1:</p>

<pre><code>input_dict = {"a":{"b":{"c":1}}} #1
input_dict.get("a", {}).get("b", {}).get("c") # 1
</code></pre>

<p>example 2:</p>

<pre><code>input_dict = {"a":{"bar":{"c":1}}} #1
input_dict.get("a", {}).get("b", {}).get("c") # None
</code></pre>
    </div>