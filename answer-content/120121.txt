<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This might be a good candidate to use <a href="https://metacpan.org/pod/SQL::Abstract" rel="noreferrer"><code>SQL::Abstract</code></a> in, as per DBIx::Class.</p>



<pre><code>sub insert {
    # insert takes ( $table, \%fieldmap )
    my $sql = SQL::Abstract-&gt;new();
    my ( $query, @binds ) = $sql-&gt;insert( @_ );
    $dbh-&gt;prepare($query)-&gt;execute(@binds);
    return $dbh-&gt;last_insert_id(undef, undef, undef, undef);
}
</code></pre>

<p>This gives you a few easy features that may come in handy in the future
if you change your database, like:</p>

<ul>
<li><a href="https://metacpan.org/pod/SQL::Abstract#quote_char" rel="noreferrer">easily change quoting character for tables/fields</a></li>
<li><a href="https://metacpan.org/pod/SQL::Abstract#injection_guard" rel="noreferrer">guard against injection abuse in user-specified key names</a>, because your code <strong>currently</strong> assumes all keys will be safe. But this will not necessarily be true, and is a <a href="http://kentfredric.github.io/blog/2016/01/02/re-the-perl-jam-2-hashes-are-insecure/" rel="noreferrer">vulnerability target even under taint</a></li>
</ul>
    </div>