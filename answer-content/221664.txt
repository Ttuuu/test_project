<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Use better algorithms: <a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes" rel="noreferrer">Sieve_of_Eratosthenes</a></p>

<p>You used a brute force algorithm. But even this can be highly improved.</p>

<p>You increment by 2 each loop.</p>

<pre><code>    for (int i = 5; ; i = i+2) {
</code></pre>

<p>So you have noticed that all even numbers are not prime. You can improve on this. By incrementing by 2 then 4 then 2 then 4. This removes all multiples of 2 and 3 automatically.</p>

<pre><code>    int inc = 2;
    for (int i = 5; ; i += inc, inc = 6 - inc) {
</code></pre>

<p>The brute force check runs up to num/2</p>

<pre><code>    for (int i = 2; i &lt;= num/2; ++i)
</code></pre>

<p>Actually you can do better than that you only need to run up to the <code>sqrt(num)</code> anything larger than this will not divide into num exactly.</p>

<pre><code>    int limit = sqrt(num);
    for (int i = 2; i &lt;= limit; ++i)
</code></pre>

<p>Actually we can take this a step further. There is no need to divide by every number lower than <code>num</code>. Any number that is divisible by a prime is already checked by a prime smaller than it.</p>

<p>For example there is no need to check 4. You already checked 2 and all numbers divisible by 4 are also divisible by 2, so need to do that check. In fact you can skip all numbers that are not prime.</p>

<pre><code>bool is_prime(int num)
{
    int limit = sqrt(num);
    for (auto const&amp; prime: primes) {
    {
        if (prime &gt; limit) {
            return true;
        }
        if (num % prime == 0) {
            return false;
        }
    }
    return true;
}
</code></pre>
    </div>