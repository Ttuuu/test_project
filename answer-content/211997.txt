<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Read <a href="https://www.python.org/dev/peps/pep-0008/" rel="noreferrer">PEP8</a>, it will give you directions on how to write Python code that look like Python code to other.</p>

<p>Other than that, the behaviour you're seeking is already implemented in <code>range</code>:</p>

<pre><code>&gt;&gt;&gt; a = range(7, 0, -2)
&gt;&gt;&gt; list(a)
[7, 5, 3, 1]
</code></pre>

<p>You just need to reverse it to form the full hourglass:</p>

<pre><code>&gt;&gt;&gt; a = range(7, 0, -2)
&gt;&gt;&gt; list(a) + list(reversed(a))
[7, 5, 3, 1, 1, 3, 5, 7]
</code></pre>

<p>And remove the repeated center:</p>

<pre><code>&gt;&gt;&gt; decreasing = range(7, 0, -2)
&gt;&gt;&gt; increasing = reversed(decreasing)
&gt;&gt;&gt; next(increasing)  # Remove duplicated center
&gt;&gt;&gt; list(decreasing) + list(increasing)
[7, 5, 3, 1, 3, 5, 7]
</code></pre>

<p>Now you can make use of <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="noreferrer"><code>itertools.chain</code></a> instead of list concatenation and turn your function into a generator to separate computation from printing.</p>

<pre><code>import itertools


def hourglass(size):
    decreasing = range(size, 0, -2)
    increasing = reversed(decreasing)
    next(increasing, None)  # Remove duplicated center
    for length in itertools.chain(decreasing, increasing):
        yield '{:^{}}'.format('@' * length, size)


if __name__ == '__main__':
    for i in range(20):  # Test our function
        print('\n'.join(hourglass(i)), end='\n---\n')
</code></pre>

<p>Note that if you are using Python 3.6+ you can format the line using</p>

<pre><code>yield f'{"@" * length:^{size}}'
</code></pre>

<p>instead which may be slightly more readable.</p>
    </div>