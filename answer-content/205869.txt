<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Rule of Zero</h1>

<p>You should follow the <a href="https://en.cppreference.com/w/cpp/language/rule_of_three" rel="noreferrer">rule of zero</a> where class that deal with memory ownership should deal exclusively with memory ownership. Your class allocate raw memory but do not free it when being destroyed. It will leak memory. Also issue with copying your queue. You should use std::unique_ptr instead of raw new.</p>

<h1>Reuse memory when queue is empty</h1>

<p>Why do you need to free the underlying memory when the queue is empty? Can't you just set head to the beginning and reuse the memory? This will save you from having to allocate new memory.</p>

<h1>Use STD algorithm</h1>

<p>Use <a href="https://en.cppreference.com/w/cpp/algorithm/copy_n" rel="noreferrer">std::copy_n</a> instead of for loop in doubleSize() to make your code more readable.</p>
    </div>