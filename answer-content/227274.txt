<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Keep It Simple For the User</strong>
Rather than making the user type the word <code>Exit</code> it might be better to ask the user
<code>Are you done yet(y/n)?</code> and accept a simple yes/no answer. It also might be better if the answer was not case sensitive so accept <code>Y</code>, <code>y</code>, <code>N</code> and <code>n</code>.</p>

<p><strong>Exit From Main() When Possible</strong>
The Main() function may contain clean up code so exiting from the <code>ExitProgram()</code> function may not be the best idea. A second problem I see with the <code>ExitProgram()</code> function is that it is called before the user ever enters a calculation. There are two possible ways to handle this, one would be to move the call to <code>ExitProgram()</code> to after the calculation is performed, the other would be to have a function that contains a <code>do while</code> loop that calls <code>Calc</code> within the loop and tests <code>ExitProgram()</code> in the while condition.</p>

<p><strong>Function Complexity</strong><br>
The function <code>Calc()</code> is overly complex (it does too much) and should be multiple functions. One of the functions should get the user input, and a second function should do the calculation. This would be applying two programming principles, the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="noreferrer">Single Responsibility Principle</a> and the KISS Principle.</p>

<p>The Single Responsibility Principle states:  </p>

<blockquote>
  <p>that every module, class, or function should have responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by that module, class or function.</p>
</blockquote>

<p>The <a href="https://en.wikipedia.org/wiki/KISS_principle" rel="noreferrer">Keep It Simple (KISS) Principle</a> is an engineering principle that predates computers, basically it is keep the implementation as simple as possible.</p>
    </div>