<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think your implementation is broken. It states in the docstring </p>

<blockquote>
  <p>The initialisation expression is guaranteed to only execute once</p>
</blockquote>

<p>but I think the initialisation expression could be run multiple times with multithreading (race condition). Initialisation of function static variables in late C++ employs synchronisation under-the-hood.</p>

<p>Otherwise, I think the implementation is rather clever, but I wouldn't use it. I agree with most of <a href="https://codereview.stackexchange.com/a/240618/223689">this</a> answer's criticisms, especially about nesting a class inside a class inside a class. That answer's final suggestion of using the function instance itself to store the static variables seems to miss the mark, though, in my opinion. One of the more useful properties of a function static variable is to minimise the scope of the variable. Ideally, it shouldn't be visible externally or depend on externally accessible state.</p>

<p><em>Pythonic</em> in my experience just seems to mean "constructs with which we're familiar". I've toyed with replicating statics in Python, too, but I've never seen it used <em>anywhere</em> in the wild, including in the workplace. Implementing a generic language feature atop a language never seems to come off naturally, and the syntax for your statics is, in my opinion, clunky and incurs a fair runtime overhead - but that's <em>not</em> to say that I think it's possible to come up with something much better. I'd forgo this altogether.</p>
    </div>