<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>CodeReview</h2>

<p>Why use the <code>Scripting.FileSystemObject</code>?  <code>MyFolder</code> is just returning the folder name </p>

<blockquote>
  <p>MyFolder = Worksheets("Config").Range("D4").Value &amp; ActiveSheet.Range("C21").Value</p>
</blockquote>

<p>I would also write a function to return the folder path and a second function to create the icacls commands.</p>

<h2>Fun Part: My Own Solution</h2>

<p>The class below will create a self-deleting batch file.  Running it in silent mode will hide the command window.  The advantage of using a batch file is that you can add a pause that will allow you to inspect the results of your commands.  </p>

<p>Note: pause will have no effect in silent mode and the files do not delete themselves immediately but they will automatically delete after a short time.</p>

<p><a href="https://i.stack.imgur.com/eNlsv.png" rel="noreferrer"><img src="https://i.stack.imgur.com/eNlsv.png" alt="Command Window"></a></p>

<hr>

<h2>Class: BatchFile</h2>

<pre><code>Attribute VB_Name = "BatchFile"

Option Explicit
Public FileText As String
Private Const DeleteCommand As String = "DEL ""%~f0"""

Public Sub AppendLine(Text As String)
    If Len(FileText) &gt; 0 Then FileText = FileText &amp; vbNewLine
    FileText = FileText &amp; Text
End Sub

Public Sub AddICacls(ByVal FolderName As String, ByVal Parameters As String)
    AppendLine "icacls " &amp; Chr(34) &amp; FolderName &amp; Chr(34) &amp; Parameters
End Sub

Public Sub Execute(SilentMode As Boolean)
    Dim FilePath As String
    FilePath = getTempBatchFileName

    CreateFile FilePath

    Dim oShell As Object
    Set oShell = CreateObject("WScript.Shell")

    If SilentMode Then
        oShell.Run Chr(34) &amp; FilePath &amp; Chr(34), 0
    Else
        oShell.Run Chr(34) &amp; FilePath &amp; Chr(34)
    End If

    Set oShell = Nothing
End Sub

Private Sub CreateFile(FilePath As String)
    Dim Text As String
    Text = FileText &amp; vbNewLine &amp; DeleteCommand

    Dim FileNumber As Long
    FileNumber = FreeFile
    Open FilePath For Output As FileNumber
    Print #FileNumber, Text
    Close FileNumber

    Debug.Print Text
End Sub


Private Function getTempBatchFileName() As String
    Dim n As Long
    Dim FilePath As String

    Do
        n = n + 1
        FilePath = Environ("Temp") &amp; "\" &amp; n &amp; ".bat"
    Loop While Len(Dir(FilePath)) &gt; 0

    getTempBatchFileName = FilePath
End Function
</code></pre>

<hr>

<h2>Usage</h2>

<pre><code>Sub RunICalcs()
    Const DebugMode As Boolean = True

    Dim Batch As New BatchFile
    Dim FolderName As String
    FolderName = getFolderPath

    Batch.AddICacls FolderName, " /r /d y"
    Batch.AddICacls FolderName, " /setowner mydomain\admin"
    Batch.AddICacls FolderName, " /grant mydomain\StudentExam101:(OI)(CI)F /T"
    Batch.AddICacls FolderName, " /grant mydomain\DAdmins:(OI)(CI)F /T"
    Batch.AddICacls FolderName, " /grant mydomain\admin:(OI)(CI)F /T"
    Batch.AddICacls FolderName, " /grant SYSTEM:(OI)(CI)F /T"
    Batch.AddICacls FolderName, " /grant CREATOR OWNER:(OI)(CI)F /T"

    If DebugMode Then
        Batch.AppendLine "pause"
        Batch.Execute False
    Else
        Batch.AppendLine "pause"
        Batch.Execute True
    End If
End Sub

Function getFolderPath() As String
    getFolderPath = Worksheets("Config").Range("D4").Value &amp; ActiveSheet.Range("C21").Value
End Function
</code></pre>
    </div>