<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your algo is good, I have a few styling nitpicks.</p>

<ol>
<li><p>Use a <code>if__name__ == '__main__'</code></p>

<p>This will make sure that when you import this script the root lines will not be executed.</p></li>
<li><p>Read <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a> the Python styleguide</p>

<ul>
<li>Functions and variables should be <code>snake_case</code></li>
</ul></li>
<li><p>Return directly</p>

<p>As @DJHenjin correctly state, you don't need the nested if statements.</p>

<blockquote>
<pre><code>def checkCorrect(soduku):
    if unique_columns(soduku):
        if unique_rows(soduku):
            if unique_grids(soduku):
                return True
    return False
</code></pre>
</blockquote>

<p>Can be rewritten as </p>

<pre><code>def check_correct(soduku):
    return unique_columns(soduku) and unique_rows(soduku) and unique_grids(soduku)
</code></pre></li>
<li><p>You can use the <code>all</code> or <code>any</code> to make it more pretty</p>

<blockquote>
<pre><code>def unique_grids(soduku):
   for grid in allgrids: 
       if not np.array_equal(np.unique(soduku[grid]),np.array(range(1,10))) :
           return False
   return True
</code></pre>
</blockquote>

<p>Can be rewritten as </p>

<pre><code>def unique_grid(sudoku):
    return all(np.array_equal(np.unique(soduku[grid]),np.array(range(1,10))) 
               for grid in all_grids)
</code></pre>

<p>Same for the other <code>unique_*</code></p></li>
<li><p>Remove useless comments</p>

<blockquote>
<pre><code># If soduku is complete return it.
if is_complete(soduku):
    return soduku
</code></pre>
</blockquote>

<p>The code is pretty self explenatory, and this comment only adds noise.</p></li>
</ol>
    </div>