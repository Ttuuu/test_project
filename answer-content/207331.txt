<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, don't use <code>for-in</code> on arrays. <code>for-in</code> will loop over all enumerable properties, including non-index properties. Also, <code>for-in</code> order is not guaranteed. If you need a loop to go over array items only and in order, use <code>for</code>/<code>while</code>. Alternatively you can use <code>array.forEach</code>.</p>

<p>There's no way (that I know of) to remove that second loop, since you need to go over each selected property for each person in <code>data</code>. What you could do though is use native array methods. This way, you avoid the extra boilerplate that comes with loops like not going over the actual number of items.</p>

<p>What you <em>really</em> want is <code>array.map</code>. It's primary purpose is to create <em>a new array</em> based on another array, essentially a 1:1 transformation. In your case, you need to create an array that contains the same items but only selected properties.</p>

<p>For the inner loop, I suggest <code>array.reduce</code>. One use case for reduce is to condense an array of values into a single value. In this case, the selected keys into an object only containing the selected keys and their values.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var selectedColumns = ['first', 'last', 'city'];

var data = [{
    first: "Mike",
    last: "Ross",
    dob: "05/26/1978",
    city: "Washington DC",
    state: "DC",
    zip: 22904
  },
  {
    first: "John",
    last: "Henderson",
    dob: "11/06/1988",
    city: "Iowa City",
    state: "IA",
    zip: 52401
  },
  {
    first: "Nina",
    last: "Barkley",
    dob: "01/16/1968",
    city: "New York",
    state: "NY",
    zip: 11308
  },
  {
    first: "Jessie",
    last: "Kuch",
    dob: "02/02/1956",
    city: "Des Moines",
    state: "IA",
    zip: 55432
  },
  {
    first: "Jenny",
    last: "Terry",
    dob: "012/28/1988",
    city: "Miami",
    state: "FL",
    zip: 83943
  }
];

const onlySelected = data.map(person =&gt; {
  return selectedColumns.reduce((c, key) =&gt; {
    return { ...c, [key]: person[key] }
  }, {})
})

console.log(onlySelected)</code></pre>
</div>
</div>

    </div>