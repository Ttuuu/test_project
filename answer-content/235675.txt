<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>All suggestions posted before my answer are valid, I'm writing some personal thoughts about your code:</p>

<blockquote>
<pre><code>public static void extractBirthdayFromRodneCislo(String rodneCislo) {
   //omitted
   System.out.println(year + " " + month + " " + day);
}
</code></pre>
</blockquote>

<p>Instead of printing values inside this method you can return the String object as a result and after print it like the code below:</p>

<pre><code>public static void extractBirthdayFromRodneCislo(String rodneCislo) {
    //omitted
    return String.format("%d %d %d", yy, mm, dd);
}
</code></pre>

<p>I used the String.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#format-java.lang.String-java.lang.Object...-" rel="nofollow noreferrer">format</a> that permits to create string composed by values in a more readable way instead of composing the final String using the <code>+</code> operator.</p>

<p>The  purpose of your code is basically extract some characters from your string and use them as <code>int</code> digits from your use of <code>Integer.parseInt</code> method like your code below:</p>

<blockquote>
<pre><code>if (rodneCislo.length() &lt; 10) {
        year = Integer.parseInt("19" + rodneCislo.charAt(0) + rodneCislo.charAt(1));
    } else {
        String century = Integer.parseInt(String.valueOf(rodneCislo.charAt(0)) + String.valueOf(rodneCislo.charAt(1))) &lt; 53 ? "20" : "19";
        year = Integer.parseInt(century + rodneCislo.charAt(0) + rodneCislo.charAt(1));
    }
}
</code></pre>
</blockquote>

<p>You can refactor your code and rewrite your method like below:</p>

<pre><code>public static String extractBirthdayFromRodneCislo1(String rodneCislo) {

    int sum = Integer.parseInt(rodneCislo.substring(0, 2));
    int yy = (rodneCislo.length() &lt; 10 || sum &gt; 53) ? 1900 + sum : 2000 + sum;

    int mm = Integer.parseInt(rodneCislo.substring(2, 4));
    if (mm &gt; 12) { mm -= 50; }

    int dd = Integer.parseInt(rodneCislo.substring(4, 6));

    return String.format("%d %d %d", yy, mm, dd);
}
</code></pre>

<p>As already suggested your code should be integrated with a validation method that ensures that characters used in the method extractBirthdayFromRodneCislo are digits  otherwise the method will fail.</p>
    </div>