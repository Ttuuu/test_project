<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Feedback</h2>

<p>Nice use of arrow functions, the fetch API (and associated promises), etc. The layout looks nice as well.</p>

<h2>Suggestions/Review Points</h2>

<h3>Options could appear multiple times</h3>

<p>The code in <code>getRandomCountry()</code> does not account for the scenario where <code>Math.floor(Math.random()*this.state.countries.length)</code> yields the same value within 4 consecutive calls. Even with 250 options, it is possible to have one country name appear 2+ times in the list of options. Instead of selecting three random options, a loop could be used until 4 unique names are selected.</p>

<p>So instead of these lines: </p>

<blockquote>
<pre><code>const random = this.state.countries[Math.floor(Math.random()*this.state.countries.length)];
const randomOpt1 = this.state.countries[Math.floor(Math.random()*this.state.countries.length)];
const randomOpt2 = this.state.countries[Math.floor(Math.random()*this.state.countries.length)];
const randomOpt3 = this.state.countries[Math.floor(Math.random()*this.state.countries.length)];
const randomOptions = [random.name, randomOpt1.name, randomOpt2.name, randomOpt3.name];
</code></pre>
</blockquote>

<p>Use a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while" rel="noreferrer"><code>while</code></a> (or a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for" rel="noreferrer"><code>for</code></a>) loop to continue adding options. Inside the loop, select the "<em>random</em>" country name and then <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes" rel="noreferrer">Array.includes()</a> can be used to check if each random name does (not) exist already in the array:</p>

<pre><code>const random = this.state.countries[Math.floor(Math.random()*this.state.countries.length)];
let randomOptions = [random.name];
while(randomOptions.length &lt; 4 ){ 
    const randomOpt = this.state.countries[Math.floor(Math.random()*this.state.countries.length)];
    if (!randomOptions.includes(randomOpt.name)) { 
        randomOptions.push(randomOpt.name);
    }
}
</code></pre>

<h3>Inconsistent color specifications</h3>

<p>While there is nothing wrong with it, there is an inconsistency with the specification of colors (e.g. <code>white</code> for the initial background color, then either <code>#81C784</code> for a win or <code>#FFA865</code> for a loss). Others reading your code might be thrown off by the difference in specification. At minimum, a helpful comment after the hex codes could be helpful... For example: </p>

<pre><code>bgColor: {backgroundColor: '#81C784'} //green
</code></pre>

<p>and </p>

<pre><code>bgColor: {backgroundColor: '#FFa865'} //orange
</code></pre>
    </div>