<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few stylistic nitpicks: the function body should be indented and there should be a space following the <code>-</code> signs.</p>

<p><code>getString</code> should be changed to take an array of boolean values, instead of a sparse array of "Y" strings. You can write a separate function to convert your original format to a bool array.</p>

<pre class="lang-js prettyprint-override"><code>function optionsToBoolArray(array){
    var converted = [];
    for(var i = 0; i &lt; array.length; i++){
        converted[i] = array[i] === "Y";
    }
    return converted;
}
</code></pre>

<p><code>getString</code> is also a undescriptive name for your function. You should change it to something along the lines of <code>optionsToReadableString</code>.</p>

<p><code>fundMap</code> doesn't need to be an object. Since you are currently using like an array, explicitly make it an array for clarity.</p>

<p><code>fundString = fundArray + " option";</code> should be <code>fundString = fundArray[0] + " option";</code> to avoid implicit conversions for readability.</p>

<p>The code for multiple options can also be simplified by using array methods: </p>

<pre><code>else {
    fundString = fundArray.slice(0,fundArray.length - 1).join(", ") + " and " + fundArray[fundArray.length - 1] + " options";
}
</code></pre>

<p>This also lets you eliminate the <code>else if</code> branch.</p>

<p>You should also extract the <code>console.log</code> out of the function to separate the logic. After doing this, you can eliminate <code>fundString</code> completely by just returning the value from each branch of the if/else.</p>

<p>You should also look into learning ES6 features such as using <code>let</code> instead of <code>var</code>.</p>
    </div>