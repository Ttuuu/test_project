<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Use Common Definitions Rather Than Hard Coded Values</h2>
<p>I agree with @pm100 about <code>NULL</code>, it is much more common to use <code>NULL</code> rather than 0x00. Very early C++ compilers also used <code>NULL</code> rather than <code>nullptr</code>.</p>
<p>Since <code>stdlib.h</code> is already included, the exit constants <code>EXIT_SUCCESS</code> and <code>EXIT_FAILURE</code> are availble, this would make the code more readable and maintainable.</p>
<p>Most modern C and C++ compilers will add a final <code>return 0;</code> to the code so the return in <code>main()</code> isn't strictly necessary.</p>
<h2>Prefer <code>size_t</code> When the Variable Can Be Used As an Index</h2>
<p>In main the variable <code>i</code> should be declared as <code>size_t</code> rather than <code>int</code>. If you compile -Wall you will find that the comparison between <code>i</code> and <code>self_readBuff-&gt;size</code> yields a type mismatch warning between <code>int</code> and <code>size_t</code>.</p>
<p>In the declaration of <code>N##t_getat(unsigned int idx, N##_t* _this)</code> the <code>unsigned int</code> should also be <code>size_t</code>.</p>
<h2>Prefer Local Variables Over Global Variables</h2>
<p>I would suggest a separate macro to define the variable of the proper type so that it can be used in a function rather than having a global variable.</p>
<p>In <code>main()</code> it would be better if <code>self_readBuff</code> was declared locally rather than as a static variable globally. The variable ``self_##N` is not used anywhere else globally.</p>
<h2>Only Code What is Necessary</h2>
<p>The header file <code>string.h</code> is not necessary and slows down compile time. The variable <code>s</code> in <code>main()</code> is never referenced. <code>int s = self_readBuff-&gt;size;</code></p>
<h2>Keep it Simple</h2>
<p>I would have defined each function as a separate macro and then included all of them in a single macro for ease of debugging and possible separate use. It will also make the code easier to maintain if each function can be maintained separately.</p>
    </div>