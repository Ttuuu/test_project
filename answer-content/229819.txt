<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here</p>

<pre><code>if min_coins_to_make[target] == float("inf"):
    return 0 
return min_coins_to_make[target]
</code></pre>

<p>you use the fact that <code>target</code> has the last value from a preceding (nested) loop, and that happens to be <code>n</code>. It would be more clear to use <code>n</code> directly instead:</p>

<pre><code>if min_coins_to_make[n] == float("inf"):
    return 0 
return min_coins_to_make[n]
</code></pre>

<p>Then note that the if-condition can never be true, so that you can remove that test: Every positive integer <span class="math-container">\$ n \$</span> can be written as
<span class="math-container">$$
n = \underbrace{1 + 1 + \ldots + 1}_{n \text{ terms}}
$$</span>
which makes it a sum of <span class="math-container">\$ n \$</span> perfect squares. (Actually every positive integer can be written as the sum of at most <em>four squares</em> according to <a href="https://en.wikipedia.org/wiki/Lagrange%27s_four-square_theorem" rel="nofollow noreferrer">Lagrange's four-square theorem</a>.)</p>

<p>This</p>

<pre><code>coins = []
for i in range(1, n+1):
    if i**2&gt;n:
        break 
    coins.append(i**2)
</code></pre>

<p>can be written as a list comprehension:</p>

<pre><code>coins = [i * i for i in range(1, int(math.sqrt(n)) + 1)]
</code></pre>
    </div>