<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>The data can only be an integer; having a void pointer on the listed data allows to have any type of data. ...</p>
</blockquote>

<p>I think the suggestion to move to <code>void*</code> is a very good one.  It's a great next 
step to take if you want to keep working on your codebase.  </p>

<blockquote>
  <p>... However, this change would make your search function unusable. </p>
</blockquote>

<p>To make the search function usable with <code>void*</code>, it makes the most sense to offload the comparison functionality to a consumer-supplied function.  This is how <a href="https://linux.die.net/man/3/bsearch" rel="nofollow noreferrer">posix's <code>bsearch</code></a> funcitonality works:  </p>

<pre><code>int (*compar)(const void *, const void *)
</code></pre>

<p>The man page explains that </p>

<blockquote>
  <p>The <code>compar</code> routine is expected to have two arguments which point to the key object and to an array member, in that order, and should return an integer less than, equal to, or greater than zero if the key object is found, respectively, to be less than, to match, or be greater than the array member</p>
</blockquote>

<p>The approach makes sense.  If you don't know the type of the objects in your list, you can't compare them, and this is something that the consumer will have to do for you.  Passing a function pointer is a pretty standard way to do so; <a href="https://linux.die.net/man/3/qsort" rel="nofollow noreferrer">qsort</a> works the same way.  </p>
    </div>