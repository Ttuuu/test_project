<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your main calculation revolves around adding integers to an <code>ArrayList</code> just to add them all up. Putting them in a list is an unnecessary step, you could sum them directly.</p>

<p>In my opinion the whole <code>String getBinary (int num, int len)</code> function and its usage makes the code much more confusing than it needs to be, adding a relatively large amount of tricky bug-prone code. Rather than building binary strings in somewhat mysterious way, or any other way, you could test the bits of the current mask (an integer) directly. The idiomatic way to test whether bit <code>j</code> of a <code>mask</code> is set is <code>(mask &amp; (1 &lt;&lt; j)) != 0</code>, there are some variants.</p>

<p>Putting that together, there is a large reduction in code:</p>

<pre><code>private static List&lt;Integer&gt; subSetSums (int[] arr) {
    List&lt;Integer&gt; sums = new ArrayList&lt;&gt;();
    int limit = 1 &lt;&lt; arr.length;

    for (int mask = 0; mask &lt; limit; mask++) {
        // sum up the values that correspond to bits
        // that are set in the mask
        int sum = 0;
        for (int j = 0; j &lt; arr.length; j++) {
            if ((mask &amp; (1 &lt;&lt; j)) != 0)
                sum += arr[j];
        }
        sums.add(sum);
    }

    Collections.sort(sums);
    return sums;
}
</code></pre>
    </div>