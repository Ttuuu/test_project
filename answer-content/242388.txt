<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few suggestions:</p>

<ul>
<li>Don't have everything be part of a class. In Swift, you can have free functions, just like in C. Remove the <code>class AverageRSSI: NSObject { ... }</code>.</li>
<li>Keep casing consistent. You have <code>calculateAccuracy</code> and <code>calculate_average</code>. The preferred casing in Swift is <code>camelCase</code>.</li>
<li>It's customary in Swift not to capitalize constant and function names. Everything that's not a class name should be <code>camelCase</code>.</li>
<li>Have more meaningful names. <code>calculateAccuracy</code> is good, <code>cmpfunc</code> is not. <code>rssi_array</code> could also be <code>rssi_values</code> or simply <code>rssi</code>.</li>
<li>Make both the function definition and the function call as clear as possible. For example, when you read <code>calculateAccuracy(_ rssi: Double, _ txPower: Int)</code>, it's clear that the first parameter is <code>rssi</code> and the second is <code>txPower</code>, but when you call it as <code>calculateAccuracy(1.0, 2)</code>, it's no longer clear. Keep the parameter names with <code>calculateAccuracy(rssi: Double, txPower: Int)</code> and call it as <code>calculateAccuracy(rssi: 1.0, txPower: 2)</code>.</li>
<li><code>getDistance</code> and <code>calculateAccuracy</code> return the magic value <code>-1</code> in case of error. In Swift it's better to throw an error detailing what the problem was, instead of returning an invalid value.</li>
<li>Since <code>rssi_array</code> and <code>sort_rssi</code> are arrays, you don't need to use <code>memcpy</code> to copy the values of one to another, you can simply assign the values with <code>sort_rssi = rssi_array</code>.</li>
<li>In Swift, you don't need to use the C <code>qsort()</code> function, since any <code>MutableCollection</code> has a <a href="https://developer.apple.com/documentation/swift/mutablecollection/2802575-sort" rel="nofollow noreferrer"><code>sort()</code></a> method.</li>
<li>Since <code>sort_rssi</code> is only used inside a function, it doesn't need to be file global, it can be a local variable.</li>
</ul>

<p>You could replace</p>

<pre class="lang-c prettyprint-override"><code>memcpy(sort_rssi, rssi_array, QUEUE_SIZE * sizeof(int));
qsort(sort_rssi, QUEUE_SIZE, sizeof(int), cmpfunc);
</code></pre>

<p>with:</p>

<pre class="lang-swift prettyprint-override"><code>var sortedRssi = rssiArray
sortedRssi.sort(by: &gt;)
</code></pre>

<p>See:</p>

<ul>
<li><a href="https://swift.org/documentation/api-design-guidelines/" rel="nofollow noreferrer">Swift API Design Guidelines</a> for a list of Swift coding guidelines.</li>
<li><a href="https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html" rel="nofollow noreferrer">Collection Types</a> for details about collections, including arrays.</li>
<li><a href="https://docs.swift.org/swift-book/LanguageGuide/ErrorHandling.html" rel="nofollow noreferrer">Error Handling</a> for details about how to create, throw and catch errors.</li>
</ul>
    </div>