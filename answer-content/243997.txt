<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Fields as functions from a defined data structure to a contained datum or sub-structure</h3>
<p>Elaborating a bit on this point, which I was too abstract about.</p>
<p>Hopefully it's intuitive that, technical details of any particular language/context aside, "fields", "attributes", "properties", etc are all kinda synonymous. We usually visualize objects like this as either a list of ordered pairs <span class="math-container">\$(\text{name}, \text{value})\$</span>, or as a table where each row is an object and the column-headers are the field-names. <em>That's fine and totally appropriate.</em></p>
<p>But there's another way of thinking about what a field is, which is reflected in the particular "property" implementation in some languages including Python. (It's also how everything works in Haskell.)<br>
<strong>A property of an object is a function <em>from objects of that type to some value which we think of as contained with those objects</em>.</strong></p>
<p>This is relevant to your task because all the "properties" you had of your <code>team_stats</code> items are still conceptually valid in a nested structure like I implemented. But now instead of</p>
<pre><code>PROPERTY("HomeBoxTouchesTotalPg")} := lambda team_stats: team_stats["HomeBoxTouchesTotalPg"]
</code></pre>
<p>you'll have</p>
<pre><code>PROPERTY("HomeBoxTouchesTotalPg") := lambda team_stats: team_stats.home.totals_per_game.box_touches
</code></pre>
<p>Writing them all out will be a bit of a chore. Sorry.</p>
<p>But then you can do</p>
<pre class="lang-py prettyprint-override"><code>def print_sample_stats(stats: TeamStats, *fields: str) -&gt; None:
    for field in fields:
        if field not in TeamStats.fields:
            raise NotImplementedError(field)
        print(f"{field}: {TeamStats.fields[field](stats)}")
</code></pre>
<p>Of course you'll have plenty of opportunities to make it more complicated than that if you like.</p>
    </div>