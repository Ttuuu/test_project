<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As others have already mentioned, <a href="https://mdn-mixmix.hashbase.io/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter.html" rel="nofollow noreferrer">Array.prototype.filter()</a> might be the simplest approach (or <a href="https://mdn-mixmix.hashbase.io/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce.html" rel="nofollow noreferrer">Array.prototype.reduce()</a> could also be used but would require more conditional logic). It would typically be slower than the nested <code>for</code> loops because it would be adding additional function calls, but for small data sets it typically wouldn't be noticeable. For example, I did a search on Google for "<em>jsperf filter nested loop</em>" and found <a href="https://jsperf.com/nested-loop-performance-on-large-data" rel="nofollow noreferrer">this jsPerf test</a>.</p>

<p>Using <a href="https://mdn-mixmix.hashbase.io/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter.html" rel="nofollow noreferrer">Array.prototype.filter()</a> on <code>A2</code>, pass a callback function that returns <code>true</code> when the value at property <code>value</code> is included in <code>A1</code> by checking <a href="https://mdn-mixmix.hashbase.io/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf.html" rel="nofollow noreferrer">A1.indexOf()</a> for a value greater than <code>-1</code>.</p>

<pre><code>var result = A2.filter(function(o) {
    return A1.indexOf(o.value) &gt; -1;
});
</code></pre>

<p>This can be simplified to a single line using an ES-6 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions" rel="nofollow noreferrer">arrow function</a> and <a href="https://mdn-mixmix.hashbase.io/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes.html" rel="nofollow noreferrer">Array.prototype.includes()</a> (Not supported by IE):</p>

<pre><code>var result = A2.filter(o =&gt; A1.includes(o.value));
</code></pre>

<p>If you wanted to use <a href="http://underscorejs.org/" rel="nofollow noreferrer">Underscore.js</a>, <a href="http://underscorejs.org/#filter" rel="nofollow noreferrer">_.filter()</a> and <a href="http://underscorejs.org/#includes" rel="nofollow noreferrer">_.includes()</a> could be used to filter out any object in <code>A2</code> without a value for the <em>value</em> property contained in <code>A1</code>. Expand the snippet below for a demonstration.</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var A1  = ["1","2","3","4"];

var A2 = [
    {label:"one", value:"1"},
    {label:"two", value:"2"},
    {label:"three", value:"3"},
    {label:"four", value:"4"},
    {label:"five", value:"5"},
    {label:"six", value:"6"},
];
var result = _.filter(A2, function(o) { return _.includes(A1, o.value);});
console.log('result', result);</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"&gt;&lt;/script&gt;</code></pre>
</div>
</div>


<p>There is an Underscore helper <a href="http://underscorejs.org/#pluck" rel="nofollow noreferrer">_.pluck()</a> but that is used to collect a value from each item in a collection at a given property (similar to <a href="https://mdn-mixmix.hashbase.io/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map.html" rel="nofollow noreferrer">Array.prototype.map()</a>.</p>

<p><a href="https://lodash.com/" rel="nofollow noreferrer">Lodash</a> also has the same helpers: <a href="https://lodash.com/docs#filter" rel="nofollow noreferrer">_.filter()</a> and <a href="https://lodash.com/docs#includes" rel="nofollow noreferrer">_.includes()</a>.</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var A1  = ["1","2","3","4"];

var A2 = [
    {label:"one", value:"1"},
    {label:"two", value:"2"},
    {label:"three", value:"3"},
    {label:"four", value:"4"},
    {label:"five", value:"5"},
    {label:"six", value:"6"},
];
var result = _.filter(A2, function(o) { return _.includes(A1, o.value);});
console.log('result', result);</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js"&gt;&lt;/script&gt;</code></pre>
</div>
</div>


<p>Though some question whether libraries like lodash and underscore are really needed anymore. For a discussion on that, check out <a href="https://derickbailey.com/2016/09/12/does-es6-mean-the-end-of-underscore-lodash/" rel="nofollow noreferrer">this article</a>. </p>
    </div>