<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Indentation</h1>

<p>Use four (4) spaces for indentation, not eight (8).</p>

<h1>Checking List Existence</h1>

<p>This</p>

<pre><code>if len(list1) == 0:
    pass
else:
</code></pre>

<p>should be this (Thanks to @Reinderien for pointing this out)</p>

<pre><code>if list1:
    ...
</code></pre>

<h1>Parameter Spacing</h1>

<p>There should be spaces between parameters and the commas. For example, from this</p>

<pre><code>def recursive_finder(p1,list1,masterdict,d,ans):
</code></pre>

<p>to this</p>

<pre><code>def recursive_finder(p1, list1, masterdict, d, ans):
</code></pre>

<h1>Type Hints</h1>

<p>This allows you to show what functions are accepting/returning. These are added to function headers. For example, from this</p>

<pre><code>def find_groups(list1, list2):
</code></pre>

<p>to this</p>

<pre><code>def find_groups(list1: list, list2: list) -&gt; list:
</code></pre>

<h1>String Formatting</h1>

<p>Doing this</p>

<pre><code>p1 = c1[0]+'_'+c2[0]
p2 = c1[1]+'_'+c2[1]
</code></pre>

<p>can be simplified using an <code>f""</code> stringike so</p>

<pre><code>p1 = f"{c1[0]}_{c2[0]}"
p2 = f"{c1[1]}_{c2[1]}"
</code></pre>

<h1>Operator Spacing</h1>

<p>This</p>

<pre><code>dis += math.pow((point2[0]-point1[0]),2)
dis += math.pow((point2[1]-point1[1]),2)
dis += math.pow((point2[2]-point1[2]),2)
</code></pre>

<p>should be spaced out like this</p>

<pre><code>dis += math.pow((point2[0] - point1[0]),2)
dis += math.pow((point2[1] - point1[1]),2)
dis += math.pow((point2[2] - point1[2]),2)
</code></pre>

<h1>Simplification</h1>

<p>The above can even be reduced to one statement</p>

<pre><code>dis = math.pow((point2[0] - point1[0]), 2) + \
      math.pow((point2[1] - point1[1]), 2) + \
      math.pow((point2[2] - point1[2]), 2)
</code></pre>

<p>The <code>\</code> allows the addition to span multiple lines, increasing readability.</p>

<p>Your <code>calculate_distance</code> function can now be reduced to one statement:</p>

<pre><code>def calculate_distance(point1: list, point2: list) -&gt; float:
    """
    Returns the distance between the two points
    """
    return math.sqrt(
        math.pow((point2[0] - point1[0]), 2) + \
        math.pow((point2[1] - point1[1]), 2) + \
        math.pow((point2[2] - point1[2]), 2)
    )
</code></pre>
    </div>