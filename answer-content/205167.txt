<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Huge bug in 3.5.2</strong></p>

<p>Entering done does nothing in Python 3.5.2, use <code>==</code> instead of <code>is</code> to fix this. In general <code>is</code> asks if two objects are the same object not if the contents are the same, this can give results different from what you expect for lists, so I suggest using <code>==</code> overall. </p>

<p><a href="https://dbader.org/blog/difference-between-is-and-equals-in-python" rel="nofollow noreferrer">https://dbader.org/blog/difference-between-is-and-equals-in-python</a></p>

<p><strong>Code repetition / Extensibility</strong></p>

<p>A famous problem is code extensibility, it is quite inconvenient to add another item to the menu, also if you take a look at this list of <code>if</code>s</p>

<pre><code>  if Item is "A":
    total += the_burger;
  elif Item is "B":
    total += french_fries;
  elif Item is "C":
    total += currie_sauce;
  elif Item is "D":
    total += napkins_with_chocolates;
  elif Item is "E":
    total += juice_box;
  elif Item is "F":
</code></pre>

<p>you will notice that the only thing that happens is adding the cost to the total each time so there is a lot of repetition.</p>

<p>So let me explain a better solution.</p>

<p>I will use a <code>list</code> of <code>tuples</code> (pairs) of the form (food, price).</p>

<p>Than both the printing and the accounting of the money can be done from this data structure, you will only need to add another line inside and both printing and accounting will be generated automatically.</p>

<p>I left out the proper printing alignement as an exercise for the reader, resource: <a href="https://stackoverflow.com/questions/5676646/how-can-i-fill-out-a-python-string-with-spaces">https://stackoverflow.com/questions/5676646/how-can-i-fill-out-a-python-string-with-spaces</a></p>

<p>Code with <strong>didactic comments</strong>: (real code would not be commented so much)</p>

<pre><code>import string
ALPHABET = string.ascii_uppercase

FOOD_WITH_PRICES = [
    ("Apple", 0.5),
    ("Ham",   4),
    ("Bread", 1)
]

# for x in list: is standard syntax to iterate over a list, x becomes progressively equal to each element
# enumerate adds the index to each element
def print_stilish_menu(food_with_prices):
    print("""
+-------------------------------------------+
| The Restaurant at the End of the Universe |
+---------------------------------+---------+""")
    for (index, (food, price)) in enumerate(food_with_prices):
        print("""\
| {letter}\tThe "{food}"      | $ {price}  |
+---------------------------------+---------+
""".format(letter=ALPHABET[index], food=food, price=price))

# list[:n] means the first n elements of a list
# for more info look for `python list slice`
print_stilish_menu(FOOD_WITH_PRICES)
total = 0
while(True):
    print("Total:", total);
    x = input("Select a letter or 'done': ")
    if x in ALPHABET[:len(FOOD_WITH_PRICES)]:
        total += FOOD_WITH_PRICES[ALPHABET.index(x)][1]
    elif x == 'done':
        break
    # Some kind of message if the input is invalid
    # is good practice
    else:
        print("Invalid Input")
print("You spent {}".format(total))
</code></pre>
    </div>