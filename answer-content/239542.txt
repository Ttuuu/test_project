<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Duplicated statements in an if-block</h2>

<pre><code>    if find_name.startswith('https'):
        self._search_name = urllib.parse.urlparse(find_name).path.split('/')[1]
        return self._search_name
    else:
        return self._search_name
</code></pre>

<p>should just be</p>

<pre><code>    if find_name.startswith('https'):
        self._search_name = urllib.parse.urlparse(find_name).path.split('/')[1]
    return self._search_name
</code></pre>

<h2>Type hint difference</h2>

<p>You say this has no return:</p>

<pre><code>def login(self) -&gt; None:
</code></pre>

<p>But then you do one anyway?</p>

<pre><code>    return self.scroll_down()
</code></pre>

<p>This is repeated in <code>scroll_down()</code> itself.</p>

<h2>List comprehensions as loops</h2>

<p>I find this:</p>

<pre><code>    with ThreadPoolExecutor(max_workers=8) as executor:
        [executor.submit(self.fetch_url, link) for link in new_links]
</code></pre>

<p>to be unnecessary. It's more legible to have a simple <code>for</code>-loop than to construct a list and throw it away.</p>

<h2>Method order</h2>

<p>For sane legibility, it's better to put <code>__exit__</code> directly after <code>__enter__</code> in the class.</p>

<h2><code>content_of_url</code></h2>

<p>This method:</p>

<pre><code>@staticmethod
def content_of_url(req: [requests.sessions.Session, requests.models.Response]) -&gt; bytes:
    """
    :param req:  requests.sessions.Session, requests.models.Response
    :return: Content of Url
    """
    return req.content
</code></pre>

<p>doesn't do anything useful enough to deserve being a dedicated method. Even if it did, the type hint for <code>req</code> seems wrong; it should just be a <code>Response</code>. I'm not sure why the <code>Session</code> is mentioned.</p>

<h2>Local variables</h2>

<pre><code>USERNAME = ''
PASSWORD = ''
NAME = ''
FOLDER = Path('')
</code></pre>

<p>should be lowercase, now that they're in function scope.</p>
    </div>