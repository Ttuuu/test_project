<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your algorithm is indeed n^3, but you can do it in linear time. <a href="https://ideone.com/Ke3q5o" rel="nofollow noreferrer">https://ideone.com/Ke3q5o</a></p>

<pre><code>A = [3,2,5,4,4,4,4,2,4,4]

def findLongestContinuousSection(A):
    if len(A) == 0:
        return
    longestStart = 0
    longestStop = 0
    longestLength = 0
    longestVal = 0
    curStart = 0
    curStop = 0
    curLength = 1
    curVal = A[0]
    for k in range(1,len(A)-1):
        if curVal != A[k]: # record cur as longest
            longestVal = curVal
            longestStart = curStart
            longestStop = curStop
            longestLength = curLength
            curStart = k
            curStop = k
            curLength = 1
            curVal = A[k]
        else: # continue to build current streak
            curStop = k
            curLength += 1
    return (longestStart, longestStop, longestLength, longestVal)

print findLongestContinuousSection(A)
</code></pre>
    </div>