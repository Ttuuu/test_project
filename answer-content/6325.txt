<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>import sys
filepath = sys.argv[1]
f = open(filepath)
</code></pre>

<p>I recommend not using one letter variable names (usually). They make the code hard to read.</p>

<pre><code>wholealphabet = ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r',
                 's','t','u','v','w','x','y','z')
</code></pre>

<p>I'd have made this a string</p>

<pre><code>wholealphabet = "abcdefghijklmnopqrstuvwxyz"
</code></pre>

<p>Shorter and works pretty much the same</p>

<pre><code>for line in f:
    sortedletters = list(set(line.lower()))
</code></pre>

<p>Yeah, that's not sorted. </p>

<pre><code>    i = 0
    while i != len(sortedletters):
        if wholealphabet.count(sortedletters[i]) != 0: 
</code></pre>

<p>This is the same as <code>sortedletters[i] in wholealphabet</code>, which is clearer.</p>

<pre><code>            i = i + 1
        else:
            sortedletters.pop(i)
</code></pre>

<p>Modifying a list while iterating over it is bound to be confusing. Its hard to see what you are doing here. The best way in python is usually to create a new list. Like this:</p>

<pre><code>valid_letters = []
for letter in sortedletters:
    if letter in wholealphabet:
        valid_letters.append(letter)
</code></pre>

<p>See how much easier it is to see the result of that? In fact, you can even do it more compactly:</p>

<pre><code>valid_letters = [letter for letter in sortedletters if letter in wholealphabet]


    missingletters = ""
</code></pre>

<p>Adding to a string can be expensive, I recommend using a list</p>

<pre><code>    for letter in wholealphabet:
        if sortedletters.count(letter) == 0:
            missingletters +=letter
</code></pre>

<p>Again, you can simplify this using a list comphrehension</p>

<pre><code>missingletters = [letter for letter in wholealphabet if letter not in sortedletters]


    if len(missingletters) == 0:
        print("NULL")
    else:
        print(missingletters)
</code></pre>

<p>As kojrio points out, if you use sets in python you can implement this very easily. His advice to use a with statement is also good. </p>
    </div>