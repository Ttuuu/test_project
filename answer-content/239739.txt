<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Adding to what @dariosicily mentioned already:</p>

<h2>Performance</h2>

<p>If you just need to find out a part-of-speech of each word and do not need to <a href="https://stanfordnlp.github.io/CoreNLP/parse.html" rel="nofollow noreferrer">build a phrase-structure tree of sentences</a>, you need only to specify 3 annotations (without <code>parse</code>):</p>

<p><code>props.setProperty("annotators", "tokenize,ssplit,pos");</code> </p>

<p>I assume this can give you a significant boost in performance.</p>

<p>Since you are not doing <a href="https://stanfordnlp.github.io/CoreNLP/coref.html" rel="nofollow noreferrer">coreference resolution</a>, you don't need this line either:</p>

<blockquote>
<pre><code>props.setProperty("coref.algorithm", "neural");
</code></pre>
</blockquote>

<h2>Incorrect if-block</h2>

<blockquote>
<pre><code>if (tag.contains("VB") == true|| tag.contains("JJ") == true || tag.contains("NN") == true);{
            String pattern ="[\\p{Punct}&amp;&amp;[^@',&amp;]]";
...
}
</code></pre>
</blockquote>

<p>You should remove the semicolon before the curly bracket, since currently, it terminates the if-block (and makes it empty), so the instructions inside the curly brackets will always be executed! The code above is now equal to the following:</p>

<pre><code>if (tag.contains("VB") == true|| tag.contains("JJ") == true || tag.contains("NN") == true){
    /* Doing nothing */
}

{
    String pattern ="[\\p{Punct}&amp;&amp;[^@',&amp;]]";
...
}

</code></pre>
    </div>