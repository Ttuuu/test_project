<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Instead of <code>for i in range(len(randomWord)):</code> and using indexes, iterate over the items directly:</p>

<pre><code>for letter in randomWord:
    if letter not in correctLetters:
        foundAllLetters = False
        break
</code></pre>

<p>And if you need the item and the index, <code>enumerate</code> will help you:</p>

<pre><code>for i, letter in enumerate(secretWord):
    if letter in correctLetters:
        blanks[i] = letter
</code></pre>

<hr>

<p>In the line <code>if gameDone == True:</code> you can omit the <code>True</code>, so just write <code>if gameDone:</code>.</p>

<hr>

<p>If you have to write such long strings, you can use multiline strings (with triple quotes) to keep the line length short. Note that this will add new line characters on the right and white space on the left, if the code is indented.</p>

<pre><code>words = """ant baboon badger bat bear beaver camel cat clam cobra
cougar coyote crow deer dog donkey duck eagle ferret fox frog goat
goose hawk lion lizard llama mole monkey moose mouse mule newt otter
owl panda parrot pigeon python rabbit ram rat raven rhino salmon seal
shark sheep skunk sloth snake spider stork swan tiger toad trout
turkey turtle weasel whale wolf wombat zebra""".split()
</code></pre>

<p>You can also write it like so (strings are concatenated automatically):</p>

<pre><code>words = (
    'ant baboon badger bat bear beaver camel cat clam cobra '
    'cougar coyote crow deer dog donkey duck eagle ferret fox '
    'frog goat'.split())
</code></pre>

<hr>

<p>Add <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer">docstrings</a> to your functions, which explain what they do and how they should be used.</p>

<hr>

<p>Especially the <code>wordLength</code> function looks a bit complicated and should be simplified. It seems its purpose is to either return long words for tier 1 and short words for tier 2.</p>

<p>I suggest to filter the <code>word</code> list (with <a href="http://treyhunner.com/2015/12/python-list-comprehensions-now-in-color/" rel="nofollow noreferrer">list comprehensions</a>) and create two new lists consisting of the long and the short words:</p>

<pre><code>short_words = [word for word in words if len(word) &lt; 5]
long_words = [word for word in words if len(word) &gt;= 5]
</code></pre>

<p>Now you can just use <code>random.choice</code> to pick a long or short word depending on the <code>tier</code> value.</p>

<pre><code>def pick_word(tier):
    if tier == '1':
        return random.choice(long_words)
    else:
        return random.choice(short_words)
</code></pre>
    </div>