<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Not a full review, just a couple of initial thoughts:</p>

<blockquote>
  <p>Is "Main" acceptable name for a class? Or should it be "Game"/"App" or something completely different?</p>
</blockquote>

<p>I would say "Main" is acceptable if it doesn't to anything except start the app; it doesn't contain any app logic itself. I think for your game this is pretty much true, but I would probably extract the init stuff into a MainGUI or ContainerGUI class (because it will most likely grow soon, eg by adding a menu, customizable view, etc).</p>

<blockquote>
  <p>What about my comments?</p>
</blockquote>

<p>Your JavaDoc comments seem mostly good to me, but your inline comments are often not necessary.</p>

<ul>
<li><code>Check wherever it's valid</code> is a bit unclear. What is <code>it</code>? Where is <code>it</code> <code>valid</code>? I think <code>bounds check</code> would be clearer, but then it becomes obvious that the comment isn't actually needed.</li>
<li><code>@param black</code> for <code>State state</code> is wrong (I'm assuming you had it as a boolean first?)</li>
<li><code>Switch current player</code> It's often not a good idea to write comments that just repeat the code. If you think your code is unclear/you want more structure, it's often better to create a method for it. </li>
<li>what's a liberty? A comment for eg <code>getLiberties</code> about this would be nice.</li>
<li><code>join(Chain chain)</code> could use a short comment</li>
<li><code>Row and col are need to remove (set to null) this Stone from Grid</code> this could be clearer.</li>
</ul>

<blockquote>
  <p>I don't think it's expandable (enough).</p>
</blockquote>

<p>I think it looks pretty good. There are a couple of things I would do differently (eg separate view and controller, remove the small parts of game logic - switching players - that are in the view/controller, and some of the stuff in misc), but all in all it has a clear structure.</p>

<p><strong>Misc</strong></p>

<ul>
<li><code>Chain(State state)</code>: <code>state</code> is actually never used.</li>
<li>don't shorten variable names, it makes code harder to read. <code>N_OF_TILES</code> -&gt; <code>NUMBER_OF_TILES</code>/<code>TILE_COUNT</code></li>
<li>why are all fields of <code>Stone</code> public instead of having getters/setter?</li>
<li><code>State</code> is a very generic term. <code>Player</code> or <code>PlayerColor</code>/<code>StoneColor</code> may make more sense.</li>
<li>I would extract the <code>MouseAdapter</code> to it's own class, in case it gets more complicated later on.</li>
<li>you could avoid the <code>state != null</code> check by creating a <code>None</code> value for <code>State</code>, I think this would result in nicer code. </li>
</ul>
    </div>