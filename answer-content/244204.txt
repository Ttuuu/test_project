<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some quick remarks:</p>
<ul>
<li><p>There are almost 90 white-space characters before I can see the arguments to <code>GetPaginatedSearchAsync</code>. In such cases, move the parameters to the next line.</p>
</li>
<li><p>Consider renaming <code>PaginatedDataResult</code> and <code>ProductSearchResult</code> (is the "Result" part of the name necessary?), and even <code>GetPaginatedSearchAsync</code> (is there a non-async method? if not, then why add this to the method name?).</p>
</li>
<li><p><code>GetPaginatedSearchAsync</code> has six parameters: that is bordering on the limit, and I'd advise you to pass a custom class instead. You could at least group the pagination-related parameters into their own class.</p>
</li>
<li><p>Do not pointlessly abbreviate names. I get what <code>sortDesc</code> means but it still is jarring to read.</p>
</li>
<li><p>Judging by <code>//I have removed few parameters from the method and also few if conditions for brevity</code> it seems you realized the amount of parameters grew too large and impacted readability. Consider moving all of the filter-related parameters into a class of their own and pass that class instead of an ever-growing and thus hard to maintain list.</p>
</li>
<li><p>IMHO you should avoid pointlessly detailed variable names like <code>filteredQueryOfProjectedEntity</code> and <code>filteredListOfProjectedEntity</code>, and even <code>queryWithProjection</code> (why assign <code>query</code> only to immediately apply <code>Select</code> to it on the next line and then never use it again? why not combine these two lines and simply use <code>query</code> instead of <code>queryWithProjection</code>?). These make your code hard to read. Instead, I'd expect these names to convey more of a concept.</p>
</li>
</ul>
    </div>