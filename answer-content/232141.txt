<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Youâ€™ll often hear Haskel programmers talk about making invalid states impossible to express. The Rust community has taken this to heart and developed <a href="https://hoverbear.org/blog/rust-state-machine-pattern/" rel="noreferrer">a state machine pattern that uses structs and traits rather than enums</a>.</p>

<p>This pattern has many benefits, but to quote some of the main ones from the article:</p>

<blockquote>
  <ul>
  <li>Transition errors are caught at compile time! For example you can't
  even create a Filling state accidentally without first starting with a
  Waiting state. (You could on purpose, but this is beside the matter.)</li>
  <li>Transition enforcement happens everywhere.</li>
  </ul>
</blockquote>
    </div>