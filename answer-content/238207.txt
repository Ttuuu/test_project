<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Usability</h1>
<p>In your github mainclass, you're asking the user:</p>
<blockquote>
<pre><code>System.out.println("Enter command type");
</code></pre>
</blockquote>
<p>Then expecting them to enter a number.  Consider adding some kind of menu so that people that haven't used the application before know what number 3 does before selecting it and getting the message 'UnRegistered user wants to enter a website'.</p>
<h1>Usage</h1>
<p>You haven't specified how you're expecting your URL shortener to be used.  To me, the current setup doesn't really make sense.  The reason I shorten a URL is so that I can share it with other people, so I'm expecting two main uses:</p>
<ol>
<li>Create short URL from real URL, as a registered/unregistered user</li>
<li>Get real URL from short URL</li>
</ol>
<p>The way you've coded it, it looks like as a registered user, only I can access my shortened URL mappings.  This seems flawed in a practical usage sense.</p>
<h1>Time To Live</h1>
<p>You've got two public methods on the class</p>
<blockquote>
<pre><code>public void addNewEntryForUser(String url,String userId) {

public void addNewEntryForUserWithTTL(String url,String userId,int timeToLive) {
</code></pre>
</blockquote>
<p>The first simply calls the second passing in the default TTL.  According to your requirements, only registered users should be able to set a TTL, however the class supports anybody setting a TTL, as long as they call the method with the time to live parameter.  This <em>might</em> be OK, but it really depends on who owns the logic to use a default TTL for certain users.  At the moment that's not clear.  I'd also consider overloading these methods as <code>addNewEntryForUser</code>, I don't think having the <code>WithTTL</code> in the method name really gives you anything over the extra parameter.</p>
<h1>Time to Die</h1>
<p>There doesn't appear to be any expiry logic - Not really true, but it's not obvious.  Rather than calling the method <code>isValid</code>, something like <code>isExpired</code>, <code>isTTLExpired</code> would make it more obvious that the expiration is triggered by this method.</p>
<h1>Responsibilities</h1>
<p>It feels like your shortener is doing too much.  It could just shorten URLs.  However, it's also responsible for storing a list of registered users, the list of all shortened URLs by user, setting TTL.  At a minimum, I'd extract the registered user list from the class and provide some way to get it via the classes constructor (either a repository, or even just a supplied list) to give some separation.  Hard coded user Id's really shouldn't be in this class.</p>
    </div>