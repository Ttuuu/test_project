<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's two things that I noticed. This first being a potential change in structure in <code>find</code>. You could handle the else branch instead of (effectively) setting a flag indicating whether you used a <code>break</code>. This keeps similar logic together, but at the cost of introducing another exit point to your function, which can be considered bad in some styles.</p>

<pre><code>private Node find(int key){

    Node node = root, prev = null;
    while (node != null){
        prev = node;
        if(node.k == key)
            this.root = node;
            return splay(node);
        else if(key &lt; node.k)
            node = node.l;
        else
            node = node.r;
    }

    if(prev != null) this.root = prev;
    return splay(prev);
}
</code></pre>

<p>The other potential change I want to point out is in <code>splay</code>. You have some inconsistency in your <code>if</code> nesting. You should probably stick to all <code>else if</code>s, it makes it easier to draw comparisons between the 4 cases, and reduces unnecessary indentation. You should also consider wrapping the two particularly long conditionals, so that you can control where they wrap if they are opened on a 80 character-wide terminal, and can abuse the symmetry within each conditional to help expose any copy/paste errors.</p>

<pre><code>private Node splay(Node node){

    if(node == null)
        return null;

    while (node.p != null){
        Node parent = node.p;
        Node gparent = parent.p;
        if(gparent == null){
            rotate(parent, node);
        }else if(gparent.l != null &amp;&amp; gparent.l.k == parent.k
               &amp;&amp; parent.l != null &amp;&amp;  parent.l.k == node.k){
            rotate(gparent, parent);
            rotate(parent, node);
        }else if(gparent.r != null &amp;&amp; gparent.r.k == parent.k
               &amp;&amp; parent.r != null &amp;&amp;  parent.r.k == node.k){
            rotate(gparent, parent);
            rotate(parent, node);
        }else{
            rotate(parent, node);
            rotate(gparent, node);
        }
    }

    return node;
}
</code></pre>
    </div>