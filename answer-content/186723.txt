<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One source of performance degradation is frequent memory allocations.  In your case, the <code>StringBuilder</code> will allocate space for every line in your file, and may allocate additional space (along with a data copy) for longer lines.</p>

<p>You can eliminate all of that by reusing the <code>StringBuilder</code> object.  At the start of <code>BuildClearString</code>, call the clear method on it (<code>sb.Clear();</code> or <code>sb.Length = 0;</code>).  Follow that up by a capacity check.</p>

<pre><code>if (sb.Capacity &lt; line.Length)
    sb.Capacity = line.Length;
</code></pre>

<p>By changing the capacity you ensure that you have a buffer big enough to hold all the characters you will be adding, so you won't incur any memory allocations when processing a line.  By reusing it, you keep the existing allocated memory, thus avoiding any allocations for later lines unless the line is longer than any you've already encountered.  You can also set an initial capacity on the <code>StringBuilder</code> object.</p>
    </div>