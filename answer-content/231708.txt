<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The reason why you have to search in the way you currently are is because your redux store is so deeply nested. Flatten it and it will make things a lot easier. Have all text inputs, regardless of which form or section it belongs to, in a data structure with its own unique <code>id</code>.</p>

<p>The <code>textfield</code> doesn't need to "know" which form or section it belongs to. You make that the job of another aspect of your store. I prefer JavaScript <code>Map</code>s, but you are more than welcome to use objects.</p>

<p>Create keys dedicated to keeping track of which sections contain which form, and what textfields belong to which section.</p>

<p>When you need to access inputs, all you need is to grab the <code>id</code> of the textfield directly</p>

<p>Something along the lines of this. Model only needs to know the id. Not the object nesting structure.</p>

<pre><code>{

forms: new Map(
    [
        'form1',
        ['section1', 'section2' //...]
    ]
)

fields: new Map(
    [
        'section1',
        ['textInput', 'otherTextInput']
    ]
)

textInputs: new Map(
    [
        'textInput',
        {
            id: 'textInput',
            name: 'Name',
            type: 'text',
            validations: [
              {
                type: 'required',
                message: 'This field is required!'
              }
            ]
        }
    ],
    [
        'otherTextInput',
        {
            id: 'otherTextInput',
            name: 'Name',
            type: 'text',
            validations: [
              {
                type: 'required',
                message: 'This field is required!'
              }
            ]
        }
    ]
)

model: {
    path: 'textInput',
    value: 'Some value',
    isTouched: false,
    activeErrorState: {
      hasError: false,
      message: ''
    }
  }
}
<span class="math-container">```</span>
</code></pre>
    </div>