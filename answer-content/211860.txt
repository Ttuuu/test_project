<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your main.js does not have a direct dependency on Animal class, so much there is no reason to import it there.  In fact, from standpoint of minimizing browser calls to include files, it might make better sense to keep all classes in a related hierarchy together in a single file. So, I would probably have Animal, Human, Cat and Dog in the same file unless the was a compelling reason to split them - like Human was used on every page while Cat an Dog were only used sparingly in the site.</p>

<p>Generally, it is a good idea to be consistent about what sort of “side effects” a piece of code (class) makes.  I know this is just an example, but it seems odd for these classes to log out the results of the speak() methods, when it really is the caller that should determine what happens with the result of the method call (logging it, updating Page with it, etc.)</p>

<p>Main.js seems a little odd with regards to why you are exporting the updateScreen function. This function doesn’t really do anything different after the first time it is executed so not sure why it is exported as a function. Also, this module creates the side effect off all of the instantiated objects speaking upon inclusion of the module.  This would happen even if the updateScreen function was never called. Again this seems like odd behavior to be happening upon import.</p>

<p>In Human class, is date of birth a property specific only to humans, or should this exist on Animal class.  You should consider passing and setting a proper date object for this property.  Should age be a property on the object?  This is able to be determined in the constructor, right? It seems odd to me to have getter method for this “property” and not the others. In the age getter, there is reference to “now” variable that is undefined and you are further trying to perform subtraction using dob string value that has not been converted to proper Date object.  Use Dates here for this math.</p>

<p>In Dog class to have especially questionable side effect in the speak method in that you have hard coded a reference to a div to be updated.  This class should not need to understand Dom at all. The way it is now limits reuse of this class because it is tightly coupled to the Dom via this logic which has nothing to do with a dog at all.</p>
    </div>