<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you seem to want code golf over readable code this may not be the answer you want. All the suggestions I make are things I would prefer, but I don't think it's that uncommon for others to disagree. The outcome either way is still pretty ugly.</p>

<ul>
<li>Your code isn't PEP 8 compliant, and is generally pretty hard to read.</li>
<li><p>Your one-line docstrings are quite poor, docstring wise. Contrast with:</p>

<blockquote>
<pre><code>"""Compress Brainfuck code to TinyBF"""
</code></pre>
</blockquote></li>
<li><p>Use <code>str.maketrans</code> rather than manually make the translation table.</p>

<pre><code>COMPRESS_TABLE = str.maketrans({'&gt;': '2', '&lt;': '3', '+': '4', '-': '5', '.': '6', ',': '7', '[': '8', ']': '9'})
</code></pre>

<p>Alturnately you can define both from a common string.</p>

<pre><code>_COMPRESS_STR = '&gt;2 &lt;3 +4 -5 .6 ,7 [8 ]9'
COMPRESS_TABLE = str.maketrans(dict(_COMPRESS_STR.split()))
DECOMPRESS_TABLE = str.maketrans(dict(_COMPRESS_STR[::-1].split()))
</code></pre></li>
<li>I would prefer <code>itertools.zip_longest</code> over manually zipping and justifying.</li>
<li>You can split <code>decompress</code> over multiple lines to make the code more readable.</li>
</ul>

<pre><code>import itertools

_COMPRESS_STR = '&gt;2 &lt;3 +4 -5 .6 ,7 [8 ]9'
COMPRESS_TABLE = str.maketrans(dict(_COMPRESS_STR.split()))
DECOMPRESS_TABLE = str.maketrans(dict(_COMPRESS_STR[::-1].split()))


def compress(code: str) -&gt; str:
    """Compress Brainfuck code into TinyBF"""
    return "".join(
        chr(int(a + b))
        for a, b in itertools.zip_longest(
            *2*[iter(code.translate(COMPRESS_TABLE))],
            fillvalue="0",
        )
    )


def decompress(code: str) -&gt; str:
    """Decompress TinyBF into Brainfuck"""
    return (
        "".join(str(ord(c)) for c in code)
            .translate(DECOMPRESS_TABLE)
            .rstrip("0")
    )
</code></pre>
    </div>