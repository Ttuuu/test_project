<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Good work! I would only like to give you one piece of advice. I see this line in you code:</p>

<pre><code>typedef std::vector&lt;double&gt; tuple;
</code></pre>

<p>I don't know if you are aware of this or not, but there is actually a data structure in the C++ standard library called <a href="https://en.cppreference.com/w/cpp/utility/tuple" rel="nofollow noreferrer"><code>std::tuple</code></a>. Click on the text for more information about it. I see that you did not include the <code>std::tuple</code>, which is good. You also fully qualified all standard C++ library names with <code>std::</code> instead of <code>using namespace std</code>, which is also very good.</p>

<p>Just it is generally frowned upon in the C++ programming community to name your own variables and/or data types with the same name as names defined in the C++ standard library. You could have some name collisions and hidden bugs! If this is just your own project, of course you can do whatever you want. But keep in mind that if you are working on a project with multiple programmers at a large company, someone else might use your tuple intending to use <code>std::tuple</code> or vice versa. In large source files, such small one line declarations can easily be missed if you are scrolling through the code editor very fast. Someone can unintentionally make the mistake. Or someone who does not like you might put <code>using std::tuple;</code> somewhere intentionally to make your code fail. So it is best to avoid name collisions. There is a kind of philosophy called defensive programming. People tend to do things by their habits. If they are used to one kind of programming practice in their personal projects, they will do the same things at their job. Strive to work how you would work at your job. Think about what other people will think when they have to manage your code. Good luck!</p>
    </div>