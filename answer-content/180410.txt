<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I am unsure if this is the correct way to do this (set nonces on each get)</p>
</blockquote>

<p><a href="https://developers.google.com/web/fundamentals/security/csp/#if_you_absolutely_must_use_it" rel="nofollow noreferrer">Yes, it is</a></p>

<blockquote>
  <p>Remember that nonces must be regenerated for every page request and they must be unguessable.</p>
</blockquote>

<p>In terms of best practises, couple of things I'd recommend:</p>

<ul>
<li>Move your <code>nonce</code> manipulation into it's own middleware</li>
<li>Cache your page content, don't read it from disk <em>every</em> time</li>
</ul>

<p>The end result would look something like:</p>

<p><strong>csp.js</strong></p>

<pre><code>const path = require('path');
const fs = require('fs');

const cache = new Map();

const getHtml = path =&gt; new Promise((resolve, reject) =&gt;
  fs.readFile(path, 'utf-8', (err, contents) =&gt; {
    if (err) return reject(err);

    cache.set(path, contents);
    return resolve(contents);
  }));

const csp = page =&gt; async (req, res, next) =&gt; {
  const pagePath = path.join(dirViews, page);
  let html = cache.get(pagePath);
  if (!html) {
    html = await getHtml(pagePath);
  }
  html = html.replace(/&lt;script/g, `&lt;script nonce="${nonce1}"`)
    .replace(/&lt;style/g, `&lt;style nonce="${nonce1}"`);
  res.send(newHTML);
}

export default csp;
</code></pre>

<p><strong>app.js</strong></p>

<pre><code>app.get('/', limiter.middleware(), csp('index.html'))
</code></pre>
    </div>