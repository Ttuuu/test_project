<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>QueryParser</h3>
<p>Right now your query parser has two responsibilities. It parses the query (hence its name), but it also contains the result of the parse, which is kind of unintuitive and violates the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">Single Responsibility Principle</a>.</p>
<p>I'd create a <code>Query</code> class that would contain the members <code>com, p1, p2, rel1, rel2</code>.</p>
<p>If you're not already confortable with polymorphism, I'd try using it to create <code>ErrorCommand</code>, <code>RetrieveCommand</code> and <code>AddCommand</code> instead of just a <code>Query</code> class. You could use the <code>Command</code> pattern to separate the responsibilities instead of using the <code>if/else if/else</code> from the <code>proceedWithQuerry</code> method.</p>
<h3>RelationshipFactory</h3>
<p>This class isn't really a <a href="https://en.wikipedia.org/wiki/Factory_method_pattern" rel="nofollow noreferrer">Factory Pattern</a>. In this situation I think you should try to rename it to something else. The only method in the class that kind of fits a <code>Factory</code> is the <code>populateFamilyTree</code> method. You could check out the <a href="https://en.wikipedia.org/wiki/Builder_pattern" rel="nofollow noreferrer">Builder</a> pattern to help build your family tree. It could be an interesting exercise though some people might argue that it's overkill. But as you tagged your question as <code>beginner</code>, I feel like you could learn something from trying to implement this :)</p>
<p>The <code>int mode</code> parameter to <code>addRelation</code> isn't intuitive. I think that it is used to "mirror" the relationship (so that <code>Sibling(Harry,Emma)</code> would also add <code>Sibling(Emma,Harry)</code>), this should be made clearer.</p>
<h3>TreeApp</h3>
<p>If I'm using your application, how can I know what I'm supposed to enter when this is prompted : <code>System.out.println("Enter option:");</code>. You should print the options with what they do so that users can use your application.</p>
<h3>General</h3>
<p>The variable names should be more explicit. Looking at this : <code>String p1;</code>, how can I know what it will contain? Naming it <code>firstPerson</code> or something of the like would be good. Short variable names bring nothing of value, especially with IDEs.</p>
    </div>