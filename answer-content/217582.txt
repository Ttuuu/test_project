<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From a short review;</p>

<ul>
<li>I advise avoiding <code>null</code>, you could either not define the member or use <code>undefined</code></li>
<li><code>busiestPeriod</code> is a really long name, given how often you use it</li>
<li>You really only need to track the log entry with the most visitors, the start of the period would be timestamp of the entry before that</li>
<li><p>This: <code>busiestPeriod.visitors = v.type === "enter" ?
  busiestPeriod.visitors + v.count :
  busiestPeriod.visitors - v.count;</code> could be </p>

<p><code>busiestPeriod.visitors += (v.type == "enter" ? v.count : - v.count);</code> </p>

<p>or even </p>

<p><code>busiestPeriod.visitors += (v.type == "enter" ? 1 : -1) * v.count;</code></p></li>
</ul>

<p>This is my counter-proposal:</p>

<pre><code>function findBusiestTime(logs){

  function analyzeLogEntry(acc, log, index){
    if(log.type == "enter"){
      acc.count += log.count;   
    }else{
      if(acc.count &gt; acc.maxCount){
        acc.maxCount = acc.count;
        acc.index = index;
      }
      acc.count -= log.count;
    }
    return acc;
  }

  let {index} = logs.reduce(analyzeLogEntry,{count:0, maxCount: 0});
  return [logs[index-1].timestamp,logs[index].timestamp];  
}
</code></pre>
    </div>