<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Algorithm bugged</h2>

<p>One machine could encrypt the password and another could decrypt it. You would think that this should not be a problem.</p>

<p>However, <a href="https://docs.microsoft.com/en-us/dotnet/api/system.bitconverter.islittleendian?view=netframework-4.8" rel="nofollow noreferrer">BitConverter</a> uses the <a href="https://en.wikipedia.org/wiki/Endianness" rel="nofollow noreferrer">endianess</a> of the machine. This means your encryption strategy is <strong>computer architecture-sensitive</strong>, which is a huge weakness and frankly a bug.</p>

<p>Encryptor (using big endian):</p>

<pre><code>var messageLength = BitConverter.GetBytes(messageLengthAs32Bits);
</code></pre>

<p>Decryptor (using little endian):</p>

<pre><code>var length = BitConverter.ToInt32(messageLengthAs32Bits, 0);
</code></pre>
    </div>