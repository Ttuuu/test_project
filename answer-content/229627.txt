<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><del>First off, I'm assuming the call of the method <code>flatEntriesMap</code> is wrong and it should be a recursive call to <code>flatTree</code>.</del> (EDIT: Source code has been corrected.)</p>

<p>Then you should reconsider the name, especially considering the confusion before your edit: You are not flatting the tree, but retrieving its leaves.</p>

<p>To get rid of the side effect, you simply make the original method <code>private</code> and wrap a new method around it that creates the destination list:</p>

<pre><code>public List&lt;Entry&gt; flatTree(List&lt;Entry&gt; toFlat) {
    return this.flatTree(toFlat, new ArrayList&lt;&gt;());
}
</code></pre>

<p>In case you need to be able to determine the type of list returned from the outside, then instead of passing a new instance pass a supplier that creates the instance:</p>

<pre><code>public List&lt;Entry&gt; flatTree(List&lt;Entry&gt; toFlat, Supplier&lt;List&lt;Entry&gt;&gt; listSupplier) {
    return this.flatTree(toFlat, listSupplier.get());
}
</code></pre>

<p>which can then be called either with</p>

<pre><code>flatTree(entries, () -&gt; new ArrayList&lt;&gt;());
</code></pre>

<p>or</p>

<pre><code>flatTree(entries, ArrayList::new);
</code></pre>
    </div>