<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A couple of things:
- Some the non-variant variables data types are not declared
- Avoid using underscores in variable names<br>
- NumToWordsUnsignedInt reads as "Number To Words Unsigned Int" and that just doesn't make sense
- I use IIF() quite often myself but it can take away from the readability of the code
- Ones should be renamed because it contains numbers 1 to 19
-  <code>NumIn, NumAll</code> are very good variable names. Personally, I choose to use the same set of variable names for all my work (such as: value, values, data, result, results, source, target).  I see value in my code I know that it is a single scalar value that I am working with.  Values and data are arrays.  Result is a scalar value that will generally be returned.  Results is a array that will generally be returned.  These variables names are also part of several patterns that I have memorized.  Reusing these patterns speeds up the reading and writing of my code.</p>

<h2>Refactored Code</h2>

<p>With all the hard work done by the OP, this is how I would write the function:</p>

<pre><code>Function NumbersToWords(ByVal Value As String)
    Dim nHundreds As Long, nOnes As Long, nTens As Long, nScale As Long, n As Long
    Dim result As String
    Dim Small(), Tens(), Scle()
    Small = Array("", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen")
    Tens = Array("", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety")
    Scle = Array("", "Thousand", "Million", "Billion", "Trillion", "Quadrillion", "Quintillion", "Sextillion", "Septillion", "Octillion", "Nonillion", "Decillion")


    Value = String((Len(Value) * 2) Mod 3, "0") &amp; Value      'Create shortest string Triplets (0 padded)

    For n = Len(Value) To 1 Step -3
       nOnes = Mid(Value, n - 2, 1)
       nTens = Mid(Value, n - 1, 1)
       nHundreds = Mid(Value, n, 1)
       If nScale &gt; 0 Then result = Scle(nScale) &amp; Space(1) &amp; result

       If nOnes + nTens + nHundreds = 0 Then
            'Skip Empty Triplet
       ElseIf nTens &gt;= 2 And nOnes = 0 Then
            result = Tens(nTens) &amp; Space(1) &amp; result
       ElseIf nTens &gt;= 2 Then
            result = Tens(nTens) &amp; "-" &amp; Small(nOnes) &amp; Space(1) &amp; result
       ElseIf nOnes &gt; 0 Or nTens &gt; 0 Then
            result = Small(nTens * 10 + nOnes) &amp; Space(1) &amp; result
       End If

       If nHundreds &gt; 0 Then result = Small(nHundreds) &amp; " Hundred " &amp; result

       nScale = nScale + 1

    Next

    NumbersToWords = Trim(result)

End Function
</code></pre>

<p>Edited per Roland Illig comment.</p>
    </div>