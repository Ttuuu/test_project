<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think the main problem of your implementation is that lock() performs <a href="https://en.wikipedia.org/wiki/Busy_waiting" rel="nofollow">Busy waiting</a>. This will cause a thread that is waiting to get the lock to repeatedly <strong>waste CPU-cycles</strong> by polling (multiple times in one time slot) whether the lock has been released. </p>

<p>Easiest fix for that is to perform a call to <code>Thread.yield()</code> after trying to acquire the lock. This will cause the thread to exit its time slot and therefore let the other threads do their work.</p>

<pre><code>public void lock() {
    while (true) {
        if (locked.compareAndSet(false, true)) {
            threadLocal.set(true);
            return;
        }
        Thread.yield();
    }
}
</code></pre>

<p>Oh and I would rename the method <code>unLock()</code> to <code>unlock()</code> since it is an existing english word.</p>
    </div>