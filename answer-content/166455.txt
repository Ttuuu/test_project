<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>ascii letters</code> returns a string, containing lower and uppercase letters. You can iterate over a string directly, so there's no need to convert to a list, for both <code>message</code> and <code>ascii_letters</code>.</p>

<p>You can put the letters in order that you want in another string, following the format of <code>ascii_letters</code>. The, you can use the <code>translate</code> function, as explained <a href="http://www.tutorialspoint.com/python3/string_translate.htm" rel="nofollow noreferrer">here.</a></p>

<pre><code>from string import ascii_letters

cipher_letters = 'nzghqkcdmyfoialxevtswrupjbNZGHQKCDMYFOIALXEVTSWRUPJB'
trans = str.maketrans(ascii_letters, cipher_letters)

text_to_cipher = input('Text to cipher: ')

ciphered = text_to_cipher.translate(trans)
print(f'Ciphered text: {ciphered}')
</code></pre>

<p>You can transfer that into a function too, so you can reuse it.</p>

<pre><code>from string import ascii_letters

cipher_letters = 'nzghqkcdmyfoialxevtswrupjbNZGHQKCDMYFOIALXEVTSWRUPJB'


def ryan_cipher(text):
    trans = str.maketrans(ascii_letters, cipher_letters)
    return text.translate(trans)

if __name__ == '__main__':
    text_to_cipher = input('Text to cipher: ')
    ciphered = ryan_cipher(text_to_cipher)

    print(f'Ciphered text: {ciphered}')
</code></pre>

<p>Result:</p>

<pre><code>Text to cipher: Hello, world!
Ciphered text: Dqool, ulvoh!
</code></pre>

<p>If you wish to decipher <code>Dqool, ulvoh!</code>, you just need to reverse the direction of the translation table, as such:</p>

<pre><code>def decipher(text):
    trans = str.maketrans(cipher_letters, ascii_letters)
    return text.translate(trans)
</code></pre>

<p>Result:</p>

<pre><code>Text to decipher: Dqool, ulvoh!
Deciphered text: Hello, world!
</code></pre>
    </div>