<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here are a few links
<a href="https://docs.microsoft.com/en-us/dotnet/api/system.int32.tryparse?view=netcore-3.1" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/dotnet/api/system.int32.tryparse?view=netcore-3.1</a>
A newer method of parsing an Int32 in C#.</p>
<p><a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/switch" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/switch</a>
a way to simplify your if statements.</p>
<p>Also, it isn't the best practice to put a lot of code into the main method. Try adding a <code>public void static run()</code> method and then calling that from the main method.</p>
<pre class="lang-cs prettyprint-override"><code>using System;
using System.Collections.Generic;
using System.Text;

namespace RockPaperScissors
{
    class Program
    {
        public static int playerScore = 0;
        public static int opponentScore = 0;

        static void Main(string[] args)
        {
            run();
        }

        public static void run()
        {
            bool? roundResult = null;
            bool playAgain = false;
            Random rng = new Random();
            int opponentNumber = rng.Next(1, 4);

            while (roundResult == null || playAgain)
            {
                Console.WriteLine("1.Rock\n2.Paper\n3.Scissors");
                Console.Write("Please Input A Number: ");

                Int32.TryParse(Console.ReadLine(), out int input);
                //Console.WriteLine(input);

                roundResult = compare(input, opponentNumber);
                if (roundResult == null)
                {
                    Console.WriteLine("\nRound Was A Tie. Try Again\n");
                    Console.WriteLine();
                }

                Console.WriteLine($"\nPlayer Score: {playerScore}\nOpponent Score: {opponentScore}\n");

                if (roundResult != null)
                {

                    bool validInput = false;
                    while (!validInput)
                    {
                        Console.Write("\nPlay Again? Y/N: ");
                        string playAgainInput = Console.ReadLine().ToLower();
                        switch (playAgainInput)
                        {
                            case "y":
                                playAgain = true;
                                validInput = true;
                                break;
                            case "n":
                                playAgain = false;
                                validInput = true;
                                break;
                            default:
                                Console.WriteLine("Invalid Input");
                                validInput = false;
                                break;
                        }
                    }
                }
            }



        }

        public static string getHandForm(int number)
        {
            string handForm = "";
            switch (number)
            {
                case 1:
                    handForm = "Rock";
                    break;
                case 2:
                    handForm = "Paper";
                    break;
                case 3:
                    handForm = "Scissors";
                    break;
                default:
                    Console.WriteLine("Invalid Number");
                    break;
            }

            return handForm;
        }

        public static bool? compare(int player, int opponent)
        {

            string playerHand = getHandForm(player);
            string opponentHand = getHandForm(opponent);
            //True equals Round Won, False equals Round Loss, Null equals round tie
            bool? roundBool = null;

            if (opponent != player)
            {
                switch (playerHand)
                {
                    case "Rock":
                        switch (opponentHand)
                        {
                            case "Scissors":
                                //Player Wins
                                roundBool = true;
                                break;
                            case "Paper":
                                //Player Loses
                                roundBool = false;
                                break;
                        }
                        break;
                    case "Scissors":
                        switch (opponentHand)
                        {
                            case "Rock":
                                //Player Loses
                                roundBool = false;
                                break;
                            case "Paper":
                                //Player Wins
                                roundBool = true;
                                break;
                        }
                        break;
                    case "Paper":
                        switch (opponentHand)
                        {
                            case "Rock":
                                //Player Wins
                                roundBool = true;
                                break;
                            case "Scissors":
                                //Player Loses
                                roundBool = false;
                                break;
                        }
                        break;
                }
            }

            if (roundBool == true)
            {
                Console.WriteLine($"Player Wins! Opponent Choose: {opponentHand} You Choose: {playerHand}");
                playerScore++;
            }
            else if (roundBool == false)
            {
                Console.WriteLine($"Opponent Wins! Opponent Choose: {opponentHand} You Choose: {playerHand}");
                opponentScore++;
            }

            return roundBool;
        }

    }
}
</code></pre>
    </div>