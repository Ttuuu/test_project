<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Review</h1>
<ul>
<li><p>Check validity of input</p>
<p>You should validate the ip if the connection is reachable, else it will error.</p>
</li>
<li><p>This only checks for TCP ports not UDP</p>
<p>You could add a <code>(socket.AF_INET, socket.SOCK_DGRAM)</code> connection for checking UDP ports</p>
</li>
<li><p>Don't use <code>%s</code> but <code>{}</code> for string formatting</p>
</li>
<li><p>Close the socket after usage</p>
</li>
<li><p>Use <code>argparse</code> or <code>sys.argv</code> for parsing user input arguments instead of <code>input</code></p>
<p>This makes it easier to rerun scripts</p>
</li>
<li><p>You could add a range of ports to the port scanner instead of creating a <code>SConnect</code> for every port</p>
</li>
<li><p>Use generators</p>
</li>
</ul>
<h1>Alternative code</h1>
<pre><code>import sys
import socket

class PortScanner:
    def __init__(self, ip, ports):
        self.ip = ip
        self.ports = ports

    def scan_tcp_port(self, port):
        connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        connection.settimeout(0.3)
        yield connection.connect_ex((self.ip, port)), port
        connection.close()

    def scan_ports(self):
        for port in self.ports:
            yield from self.scan_tcp_port(port)

    def host_up(self):
        try:
            connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            connection.connect_ex((self.ip, 80))
            return True
        except socket.timeout:
            return True
        except socket.error:
            return False
        

def main(ip, ports=range(1, 65536)):
    scanner = PortScanner(ip, ports)
    if not scanner.host_up():
        print("Host is down")
        return

    for connection, port in scanner.scan_ports():
        connection = "UP" if connection == 0 else "DOWN"
        print(f"Port {port} is {connection}") # Log result

if __name__ == '__main__':
    if len(sys.argv) == 2:
        ip = sys.argv[1]
        main(ip)
</code></pre>
    </div>