<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few short comments:</p>

<ol>
<li>Initializing a matrix with a compile-time list of values (initializer list) does not seem to be very useful - as CUDA is used to process huge amounts of data, not a tiny number of elements you provide at compile time.</li>
<li>Mixing code for mathematical / data structure abstractions with error handling utility code into the same class is not a good idea.</li>
<li>Your function and method names are often unnecessary shortened (like <code>mld</code>), ambiguous (<code>confirm</code>), or involve redundancy (like <code>cu_mat</code> instead of <code>matrix</code> in an appropriate namespace).</li>
<li>It looks like these are supposed to be matrices that are located in host memory, but copied back and forth to device memory for every single operation. Why is that a useful think to have?</li>
</ol>

<p>PS - If you want to use more C++-ish error handling, you could consider my <a href="https://github.com/eyalroz/cuda-api-wrappers" rel="nofollow noreferrer">CUDA API wrappers</a> which do just that (and is obviously separated from any application-specific logic).</p>
    </div>