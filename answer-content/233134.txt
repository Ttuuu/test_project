<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Unnecessary capturing of output</h3>

<p>It's strange in <code>count_lines</code> to capture the output of <code>find</code> only to <code>echo</code> it.</p>

<p>Instead of:</p>

<blockquote>
<pre><code>N="$(pipeline)"
echo "$N"
</code></pre>
</blockquote>

<p>This is the same thing, with fewer processes:</p>

<pre><code>pipeline
</code></pre>

<h3>Complicated counting of lines</h3>

<p>You used a <code>grep</code> to count lines, then another <code>grep</code> to remove other junk to keep only counts, then an <code>awk</code> to sum counts. It would be a lot simpler to use <code>wc</code>.</p>

<p>Instead of:</p>

<blockquote>
<pre><code>xargs grep -cve "^\s*$" | grep -oP '(?&lt;=:).*' | \
awk '{s+=$1} END {print s}'
</code></pre>
</blockquote>

<p>You could write:</p>

<pre><code>xargs grep -ve "^\s*$" | wc -l
</code></pre>

<h3>Calling <code>count_lines</code> more than necessary?</h3>

<p>The <code>while</code> loop calls <code>count_lines</code>, waits for 5 seconds, then calls <code>count_lines</code> again, and prints some stats, then starts over again.
The printing of stats is a fast operation,
so some <code>count_lines</code> calls look wasteful.</p>

<p>It would be better to call <code>count_lines</code> only once per iteration,
and compare values to the call in the previous iteration.
(This also means you'll need to call it once before the loop too, to initialize.)</p>

<h3>Other minor issues</h3>

<p>Capitalized variable names are not recommended in scripts.</p>

<p>Always double-quote variables used in command line arguments, for example <code>touch "$filename"</code> instead of <code>touch $filename</code>.</p>

<p><code>;</code> at the end of a line is unnecessary.</p>

<p>Instead of <code>diff=$((a - b))</code> you can write <code>((diff = a - b))</code>.
Btw, <code>((sum += diff))</code> also works.</p>
    </div>