<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>CodeBreaker should not be a class. All it does can be written in one line and there is no particular responsibility that would justify to put this in an extra class: </p>

<pre><code>return (new ScreenHelper()).getUserInput("Enter a guess: ");
</code></pre></li>
<li><p>Why would you introduce an own class for the board? Does the board have specific properties and/or methods which should be "bundled" together? I would say: no. </p></li>
<li><p>Copying the ArrayList is fine â€“ but: I would not make a class member for <code>tempBoard</code> but change the signature of <code>makeTempBoard</code> to e.g. <code>ArrayList&lt;String&gt; createTemporaryBoardFrom(ArrayList&lt;String&gt;)</code> and make it static. You really don't need an instance of this class for this operation.</p></li>
</ol>

<hr>

<p>Some more general remarks (not exhaustive):</p>

<ul>
<li><a href="https://en.wikipedia.org/wiki/Separation_of_concerns" rel="nofollow"><strong>Separation of concerns</strong></a>: Your program uses <code>System.out.println</code> on various places spread over different classes. Why not introducing one particular class (or even better: an interface) dealing with user input and output? This could be named <code>UserInterface</code> and would deal with commandline for the beginning but may later be implemented with a GUI. If you use an interface here you would have to exchange only one line of code (namely where the implementing class gets instantiated) to use different frontends!</li>
<li><strong>Naming</strong>: Names as <code>ScreenHelper</code> or <code>CodeMaker</code> are not very precise. Especially any "helper" part should ring the alarm bells. "Clean Code" from <a href="https://en.wikipedia.org/wiki/Robert_Cecil_Martin" rel="nofollow">Uncle Bob</a> is a good read here.</li>
<li>Try to <strong>minimize the scope of your variables</strong>: For instance <code>isAlive</code>. Why does it have to be a class member? Should be a local variable!</li>
</ul>

<hr>

<p><em>Minor things</em>:</p>

<ul>
<li>The <code>setupGame</code> method does more than setup a game, it also controls the flow of events. I would put the stuff with the while loop in an extra method.  </li>
<li>Inlining variables: Sometimes you create variables although you don't need them, e.g. the <code>is</code> variable in the <code>try</code> block of <code>ScreenHelper</code>s <code>getUserInput</code>. Just write: <code>inputLine = (new BufferedReader(new InputStreamReader(System.in))).readLine()</code>.</li>
</ul>
    </div>