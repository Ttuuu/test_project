<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could have used various methods with a bit of <em>list slicing</em>.</p>

<p>I don't know if you had learned the <code>.join()</code> and <code>.format()</code> methods in your book, but those I will use.</p>

<p><strong>A few remarks:</strong></p>

<ul>
<li>Functions and variables should be <code>snake_case</code> instead of <code>CamelCase</code></li>
<li>List-to-string should return a string instead of printing it because that is what the name says</li>
</ul>

<hr>

<pre><code>def list_to_string(a_list):
    return '{0} and {1}'.format(', '.join(a_list[:-1]), a_list[-1])

some_list = ['apples','bananas','tofu','cats']
print(list_to_string(some_list))
</code></pre>

<p><strong>How does it work?</strong></p>

<p>With <code>.format()</code> you can make clean string concatenations. The <code>{0}</code> is replaced by the <code>', '.join(a_list[:-1])</code> which joins the list until the last item <code>[:-1]</code> together with a comma and a space. The <code>{1}</code> is replaced by the last item in the list <code>a_list[-1]</code>.</p>
    </div>