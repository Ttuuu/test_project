<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The compiler can't know beforehand if <code>document.getElementById('js-btn-submit')</code> wil return anything. That is why you cannot assign the result directly to a type.</p>

<p>One solution is to tell the compiler that you are certain that the HTML element exists, using <code>!</code></p>

<pre><code>let button = document.getElementById("button")! as HTMLButtonElement
</code></pre>

<p>If you are NOT certain that the button exists in the HTML document, you can use the suggestion given by VS Code:</p>

<p>If you hover the mouse over <code>document.getElementById</code> you can see that the returned type is <code>null | HTMLElement</code></p>

<p>I've rewritten your object as a class, because in object notation the colon is used to pass the value, not the type: <code>const obj = {a:3}</code></p>

<pre><code>class FormValidation {
    submitBtn: null | HTMLButtonElement

    mapDOM() {
        this.submitBtn = document.getElementById('js-btn-submit') as HTMLButtonElement;
    }
}

const f = new FormValidation()
f.mapDOM()
</code></pre>
    </div>