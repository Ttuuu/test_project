<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The first thing I would recommend is using triple-quotes to make the opening text display in a more manageable box of text instead of a single, long string. For example:</p>

<pre><code>print(user_name + 'will face off against the computer!')
print()
print('''In this duel you and the computer will face off by taking turns 
battling, the first to fall loses! There* are barricades to hide behind 
and ammo or potions laying around for you to grab! You and your opponents 
can only hold six (6) bullets and up to three (3) potions at a time! 
Remember to use nearby cover and to grab ammo and potions BEFORE you 
attack or heal!''')
</code></pre>

<p>Now, to cut back on repeated information, I would add a <em>whos_turn</em> parameter to each of your functions, and program it so that the computer player takes actions through the same function, rather than having to type in every possible computer action for every possible player action. You can set <em>random.randint(0, 1)</em> to determine initiative each turn (will the computer chug that potion before or after I shoot?).</p>

<p>So, instead of one long <em>game_main()</em> function, you can separate it into functions based on each possible action, with a parameter determining whether it is the player or the computer performing the action. For example:</p>

<pre><code>import random

def turn_order():
    initiative = random.randint(0,1)

def choose_actions(initiative)
    possible_actions =['ATTACK', 'RELOAD', 'GRAB', 'DRINK']
    player_action = ''
    computer_action = ''
    while player_action not in possible_actions:
        player_action = input('Do you want to ATTACK, RELOAD, GRAB a potion, or DRINK a potion? ').upper()
        print('You chose %s' % (player_action))

    if initiative == 0:     
        player_action = (player_action.upper())
        print('You chose to %s' % (player_action))
        if player_action == 'ATTACK':
            attack(player)
        elif player_action == 'RELOAD':
            reload(player)
        elif player_action == 'GRAB':
            grab(player)
        elif player_action == 'DRINK':
            drink(player)

    if initiative == 1:
        computer_action = random.choice(possible_actions)
        print(computer_action)
        print('The computer chose to %s' % (computer_action))
        if computer_action == 'ATTACK':
            attack(computer)
        elif computer_action == 'RELOAD':
            reload(computer)
        elif computer_action == 'GRAB':
            grab(computer)
        elif computer_action == 'DRINK':
            dring(computer)

def attack(attacker):


initiative = turn_order()
choose_actions(initiative)
</code></pre>

<p>and so on.</p>
    </div>