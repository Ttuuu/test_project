<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First, you should not be using Python 2 anymore, if at all possible. <a href="https://pythonclock.org/" rel="noreferrer">It will reach end of support at the end of the year</a>.</p>

<p>In Python 3 your code would just be:</p>

<pre><code>def all_eating_unicode_converter(input_string):
    """
    Converts every input to unicode.
    :param input_string: may be a string or unicode or bytes.
    :return: returns unicode

    Tested with: 'äöü', b'\xc3\xa4\xc3\xb6\xc3\xbc', u'äöü'
    """
    if isinstance(input_string, bytes):
        return input_string.decode("utf-8")
    return input_string
</code></pre>

<p>Note that I used <code>isinstance</code> instead of <code>type</code>, to also allow derived types of <code>bytes</code> to work properly.</p>

<p>I also shortened the logic by not insisting on having a single <code>return</code> from the function. Here it is clear enough what is happening, and I am in general a fan of early returns.</p>

<p>Docstrings only work when they are actually right after the function header, so I moved the testcases inside the docstring. </p>

<p>In addition, one reason the <code>logging</code> module is so powerful is that it allows you to write log messages which are costly to print and never print them. In other words the replacement of the placeholders is only performed if the message is actually being printed, i.e. if the log level is high enough. So you should always do this:</p>

<pre><code>l.debug("type: %s\n message:%s",  type(input_string), input_string)
</code></pre>
    </div>