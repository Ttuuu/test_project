<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can use the inside out version of the <a href="http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_.22inside-out.22_algorithm">Fisher-Yates shuffle</a></p>

<p>In C# it would look like:</p>

<pre><code>private static int[] Shuffle(int n) 
{
    var random = new Random();
    var result = new int[n];
    for (var i = 0; i &lt; n; i ++)
    {
        var j = random.Next(0, i + 1);
        if (i != j) 
        {
            result[i] = result[j];
        }
        result[j] = i;
    }
    return result;
}
</code></pre>

<p>It's good because you create and shuffle your array at the same time using a well known shuffle.</p>

<p>You'd want to reuse the same <code>Random</code> instance though.</p>
    </div>