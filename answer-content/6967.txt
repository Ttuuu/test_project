<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Is it overkill to suggest such a solution? </p>
</blockquote>

<p>Yes, I think so :-)</p>

<blockquote>
  <p>Under what conditions would you split it into a Model and Views? </p>
</blockquote>

<p>If you need more than one view. For example, if the specification says that the program should be able to write the results to the screen, a CSV/PDF file, a network socket, a web service etc.</p>

<blockquote>
  <p>Are there any issues with the code?</p>
</blockquote>

<p>It's fine, just three issues:</p>

<ul>
<li>Naming: I'd rename <code>$data</code> to <code>$result</code>.</li>
<li>Input checks: 

<ul>
<li>What should happen when <code>$start &gt; $end</code>? (Check and throw an exception.)</li>
<li>What should happen when <code>$period</code> is not a number? (Throw an exception in the constructor.)</li>
</ul></li>
<li>Unit tests are missing.</li>
</ul>

<blockquote>
  <p>Whether any changes were likely to be made in the future?</p>
</blockquote>

<p>I would not try predicting it. If there are some change requests refactor it. The tests will show whether there is a regression or not. On Programmers.SE there are same questions about it:</p>

<ul>
<li><a href="https://softwareengineering.stackexchange.com/questions/59810/design-for-future-changes-or-solve-the-problem-at-hand">Design for future changes or solve the problem at hand</a></li>
<li><a href="https://softwareengineering.stackexchange.com/questions/79586/future-proofing-code">Future proofing code</a></li>
</ul>
    </div>