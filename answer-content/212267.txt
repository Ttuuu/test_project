<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Focusing just on non-functional aspects:</p>

<h3>Encapsulation</h3>

<p>It is considered very bad practice to have any static fields, as you have in your <code>Account</code> class, because then you have no control over their use.  You should make these fields private, and provide whatever methods are necessary to access and update them.</p>

<h3>Candidate for Polymorphism</h3>

<p>You appear to have two different types of accounts, one used by customers and the other used by staff.  At the moment they are being differentiated by a type code, and then different methods are being called based upon the account being used.  With polymorphism, you can call a single object on some type of <code>Account</code>, without caring whether it is a customer or staff account, and the method of the correct class will be invoked.</p>

<h3>Endless Recursive Loops</h3>

<p>If this application is left open too long, your call stack will grow indefinitely.  This introduces the risk that other data, possibly in other programs, could be corrupted.  Rather than calling <code>MainMenu</code> every time a user has completed an action, the method should instead return, and <code>MainMenu</code> should contain a loop.</p>
    </div>