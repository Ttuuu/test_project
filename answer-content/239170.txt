<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't know which version of C# you use, but as of C# 6 it's possible to set initial values on property definition, which has 2 advantages:</p>

<ul>
<li>Can eyeball the initial values quickly by looking at the property definitions.</li>
<li>Doesn't require you to copy the same initial value assignment code into additional constructors you may create.</li>
</ul>

<p>Example initial value definition:</p>

<pre><code>public int VoteCount { get; private set; } = 0;
</code></pre>

<p>Also in the case of <code>int</code> with initial value <code>0</code> you don't have to explicitly set it because when an instance of the class is initialized all the <code>int</code>s are initialized with the default value <code>0</code> unless you specified otherwise. Just like the <code>bool</code>s are <code>false</code> by default (you didn't set them in the constructor).</p>

<hr>

<p>You could add another layer of protection to the creation date:</p>

<pre><code>public DateTime TimeDateCreated { get; } = DateTime.UtcNow;
</code></pre>

<p>Without defining a setter, <code>TimeDateCreated</code> is set when you create an instance of <code>Post</code> and can never be changed again for that instance. It makes sense here because the only date you'd ever want to change on a post is the date it was edited.</p>

<hr>

<p>Not a big deal for now, but it's better to develop early the habit of giving good variable names, this means being descriptive, concise and consistent with the naming of things around the code base. Most of your names are good, but <code>TimeDateCreated</code> is a bit counter-intuitive because once you'll get used to the name <code>DateTime</code> you'll expect this property to be named <code>DateTimeCreated</code>.</p>

<hr>

<p>It's good that you protected <code>VoteCount</code>, but your vote function does something unwanted: if you first downvote and then upvote, you will be back to 0 votes but without the ability to upvote. I suggest you rethink this part of the code.</p>
    </div>