<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>chap4num9</code> is not a proper Java class name. Java class names begin with a capital letter and each word starts with an uppercase letter. It should be <code>Chap4Num9</code>.</p>

<p>Always close <code>Closeable</code> resources like <code>Scanner</code>. Prefer the use of a <code>try-finally</code> block to do so.</p>

<p><code>userMoney</code> should be final. This reduces the cognitive load on the reader of your code, since they know the value will not change after it is set.</p>

<p>There are no <code>chocoBars</code>. There are <code>chocolateBars</code>. Don’t use abbreviations or shorthand. It’s harder to read, and there are no assurances that the reader will know what you’re trying to describe.</p>

<p><code>userCoupon</code> could probably be just <code>coupons</code>. It’s easier to read, and should be plural because there’s probably more than one. Likewise <code>userMoney</code> and <code>money</code>.</p>

<p>Don’t assign <code>chocolateBars</code> and then immediately reassign it. Just set it to the value it’s supposed to be.</p>

<p>While you don’t need a money variable, it does make it easier to understand that money = # of chocolate bars. If you really wanted to, you could remove it by doing something like <code>int chocolateBars = userInput.nextInt(); int coupons = chocolateBars;</code>.</p>

<p>Doing a computation to minimize your number of loop iterations is a premature optimization that makes the code harder to read. Write code to be easy to read until you have an actual performance problem and you know where the bottleneck is. Then test to make sure your optimization actually fixed the problem. </p>

<p>Your code has two bugs in it. (0) You have the incorrect number of coupons after your <code>if</code> block. If money &lt; 6, coupons is 0. If money &gt;= 6, your optimization computes the wrong value. (1) If you have N coupons and you spend 6 to gain a chocolate bar and a coupon, you should have N - 5 coupons, not N - 6. So with 8 money, you should wind up with 9 bars and 3 coupons.</p>

<p>If you were to apply all my suggestions, your code might look something like:</p>

<pre><code>import java.util.Scanner;

public class Chap24Num9 {

    public static void main(final String[] args) {
        try (final Scanner userInput = new Scanner(System.in)) {
            System.out.println("How much money do you have?");
            final int money = userInput.nextInt();

            int chocolateBars = money;
            int coupons = money;

            while (coupons &gt;= 6) {
                coupons = coupons - 6;
                chocolateBars = chocolateBars +1;
                coupons = coupons + 1;
            }

            System.out.println("You will have total of " + chocolateBars + " bars and " + coupons + " coupons left.");

        }
    }
}
</code></pre>
    </div>