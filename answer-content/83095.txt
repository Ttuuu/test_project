<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is the way I would do it:</p>

<pre><code>function getRangeFromDays($days) {
  // collect dates into catagories
  foreach ($days as $date =&gt; $catagory) {
    $temp[$catagory][] = $date;
  }
  // process all dates in each catagory
  foreach ($temp as $catagory =&gt; $dates) {
    sort($dates);
    $startDate  = $dates[0];
    $finishDate = array_pop($dates);
    // walk through the dates, breaking at gaps
    foreach ($dates as $key =&gt; $date)
    if (($key &gt; 0) &amp;&amp; (strtotime($date)-strtotime($dates[$key-1]) &gt; 99999)) {
      $result[] = array($startDate,$dates[$key-1],$catagory);
      $startDate = $date;
    }
    // force the end
    $result[] = array($startDate,$finishDate,$catagory);
  }
  return $result;
}

echo '&lt;pre&gt;';
print_r(getRangeFromDays($days));
echo '&lt;/pre&gt;';
</code></pre>

<p>I use an intermediate array which makes it easier to get the results because it's already segmented by catagory. All that's then left to do is the date ranges. I turn dates into seconds to see if the gap is bigger than one day (&gt; 99999 seconds).</p>
    </div>