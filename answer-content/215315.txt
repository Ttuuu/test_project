<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>better to use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html" rel="nofollow noreferrer">dataframe.apply</a> in vector operation for enhancing
performance.</li>
<li>del dataframe is not working as you think, check
<a href="https://stackoverflow.com/questions/32247643/how-to-delete-multiple-pandas-python-dataframes-from-memory-to-save-ram">this</a> </li>
<li>saved reference first and use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.concat.html?highlight=concat#pandas.concat" rel="nofollow noreferrer">pandas.concat</a> after
looping</li>
<li>size of expected result should be (n ** 2, 2) where df.shape
= (n, 3)</li>
<li>Optional: Use different datatype like np.float16 or np.float32 to trade memory size with decimal accuracy</li>
</ol>

<pre class="lang-py prettyprint-override"><code>import gc

def calc_dist(row):
    return np.sqrt((row ** 2).sum())

temp = []
for _, row in df.iterrows():
    new_df = df - row # recenter
    dist = new_df.apply(calc_dist, 1)
    counts = dist.value_counts(sort = True).reset_index()
    counts.columns = ["distance", "count"]
    del new_df, dist
    temp.append(counts)
    gc.collect()
final = pd.concat(temp, ignore_index=True).groupby("distance").sum()
key = 0.0
final.loc[key] = final.loc[key] - n
</code></pre>
    </div>