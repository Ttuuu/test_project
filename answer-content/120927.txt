<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Convert data to float once and forever:</p>

<pre><code>with open(filepath, "r") as f:
    rawdata = [float(line.strip()) for line in f.readlines()]
</code></pre></li>
<li><p><code>len(rawdata[delimiter0:delimiter1])</code> equals to <code>delimiter1 - delimiter0</code>. I suppose the latter is somewhat cleaner.</p></li>
<li><p>Detecting slopes is questionable. It seems that it introduces a phase shift. I recommend to add a second step: since you <em>know</em> it must be a straight line, min-square interpolate what you found at the first step.</p>

<p>In any case it should be factored out into a function.</p></li>
<li><p>Averaging slopes is very questionable. Each slope may have different number of samples, and you account for that by computing an average number. This means that shorter slopes will contribute data which actually belong to the falling slope, and longer slopes do not contribute their trailing parts. You may want to resample them.</p>

<p>I also suspect that the slopes not being aligned correctly (see above) contributes a lot.</p></li>
</ul>
    </div>