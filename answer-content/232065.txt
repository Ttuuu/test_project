<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Potential bugs</h3>

<p>I just spent a few minutes reviewing this, so I'm not sure these are bugs, but you should have a look at them:</p>

<ol>
<li><p>The comma operator is not the same as <code>&amp;&amp;</code>. You have this code:</p>

<pre><code>for (int i = 0; i &lt; ipSrcLen, addrIdx &lt; 4; i++) {
</code></pre>

<p>but I think you meant to use <code>&amp;&amp;</code> instead of <code>,</code>. I'm not sure it matters because I'm not sure what the chances are that you will get a mismatch between the string contents and the length, but it's a possible source of error.</p></li>
<li><p>Incomplete error checking. In the "invalid digit" section of your loop, you have this check:</p>

<pre><code>if (addrIdx == 3 &amp;&amp; current &gt;= 0) {
</code></pre>

<p>but you don't do anything if that condition is not true. If <code>addrIdx</code> is 0, 1, or 2 you don't handle the bad digit, but instead fall through. I think you need to catch those cases and fail gracefully.</p></li>
</ol>

<h3><code>IpToString</code></h3>

<p>I mentioned this in the comments, but you know the range of values is small. So there's no reason not to replace your divisions with either a series of <code>if</code> statements or a lookup table. </p>

<p>Unless you're writing a router or something, I don't expect the lookup table would pay for itself, so the <code>if</code> statements seem to be the way to go. Something like this:</p>

<pre><code>need_tens_0 = FALSE

// hundreds digit
if number &gt;= 100:
    need_tens_0 = TRUE

    if number &gt;= 200:
        *ptr++ = '2'
        number -= 200
    else:
        *ptr++ = '1'
        number -= 100

// tens digit (binary search)
if number &gt;= 50:
    if number &gt;= 80:
        if number &gt;= 90:
            *ptr++ = '9'
            number -= 90
        else:
            *ptr++ = '8'
            number -= 80

// ... buncha cases omitted ...

else if number &gt;= 10:
else:
    // "6" could be 56 or 106 or 216. Check if we need to insert a padding 0
    if need_tens_0:
        *ptr++ = '0'

// Ones digit
*ptr++ = '0' + number
</code></pre>
    </div>