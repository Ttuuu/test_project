<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It looks difficult to decypher indeed. Let's try it though. Some little bits which came to my mind at first glance:</p>

<ul>
<li>I'd recommend using 4 spaces of indentation</li>
<li>maybe it's personnal taste but I would try not mixing jquery and vanilla js</li>
<li><p>as I understood, <code>this</code> keyword always refers to the same object, doesn't it? in that case maybe you could declare the selectors at the top of the function?</p>

<pre><code>const thisElementId = get(this, 'elementId');
const selectorOwlDots = `#${thisElementId} .owl-carousel .owl-dots`;
const selectorButtonSpans = `#${thisElementId} div.owl-dots &gt; button &gt; span`;
</code></pre></li>
<li><p>declarations of <code>const elCopy = el;</code> are useless, just refer to <code>el</code> and rename it to something more meaningful</p></li>
<li><p>the handler of <code>_waitFor</code> should be declared as a function:</p>

<pre><code>this._waitFor( selectorButtonSpans ).then( changeSizes ).catch( handleError );

function changeSizes() {
    ...
}

function handleError( err ) {
    ...
}
</code></pre></li>
<li><p>you can also simplify the initial exit condition a bit</p>

<pre><code>let dotRowHeight = $(selectorOwlDots).height() || 25;
if ( dotRowHeight &lt;= 25 ) {
    return;
}
</code></pre></li>
<li>you have two <em>initial</em> checks on <code>dotRowHeight</code> - I think you could reduce them to just one ( one is the one I simplified, the other is inside the <code>_waitFor</code> handler )</li>
</ul>

<p>That should make the code a bit more readable <strong><em>BUT</em></strong> I think this code is doing the wrong thing altogether. The problem is - you are changing the size of elements in a loop until some condition is met. This is a bad practice - I've seen people ending up with infinite loops when doing such things. What I think you should do instead is:</p>

<ul>
<li>read all the sizes you need</li>
<li>calculate sizes to apply to elements</li>
<li>apply sizes</li>
<li>if anything breaks - you do not have an infinite loop of elements jumping up and down on your page</li>
</ul>

<p>Always try to minimize the number of interactions between your script and the UI.</p>
    </div>