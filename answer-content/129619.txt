<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Since <code>pthread_create()</code> returns an error number on failure, you can put <code>ret</code> into <a href="http://man7.org/linux/man-pages/man3/strerror.3.html" rel="nofollow noreferrer"><code>strerror()</code></a> to get the associated error message instead of just printing the number:</p>

<pre><code>fprintf(stderr, "Thread 1 creation failed: %s\n", strerror(ret));
</code></pre>

<p>Notice that I'm calling <a href="http://man7.org/linux/man-pages/man3/fprintf.3.html" rel="nofollow noreferrer"><code>fprintf()</code></a> instead of <code>printf()</code>.  Since you're printing an error, it must be sent to <code>stderr</code>, not <code>stdin</code> (used by default with <code>printf()</code>).</p>

<p>Also, while you'd normally not need all this code for printing an error, it's necessary since <code>pthread_create()</code> <em>doesn't</em> set <code>errno</code> (which is why <code>ret</code> is useful here).</p>

<p>For code that <em>does</em> set <code>errno</code> (which would be stated on man pages), you'd only need to call <a href="http://man7.org/linux/man-pages/man3/perror.3.html" rel="nofollow noreferrer"><code>perror()</code></a> to print the corresponding error message:</p>

<pre><code>perror("&lt;insert source of failure here&gt;");
</code></pre>

<p>This would also eliminate the need for variables like <code>ret</code> in such code.  However, with <code>pthread_create()</code> and related functions, you could probably just <a href="https://stackoverflow.com/questions/9856822/should-i-set-errno">put <code>errno</code> in its place</a> and then use <code>perror()</code>.</p></li>
<li><p>The functions called by <code>pthread_create()</code> should still return something.  Since the return value won't be useful here, you can just return <code>NULL</code>.</p></li>
<li><p>There's no need to call <code>exit()</code> right at the end of <code>main()</code>.  You're preventing it from returning a value, and it'll always return 0 at this point anyway.</p></li>
<li><p>This isn't a criticism, but a tip: make sure you're running this through <a href="http://valgrind.org/" rel="nofollow noreferrer">valgrind</a> to check for any memory leaks along the way.</p>

<p>Actually, this may already cause a leak, but I haven't checked to make sure.  If it does, then you may need to call both <a href="http://man7.org/linux/man-pages/man3/pthread_mutex_destroy.3p.html" rel="nofollow noreferrer"><code>pthread_mutex_destroy()</code></a> and <a href="http://man7.org/linux/man-pages/man3/pthread_cond_destroy.3p.html" rel="nofollow noreferrer"><code>pthread_cond_destroy()</code></a> before exiting the program at any point.</p></li>
</ul>
    </div>