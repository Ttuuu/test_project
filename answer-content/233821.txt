<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This combines the GroupBy and the following Select into Once.
It should be easier to understand and much more performant, cause it does not involve the LINQ-GroupBy algorithm. It's your algorithm that does the grouping.</p>

<pre><code>private static IEnumerable&lt;ArticleEmailSummary&gt; 
MakeGroups(IOrderedEnumerable&lt;ArticleEmail&gt; emails)
{
    TimeSpan maxMailingTime = new TimeSpan(30, 0, 0, 0); // could be a static readonly field also
    DateTime lastDate = DateTime.MinValue;

   var list = new List&lt;ArticleEMail&gt;();

    foreach(var email in emails)
    {
        if (email.DateCreated - lastDate &gt; maxMailingTime)
        {
        // the mailing was not sent within maxMailingTime from the start of first email in series
        // we will update the lastDate and this will group the emails into a separate group

            if (list.Count &gt; 0)
            {
                yield return new ArticleEMailSummary(list); 
                list = new List&lt;ArticleEMail&gt;();
            }

            lastDate = email.DateCreated;
        }
        list.Add(email);
    }
    Debug.Assert(list.Count &gt; 0);
    yield return new ArticleEMailSummary(list); 
}
</code></pre>
    </div>