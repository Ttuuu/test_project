<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>How about</p>

<pre><code>function move(field, player, dx, dy) {
    player.column = player.column + dx;
    player.row = player.row + dy;
    field[player.row][player.column] = 'P'; 
}
</code></pre>

<p>and instead of calling <code>up(field, player)</code>, call <code>move(field, player, 0, -1)</code>? With your input, that would basically be</p>

<pre><code>switch(input) {
case 'up':
    move(field, player, 0, -1);
    break;
case 'right':
    move(field, player, 1, 0);
    break;
case 'left':
    move(field, player, -1, 0);
    break;
case 'down':
    move(field, player, 0, 1);
    break;
}
</code></pre>

<p>I assume you'll have more code, like checking if the move is valid, resetting the <code>field</code> at the current player position, etc., which won't be duplicated this way. A more complete example might be</p>

<pre><code>function move(field, player, dx, dy) {
    // Valid move?
    let newColumn = player.column + dx;
    let newRow = player.row + dy;
    if (newColumn &lt; 0 || newColumn &gt;= WIDTH ||
        newRow &lt; 0 || newRow &gt;= HEIGHT)
        return;
    // Player cannot hit wall
    if (field[newRow][newColumn] == 'X')
        return;

    // Make move
    field[player.row][player.column] = ' ';
    player.column = newColumn;
    player.row = newRow;
    field[player.row][player.column] = 'P'; 
}
</code></pre>

<blockquote>
  <p>Edge cases will be implemented - if the next position is greater than the dimensions of the field, etc. So I'm not sure if this will impact making it more efficient</p>
</blockquote>

<p>It might seem unnecessary to verify <code>newColumn</code> when you're making a move in the y (row) direction, but comparisons like that are extremely cheap and you shouldn't be worried about their performance.</p>
    </div>