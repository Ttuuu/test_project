<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The best performing techniques for filtering arrays employ key-based comparisons. </p>

<p>To prepare your posted data structures for such a technique will require both arrays to have there ids copied to the first level keys.</p>

<p>Once both arrays have id values for keys, you can filter by comparison.</p>

<p>Code: (<a href="https://3v4l.org/VsXt5" rel="nofollow noreferrer">Demo</a>)</p>

<pre><code>$fruits_arr = [
    ['id' =&gt; 213, 'fruit' =&gt; 'banana'],
    ['id' =&gt; 438, 'fruit' =&gt; 'apple'],
    ['id' =&gt; 154, 'fruit' =&gt; 'peach']
];
$ids_arr = [213, 154];

var_export(array_intersect_key(array_column($fruits_arr, null, "id"), array_flip($ids_arr)));
</code></pre>

<p>This is theoretic efficiency, because more effort is required simply to prepare.  It would be better if you could declare these data structures in the necessary structure.</p>

<p>All of the above assumes your ids are unique, if not your data will lose values with duplicated ids.</p>
    </div>