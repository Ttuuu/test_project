<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This looks very interesting. Well done!</p>

<hr>

<p>Here is some nitpicking:</p>

<blockquote>
<pre><code>from yahoofinancials import YahooFinancials
import re
import pygsheets
import pandas as pd
import datetime
</code></pre>
</blockquote>

<ul>
<li>Organise these imports in following way: builtins, third-party then first-party.</li>
</ul>

<blockquote>
<pre><code> def main(sheet, everything,place):
</code></pre>
</blockquote>

<ul>
<li>Name of this function is sloppy. Use <code>main</code> function as an entry-point.</li>
<li>Name the function as a verb phrase or that explains what it is doing.</li>
<li>What is <code>everything</code> here? I can see that it is defined outside as well.</li>
<li>Avoid using <code>everything</code> as a name. It is very vague. </li>
</ul>

<blockquote>
<pre><code>for i in tickers:
    tick = YahooFinancials(i)
</code></pre>
</blockquote>

<ul>
<li>What is <code>i</code> here? Reserve <code>i</code> for integer indexes. These are ticker_names.</li>
<li><code>for ticker_name in tickers</code> is more readable. </li>
</ul>

<blockquote>
<pre><code>tickers = ['XOM', 'JNJ', 'TR', 'CRON', 'HSY', 'FL', 'PLNT', 'MCD', 'ARLP', 'LULU', 'RCII', 'DELL', 'DNKN', 'DIS']
</code></pre>
</blockquote>

<ul>
<li>Load this from a JSON file.</li>
</ul>

<blockquote>
<pre><code>def get_name(person):
</code></pre>
</blockquote>

<ul>
<li>This function doesn't <strong>get</strong> you anything. There is no return.</li>
<li>Why does this call <code>main</code>?</li>
<li>Name to sheet mapping can probably be loaded from a JSON as well.</li>
</ul>

<blockquote>
<pre><code>adjclose, PY to Gsheet Test
</code></pre>
</blockquote>

<ul>
<li>Perform extract constant refactoring on strings like these and remove magic values. </li>
</ul>

<blockquote>
  <p>A magic number is a direct usage of a number in the code.</p>
  
  <p>For example, if you have (in Java):</p>
  
  <pre class="lang-java prettyprint-override"><code>public class Foo {
    public void setPassword(String password) {
         // don't do this
         if (password.length() &gt; 7) {
              throw new InvalidArgumentException("password");
         }
    }
}
</code></pre>
  
  <p>This should be refactored to:</p>
  
  <pre class="lang-java prettyprint-override"><code>public class Foo {
    public static final int MAX_PASSWORD_SIZE = 7;

    public void setPassword(String password) {
         if (password.length() &gt; MAX_PASSWORD_SIZE) {
              throw new InvalidArgumentException("password");
         }
    }
}
</code></pre>
  
  <p>From: <a href="https://stackoverflow.com/questions/47882/what-is-a-magic-number-and-why-is-it-bad">https://stackoverflow.com/questions/47882/what-is-a-magic-number-and-why-is-it-bad</a></p>
</blockquote>

<hr>

<ul>
<li><strong>Summary</strong> - This code is very hard to understand. Functions do things that are completely different from function-name. Variable names are vague. Contains lot of hard-coded values that can be extracted to a JSON or some other kind of config. Contains magic values that should be converted to meaningful constants. </li>
</ul>
    </div>