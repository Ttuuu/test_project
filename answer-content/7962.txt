<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="http://api.stackoverflow.com/1.1/users/string_id">http://api.stackoverflow.com/1.1/users/string_id</a> returns</p>

<pre><code>{
  "error": {
    "code": 404,
    "message": "The server has not found anything matching the Request-URI."
  }
}
</code></pre>

<p>and will raise <code>KeyError</code>s here:</p>

<pre><code>def getUserDisplayName( self, userId ):
    return self.getUserInfo( userId )['users'][0]['display_name']

def getUserViewCount( self, userId ):
    return self.getUserInfo( userId )['users'][0]['view_count']

def getUserReputation( self, userId ):
    return self.getUserInfo( userId )['users'][0]['reputation']
</code></pre>

<hr>

<p><a href="http://api.stackoverflow.com/1.1/users/9924">http://api.stackoverflow.com/1.1/users/9924</a> returns</p>

<pre><code>{
  "total": 0,
  "page": 1,
  "pagesize": 30,
  "users": []
}
</code></pre>

<p>and will raise <code>IndexError</code>s here:</p>

<pre><code>def getUserDisplayName( self, userId ):
    return self.getUserInfo( userId )['users'][0]['display_name']

def getUserViewCount( self, userId ):
    return self.getUserInfo( userId )['users'][0]['view_count']

def getUserReputation( self, userId ):
    return self.getUserInfo( userId )['users'][0]['reputation']
</code></pre>

<hr>

<p>And since you are using <code>userId</code> as an argument to every method, and the <code>StackOverflowFetcher</code> instance is used only for 1 <code>userId</code> â€“ it might me a good idea to add <code>__init__</code> method:</p>

<pre><code>__init__(self, userId):
    # some userId validation
    self.userId = userId
</code></pre>

<p>and save yourself a bit of passing <code>userId</code> around.</p>

<hr>

<p>UPD:</p>

<hr>

<p>If all options are set to <code>True</code>, this will call <code>getUserInfo</code> and, therefore, query api 3 times:</p>

<pre><code>if ( show_display_name ) : print fetcher.getUserDisplayName( userId )
if ( show_view_count) : print fetcher.getUserViewCount( userId )
if ( show_reputation ) : print fetcher.getUserReputation( userId )
</code></pre>

<p>Since you call it at least once any way, you better call it in the <code>__init__()</code>, or just store retrieved value in an instance attribute and use it like this:</p>

<pre><code>def __init__(self, userId):
    #...
    self.userInfo = None

def getUserReputation(self):
    if self.userInfo is None:
        self.userInfo = self.getUserInfo()

    return self.userInfo['users'][0]['reputation']
</code></pre>
    </div>