<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>You can make these <code>#define</code>s:</p>

<pre><code>#define SHA1_DIGESTLENGTH 20
#define SHA1_BLOCK_LENGTH 64
#define COUNTER_LENGTH 8
</code></pre>

<p>into a more concise <code>enum</code>:</p>

<pre><code>typedef enum { COUNTER=8, SHA1_DIGEST=20, SHA1_BLOCK=64 } Length;
</code></pre>

<p>This could also be done with <code>SECRET</code> and <code>COUNTER</code>, but each hex value would need a name.</p>

<p>If you use the <code>enum</code> recommendation, you may need to rename the second <code>COUNTER</code> to avoid possible name-clashing.  Perhaps rename it based on what the counter is for.</p></li>
<li><p>You don't need your own <code>typedef</code>s for these:</p>

<pre><code>typedef unsigned           char uint8_t;
typedef unsigned short     int uint16_t;
typedef unsigned           int uint32_t;
</code></pre>

<p>Prefer to use the <code>typedef</code>s already defined in <a href="http://en.cppreference.com/w/cpp/types/integer" rel="nofollow"><code>&lt;stdint.h&gt;</code></a>.</p></li>
<li><p>For unformatted output with a newline, use <code>puts()</code> instead of <code>printf()</code>:</p>

<pre><code>puts("Some text...");
</code></pre></li>
<li><p>I'd recommend splitting this program into separate functions.  This will make it easier to tell how the it works and make it easier to maintain.  A function should have one purpose, and<code>main()</code> should have minimal implementation (such as acquiring input and calling other functions).</p></li>
<li><p>There's no need to call <code>exit(1)</code> within <code>main()</code>.  Just <code>return 1</code>.</p>

<p>The <code>return 0</code> is also not needed at the end.  Reaching this point implies successful termination, so the compiler will do this return for you.</p></li>
</ul>
    </div>