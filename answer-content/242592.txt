<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm more of a Java guy, but I'll add my 2 cents on the collision detection, because you said it was not always working properly; I think you might solve this by creating a 'vecor' object, or ray. The idea is simple; instead of checking the static shapes, check if the vector intersects a block; and take the first intersection.</p>

<p>In 1D:</p>

<pre><code> t   ---O--------|BLOCK|-----------------
 t+1 ------------|BLOCK|-O---------------
</code></pre>

<p>If the ball is moving quickly it will miss the shape of the block.</p>

<p>Now transform the ball to a 'ray'. If you follow the ray, you'll see it hits the left of the block. </p>

<pre><code> t   ---O--------|BLOCK|-----------------
 ray ---O&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;--------------
</code></pre>

<p>You now know it will collide with the left of the block and can calculate the bounce:</p>

<pre><code> t   ---O--------|BLOCK|-----------------
 ray ---O&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;------------------------
       &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
 t+1 --O---------|BLOCK|-----------------
</code></pre>

<p>So the ball should be at the new position.</p>
    </div>