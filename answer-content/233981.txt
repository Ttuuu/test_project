<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>i want to know can i handle to get compound words in suggestion list.</p>
</blockquote>

<p>You should treat compound words just like any other words. Not every 2 words creates a valid compound word, so to get valid compound words you'd need a list of all compound words anyway.</p>

<pre><code>private static String dictFile = System.getProperty("user.dir") +"\\english.txt";
private static String phonetFile = System.getProperty("user.dir") +"\\phonet.en";
</code></pre>

<p>Your code may not work on different operating systems. It's good practice to use <code>File.separator</code> or <code>FileSystem.normalize</code> to handle proper file paths</p>

<pre><code>SpellDictionary dictionary = new SpellDictionaryHashMap(new File(dictFile));     
spellChecker = new SpellChecker(dictionary);
spellChecker.addSpellCheckListener(this);
</code></pre>

<p>Your <code>SpellCheck</code>, <code>SpellChecker</code> and <code>SpellDictionary</code> are signs of coupiling. Specifically <code>SpellCheck</code> and <code>SpellChecker</code>. </p>

<p>Since you havn't shown us the <code>SpellChecker</code> class, it's hard to suggest something. Just remember to use <strong>high cohesion low coupling</strong>.</p>

<p><em>Note: "SpellDictionary" is okay, but consider renaming so it makes sense on it's own</em></p>

<pre><code>public void spellingError
</code></pre>

<p>This name doesn't really make sense. I'd suggest renaming to <code>handleSpellingError</code> with a javadoc explaining the method logs messages to system output if any spelling errors are found</p>

<pre><code>File ofile = new File(dictFile);
</code></pre>

<p>Not sure what 'o' stands for here, but don't prefix your variables like that.</p>

<pre><code>boolean bflag = false;
</code></pre>

<p>I'm really not a fan of the name. It's like saying "booleanBoolean" since flag is the same as boolean. Again don't use Hungarian notation especially when you're not consistent. Don't change this to "b" or "flag" though, instead give your variables descriptive names based on what they are used for.</p>

<pre><code>if (ofile.exists() &amp;&amp; bflag == false)
</code></pre>

<p>Should checking if the file exists be done at the top of the method? In other words, should the rest of the method be executed if the file does not exist?</p>

<p>Don't put <code>== true</code> or <code>== false</code> in your if statements, it's redundant. Instead you can use <code>&amp;&amp; !bflag</code> or <code>&amp;&amp; bflag</code> for true.</p>

<pre><code>// Remove any commas and dots.
word = word.replace(".", "");
word = word.replace(",", "");
</code></pre>

<p>This could be refactored as <code>word = word.replace(",", "").replace(".", "");</code></p>

<p>It could also be it's own method.</p>

<pre><code>int nmode = Integer.parseInt(args[0]);
</code></pre>

<p>Same as before don't use Hungarian notation, especially a wrongly implemented Hungarian notation</p>
    </div>