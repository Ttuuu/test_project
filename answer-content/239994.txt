<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Having taken into account the feedback I got from the three answers that were posted, plus using my own brain, I think a good revision of the code in the question entails:</p>

<ol>
<li><p>ensuring <code>signs</code> is a vector instead of a matrix by using <code>,</code> right before assigning;</p></li>
<li><p>moving the definition of the function <code>isInsideBoard</code> closer to where it is used;</p></li>
<li><p>renaming the function <code>isInsideBoard</code> to <code>IsInside</code> and rename the corresponding variable to <code>inside</code>;</p></li>
<li><p>removing unnecessary parentheses in the <code>IsInside</code> function but keeping a space to separate the final <code>∧/</code> from the fork <code>1∘≤∧≤∘8</code>;</p></li>
</ol>

<p>All in all, the code ends up looking like this:</p>

<pre><code>KnightMovesRevised ← {
  ⍝ Monadic function, expects a vector with 2 integers, e.g. (1 1)
  ⍝ Given a chess board position, find the legal knight moves.
  ⍝ Returns vector of 2-integer vectors, e.g. (2 3)(3 2)

  ⍝ List all the locations the knight could go to
  signs ← , ¯1 1 ∘., ¯1 1
  offsets ← (1 2)(2 1)
  moves ← , signs ∘.× offsets
  locations ← moves + ⊂⍵

  ⍝ Find which ones are inside the chess board
  IsInside ← ∧/ 1∘≤∧≤∘8
  inside ← IsInside¨ locations
  inside/locations
}
</code></pre>
    </div>