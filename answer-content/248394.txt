<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>DISCLAIMER ˆ_ˆ</h2>
<p>I'm not a reviewer, will be commenting on your regular expression though.</p>
<h2>Comments</h2>
<ul>
<li>I guess you don't have to escape <kbd>{</kbd> or <kbd>}</kbd>.</li>
<li><code>\w</code> construct would already cover <code>0-9</code>, the <code>\d</code> construct can be removed then <code>(?:^|[^\\])(\{([\w\s]*)\})</code>.</li>
<li>Since we're using a character class (<code>[]</code>), maybe we'd just list our desired chars right in there without using any construct (e.g., <code>[A-Za-z0-9 ]</code>).</li>
<li>My guess is that <code>{}</code> would be an undesired/invalid input, which if that'd be the case, we'd use <code>+</code> greedy quantifier instead of <code>*</code>.</li>
<li>I see some capturing groups, maybe we could remove some of those also, if that'd be OK. Reducing the number of capturing groups would help in memory complexity, even though memory is not usually such a big thing (here).</li>
</ul>
<p>Based on these comments, maybe your expression could be modified to:</p>
<pre><code>(?:^|[^\\\r\n]){([A-Za-z0-9 ]+)}
</code></pre>
<h2>Demo</h2>
<p>If you wish to simplify/update/explore the expression, it's been explained on the top right panel of <a href="https://regex101.com/r/AT0mSq/1/" rel="nofollow noreferrer">regex101.com</a>. You can watch the matching steps or modify them in <a href="https://regex101.com/r/AT0mSq/1/debugger" rel="nofollow noreferrer">this debugger link</a>, if you'd be interested. The debugger demonstrates that how <a href="https://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines" rel="nofollow noreferrer">a RegEx engine</a> might step by step consume some sample input strings and would perform the matching process.</p>
<h3>RegEx Circuit</h3>
<p><a href="https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24" rel="nofollow noreferrer">jex.im</a> visualizes regular expressions:</p>
<p><a href="https://i.stack.imgur.com/JHWbJ.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/JHWbJ.png" alt="enter image description here"></a></p>
<h3>Performance</h3>
<p>This expression</p>
<pre><code>^{([A-Za-z0-9 ]+)}|[^\\\r\n]{([A-Za-z0-9 ]+)}
</code></pre>
<p>has a better performance as compared to the first one</p>
<pre><code>(?:^|[^\\\r\n]){([A-Za-z0-9 ]+)}
</code></pre>
<p>in terms of time complexity. You can look into the number of steps in the demo. Finding ways to bypass alternation (<code>|</code>) is usually a good thing, it would help in runtime.</p>
<h3><a href="https://regex101.com/r/Zc3Qjr/1/" rel="nofollow noreferrer">RegEx Demo</a></h3>
<h1>Overall looks very good!!!</h1>
    </div>