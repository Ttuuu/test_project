<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If using just <code>os.path</code>, this looks almost perfect.</p>

<ul>
<li>Move <code>folder</code> into the global scope, as there's no point not to. It means that the function can be made simpler - as it's now split into two seperate entities.</li>
</ul>

<pre class="lang-py prettyprint-override"><code>FOLDER = os.path.dirname(os.path.abspath(__file__))


def file_path(relative_path):
    return os.path.join(folder, *relative_path.split("/"))
</code></pre>

<hr>

<p>It would be better if you used <code>pathlib</code>. This is the modern version of <code>os.path</code>. If you do, then I would recomend just making <code>folder</code> as there would be no need for the function.</p>

<pre class="lang-py prettyprint-override"><code>FOLDER = pathlib.Path(__file__).resolve().parent

with (FOLDER / 'my_files/zen_of_python.txt').open() as f:
    ...
</code></pre>

<p>Here are some examples of running it on Windows in Python 3.8.</p>

<pre class="lang-py prettyprint-override"><code>&gt;&gt;&gt; import pathlib
&gt;&gt;&gt; FOLDER = pathlib.Path('foo')
&gt;&gt;&gt; FOLDER / 'bar/baz'  # Unix style
WindowsPath('foo/bar/baz')
&gt;&gt;&gt; FOLDER / 'bar\\baz'  # Windows style
WindowsPath('foo/bar/baz')
&gt;&gt;&gt; FOLDER / 'bar' / 'baz'  # Pathlib style
WindowsPath('foo/bar/baz')
</code></pre>
    </div>