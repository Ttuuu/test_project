<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your marker interface has no added value. In fact, it's an anti-pattern because you provide a generic type parameter on an interface <code>ICommand</code>, only to enforce it on another interface <code>ICommandResult</code>.</p>

<blockquote>
<pre><code>public interface ICommand&lt;TResultData&gt;
{ }

public interface ICommandHandler&lt;TCommand, TResultData&gt;
    where TCommand : ICommand&lt;TResultData&gt;
{    
    CommandResult&lt;TResultData&gt; Handle(TCommand command);
}
</code></pre>
</blockquote>

<p>Since specific commands have nothing in common, I would not create an interface for commands. Also, <code>TResultData</code> has nothing to do with a command, and everything with the command result. </p>

<p>The handler could be rewritten as follows:</p>

<pre><code>public interface ICommandHandler&lt;TCommand, TResultData&gt;
{    
    CommandResult&lt;TResultData&gt; Handle(TCommand command);
}
</code></pre>
    </div>