<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To produce the set of records only in <code>cars</code>, but not in <code>drivers</code>, you perform a left outer join, then exclude the records you don't want from the right side via a where clause.</p>

<p>In Rails 6 you do this in this way:</p>

<pre class="lang-rb prettyprint-override"><code>Car.left_outer_joins(:drivers).where(car_drivers: { id: nil })
</code></pre>

<p>Take a look at this article: <a href="https://blog.codinghorror.com/a-visual-explanation-of-sql-joins/" rel="nofollow noreferrer">A Visual Explanation of SQL Joins</a>. It may help you figure out how to do some queries.</p>

<p>Aside from this, a good way to iterate over an array to select some elements according to a condition is to use the <a href="https://ruby-doc.org/core-2.6.5/Enumerable.html#method-i-select" rel="nofollow noreferrer"><code>select</code></a> method. Using <code>select</code> your code would be like this:</p>

<pre class="lang-rb prettyprint-override"><code>result = Car.all.select { |car| car.drivers.empty? }
</code></pre>

<p>But that is not the way to go here, I'm just showing how to use <code>select</code>.</p>

<p>Also, if you want only the <code>id</code> from the cars, you can add <code>pluck(:id)</code> at the end of the query. This is going to get only the <code>id</code> field from the database. Or you just use the method <code>ids</code> but the <code>pluck</code> method works for any field.</p>
    </div>