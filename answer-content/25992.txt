<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have several suggestions: </p>

<ol>
<li><p>For readability I would suggest to introduce <code>enum</code>s like</p>

<pre><code>public enum SeatType {
    FIRSTCLASS, ECONOMY }
</code></pre>

<p>If you have to make several decisions depending on the seats type <code>SeatType.FIRSTCLASS</code> reads better, than perhaps <code>seatnumber&lt;5</code>.</p></li>
<li><p>You are doing twice the same thing: Iterating through a partial array.</p>

<p>It would be more streamlined if you write a method for both cases, like:</p>

<pre><code>private Integer tryReservation(SeatType s) {
    Integer reservation=null;
    int start=(s==SeatType.FIRSTCLASS)?firstClassStart:economyStart;
    int stop=start+capacity;
    for(int number=start;number&lt;stop;number+=1){
        if(seats[number]==free){
            seats[number]=!free;
            reservation=number;
            break;
        }
    }
    return reservation;
}
</code></pre>

<p>This makes the following possible:</p>

<pre><code>private Integer makeReservation(SeatType s) {
    SeatType alternative=getAlternative(s);
    Integer reservedSeat=tryReservation(s);
    if(reservedSeat==null &amp;&amp; !isClassFull(alternative)){
        if(alternativeWanted){
            reservedSeat=tryReservation(alternative);
        }
    } 
    return reservedSeat;
}
</code></pre>

<p>So your code becomes much smaller. And the number of if-else-whatelse decreases a lot.</p></li>
</ol>
    </div>