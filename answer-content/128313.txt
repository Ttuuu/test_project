<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you can only change a bool once, and the entire purpose of a loop is to set the bool, then you should just exit the loop after the bool gets changed.  There's no point in looping more than you need to, and you also don't have to worry about the bool getting switched back.  So you can write your example like this:</p>

<pre><code>bool SomeMethod()
{
    foreach(var obj in objs)
    {
        if(!obj.Method())
        {
            return false;
        }
    }
    return true;
}
</code></pre>

<p>You can use <code>Enumerable.All()</code> for this logic:</p>

<pre><code>bool SomeMethod()
{
    return objs.All(x =&gt; x.Method());
}
</code></pre>

<p>An alternative to <code>if(!x) y = x;</code> in your situation is <code>y = y &amp;&amp; x;</code></p>
    </div>