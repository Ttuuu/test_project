<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The most basic method of checking the primality of a given integer n is called trial division. This method divides n by each integer from 2 up to the square root of n. Any such integer dividing n evenly establishes n as composite; otherwise it is prime. Integers larger than the square root do not need to be checked because, whenever n=a * b, one of the two factors a and b is less than or equal to the square root of n. Another optimization is to check only primes as factors in this range. For instance, to check whether 37 is prime, this method divides it by the primes in the range from <span class="math-container">\$2\ to\ âˆš37\$</span>, which are <span class="math-container">\$2, 3,\ and\ 5\$</span>. Each division produces a nonzero remainder, so 37 is indeed prime (from wikipedia).</p>
<pre><code>import math
def prime(x):
    r = int(math.sqrt(x))
    for i in range(2, r + 1):
        if x % i == 0:
            return False
    return True
</code></pre>
    </div>