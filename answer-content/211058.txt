<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In general, React disapproves playing with tis internal lifecycle function such has <code>render</code> or <code>setState</code> has it may cause unexpected behavior later on in your app.</p>

<p>Everything that you put in a Component's state is only readable by this component, and nothing else. As the docs will also tell you, the state may only be modified by the <code>setState</code> function, as it will avoid unexpected behaviors in the re-rendering process.</p>

<p>If some components need to modify what each others are going to render, then the values determining the ouput of their render function should be stored in their first common parent component.</p>

<p>A working live implementation :</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="true">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>class Test extends React.Component {
	constructor(props) {
		super(props)
		this.state = {}
	}

	setText = (source, dest) =&gt; event =&gt; {
		this.setState({ 
			[dest]: `Received text: Component nÂ°${source + 1} set my text`,
			[source]: 'I got clicked!'
	 	})
	}

	render() {
		return (
			&lt;div&gt;
				{[1, 2, 0].map((dest, index) =&gt; &lt;WrappedComponent onClick={this.setText(index, dest)} text={this.state[index]}/&gt;)}
			&lt;/div&gt;
		);
	}

}

class WrappedComponent extends React.Component { //I left this component stateful for future modifications

	render() {
		const { text, onClick } = this.props
		return (
			&lt;div onClick={onClick}&gt;{text || 'No one defined my text (yet)'}&lt;/div&gt;
		)
	}
}

ReactDOM.render(&lt;Test/&gt;, document.getElementById('root'))</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/16.5.0/umd/react.production.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.5.0/umd/react-dom.production.min.js"&gt;&lt;/script&gt;
&lt;div id='root'/&gt;</code></pre>
</div>
</div>


<p>Here every component's text is stored in their parent component dynamically.</p>
    </div>