<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>While there are examples of how the code can be used, it would be helpful for anyone reading the code (including your future self) to have a comment block above each method to describe the purpose, parameters, return value and any possible error that could be thrown.</p>
<hr>
<p>The question is tagged with <a href="/questions/tagged/performance" class="post-tag" title="show questions tagged 'performance'" rel="tag">performance</a>- are you trying to optimize the code for speed? If so, it would be better to use a <code>for</code> loop instead of functional methods that use iterators - e.g. <code>Array.prototype.forEach()</code>, <code>Array.prototype.indexOf()</code>.</p>
<hr>
<p>Has the code been tested? Are there any unit tests for the module? If not, it would be wise to create tests to cover all aspects of the code.</p>
<p>Correct me if I am wrong but looking at how the <code>off()</code> method is implemented my presumption is that the call from <code>once()</code> will not actually remove any callback, given that a wrapped function is registered instead of the callback parameter.</p>
<hr>
<p>There appears to be no validation that the <code>callback</code> is a function. This could lead to an error if some other type is passed in that parameter.</p>
<hr>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#Property_definitions" rel="nofollow noreferrer">The shorthand property definition notation</a> can be used to simplify the following lines:</p>
<blockquote>
<pre><code> return {
    on: on,
    once: once,
    off: off,
    emit: emit,
    getListeners: getListeners
  }
</code></pre>
</blockquote>
<p>To this:</p>
<pre><code>return {
    on,
    once,
    off,
    emit,
    getListeners
  }
</code></pre>
<hr>
<p>You may be interested in reading the responses I received on similar code I wrote- see <a href="https://codereview.stackexchange.com/q/201326/120114">Event emitter npm module</a></p>
    </div>