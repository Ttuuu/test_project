<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The only repetition is the management of the connection and preparation of the statement. You can move the preparation and execution to some dedicated methods</p>

<pre><code>ResultSet query(String statement, Object... parameters) {
    try {
        return prepare(statement, parameters).executeQuery();
    } catch (SQLException e) {
        throw new AssertionError(e);
    } 
}

PreparedStatement prepare(String statement, Object... parameters) {
    try (
        Connection c = ConnectionFactory.getConnection();
        PreparedStatement pstmt = c.prepareStatement(query)
    ) {
        for (int i=0; i&lt;parameters.length; i++){
            setParameter(stmt, i+1, parameters[i]);
        }
        return pstmt;
    } catch (SQLException e) {
        throw new AssertionError(e);
    }        
}

void setParameter(PreparedStatement pst, int index, Object parameter) {
    Class&lt;?&gt; type = parameter.getClass();
    if ( Integer.class.equals(type) || Integer.TYPE.equals(type ) {
        pst.setInt(index, parameter);
    } else if ( .. ) {
      ...
    } else {
       pst.setString(index, String.valueOf(parameter); 
    }
}
</code></pre>

<p>But you still have to manage the <code>SQLException</code> that can be thrown by the <code>ResultSet</code> so you can create another method that map a <code>ResultSet</code> but take care of the exceptions :</p>

<pre><code>&lt;T&gt; T doWith(ResultSet rs, ResultSetMapper&lt;ResultSet, T&gt; mapper) {
    try {
        return mapper.apply(rs);
    } catch (SQLException e) {
        throw new AssertionError(e);
    }
}
</code></pre>

<p>So that, at the end, you should be able to end up with something like :</p>

<pre><code>public static boolean isUserInDatabase(String userID) {
    return doWith(query(GET_SQL, userId), rs -&gt; rs.next());
}
</code></pre>

<p><strong>Warn</strong> the code has not been tested and the exception handling can be greatly improved.</p>
    </div>