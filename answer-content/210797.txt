<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is one thing that struck me most namely that you use event handlers for the buttons:</p>

<blockquote>
<pre><code>Click="Click_Button"
</code></pre>
</blockquote>

<p>The WPF or rather MVVM way would be to use commands to handle these actions. This way you could get rid of all the ugly <code>switch</code> with <code>case "menu":</code> etc. </p>

<blockquote>
<pre><code>public partial class GameScreen : UserControl
</code></pre>
</blockquote>

<p>The <code>UserControl</code> would then become a <code>GameScreenModel</code> that you would <em>data-bind</em> to the window.</p>

<p>Also all your visibility assignments like <code>dashboard.Visibility = Visibility.Visible;</code> could be driven much easier and automatically by binding them to dependency properties on the <code>GameScreenModel</code>. It might also be necessary to create a custom converter from a <code>GameScreenModel</code> property like an enum to <code>Visibility</code>. You could then setup nearly everything declaratively in XAML only.</p>
    </div>