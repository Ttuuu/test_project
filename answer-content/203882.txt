<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It is OK to use <code>File.ReadLines(...)</code> because it actually is shortcut to <code>StreamReader.ReadLine()</code> (Not to be confused with <code>File.ReadAllLines()</code>).</p>

<hr>

<p>I wonder why you reopen the same file for each line you want to save. I would do something like this:</p>

<pre><code>  byte[] arrayByte = { 0x00 };

  using (var stream = new FileStream(fileName + "_gugggu", FileMode.Create))
  {
    foreach (string line in File.ReadLines(fileName).Where(l =&gt; l.Contains(":10")))
    {
      ...
</code></pre>

<p>This may be the real bottleneck.</p>

<hr>

<p>I think </p>

<pre><code>      string partialA = line.Substring(9);
      string partialB = partialA.Remove(partialA.Length - 2);
</code></pre>

<p>is the same as:</p>

<pre><code>      string subString = line.Substring(9, line.Length - 11); // 11 = 9 + 2
</code></pre>

<hr>

<p>All  in all it could be changed to :</p>

<pre><code>  byte[] arrayByte = { 0x00 };

  using (var stream = new FileStream(fileName + "_gugggu", FileMode.Create))
  {
    foreach (string line in File.ReadLines(fileName).Where(l =&gt; l.Contains(":10")))
    {
      string subString = line.Substring(9, line.Length - 11);
      arrayByte = ToByteArray(subString);
      stream.Write(arrayByte, 0, arrayByte.Length);
    }
  }
</code></pre>
    </div>