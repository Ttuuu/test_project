<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Open the toolbox</h2>

<p>The hard part may be accomplished using <code>watch</code>, the filtering may be done using <code>sed</code>.</p>

<pre><code>#!/bin/bash -eu
# Number of lines of code in a directory

files=(*.py *.h *.cpp)

shopt -s nullglob

if [[ $# -ne 1 ]]; then
   echo "usage: wc_code directory"
   exit 1
fi

if [[ ! -d $1 ]]; then
  echo "no such directory: $1"
  exit 1
fi

cd "$1" &amp;&amp; sed '/^[[:space:]]*$/d' ${files[@]} | wc -l
</code></pre>

<p><code>wc_code</code> is the script name located in the search path. <code>/home/user/dir</code> is a directory containing source files.</p>

<pre><code>prompt% watch wc_code /home/user/dir
</code></pre>

<p>Note: the sample code may be improved, it may also depend on your preferences. For instance, the previous script may be replaced by <code>watch 'sed /^[[:space:]]*$/d *.py *.cpp *.h | wc -l'</code>.</p>

<h2>See Also</h2>

<ul>
<li>for a concise explanation about using the shell: <a href="https://unix.stackexchange.com/a/169765/286944">Why is using a shell loop to process text considered bad practice?</a></li>
<li>for a conceptual overview of commands: <a href="http://www.gnu.org/software/coreutils/manual/coreutils.html#Opening-the-software-toolbox" rel="nofollow noreferrer">Opening the software toolbox</a></li>
</ul>

<p><em>My personal opinion is that we can easily achieve the same task in broad stokes. The number of lines of source code is not necessarily a determining criterion.</em></p>

<pre><code>watch wc -l *.py .*cpp *.h
</code></pre>

<h2>Retrospective</h2>

<p>If your task is specific it is probably better to develop a new program than to create a shell script because shell utilities can perform <em>common tasks.</em></p>
    </div>