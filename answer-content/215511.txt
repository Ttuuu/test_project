<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is going to be somewhat more conversational on things to do or don't looking at it as if you'd shown this in the course of an interview. Any response with respect to an interview example would always take into account the amount of experience that the candidate is claiming to have. Note, I am also writing this in the way I am looking at the code, noticing superficial things first and then looking closer and closer at the implementation.</p>

<p>My first question would be about the padding, and if you wouldn't be able to answer as to why it is important here or why you added it (saying that there was a warning wouldn't be a sufficient answer), what it does, and what the issues are whether this works under 32 and 64 bit architectures, etc... . If you can't answer these questions it would be a bad sign for me. For interviews don't use features in your code that you can't explain. </p>

<p>I'd definitely ask you why you didn't use <code>std::unique_ptr</code> as this would remove large swaths of the code, it's a feature of c++11 in an interview i'd probably expect to see that. I'd probably also ask whether you thought about making the interface closer to the standard library calls e.g. <code>get_back()</code> vs <code>back()</code> or <code>is_empty()</code> vs <code>empty()</code>.</p>

<p>Note that most of these are actually superficial but they are really easy to pick up on a first look, without even having to think about if the code is correct or not (which would be more work on my side) there are already a ton of things to talk about that might let me exclude you as a candidate. The quicker you can be excluded, the less work for everybody. </p>

<p>So on closer look, you'd get dinged for returning a valid piece of data on failure in <code>get_back()</code> and <code>get_front()</code>. Here you are return 0 if there aren't any items, this is really a big issue. This would start a discussion on error handling in general, what could you have done, what <em>did</em> you do just a few lines above that section. </p>

<p>I see a bug in <code>pop_front()</code> first I'd ask you to look at it and we'd try to find it together. You decrease size before the check if the queue is empty, this would make size incorrect. Looking at the bug also made me notice that you never tested popping from the empty list. Now that I have seen the first bug, i'm looking closer and there is another bug that leaks the first nodes memory if its the last item. If we haven't talked about <code>unique_ptr</code> up to this point, I'd ask now. </p>

<p>Depending on how your responses are we might talk about some general points, i'd comment that you're probably putting out too much text on <code>&lt;&lt;</code>, i'd ask if the <code>to_string()</code> in the demo code is really necessary. I'd comment on your style for member variables (pet peeve). Leading underscores are iffy at best with regard to their use, the standard reserves names with leading underscores in combination with capital letters and double underscores, so you're just one keystroke away from code that violates that. I'd also remark that the test code could have used some assertions rather than just output, this would have made things much more like a unit test, and if there is time we might talk about what you know about unit testing. </p>

<p>When I interview, i take any issue I see as an opportunity to talk about what caused it, what might remedy it, why the candidate did this. The answers to these questions may matter more than the actual code.</p>
    </div>