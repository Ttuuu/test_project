<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Keep it simple</h1>
<p>Your algorithm is too complex, with too many iterations and uses too much memory. It can be simplified using only a single outer iteration to get a row, and the row's max height. Then an inner loop to set the new height values. (see rewrite)</p>
<p>Some points</p>
<ul>
<li><p><code>document.querySelectorAll</code> returns an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols" rel="nofollow noreferrer">iterable</a> object. There is no need to convert it to an array. You can use <code>for of</code> or any of the iteration features on it. EG <code>document.querySelectorAll("query string").forEach(</code> and <code>[...document.querySelectorAll("query string")]</code></p>
</li>
<li><p>You only need to use <code>.getAttribute</code> when the attribute is not part of the DOM. <code>const height = element.height</code> is more concise.</p>
</li>
<li><p>You can use the <code>Math</code> function <code>max</code>  to get the maximum of 2 or more values at a time. <code>maxHeight = Math.max(maxHeight, element.height)</code></p>
</li>
<li><p>Don't pollute the global scope. Use a self invoking function to encapsulate your variables.  <code>;(()=&gt;{ /* your code in here */ })();</code></p>
</li>
</ul>
<h2>Rewrite</h2>
<pre><code>;(() =&gt; {
    "use strict";
    const itemsPerRow = 3;
    const query = ".summary-image-wrapper";
    const minHeight = 100; // Maybe a min height just in case

    const row = [];
    var maxHeight = minHeight;

    document.querySelectorAll(query)
        .forEach((imgWrap, i, imgWrappers) =&gt; {
            row.push(imgWrap);
            maxHeight = Math.max(imgWrap.firstElementChild.height , maxHeight);

            if (row.length === itemsPerRow || i === imgWrappers.length - 1) {
                row.forEach(imgWrap =&gt; imgWrap.style.height = `${maxHeight}px`);
                maxHeight = minHeight;
                row.length = 0;
            }
        });
})();
</code></pre>
    </div>