<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Okay, so I'll admit I am a little bit rusty right now on some best practices, but I'm doing this anyway.</p>

<p>First, this whole thing needs to be wrapped in a <code>sub</code> I assume. </p>

<p>Second, when I read the description of what you need to create, it screams at me "<strong>objects!</strong>" - what I mean is that you have an interactive app that needs to keep track of auction items. Each item has several attributes. Sounds like the basis for some <em>object-oriented design</em> doesn't it? e.g.</p>

<pre><code>Public Class AuctionItem
    Public Property description As String
    Public Property reservePrice As Integer
    Public Property numberOfBids As Integer
    Public Property currentBid As Integer
    Public Property currentBidder As Integer
End Class
</code></pre>

<p>So right out of the gate, now you have a structure for the items at the auction, before doing anything else. And each item has properties. And now you just handle a list of the room you're talking about</p>

<pre><code>Dim firstRoom As New List(Of AuctionItem)
</code></pre>

<p>Ignoring the minimum entry requirement, you could simply create your auction on the fly -</p>

<pre><code>    Dim firstRoom As New List(Of AuctionItem)
    Dim numberOfEntries As Integer
    Console.WriteLine("How many total entries?")
    numberOfEntries = Console.ReadLine
    For i As Integer = 1 To numberOfEntries
        firstRoom.Add(New AuctionItem)
        Console.WriteLine("Enter item description")
        firstRoom(i).description = Console.ReadLine
        Console.WriteLine("Enter reserve price") 'The reserve price is the minimum amount the seller is willing to accept' 
        firstRoom(i).reservePrice = Console.ReadLine
    Next
</code></pre>

<p>See what I mean? Now <strong>you</strong> assign the item number and when a bidder wants to bid on it, you just access that object and get what you need.</p>

<p>Another small thing I noted is that you aren't type checking entries - say I want to say my item number is "two" - the program throws an unhandled error and crashes. You expect an integer, so you need to check you receive an integer.</p>

<p>Sorry, that's all I got right now.</p>
    </div>