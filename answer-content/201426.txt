<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Because you replied to my question: </p>

<blockquote>
  <p>are there any columns in the <code>lecturers_general</code> table that should not go into JSON data? </p>
</blockquote>

<p>With the answer:</p>

<blockquote>
  <p>Nope... all columns are to be returned.</p>
</blockquote>

<p>Initially I thought one could utilize <a href="http://php.net/manual/en/mysqli.query.php" rel="nofollow noreferrer"><code>mysqli_query()</code></a> and <a href="http://php.net/manual/en/mysqli-result.fetch-all.php" rel="nofollow noreferrer"><code>mysqli_fetch_all()</code></a> but that apparently didn't work unless the native MySQL driver is installed.</p>

<p>But to borrow from a technique outlined in <a href="http://php.net/manual/en/class.mysqli-stmt.php#113946" rel="nofollow noreferrer">the User Contributed note by anonunfinder at gmail dot com</a>, the field names can be fetched via <a href="http://php.net/manual/en/mysqli-stmt.result-metadata.php" rel="nofollow noreferrer"><code>mysqli_stmt_result_metadata()</code></a></p>

<pre><code>//check connection, prepare statement, execute $statement
mysqli_stmt_execute($statement);
$data = array();
$variables = array($statement);
$meta_statement = mysqli_stmt_result_metadata($statement);
while($field = mysqli_fetch_field($meta_statement)) {
    $variables[] = &amp;$data[$field-&gt;name];
}
</code></pre>

<p><a href="http://php.net/manual/en/language.references.whatdo.php#language.references.whatdo.assign" rel="nofollow noreferrer">Reference Assignment</a> is used within the <code>while</code> loop: <code>&amp;$data[$field-&gt;name]</code> to push the value of each field's value from <code>$data</code> into the array <code>$variables</code>. <a href="https://stackoverflow.com/a/8175111/1575353">This SO answer</a> gives more explanation about that concept.</p>

<p>Then utilize <a href="http://php.net/manual/en/function.call-user-func.php" rel="nofollow noreferrer"><code>call_user_fun_array()</code></a> to bind the result variables from <code>$variables</code>:</p>

<pre><code>//dynamically pull the variables from the bound statement
call_user_func_array('mysqli_stmt_bind_result', $variables);
$lecturers = array();
for($i=0; $row = mysqli_stmt_fetch($statement); $i++) {
    $lecturers[$i] = array();
    foreach($data as $key =&gt; $value) {
        $lecturers[$i][$key] = $value;
    }
}
</code></pre>

<p>Then check the count of <code>$lecturers</code> - if it is greater than zero, encode the results - otherwise return the no results string literal.</p>

<pre><code>if (count($lecturers) &gt;= 1) {
    echo json_encode(array('lecturers: ' =&gt; $lecturers));
} else {
    echo 'No results';
}
</code></pre>

<p>That way there is no need to add extra variables (e.g. <code>$lecturer_id</code>, <code>$title</code>, etc.).</p>
    </div>