<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm pleased to see you included DDL and dataload SQL. This makes reviewing a bliss.</p>

<h3>Design</h3>

<p>There isn't really much I can say about this design. You wondered whether your many-to-many relation is well being dealt with. Well, you created a <em>composite primary key</em>, which is correct for this design because a car and a feature are not strongly dependent on each other. In other words, a car can have many features and a feature can be deployed on numerous cars.</p>

<blockquote>
  <p><code>PRIMARY KEY (car_id, feature_id)</code></p>
</blockquote>

<p>It is also correct to create a <em>foreign key</em> for each of the fields that make up the <em>primary key</em>.</p>

<blockquote>
<pre><code>FOREIGN KEY fk_car (car_id) REFERENCES car (car_id),
FOREIGN KEY fk_feature (feature_id) REFERENCES feature (feature_id),
</code></pre>
</blockquote>

<p>In addition, I would like to comment on the choice of names. You use the table name in the name of the primary key (<code>feature</code> -&gt; <code>feature_id</code>). I find this good practice. It adds readability, specially when you reuse the same name for foreign keys to this field in other tables.</p>

<blockquote>
<pre><code>INNER JOIN feature ON car_feature.feature_id = feature.feature_id
</code></pre>
</blockquote>

<p>One extension on the design you could make, is to add a table <code>model_feature</code> to describe which features are compatible with a model. This way, <code>car_feature</code> could have a constraint on <code>model_feature</code>.</p>

<h3>Formatting</h3>

<p>I would prefer more symmetrical alignment of statements, again for readability.</p>

<pre><code>CREATE TABLE maker (
    maker_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(128) NOT NULL,
    PRIMARY KEY (maker_id) 
);
</code></pre>

<blockquote>
<pre><code>REATE TABLE maker (
maker_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
name VARCHAR(128) NOT NULL,
PRIMARY KEY (maker_id) );
</code></pre>
</blockquote>

<p>Or with insert statements:</p>

<pre><code>INSERT INTO car (model_id, plate) VALUES
    (2, "KACA672")
  , (1, "TER814")
  --, (3, "GWN294") this makes it easier to comment out lines
;
</code></pre>

<blockquote>
<pre><code>INSERT INTO car (model_id, plate) VALUES
    (2, "KACA672"), (1, "TER814"), (3, "GWN294");
</code></pre>
</blockquote>
    </div>