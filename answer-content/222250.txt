<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here's my answer. Note I did not touch the html. We could attack both the javascript and the html and condense them both, but I think that just one file change is necessary right now.</p>

<pre><code>$(document).ready(function () {

    // Global variables

    var targetNumber;
    var userTotal = 0;
    var wins = 0;
    var losses = 0;

    // Functions

    function reset() {
        for(var i = 0; i &lt; crystals.length; i++) {
            crystals[i].setAttribute("score", Math.floor(Math.random() * 11 + 1))
        }
        targetNumber = Math.floor(Math.random() * 101 + 19);
        userTotal = 0;
        $("#total-score").text(userTotal);
        $("#target-score").text(targetNumber);
    }

    function initialize() {
        crystals = document.getElementsByTagName("img")
        for(var i = 0; i &lt; crystals.length; i++) {
            crystals[i].setAttribute("score", Math.floor(Math.random() * 11 + 1))
            crystals[i].addEventListener("click", (args) =&gt; {
                value = Math.round(args.target.getAttribute("score"))
                userTotal = userTotal + value;
                $("#total-score").text(userTotal);
                console.log(userTotal);
                logic();
            })
        }
        targetNumber = Math.floor(Math.random() * 101 + 19);
        $("#target-score").text(targetNumber);
        $("#wins").text(wins);
        $("#losses").text(losses);
        $("#total-score").text(userTotal);
    }
    function logic() {
        if (userTotal === targetNumber) {
            alert("You Win!");
            reset();
            wins++;
            $("#wins").text(wins);
        }
        else if (userTotal &gt; targetNumber) {
            alert("You lose!");
            reset();
            losses++;
            $("#losses").text(losses);
        }
    }

    initialize();
});
</code></pre>

<p>You're right when you say it would be difficult to loop through each element and increase the user's score by a preset random value. Instead, we make that random score part of the element. We can get all the crystals by getting all the images in the document (with the <i>document.getElementsByTagName(tagname)</i> function). This returns a list of the html elements.</p>

<p>We can set the random value in the initialize function, with the <i>setAttribute()</i> function. This takes in two parameters: first, the new attribute name; second, the attribute's value. At the outset (and in each reset of the game), we set it to the new random value. </p>

<p>Now we have an iterating loop through the four crystals, and each crystal has a new html attribute which contains its score. Now all we need to do is add the event listeners. We'll do that in the same for loop. Simply use the <i>addEventListener(event, f)</i> function. It takes in a string for what event to activate on, and a function to execute when that event is triggered. When the crystal is clicked, we'll want to get the value in the attribute, add it to the user's total, change the text, log it, and call logic!</p>

<p>That's pretty much it. I also removed the declarations for the 'numx' variables. </p>
    </div>