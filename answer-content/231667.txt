<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't think your JSON validation function is very useful because it does more or less what does the <code>json_decode</code> function itself, except that it tests if the result is an array or an object (that is useless too, since <code>buildVirtualData</code> always uses <code>json_decode</code> with the second parameter set to <code>true</code> and since the <code>$_POST</code> variable can't contain an object but only strings and arrays.).</p>

<p>Always use a strict comparison with null when you want to check the return of <code>json_decode</code> for validity. As a counter-example, elements like an empty string, 0 or <code>false</code> that are valid JSON themselves,  return <code>true</code> in this non-strict comparison: <code>var_dump(json_decode('""') == null);</code></p>

<p>Manualy replacing the strings "true" or "false" with a boolean isn't needed since <code>json_decode</code> does that automatically.</p>

<p>You can rewrite your function like that:</p>

<pre><code>function buildVirtualData($var) {

    if ( is_string($var) ) {

        $json = json_decode($var, true);

        if ( $json !== null )
            $var = $json;

    }

    if ( is_array($var) )
        return array_map('buildVirtualData', $var);

    return $var;
}
</code></pre>

<p><a href="https://3v4l.org/JZ0i4" rel="nofollow noreferrer">demo</a></p>
    </div>