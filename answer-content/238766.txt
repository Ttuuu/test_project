<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's definitely a lot of duplicate code in those 2 <code>if</code>s. I'd extract it into function and pass different things as parameters.</p>

<p>Then code would look let's say:</p>

<pre><code>//not sure about name of function and parameters
function nodeFieldPerType(filePath, getNodePath) {
  if (
    node.internal.type === "Mdx" &amp;&amp;
    node.fileAbsolutePath.includes(filePath)
  ) {
    const value = createFilePath({ node, getNode })
    createNodeField({
      name: "slug",
      node,
      value: getNodePath(value),
    })
  }
}
</code></pre>

<p>Then you call it like like:</p>

<pre><code>nodeFieldPerType(`content/posts`, value =&gt; `/blog${value}`);
nodeFieldPerType(`content/projects`, value =&gt; `/project${value}`);
</code></pre>

<p>This cleans it up a bit. If you keep adding more possible branches, you may need to add more parameters. You can go further to make this as a static configuration and put this into configuration structure, that you fill in advance. Then in your code you just pick the one you need and call it.
Ex: </p>

<pre><code>config = {
`content/posts`: { getNodePath:  value =&gt; `/blog${value}` }, //object on purpose so that you can add more parameters later
`content/projects`: { getNodePath: value =&gt; `/project${value}` },
}
</code></pre>

<p>And then instead of your <code>if</code>s you check if filePath exists in this config and if it does, you call function with parameters in config.</p>
    </div>