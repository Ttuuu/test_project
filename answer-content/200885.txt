<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To get this working for Python 3, I needed to change:</p>

<pre><code>import Tkinter
class simpleapp_tk(Tkinter.Tk):
</code></pre>

<p>to</p>

<pre><code>import tkinter
class simpleapp_tk(tkinter.Tk):
</code></pre>

<p>So just a lower case for tkinter (a global search/replace). Warwick, you have a lot of code in one big class!<br>
The creation and formatting of the worksheet can be extracted into another function external to the <code>simpleapp_tk</code> class.</p>

<p>For example, if you were going to do that, the code inside the <code>onButtonClick</code> should look like:</p>

<pre><code>    result = make_me_a_spreadsheet(file_name, file_name2)
    if result:
        self.entry.focus_set()
        self.entry.selection_range(0, tkinter.END)
    else:
        self.label_variable_six.set("Confirm User is accurate.")
        self.label_variable_seven.set("Confirm your filename.")
</code></pre>

<p>With the start of the excel creation function starting like:</p>

<pre><code>def make_me_a_spreadsheet(filename_a, filename_b):
    try:
        df = pd.read_excel(filename_a)  # r"C:\Users" + FilePath + file_name)
        # ... etc
</code></pre>

<p>(I just did a cut/paste myself), and of course, the end of the spreadsheet creation function being like this:</p>

<pre><code>    writer.save()
    return True

except:
    return None
</code></pre>

<p>the <code>return None</code> means that if there was an error creating the file inside the large <code>try/except block</code>, it will return an empty value to the GUI class. With <code>result</code> being nothing, the GUI will display the correct message (the same as you currently have it).</p>

<p>Please have a go at making this change, and don't forget to make a backup of your code before changing it.</p>

<p>You should encounter a minor bug or two, such as:</p>

<pre><code>writer = pd.ExcelWriter(r'C:\Users' + FilePath + 'RX_STATS.xlsx')
</code></pre>

<p>However I'm confident that you will be able to figure out any bugs. If you make this change, your code will be a smaller step towards being better. You will have separated the creation of the xlsx file from the GUI. In the future, if there is a problem when creating the spreadsheet, you know to look only at the <code>make_me_a_spreadsheet</code> function - and not at the GUI class. Much easier to track down bugs!</p>

<p>You can follow this methodology to improve your code, that is, extracting specific steps/actions into a separate function (with passing values in and passing them out). Please see some of the other Python examples people offer on Code Review to get more ideas.</p>

<p>Good luck, hope this helps a little bit!</p>
    </div>