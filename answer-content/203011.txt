<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First to understand the purpose, contact-list is like a contact directory, where the application holding this list, should be able add, remove and query contact easily from other service-layers, Based on this proceeding to improvement of the code,</p>

<p>Person.class has many type of constructors and for scalability and sustainable code, use <a href="https://sourcemaking.com/design_patterns/builder" rel="nofollow noreferrer">builder pattern</a>. Also the you can mandate certain variables as required first-name and last-name easily. Then your adding a contact to list method becomes simple.</p>

<p>ContactList.class has many public methods which helps in building person class, if using java 8, use optionals help in reducing these methods or the approach of method overloading is also not bad, but creates more maintainable code.</p>

<p>Another important suggestion is to refactor removeContacts: use only person data structure and then use optionals to remove the contacts based on the fields set, this will be neat and reduce unnecessary methods.</p>

<p>Further <a href="https://stackoverflow.com/questions/997482/does-java-support-default-parameter-values">this answer</a> summarizes refactoring neatly.</p>
    </div>