<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't know why you call keys of the $_POST Array "static" (and what does it mean at all) but the article you linked to (which I wrote) explicitly demonstrates that $_POST Array keys are <strong>unsafe</strong> and using them in the query untreated makes your code <strong>wide open to SQL injection</strong>. </p>

<p>And no, your input_behandlung_sessions() is not the proper treatment. It makes anything but a <em>secure value</em>. Calling its output "secure" is a mockery: <strong>html</strong>specialchars() <a href="https://phpdelusions.net/sql_injection#badpractices" rel="nofollow noreferrer">has nothing to do with <strong>SQL</strong> injections</a>, while stripslashes() is just a pointless function that does absolutely nothing useful at all.</p>

<p>As a result, your code is exemplary vulnerable. </p>

<p>You <strong>must</strong> use the solution offered in the article - a <strong>white list</strong> of predefined field names. So your code regarding the INSERT query must be something like this:</p>

<pre><code>$formular_daten = []; // variables must be defined before use
$allowed = ['session_story_arc', 'session_name']; //add other fields

$fieldnames = "`session_uid`"; // a list of column names
$values = [$newrowcount]; // an array with values

foreach ($allowed as $column) { // allowed fields ONLY!
    if (!empty($_POST[$column])) { // if a column exists and not empty in a single line
        $fieldnames .= ", `$column`";
        $values[] = $_POST[$column];
    }
}
$parameter_columns = str_repeat('?,', count($values) - 1) . '?';

$sql_string = "INSERT INTO `$table` ($fieldnames) VALUES ($parameter_columns)";
$stmt = $pdo-&gt;prepare($sql_string);
$stmt-&gt;execute($values);
</code></pre>

<p>the code in the end is not only <strong>safe</strong> but also uses less loops to process. </p>

<p>On a side note, your method to get a session_uid is extremely clumsy and error prone. Depending on the purpose of this field, either make it integer auto_increment or some unpredictable unique value like one generated by <code>session_create_id()</code></p>
    </div>