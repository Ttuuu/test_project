<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>So there's couple of things you can improve:</p>

<pre class="lang-py prettyprint-override"><code>a,b=str(input()).split(' ')
a,b=int(a),int(b)

cdiv=[] #list to store common divisors
num=2
if(max(a,b)%min(a,b)==0): 
    c=min(a,b)
    for i in range(2,int(c**0.5)+1):
        while(c%i==0):
            cdiv.append(i)
            c/=i
    if(c&gt;1): cdiv.append(c)
else:
    while(num&lt;=min(a,b)//2):
        while(a % num==0)&amp;(b % num==0):
            cdiv.append(num)
            a/=num
            b/=num
        num+=1
</code></pre>

<p>(1) you indeed should focus on prime divisors.</p>

<p>(2) maximal potential divisor of any number <code>x</code> is <code>x//2</code> (floor from half of <code>x</code>), so it's enough to look for divisors until <code>min(a,b)//2</code> (cause we are looking only for common divisors).</p>

<p>(3) some of the prime divisors could be multiple times divisors - so also you should look for these.</p>

<p>(4) after confirming single number being divisor you can divide both numbers by it - by decreasing the numbers you make it easier to take modulo from it next time (you could probably also do it if divisor is just divisor for one of the numbers, but then you would have to check both numbers separately, which I'm not sure is worth doing in terms of computational overhead).</p>
    </div>