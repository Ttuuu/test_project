<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is suboptimal, and kind of buggy:</p>

<blockquote>
<pre><code>String result = tester.test(i);
if(result != "")
    System.out.println(tester.test(i));
else
    System.out.println(i);
</code></pre>
</blockquote>

<p>First of all, you are calling <code>test.test(i)</code> again, unnecessarily, instead of using <code>result</code>.</p>

<p>Second, <code>result != ""</code> is not a good way to test for string equality.  You're relying on the fact that the <code>""</code> in <code>ultraFizzBuzz()</code> and the <code>""</code> in the lambda happen to be the same exact object, due to the <a href="http://www.thejavageek.com/2013/06/19/the-string-constant-pool/" rel="noreferrer">constant pool</a>.  If the lambda had been written with <code>String retVal = new String(new char[] {});</code> instead, then the comparison would break.  You should test for either <code>"".equals(result)</code> or <code>result.isEmpty()</code>.</p>

<p>You should never omit the "optional" braces, as you will be contributing to a future coding accident.</p>

<p>Here's one better way to write the loop body:</p>

<pre><code>String result = tester.test(i);
System.out.println("".equals(result) ? String.valueOf(i) : result);
</code></pre>

<hr>

<p>I'd expect a method that is named <code>test()</code> to return a boolean.  It's surprising that it returns a string.</p>

<p>I think that making the <code>modConditions</code> interface generic is overkill.  If you think you might need to support <code>long</code> or <code>BigInteger</code> (really?!), then just write it using <code>long</code> or <code>BigInteger</code>.  And if it's not any kind of integer at all, then at that point it wouldn't really be FizzBuzz anyway.  YAGNI.</p>

<p>Since you are already using a lambda, I would recommend writing this code using Java 8 streams.  It would look more elegant, and you would avoid boxing the <code>int</code> into <code>Integer</code>.</p>
    </div>