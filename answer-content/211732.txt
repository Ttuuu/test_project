<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Code does not handle "wrap-around" correctly.</strong></p>

<p><code>2 ^ 32</code> is the exclusive-or of 32 and 2.  That has the value of 34.  Instead, as unsigned math is defined to wrap-around, just subtract.</p>

<pre><code>//if (endtime &gt; starttime) {
//    deltatime = endtime - starttime;
//} else {
//    deltatime = ((2 ^ 32) - starttime) + endtime;
//}

deltatime = endtime - starttime;
</code></pre>

<p><strong>Missing objects</strong></p>

<p><code>event, appisrunning, renderer, window</code> are not obviously declared before use in <code>SDL_PollEvent(&amp;event);</code>.  Perhaps an SDL thing?</p>

<p><strong>Unnecessary use of global variables</strong></p>

<p><code>Uint32 starttime, endtime, deltatime;</code> belongs in <code>main()</code>.  Or even better, within the loop.</p>

<p><strong>Use an auto formatter</strong></p>

<p>The below code hints at manual formatting.  Use an auto formatter and save time.</p>

<pre><code> // render stuff here
 endtime = GetTickCount();
    if (endtime &gt; starttime)
</code></pre>

<p>An auto formatter would have the below and constant indent amount per level (rather than 2 and sometimes 4 spaces).</p>

<p>Example re-format</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdbool.h&gt;
#include "SDL.h"
#include "Windows.h"

#define WIN32_LEAN_AND_MEAN
#define FPS 30

int main(void) {
  timeBeginPeriod(1);
  while (appisrunning) {
    Uint32 starttime = GetTickCount();
    SDL_PollEvent(&amp;event);

    if (event.type == SDL_QUIT) {
      SDL_DestroyRenderer(renderer);
      SDL_DestroyWindow(window);
      SDL_Quit();
      appisrunning = false;
      break;
    }

    Uint32 endtime = GetTickCount();
    Uint32 deltatime = endtime - starttime;

    if (deltatime &gt; (1000 / FPS)) {
    } else {
      Sleep((1000 / FPS) - deltatime);
    }
  }
  timeEndPeriod(1);
  return 0;
}
</code></pre>
    </div>