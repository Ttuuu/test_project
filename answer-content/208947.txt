<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>for a much faster way to check if a number is in some container, use a <code>set()</code>:
<code>anyequalto({10, 15, 3, 7}, 17)</code>. even if you have to convert from a list first,
it will still be faster to do that once rather than linearly search the list each
iteration. This will make your function O(n) rather than O(n^2)</p></li>
<li><p>choose more expressive variable names that <code>x</code> and <code>y</code>. something like
<code>numbers</code> and <code>k</code>
j</p></li>
<li><p>If you want to write this in a more functional style, you could do:</p>

<pre><code>def anyequalto(numbers, k):
    numbers = set(numbers)
    return any((k-num) in numbers
               for num in numbers)
</code></pre>

<p>Because any will terminate early if the generator produces a true
value, this will be very similar in speed to an iterative solution.</p></li>
</ol>
    </div>