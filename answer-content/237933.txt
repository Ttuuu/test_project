<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's certainly nothing wrong with using a cookie for this, but it is, alternatively, entirely possible to monitor open tabs on the client side, using <code>localStorage</code>.</p>

<p>The example below listens for page <code>load</code> and <code>unload</code> events:</p>

<ul>
<li>when a page is loaded, a new entry is added to <code>localStorage</code></li>
<li>when a page is unloaded, the last entry is removed from <code>localStorage</code></li>
</ul>

<p>If there is ever more than one entry, then the browser can report not only that more than one tab is open from the same site but also <em>how many</em> tabs are open from the same site.</p>

<p><strong>Example:</strong></p>

<pre><code>// registerOpenTab FUNCTION

const registerOpenTab = () =&gt; {

  let tabsOpen = 1;

  while (localStorage.getItem('openTab' + tabsOpen) !== null) {

    tabsOpen++;
  }

  localStorage.setItem('openTab' + tabsOpen, 'open');

  if (localStorage.getItem('openTab2') !== null) {

      window.alert('This application is already running in ' + (tabsOpen - 1) + ' other browser tab(s).')
  }
}


// unregisterOpenTab FUNCTION

const unregisterOpenTab = () =&gt; {

  let tabsOpen = 1;

  while (localStorage.getItem('openTab' + tabsOpen) !== null) {

    tabsOpen++;
  }

  localStorage.removeItem('openTab' + (tabsOpen - 1));
}


// EVENT LISTENERS
window.addEventListener('load', registerOpenTab);
window.addEventListener('beforeunload', unregisterOpenTab);
</code></pre>

<hr>

<p><strong>Alternative Example (without newlines after each statement):</strong></p>

<pre><code>// registerOpenTab FUNCTION
const registerOpenTab = () =&gt; {
  let tabsOpen = 1;
  while (localStorage.getItem('openTab' + tabsOpen) !== null) {
    tabsOpen++;
  }
  localStorage.setItem('openTab' + tabsOpen, 'open');
  if (localStorage.getItem('openTab2') !== null) {
      window.alert('This application is already running in ' + (tabsOpen - 1) + ' other browser tab(s).')
  }
}

// unregisterOpenTab FUNCTION
const unregisterOpenTab = () =&gt; {
  let tabsOpen = 1;
  while (localStorage.getItem('openTab' + tabsOpen) !== null) {
    tabsOpen++;
  }
  localStorage.removeItem('openTab' + (tabsOpen - 1));
}

// EVENT LISTENERS
window.addEventListener('load', registerOpenTab);
window.addEventListener('beforeunload', unregisterOpenTab);
</code></pre>
    </div>