<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here's my take using foldLeft:</p>

<pre><code>def compress(s: String) = {
    val a : List[(Char,Int)] = List()
    s.toCharArray.foldLeft(a)((acc, elem) =&gt; acc match {
        case Nil =&gt; (elem, 1) :: Nil
        case (a, b) :: tail =&gt;
            if (a == elem) (elem, b + 1) :: tail else (elem, 1) :: acc
    }).reverse
    .map{ case (a, b) =&gt; a.toString + b }
    .mkString("")
}
</code></pre>

<p><em>Note</em>: I have assumed that order matters. That is, <code>aabbbaa</code> will reduce to <code>a2b3a2</code></p>
    </div>