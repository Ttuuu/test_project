<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This code is 137 lines.  Of which, only 5 are empty blank lines.  A little bit of breathing room can do a lot for the readability of your code.</p>

<p>Your use of braces is also inconsistent.  You omit them for one-line <code>if</code> and <code>else</code> statements, but maintain them for one line <code>while</code> loops.  You really shouldn't consider them optional--you should implement them every where.</p>

<p>So keeping those two things in mind, here's what a <a href="http://importblogkit.com/2015/03/writing-readable-code/" rel="nofollow">more readable</a> implementation of your first method looks like:</p>

<pre><code>void next_prime(MP_INT *x) {
    MP_INT r;
    mpz_init(&amp;r);

    if (!mpz_probab_prime_p(x, 128u)) {
        mpz_mod_ui(&amp;r, x, 2ul);

        if (mpz_cmp_ui(&amp;r, 0ul) == 0) {
            mpz_add_ui(x, x, 1ul);
        }
        else {
            mpz_add_ui(x, x, 2ul);
        }

        while (!mpz_probab_prime_p(x, 128u)) {
            mpz_add_ui(x, x, 2ul);
        }
    }

    mpz_clear(&amp;r);
}
</code></pre>

<p>There's still more work to be done though.  This code is still hard to read, but it's mostly a result of unclear variable and function names.</p>

<p>I also can't see any good reason why this method takes an integer by reference and returns void.  Taking a variable by reference in order to set it is a useful tactic when you need to return multiple pieces of information (for example, an error code or something).  But if your return type is void... why don't you just take the integer's value and return the "next prime" value that you calculate?  When I read the function name "next prime", that's exactly what I expect to see... a function which takes an integer argument, and returns the same type, representing the first prime number appearing after the number I passed in.</p>
    </div>