<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>regarding:</p>

<pre><code>printf("fork failed\n");
</code></pre>

<p>error messages should be output to <code>stderr</code> and when the error is from a C library function, should also output the text reason the system thinks the error occurred.  Suggest:</p>

<pre><code>perror( "fork failed" );
</code></pre>

<p>which handles both output activities</p>

<p>regarding: </p>

<pre><code>interactions = atoi(argv[1]);  
</code></pre>

<p>Always check <code>argc</code> to assure the user actually entered the expected command line parameter (if not, then output to <code>stderr</code> a USAGE message) before accessing anything beyond <code>argv[0]</code>.  Other wise, when the expected command line parameter has not been entered by the user, accessing beyond <code>argv[0]</code> will result in a  seg fault event. without the user having any idea as to why</p>

<p>regarding:</p>

<pre><code>printf("A decimal argument must be declared");
</code></pre>

<p>This outputs an error message to <code>stdout</code> rather than to <code>stderr</code>.  Suggest:</p>

<pre><code>fprintf( stderr, "USAGE: %s decimal argument\n", argv[0] );
</code></pre>

<p>regarding:</p>

<pre><code>case 0:
    printf("Process %s%d %d, from %d\n", colLetter, currentRow, (int)getpid(), (int)getppid());
    currentRow += 1;
        // process 1 fork and his child
    process_single_tree(colLetter, maxInteractions, currentRow);
    break;

default:
    break;
}

wait(&amp;status);
</code></pre>

<p>This will have the child process (along with the parent process) calling <code>wait()</code>  Suggest:</p>

<pre><code>case 0:
    printf("Process %s%d %d, from %d\n", colLetter, currentRow, (int)getpid(), (int)getppid());
    currentRow += 1;
        // process 1 fork and his child
    process_single_tree(colLetter, maxInteractions, currentRow);
    exit( EXIT_SUCCESS );   &lt;&lt;-- added statement
    break;

default:
    wait(&amp;status);
    break;
}
</code></pre>

<p>regarding:</p>

<pre><code>interactions = atoi(argv[1]);
</code></pre>

<p>The function: <code>atoi()</code> can fail and it will not notify you of this event.  Suggest using the function: <code>strtol()</code></p>
    </div>