<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You want to learn what a dictionary is, and store your rasters in it. With Python this is pretty simple, to make a dictionary that when you ask for an apple gives you a 'red apple' you could do:</p>

<pre><code>&gt;&gt;&gt; my_dictionary = {'apple': 'red apple'}
&gt;&gt;&gt; my_dictionary['apple']
'red apple'
</code></pre>

<p>From this you want to build this dictionary, to do this you can add a banana to the dictionary:</p>

<pre><code>&gt;&gt;&gt; my_dictionary['banana'] = 'for scale'
&gt;&gt;&gt; my_dictionary['banana']
'for scale'
&gt;&gt;&gt; my_dictionary
{'apple': 'red apple', 'banana': 'for scale'}
</code></pre>

<p>After this you want to merge all the for loops together. Using a dictionary like above, we can drastically reduce the amount of code.</p>

<pre><code>rasters = {}
for name, file_ext in [('CRP', '_CRP'), ('FOR', 'FOR'), ...]:
    list = rasters[name] = []
    for raster in arcpy.ListRasters("*" + file_ext + ".tif"):
        if arcpy.Exists(raster):
            CRP_List.append("D:/A__P6_FINAL_TIFFs/" + CoName + "_FINAL/" + raster)
</code></pre>

<p>Since you also want this to work when you loop through <code>arcpy.ListWorkspaces("*")</code> you can use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> to allow you to remove the need to create a list for each file extension. This would change the above to:</p>

<pre><code>rasters = defaultdict(list)
for name, file_ext in [('CRP', '_CRP'), ('FOR', 'FOR'), ...]:
    list = rasters[name]
    for raster in arcpy.ListRasters("*" + file_ext + ".tif"):
        if arcpy.Exists(raster):
            CRP_List.append("D:/A__P6_FINAL_TIFFs/" + CoName + "_FINAL/" + raster)
</code></pre>

<hr>

<p>Going further, you can use <code>arcpy.env.workspace</code> or another constant variable rather than writing <code>"D:/A__P6_FINAL_TIFFs/"</code> three times, this as if you want to change it you would have to do it twice at the moment. I would use <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>str.format</code></a> to simplify the formatting, so when another person reads it it's not as hard to know what's happening. And finally I would normalize your variable names, pick either <code>CoName</code> or <code>co_name</code>, as it's hard knowing what your variable naming convention is. This can get you:</p>

<pre><code>import arcpy
import os
from collections import defaultdict

WORKSPACE = "D:/A__P6_FINAL_TIFFs"
arcpy.env.workspace = WORKSPACE

rasters = defaultdict(list)
for folder in arcpy.ListWorkspaces("*"):
    co_name = os.path.basename(folder).rsplit('_', 1)[0]
    env.workspace = os.path.join("{}/{}_FINAL".format(WORKSPACE, co_name))

    for name, file_ext in [('CRP', '_CRP'), ('FOR', 'FOR'), ...]:
        list = rasters[name]
        for raster in arcpy.ListRasters("*{}.tif".format(file_ext)):
            if arcpy.Exists(raster):
                list.append("{}{}_Final/{}".format(WORKSPACE, co_name, raster)
</code></pre>
    </div>