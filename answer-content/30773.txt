<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>T ToEntity();
</code></pre>

<p>To me, <code>ToEntity()</code> implies some sort of conversion action. A better option might be <code>T GetEntity()</code> or even a property called <code>Entity</code>.</p>

<pre><code>protected readonly T EntityType;
</code></pre>

<p><code>EntityType</code> is a bad name for this field, because it does not contain a type, it contains the entity. Because of that, something like <code>Entity</code> might be better.</p>

<p>Also, you might want to consider making this into a property. The reasons for not using public fields also apply to protected fields (though not as strongly).</p>

<pre><code>private IDictionary&lt;string, Action&gt; _propertyNotifications;
</code></pre>

<p>This seems completely unnecessary. Unless you know that this actually makes measurable improvement in performance (which I seriously doubt), just raise the event.</p>

<pre><code>var lambda = (LambdaExpression)property;
var unaryExpression = body;
</code></pre>

<p>These two lines are unnecessary and I think they also don't improve readability.</p>

<pre><code>memberExpression = (MemberExpression)unaryExpression.Operand;
</code></pre>

<p>If you're expecting only some specific <code>UnaryExpression</code>s, then I would check that those are actually what you have. For example, I think your code would work with <code>() =&gt; !BoolProperty</code>, which I think it shouldn't.</p>
    </div>