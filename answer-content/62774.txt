<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Comments</p>

<p>Honestly, too many of them.</p></li>
<li><p>Object-orientation</p>

<p>I don't see why vector components are made private. A client can freely and independently modify them via <code>Set</code> method. There's no internal state to maintain, no invariant to protect. I recommend to make them public and eliminate <code>Set(), X(), Y(), Z()</code> methods altogether.</p></li>
<li><p>Math</p>

<p>I am quite surprised by the presence of <code>operator/(float, Vector)</code>. There is no immediately obvious value in it. Mathematically such operation makes no sense, and dividing a scalar by a vector shall be flagged as error ASAP.</p>

<p>On the other hand, dot product would very naturally be</p>

<pre><code>float operator*(Vector&amp;, Vector&amp;)
</code></pre>

<p>There is no implementation of <code>AreEquals</code> and <code>EqualsZero</code> methods. In any case, I'd expect <code>IsZero</code> method to compare a norm rather than individual components. It would actually be nice to abstract a norm calculation (right now the client is forced to Euclidean distance).</p></li>
<li><p>Implementation details</p>

<p>It is strongly recommended to express <code>operator !=</code> in terms of <code>operator ==</code>. Otherwise, you face with a double maintenance problem, and the reader should do extra work to make sure that the semantics of comparisons is correct.</p>

<p>Similarly, other operators with tightly bound semantics also should not be independent. It is usually recommended to express <code>operator+</code> in terms of <code>operator+=</code>, etc. For more details, see a Canonical Implementation section in <a href="http://en.cppreference.com/w/cpp/language/operators">C++ reference</a>.</p></li>
</ul>
    </div>