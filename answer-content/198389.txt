<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Any explanation why it shows exponential timing (I have not used any nested loops)?</p>
</blockquote>

<p>Inside the while loop you have <code>A.indexOf(pop);</code> which is the second inner loop. It iterates over each item until it finds the match. You can use a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set" rel="nofollow noreferrer">Set</a> which uses a hash table to locate items.</p>

<blockquote>
  <p>Any suggestions on what would be the optimized code which will run on O(N)?</p>
</blockquote>

<p>Use a <code>Set</code>. For each item first check the set, if its there remove it and the item, else add the item to the set and move to the next item. When done you should have one item remaining in the set, that will be the odd one out. </p>

<pre><code>function findOdd(arr){
    const found = new Set(); 
    while (arr.length &gt; 0) {
        const val = arr.pop(); // or use shift

        // if val in found remove it from the set
        if (found.has(val)) { found.delete(val) }
        else { found.add(val) } // else add it to the set
    }
    return [...found.values()][0];
}
</code></pre>
    </div>