<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>With the list comprehension you are filling a whole list with your values, and then you are sending that list to <code>join</code>.</p>

<p>Instead of a generating a list and then sending it, you can send a <strong>generator</strong> instead: similar to the list comprehension, but generates the values <em>on-demand</em>. With your old approach, if you had 10000 dates you would have them all at a list; with a generator it generates one at a time, so at least you will be consuming less memory.</p>

<p>With a generator, you would directly do:</p>

<pre class="lang-py prettyprint-override"><code>dates = "('" + "'),('".join(str(start_date + dt.timedelta(d)) for d in range(day_diff)) + "')"
</code></pre>

<p>On a side note, the parameter names <code>date1, date2</code> are not very explicit; it should be clear from the names which is the start and which is the end date. </p>
    </div>