<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Unless you'll be using the regular expression pattern for other things it can be simplified by removing the unnecessary brackets. Also since it never changes it would make sense to keep it as a constant in the class. A better name would also be a good idea:</p>

<pre><code>private static final Pattern FILENAME_PATTERN = Pattern.compile("test\\d-\\d{12}\\.txt");
</code></pre>

<p>Setting <code>stream</code> to null runs the danger that <code>stream.close()</code> will cause a <code>NullPointerException</code>, if something goes wrong. Better use "try with resources" as @MartinFrank suggests.</p>

<p>Instead of using <code>.forEach</code> on the stream use <code>.collect</code> to create a <code>Set</code>:</p>

<pre><code>public static Set&lt;Path&gt; getFilesFromDirectory(String directory) {

    Path lookUpPath = Paths.get(directory);

    try (Stream&lt;Path&gt; stream = Files.find(lookUpPath, 1, (path, basicFileAttributes) -&gt; {
        File file = path.toFile();
        return !file.isDirectory() &amp;&amp; FILENAME_PATTERN.matcher(file.getName()).matches();
    })) {
        return stream.collect(Collectors.toSet());
    } catch (IOException e) {
        e.printStackTrace();
        return Collections.emptySet();
    }

}
</code></pre>

<p>In <code>getLatestFile</code> don't declare <code>BasicFileAttributes attr</code> outside the loop. The use after the loop is a "different" variable, so it should be declared separately. </p>

<p>Actually you shouldn't be be printing to <code>System.out</code> in this method at all. Either it's a debugging help, then you should be using proper logging, or it's part of the functionality to display information about the file to the user, then this should happen outside this method. </p>

<pre><code>public static Path getLatestFile(Set&lt;Path&gt; pathSet) throws IOException {

    long fileTime = 0;
    Path pathToReturn = null;

    for (Path path : pathSet) {
        BasicFileAttributes attr = getBasicFileAttributes(path);
        if (attr.creationTime().toMillis() &gt; fileTime) {
            fileTime = attr.creationTime().toMillis();
            pathToReturn = path;
        }
    }
    return pathToReturn;
}
</code></pre>

<p>If you need creation time (or more attributes of the file) later, then you should have the method return that too.</p>
    </div>