<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I was think a lot that should I write this answer or not. I don't want to be rude or offensive, but this piece of code is terribly. It has tremendous problems.</p>
<p>Let me just highlight a couple of them:</p>
<ol>
<li><p>Initialization of the <code>JsonSerializationOptions</code>: You have a static variable, which you initialize in your instance level constructor always with the same values.</p>
</li>
<li><p>Exposing methods: Your <code>GetAsync</code>, <code>DeleteAsync</code>, <code>PostAsync</code> public functions are just calling the (also exposed) static counterparts (<code>GetAsyncStream</code>, <code>DeleteRequest</code>, <code>PostAsyncStream</code>). The naming inconsistency is just a bonus.</p>
</li>
<li><p>Create HttpClient: You should not create for each and every request a new HttpClient. There are hundreds of articles, which warns you. For instance <a href="https://thecodebuzz.com/using-httpclient-best-practices-and-anti-patterns/" rel="nofollow noreferrer">this</a></p>
</li>
<li><p>Calling the Dispose manually: You should not call the <code>Dispose</code> manually (like: <code>content.Dispose()</code>)</p>
</li>
<li><p>Using <code>Task.Run</code> to deserialize result: I don't understand why do you do that? You also have a function called <code>DeserializeAsync</code>, which is used sometimes and sometimes not.</p>
</li>
<li><p>Lack of error handling: Checking just the <code>IsSuccessStatusCode</code> is really poor and naive. And translating every status code that is different than 2xx to <code>ServiceAuthenticationException</code> is ... well, it is not good.</p>
</li>
<li><p>etc...</p>
</li>
</ol>
<p>Generally speaking it really hard to follow your code. The comments are pointless, variable names are just echoing their type, functional decomposition is done in the wrong way, like this:</p>
<pre><code>private static HttpRequestMessage CreateRequest(Uri uri) 
  =&gt; new HttpRequestMessage(HttpMethod.Get, uri);
</code></pre>
<p>So, in summary I'm sorry but I have to say that not the <code>if DEBUG</code> is your biggest problem here.</p>
    </div>