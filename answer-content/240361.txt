<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For more robust code to detect non-numeric input, overflow and start-up phasing, consider a <a href="https://stackoverflow.com/questions/1647631/c-state-machine-design/1647679#1647679">state machine</a>.</p>

<pre><code>typedef struct {
  int counter;  // &lt;0:indeterminate, 0:spacing, &gt;0:digits; 
  uint32_t number;
} loop_state;

// Quietly drop data in 3 cases:
// 1) Overflow
// 2) Non-numeric
// 3) When state is indeterminate
void loop(loop_state *state) {
  while (Serial.available()) {
    byte received = Serial.read(); // Store received byte
    if (received &gt;= '0' || received &lt;= '9') { // or isdigit((unsigned char) received)
      if (state-&gt;counter &gt;= 0) {
        state-&gt;counter++;
        unsigned digit = received - '0';
        if (state-&gt;number &gt;= UINT32_MAX / 10
            &amp;&amp; (state-&gt;number &gt; UINT32_MAX / 10 || digit &gt; UINT32_MAX % 10)) {
          // overflow
          state-&gt;counter = -1;
          continue;
        }
        state-&gt;number = state-&gt;number * 10 + digit;
      }
    } else if (isspace((unsigned char) received)) {
      if (state-&gt;counter == 1) {
        Serial.println(state-&gt;number);
      }
      state-&gt;number = 0;
      state-&gt;counter = 0;
    } else {
      state-&gt;number = 0;
      state-&gt;counter = -1;
    }
  }
}
</code></pre>
    </div>