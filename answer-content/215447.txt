<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is not going to be the answer you want, but it might help you figure it out on your own. There are (at least) two problems here. The first is in the challenge description, the other one is in your code being a mess.</p>

<ol>
<li><p>Honestly, I think the challenge is simply poorly worded. The following is deceiving: "You would like to compute the sum of heights of all the buildings" since they really want to know "the minimum sum of heights of all buildings consistent with the given information". I'm fairly sure it can be done with less iteration by ignoring the first line and focussing on what they actually want.</p></li>
<li><p>Your code. There's a lot of things in there that don't have to be in there and the naming could be much better. I'm not a star at it myself, but I've taken a shot at cleaning it up.</p></li>
</ol>

<p>A more readable version:</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;cmath&gt;

int main(void)
{
    long long int amount_cases;
    long long int first, second, n;
    long long int sum;
    long long int carry;

    std::cin &gt;&gt; amount_cases;

    for (long long int i = 0; i &lt; amount_cases; i++)
    {
        std::cin &gt;&gt; first &gt;&gt; second &gt;&gt; n;
        sum = first + second;
        for (long long int j = 2; j &lt; n; j++)
        {
            carry = std::abs(first - second);
            sum += carry;
            first = second;
            second = carry;
        }
        std::cout &lt;&lt; sum &lt;&lt; std::endl;
    }
}
</code></pre>

<p>Your timeout problem is in this part:</p>

<pre><code>for (long long int j = 2; j &lt; n; j++)
{
    carry = std::abs(first - second);
    sum += carry;
    first = second;
    second = carry;
}
</code></pre>

<p>That's not the most optimum method for this problem and the only part of the program you'll have to improve to make it happen fast enough.</p>
    </div>