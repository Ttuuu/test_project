<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with your summation that it is clumsy.  I see you like to <strong>stringly</strong> type objects, such as <code>GetTimeOfDayFromDateTime</code>.  It would be neater to just get the time of day as a <code>TimeSpan</code>.  Also, you may have several overloads accepting different input arguments, so you don't need to include the <code>FromDateTime</code> in the name.</p>

<pre><code>public static TimeSpan GetTimeOfDay(DateTime d) =&gt; d - d.Date;
</code></pre>

<p>Or if you want to simply check AM versus PM, you could use the DateTime.Hour.  If the hour is &lt; 12, it's AM.  Otherwise, it's PM.</p>

<p>Now GetDuration doesn't have to accept string inputs.  They can accept the TimeSpan (i.e. time of day) for start and end, or just better yet, just subtract the 2 DateTime objects.</p>

<p>This just looks clumsy:</p>

<pre><code>double baseMondayHours = 10.00;
baseMondayHours = (baseMondayHours - 0.5);
</code></pre>

<p>Cleaner would be either:</p>

<pre><code>double baseMondayHours = 10.0 - 0.5;
</code></pre>

<p>or directly</p>

<pre><code>double baseMondayHours = 9.5;
</code></pre>

<p>Another tip to keep in mind: Subtracting dates can produce bad results if the Kind of each DateTime is different.  Doesn't seem to be the case here, but be forewarned.</p>
    </div>