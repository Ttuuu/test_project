<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Specific suggestions:</p>

<ol>
<li>I generally find that ordering functions by their importance is helpful. Moving <code>get_arguments</code> just above or below <code>main</code> would allow readers to get into the functionality immediately. Others prefer to write methods in call order, but this feels a bit arbitrary (should <code>main</code> be first or last?) and not always achievable, because with branching it's possible to have a cycle of callers.</li>
<li>*nix tools usually support any number of paths as their last arguments, operating on each of them. This would certainly be useful here, and means you could even avoid the whole <code>if</code>/<code>else</code> in <code>main</code> because all inputs should be file paths.</li>
<li><a href="https://docs.python.org/3/library/argparse.html#filetype-objects" rel="nofollow noreferrer"><code>argparse</code> has a file type</a> which you can use.</li>
<li>Don't rely on file extensions to correspond to file formats. I would instead rely on PIL to detect the file type and to throw an exception if it doesn't know it.</li>
<li>Abbreviations like <code>inname</code> make the code harder to read. One way to avoid the urge to shorten everything is to use an IDE, because it'll help you auto-complete everything which is in scope.</li>
<li>In the end this script is a small convenience wrapper around PIL. This is one of those rare occasions when I would suggest replacing it with a small shell script.</li>
</ol>

<p>General suggestions:</p>

<ol>
<li><a href="https://github.com/ambv/black" rel="nofollow noreferrer"><code>black</code></a> can automatically format your code to be more idiomatic.</li>
<li><a href="https://github.com/timothycrosley/isort" rel="nofollow noreferrer"><code>isort</code></a> can group and sort your imports automatically.</li>
<li><p><a href="https://gitlab.com/pycqa/flake8" rel="nofollow noreferrer"><code>flake8</code></a> with a strict complexity limit will give you more hints to write idiomatic Python:</p>

<pre><code>[flake8]
max-complexity = 4
ignore = W503,E203
</code></pre></li>
<li><p>I would then recommend adding <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">type hints</a> everywhere and validating them using a strict <a href="https://github.com/python/mypy" rel="nofollow noreferrer"><code>mypy</code></a> configuration:</p>

<pre><code>[mypy]
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
</code></pre></li>
</ol>
    </div>