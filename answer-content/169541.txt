<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't know if this is cleaner but it is another approach.   </p>

<blockquote>
  <p>Perhaps is there a way to get this done without as many 'foreach'
  loops and use of Except() and Intersetc()</p>
</blockquote>

<p>It is probably more efficient and I like it better but I like seeing logic loops.<br>
I left debug statements as <strong>not fully tested</strong>.  </p>

<pre><code>public static void ListDiff2()
{
    List&lt;string&gt; listA = new List&lt;string&gt;() { "AAA", "BBB", "DDD" };
    List&lt;string&gt; listB = new List&lt;string&gt;() { "AAA", "CCC" };
    //List&lt;string&gt; listA = new List&lt;string&gt;() { "AAA", "BBB", "CCC", "DDD", "FFF", "GGG" };
    //List&lt;string&gt; listB = new List&lt;string&gt;() { "AAA", "BBB", "DDD", "FFF", "EEE" };

    IEnumerable&lt;string&gt; listAsorted = listA.OrderBy(x =&gt; x);
    IEnumerable&lt;string&gt; listBsorted = listB.OrderBy(x =&gt; x);

    var listAenumerator = listAsorted.GetEnumerator();
    var listBenumerator = listBsorted.GetEnumerator();

    bool listAcanmove = listAenumerator.MoveNext();
    bool listBcanmove = listBenumerator.MoveNext();

    while (listAcanmove | listBcanmove)
    {
        string valueA = listAenumerator.Current;
        string valueB = listBenumerator.Current;

        Debug.WriteLine($"valueA = {valueA}");
        Debug.WriteLine($"valueB = {valueB}");

        if (!listAcanmove &amp;&amp; listBcanmove)
        {
            Debug.WriteLine($"{valueB} in B not in A");
            listBcanmove = listBenumerator.MoveNext();
        }
        if (listAcanmove &amp;&amp; !listBcanmove)
        {
            Debug.WriteLine($"{valueA} in A not in B");
            listAcanmove = listAenumerator.MoveNext();
        }
        else
        {
            int comp = string.Compare(valueA, valueB);
            if (comp == -1)
            {
                Debug.WriteLine($"{valueA} in A not in B");
                listAcanmove = listAenumerator.MoveNext();
            }
            else if (comp == 1)
            {
                Debug.WriteLine($"{valueB} in B not in A");
                listBcanmove = listBenumerator.MoveNext();
            }
            else
            {
                Debug.WriteLine($"{valueA} {valueB} in B and A");

                //perform value comparison here

                listAcanmove = listAenumerator.MoveNext();
                listBcanmove = listBenumerator.MoveNext();
            }
        }
        Debug.WriteLine("");
    }
    Debug.WriteLine($"done");
}
</code></pre>
    </div>