<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Instead of simulating a <code>for (( expr1 ; expr2 ; expr3 ))</code> loop, use a POSIX</p>

<pre><code>    for java_process_entry in $java_process_list
</code></pre>

<p>Notice that now you don't need to compute the number of lines, neither invoke <code>sed</code>.</p>

<hr>

<p>There is noting wrong with early return. <code>return 0</code> as soon as the desired process is found.</p>

<hr>

<p>There is no need to store the entire list in a variable, neither invoke <code>awk</code>. Process the <code>jps</code> output sequentially.</p>

<p>All that said, consider </p>

<pre><code>    is_java_program_running()
    {
        jps -l | while read pid java_process_entry; do
            if [ $java_process_entry = "${1}" ]; then return 0; fi
        done
        return 1
    }
</code></pre>
    </div>