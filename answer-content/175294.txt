<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, I shall start from the top. </p>

<p>According to the style guide, PEP 8 <a href="https://www.python.org/dev/peps/pep-0008/#imports" rel="nofollow noreferrer">imports should be in the following order</a>:</p>

<ol>
<li><blockquote>
  <p>standard library imports</p>
</blockquote></li>
<li><blockquote>
  <p>related third party imports local</p>
</blockquote></li>
<li><blockquote>
  <p>application/library specific imports</p>
</blockquote></li>
</ol>

<p>Plus, add a single blank line to separate each group.</p>

<p>So, something like the following:</p>

<pre><code>import subprocess
import threading
import logging
import collections
import json
import time
import datetime

from flask import Flask
from flask import render_template
from flask_table import Table, Col

from poloniex import Poloniex
import smbus
import Adafruit_SSD1306
import Image
import ImageDraw
import ImageFont
import ImageOps
</code></pre>

<p>A small thing to note is that the convention for class names -as defined in the aforementioned PEP 8- is that they are <code>CamelCase</code>.</p>

<p>I definitely recommend somehow splitting up your code. You could put it into a package along the lines of the following:</p>

<pre><code>.
my_script.py
my_package
|   +-- __init__.py
|   +-- multiplexer.py
|   +-- display.py
|   +-- currency.py
</code></pre>

<p>Your multiplexer class and everything to do with it could go into <code>multiplexer.py</code>. <code>oled()</code> into <code>display.py</code> and the <code>price</code> and <code>coin</code> class could go into <code>currency.py</code> -which I am sure could have a better name .... You might even be able to get by with just putting <code>multiplexer.py</code>, <code>display.py</code>, and <code>currency.py</code> in with <code>myscript.py</code> instead of in a separate package.</p>
    </div>