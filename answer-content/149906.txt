<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'll just focus on performance, because that's the fun part.</p>

<p>You're correct to be worried about the string manipulations, so you should obviously try to minimize them.  The <em>other</em> thing you should be worried about is the division and exponentiation used for bit-twiddling.  If all you need to do is swap the byte order of an intrinsic type, you can do it using a CopyMemory API call, a struct, and simple assignments:</p>

<pre><code>'Note that this is a VBA declaration (missed the VB6 tag) - adjust accordingly.
Private Declare PtrSafe Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" _
            (destination As Any, source As Any, ByVal length As LongPtr)

Private Type LongBytes
    Byte1 As Byte
    Byte2 As Byte
    Byte3 As Byte
    Byte4 As Byte
End Type

Public Function SwapEndian(inVal As Long) As Long
    Dim bytes As LongBytes, swapped As LongBytes

    CopyMemory bytes, inVal, 4

    swapped.Byte1 = bytes.Byte4
    swapped.Byte2 = bytes.Byte3
    swapped.Byte3 = bytes.Byte2
    swapped.Byte4 = bytes.Byte1

    Dim retVal As Long
    CopyMemory retVal, swapped, 4
    SwapEndian = retVal
End Function
</code></pre>

<p>Even <em>with</em> the overhead for the API call, this is blazingly fast.  It also completely eliminates the need to call <code>Hex</code> repeatedly, completely eliminates the need to pad every byte to 2 characters individually, and involves exactly zero math operations.</p>

<p>Once you have the <code>Long</code> in the byte order you want, all you need to do is call <code>Hex$</code> once (note that it also has a <code>String</code> returning variation - kudos on using the one for <code>Right$</code>):</p>

<pre><code>Public Function RgbToHex2(inVal As Long) As String
    Dim bytes As LongBytes, swapped As LongBytes

    CopyMemory bytes, inVal, 4
    swapped.Byte1 = bytes.Byte3
    swapped.Byte2 = bytes.Byte2
    swapped.Byte3 = bytes.Byte1
    swapped.Byte4 = bytes.Byte4

    Dim retVal As Long
    CopyMemory retVal, swapped, 4

    RgbToHex2 = Right$("0" &amp; Hex$(retVal), 6)    '&lt;--1 call each to Right$ and Hex$
End Function
</code></pre>

<p>I'd ballpark that it runs about 5 times faster.</p>
    </div>