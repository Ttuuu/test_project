<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Hello and Welcome to Code Review. The runtime complexity in terms of reading characters (n files * m characters) for substitution cannot be improved, you can use the <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#replace-char-char-" rel="nofollow noreferrer">String replace(char oldChar, char newChar)</a> method:</p>

<pre><code>String childName = file.getName();
String childNameNew = "";
for (int i = 0; i &lt; childName.length(); i++) {
    if (childName.charAt(i) == ' ') {
        childNameNew += "-";
    } else {
        childNameNew += childName.charAt(i);
    }
}
</code></pre>

<p>You can substitute your block with one line: </p>

<pre><code>String childNameNew = childName.replace(' ', '-');
</code></pre>

<p>From Java 7 it is discouraged using <a href="https://docs.oracle.com/javase/7/docs/api/java/io/File.html#renameTo(java.io.File)" rel="nofollow noreferrer">File renameTo</a> method, you can use from class <code>Files</code> the <a href="https://docs.oracle.com/javase/tutorial/essential/io/move.html" rel="nofollow noreferrer">move</a> method and you can write the mv file part of your code in this way:</p>

<pre><code>// Calculate oldPath and newPath for your file with Paths.get method
try {
    Files.move(oldPath, newPath, StandardCopyOption.REPLACE_EXISTING);  
    System.out.println(oldPath + " File moved successfully to " + newPath);
} catch (IOException e) {
    System.out.println(oldPath + " Failed moved the file to " + newPath);   
}
</code></pre>
    </div>