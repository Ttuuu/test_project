<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Using a regular expression is definitely the way to go â€” that's exactly what they are good at doing.  The following regex looks for <code>'a'</code>, followed by any number of spaces, followed by a non-space character, followed by any number of spaces, followed by a non-space character, followed by any number of spaces, followed by <code>'b'</code>. </p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function bThreeAfterA(str) {
    return /a *[^ ] *[^ ] *b/.test(str);
}

console.log('after badly', bThreeAfterA('after badly'));
console.log('Laura sobs', bThreeAfterA('Laura sobs'));</code></pre>
</div>
</div>


<p>You should be aware, though, that you are using <code>.some()</code> suboptimally.  The <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some" rel="nofollow noreferrer"><code>.some(<em>callback</em>)</code></a> method stops executing as soon as the <code><em>callback</em></code> returns a true value.  But you've already built <code>trueOrFalse</code> by analyzing the entire string, instead of taking advantage of that short-circuiting.  Therefore, if you use <code>.some()</code>, you shouldn't also use <code>.map()</code>.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function bThreeAfterA(str) {
    // Array of characters without spaces
    var chars = str.split(' ').join('').split('');
    return chars.some(function(c, i, chars) {
        return c == 'a' &amp;&amp; chars[i + 3] == 'b';
    });
}

console.log('after badly', bThreeAfterA('after badly'));
console.log('Laura sobs', bThreeAfterA('Laura sobs'));</code></pre>
</div>
</div>

    </div>