<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I took your code and rewrote it a bit, so that it satisfies my personal requirements for production-ready code.</p>

<pre><code>if (args.length &lt; 2) {
    System.err.println("usage: Task &lt;arg1&gt; &lt;arg2&gt;");
    System.exit(1);
}
</code></pre>

<p>I removed the <code>throw new Exception</code> since passing the wrong number of arguments is not a programming error but a wrong invocation of the program. Only programming errors should print a stack trace. Instead of saying "Need 2 string arguments" I am following the "usage:" pattern that has been successfully established by Unix programs. Since you didn't provide any context in your question, the best variable names I could come up with are <code>&lt;arg1&gt; &lt;arg2&gt;</code>. If your task were to copy a file, the usage line should better be <code>usage: Copy &lt;source&gt; &lt;target&gt;</code>, of course.</p>

<pre><code>} catch (IllegalArgumentException e) {
    System.err.println(e.getMessage());
    System.exit(1);
}
</code></pre>

<p>I added the <code>System.exit</code> since it was missing. If the program fails, it must report this via <code>System.exit</code> or by throwing an exception from the <code>main</code> function.</p>

<pre><code>private static int processResult(String inputOne, String inputTwo) {
    if (inputOne.length() != inputTwo.length()) {
        throw new IllegalArgumentException("Strings must be the same length");
    }
</code></pre>

<p>There's no need to have a separate function for checking the lengths of the strings. Using IntelliJ it was quite simple to inline the method call to <code>lengthsEqual</code> (I just pressed Ctrl+Alt+N) and to remove the redundant call to <code>Integer.compare</code> (which was already marked in dark gray, so I just had to press Alt+Enter there).</p>

<p>It's unfortunate that the exception message says "String must be the same length". This message does not tell <em>which</em> strings are meant, and since that message is printed to <code>System.err</code> later, it should be worded with the same care as the usage message.</p>

<p>I disagree with <a href="https://codereview.stackexchange.com/a/222110">bag's answer</a>, especially the part that commercial code needs to be extensible. It doesn't. It needs to be easy to read, and it needs to clearly tell its intention. If the business requires that the two strings be equal (for whatever reason), the code should say exactly this, and the code should match the wording of the original requirement as closely as possible, so that later changes to the requirements can be programmed as easily as possible.</p>
    </div>