<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Returning by reference</h2>
<p><code>ttt_init</code> makes an instance of your <code>TTT_BoardGame</code> but that instance has to be copied when returning it. This cannot be done efficiently. Your struct is so trivially small that no performance impact can be noticeable, but since you're expressly doing this for learning, it's worth pursuing the idiomatic method instead:</p>
<p>Either accept a pointer to the struct and initialize that (preferable), or <code>malloc</code> memory for a structure, initialize it and return its pointer. The first way will allow for a top-level function to allocate on the stack instead of the heap, which will be simpler for you.</p>
<h2>Indentation</h2>
<p>Starting with this line:</p>
<pre><code>for (short p = 2; p &gt;= 0; p--) {
</code></pre>
<p>your indentation is incorrect. Consider using an auto-formatter.</p>
<h2>Constant references</h2>
<p>This:</p>
<pre><code>char ttt_currentPlayerTurn(struct TTT_BoardGame *game) {
</code></pre>
<p>should accept a <code>const</code> argument instead, since <code>game</code> is not and should not be modified.</p>
<h2>Non-re-entrant buffers</h2>
<pre><code>static char pos[3];
return pos;
</code></pre>
<p>is dangerous. That means that whenever you ask for a position, regardless of game state, you use one buffer for the entire process. That will lead to unexpected behaviour for callers. Instead, either accept a pre-allocated buffer pointer (preferable), or <code>malloc</code> one and return it.</p>
<h2>Combined boolean expression</h2>
<pre><code>if ((row + 1) &lt;= game-&gt;boardSqrt &amp;&amp; (col +1) &lt;= game-&gt;boardSqrt) {
    if (game-&gt;board[col][row][1] != 'X' &amp;&amp; game-&gt;board[col][row][1] != 'O')
        return true;
}
return false;
</code></pre>
<p>can be</p>
<pre><code>return row + 1 &lt;= game-&gt;boardSqrt
    &amp;&amp; col + 1 &lt;= game-&gt;boardSqrt
    &amp;&amp; game-&gt;board[col][row][1] != 'X'
    &amp;&amp; game-&gt;board[col][row][1] != 'O';
</code></pre>
    </div>