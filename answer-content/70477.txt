<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Two things:</p>

<ol>
<li><p>I think you have missed the native implementation. Are you intentionally re-inventing the wheel? Streams <a href="http://docs.oracle.com/javase/8/docs/api/java/util/stream/BaseStream.html#iterator--">have an iterator() method</a>.</p></li>
<li><p>Note that streams cannot be reversed, so, while you can create an iterator once, from the stream, you cannot create a second iterator.... In other words, you cannot loop more than once through your iterable.</p></li>
</ol>

<p>Consider reworking your class as:</p>

<pre><code>public class StreamIterable&lt;T&gt; implements Iterable&lt;T&gt; {

  private final Stream&lt;T&gt; stream;

  public StreamIterable(Stream&lt;T&gt; stream) {
    this.stream = stream;
  }

  @Override
  public Iterator&lt;T&gt; iterator() {
    return stream.iterator();
  }
}
</code></pre>

<p>That's it, no additional code needed. You can still only iterate it once, but, you can add the above to an enhanced-for loop:</p>

<pre><code>for (String v : new StreamIterable(Files.lines(...)) {
    ....
}
</code></pre>
    </div>