<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have a few questions to ask about your code, before I dive in:</p>

<ul>
<li>Why are you storing the header's location?</li>
<li>Isn't the header supposed to be on the top?</li>
<li>If it is at the top, isn't it at position 0?</li>
<li>If not, are you sure you don't have some funky CSS sending weird margins and paddings over the top of the page?</li>
</ul>

<hr>

<p>Alright, let's dig into the code!</p>

<p>From now on, I will assume that the header has a weird position.</p>

<hr>

<p>While you're doing right in using (the equivalent of) <code>$(document).ready()</code>, you are forgetting that <code>jQuery.noConflict();</code> can be called, breaking your code.</p>

<p>My suggestion is to use something like this:</p>

<pre><code>window.jQuery(function($){
    [...]
});
</code></pre>

<p>The <code>window.jQuery()</code> (or <code>$()</code>) allows you to create an alias to the jQuery object, being it passed as the first parameter.<br>
You can read about it on <a href="https://api.jquery.com/ready/" rel="noreferrer">https://api.jquery.com/ready/</a></p>

<hr>

<p>As @Dan said, you are re-re-re-re-re-forcing jQuery to painfully look for the header, every time you scroll. Can you imagine how slow that is!?</p>

<p>I will take @Dan's suggestion and change it a bit:</p>

<pre><code>var $header = $('header');
var threshold = 10;
var offsetTop = $header.offset().top - threshold;
</code></pre>

<p>Why I think this is better:</p>

<ul>
<li>The variable names have a better meaning (<code>$header</code> -&gt; <code>$('header')</code>).</li>
<li>You can re-use the <code>$header</code>, without having to look for it all the time.</li>
<li>You are already storing the value you will need later on, without you having to subtract <code>threshold</code>.</li>
<li>You eliminated a magic number!</li>
</ul>

<hr>

<p>Taking on from @Dan's suggestion, they have the following piece of code:</p>

<pre><code>$(document).scroll(function(){
    $header.toggleClass('filled', $(this).scrollTop() - 10 &gt; threshold);
});
</code></pre>

<p>This is a reasonable improvement, but it is still flawed.</p>

<p>I propose the following:</p>

<pre><code>var $document = $(document).scroll(function(){
    $header.toggleClass('filled', $document.scrollTop() &gt; offsetTop);
});
</code></pre>

<p>This stores and re-used the <code>$document</code> created, instead of always running a useless <code>$(this)</code>. And since I've already subtracted the magic number, there's no need to re-calculate it here.</p>

<hr>

<p>I always suggest wrapping the code on a <code>;(function(window, undefined){ [...] })(Function('return this')());</code>, but I leave it for you to decide if it is worth it or not.</p>

<hr>

<p>And now, all together:</p>

<pre><code>window.jQuery(function($){
    var $header = $('header');
    var threshold = 10;
    var offsetTop = $header.offset().top - threshold;

    var $document = $(document).scroll(function(){
        $header.toggleClass('filled', $document.scrollTop() &gt; offsetTop);
    });
});
</code></pre>
    </div>