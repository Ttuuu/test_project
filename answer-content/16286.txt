<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Depends on your definition of "pythonic", if you haven't already check out already <a href="http://www.python.org/dev/peps/pep-0020/" rel="nofollow">PEP 20</a>, "The Zen of Python" gives some good pragmatic guidelines and <a href="http://www.python.org/dev/peps/pep-0008/" rel="nofollow">PEP 8</a> gives some style guidelines.</p>

<p>Personally, pythonic or not, I like things to be easy to read and concise, so here are a couple suggestions</p>

<pre><code>def getFolders(self, mailbox_id, fields=None):
    # if there's no mailbox_id shouldn't this throw an Exception?
    url = "mailboxes/%s/folders.json" % mailbox_id
    if fields:
        url = self.setFields(url, fields)
    return self.getPage(url, "Folder", 200)
</code></pre>

<p>Since this doesn't depend on anything in the class and looks like a utility method, you could just move it outside of the class completely and omit <code>self</code> and you might want to check if the url is <code>None</code></p>

<pre><code>def setFields(url, fields):
    # checks None and length
    if not fields:
        return url
    # if speed is important, you can concatenate instead
    # return url + "?fields=" + ",".join(fields);
    return "%s?fields=%s" % (url, ",".join(fields))
</code></pre>

<p>Here's an alternative to the if/else statements to simulate <code>case/switch</code>:</p>

<pre><code>def checkStatus(self, code, expected):
    if code == expected:
        return
    def error_codes(code):
        messages = { 
            400 : "The request was not formatted correctly",
            401 : "Invalid API Key" }
        default_message = "API Key Suspended"
        return messages.get(code, default_message)
    raise Exception(error_codes(code))
</code></pre>
    </div>