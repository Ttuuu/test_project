<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you download the data about all countries from the API, why not save it such that getting the countries by name is easy and fast? Like a dictionary with <code>content['Cname'].lower()</code> as key?</p>

<pre><code>class Data:
    keys = ['Cname', 'population', 'popRank', 'growthRate', 'worldPer', 'area',
            'capital', 'region', 'gdp']

    def __init__(self, api_key, project_token):
        self.url = f'https://www.parsehub.com/api/v2/projects/{project_token}/last_ready_run/data'
        self.params = {"api_key": api_key}
        self.get_data()

    def get_data(self):
        r = requests.get(self.url, params=self.params)
        r.raise_for_status()
        self.data = r.json()
        self.countries = {item['Cname'].lower():
                          {key: item[key] for key in self.keys}
                          for item in self.data}

    def data_by_name(self,country):
        return self.countries(country.lower())
</code></pre>

<p>Note that I did not replicate your returning of a tuple, but just returned the dict.If you do need them in local variables, you have multiple options:</p>

<ol>
<li>Just use <code>test["gdp"]</code> instead of <code>I</code>.</li>
<li>Use a <code>collections.namedtuple</code> as return value and do <code>test.gdp</code>.</li>
<li>Use <code>locals().update(test)</code> and the afterwards just <code>gdp</code>.</li>
</ol>

<p>The first two I would prefer over the third and over your code.</p>

<p>Note that <code>A,B,C,D,E,F,G,H,I</code> are really bad names. For one, they don't follow Python's official style-guide, <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a>, which recommends <code>lower_case</code> for variables and functions. It also does note make it clear what each variable contains.</p>

<hr>

<p>This</p>

<pre><code>test = country.data_by_name("china")
list1 = []
for element in test:
    list1.append(element)
for x in list1:
    A,B,C,D,E,F,G,H,I = list1
</code></pre>

<p>can also be shortened to</p>

<pre><code>A,B,C,D,E,F,G,H,I = country.data_by_name("china")
</code></pre>
    </div>