<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is a couple of problems with your implementation.</p>

<ul>
<li><p>The most important trait of the merge sort is stability: the elements compared equal retain their relative order. It does not matter when sorting integers, but is extremely important when sorting more complex data. The comparison</p>

<pre><code>    if(A1[0] &lt; A2[0]):
</code></pre>

<p>loses stability, because in case <code>A1[0]</code> is equal to <code>A2[0]</code> the element from <code>A2</code> will be merged first. The correct way is to <code>if A1[0] &lt;= A2[0]</code>.</p></li>
<li><p><code>pop(0)</code> has a linear time complexity, which renders the overall performance quadratic. <code>B1 = B1 + A1 + A2</code> creates yet another copy of the list, and it doesn't help the performance either.</p></li>
</ul>

<p>Manipulating indices, if done right, does reduce memory allocations and deallocations indeed. Unfortunately the GeeksForGeeks code you provided doesn't do it right.</p>
    </div>