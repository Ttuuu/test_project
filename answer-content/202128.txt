<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>After a quick read-through, Iâ€™ve spotted two items:</p>

<hr>

<h2><code>with</code> not used for <code>f_out</code></h2>

<p>The code:</p>

<pre><code>with open(src) as f_in:
    f_out = gzip.open(destpath, 'wb')
    #...
    f_out.close()
</code></pre>

<p>should be replaced with:</p>

<pre><code>with open(arc) as f_in, gzip.open(destpath, 'wb') as f_out:
    #...
</code></pre>

<hr>

<h2>Reg-ex pattern repeatedly compiled</h2>

<p>The function <code>regex_match()</code> takes a string and compiles it to a pattern, and then matches a string to that pattern.  The same pattern string is repeatedly passed to <code>regex_match</code>.   This string should be compiled to a pattern by the caller, and the resulting pattern reused for each match.  This means the calls to <code>regex_match</code> could be replaced by <code>exclude_pattern.match(file)</code> </p>

<hr>

<h2>Argument quoting</h2>

<p>If <code>src</code> or <code>dest</code> contain spaces, this command may become confused.</p>

<pre><code>cmd = 'aws s3 sync {} {}'.format(src, dest)
push = subprocess.call(cmd, shell=True)
</code></pre>

<p>Since you are using the <code>shell=True</code> argument, it may also be a vector for arbitrary command injection!</p>

<p>Instead of formatting the command into a string, with proper quoting, and requiring the <code>.call()</code> command to parse it, you can simply pass in an array of arguments to the call.  No need to worry about spaces or proper escaping/quoting -- and arbitrary command injection becomes much harder:</p>

<pre><code>cmd = ['aws', 's3', 'sync', src, dest]
push = subprocess.call(cmd, shell=True)
</code></pre>

<p>Additional notes:</p>

<p><code>push</code> is neither returned or used.</p>

<p>Also, while <code>subprocess.call(...)</code> is still acceptable, as of Python 3.5 <code>subprocess.run(...)</code> is the preferred interface.</p>

<hr>

<p>More later</p>
    </div>