<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just addressing one of your questions.</p>
<blockquote>
<p><em>"SECURITY: Is my website secure in any way, shape, or form?"</em></p>
</blockquote>
<h1><strong>No it is not!!!</strong></h1>
<h2>Reasons</h2>
<ol>
<li><p>Insecure transport.  You should never send private data via an unsecured protocol. HTTP will let anyone see all the data communicated between you (server) and the client. YOU MUST USE <a href="https://en.wikipedia.org/wiki/HTTPS" rel="noreferrer">HTTPS</a> or an alternative high level encryption when communicating any form of private data.</p>
<p>Node.js supports <a href="https://nodejs.org/api/https.html" rel="noreferrer">HTTPS</a></p>
</li>
<li><p>Insecure Data Store. The file <code>creds.json</code> is open for anyone that can gain access to it. You should NEVER store private data unencrypted no mater how secure you think your server may be.</p>
<p>Node.js provides an <a href="https://nodejs.org/api/crypto.html" rel="noreferrer">encryption module</a> you can use to secure server side data.</p>
</li>
<li><p>Insecure source code. You have user names in the source code, this should never be done. There should be only one source of private data (see point 2 above)</p>
</li>
<li><p>Insecure logging. You should never log data that contains private client data, or log information in such a way such that a reference/association can be made between a client and logged data without access to encryption keys.</p>
</li>
</ol>
<h2>Private data</h2>
<p>You must consider all data related to a client as extremely sensitive. Its not only the password but handles (usernames), IP addresses, log on/off time/dates and more.</p>
<p>My advice is DON'T attempt to create your own authentication and log in system. Use existing services and/or systems.</p>
    </div>