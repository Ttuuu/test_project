<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Long live the <a href="http://book.pythontips.com/en/latest/ternary_operators.html" rel="nofollow noreferrer">Ternary</a>:</h2>

<pre><code>def print_longer(s,s2):
    # return (s,s2)[len(s)&lt;len(s2)] if you don't want to print within the function.
    print( ( s, s2 )[ len(s) &lt; len(s2) ] )
</code></pre>

<h2>Explanation:</h2>

<p>if-else statements are clean, but they're verbose. A ternary operation would reduce this to a one-liner.</p>

<p>The format is as follows: <code>(result_if_false,result_if_true)[comparison]</code></p>

<p>What is happening is that <code>(s,s2)</code> is creating a tuple of the two strings. <code>len(s)&lt;len(s2)</code> then compares the two, and because they're within square brackets <code>[]</code>; the boolean result is casted to an integer index. </p>

<p>Since you can only have a 0 or 1 result, this returns <code>s</code> if it is larger than <code>s2</code>, and vice-versa.</p>

<p>EDIT: This returns <code>s</code> if both strings are of equal lengths.</p>
    </div>