<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You basically butcher the entire reason to dependency inject here.
Some IoCs let you deffer injection by doing <code>public MyConstructor(Func&lt;IMyInterface&gt; factory)</code>. This is fine, because IMyInterface is an interface and the concrete implementation will be invoked through the standard pipeline and it can have its own dependencies. </p>

<p>But your solution cuts off the DI pipeline half way through and the <code>OverThingUtils.GetOtherThing</code> can not benefit from DI at all. And the special <code>Func&lt;string, IType&gt;</code> construct is dangerously close to service locator pattern.</p>

<p>I would create an interface, </p>

<pre><code>interface IOtherThingProvider 
{
   Task&lt;OtherThing&gt; GetOtherThing(string id);
}
</code></pre>
    </div>