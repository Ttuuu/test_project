<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Seems a bit needlessly complicated and not exactly async at all. You're just forcing an async call to be synchronous with <code>.Wait()</code>. Proper way is to use async "all the way down":</p>

<pre><code>[HttpPost]
[Route("api/v1/upload")]
public async Task&lt;HttpResponseMessage&gt; Post([FromUri]string filename)
{
    try
    {
        using (Stream requestStream = await this.Request.Content.ReadAsStreamAsync())
        using (Stream fileStream = File.Create("./" + filename))
        {
            await requestStream.CopyToAsync(fileStream);
        }

        return new HttpResponseMessage { StatusCode = HttpStatusCode.Created };
    }
    catch (IOException)
    {
        throw new HttpResponseException(HttpStatusCode.InternalServerError);
    }
}
</code></pre>
    </div>