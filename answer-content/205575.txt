<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Unsafe code</h2>
<p>We can only guess what the interviewer is looking for. Usually they just want to know if you can write code in whatever language is required.</p>
<p>So the following is just to point out a danger in the code. Should you change your code? I can't say..</p>
<h2>Protect state</h2>
<p>Your function is flawed and can easily have its state corrupted. This is because you expose <code>Node.next</code> and don't consider the various problems this will cause.
eg</p>
<pre><code>const list = new LinkedList();
list.add(1);
list.add(2);
list.add(3);
list.add(4);
const head = list.head();
</code></pre>
<p>Delete second item from the list</p>
<pre><code>head.next = head.next.next;
</code></pre>
<p>Now the <code>length</code> you store is incorrect and the result of <code>findLast</code> will either return <code>index - 1</code>, <code>index + 1</code>,  or worse throw if you reach the end as you will have assigned <code>null</code> to <code>currentNode</code> in the previous step and <code>currentNode.next</code> will throw <code>Can not read property "next" of null</code></p>
<p>Or a cyclic link</p>
<pre><code>head.next = head; // now you have a infinit linked list
</code></pre>
<p>There function <code>LinkedList.add(data)</code> will not exit.</p>
<h2>Don't expose <code>node.next</code></h2>
<p>The solution is simple. Don't expose the link. You can return items in the list wrapped in an object that provides a function next() to move to the next object. Or define the node with a getter for next.</p>
    </div>