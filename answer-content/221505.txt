<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Thanks for the specific questions. It really helps guide feedback.</p>

<blockquote>
  <p>Did I handle OOP well enough?</p>
</blockquote>

<p>This seems pretty good, although a little more thinking about the "responsibilities" of a class will help.</p>

<blockquote>
  <p>What's the best way to create a new object of a given class (object.assign, new Object() etc)? There are a lot of them</p>
</blockquote>

<p><code>new Foo()</code> is the standard way.</p>

<blockquote>
  <p>Which variables should be named using only uppercase letters</p>
</blockquote>

<p>Usually just constants, which include class names.</p>

<blockquote>
  <p>Did I make a mistake by defining variables like score globaly?</p>
</blockquote>

<p>Yes, generally it's good to avoid globals.</p>

<blockquote>
  <p><code>foodEaten() {</code> ... Is it a good way to override an object? How can I do this using "this" keyword?</p>
</blockquote>

<p>You need to step back and look at the design a little bit. Some fn/object/class should be responsible for keeping track of the food, and therefore it would "own" the <code>food</code> variable (as <code>this.food</code>). It would be responsible for creating the original food and replenishing as needed after <code>foodEaten</code> is called. You can sometimes figure this out by passing the variables into where they are needed until you get to the code that can simply define a local variable... and sometimes it takes a little more refactoring.</p>

<blockquote>
  <p>Should I stick to window.requestAnimationFrame(gameLoop); or just use the function with given interval?</p>
</blockquote>

<p>These are basically the same, and probably not worth fretting about. There does probably need some sort of event loop that has locally scoped variables for the game and perhaps food... that's how you would refactor out the global variables. </p>
    </div>