<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>1) Your Quadrilateral class and its subclasses aren't immutable right now...
Having no setters doesn't make an objects immutable. Any fields that are mutable themselves and are not hidden nor cloned when returned make the whole object mutable.</p>

<p>An example with your code :</p>

<pre><code>new Square(vector).getV0().setY(17); // I just made the square... not a square anymore
</code></pre>

<p>You have to make your Vector class immutable as well by getting rid of the setters.</p>

<p>If I were you, I'd also make every field <code>final</code>.</p>

<p>2) Please note that <code>double</code> (and <code>float</code>) are fairly odd fellas. They have a special value named <em>NaN</em> (used to represents some erroneous results such as 0/0) that can (and will) really mess up your calculations. You should check against it in the Vector constructor with this method : <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Double.html#isNaN(double)" rel="nofollow noreferrer">https://docs.oracle.com/javase/10/docs/api/java/lang/Double.html#isNaN(double)</a></p>

<p>3) You should also reimplement the <code>hashCode</code> method as, when you override <code>equals</code> you should override the <code>hashCode</code> as well as can be seen in the <code>Object</code> javadoc : <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Object.html#hashCode()" rel="nofollow noreferrer">https://docs.oracle.com/javase/10/docs/api/java/lang/Object.html#hashCode()</a></p>

<p>4) The <code>isCollinear</code> method does not work as intended right now... don't forget to unit test your code ;)</p>

<p>5) When you override the <code>clone</code> method, you should also implements the <code>Cloneable</code> interface. However, I'd recommend not implementing it (and thus removing the method) as, firstly, there is usually little point in cloning an immutable object and, secondly, you already have a copy constructor.</p>

<p>6) I don't really get why you need to use this special method for your Double comparison.... if you want high precision with real number... double are simply not meant for you...</p>

<p>7) You can't use the getArea method on objects of type 'Quadrilateral' which I find odd</p>

<p>8) Finally, please note that the package name doesn't respect the conventions (it should start with a DNS suffix such as 'fr' or 'com').</p>

<p>Overall, the code is fairly clear and easy to read so that's a good point.</p>
    </div>