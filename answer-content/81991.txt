<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p></p>

<pre><code>class ReverseNumbers {

    public static void main(String[] args) throws IOException {

        URL url = ReverseNumbers.class.getResource("/numbers.txt");

        List&lt;String&gt; values = Files.readAllLines(Paths.get(url.getPath()));
        Collections.reverse(values);

        for(String s : values) {
            System.out.println(Integer.valueOf(s));
        }
    }
}
</code></pre>

<p></p>

<p>In terms of code, the above is, obviously, much more readable and basically uses the NIO classes for efficient management of file resources and Collections API for managing the list itself.</p>

<p>Also notice the getResource(String) can be a better way of loading resources as explained <a href="https://stackoverflow.com/questions/3861989/preferred-way-of-loading-resources-in-java">here</a>.</p>

<p>There is also a <a href="http://www.ibm.com/developerworks/library/j-5things2/" rel="nofollow noreferrer">nice discussion</a> on features of using Collections API over arrays.</p>

<p>I suppose Scanner is good if you are expecting different types of input in your file. Considering the fact that the file is called "numbers.txt" then you can do everything in a single read and manage the resulting collection in whichever way you want, rather than having to scan the file.</p>
    </div>