<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Declare your variables right before you use them. For your <code>cap</code> variables, assuming these stand for caption (more on that with descriptive variables), you have a Declare, Populate, Use in a 1-2-3 pattern.</p>

<pre><code>Dim foo As String '&lt;-- 1 Declare

'Code that does stuff

foo = "bar" '&lt;-- 2 Populate

'More code

buzz.Caption = foo `&lt;-- 3 Use
</code></pre>

<p>You can, and IMO should, reduce down to the assigning the property all at once without the variable.</p>

<pre><code>buzz.Caption = "bar"
</code></pre>

<hr>

<p>Using a default member hides what's going on, making your code harder to read. Avoid using them. The code below is using the default member on the Range object.</p>

<pre><code>Dim defaultMemberAccess As String
defaultMemberAccess = SheetData.Range("Foo")
</code></pre>

<p>Be explicit about what you want it to obtain like as below. You now know it's accessing the <code>Value2</code> member of the Range object.</p>

<pre><code>Dim explicitlyStatedMemberAccess as String
explicitlyStatedMemberAccess = SheetData.Range("Foo").Value2
</code></pre>

<hr>

<p>Explicitly qualify your Sub. Omitting any access modifier means its implicitly <code>Public</code>. Add that Public in to have <code>Public Sub PopulateServiceDates()</code> so it's obvious that it was intentional.</p>

<hr>

<p>Variable names. Use descriptive variables. <code>IHEvalRec</code> made me immediately think it was in interface. That's because an I prefix by convention indicates interface. If I saw <code>inHouseAppraisalReceivedText</code> that would be a lot more informative and take less guesswork. Future-you will also thank you when you come back to this code.</p>

<p>This ties in to Label12, Label13, etc... Rename them labels because they aren't helping readability. Again future-you will thank you.</p>

<hr>

<p>Magic numbers. <code>14</code> has what meaning? Is that the default font size you want to use? We already went over that and this ties in as well. <code>Const DefaultFontSize As Double = 14</code> declares a constant and lets you know you want it to be the default font size so that <code>.Font.size = DefaultFontSize</code> is self describing.</p>

<hr>

<p>Usage of IIF feels odd, like your sometimes expecting an error. You're accessing named ranges and it should be a safe assumption they are there. I'm of the opinion they should be behind a worksheet property, and that the property should handle what occurs if there's a barf error. Something like</p>

<pre><code>Private Property Get InHouseTitleWorkOrderedText() As String
    Dim temp As String
    temp = SheetData.Range("Date_In_House_Title_Work_Ordered").Value2
    If temp = vbNullString Then
        InHouseTitleWorkOrderedText = "N/A"
    Else
        InHouseTitleWorkOrderedText = temp
    End If
End Property
</code></pre>

<p>so that when you are populating the labels caption property you end up with </p>

<pre><code>    With Processing.Label13
        .Caption = InHouseTitleWorkOrderedText &amp; vbCrLf &amp; _
                    InHouseEvaluationSentText &amp; vbCrLf &amp; _
                    OutsideAppraisalOrderedText &amp; vbCrLf &amp; _
                    OutsideTitleOrderedText
        .Font.Size = 14
        .TextAlign = fmTextAlign.fmTextAlignLeft
    End With
</code></pre>

<p>Once you have your properties set up like that you begin think about whether the property should doing any logic checking in the first place. Can that be done in the cell itself? If yes, the property reduces down to</p>

<pre><code>Private Property Get InHouseTitleWorkOrderedText() As String
    InHouseTitleWorkOrderedText = SheetData.Range("Date_In_House_Title_Work_Ordered").Value2
End Property
</code></pre>

<hr>

<p>Lastly and 2 minor things <a href="http://rubberduckvba.com/" rel="nofollow noreferrer">Rubberduck</a>, to which I'm a contributor, helped me pick up that I forgot. You can use replace <code>Str(Err.Number)</code> with <code>Str$(Err.Number)</code> and <code>UCase("error")</code> with <code>UCase$("error")</code>. These are the alternate typed functions.</p>

<p>In truth however <code>UCase$("error")</code> should be just <code>"ERROR"</code>.</p>

<hr>

<p>Combining all the above I came up with</p>

<pre><code>'SheetData
Public Property Get InHouseTitleWorkOrderedText() As String
    InHouseTitleWorkOrderedText = SheetData.Range("Date_In_House_Title_Work_Ordered").Value2
End Property

Public Property Get InHouseEvaluationSentText() As String
    InHouseEvaluationSentText = SheetData.Range("Date_In_House_Eval_Sent").Value2
End Property

Public Property Get AppriasalReviewSentText() As String
    AppriasalReviewSentText = SheetData.Range("Date_Appraisal_Review_Sent").Value2
End Property

Public Property Get DocumentSentForReviewText() As String
    DocumentSentForReviewText = SheetData.Range("Date_Docs_Sent_for_Review").Value2
End Property

Public Property Get HMDALastText() As String
    HMDALastText = SheetData.Range("HMDAClicked").Value2
End Property

Public Property Get BSASavedText() As String
    BSASavedText = SheetData.Range("Date_BSA_Saved")
End Property

Public Property Get OutsideAppraisalOrderedText() As String
    OutsideAppraisalOrderedText = SheetData.Range("Date_Outside_Appraisal_Ordered")
End Property

Public Property Get OutsideTitleOrderedText() As String
    OutsideTitleOrderedText = SheetData.Range("Date_Outside_Title_Ordered")
End Property

Public Property Get InHouseTitleReceivedText() As String
    InHouseTitleReceivedText = SheetData.Range("Date_In_House_Title_Received")
End Property

Public Property Get InHouseAppraisalReceivedText() As String
    InHouseAppraisalReceivedText = SheetData.Range("Date_In_House_Appraisal_Received")
End Property

Public Property Get OutsideAppraisalReceivedText() As String
    OutsideAppraisalReceivedText = SheetData.Range("Date_Outside_Appraisal_Received")
End Property

Public Property Get OutsideTitleReceivedText() As String
    OutsideTitleReceivedText = SheetData.Range("Date_Outside_Title_Received")
End Property
</code></pre>

<p>And the rewritten module</p>

<pre><code>Module1
Option Explicit

Public Sub PopulateServiceDates()
    Const DefaultFontSize As Double = 14

    On Error GoTo ErrHandler

    With Processing.Label12
        .Caption = "In-House Title Work Ordered:" &amp; vbCrLf &amp; _
                    "In-House Evaluation Ordered:" &amp; vbCrLf &amp; _
                    "Appraisal Ordered:" &amp; vbCrLf &amp; _
                    "Title Work Ordered:"
        .Font.Size = DefaultFontSize
        .TextAlign = fmTextAlign.fmTextAlignRight
    End With

    With Processing.Label13
        .Caption = SheetData.InHouseTitleWorkOrderedText &amp; vbCrLf &amp; _
                    SheetData.InHouseEvaluationSentText &amp; vbCrLf &amp; _
                    SheetData.OutsideAppraisalOrderedText &amp; vbCrLf &amp; _
                    SheetData.OutsideTitleOrderedText
        .Font.Size = DefaultFontSize
        .TextAlign = fmTextAlign.fmTextAlignLeft
    End With

    With Processing.Label9
        .Caption = "Appraisal Sent for Review:" &amp; vbCrLf &amp; _
                    "Closing Docs Sent for Review:" &amp; vbCrLf &amp; _
                    "HMDA Helper Last Updated:" &amp; vbCrLf &amp; _
                    "BSA Saved:"
        .Font.Size = DefaultFontSize
        .TextAlign = fmTextAlign.fmTextAlignRight
    End With

    With Processing.Label11
        .Caption = SheetData.AppriasalReviewSentText &amp; vbCrLf &amp; _
                    SheetData.DocumentSentForReviewText &amp; vbCrLf &amp; _
                    SheetData.HMDALastText &amp; vbCrLf &amp; _
                    SheetData.BSASavedText
        .Font.Size = DefaultFontSize
        .TextAlign = fmTextAlign.fmTextAlignLeft
    End With

    With Processing.Label6
        .Caption = "In-House Title Work Received:" &amp; vbCrLf &amp; _
                    "In-House Evaluation Received:" &amp; vbCrLf &amp; _
                    "Appraisal Received:" &amp; vbCrLf &amp; _
                    "Title Work Received:"
        .Font.Size = DefaultFontSize
        .TextAlign = fmTextAlign.fmTextAlignRight
    End With


    With Processing.Label14
        .Caption = SheetData.InHouseTitleReceivedText &amp; vbCrLf &amp; _
                    SheetData.InHouseAppraisalReceivedText &amp; vbCrLf &amp; _
                    SheetData.OutsideAppraisalReceivedText &amp; vbCrLf &amp; _
                    SheetData.OutsideTitleReceivedText
        .Font.Size = DefaultFontSize
        .TextAlign = fmTextAlign.fmTextAlignLeft
    End With

ErrHandler:
    If Err.Number &lt;&gt; 0 Then
        If MsgBox("Error " &amp; Str$(Err.Number) &amp; " " &amp; Err.Description &amp; vbCrLf &amp; _
                  "occured in the PopulateServiceDates Subroutine " &amp; vbCrLf &amp; _
                  "Please let Zack know what caused the error before clicking OK.", vbOKOnly + vbCritical, UCase$("error")) = vbOK Then
            Resume Next
        End If
    End If
End Sub
<span class="math-container">```</span>
</code></pre>
    </div>