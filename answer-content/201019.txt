<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Pragma</h1>

<p>Pragma is compiler dependent. I would suggest to use headers guards.</p>

<h1>Comments</h1>

<p>I am always against commenting code. If you need comments that might suggest bad naming. Additionally commenting stuff that is obvious is meaningless.</p>

<h1>C.48: Prefer in-class initializers to member initializers in constructors for constant initializers</h1>

<pre><code>Vertex(T tee) { m_value = tee; height = 0; left = NULL; right = NULL; parent = NULL; }
</code></pre>

<p>This could be just</p>

<pre><code>struct Vertex {
    T m_value;
    int height {0};
    Vertex * left {nullptr};
    Vertex * right {nullptr};
    Vertex * parent {nullptr};
    Vertex(T tee) : m_value(tee) {}
};
</code></pre>

<h1>Conventions</h1>

<p>It is important to use some kind of coding standard for code.
You probably does not have one right now.</p>

<p>This is normal name for C++ function. That is a way you should name your functions.</p>

<pre><code>Vertex&lt;T&gt; * findValue(T n)
</code></pre>

<p>This is other function but with pythonic name.</p>

<pre><code>void other_right_rotate(Vertex&lt;T&gt; * X)
</code></pre>

<p>This also applies to local variable, but you have</p>

<pre><code>leftrightdifference
</code></pre>

<h1>Hardcoding values</h1>

<p>Try to give each number meaningful name, it will much more easier for readers to understand.</p>

<pre><code>else if (leftrightdifference == -2)
</code></pre>

<h1>Long functions</h1>

<p>Best functions are small (3-5 LOC) functions. Think about dividing long functions into several small functions. This make code more readable. You can give name for the functions that will explain short part of code. Additionally, small functions are easy to unit test.</p>

<h1>Using new</h1>

<p>In modern C++ code you probably will never see <code>new</code></p>

<pre><code>Vertex&lt;T&gt; * newVertex = new Vertex&lt;T&gt;(n);
</code></pre>

<p>Read about smart pointers and how they can be used in your code.</p>

<h1>Matter of taste</h1>

<p>I personally use and, or instead of &amp;&amp;, || but it is a matter of taste.</p>

<pre><code>if ((-1 &lt;= leftrightdifference) &amp;&amp; (leftrightdifference &lt;= 1))
</code></pre>

<p>In my code it would be</p>

<pre><code>if ((-1 &lt;= leftrightdifference) and (leftrightdifference &lt;= 1))
</code></pre>

<h1>Reformat code</h1>

<p>Try to use IDE options where you can reformat code. Right now I think it is not automatically formatted.</p>
    </div>