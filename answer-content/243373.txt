<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't think there is a logic error in what you have posted. And even though there are details that would make it nicer (the cycle can for example run from <code>i=1</code>, questionable use of <code>bits/stdc++.h</code> header, long variable scopes and similar), it should do its job.</p>

<p>I suggest to think about time complexity of the algorithm. Your brute force approach will have quadratic complexity and may be too slow when the input is large.</p>

<p>There are different approaches that you can try. For example, I see you tagged your post with <code>binary-search</code> tag. Why? You could for example keep your vector <strong>sorted</strong> as the user enters the values. When adding a new number, find where it belongs (you can do it by bisection - with logarithmic complexity). All numbers to the left are smaller, the ones on the right are larger. Then insert the number and repeat. How to do it exactly is up to you, if you're allowed to use C++ algorithms, <code>std::lower_bound</code> and <code>std::vector::insert</code> will do the hard work for you.</p>

<p>You can of course craft some tree structure of your own to do something along those lines.</p>
    </div>