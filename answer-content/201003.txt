<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Ill just jump right in; </p>

<h2>Composer To The Rescue</h2>

<p>So you have attempted autoloading, thats great! But by modern standards you should be using composer to; </p>

<ol>
<li>Manage your dependecies</li>
<li>Manage autoloading your namespaces </li>
</ol>

<p><a href="https://stackoverflow.com/questions/31504980/php-adding-custom-namespace-using-autoloader-from-composer">Here is a stackoverflow question that shows how to add your own</a></p>

<h2>Namespaces</h2>

<p>Modern PHP should conform to standrads such as the PSR's your namespace is simply <code>model</code> this isn't good enough, take a look at <a href="https://www.php-fig.org/psr/psr-4/" rel="nofollow noreferrer">PSR4</a>, your namespaces should be something like <code>Script47\MVC_FRAMEWORK_NAME\Models</code></p>

<h2>Dependency Injection - The king of kings</h2>

<p>There are many design paterns you can use to implement applications, and you've gone for dependency injection, which is great! </p>

<p>But your not doing it quite right, you should use a depedency injection container.</p>

<p>Take a look at <a href="http://php-di.org/" rel="nofollow noreferrer">php-di</a> (Its a personal faviourte, but there are others to choose from)</p>

<p>This will also do away with your <code>spl_autoload_register</code> functions!</p>

<h2>Controller is a Router not a Controller</h2>

<p>Your controller class is resonsible for finding dependcies setting them up and letting them run! </p>

<p>This is not a controller (in my understanding) its a router and; </p>

<ol>
<li>It should be named as such (maybe <code>ControllerRouter</code>) </li>
<li>It assumes there will be a Model with the same name as the Controller (bad)</li>
<li>It manually requires certian header files (bad)</li>
<li>It should use dependecy injection and not hand woven classes / models </li>
</ol>

<p>Your controller router is going to be one of the more diffuclt classes to write, but it should be a lot of fun. </p>

<h3>Web applications use ajax (or node but don't open that box, yet!)</h3>

<p>You can <code>POST</code> to every page to get things to update, but thats annoying for the user (effectivly a page refresh everytime) and doesn't seperate concerns! </p>

<p>You should make ajax requests (a HTTP request) to your "api" which your index &amp; your new <code>ControllerRouter</code> should be handling and returning prefferably JSON to the client. </p>

<h3>Conculsion</h3>

<p>There is far to much out of date code for me to sit here and try and improve when the concepts are flawerd. I would recomend you read up on modern PHP techniques and try applying some of them.</p>

<p>Symfony has series on <a href="https://symfony.com/doc/current/create_framework/index.html" rel="nofollow noreferrer">creating your own framework</a>, I have never used it and its ideas and opions may conflict with my own, but you should follow their guide more than my advice  </p>
    </div>