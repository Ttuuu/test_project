<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could do <code>query.GroupBy(MyTernaryWrapperMethod)</code> and declare that method as</p>

<pre><code>string MyTernaryWrapperMethod(xVariableType x)
{
    if(x.ProductStatusId == ProductStatus.Sold || x.ProductStatusId == ProductStatus.OnHold) return "Delivered";

    if(x.ProductStatusId == ProductStatus.Shiped) return "Shiped";

    if(x.ProductStatusId == ProductStatus.NotAvailable) return "NotAvailable";

    if(x.ProductStatusId == ProductStatus.Paid) return "Paid";

    return "New"
}
</code></pre>

<p>But, that method seems to return something being an actual property of x. So maybe you should add a new method to x's type. Also it would be better to use <code>swicth/case</code> instead of those <code>if</code>s:</p>

<pre><code>public string ProductStatusName()
{
    switch (ProductStatusId)
    {
        case ProductStatus.Sold:
        case ProductStatus.OnHold: return "Delivered";
        case ProductStatus.Shiped: return "Shiped";
        case ProductStatus.NotAvailable: return "NotAvailable";
        case ProductStatus.Paid: return "Paid";
        default: return "New"
    }
}
</code></pre>

<p>And then you do:</p>

<pre><code>var results = query.GroupBy(x =&gt; x.ProductStatusName()).Where(g =&gt; g.Key != "New")
</code></pre>
    </div>