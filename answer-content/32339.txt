<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Actually for any Programming Contest Java is slower(very little) than C/C++. If you don't believe you can <a href="http://www.codechef.com/problems/PALIN/" rel="nofollow noreferrer">see it yourself</a>. So I have seen many people using own defined methods to read and write inputs and outputs respectively. You can get the idea from a <a href="https://codereview.stackexchange.com/questions/32302/simple-i-o-class-review-request">post in CR</a>.</p>

<p>Now come to the code I didn't benchmark your palindrome code(sorry for that) but at first glance it's very big and I'm sure it's also hard to maintain. So as a Java programmer this should be your first concern.</p>

<p><em>Enough talk let's write the code</em></p>

<pre><code>import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

class NextPalNo {
    public static void main (String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int i = Integer.parseInt(br.readLine());

        // we know 1 to 9 all are palindrome numbers
        if(i &lt; 9)
            System.out.println(i+1);

        else {
            while(true) {
                i += 1;
                if(isPalindrome(i))
                    break;
            }
            System.out.println(i);
        }
        br.close();
    }

    public static boolean isPalindrome(int i) {
        String s = String.valueOf(i);
        // easy way to see if a number is palindrome or not ;)
        return new StringBuilder(s).reverse().toString().equals(s);
    }
}
</code></pre>
    </div>