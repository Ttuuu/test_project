<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Take care extending built in objects</h2>
<ul>
<li><p>Extending the prototype of builtin objects should be done with care. The best way is via <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" rel="nofollow noreferrer">Object.defineProperty</a>  and first check if something has not already done so. (See 2nd rewrite)</p>
</li>
<li><p>Why create two copies of <code>this</code>.. <code>self</code> and <code>that</code>. Why  not just use <code>this</code> and create a map object with a meaningful name. (see 2nd rewrite)</p>
</li>
<li><p>Don't add functionality outside the role of the function. <code>Array.unique</code> Defiantly should not be calling an alert (in fact you can not trust alerts (clients can turn them off) so you should never use them)</p>
</li>
<li><p>You have actually repeated the process of removing duplicates in the <code>keypress</code> handler. You could just have checked if the length of <code>data</code> and <code>result</code> are different and alerted the client from that. (see 1st rewrite)</p>
</li>
</ul>
<h2>Rewrites</h2>
<p>First quick rewrite showing you don't need <code>Array.unique</code></p>
<pre><code>$(document).ready(function(){
  const lol = $('#lol');
  lol.keypress(function(){
    const data = lol.val().split('\n');
    const result = data.filter((word, i, arr) =&gt; arr.indexOf(word) === i);
    lol.val(result.join('\n'));
    result.length !== data.length &amp;&amp; (alert("duplicate"));
  });
});
</code></pre>
<p>The second rewrite showing a safe way to add to inbuilt prototypes.</p>
<p><strong>Note</strong> that the options <code>configurable</code>, <code>enumerable</code>, <code>writable</code> are set to false. Particularly you <strong>MUST</strong> set <code>enumerable</code> to be <code>false</code> or you could end up with all sorts of bugs appearing in existing code.</p>
<p>You should also learn to not use jQuery. It has had its day and will just set you back as it shelters you from learning modern JS and DOM interfaces.</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>"use strict";
lol.focus();
lol.addEventListener("keyup", event =&gt; {
    const data = lol.value.split("\n");
    const result = data.unique();
    info.textContent = result.length !== data.length ? "Duplicate removed" : "";
    lol.value = result.join('\n');    
});

if (!Array.prototype.unique) {
    Object.defineProperty(Array.prototype, "unique", {
        configurable: false,  // these 3 properties default to false so not needed
        enumerable: false,    // But have added them just to show their availability.
        writable: false,         
        value: function() { 
            const existing = {};
            return this.filter(a =&gt; existing[a] = !existing[a] ? true : false);
        }
    });
} else {
    throw new Error("Array.prototype.unique already defined.");
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;textarea id="lol"&gt;&lt;/textarea&gt;
&lt;div id="info" style="color:red"&gt;&lt;/div&gt;</code></pre>
</div>
</div>

    </div>