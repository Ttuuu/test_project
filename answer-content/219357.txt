<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Its better to use factory pattern for creating custom errors. I'm working on Java and following Java code might be helpful:</p>

<pre><code>class CsvException extends Exception {
    public static final int USEREXISTS = 7;
    public static final int MAILINVALID = 1;
    public static final int SEALUSED = 2;
    public static final int MIXEDUP = 3;

    public static final CsvException createException(int type) {
        CsvException exc = null;
        switch (type) {
        case CsvException.USEREXISTS:
            exc = new UserExistException();
            break;

        case CsvException.MAILINVALID:
            exc = new MailInvalidException();
            break;

        case CsvException.SEALUSED:
            exc = new SealUsedException();
            break;

        case CsvException.MIXEDUP:
            exc = new MixedUpException();
            break;

        default:
            exc = new CsvException();
            break;
        }
        return exc;
    }

    @Override
    public String getMessage() {
        return "A CSV Exception occurred!";
    }
}

class UserExistException extends CsvException {

    @Override
    public String getMessage() {
        return "User already exists!";
    }

}

class MailInvalidException extends CsvException {
    @Override
    public String getMessage() {
        return "Invalid email ID!";
    }
}

class SealUsedException extends CsvException {
    @Override
    public String getMessage() {
        return "Seal is already used!"; //I'm assuming message and this class by exception type
    }
}

class MixedUpException extends CsvException {
    @Override
    public String getMessage() {
        return "Mixed up!";
    }
}
</code></pre>

<p>And you can use above exception factory like below:</p>

<pre><code>    ...

    public void checkMail() throws MailInvalidException {
        //If invalid email ID
        throw (MailInvalidException)CsvException.createException(CsvException.MAILINVALID);
    }

    public void checkUser() throws UserExistException {
        //If user already exists
        throw (UserExistException)CsvException.createException(CsvException.MAILINVALID);
    }

    ...
</code></pre>
    </div>