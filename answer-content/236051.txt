<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a nice snippet which makes it useful for teaching! Here are some points:</p>

<h1>Make imports explicit</h1>

<p>Though <code>import socket, threading</code> is valid in Python, importing in two lines improves readability</p>

<pre><code>import socket
import threading
</code></pre>

<h1>Two lines after imports</h1>

<p>Add two lines after imports. From this:</p>

<pre><code>import socket
import threading
host = socket.gethostname()
...
</code></pre>

<p>to this:</p>

<pre><code>import socket
import threading


host = socket.gethostname()
...
</code></pre>

<h1>Constants in caps</h1>

<p><code>port = 4000</code> should be <code>PORT = 4000</code></p>

<h1>Use string formatting</h1>

<p>From this:</p>

<pre><code>"%s has left the chat." % data
</code></pre>

<p>to this:</p>

<pre><code>"{} has left the chat.".format(data)
</code></pre>

<p>In case of curly braces, you escape using <code>{{}}</code> as in the following case:</p>

<pre><code>'Welcome {}! If you ever want to quit, type {{quit}} to exit.'.format(data)
</code></pre>

<h1>Broadcast before handle_client</h1>

<p>Since in <code>handle_client</code> you use <code>broadcast</code>, define it first</p>

<pre><code>def broadcast(msg, prefix=""):
    ...

def handle_client(conn):
    ...
</code></pre>

<h1>Add a message function</h1>

<p>enclose:</p>

<pre><code>bytes(msg, "utf8")
</code></pre>

<p>in a function called <code>message</code>:</p>

<pre><code>def message(text):
    return bytes(text, "utf8")
</code></pre>

<p>then it becomes neater to use:</p>

<pre><code>broadcast(message('hi'))
</code></pre>

<h1>More explicit messages:</h1>

<ul>
<li>1) Server message</li>
</ul>

<p>When first connecting, the server console states for me:</p>

<pre><code>jPC
Server is ready...
</code></pre>

<p>And then when running clients, you get asked:</p>

<pre><code>Enter server name:
</code></pre>

<p>I had to deduce that jPC is my server name. Modifying to the following might be more explicit:</p>

<pre><code>Server name: jPC
Server is ready...
</code></pre>

<ul>
<li>2) Enter username</li>
</ul>

<p><code>Enter username in the textbox</code> might be a better message. Coupled with the fact that you did not use a placeholder for the entry, users are confused.</p>

<ul>
<li>3) Quiting without username</li>
</ul>

<p>If someone quits without setting a username the server says:</p>

<pre><code>{quit} has left the chat.
</code></pre>

<p>Adding a default id for clients might be better</p>

<pre><code>{
    '&lt;id2&gt;': {
                'username': None,
                'connection_ip': '192.168.56.1:50325'
    },
    '&lt;id2&gt;': ...
}
</code></pre>

<p>you can use the uuid module for id or use the ip itself as id</p>

<h1>Add placeholder effect</h1>

<p>Add a placeholder effect by adding the line:</p>

<pre><code>entry_field.bind("&lt;FocusIn&gt;", lambda args: entry_field.delete('0', 'end'))
</code></pre>

<p>Setting the font color to gray completes the effect.</p>

<h1>Miscellaneous</h1>

<ul>
<li>Use snake case for variables. <code>serverRunning</code> becomes <code>server_running</code></li>
<li>Use a geometry manager like grid for better display</li>
</ul>
    </div>