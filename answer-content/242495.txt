<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would just use <a href="https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Random.html#nextLong()" rel="nofollow noreferrer"><code>SecureRandom#nextLong()</code></a>. <code>SecureRandom</code> will seed itself and shouldn't be the same between two similar computers at the same time. Also, it uses more bits of state than Random (128 vs 48).</p>

<p>I don't know exactly what computers you'll be running this on, but if it's something like a cluster of servers they'll probably have the exact same s1/s2/s3/s4. If they happen to start at the same time (plausible if two processes on two cores are launched by a parents at the same time), then that only leaves the 48 bits of random state.</p>

<p>If you use <code>SecureRandom</code>, you can just call it and immediately get a 64 bit UUID that will have as few collisions as you can possibly guarantee with two offline computers.</p>
    </div>