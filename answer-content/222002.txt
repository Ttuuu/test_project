<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You've received some good comments on the coding style, so I'll focus on the best practice principles of structure and design.</p>

<ul>
<li>Follow the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">single responsibility principle</a> in your controller, it should do one thing, dispatch the commands it receives.  A class should do one thing, the <a href="https://en.wikipedia.org/wiki/Front_controller" rel="nofollow noreferrer"><code>front controller</code></a> shows how this can be decomposed in a flexible and expansive way.</li>
<li>Applying the SRP with a <code>FrontController</code> will make it unnecessary to change the controller to add new commands. Replace your switch with a command mapping, see the <a href="https://en.wikipedia.org/wiki/Command_pattern" rel="nofollow noreferrer">Command Pattern</a>.  A good approach to this is to load the commands from a property file into a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html" rel="nofollow noreferrer">Hashmap</a>; so <code>Command=ClassName</code> that maps the command-name to a class name.</li>
<li>Use the <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html#forName(java.lang.String)" rel="nofollow noreferrer"><code>Class.forName(className).newInstance()</code></a> idiom to construct new instances of the commands on demand.  Commands should qualify as light weight classes for immediate construction.</li>
<li>Create a hierarchy of commands, this will allow controlled and uncontrolled commands.  The access controlled commands will to minimise the risk of a security/access holes when all the controlled commands inherit from an access controlled command.</li>
</ul>

<p>See this answer for a more elaborate explanation of this approach : <a href="https://softwareengineering.stackexchange.com/a/345714/241947">https://softwareengineering.stackexchange.com/a/345714/241947</a></p>
    </div>