<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Always set up the trap <em>before</em> trying to create the directory. Otherwise there's a race condition where the script may die after creating the directory but before having a chance to clean it up. And use single quotes for the <code>trap</code> command to make sure the variable is only expanded at exit:</p>

<pre><code>trap 'rm -rf "$tmpdir"' EXIT
tmpdir="$(mktemp -d)"
</code></pre>

<p>If the trap ends up being triggered <em>before</em> <code>mktemp</code> the result is simply <code>rm -rf ""</code>, which does nothing.</p>

<p>Some other suggestions:</p>

<ol>
<li><a href="https://stackoverflow.com/a/10383546/96588"><code>#!/usr/bin/env bash</code></a> is a more portable shebang.</li>
<li><code>set -o errexit -o nounset</code> is more readable than <code>set -ue</code>.</li>
<li><code>BASH_SOURCE</code> is an array, and it's only by accident that <code>$array_name</code> refers to the first element of <code>array_name</code>. <code>directory="$(dirname "${BASH_SOURCE[0]}")"</code> would be more explicit.</li>
<li><code>if [[ ! "$tmpdir" || ! -d "$tmpdir" ]]</code> is redundant. If <code>mktemp</code> fails the script will stop there, and if it's been removed <code>rm -rf "$tmpdir"</code> is safe, as mentioned.</li>
<li><a href="https://unix.stackexchange.com/q/128985/3645">Don't use <code>ls</code> in scripts!</a></li>
<li>The temporary directory <em>can't</em> already contain any files. That's part of the contract of <code>mktemp</code> - it <em>will</em> create a new directory if it can, or fail otherwise.</li>
</ol>
    </div>