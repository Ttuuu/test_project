<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>You have very bad code ordering. Function definitions blocks contains main code between them, the start of the script is in the start of the file etc. There is a code convention for most languages: classes first, methods/functions second and main code third. Your code looks like this:</p>

<pre><code>import csv
print("Welcome to TickeTron!")
seats = open("tickets.txt", 'r')
seatsRead = open("tickets.txt", 'r').read()
reader = csv.reader(seats)
seatsList = []
for row in list(reader): ...

def rowToLetter(row): ...
def letterToRow(letter): ...
def getLongestSeatLength(): ...
def printSeats(): ...

print("Here is a listing of all available seats:")

printSeats()

def seatAvailable(row, col):...

def purchaseSeat(seat, cost=-1): ...

def findSeat(seatsList): ...

findSeat(seatsList)
print("Very well, ending the program.")
</code></pre>

<p>But should looks like this:</p>

<pre><code>import csv


def rowToLetter(row): ...
def letterToRow(letter): ...
def getLongestSeatLength(): ...
def printSeats(): ...
def seatAvailable(row, col):...
def purchaseSeat(seat, cost=-1): ...
def findSeat(seatsList): ...

print("Welcome to TickeTron!")
seats = open("tickets.txt", 'r')
seatsRead = open("tickets.txt", 'r').read()
reader = csv.reader(seats)
seatsList = []
for row in list(reader): ...
print("Here is a listing of all available seats:")
printSeats()
findSeat(seatsList)
print("Very well, ending the program.")
</code></pre></li>
</ol>

<hr>

<ol start="2">
<li><p>You are opening the file twice and don't close it later in your program. Don't do it, please. If you want to read file, you can replace this block of your code:</p>

<pre><code># Format the text file
seats = open("tickets.txt", 'r')
seatsRead = open("tickets.txt", 'r').read()

# Convert the reader data into a formatted table/2d list (lines 18 to 24)
reader = csv.reader(seats)
seatsList = []
for row in list(reader):
    newRow = []
    # Add each seat into the row as an int
    for seat in row[0].split(" "):
        newRow.append(int(seat))
    # Add the row to the table
    seatsList.append(newRow)
</code></pre>

<p>with this:</p>

<pre><code>with open("tickets.txt", 'r') as f:  # File will be automatically closed
    reader = csv.reader(f)
    for row in reader:
        seatsList.append([int(seat) for seat in row[0].split(" ")])
</code></pre></li>
</ol>

<hr>

<ol start="3">
<li><p><code>getLongestSeatLength()</code> just iterates through seats and searches for a maximum. Python has <code>max()</code> function so the whole your function can be replaced with this code using generators:</p>

<pre><code>def getLongestSeatLength():
    return max(len(str(seat)) for seat in row for row in seatsList)
</code></pre></li>
</ol>

<hr>

<ol start="4">
<li><code>printSeats()</code> is pretty OK. There are improvements that can be done, but mostly minor. One point - if I will write this program, I will try to avoid chr-ord transitions. I think they are rather confusing.</li>
</ol>

<hr>

<ol start="5">
<li><p><code>input()</code> returns strings so there is no need to wrap it with <code>str()</code>, like in your code:</p>

<p><code>str(input(...))</code> </p></li>
</ol>
    </div>