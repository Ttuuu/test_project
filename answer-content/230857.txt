<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could use route model binding to remove some lines from your code, but that would require changing the route so it passes the MenuItem's id.</p>

<pre>
<code><strike>public function update(UpdateMenuItemRequest $request)</strike>
public function update(MenuItem $item, UpdateMenuItemRequest $request)
{
    $validated = $request-&gt;validated();

    <strike>$item = MenuItem::findOrFail($validated['id']);</strike>

    foreach($validated['translations'] as $validatedTranslation) {
        $item-&gt;translations()-&gt;updateOrCreate(['locale' =&gt; $validatedTranslation['locale']], $validatedTranslation);
    }

    return $item;
}
</code></pre>

<p>Also, if you want legibility and go all out with functional programming, you could replace your loop with a collection method.</p>

<pre class="lang-php prettyprint-override"><code># Assuming the request object only has a translation array since you don't need the id anymore
public function update(MenuItem $item, UpdateMenuItemRequest $request)
{
    collect($request-&gt;validated()['translations'])-&gt;each(function ($translation) use ($item) {
        $item-&gt;translations()-&gt;updateOrCreate($translation);
    });
}
</code></pre>

<p>Depending on what kind of relationship we're dealing with there could be other ways as well.</p>
    </div>