<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm assuming you're only wanting a review of the <em>approach</em> rather than the implementation. Otherwise, you would have placed the entire implementation in the question (which is required by Code Review if you wanted that reviewed).</p>

<p>Doing parameter checks on runtime is</p>

<ol>
<li>A performance cost</li>
<li>Noise in the code</li>
<li>Development overhead</li>
</ol>

<p>If you want to ensure type safety while not sacrificing runtime performance, code readability, or precious developer time (and hair), it is best to move this responsibility off the runtime and to somewhere else. This is either at authoring time, compile time, or both. Your options are either:</p>

<ul>
<li><p>To use a type hinting and linter setup, like JSDoc and ESLint. This is the least invasive way to enforce safety while still be able to write in vanilla JS. </p></li>
<li><p>Use a type-safe language, like TypeScript or Flow. You'll have to change how your code is written, but type-safety is built-in. You can also write code in TS, compile it to JS, and always be sure that JS is type-safe (and not care about the consuming end).</p></li>
</ul>

<p>In either case, there are tools, plugins and editor add-ons that allow you to get immediate feedback on incorrect types (in-editor warnings) and fail the build if the types aren't adhered correctly. An added benefit is that the code is self-documenting, especially if you take the JSDoc route.</p>
    </div>