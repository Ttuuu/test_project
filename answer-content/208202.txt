<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For a beginner this is not bad at all. Consider factoring out repeated code into its own function, particularly the code that reads two input numbers and converts them to floats. In that function you could also include the printing of the operation title. Finally, consider putting your globally scoped code into a main function.</p>

<p>The application can be even more abbreviated if you use the <code>operator</code> library and some simple tuple lookups:</p>

<pre><code>#!/usr/bin/env python3

from operator import add, sub, mul, truediv

'''A simple calculator '''


def main():
    ops = (('Addition', add),
           ('Subtraction', sub),
           ('Multiplication', mul),
           ('Division', truediv))
    print('Hello to Simple Calculator ver.0.0003.')
    print('Type:')
    print('\n'.join(' %d. for %s' % (i+1, name)
                    for i, (name, op) in enumerate(ops)))
    print(' 0. to exit')

    while True:
        try:
            user_input = int(input('What operation do you need? '))
        except ValueError:
            print('Invalid input.')
            continue
        if user_input == 0:
            break
        elif 1 &lt;= user_input &lt;= 4:
            title, op = ops[user_input - 1]
            print('%s:' % title)
            try:
                num1 = float(input('Give me your first number: '))
                num2 = float(input('Give me a second number: '))
                print(op(num1, num2))
            except ValueError:
                print('Invalid input.')
        else:
            print('Invalid input.')


if __name__ == '__main__':
    main()
</code></pre>

<p>You don't even need your operations to be separated into functions.</p>
    </div>