<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>After some research, I ended to a better and faster solution. Here is the code:  </p>

<pre><code># import packages
import numpy
import mahotas.polygon
import shapely.geometry as shageo
import cv2
import numpy as np

def get_mask(dims, pts):
    # create a numpy array of zeros with the same dimensions of the image 
    canvas = numpy.zeros((dims[0], dims[1]), dtype=int)
    # the points coords in the form of pt(y, x)

    # fill the polygon with ones.
    mahotas.polygon.fill_polygon(pts, canvas)
    return canvas


def find_polygon(img):
    # get the gray image and do binaryzation
    gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)
    gray[gray &lt; 20] = 0
    gray[gray &gt; 0] = 255

    # get the largest boundry of the binary image to locate the target
    contours, _ = cv2.findContours(gray, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    rect = cv2.minAreaRect(contours[0])
    box = cv2.boxPoints(rect)
    box = np.int0(box)
    poly = shageo.Polygon(box)
    # return the polygone coords in a list
    return list(poly.exterior.coords)


def main():
    img = cv2.imread('filename.jpg')
    # get the coords of the polygon containing (around) the image.
    coords = find_polygon(img)
    poly_coords = []
    # the coords are floats and sometimes are negaive (-1), so transform them into positive ints.
    for element in coords:
        poly_coords.append(tuple(map(int, map(abs, reversed(element)))))

    mask = get_mask(img.shape, poly_coords)
    # convert the mask into array of 0 and 1.
    binary_mask = np.logical_not(mask).astype(int)
    # reshape the array to be similar to the image dimenstions
    binary_mask = binary_mask.reshape(img.shape[0], img.shape[1], -1)
    # sum the binary mask with the image
    cv2.imwrite('res.jpg', img + binary_mask * 255)


main()
</code></pre>

<p>I am sure this code can be optimized more, any suggestions are welcome. </p>

<p><strong>Credits:</strong><br>
1- <a href="https://stackoverflow.com/questions/5587839/drawing-polygons-in-numpy-arrays">Drawing polygons in numpy arrays</a><br>
2- <a href="https://stackoverflow.com/a/56592818/8128190">Whiten black contours around a skewed image opencv</a></p>

<p>Here is the result:<br>
<a href="https://i.stack.imgur.com/TZJRL.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/TZJRL.jpg" alt="enter image description here"></a></p>
    </div>