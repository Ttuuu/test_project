<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you say the input string could be "large", it's probably unwise to try to store the words in a list like this:</p>

<pre><code>list1 = sentence.split()
</code></pre>

<p>Instead, read the answers to <a href="//stackoverflow.com/q/3862010">Is there a generator version of <code>string.split()</code> in Python?</a> and pick one you like.  For example, I'd like to be able to handle input from a stream if it's too big to fit in memory, so I chose this one:</p>

<pre><code>import itertools

def iter_split(string, sep=' '):
    groups = itertools.groupby(string, lambda s: s != sep)
    return (''.join(g) for k, g in groups if k)
</code></pre>

<p>The odd-length words can be removed by filtering as a generator expression (similar to <a href="/a/171600">MarianD's answer</a>, but as a generator expression):</p>

<pre><code>gen = (word for word in iter_split(input) if len(word) % 2 == 0)
</code></pre>

<p>The <code>max()</code> function makes a single pass over its <code>iterable</code> input, so needs no change to work with a generator:</p>

<pre><code>return max(gen, key=len)
</code></pre>

<p>You could choose to combine the filtering with the <code>max</code> key-function instead:</p>

<pre><code>return max(iter_split(input), lambda s: len(s) if len(s) % 2 == 0 else None)
</code></pre>
    </div>