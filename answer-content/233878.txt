<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I take the idea to return an <code>Ordering</code> from the other answer:</p>

<pre><code>use std::cmp;

pub fn compare(a: &amp;[u8], b: &amp;[u8]) -&gt; cmp::Ordering {
    a.iter()
        .zip(b)
        .map(|(x, y)| x.cmp(y))
        .find(|&amp;ord| ord != cmp::Ordering::Equal)
        .unwrap_or(a.len().cmp(&amp;b.len()))
}
</code></pre>

<p>You can use the powerful Rust iterators:</p>

<ul>
<li><code>zip</code> allows to iterate both the slices at once,</li>
<li><code>map</code> transforms each pair to an enum variant representing the ordering of the 2 numbers</li>
<li><code>find</code> tries to find a pair that isn't equal</li>
<li>if nothing is found, I return the difference between the slices sizes.</li>
</ul>
    </div>