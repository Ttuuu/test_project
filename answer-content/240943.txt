<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd have to ask - do you <em>have</em> to <code>Console.WriteLine()</code> the output? Most code testing sites want a return value from a method rather than looking at the console output and clearly, the console output is going to be the vast majority of the time spent in the application.</p>

<p>Secondly, I have a few quick and easy tips for increasing performance:</p>

<ol>
<li>Ditch the <code>string.Concats</code> - you have the <code>StringBuilder</code> in hand and can just 
<code>.Append()</code> each of those items in turn:</li>
</ol>

<pre><code>stringBuilder.Append(count);
stringBuilder.Append(char.GetNumericValue(digit));
</code></pre>

<p>in the loop and</p>

<pre><code>stringBuilder.Append(count);
stringBuilder.Append(digit);
</code></pre>

<p>after the loop.</p>

<ol start="2">
<li><p>Pre-allocate list size: <code>List&lt;string&gt; sequence = new List&lt;string&gt;(nthTerm + 1) { "1" };</code> This will reduce reallocations as the list grows (it starts at 4 and then increases by twice the size as necessary).</p></li>
<li><p>Measure with precision - surround your processing code in <code>Main</code> with <code>var SW = Stopwatch.StartNew();</code> and <code>Console.WriteLine(sw.Elapsed);</code>. This will show you the time your code actually took.</p></li>
</ol>

<p>After I did these all the things listed above, 2 ran in 00:00:00.0006395 and 50 ran in 00:00:00.5806011.</p>
    </div>