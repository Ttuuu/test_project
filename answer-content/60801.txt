<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One thing I would say is that you don't need to create those connection string variables, you are only using them once in this program and you have them nicely hidden where they should be, so you can just call them when you use them, which in this case is once.</p>

<p>so instead of this</p>

<pre><code>var OracleConStr = ConfigurationManager.ConnectionStrings["OracleCon"].ConnectionString;
var SqlSvrConStr = ConfigurationManager.ConnectionStrings["SqlSvrCon"].ConnectionString;
using (OracleConnection OraCon = new OracleConnection(OracleConStr))
{
    var res = OraCon.Query&lt;Employee&gt;(Constants.SelectSql).ToList();

    res = res.GroupBy(x =&gt; x.EmpNumber.ToUpper()).Select(x =&gt; x.LastOrDefault()).ToList();
    using (SqlConnection Sqlcon = new SqlConnection(SqlSvrConStr))
    {
</code></pre>

<p>Do this instead</p>

<pre><code>using (OracleConnection OraCon = new OracleConnection(ConfigurationManager.ConnectionStrings["OracleCon"].ConnectionString))
{
    var res = OraCon.Query&lt;Employee&gt;(Constants.SelectSql).ToList();

    res = res.GroupBy(x =&gt; x.EmpNumber.ToUpper()).Select(x =&gt; x.LastOrDefault()).ToList();
    using (SqlConnection Sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["SqlSvrCon"].ConnectionString))
    {
</code></pre>

<p>You have already named them nicely so you know exactly what they are, meaning there is no reason to create variables for these, they are only used once.</p>

<hr>

<p>and instead of a for loop here:</p>

<pre><code>using (SqlConnection Sqlcon = new SqlConnection(SqlSvrConStr))
{
    Sqlcon.Open();
    for (int i = 0; i &lt; res.Count; i++)
    {
        var item = Sqlcon.Query&lt;Employee&gt;(Constants.SelectEmpSql, new { EmpNumber= res[i].EmpNumber}).FirstOrDefault();
        if (item == null) // new record found
        {
            Sqlcon.Execute(Constants.InsertSql, res[i]);
        }
        else if (GetHashcode(res[i]) != GetHashcode(item)) // record updated
        {
            Sqlcon.Execute(Constants.UpdateSql, res[i]);
        }
    }
}
</code></pre>

<p>you could use a foreach loop</p>

<pre><code>using (SqlConnection Sqlcon = new SqlConnection(SqlSvrConStr))
{
    Sqlcon.Open();

    foreach (var record in res)
    {
        var item = Sqlcon.Query&lt;Employee&gt;(Constants.SelectEmpSql, new { EmpNumber= record.EmpNumber}).FirstOrDefault();
        if (item == null) // new record found
        {
            Sqlcon.Execute(Constants.InsertSql, record);
        }
        else if (GetHashcode(record) != GetHashcode(item)) // record updated
        {
            Sqlcon.Execute(Constants.UpdateSql, record);
        }
    }
}
</code></pre>

<p>This is a little bit cleaner and is more straight to the point about what you are doing.  I would probably change some variable names around, but I will let you have that fun.</p>
    </div>