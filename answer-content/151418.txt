<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>Private Sub dgvproformas_CellContentClick(sender As Object, 
                                          e As DataGridViewCellEventArgs) Handles dgvproformas.CellContentClick

    ' I think you don't need colname variable at all
    ' You can just check for proper column name and exit if it is not
    ' And get rid of Select Case block
    If dgvproformas.Columns(e.ColumnIndex).Name.Equals("btnSave") = False Then
        Exit Sub
    End If

    ' Now you can get instance of DataGridViewRow 
    ' With which you can get column values without everytime providing RowIndex
    Dim row As DataGridViewRow = dgvproformas.Rows(e.RowIndex)

    ' Then instead of using six parameters for updateProforma method
    ' Create a class which represent those values
    ' If you change type of the proerties to be Nullable, then
    ' you don't need to validate against null values
    Dim data As New ProformaData With
    {
        .JobId = row.Cells("job id").Value,
        .Proformano = row.Cells("proformapaymentreceiveddate").Value,
        .PaymentReceivedDate = row.Cells("proformano").Value,
        .PaymentReceived = row.Cells("proformapaymentreceived").Value,
        .ProformaRequired = row.Cells("proformarequired").Value,
        .ProformaRaised = row.Cells("proformaraised").Value
    }

    ' Then you can change update updateProforma method
    ' to accept instance of ProformaData instead of six parameters

    If MsgBox("Are you sure you'd like to save this record?", vbYesNo) = vbYes Then
        ' Values of Nullable you can get by GetValueOrDefault method
        ' which will return default value if Nullable has no value
        ' False for Boolean, 0 for Integer, null for String
        ' Only for string you will use If statement to get empty string instead of null
        Dim proformano As String = If(data.Proformano.GetValueOrDefault, String.Empty)
        updateProforma(data.JobId.GetValueOrDefault(), 
                       proformano, 
                       data.PaymentReceived.GetValueOrDefault(),
                       data.ProformaRaised.GetValueOrDefault(),
                       data.ProformaRequired.GetValueOrDefault(),                        
                       data.PaymentReceivedDate.GetValueOrDefault())
    End If       
End Sub

Public Class ProformaData
    Public Property JobId As Integer?
    Public Property Proformano  As String
    Public Property PaymentReceivedDate As DateTime?
    Public Property PaymentReceived  As Boolean?
    Public Property ProformaRequired As Boolean?
    Public Property ProformaRaised As Boolean?
End Class
</code></pre>

<p>Then I suggest you set "Option Strict On" in your project or in the one file at the time. "Option Strict On" will give fast feedback (during compile time) about possible type casting/converting errors.</p>
    </div>