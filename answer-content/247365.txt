<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First, I wouldn't rely on <code>flatten</code> from a module like <code>setuptools</code>. Its purpose isn't in line with the interface of the module, so it's likely an "implementation detail". There isn't necessarily any guarantee that it will exist in the future.</p>
<p>Also, if you check its definition, you'll be pointed to a better option:</p>
<pre><code>flatten = itertools.chain.from_iterable
</code></pre>
<p>It's simply a alias for <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>from_iterable</code> on <code>itertools.chain</code></a>.</p>
<hr>
<p>Please respect Python's <a href="https://www.python.org/dev/peps/pep-0008/#naming-conventions" rel="nofollow noreferrer">naming conventions</a>. Normal variable names should be in snake_case.</p>
<hr>
<p>I would try and split this up into functions. Even if done simply, a procedure of</p>
<pre><code>def main():
    initialize_net()
    propagate()
    backpropagate_errors()
</code></pre>
<p>makes it a lot easier to immediately understand the flow of the program and what code is a part of what step. That would also make it easier to control when the code in the script runs. You don't necessarily want the whole thing to run just because you loaded the file into your IDE.</p>
<hr>
<p>Sorry, I wish I had the energy to do a good review of this. I remember my first NN from scratch. That was a fun project.</p>
    </div>