<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The very first thing you should do to improve it is comment it. I'm reading it for almost half an hour and still can't understand what it does. I tested it, and it indeed work as intended, but I have no idea why. What algorithm are you using?</p>

<p>I pointed below parts of the code that aren't clear to me. Since @blufox already presented a simpler way to count bits (that works for non-zero numbers), I won't bother to suggest an improvement myself.</p>

<pre><code>def bitcount(n):
    a = 1
    while 1&lt;&lt;a &lt;= n:
        a &lt;&lt;= 1
</code></pre>

<p>Why is <code>a</code> growing in powers of two, while you're comparing <code>1&lt;&lt;a</code> to n? The sequence you're generating in binary is <code>10 100 10000 100000000 10000000000000000 ...</code> Take n=<code>101010</code>, and notice that</p>

<p><code>10000 &lt; 100000 &lt; 101010 &lt; 1000000 &lt; 10000000 &lt; 100000000</code></p>

<p>i.e. there is no relation between <code>1&lt;&lt;a</code> and the number of bits in <code>n</code>. Choose a=<code>1&lt;&lt;2</code>, and <code>1&lt;&lt;a</code> is too small. Choose a=<code>1&lt;&lt;3</code> and <code>1&lt;&lt;a</code> is too big. In the end, the only fact you know is that <code>1&lt;&lt;a</code> is a power of two smaller than <code>n</code>, but I fail to see how this fact is relevant to the task.</p>

<pre><code>    s = 0
    while a&gt;1:
        a &gt;&gt;= 1
        if n &gt;= 1&lt;&lt;a:
            n &gt;&gt;= a
            s += a
</code></pre>

<p>This removes <code>a</code> bits from <code>n</code>, while increasing the bit count by <code>a</code>. That is correct, but I fail to understand why the resulting <code>n</code> will still have fewer bits than the next <code>1&lt;&lt;a</code> in the sequence (since they vary so wildly, by <code>2**(2**n)</code>).</p>

<pre><code>    if n&gt;0:
        s += 1

    return s
</code></pre>

<p>I see that the result is off by 1 bit, and your code correctly adjust for that. Again, no idea why it does that.</p>
    </div>