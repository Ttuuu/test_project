<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are a few things we could improve:</p>

<ul>
<li><p>you could use the "lazy" <a href="https://docs.python.org/3/library/glob.html#glob.iglob" rel="noreferrer"><code>glob.iglob()</code></a> to filter out <code>*.txt</code> files instead of doing the <code>os.listdir()</code>, keeping the whole list if memory and having an extra check inside the loop:</p>

<pre><code>for filename in glob.iglob("*.txt"):
</code></pre></li>
<li><p>instead of using <code>textfile.readlines()</code> and read all the lines in a file into memory, iterate over the file object directly in a <em>"lazy" manner</em>:</p>

<pre><code>for line in textfile:
</code></pre></li>
<li><p>instead of manually keeping track of <code>column</code> value, you could use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="noreferrer"><code>enumerate()</code></a>:</p>

<pre><code>for column, filename in enumerate(glob.iglob("*.txt"), start=1):
</code></pre>

<p>Same idea could be applied for rows.</p></li>
<li><p>I think you don't have to use <code>get_column_letter()</code> and instead operate the numbers which you have:</p>

<pre><code>sheet.cell(row=row, column=column).value = line
</code></pre></li>
<li><p>not to say anything against <code>openpyxl</code>, but I personally find <a href="https://xlsxwriter.readthedocs.io/" rel="noreferrer"><code>xlsxwriter</code></a> module's API more enjoyable and more feature rich</p></li>
</ul>

<hr>

<p>Complete improved version:</p>

<pre><code>import glob

import openpyxl


def text_into_spreadsheet():
    """main logic for read .txt into spreadsheet"""
    workbook = openpyxl.Workbook()
    sheet = workbook.active

    for column, filename in enumerate(glob.iglob("*.txt"), start=1):
        with open(filename) as textfile:
            sheet.cell(row=1, column=column).value = filename

            for row, line in enumerate(textfile, start=2):
                sheet.cell(row=row, column=column).value = line

    workbook.save('result.xlsx')


if __name__ == "__main__":
    text_into_spreadsheet()
</code></pre>
    </div>