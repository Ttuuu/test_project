<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Avoid <code>using</code> in header files</h1>
<p>It looks like the code you have written is in a header file, which is to be included in an actual application that needs to intersect polygons. If you include this file, it also means you pull in all the <code>using</code> declarations, which could result in unexpected behavior. It might be safe to move the <code>using</code> declarations into <code>class Polygon</code>, but I'd rather avoid doing it altogether.</p>
<p>You also forgot <code>using std::nullopt</code>.</p>
<h1>The move constructor should take a non-<code>const</code> reference</h1>
<p>Since you want to  move things from an object, that object might have to be modified, so <a href="https://stackoverflow.com/questions/10770181/should-a-move-constructor-take-a-const-or-non-const-rvalue-reference">move constructors should take non-<code>const</code> references</a>.</p>
<h1>Consider adding <code>operator&amp;()</code></h1>
<p>Polygon intersection shares a lot of similarities with bitwise AND operations. It makes sense to add an <code>operator&amp;()</code> to your class, so you can write:</p>
<pre><code>Polygon a{...}, b{...};
Polygon c = a &amp; b;
</code></pre>
<h1>Your sorting function is wrong</h1>
<p>You can't sort polygons into counter-clockwise order the way you did. The angles you calculate are relative to coordinate (0, 0), but the polygons themselves can be anywhere. You have to calculate the angles relative to a point inside the intersection.</p>
<p>See <a href="https://stackoverflow.com/questions/6989100/sort-points-in-clockwise-order">this StackOverflow question</a> for a possible algorithm.</p>
<p>Alternatively, since the points of the input polygons are already sorted, and the intersection of two convex polygons is just two pieces of each polygon concatenated, you should not need to sort at all.</p>
    </div>