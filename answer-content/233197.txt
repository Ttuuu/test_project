<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code is quite complicated. It's possible to do it in a much simpler way. But to do that, you have to know a trick about anagrams:</p>

<blockquote>
  <p>Iff two words are anagrams of each other, their sorted characters are the same.</p>
</blockquote>

<p>This means that you don't need to count each character in a map, you can just take a string, sort its characters (like you already do), make it a string again (which you also do) and use this string as the key to the map.</p>

<p>When you abstract the problem further, it can be seen as a map, in which multiple entries can be stored for each key. This is also something that your code already does. The crucial point is how the key is calculated. You already defined a method for that and called it <code>createMap</code>. That name is wrong. That method does not create a map, it computes the <em>key</em> instead.</p>

<p>Your key generation method should be as simple as:</p>

<pre class="lang-java prettyprint-override"><code>private String key(String word) {
    char[] chars = word.toLowerCase().toCharArray();
    Arrays.sort(chars);
    return new String(chars);
}
</code></pre>

<p>One area where you can improve your code a lot is how you name the variables. Right now you named most of the variables based on their type. For example, <code>al</code> is a list. It probably was an <code>ArrayList</code> somewhere in the past, that's where the <code>a</code> might originate from. Or the <code>a</code> means <code>anagram</code>, in which case the variable should really have been called <code>anagrams</code>.</p>

<p>In general, variable names should represent the <em>purpose</em> of the variable, not the <em>data type</em>. The data type is easy to see if you have a good editor, but the purpose is much more important to express.</p>
    </div>