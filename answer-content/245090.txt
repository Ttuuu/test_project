<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Round-trips for serialization</h2>
<p>You start with this:</p>
<pre><code>request.values.get('task')
</code></pre>
<p>Then <code>loads</code> it to (presumably) a dictionary; wrap it in an outer dictionary; and then immediately <code>deserialize</code> it. This seems a little awkward. If <code>task</code> is a serialized representation that needs special deserialization logic, then can you factor out a section of <code>deserialize</code> and only call that, rather than these intermediate steps?</p>
<h2>Do not run as root</h2>
<p>This is stated by @Anonymous and bears repeating. Do not run as root. This is dangerous and bad. You should be making a service user with limited permissions and running this script as that user. In addition, consider replacing this:</p>
<pre><code>/root/progress_data
</code></pre>
<p>with a subdirectory of <code>var</code> whose permissions are restricted to the service user.</p>
<h2>Dict updates</h2>
<pre><code>serialized_data['media_company']['date_from'] = \
                                    self.date_from.strftime("%Y-%m-%d")
serialized_data['media_company']['date_to'] = \
                                    self.date_to.strftime("%Y-%m-%d")
</code></pre>
<p>can be</p>
<pre><code>serialized_data['media_company'].update({
    'date_from': self.date_from.strftime("%Y-%m-%d"),
    'date_to': self.date_to.strftime("%Y-%m-%d"),
})
</code></pre>
<h2>Choose a string style</h2>
<p>i.e. single or double quotes, rather than</p>
<pre><code>'result': "This report is already being generated"
</code></pre>
<h2>Creation-closure</h2>
<p>This block:</p>
<pre><code>file = open(f'/root/progress_data/{progress_hash}', 'w+')
file.close()
try:
    report = self.generate_report(serialized_data)
except:
    os.remove(f'/root/progress_data/{progress_hash}')
    return json_response({
        "success": False,
        'result': "Error while generating report",
    })
os.remove(f'/root/progress_data/{progress_hash}')
</code></pre>
<p>has a few issues:</p>
<ul>
<li>Rather than an explicit <code>close</code>, put the <code>open</code> in a <code>with</code></li>
<li>As @Anonymous says, move your <code>remove</code> to a <code>finally</code> and de-duplicate it</li>
<li>Form the progress file path using <code>pathlib.Path</code></li>
<li>Store the path to a temporary variable rather than re-calculating it three times.</li>
<li>Do not base the name of the file on a hash, and do not open it yourself; allow <code>tempfile</code> to name and open it for you. If necessary, you can control the temporary file's directory with the <code>dir</code> argument.</li>
</ul>
    </div>