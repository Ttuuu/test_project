<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Whether to use <code>React.Fragment</code> or not depends on how you want the resulting DOM structured. Using <code>React.Fragment</code> avoids introducing additional elements in the DOM when they are not needed.</p>

<p>Fragments were introduced because only one React element can be returned from the <code>render</code> function, but it is pretty common and natural to need to return more than one element. Before Fragments, we had to wrap these elements in a <code>div</code> or other tag that really served no other purpose than to please React. This worked most of the time, but there were cases where it was not sufficient, such as when a component needed to return two <code>tr</code> elements. Wrapping <code>tr</code>'s in a <code>div</code> and trying to place that in a <code>tbody</code> doesn't work. With Fragments, multiple elements can be returned and React does not have to render anything for the Fragment itself, only the children of the Fragment.</p>

<p>That being said, there are some situations where wrapping elements in a <code>div</code> or other tag makes sense. One that comes up frequently for me is when I have a component just like your products example, but I want to apply a margin, padding, border, or other style to the wrapper around the actual children. In that case, <code>React.Fragment</code> can't help me and I need a <code>div</code> or <code>section</code>.</p>

<p>A general rule-of-thumb, if you have a <code>div</code> or <code>section</code> that is doing absolutely nothing but letting you return multiple elements, you should switch it out with <code>React.Fragment</code>. If you are using that wrapper <code>div</code> in any way, keep it.</p>

<p>If you haven't yet, I would suggest reading the official <a href="https://reactjs.org/docs/fragments.html" rel="nofollow noreferrer">Fragments</a> guide. It demonstrates the table situation as an example for why Fragments were introduced.</p>
    </div>