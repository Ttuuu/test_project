<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>General Feedback</h2>

<p>This code looks quite decent. Most of the functions and methods aren’t excessively long. Some lines are terminated with a semi-colon but others aren’t. It is best to be consistent. </p>

<p>The code uses some <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> AKA ES-6 features like classes and arrow functions so other ES-6 features could be used as well. See below for more details. </p>

<h2>Targeted Feedback</h2>

<p>The two lines in the snake constructor that setup the array of property <code>bod</code> and push a block into it could be combined into a single statement. </p>

<p>An ES-6 <code>for...of</code> loop could be used to simplify <code>Snake::draw()</code></p>

<blockquote>
<pre><code>for (var x = 0; x &lt; this.bod.length; x++) {
  this.bod[x].draw();
}
</code></pre>
</blockquote>

<p>To this:</p>

<pre><code>for (const segment of this.bod) {
  segment.draw();
}
</code></pre>

<p>It seems a bit beyond the scope of the Snake class to set a timer to call<code>window.reload</code> from the <code>win</code> method. It seems more appropriate to have that handled by the <code>showWinner()</code> function. </p>

<p>For a small SPA it likely doesn’t matter but some variables are referenced globally- e.g. <code>start</code>, <code>loop</code>, <code>frames</code>, <code>ctx</code>, etc. In a larger application it would be wise to at least declare them with the <code>var</code> or <code>let</code> keyword and wrap everything in an IIFE or module. </p>

<p>The arrow function below could be simplified to a single line:</p>

<blockquote>
<pre><code>timing = setInterval(() =&gt; {
  time -= 1;
}, 1000)
</code></pre>
</blockquote>

<p>To the following:</p>

<pre><code>timing = setInterval(_ =&gt; time -= 1, 1000);
</code></pre>

<p>Notice that the empty parameters list was replaced by a single unused parameter i.e. <code>_</code> </p>
    </div>