<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>list(i for i in items if i.startswith(word))
</code></pre>

<p>This is just a list comprehension with extra steps (and overhead). If you want a list as an end result, wrap the comprehension in <code>[]</code>, not <code>()</code>.</p>

<pre><code>[i for i in items if i.startswith(word)]
</code></pre>

<p>You were using a generator expression to produce a generator, then forcing it by putting it into a list.</p>

<p>Then, the same change can be made to the definition of <code>items</code>. This will be more efficient, and looks cleaner anyway.</p>

<hr>

<p>If you're only supporting newer versions of Python (3.7+), I think <a href="https://www.python.org/dev/peps/pep-0498/#rationale" rel="nofollow noreferrer">f-strings</a> would also neaten up <code>items</code>:</p>

<pre><code>items = [f"{i}-level-{current_word}" for i in prefixes]
</code></pre>

<hr>

<pre><code>"" if len(split) - 1 &lt; int(current_word) else split[int(current_word)]
</code></pre>

<p>I think the condition is complex/varied enough that it takes a couple looks to see the <code>else</code>. Personally, I'd wrap the condition in parenthesis:</p>

<pre><code>"" if (len(split) - 1 &lt; int(current_word)) else split[int(current_word)]
</code></pre>
    </div>