<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is no reason to use lists instead of arrays, <code>new int[size]</code> will give you an array full of <code>0</code>s without any overhead.</p>

<p>You can get away with creating only one array (<code>leftMax</code>) and then while computing the values of <code>rightMax</code>, instead of saving them into an array, complete the full calculation of how much to add to <code>ans</code>. Like this:</p>

<pre><code>public int TrapDynamicProgramming(int[] height)
{
    if (height == null || height.Length == 0)
    {
        return 0;
    }

    int ans = 0;
    int size = height.Length;
    int[] leftMax = new int[size];

    leftMax[0] = height[0];
    for (int i = 1; i &lt; size; i++)
    {
        leftMax[i] = Math.Max(height[i], leftMax[i - 1]);
    }

    int rightMax = height[size - 1];
    for (int i = size - 2; i &gt;= 0; i--)
    {
        rightMax = Math.Max(height[i], rightMax);
        ans += Math.Min(leftMax[i], rightMax) - height[i];
    }

    return ans;
}
</code></pre>
    </div>