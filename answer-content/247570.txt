<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Abstracting classes</strong></p>
<p>In your question you asked how to abstract classes so I thought I would show a concrete example of how this is done. Here is a minimal example of how you could abstract your game function.</p>
<pre><code>class GAME():
    def __init__(self, ID):
        url = ('https://na1.api.riotgames.com/lol/match/v4/matches/'+str(ID)+'?api_key='+(key))
        response = requests.get(url)
        Loop = 0
        index = 0

        # THIS COLLECT THE ID NUMBER OF THE PLAYER NAME THAT WAS INSERTED

        while Loop &lt;= 10:

            if response.json()['participantIdentities'][index]['player']['summonerName'] != sumName:
                Loop = Loop+1
                index = index+1
        elif response.json()['participantIdentities'][index]['player']['summonerName'] == sumName:
            break
            
        self.kills = response.json()['participants'][index]['stats']['kills']
        self.deaths = response.json()['participants'][index]['stats']['deaths']
        self.timer = response.json()['gameDuration']
        self.assists = response.json()['participants'][index]['stats']['assists']
        self.visions = response.json()['participants'][index]['stats']['visionScore']
        self.csTotal = response.json()['participants'][index]['stats']['totalMinionsKilled']

# Object from each game class


game1 = GAME(GAMEID[0])
game2 = GAME(GAMEID[1])
game3 = GAME(GAMEID[2])
game4 = GAME(GAMEID[3])
game5 = GAME(GAMEID[4])
game6 = GAME(GAMEID[5])
game7 = GAME(GAMEID[6])
game8 = GAME(GAMEID[7])
game9 = GAME(GAMEID[8])
game10 = GAME(GAMEID[9])
</code></pre>
<p>The <code>__init__</code> function is ran on the creation of the class instance, you can see that it requires an <code>ID</code> to be handed when it is ran. You seem unfamiliar with some of pythons class syntax so to explain the self.var notation, just know that if a variable has self before it, then that variable will be accessible outside of the class. Whereas the variables like <code>Loop</code>, <code>index</code>, and <code>response</code> are not.</p>
<p>I still think it would be useful to read through some examples of how classes can be implemented but hopefully, this example shows how their purpose can be useful.</p>
<p><a href="https://www.w3schools.com/python/python_classes.asp" rel="nofollow noreferrer">https://www.w3schools.com/python/python_classes.asp</a></p>
    </div>