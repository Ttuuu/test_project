<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>#!/usr/bin/python2.6 -u

import urllib2
import simplejson
import zlib
from optparse import OptionParser

class StackOverflowFetcher:
    """Simple SO fetcher"""
    def getUserInfo( self, userId ):
</code></pre>

<p>The python style guide recommends words_with_underscores for function names and parameter names.</p>

<pre><code>        response = urllib2.urlopen( 'http://api.stackoverflow.com/1.1/users/' + str(userId) )
</code></pre>

<p>I'd consider moving the API into a global constant</p>

<pre><code>        response = response.read()
        jsonData = zlib.decompress( response, 16+zlib.MAX_WBITS )
</code></pre>

<p>I'd combine the previous two lines</p>

<pre><code>        return simplejson.loads( jsonData )

    def getUserDisplayName( self, userId ):
        return self.getUserInfo( userId )['users'][0]['display_name']

    def getUserViewCount( self, userId ):
        return self.getUserInfo( userId )['users'][0]['view_count']

    def getUserReputation( self, userId ):
        return self.getUserInfo( userId )['users'][0]['reputation']
</code></pre>

<p>There three functions share most of their code. Why don't you modify getUserInfo to do the ['users'][0] itself instead?</p>

<pre><code>if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option("-u", "--userId", dest="userId", help="Set userId (default is 1)", default=1 )
    parser.add_option("-n", "--display-name", action="store_true", dest="show_display_name", default=False, help="Show user's display name")
    parser.add_option("-v", "--view_count", action="store_true", dest="show_view_count", default=False, help="Show user's profile page view count")
    parser.add_option("-r", "--reputation", action="store_true", dest="show_reputation", default=False, help="Show user's reputation")
    (options, args) = parser.parse_args()

    userId = options.userId
    show_display_name = options.show_display_name
    show_view_count = options.show_view_count
    show_reputation = options.show_reputation

    if ( (not show_display_name) and (not show_view_count) and (not show_reputation) ):
</code></pre>

<p>None of those parentheses are necessary. I'd probably go with <code>if not (show_display_name or show_view_count or show_reputation):</code> as I think that mostly clear states what you are doing.
            show_display_name = show_view_count = show_reputation = True</p>

<pre><code>    fetcher = StackOverflowFetcher()
    if ( show_display_name ) : print fetcher.getUserDisplayName( userId )
    if ( show_view_count) : print fetcher.getUserViewCount( userId )
    if ( show_reputation ) : print fetcher.getUserReputation( userId )
</code></pre>

<p>Firstly, the ifs don't need the parens. Secondly, the way your code is written each call goes back to the server. So you'll three calls to the stackoverflow server which you could have gotten with one. </p>
    </div>