<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Wow. Some legible matlab code. I'm impressed. Too often matlab seems to be a "write only" language, in the sense that perl regex line noise or Iverson's APL can be write only.</p>

<p>No biggie, but I wouldn't mind seeing consistent comment formatting where (N, from, to, alt) appear in the left margin in each of four separate lines. Kudos for telling us about the args, anyway. In the matlab ecosystem this is maybe redundant, but speaking for myself I wouldn't mind seeing a reminder that there's no zero-origin going on here, by mentioning <code>from &gt; 0</code> or something. Saying it once would suffice - to &amp; alt would clearly use the same convention. I see that later you spell this out in the "avoid index = 0" comment.</p>

<p>typo: Returs</p>

<p>Kudos on helpfully explaining that 2^N-1 is totalNumberOfMoves.</p>

<p>Your figure was helpful. The "from -&gt; alt -&gt; to" comment is on the redundant side.</p>

<p>Would you do the Gentle Reader a small favor, please, and bump the <code>currentPositions</code> and <code>len</code> assignments down slightly? Just a few lines. That way we have a full-line comment on the "odd" case, setting up dramatic tension for "what about even?", and the swapArrays immediately shows the even case.</p>

<p>Switching from <code>j</code> to <code>k</code> for the <code>path2</code> case was maybe a little odd. Wouldn't hurt to stick with <code>j</code>, as we always assign it a value at top of loop. Switching to <code>k</code> made me wonder if variable value needs to survive until some subsequent iteration.</p>

<p>Renaming <code>deal</code> to <code>swapArrays</code> made sense, thank you.</p>

<p>Comment for <code>generateDiskMoves</code> is very nice. Except I'd delete that "m is discarded" remark, as that's not part of the public API.</p>

<p>Personally I view the comment for <code>M .+ 1</code> as "% Convert to one-origin moves."</p>

<p>The "Get only the first move" comment is accurate and helpful, but consider something stronger: "% The trivial case requires just one move."</p>

<p>Omega2 accepts lowercase <code>n</code>. Consider using lowercase in the other functions. I had been thinking of upper as matrix and lower as scalar.</p>

<p>I wouldn't mind seeing a comment that spells out whether disk 1 is smallest or biggest disk.</p>

<p>As far as the algorithm goes, if results of a parity function were available, could you verify, or synthesize, the Omega2 results? Perhaps with less looping?</p>
    </div>