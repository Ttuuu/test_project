<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>After looking at your code I see some stuff which could speed this up if coded different.</p>
<pre><code>'/Full folder path splited into array and removed the rootfolder name with tag (e.g Outlook_Backup -&gt; _Backup is the tag)
Dim FolderPath() As String = f.FolderPath.TrimStart("\"c).Split("\").Skip(1).ToArray 

'/Array joined back to get MailFolderPath without tag
Dim MailFolderPath As String = String.Join("\", FolderPath)  
</code></pre>
<p>For each Item in <code>f.Items</code> you are trimming the <code>FolderPath</code> and <code>Split</code> it by <code>\</code> to <code>Skip</code> the first arrayitem before you call <code>ToArray()</code>. The <code>ToArray()</code> isn't needed because <a href="https://docs.microsoft.com/de-de/dotnet/api/system.string.join?view=netframework-4.7.2#System_String_Join_System_String_System_Collections_Generic_IEnumerable_System_String__" rel="nofollow noreferrer">this overload</a> of <code>String.Join</code> would take an <code>IEnumerable(Of String)</code>.</p>
<p>But the main point here is that <code>f.FolderPath</code> won't change for each <code>Item</code>. It would be much faster to pull this outside of the <code>For</code> loop.</p>
<p>Removing the <code>BackGroundWorker.ReportProgress()</code> for each and every <code>Item</code> would speed this up as well. How about reporting progress only for each folder?</p>
<hr>
<p>Although VB.NET isn't case sensitive it would be good to follow the <a href="https://msdn.microsoft.com/en-us/library/ms229002.aspx" rel="nofollow noreferrer">.Net Naming Guidelines</a> for naming things.</p>
    </div>