<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>1)  </p>

<pre><code>    if (DatabaseName != LastDatabaseName || database == null)
    {
        if (database != null)
            database = null;

        if (DatabaseName != "")
            database = DatabaseFactory.CreateDatabase(DatabaseName);
        else
            database = DatabaseFactory.CreateDatabase();
    }
</code></pre>

<p>First two lines inside your <code>if</code> do not make any sense. Anyway you're assigning another value to <code>database</code> variable below. I would write it as:  </p>

<pre><code>    if (DatabaseName != LastDatabaseName || database == null)
    {
        database = DatabaseName != "" ?
                   DatabaseFactory.CreateDatabase(DatabaseName) :
                   DatabaseFactory.CreateDatabase();
    }
</code></pre>

<p>2) Define your variables closer to the first assignment place. <code>command</code> variable is defined 10 lines of code before it is assigned and also has some value which is not used at all.  </p>

<p>3) Looks like you're following <code>One return</code> rule. I personally do not think this rule should be followed (at least in C#). For example you're assigning <code>dataTable</code> variable in case of <code>select</code> and do <strong>nothing</strong> more with, only returning it. But I (as maintainer of your code) see you're assigning it and I <strong>have</strong> to read the method till the end. Just return <code>dataTable</code> right there - this will let me know that nothing done with it later - it will save my time.  </p>

<p>4) In case of <code>insert</code> or <code>update</code> statements you're returning empty dataTable. I would return either <code>null</code> to distinguish it from <code>select</code> statement or dataTable with one cell which will contain number of updated entries (at the moment you're swallowing this information).  </p>

<p>5) The entire code is not that intuitive which means that it is not easy readable which means that it is not easy maintainable. I would never guess that in order to add parameter to the command I should look for a method in <code>database</code> class.  </p>

<p>6) I would never expect that such method will <strong>create databases</strong>. This is not intuitive at all.</p>
    </div>