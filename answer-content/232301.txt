<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Short and flexible substitution for initial <strong><code>_partition_by</code></strong> function  by using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> <em>magic</em> (to generate/split a consecutive groups by <em>predicate</em>):</p>

<pre><code>from typing import Callable, Any, Iterable, TypeVar, Generator, List
from itertools import groupby

T = TypeVar("T")

def _partition_by(f: Callable[[T], Any], iterable: Iterable[T]) -&gt; Generator[List[T], None, None]:
    """Splits to consecutive chunks by predicate.
    list(partition_by(lambda n: n &lt; 5, [1, 2, 3, 6, 3, 2, 1])) =&gt; [[1, 2, 3], [6], [3, 2, 1]]
    """
    for k, group in groupby(iterable, key=f):
        yield list(group)
</code></pre>

<p><em>Use case:</em></p>

<pre><code>lst = [1, 2, 3, 6, 3, 2, 1]
print(list(_partition_by(lambda n: n &lt; 5, lst)))
</code></pre>

<p><em>The output:</em></p>

<pre><code>[[1, 2, 3], [6], [3, 2, 1]]
</code></pre>
    </div>