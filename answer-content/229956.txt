<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This may be but a small point, but this:</p>

<pre><code>salary = 201
intial_salary = salary
</code></pre>

<p>Makes more sense the other way around:</p>

<pre><code>INITIAL_SALARY = 201
salary = INITIAL_SALARY
</code></pre>

<p>The initial is there first, or it wouldn't be the initial value. Setting the initial after the current value seems, odd.</p>

<p>For short scripts like this, it doesn't matter much. But debugging &amp; maintainability becomes a little easier if you put your declarations and assignments in an order that makes sense. It's a good habit to get into early.</p>

<p>Also, the following has the potential for disaster:</p>

<pre><code>if abs(current_savings - total_cost ) &lt; 0.000001 : 
    break
if rate == 1 :
    print ("not possible")
    break
</code></pre>

<p>What if neither becomes true? You're in a <code>while True</code> loop. It's going to run forever if by some bug neither of the conditions become true (those are the only options your program has to <code>break</code>). You may want to consider a fail-safe of sorts, or change your loop altogether. <code>while</code> loops often look like an easy way out, but in Python, there's often a better way.</p>
    </div>