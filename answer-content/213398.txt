<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Your question</h2>

<blockquote>
  <p>so I've passed a callback to it. Is this okay in Vue or is there any other preferred way of structuring things like this?</p>
</blockquote>

<p>If you haven't already, I would suggest you read the VueJS <a href="https://vuejs.org/v2/guide/components.html" rel="nofollow noreferrer">documentation for <strong>Components</strong></a> - specifically the section <a href="https://vuejs.org/v2/guide/components.html#Listening-to-Child-Components-Events" rel="nofollow noreferrer"><em>Listening to Child Components Events</em></a>. Basically the child component can utilize the built-in <a href="https://vuejs.org/v2/api/#vm-emit" rel="nofollow noreferrer"><code>$emit</code> method</a> to emit an event, which can be handled by the parent using <code>v-on</code>.</p>

<p>BTW the last section of the <a href="https://vuejs.org/v2/guide/list.html" rel="nofollow noreferrer">Documentation page <strong>List rendering</strong></a> has a section <a href="https://vuejs.org/v2/guide/list.html#v-for-with-a-Component" rel="nofollow noreferrer"><em><code>v-for</code> with a Component</em></a> that includes a simple TODO list using <code>$emit</code>. </p>

<hr>

<h3>Other feedback</h3>

<p>You might want to consider using a <em>key</em> that is the index of each item - see the second example of <a href="https://vuejs.org/v2/guide/list.html#Mapping-an-Array-to-Elements-with-v-for" rel="nofollow noreferrer">Mapping an Array to Elements with <code>v-for</code></a> of the documentation:</p>

<pre><code>&lt;todo-item v-for="(todo, index) in todos" v-if="todo.done" :todo="todo" :key="index"
</code></pre>

<p>That way you don't have to re-assign the id values when deleting an item.</p>

<hr>

<p>The Vue object is assigned to a variable <code>vm</code></p>

<pre><code>var vm = new Vue({
</code></pre>

<p>but it is never used after that. According to <a href="https://eslint.org" rel="nofollow noreferrer">ESLint</a>: "<em>Such variables take up space in the code and can lead to confusion by readers.</em>"<sup><a href="https://eslint.org/docs/rules/no-unused-vars" rel="nofollow noreferrer">1</a></sup>.</p>

<hr>

<p>The text input element for the new item has a separate closing tag: </p>

<blockquote>
<pre><code>&lt;input id="newtodo" type="text" placeholder="New todo item" @keypress="addTodo" @blur="addTodo"&gt;&lt;/input&gt;
</code></pre>
</blockquote>

<p>But input elements have no permitted content<sup><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input" rel="nofollow noreferrer">2</a></sup> <sup><a href="https://html.spec.whatwg.org/multipage/input.html#the-input-element" rel="nofollow noreferrer">3</a></sup> and thus are <a href="https://developer.mozilla.org/en-US/docs/Glossary/Empty_element" rel="nofollow noreferrer">empty elements</a>.</p>

<blockquote>
  <p><em>In HTML, using a closing tag on an empty element is usually invalid. For example, <code>&lt;input type="text"&gt;&lt;/input&gt;</code> is invalid HTML.</em><sup><a href="https://developer.mozilla.org/en-US/docs/Glossary/Empty_element" rel="nofollow noreferrer">4</a></sup></p>
</blockquote>

<p>The jsFiddle syntax highlighting also points this out (I added some colored boxes to point this out):</p>

<p><a href="https://i.stack.imgur.com/BV0wN.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/BV0wN.png" alt="jsFiddle syntax highlighting"></a></p>

<p>Because of this, the closing slash can be added to the end of the start tag:</p>

<pre><code>&lt;input id="newtodo" type="text" placeholder="New todo item" @keypress="addTodo" @blur="addTodo" /&gt;
</code></pre>

<p><sup>1</sup><sub><a href="https://eslint.org/docs/rules/no-unused-vars" rel="nofollow noreferrer">https://eslint.org/docs/rules/no-unused-vars</a></sub></p>

<p><sup>2</sup><sub><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input</a></sub></p>

<p><sup>3</sup><sub><a href="https://html.spec.whatwg.org/multipage/input.html#the-input-element" rel="nofollow noreferrer">https://html.spec.whatwg.org/multipage/input.html#the-input-element</a></sub></p>

<p><sup>4</sup><sub><a href="https://developer.mozilla.org/en-US/docs/Glossary/Empty_element" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Glossary/Empty_element</a></sub></p>
    </div>