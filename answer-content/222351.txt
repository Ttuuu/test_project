<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If I may add a single consideration to dfhwze's thorough answer:</p>

<p>Having an enum defining floors is OK for a building with 5 floors, but would be overwhelming if we are talking <a href="https://en.wikipedia.org/wiki/Burj_Khalifa" rel="nofollow noreferrer">Burj Khalifa</a> with its 163 floors. Besides that it is a rather rigid concept having a predefined number of floors - supposed you want to reuse your object model for other buildings.</p>

<p>Therefore I would create a <code>Floor</code> class too:</p>

<pre><code>public class Floor
{
  private Floor(string name, int index)
  {
     Name = name;
     Index = index;
  }

  public string Name { get; }
  public int Index { get; }

  public static IEnumerable&lt;Floor&gt; CreateFloors(params string[] names)
  {
    return names.Select((n, i) =&gt; new Floor(n, i));
  }
}
</code></pre>
    </div>