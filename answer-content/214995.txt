<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>@comintern, I've implemented most of the rest of your suggestions.  <em>Much</em> more readable!  Details and revised code below.</p>

<ul>
<li>Refactored to Base 0 (including the hardcoded twoDArr in <code>AssetTableTestProxy</code>) and using LBound</li>
<li>Removed Property Get/Set Assets </li>
<li>Refactored to Property Let AddAsset</li>
<li>Refactored <code>IAssetInfoService_Create</code> as suggested</li>
</ul>

<p>Couple points I'm unsure about:</p>

<ul>
<li><em><code>AddAsset</code></em>: Q) Is there a better way/place to instantiate <code>this.AssetColl</code>?  I tried a few other solutions, but could not get things to work.  </li>
<li><em><code>Create</code></em>: Q) The syntax of <code>.AddAsset = ...</code> feels off.  The equal sign bothers me as this is not really an <em>assignment</em> operation.  Is there a better way to use this property?</li>
<li>I still struggle a bit with the scoping(?).  The working of the PredeclaredId and the, kind of <em>call-within-a-call</em> nature of the <code>With New &lt;object of class I'm already in&gt; ... End With</code> structure takes some thinking.  I'm betting that's what's screwing with me on the instantiation of AssetCol.  And I'm also certain that's why I have to use Friend instead of Private, though I'm unable to articulate the reason.  </li>
</ul>

<p><strong><em><code>AssetInfoService.cls</code></em></strong></p>

<pre><code>'@PredeclaredId
'@Folder("Services")
Option Explicit
Implements IAssetInfoService

Private Type TAssetsTable
    AssetColl As Collection
End Type
Private this As TAssetsTable

Friend Property Get Self() As IAssetInfoService
    Set Self = Me
End Property

Friend Property Let AddAsset(ByRef theAsset As AssetInfo)
    If this.AssetColl Is Nothing Then
        Set this.AssetColl = New Collection
    End If
    this.AssetColl.Add theAsset, key:=theAsset.Desc
End Property

Public Function IAssetInfoService_Create(ByRef assetTbl As IAssetTableProxy) As IAssetInfoService
    Set IAssetInfoService_Create = Me.Create(assetTbl)
End Function

Friend Function Create(ByRef assetTbl As IAssetTableProxy) As IAssetInfoService

    Dim twoDArr() As Variant

    twoDArr = assetTbl.GetAssetTableData

    With New AssetInfoService

        Dim arrBase As Long
        arrBase = LBound(twoDArr) ' need to allow for 0-based in testing, but 1-based when arr populated from Excel range

        Dim row As Long
        For row = LBound(twoDArr) To UBound(twoDArr)
            .AddAsset = AssetInfo.Create(twoDArr(row, arrBase), twoDArr(row, arrBase + 1), twoDArr(row, arrBase + 2))
        Next row

        Set Create = .Self

    End With

End Function


Public Function IAssetInfoService_GetAssetTypeForDesc(ByVal Desc As String) As String

    Dim tempTp As String
    If Exists(this.AssetColl, Desc) Then
        tempTp = this.AssetColl(Desc).AssetType
    Else
        tempTp = "Unknown Asset"
    End If
    IAssetInfoService_GetAssetTypeForDesc = tempTp

End Function

Public Function IAssetInfoService_GetTickerForDesc(ByVal Desc As String) As String

    Dim tempTicker As String
    If Exists(this.AssetColl, Desc) Then
        tempTicker = this.AssetColl(Desc).Ticker
    Else
        tempTicker = "Unknown Asset"
    End If
    IAssetInfoService_GetTickerForDesc = tempTicker

End Function

Private Function Exists(ByRef coll As Collection, ByRef key As String) As Boolean

    On Error GoTo ErrHandler

    coll.Item key

    Exists = True
ErrHandler:
End Function
</code></pre>
    </div>