<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The point of this particular Project Euler question is to teach you about the number-of-divisors function.</p>

<blockquote>
<pre><code>def triangular(num):
    return int((num*(num+1))/2)

#Returns the number of factors(divisors) of 'num':
def facCount(num):
    summ = 0
    for i in range(1, num+1):
        if num % i == 0:
            summ += 1
    return summ
</code></pre>
</blockquote>

<p>Observe that some of the factors of <code>triangular(n)</code> are also factors of <code>triangular(n+1)</code>. Why? How can you use that reason to avoid doing the same work more than once?</p>

<hr>

<p>Leaving aside the algorithmic considerations,</p>

<blockquote>
<pre><code>def triangular(num):
    return int((num*(num+1))/2)
</code></pre>
</blockquote>

<p>doesn't need <code>int</code> if you use integer division:</p>

<pre><code>def triangular(num):
    return num * (num + 1) // 2
</code></pre>
    </div>