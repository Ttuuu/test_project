<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In Python 3.6, the  <a href="https://docs.python.org/3/library/random.html#random.choices" rel="nofollow noreferrer"><code>random.choices</code></a> function was introduced, which supports weights. Thus your class could simply become:</p>

<pre><code>import random

class ObjectPicker:

    def __init__(self):
        self.bucket = []
        self.weights = []

    def add(self, item, weight=1):
        self.bucket.append(item)
        self.weights.append(weight)

    def random_pick(self):
        return random.choices(self.bucket, weights=self.weights, k=1)[0]
</code></pre>

<p>(docstrings omitted for brevity's sake.)</p>

<p>This even allows getting multiple</p>

<p>This can be sped-up slightly if needed by saving cumulative weights, instead of the weights list, as noted in the documentation:</p>

<pre><code>class ObjectPicker:

    def __init__(self):
        self.bucket = []
        self.cum_weights = []

    def add(self, item, weight=1):
        self.bucket.append(item)
        try:
            self.cum_weights.append(self.cum_weights[-1] + weight)
        except IndexError:
            self.cum_weights.append(weight)

    def random_pick(self):
        return random.choices(self.bucket, cum_weights=self.cum_weights, k=1)[0]
</code></pre>

<p>If you want to you can even expose <code>k</code> to get multiple random elements (with replacement).</p>
    </div>