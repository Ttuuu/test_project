<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>After some testing, I would suggest that you decrease the <code>precBits</code>, because that changes a lot:</p>

<pre><code>precBits = 10000
</code></pre>

<p>I did not see any (significant) changes in results using 10000.</p>

<p>Also, you can try this function, which uses one less loop and could be faster for larger K values:</p>

<pre><code>FUN2 &lt;- function(freq, u, precBits) {
  sum = mpfr(0, precBits = precBits)
  n = sum(freq)
  prod = mpfr(1, precBits = precBits)
  j &lt;- (0:(u - 1))
  for (i in (1:length(freq))) {
      v1 &lt;- mpfr(freq[i] - j, precBits = precBits)
      v2 &lt;- mpfr(n - j, precBits = precBits)
      prod = prod(v1 / v2)
      sum = sum + prod
    }
  return(sum)
}
zstar2 &lt;- rep(mpfr(0, precBits = precBits), K - 1)
for (i in 1:(K - 1)) {
  zstar2[i] = FUN2(sample, i + 1, precBits)
}
all.equal(zstar, zstar2) == T
zstar - zstar2
</code></pre>

<p>or this without loops:</p>

<pre><code>FUN4 &lt;- function(freq, u, precBits) {
  n = sum(freq)
  j &lt;- (0:(u - 1))
  xx &lt;- t(apply(freq, 1, function(x) x - j))
  v1 &lt;- mpfr(xx, precBits = precBits)
  v2 &lt;- mpfr(n - j, precBits = precBits)
  xx &lt;- v1 / v2
  prods &lt;- apply(xx, 1, prod)
  s &lt;- sum(prods)
  return(s)
}
</code></pre>

<p>I suggest that you try them out with different <code>precBits</code> values and compare the results.</p>
    </div>