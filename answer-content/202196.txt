<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The flow of this app is,</p>

<ol>
<li>Get the input values</li>
<li>Check if the input values are valid</li>
<li>Calculate,output the value or "invalid"</li>
</ol>

<p>Since you use const,I assume you understand/prefer es6,arrow function,etc...</p>

<p>For 1. ,you can simplify your getDom()</p>

<pre><code>getDom: selector=&gt;document.getElementById(selector)
//same as
//getDom: function (selector){return document.getElementById(selector)}

// usage
const heatFlow = this.getDom('heatFlow').value
</code></pre>

<p>You concern to get values here,you can have a function just to get all the values you need.</p>

<pre><code>getAllValues:()=&gt;{
  const getValue=name=&gt; this.getDom(name).value;
  const heatFlow=getValue("heatFlow");
  const heatReturn=getValue("heatReturn");
  return {heatFlow, heatReturn,.........}
  //same as return {heatFlow:getValue("heatFlow'),.....}
}
//when you need to get the values by const heatFlow=.....,instead
const {heatFlow, heatReturn, heatTemp, heatValue}=this.getAllValues();
// this is Object Destruction
// you get all the values you want,try console.log(heatFlow, heatReturn, heatTemp, heatValue)
// in case you want to rename heatFlow to normHeatFlow.
// const {heatFlow:normHeatFlow}=this.getAllValues();
</code></pre>

<p>For 2. , to check if input is valid,in isNotEmpty(), </p>

<pre><code>return (
heatFlow !== "" || 
heatReturn !== "" || 
heatTemp !== "" || 
heatValue !== "" || 
heatExponent !== ""
) ? true : false;  
</code></pre>

<p>A mistake here you used ||(OR),which means either one of the input is not empty,it will pass.Instead you need &amp;&amp;(AND).</p>

<p>Also,the following comprasion is the same.</p>

<pre><code>heatFlow !== "" ? true : false;
heatFlow !== ""
</code></pre>

<p>So you only need to </p>

<pre><code>return (
heatFlow !== "" &amp;&amp; 
heatReturn !== "" &amp;&amp; 
heatTemp !== "" &amp;&amp; 
heatValue !== "" &amp;&amp; 
heatExponent !== ""
)
</code></pre>

<p>You made meaningful names for isSmallerThan() &amp;&amp; isNotEmpty() which is good.</p>

<p>And the rest in coding part is fine.</p>

<p>In aspect of design, one thing to notice about the <code>placeholder</code>.
As you placed numbers on it,I thought the input are pre-filled with numbers as an example.I also don't familar what will it do,it output invalid and I still thought I have put the numbers.
Consider to put "type 70" in <code>placeholder</code>,or just put actual numbers in the inputs.</p>

<p>Below is additional part,you can learn or skip.</p>

<p>For coding,</p>

<pre><code>return (
heatFlow !== "" &amp;&amp; 
heatReturn !== "" &amp;&amp; 
heatTemp !== "" &amp;&amp; 
heatValue !== "" &amp;&amp; 
heatExponent !== ""
)
</code></pre>

<p>If you have more condition to compare,you can use Array.every().</p>

<pre><code>const values=[heatFlow, heatReturn, heatTemp, heatValue, heatExponent];
const isNotEmpty=value=&gt; value!==""
return values.every(isNotEmpty);
</code></pre>

<p>So you only need to write <code>!==""</code> once.</p>

<p>For design,there's a function onChange can be put in the input.Everytime a user changed the value,it triggers.
You can use it to auto calculate the output,rather than chaning value and click button Calculate.But I don't know your intention of this behind,it could be dangeous or improper to change the heat easyily,so it's up to you.</p>
    </div>