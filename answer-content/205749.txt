<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Take 2</h1>

<p>I've reworked my code according to the comments received <a href="https://codereview.stackexchange.com/a/205680/181968">here</a> but sticking to the techniques which have been introduced up to this point in K&amp;R, which means the following is NOT used:</p>

<ul>
<li>variable declaration where first initialized,</li>
<li>assignment of char array constants,</li>
<li>%*d format specifier,</li>
<li>ctype.h.</li>
</ul>

<p>Some other improvements:</p>

<ul>
<li>avoided repeating some code by introducting <code>readEOF</code> state,</li>
<li>improved scaling,</li>
<li>check whether MAXWIDTH is sufficient to print the smallest possible chart,</li>
<li>printing numerical value next to histogram,</li>
<li>figured out how to print labels better, while sticking to the techniques introduced so far,</li>
<li>limited source code width to 72,</li>
<li>fixed a scaling bug due to flating point precision,</li>
<li>reverted to storing &gt;MAXLEN count in the last element.</li>
</ul>

<h3>Modified code</h3>

<pre><code>/* Exercise 1-13. Write a program to print a histogram of the lengths of
 * words in its input. It is easy to draw the histogram with the bars
 * horizontal; a vertical orientation is more challenging.
 * */
/* Solution 1: Horizontal Bars
 * Take 2: Implementing some comments received from SE:
 * https://codereview.stackexchange.com/questions/205674#205680
 * but sticking to the techniques which have been introduced up to this
 * point in K&amp;R, which means the following is NOT used:
 *      - variable declaration where first initialized,
 *      - assignment of char array constants,
 *      - %*d format specifier,
 *      - &lt;ctype.h&gt;.
 * Some other improvements:
 *      - avoided repeating some code by introducing `readEOF` state,
 *      - improved scaling,
 *      - check whether MAXWIDTH is sufficient to print the smallest
 *          possible chart,
 *      - printing numerical value next to histogram,
 *      - figured out how to print labels better, while sticking to the
 *          techniques introduced so far,
 *      - limited source code width to 72,
 *      - fixed a scaling bug due to flating point precision,
 *      - reverted to storing &gt;MAXLEN count in the last element.
 * */
#include &lt;stdio.h&gt;

#define MAXLEN      10  /* Any word longer than this will get counted in
                         * the &gt;MAXLEN histogram. */
#define MAXWIDTH    72  /* Max. width for chart printout, the whole
                         * chart will be scaled to fit. */

int main()
{
    int c;
    int i, j;
    int histogram[MAXLEN+1]; /* last element will count the over-length
                              * words */
    int alnumCount;
    int readEOF;
    int labelW;
    int maxLabelW;
    int maxWordCount;
    int maxWordCountW;
    float scale;

    for (i = 0; i &lt;= MAXLEN; ++i)
        histogram[i] = 0;

    /* Perform the counting */
    alnumCount = 0;
    readEOF = 0;
    c = getchar();
    while (readEOF == 0) {
        if ((c &gt;= '0' &amp;&amp; c &lt;= '9') || 
            (c &gt;= 'a' &amp;&amp; c &lt;= 'z') ||
            (c &gt;= 'A' &amp;&amp; c &lt;= 'Z'))
            ++alnumCount;
        else {
            if (alnumCount &gt; 0) {
                if (alnumCount &lt;= MAXLEN)
                    ++histogram[alnumCount-1];
                else
                    ++histogram[MAXLEN];
                alnumCount = 0;
            }
        }
        if ((readEOF = (c == EOF)) == 0)
            c = getchar();
    }

    /* Chart Printing Section
     * */
    /* Each histogram will look like:
     * "&gt;NNN |******************** MMM",
     * showing both the label and the histogram value, so we can display
     * accurate information even if the chart is scaled.
     * To be able to plot on a fixed screen width, we must calculate the
     * max. histogram value, the widths of NNN &amp; MMM fields, and finally
     * the scale.
     * */

    /* Find max. histogram value */
    maxWordCount = 0;
    for (i = 0; i &lt;= MAXLEN; ++i) 
        if (maxWordCount &lt; histogram[i])
            maxWordCount = histogram[i];

    /* Calculate histogram value max. width */
    maxWordCountW = 1;
    for (i = maxWordCount;  i &gt;= 10;  i = i/10)
        ++maxWordCountW;

    /* Calculate label max. width */
    maxLabelW = 1;
    for (i = MAXLEN;  i &gt;= 10;  i = i/10)
        ++maxLabelW;

    /* Calculate the scale */
    /* Note - histogram layout: "&gt;NNN |******************** MMM". */
    scale = 1.0*(MAXWIDTH - 1 - maxLabelW - 2 - 1 - maxWordCountW) / 
            maxWordCount;

    /* Fix a scale rounding bug */
    if (scale * maxWordCount &lt; MAXWIDTH - 1 - maxLabelW - 2 - 1 - 
        maxWordCountW)
        scale = scale + 0.000001;

    /* Print the chart only if MAXWIDTH is sufficient to print at least
     * the values */
    if (maxWordCount * scale &gt;= 0)
        /* Print horizontal histogram. */
        /* Row loop */
        for (i = 0; i &lt;= MAXLEN; ++i) {
            /* Print either the " " or "&gt;" for the last histogram */
            if (i &lt; MAXLEN)
                putchar(' ');
            else
                putchar('&gt;');

            /* Calculate the label width */
            labelW = 1;
            for (j = i+1;  j &gt;= 10;  j = j/10)
                ++labelW;

            /* Print blanks as required for lavel alignment and print
             * the label */
            for (j = maxLabelW - labelW; j &gt; 0; --j)
                putchar(' ');
            if (i &lt; MAXLEN)
                printf("%d |", i+1);
            else
                printf("%d |", MAXLEN);

            /* Column loop, print the histogram */
            for (j = 1; j &lt;= scale*histogram[i]; ++j)
                putchar('*');

            /* Print the histogram value */
            printf(" %d", histogram[i]);
            putchar('\n');
        }
    else
        printf("Error: insufficient screen width for print-out.\n");
}
</code></pre>

<h3>Output when run on the program code</h3>

<pre><code>$ ./ch1-ex-1-13-01_Take2 &lt; ch1-ex-1-13-01_Take2.c
  1 |*************************************************************** 103
  2 |*************************************** 64
  3 |************************************************* 81
  4 |***************************** 49
  5 |********************************************* 74
  6 |************************** 43
  7 |****************** 31
  8 |************** 24
  9 |************************* 41
 10 |*********** 18
&gt;10 |************** 23
</code></pre>
    </div>