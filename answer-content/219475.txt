<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Disclaimer, I'm not a PHP guru. Just looked at your code and did a bit of optimization; I feel it needs more. By the way, you're right. The problem is in the function calls. </p>

<pre><code>&lt;?php

use Stripe\Stripe;
use Stripe\Customer;
use Stripe\Subscription;

Stripe::setApiKey("api_key");

/**
 * You could declare this at the top of the file
 * $stripeSubId = get_stripe_sub_id();
 * and then simply pass it as an argument to any function that requires it
 * e.g.,
 * function get_next_sub_invoice($stripeSubId) {
 *      // rest of code directly uses $stripeSubId
 * }
 */

function getUserId() {
    global $current_user;
    return $current_user-&gt;ID;
}

function get_stripe_sub_id() {
    $userid = getUserId();

    $stripe_id = get_user_meta($userid, 'stripe_id'); // get_user_meta() is unfortunately not in this file
    $refer_user_obj = Customer::retrieve($stripe_id[0]);

    if(isset($refer_user_obj-&gt;subscriptions-&gt;data[0]-&gt;id)) {

        return $refer_user_obj-&gt;subscriptions-&gt;data[0]-&gt;id;
    }
    return 'non_sub';

}

function get_sub_status() {
    $stripeSubId = get_stripe_sub_id(); // 1 function call is better than 3
    if($stripeSubId === 'non_sub') {
        return 'deactive';
    }

    $sub_obj = Subscription::retrieve($stripeSubId);
    $sub_status = $sub_obj-&gt;status;

    if($sub_status === 'trialing' || $sub_status === 'active') {
        return 'active';
    }
    return 'deactive';

}

function is_customer() {
    $userid = getUserId();

    $is_customer = get_user_meta($userid, 'is_customer');

    if(isset($is_customer[0])) {
        return ($is_customer[0] === '1');
    }
    return false;
}

function redirect_if_non_sub() {

    if(is_customer() &amp;&amp; get_sub_status() === 'deactive') {
        $uri = $_SERVER['REQUEST_URI'];

        if ($uri !== '/cvhelpr/ingen-abonnement/') {
            write_log('redirect me'); // not in the file too
            header('Location: /cvhelpr/ingen-abonnement');
            exit;
        }
    }
}

function get_next_sub_invoice() {
    $stripeSubId = get_stripe_sub_id();

    if($stripeSubId !== 'non_sub') {
        $sub_obj = Subscription::retrieve($stripeSubId);
        $next_inv = $sub_obj-&gt;current_period_end;
        $formatted_inv = gmdate('Y-m-d', $next_inv);

        if(is_canceled() === true) {
            return 'Dit abonnement udl√∏ber ' . $formatted_inv;
        }
        return $formatted_inv;
    }

    return 'Denne bruger har intet abonnement.';
}

function is_canceled() {
    $sub_obj = Subscription::retrieve(get_stripe_sub_id());
    $is_canceled = $sub_obj-&gt;cancel_at_period_end;

    return $is_canceled === 1; // will return true if the expression matches, false otherwise
}

function reactivate_sub() {
    // get_current_user_id() is probably the same thing as getUserId() - see top of file
    $stripe_id = get_user_meta(get_current_user_id(), 'stripe_id');
    write_log($stripe_id[0]);

    $subscription = Subscription::create([
        'customer' =&gt; $stripe_id[0],
        'items' =&gt; [['plan' =&gt; 'cv_195']],
        'trial_period_days' =&gt; 7
    ]);

    header("Location: /my-account");
    die();
}
add_action('wp_ajax_reactivate_sub', 'reactivate_sub');
add_action('wp_ajax_nopriv_reactivate_sub', 'reactivate_sub');

function cancel_sub() {
    $stripeSubId = get_stripe_sub_id();
    if($stripeSubId !== 'non_sub') {
        $sub = Subscription::retrieve($stripeSubId); // var $sub is not used anywhere
        // you're getting an instance from the retrieve function, but not  using it - why?
        // is it even necessary? The leaner your code, the better
        Subscription::update($stripeSubId,
            [
                'cancel_at_period_end' =&gt; true
            ]
        );
    }
}
add_action('wp_ajax_cancel_sub', 'cancel_sub');
add_action('wp_ajax_nopriv_cancel_sub', 'cancel_sub');

function uncancel_sub() {
    $stripeSubId = get_stripe_sub_id();
    if($stripeSubId !== 'non_sub') {
        $sub = Subscription::retrieve($stripeSubId); // same thing here - try to comment it and see what happens
        Subscription::update($stripeSubId,
            [
                'cancel_at_period_end' =&gt; false
            ]
        );
    }
}
add_action('wp_ajax_uncancel_sub', 'uncancel_sub');
add_action('wp_ajax_nopriv_uncancel_sub', 'uncancel_sub');
?&gt;
</code></pre>
    </div>