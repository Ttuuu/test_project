<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From a short review, considering you are a beginner;</p>
<ul>
<li>keep your variables in lowerCamelCase so
<ul>
<li>COLORS -&gt; colors</li>
<li>CODES -&gt; codes</li>
</ul>
</li>
<li>on the whole, avoid to have data type in the variable name
<ul>
<li>colorArray -&gt; colors</li>
</ul>
</li>
<li>your commenting is quite good</li>
<li>Your indenting is inconsistent, it easier to read your code when code is properly indented</li>
<li><code>catchInvalid</code> probably should return a boolean</li>
<li>I would have called <code>catchInvalid</code> -&gt; <code>isInvalidColor</code> it gives more detail</li>
<li><code>catchInvalid</code> should either use the global, or know the colors locally</li>
<li>I would use <code>COLORS.includes()</code> over <code>COLORS.indexOf</code></li>
<li>There is way to calculate the return code without making a distinction between 1 or 2 elements</li>
</ul>
<p>Per the comment, a bit more explicit</p>
<pre><code>    function decodeColorValues(colors){
      //These are all the possible colors
      const knownColors = ["black", "brown", "red", "orange", "yellow", "green", "blue", "violet", "grey", "white"];        

      //Functions should return a consistent datatypes, so I return -1 instead of a message
      //If the caller did not provide an aray but say "orange", then this will return -1 as well
      if(!colors.length){
        return -1;
      }
      
      //Filter out unknown colors
      colors = colors.filter(color =&gt; knownColors.includes(color));

      //If all colors were unknown then return -1
      //You could change this so that if 1 color is unknown it returns -1
      if(!colors.length){
        return -1;
      }      
      
      //We only deal with the first 2 entries (why?)
      colors = colors.slice(0,2);
      let value=0;
      
      //Abuse the fact that 10 times zero is still zero
      for(const color of colors){
        value = value * 10 + knownColors.indexOf(color);
      }
       
      return value;
    }


    console.log(decodeColorValues(["blue"]),
                decodeColorValues(["nothing"]),
                decodeColorValues(["blue", "green"]),
                decodeColorValues(["blue", "nothing"])
           );
</code></pre>
    </div>