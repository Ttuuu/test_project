<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Review</h1>

<ul>
<li><p>Your regex can be simplified:</p>

<p>There is no need for the multiple <code>[]</code> brackets - this would suffice: <code>r"^(.*?)\.pdf$"</code>.</p>

<p><em>Note that I escape the <code>.</code> char (which will match anything) with a backslash <code>\.</code></em> to only match the specific <code>.</code> char, and the <code>$</code> to be certain that .pdf is at the end of the string.</p></li>
<li><p>There is no need for Regex at all!</p>

<ol>
<li><p>You can either use the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer"><code>glob</code></a> module to directly find all files with an extension <em>Python3.5+</em></p>

<pre><code>def get_files(source, extension):
    for filename in glob.iglob(f'{source}/**/*{extension}', recursive=True):
        yield filename
</code></pre></li>
<li><p>use something like <code>.split(".")</code> or <code>filename.endswith('.extension')</code> to find if the file uses that extension. As @Graipher showed in his answer.</p></li>
</ol></li>
<li><p>Currently your solution works with hardcoded directories.</p>

<p>To change the to directory to read or to write in, you'd need to change a lot in your code. Your solution would be much better if you could send these path locations as parameters.</p></li>
</ul>
    </div>