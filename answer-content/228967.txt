<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just a very general observation: <strong>the position of a rectangle is not fundamental to the rectangle itself,</strong> but rather a to the instantiation of a rectangle in a <em>scene.</em> In your implementation making it a property of <code>Rectangle</code> might make sense, but pulling it out makes the implementation more flexible and I suspect might make it easier to read when it grows. For one thing, a rectangle might be placed in a 3D scene, a non-Euclidean space, or might be used without reference to any particular reference frame (such as when comparing the area of two rectangles). Pulling out the position also makes it possible to <em>reuse</em> an instance in a bunch of places. In the following image, for example, all the equally sized squares could refer to the same struct, saving memory in case of large trees.</p>

<p><a href="https://en.wikipedia.org/wiki/Quadtree#/media/File:Point_quadtree.svg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/VVVwv.png" alt="quadtree example"></a></p>

<p>Also, I don't think <code>QuadTreeResult</code> is helpful - it doesn't add anything to <a href="https://doc.rust-lang.org/std/result/" rel="nofollow noreferrer"><code>Result</code></a>, and I don't think being able to distinguish them in your code is useful. It's a bit like trivially subclassing <code>java.lang.Boolean</code> (as opposed to trivially subclassing <code>java.lang.RuntimeException</code>, which is idiomatic).</p>
    </div>