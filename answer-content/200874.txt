<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't think the <code>To&lt;T&gt;</code> API by itself is wrong and I also don't think this is a misuse of generics. There is no difference whether it's called </p>

<pre><code>Convert(object value, Type targetType)
</code></pre>

<p>or just</p>

<pre><code>To&lt;TTarget&gt;(this object value)
</code></pre>

<p>The result will be the same. All it does it to provide a simpler API if the type is known at compile time.</p>

<hr>

<p>But what I don't like is the internal implementation of it because it's not extendable at all. You cannot easily add other conversions and you cannot easily test it.</p>

<p><code>To&lt;T&gt;</code> should actually be only a convenience method that uses a more sophisticated framework to do the work.</p>

<p>It should also have more overloads for specifying the format string and <code>IFormatProvider</code>. This would be necessary to parse some non-default-format dates.</p>

<p>You can take a look at <a href="https://codereview.stackexchange.com/a/131797/59161">this</a> great answer by <a href="https://codereview.stackexchange.com/users/95635/dmitry-nogin">@Dmitry Nogin</a> where he shows how such a framework could look like. (and in fact I use it (with a couple of changes) in all my applications).</p>
    </div>