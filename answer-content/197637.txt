<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Flat is better than nested. Consider reverting the first <code>if</code> condition:</p>

<pre><code>if not nums:
    return 0

# main logic goes here, less one indentation level
</code></pre></li>
<li><p>An <code>if-else</code> as a body of the loop is always a red flag. In this case he body of the <code>while</code> loop is better expressed by another loop: we want to skip all dups of <code>nums[intFirstKind]</code>. Consider</p>

<pre><code>    while (nums[indFirstKind] == nums[indCompare]:
        indCompare += 1
</code></pre>

<p>You may want to go an extra mile and factor this in a function. <code>skipDuplicates</code> looks like a good name. BTW, what would be the parameters? what shall it return?</p></li>
<li><p>Swapping <code>nums[indCompare]</code> with <code>nums[indFirstKind + 1]</code> seems like a pure waste of time. If however you insist on swapping, do it in a pythonic way:</p>

<pre><code>nums[indCompare], nums[indFirstKind + 1] = nums[indFirstKind + 1], nums[indCompare]
</code></pre></li>
</ul>

<hr>

<p>All that said, the solution should be along the lines of</p>

<pre><code>    indCopyTo = 0
    indFirstKind = 0
    indCompare = 1

    while indCompare &lt; len(nums):
        nums[indCopyTo] = nums[indFirstKind]
        indCopyTo += 1
        while nums[indFirstKind] == nums[indCompare]:
            indCompare += 1
        indFirstKind = indCompare
    return indCopyTo
</code></pre>
    </div>