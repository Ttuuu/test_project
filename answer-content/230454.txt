<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Giving a similar answer to the one already provided.</p>

<p>I'm a big fan of "return a value for an edge case" pattern. If there's a very specific case with its own return value, then it's more readable (to me..) to eliminate the special case in the beginning of the function, and then to focus on the regular flow.</p>

<p>In your case:</p>

<pre><code>private String get(Details details, Value value){
    Type type = Type.getEvent(details.getType());
    // apply the "early return" pattern
    if(type == null){
        return StringUtils.contains(details.getSpin(), SPIN) ? BACKUP : DEFAULT_VAL;
    }

    // apply the same pattern again
    if(!"SAMPLE".equals(type.typeDesc())){
        return value.getRoute();
    }

    // finally, the "regular" flow
    String prefix = SPIN.equals(details.getSpin()) ? BACKUP : DEFAULT_VAL
    return prefix + SAMPLE + value.getId();
}
</code></pre>
    </div>