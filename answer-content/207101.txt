<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>When you post code to be reviewed:

<ul>
<li>If your code ask for input, provide a set of valid an invalids inputs</li>
<li>If your code output a result, express expected.</li>
</ul></li>
<li>Since you present your code, it may be interesting to embrace a <a href="https://isocpp.org/wiki/faq/coding-standards#using-namespace-std" rel="nofollow noreferrer">coding standard</a>. You do not pay taxes on written characters. Do not be afraid to use spaces to improve readability.</li>
<li><a href="https://stackoverflow.com/questions/31816095/why-should-i-not-include-bits-stdc-h">Don't include <code>&lt;bits/stdc++.h&gt;</code></a>`:

<ul>
<li>It's not a <a href="https://isocpp.org/wiki/faq/coding-standards#std-headers" rel="nofollow noreferrer">standard header</a>. If you try to compile your code with MSVC, he will complain that he can't find him. </li>
<li>Even if you use only GCC, it would include so much unnecessary things that your compilation time will increase considerably.</li>
<li>Instead, explicitly includes all header needed.</li>
</ul></li>
<li><a href="https://isocpp.org/wiki/faq/coding-standards#using-namespace-std" rel="nofollow noreferrer">Don't use <code>using namespace std;</code></a> :

<ul>
<li>Although it's "safe" to use it in some place (e.g. implementation files), as long as you are not familiar with the features of c ++, <a href="https://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice">try to avoid it</a>.</li>
<li>It led to a world of name collisions. (best case)</li>
<li>It's source of silent errors and weird bugs. (worst case)</li>
<li>If typing <code>std::</code> is so tedious for you, try to import only truncated namespaces. ( eg <code>using namespace std::string;</code>).</li>
<li>If importing nested namespaces still too awful for you, try to do it <a href="https://en.cppreference.com/w/cpp/language/namespace#Using-declarations" rel="nofollow noreferrer">inside a restricted scope</a> (eg a functions) and not in global scope.</li>
</ul></li>
<li><a href="https://isocpp.org/wiki/faq/style-and-techniques#why-not-macros" rel="nofollow noreferrer">Don't use preprocessors</a> to <a href="https://stackoverflow.com/questions/14041453/why-are-preprocessor-macros-evil-and-what-are-the-alternatives">defines constants values</a>, instead <a href="https://isocpp.org/wiki/faq/newbie#const-vs-define" rel="nofollow noreferrer">use const variable</a>. </li>
<li><a href="https://isocpp.org/wiki/faq/style-and-techniques#hungarian" rel="nofollow noreferrer">Chose good name for variables</a>. what's <code>n</code>, <code>q</code> or <code>k</code> mean? They are int, but? And for <code>s</code> or <code>c</code>, we know they are <code>bitset&lt;MAX&gt;</code>, but nothing more.</li>
<li><a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rp-direct" rel="nofollow noreferrer">Write expressive code</a>, in which your intentions are <a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rp-what" rel="nofollow noreferrer">clearly stated</a>.</li>
<li><a href="https://wiki.sei.cmu.edu/confluence/display/c/DCL04-C.+Do+not+declare+more+than+one+variable+per+declaration" rel="nofollow noreferrer">Don't declare more than one variable at a time.</a> It led to error, mainly working with pointer or initialization.</li>
<li><a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es20-always-initialize-an-object" rel="nofollow noreferrer">Always initialize a variable</a> when you declare it.</li>
<li>Extract the code into <a href="https://www.cs.utah.edu/~zachary/computing/lessons/uces-10/uces-10/node11.html" rel="nofollow noreferrer">reusable functions</a> , <a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-single" rel="nofollow noreferrer">short as possible</a>, and that operate a <a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#f2-a-function-should-perform-a-single-logical-operation" rel="nofollow noreferrer">reduced and well defined number of statements</a>. (see <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">Single responsibility principle</a>). (eg, a function that asks the user to enter an input, reads them and returns them)</li>
<li>If you ask user to input some values, really ask (tell to user what he have to write)</li>
<li>When you read values from user input, <a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#slio2-when-reading-always-consider-ill-formed-input" rel="nofollow noreferrer">consider it ill-formed</a>, so <a href="https://isocpp.org/wiki/faq/input-output#istream-and-ignore" rel="nofollow noreferrer">check for validity</a>. Here you don't check after getting the int's. Futhermore, you don't check the length of the string and but access it by indexes, etc.</li>
<li>The <code>main</code> function should return an integer.</li>
</ul>
    </div>