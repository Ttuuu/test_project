<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few things no one has touched on yet...</p>

<p><strong>points()</strong></p>

<p>Your points values follow a pattern which can be easily modeled mathematically:</p>

<pre><code># Assign points from 1st = 15 through to 10-Last being 1
def points():
    global pointvalue
    if count == 0:
        point_value = 15
        places()
    elif count &lt; 3:
        point_value = 14 - 2 * count
        places()
    elif count &lt; 11:
        point_value = 11 - count
        places()
    elif count &gt; 10:
        point_value = 1
        places()
</code></pre>

<p>On my machine, this improvement made this section of the program about 2x faster.</p>

<p><strong>if-elif</strong></p>

<p>Since <code>competitors['house']</code> can only have one value, there is no sense in checking if it is all values with repetitive <code>if</code> statements. Instead, use an <code>if-elif</code> structure or perhaps <code>if-elif-elif-else</code>.</p>

<pre><code># add points to houses
def places():
    global blue_total, green_total, red_total, yellow_total, point_value
    if competitors['house'] == "blue_total":
        blue_total += point_value
    elif competitors['house'] == "red_total":
        red_total += point_value
    elif competitors['house'] == "yellow_total":
        yellow_total += point_value
    elif competitors['house'] == "green_total":
        green_total += point_value
</code></pre>

<p><strong>Style:</strong></p>

<p><a href="https://www.python.org/dev/peps/pep-0008/#function-and-variable-names" rel="nofollow noreferrer">Python's own style guide</a> dictates a convention for function and variable names: names should be lowercase, with words separated by underscores as necessary to improve readability.</p>

<p>Therefore: <code>blueTotal</code> -&gt; <code>blue_total</code> and <code>pointvalue</code> -&gt; <code>point_value</code>.</p>
    </div>