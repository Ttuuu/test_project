<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Code Changes</h1>

<p>Following the advice given, I have made the following changes.</p>

<p><code>Base Subscriber Template</code></p>

<p>The base callback method has been change to a pure virtual function. </p>

<pre><code>virtual void OnEventReceived(const EventType&amp;) = 0;
</code></pre>

<p><code>Container Template</code></p>

<p>All the protected methods had the underscore prefix removed from the template function name.</p>

<pre><code>void attach(EventSubscriber&amp; s)  { ... }
void detach(EventSubscriber&amp; s)  { ... }
void publish(const EventType&amp; e) { ... }
</code></pre>

<p><code>Publisher Template</code></p>

<p>Both the Attach and Detach method interfaces were changed to variadic template parameters and function parameters, and all methods had <code>this-&gt;</code> removed.</p>

<pre><code>template &lt;
    typename    EventType,
    typename... MultiEvent,
    typename    EventSubscriber,
    typename... MultiSubscriber
&gt;
void Attach(EventSubscriber&amp; s, MultiSubscriber&amp;... ms) {
    Subscribers&lt;Subscriber&lt;EventType&gt;&gt;::attach(s);

    if constexpr (sizeof...(ms))
        Attach&lt;EventType&gt;(ms...);

    if constexpr (sizeof...(MultiEvent))
        Attach&lt;MultiEvent...&gt;(s, ms...);
}

template &lt;
    typename    EventType,
    typename... MultiEvent,
    typename    EventSubscriber,
    typename... MultiSubscriber
&gt;
void Detach(EventSubscriber&amp; s, MultiSubscriber&amp;... ms) {
    Subscribers&lt;Subscriber&lt;EventType&gt;&gt;::detach(s);

    if constexpr (sizeof...(ms)) 
        Detach&lt;EventType&gt;(ms...);

    if constexpr (sizeof...(MultiEvent))
        Detach&lt;MultiEvent...&gt;(s, ms...);
}
</code></pre>

<p>This opens up a wide range of combinations in the user interface such as:</p>

<pre><code>publisher.Attach&lt;Event1, Event2&gt;(sub1, sub2);
publisher.Detach&lt;Event1, Event2&gt;(sub2);

</code></pre>
    </div>