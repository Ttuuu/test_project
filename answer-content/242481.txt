<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The easiest way to improve this code is to write a generic function that asks for user input. It should be able to handle types and a validator function and keep on asking until a valid input is given. Something like this:</p>

<pre><code>def ask_user(message, type_=str, valid=lambda x: True, invalid_message="Invalid"):
    while True:
        try:
            user_input = type_(input(message))
        except (ValueError, TypeError):
            print("Invalid input")
            continue
        if valid(user_input):
            return user_input
        else:
            print(invalid_message)
</code></pre>

<p>With which your code becomes a lot easier:</p>

<pre><code>import random

min_ = ask_user("Please input the minimum number of your dice: ", int)
max_ = ask_user("Please input the maximum number of your dice: ", int,
                lambda x: x &gt; min_, "Maximum must be larger than minimum.")
n = ask_user("How many times do you want to roll the dice: ", int)

rolls = [random.randint(min_, max_) for _ in range(n)]
for roll in rolls:
    print(roll)
</code></pre>

<p>Note that I followed Python's official style-guide, <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a>, which recommends using <code>lower_case</code> for functions and variables and <code>PascalCase</code> only for classes. I avoided shadowing the built-in functions <code>min</code>, <code>max</code> and <code>type</code> by adding a trailing <code>_</code>, which is what I also used for the unused loop variable. I also used a <a href="https://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="nofollow noreferrer">list comprehension</a>, so you have all the rolls already in a list in case you need them later.</p>
    </div>