<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>stderr</h2>

<p>Consider printing your errors to <code>stderr</code>; for example:</p>

<pre><code>    printf("Level must be between %d and %d", MIN, MAX);
</code></pre>

<p>can be</p>

<pre><code>    fprintf(stderr, "Level must be between %d and %d", MIN, MAX);
</code></pre>

<h2>colLetter</h2>

<p>If this is actually a letter, is there any reason you can't pass it around as a <code>char</code> instead of a <code>char*</code> string?</p>

<h2>perror</h2>

<pre><code>printf("fork failed\n");
</code></pre>

<p>Based on <a href="https://pubs.opengroup.org/onlinepubs/9699919799/functions/fork.html" rel="nofollow noreferrer">the spec</a>, this modifies <code>errno</code>, so you are best to use <code>perror</code> here instead of <code>printf</code>.</p>

<h2>Casting prior to printf</h2>

<p><code>getpid</code> actually returns a <code>pid_t</code>, which might not be guaranteed to fit in an <code>int</code>. In fact, <a href="https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/sys_types.h.html" rel="nofollow noreferrer">the spec</a> says that</p>

<blockquote>
  <p>The implementation shall support one or more programming environments in which the widths of <code>pid_t</code> [...] are no greater than the width of type long. </p>
</blockquote>

<p>So to avoid overflow, you're safer to cast this to a <code>long</code> and print with <code>%l</code>.</p>

<h2>No-op default</h2>

<p>This:</p>

<pre><code>default:
    break;
</code></pre>

<p>can be omitted.</p>
    </div>