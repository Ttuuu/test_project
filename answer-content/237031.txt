<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have three suggestions for you.</p>

<ol>
<li>Instead of <code>String</code>, you can use <code>char</code>, less memory footprint than a <code>String</code>.</li>
<li>In the <code>transpose</code> method, I suggest that you return the array, since the method does nothing at the moment.</li>
</ol>

<pre class="lang-java prettyprint-override"><code>static char[][] matrix = {
   {'a', 'L', 'M', 'd'},
   {'b', 'G', 'c', 'N'},
   {'H', 'K', 'e', 'F'},
   {'I', 'J', 'O', 'P'}
};

public char[][] transpose(char[][] matrix) {
   char[][] transposedArray = new char [4][4];

   for (int row = 0; row &lt; 4; row ++) {
      for (int col = 0; col &lt; 4; col++) {
         transposedArray[row][col] = matrix[col][row];
      }
   }

   return transposedArray;
}
</code></pre>

<ol start="3">
<li>Since the <code>matrix</code> variable is static, I suggest that you also put the method static.</li>
</ol>

<h2>Refactored code</h2>

<pre class="lang-java prettyprint-override"><code>public static void main(String[] args) {
   System.out.println(Arrays.deepToString(transpose(matrix)));
}

static char[][] matrix = {
   {'a', 'L', 'M', 'd'},
   {'b', 'G', 'c', 'N'},
   {'H', 'K', 'e', 'F'},
   {'I', 'J', 'O', 'P'}
};

public static char[][] transpose(char[][] matrix) {
   char[][] transposedArray = new char [4][4];

   for (int row = 0; row &lt; 4; row ++) {
      for (int col = 0; col &lt; 4; col++) {
         transposedArray[row][col] = matrix[col][row];
      }
   }

   return transposedArray;
}
</code></pre>
    </div>