<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Bugs.</p>

<ul>
<li><p>The loop printing the histogram lines for numbers,</p>

<pre><code>for(int i = 0; i &lt;= 10; ++i)
</code></pre></li>
</ul>

<p>lets <code>i</code> become 10, which accesses <code>num[10]</code>. It does not exist. Undefined behavior it is.</p>

<p>A <a href="/questions/tagged/c" class="post-tag" title="show questions tagged 'c'" rel="tag">c</a> idiom is to use <code>&lt;</code> in a loop termination condition. There are cases which require <code>&lt;=</code>, but they are very rare.</p>

<ul>
<li><p>The loop printing the histogram lines for letters,</p>

<pre><code>for(int i = 0; i &lt;= 10; ++i)
</code></pre></li>
</ul>

<p>only reports counters for <code>a</code> to <code>k</code> inclusive. All other letters are not reported.</p></li>
<li><p>The second bug tells why magic numbers are bad. You want to report all counters in the <code>lett</code> array. There are <code>sizeof(lett) / sizeof(lett[0])</code> of them:</p>

<pre><code>    for(int i = 0; i &lt; sizeof(lett) / sizeof(lett[0]); ++i)
</code></pre>

<p>Ditto for <code>num</code>.</p></li>
<li><p>It is very unclear why you split handling letters into three cases. A simple</p>

<pre><code>    else if (isalpha(ch)) {
        ch = tolower(ch); // No need to test for `isupper`
        ++lett[ch - `a`];
    }
</code></pre>

<p>is enough.</p></li>
<li><p>There are more whitespaces than <code>' ', '\n', '\t'</code>. The <code>ctypes.h</code> has <code>isspace</code> function. Use it.</p></li>
<li><p>Testing for <code>nwhite - i &gt; 0</code> is yet another manifestation of why <code>&lt;=</code> loop condition is wrong.</p>

<pre><code>    for(int i = 0; i &lt; nwhite; ++i) {
        putchar('*');
    }
</code></pre>

<p>is all you need.</p></li>
<li><p>Once you fix the last two loops, all the loops doing an actual printing become identical. Factor them out into a function</p>

<pre><code>void print_stars(int n)
{
    for (int i = 0; i &lt; n; i++) {
        putchar('*');
    }
    putchar('\n');
}
</code></pre></li>
</ul>
    </div>