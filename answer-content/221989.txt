<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few more suggestions in addition to the great existing answers:</p>

<h2>Support logging stack traces - it's easy!</h2>

<p>Standard C++ offers no facilities for obtaining stack traces, so traditionally - logging libraries and manual logging have foregone those. But these traces are extremely useful in inspecting logs and debugging programs (despite their verbosity); and developers in other languages, especially non-compiled ones, ridicule us for not having them!</p>

<p>Well, recently, Antony Polukhin (of magic_get fame) has undertaken the task of combining the available platform-specific stack walking libraries into a single multi-platform Boost library named <a href="https://www.boost.org/doc/libs/1_70_0/doc/html/stacktrace.html" rel="noreferrer">stacktrace</a>. Its plain vanilla use is as simple as:</p>

<pre><code>#include &lt;boost/stacktrace.hpp&gt;

// ... etc. etc. ...

std::cout &lt;&lt; boost::stacktrace::stacktrace();
</code></pre>

<p>and it has facilities for decorating exceptions with stack traces etc.</p>

<h3>Consider using string views instead of std::string references</h3>

<p>If you pass a temporary string to a function taking a <code>const string&amp;</code>, but then initialize some <code>std::string</code> with it, you get - yes, you know it - you get a string copy. And indeed, it seems you do just that. </p>

<p>Also, <code>std::string</code>'s live on the heap. Do you really want to be making a bunch of heap allocations? Surely not; or at least - as few as possible. What's more, you may be forcing whoever is passing you the string to construct an <code>std::string</code> and to know about <code>std::string</code>. I would try to avoid that too.</p>

<p>So, what's the alternative? <a href="https://en.cppreference.com/w/cpp/string/basic_string_view" rel="noreferrer"><code>std::string_view</code></a>. It's not perfect (in the sense you have to be a little careful when using it), but it's a pretty good idea still:</p>

<p><a href="https://stackoverflow.com/q/40127965/1593077">How exactly is <code>std::string_view</code> faster than <code>const std::string&amp;</code>?</a></p>

<p>if you're writing pre-C++17 code, you can find a string view in <a href="https://github.com/Microsoft/GSL" rel="noreferrer">implementations</a> of the Guidelines Support Library.</p>
    </div>