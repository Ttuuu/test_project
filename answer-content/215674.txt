<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I see some replies with general tips for optimization, but I don't see anyone recommending a specific approach called memoization. It works wonders just for this kind of problems (results in some finite range around the &lt;1M mark, 3000 is far below the upper limit).</p>

<p>Basically you would do something like this:</p>

<p>Create a sort of array (this one will be struxtured differently depending on whether you just need the value of the result, only one combination of food items or all combinations). Since no food has negative calories, you can only make it 0-3000</p>

<p>Then you do something like this (pseudocode):</p>

<pre><code>for foodItem in foodItems:
  for value in caloriesArray:
    if caloriesArray[value] != 0: #has been reached before, so I can expand on it
      caloriesArray[value]+foodItems[foodItem] = ... #whatever you need, can be just True
</code></pre>

<p>There are plenty of sites explaining memoization and I'm not very good at explanations, but if this doesn't help you then I can include a simple example.</p>

<p>Then just find the highest reached value of the array.</p>
    </div>