<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Review</h2>

<blockquote>
  <p>Is this helper intuitive and easy to use?</p>
</blockquote>

<hr>

<p>In the code snipper below:</p>

<ul>
<li><code>INamespace&lt;TScope&gt; scope</code> seems unused?</li>
</ul>

<blockquote>
<pre><code>public static FeatureService Configure&lt;TScope, T&gt;
    (
        this FeatureService features,
        INamespace&lt;TScope&gt; scope,
        Expression&lt;Func&lt;TScope, T&gt;&gt; feature,
        Func&lt;FeatureOptions, FeatureOptions&gt; configure
    ) where TScope : INamespace
    {
        return features.Configure(FeatureKey&lt;TScope&gt;.Create(feature), configure);
    }
</code></pre>
</blockquote>

<hr>

<p>About that generic type helper, I'm just missing how this helps you out. Could you provide an example why <code>INamespace</code>, <code>INamespace&lt;T&gt;</code> and <code>Use&lt;T&gt;</code> are required? To me, atleast, it is not <em>intuitive</em>.</p>

<blockquote>
<pre><code>public static class Use&lt;T&gt; where T : INamespace
{
    [DebuggerNonUserCode]
    public static INamespace&lt;T&gt; Namespace =&gt; default;
}
</code></pre>
</blockquote>

<hr>

<p>miscellaneous, off-topic</p>

<ul>
<li><p>hard-coded string detected :-p</p>

<blockquote>
<pre><code>private static readonly IKeyFactory DefaultKeyFactory = new
TypedKeyFactoryAttribute("Feature");
</code></pre>
</blockquote></li>
<li><p>resharper, this day and age .. really? :)</p>

<blockquote>
<pre><code>// ReSharper disable once UnusedTypeParameter - 'T'  is required.
public interface INamespace&lt;out T&gt; where T : INamespace { }
</code></pre>
</blockquote></li>
<li><p>good usage of <code>DebuggerStepThroughAttribute</code> and <code>DebuggerNonUserCodeAttribute</code></p></li>
</ul>

<hr>
    </div>