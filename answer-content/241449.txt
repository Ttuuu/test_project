<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not a Python dev, so I'm going to focus specifically on one area: the mathematical calculations themselves.</p>

<p>Okay, so if you're making $X - how do you calculate your taxes?  You're taking the 'Figure Out Which Bracket You Are In and then Calculate for that specific bracket' approach, but how about this (and I apologize for any syntax issues; like I said, it's not my language.): </p>

<pre><code>alreadyTaxedIncome = 0
remainingIncome = taxable_income
taxesDueFromPriorSegments = 0

if remainingIncome &lt;= int(bracket[0]):
    return taxesDueFromPriorSegments + remainingIncome * .1
alreadyTaxedIncome = bracket[0]
remainingIncome = taxable_income - bracket[0]
taxesDueFromPriorSegments = taxesDueFromPriorSegments + (bracket[0]-0) * 0.1

if remainingIncome &lt;= int(bracket[1]):
    return taxesDueFromPriorSegments + remainingIncome * .12
alreadyTaxedIncome = bracket[1]
remainingIncome = taxable_income - bracket[1]
taxesDueFromPriorSegments = taxesDueFromPriorSegments + (bracket[1]-bracket[0]) * 0.12

if remainingIncome &lt;= int(bracket[2]):
    return ... etc, repeating the above segment of 5 lines for each bracket
</code></pre>

<p>See what I did there?  I redid the logic a bit so that it's "flattened" - if you have 20 brackets, you're not going to have an IF clause that results in a calculation that's 20 terms long.  Instead, it just figures out how the taxes apply for the specific bracket, and continues going through until you've reached a bracket that no longer applies.</p>

<p>Not only does this simplify the logic, it makes it possible to loop.  Because... why wouldn't you have a loop?  After all, that segment of 5 lines is going to be repeated over and over again, differing only in the array slot you're pulling from bracket[] and the marginal tax rate for that bracket.</p>

<p>Next up would be OOP principles and refactoring code.  In terms of objects, you've got two main ones:</p>

<pre><code>TaxStructure - consists of a sorted array of TaxBrackets
TaxBracket - consists of a top income and marginal tax rate
</code></pre>

<p>... and you're going to want a function that takes in a TaxStructure and an income amount, and returns back the taxes owed.</p>
    </div>