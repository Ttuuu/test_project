<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have the following points to make on the code:<br>
 - No logging<br>
 - No external config file for the settings (Open/Close Principal violation)<br>
 - Creating resources in the init instead of in a separate section (no re-use of common functions should the user attempt to connect to multiple IRC servers)<br>
 - I don't see any validation of config/data items. Users could have the expected strings or they could introduce some buffer overflow execution code. Always validate user input.<br>
 - String concatenation and formatting - don't use "+" to join strings and data together, use f-strings or .format()<br>
 - You have using long if else statements instead of ternary   </p>

<pre><code>            if x == None:
                return ''
            else:
                return x
</code></pre>

<p>should be:</p>

<pre><code>            return "" if not x else x
</code></pre>

<p>(also, no need to do <code>== None</code> as that is assumed).</p>

<ul>
<li>You have many huge try/except blocks, reduce this to only the specific lines which could throw an exception and catch that specific exception.   </li>
<li>There are many huge <code>if: if: if:</code> statements instead of reducing each if statement into a separate function (Single Responsibility Principal)   </li>
<li>Your Exceptions printing to the screen instead of logging, you should not interrupt the UX - handle the error gracefully and continue on or warn the user you need to exit the program due to an error.  </li>
<li>Plugins: There is no validation when loading the plugin. It could be malicious or faulty. You need to wrap loading the plugin in a try/except, and you need to run some checks on the plugin to determine validity. Like not trusting user input, you need to validate plugins so they don't crash the bot.  </li>
<li>As hinted at before, you have plugin methods talking directly to send function, however there is no validation on what they're sending through the bot. Ensure you validate the input into .send(cmd) before transmitting it else you could unwittingly make a DDOS bot.   </li>
<li>The connection function has no validation routine either, you should validate if the input is a valid domain name or ip address on loading (as an example, use regex). Also, you should validate if there is a valid listening port 'out there' before assuming the remainder of the data for that particular IRC Server is valid. Handle faults and errors gracefully in the UX.  </li>
</ul>

<p>Finally... Comments in capitals (please, no) or comments stating the obvious (unnecessary) or comments that don't correlate to the code. Your code needs to explain what it's doing, you should only need comments when the code is difficult (like some math code), and it should state "this is the sieve of eratosthenes" or some other comment which is the "Why" or "What", and not the "how" - the code is the "how" (I hope that makes sense?).</p>

<p>Also, when your code gets bigger, it might be an idea to export all the plugin code to a separate .py file named 'plugins.py' and import that into your main. Speaking of <strong>main</strong>, you're missing the entry point. Have a look at a few other examples on Code Review.</p>

<p>Good Luck!</p>
    </div>