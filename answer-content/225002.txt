<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>How consistent is this code with the best practices in functional and declarative programming?</p>
</blockquote>

<p>I dunno. Unless you're doing something fancy like <a href="https://www.youtube.com/watch?v=b0EF0VTs9Dc" rel="nofollow noreferrer">hand-rolling monads</a>, you might just be "programming with functions" and not really doing "functional programming." You could ask Crockford about that, if he manages not to get himself dis-invited from your next local tech conference.</p>

<blockquote>
  <p>Are there any bad practices in it that I should be aware of?</p>
</blockquote>

<p>Looks alright to me. </p>

<hr>

<p>Personally I like the other answer here. I voted for it and hope it wins the Checkmark Election, because it's very practical.</p>

<p>But it's not what I'd call "functional."</p>

<pre><code>const fizzbuzz = (min, max) =&gt;
    Array(max + 1).fill('', min)
        .map((v, i) =&gt; i % 5 ? v : 'fizz')
        .map((v, i) =&gt; i % 3 ? v : v + 'buzz')
        .map((v, i) =&gt; v || i)
        .join('\n').trim()
</code></pre>

<p>If the code in your question is "functional," I suppose this is "more functional," because we got rid of more of the flow control, chained even more functions together, and threw even more lambdas in there. I definitely wouldn't go as far as calling it "declarative," though. It still looks imperative to me; a series of commands to be executed in a particular order. So, I see no reason to value something like this over Blindman67's approach.</p>

<p>Some tasks are better suited to a declarative style (data transformations, things where it doesn't really matter exactly what order things happen in; think XSLT for example) and some are better suited to an imperative style (anything where you need precise flow control). Fizzbuzz could surely be done in a declarative way, with the right language or libraries. But with plain JavaScript, it seems much more straightforward to do it in an imperative way.</p>
    </div>