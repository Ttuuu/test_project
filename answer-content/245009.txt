<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few points, most of these I have applied to your code here: <a href="https://stackblitz.com/edit/so-in-mem-db?file=index.js" rel="nofollow noreferrer">https://stackblitz.com/edit/so-in-mem-db?file=index.js</a></p>
<p><strong>Potential use of Map and O(1) time</strong></p>
<p>The javascript objects you are currently using are de-facto dictionaries, so it is unlikely you will gain anything here.</p>
<p><strong>Unnecessary use of !!</strong></p>
<p>You have used this frequently in your code, in all the places I checked it was unnecessary.</p>
<p><strong>handleInput argument parsing</strong></p>
<p>You can tidy this up considerably using array destructuring (see stackblitz for complete example) ie:</p>
<pre><code>const [action, ...args] = inputRaw; 
...
const [name, value] = args;
</code></pre>
<p><strong>Use logical OR to simplify if..else</strong></p>
<pre><code> if(!!this.database.valuesCount[value]) {
            console.log(this.database.valuesCount[value]);
        } else {
            console.log(0);
        }
</code></pre>
<p>can be simplified to:</p>
<pre><code>console.log(this.database.valuesCount[value] || 0);
</code></pre>
<p>Similarly</p>
<pre><code> get(name) {
        console.log(!!this.database.names[name] ? this.database.names[name] : null);
    }
</code></pre>
<p>can be simplified to:</p>
<pre><code>  get(name) {
        console.log(this.database.names[name] || null);
    }
</code></pre>
<p><strong>Over complicated logic in set(..) and when updating value counts</strong></p>
<p>This could definitely be improved but it would also involve refactoring the way you are updating value counts (ideally there wouldn't be two different methods), so I'll leave it at that.</p>
    </div>