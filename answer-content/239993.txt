<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>PEP8</h2>

<p>The official Python style guide will suggest that:</p>

<ul>
<li>there be two newlines between functions at the global scope, and only one newline between functions in the class scope (i.e. <code>check_if_should_die</code>)</li>
<li>functions be named in lower_snake_case, i.e. <code>listen_to_quit</code></li>
</ul>

<h2>Hard exit</h2>

<p>Currently, you have a forever-loop that only exits on <code>sys.exit</code>. Instead, simply return a boolean from <code>listenToQuit</code> (which can be called <code>should_quit</code>), and if the return value is true, break out of the loop.</p>

<h2>Abbreviated imports</h2>

<p><code>pygame.sprite.Sprite</code> can just be <code>Sprite</code> if you <code>from pygame.sprite import Sprite</code>.</p>

<h2>Typo</h2>

<p><code>assests</code> -&gt; <code>assets</code></p>

<h2>Generator</h2>

<pre><code>    self. animation = iter([
        pygame.image.load('assests/splatter_1.png'),
        pygame.image.load('assests/splatter_2.png'),
        pygame.image.load('assests/splatter_3.png'),
        pygame.image.load('assests/splatter_4.png')
    ])
</code></pre>

<p>can be</p>

<pre><code>self.animation = iter(
   pygame.image.load(f'assets/splatter_{i}.png')
   for i in range(1, 5)
)
</code></pre>

<p>Generally I don't think your <code>iter</code>/<code>StopIteration</code> approach is that bad. That said, you can rework it by changing your outer <code>while True</code> into a <code>for drop in drops</code>, where <code>drops</code> is an iterable through four instances of a drop object tied to a specific asset.</p>
    </div>