<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Testing more than one thing</strong></p>

<p>Looking at some of your tests, you you are testing more than one thing.  You are also testing contradictory things.  This makes the purpose of your tests less obvious.  Consider:</p>

<blockquote>
<pre><code>[TestMethod()]
public void FindFirstNonRepeatingCharacterTestMixedCasing()
{
    string testString = "EeFd";

    char testChar = BlueWolfSolutions.FindFirstNonRepeatingCharacter(testString);

    Assert.IsFalse(testChar == 'E' &amp;&amp; testChar == 'D');
    Assert.AreEqual('F', testChar);
}
</code></pre>
</blockquote>

<p>The important test is:</p>

<pre><code>Assert.AreEqual('F', testChar);
</code></pre>

<p>By definition, if <code>testChar</code> is 'F', it can't be 'E' or 'D', let alone both 'E' and 'D'... why bother testing the <code>IsFalse</code> condition, it just muddies the water?</p>

<p>The <code>FindFirstNonRepeatingTestWhiteSpace</code> is  particularly confusing as to what the intention of the test is, because you're not only testing true and false conditions on one of the variables, you're also calling the function under test with multiple strings.  Keep your tests simple and try to focus on just testing one intention per test.</p>

<p><strong>Naming</strong></p>

<p>Naming is also quite important in tests to help get the purpose of the test across.  Rather than <code>testChar</code>, perhaps <code>firstRepeatedCharacter</code> would have been a more expressive variable name.</p>
    </div>