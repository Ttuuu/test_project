<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1><code>Random</code></h1>

<p>Don't <code>new</code> up a new instance of <code>Random</code> for each and every call of your methods. The reason for this is that the default seed used in the constructor is <strong>not</strong> random. Usually it's based on the current time, or something similar. This means that if you call the method many times at once, the random number generators might provide the same numbers.</p>

<p>Instead, create a single static instance that's used by all calls.</p>

<hr>

<pre><code>public static SumTotal Total(this IEnumerable&lt;int&gt; data)
{
    var result = new SumTotal();
    foreach (var i in data) { result.Add(i); }
    return result;
}
</code></pre>

<p>The <code>linq</code> way of doing this is <code>data.Aggregate(new SumTotal(), (item, aggregate) =&gt; aggregate.Add(item))</code>.</p>
    </div>