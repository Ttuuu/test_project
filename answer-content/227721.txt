<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I feel your component <strong>mixes a lot of <a href="https://en.wikipedia.org/wiki/Separation_of_concerns" rel="nofollow noreferrer">concerns</a></strong>: API requests and responses, form field validations and error display, and presentational concerns such as styling and animations.</p>

<p>In my opinion, a React component works best if it concerns itself either:</p>

<ul>
<li>with <strong>one concern</strong> only (API <em>or</em> validation <em>or</em> presentation)</li>
<li>with the <strong>coordination of multiple components</strong></li>
</ul>

<p>I think your component (and by extension, your codebase) could profit from splitting this component into multiple components or hooks that each address one of the issues. You already apply hooks very well and I don't see a problem with that â€“ no need to switch back to class components. Hooks can even help you better with <strong>extracting logic</strong> that is not bound to a specific level in the component hierarchy, such as repeating tasks like API requests and validations.</p>

<p>Since you're thinking about "unleashing" this on the rest of your codebase, this is a perfect moment to think about which aspects of the component you want to reuse and how you want to use these tools, informing <strong>the design of your components</strong>.</p>
    </div>