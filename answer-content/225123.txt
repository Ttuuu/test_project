<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>You can use <code>output.isEmpty()</code> instead of checking its length.</li>
<li>You might want to use a <code>LinkedHashMap</code> which presists the order of the elements as well. Right now the ordering will be seemingly random (Will it be BuzzFizzFuzzBiffBizz? Or FizzFuzzBiffBizzBuzz?) (technically it's deterministic, but it's based on the hashcodes of the strings, which is seemingly random)</li>
<li><p>Your exception handling <code>System.err.println(e + "Was thrown");</code> doesn't tell you anything about why the exception happened. I would recommend using a logger (Slf4j / Log4j) and log the exception properly, or use <code>e.printStackTrace()</code> to make it easier for you to debug the problems.</p>

<p>In your final version however, you should not need any exception handling as all the bugs that could cause them to appear should have been fixed - as this is an application based on pure logic and no network calls and stuff. </p></li>
<li><p><code>String output; // Avoid recreating String each iteration</code> technically, the string is recreated each iteration anyway. There's nothing you can do to avoid that.</p>

<p>You're only <em>declaring</em> it once. It's best practice to declare it in a small scope as possible, so I would recommend declaring it only when you initialize it.</p></li>
<li>You could create another method to return a single string for a single number, instead of having one method to process all the 100 numbers.</li>
<li><code>// Avoid negative numbers</code> I don't see how that comment is relevant at the location it is written. Negative numbers are prevented by the for-loop in your code.</li>
</ul>
    </div>