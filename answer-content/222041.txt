<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Don't Hide the Use of Macros</strong>  </p>

<p>Currently it is unclear in the main program that you are calling macros rather than functions in this line <code>res = hashtable_get(ht, "john", Entry, bucket);</code>. It is not really clear why you are using a macro rather than a function. There does not seem to be a real benefit to using a macro over a function here. Anything that needs to be hidden in the implementation should be hidden in hashtable.c in static functions.</p>

<p><strong>Protect the Global Name Space</strong>  </p>

<p>All the functions in linked_list.c and hashtable.c are currently global symbols, the use of the double underscore does not hide them from the global name space. The way to remove these functions from the global name space is to make them all <code>static</code> functions. It would also be better to remove the <a href="https://stackoverflow.com/questions/25090635/use-and-in-c-programs">double underscore, this is reserved for library functions</a>.</p>

<p>Two examples would be :</p>

<pre><code>static unsigned long hash_sdbm(char *str)
{
    unsigned long hash = 0;
    int c;

    while ((c = *str++))
        hash = c + (hash &lt;&lt; 6) + (hash &lt;&lt; 16) - hash;

    return hash;
}

static int key_matches(char * source, char * target)
{
    return (strcmp(source, target) == 0);
}
</code></pre>

<p>This might require changes to hashtable.h because of the prototype declaration of </p>

<pre><code>Bucket * __hashtable_get_bucket(Hashtable * hashtable, char * key);
</code></pre>

<p><strong>Prefer Calloc Over Malloc When Allocating Arrays</strong>  </p>

<p>The function <code>calloc(size_t n_items, size_t item_size);</code> is specifically for allocating arrays. In addition to calculating the space necessary to allocate it also clears the values in the entire array. The method it uses to clear the values in the array is more efficient then the method the code is currently using.</p>
    </div>