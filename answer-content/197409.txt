<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The problem lies in these 2 lines of code:</p>

<pre><code> for i in number_array:
  if(number_array.count(i)==2):
</code></pre>

<p>Here for each number you are counting the number of occurrences in the array. Now, by doing that, You are reiterating over the numbers which are already counted. The call to <code>number_array.count()</code> searches the entire array, which means even for the last element, it will start from the first and calculate the count. This makes the time complexity \$O(n^2)\$. But, it can be done in \$O(n)\$ time.</p>

<p>Instead of using count, store the numbers in a hash table. And for each new number check, if it already exists in the hash table. If so, that's your duplicate number - A.</p>

<p>Also, while iterating through the loop, add each number to the other, and get their sum (omitting the double occurrence of A). And since you have a series from 1..n,</p>

<pre><code>sum(1..n) = n * (n + 1) / 2
</code></pre>

<p>So, the missing number is: </p>

<pre><code>sum(1..n) - actual sum
</code></pre>
    </div>