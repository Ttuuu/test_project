<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Like @Roland Illig said, your code has bug with "banana" because of you mutable your string length each time you use your <code>substring</code> function. </p>

<p>I think you better replace your pattern each time it matchs by string that has same length pattern but does not match your pattern</p>

<pre><code>function findStartingIndex(T, pattern) {
  let S = T;
  const res = [];
  while(true) {
    const i = S.indexOf(pattern);
    if (i === -1) { return res; }
    const newPattern = pattern.replace(/./,'_');

    S = S.replace(pattern, newPattern);
    res.push(i);
  }
  return res;
}

</code></pre>

<p>For string "banana" it will return [1,3,5]</p>

<p>Or you can consider my solution:</p>

<pre><code>findStartingIndex = (s) =&gt; {
  const result = [];
  while (s.match(/abr/)) {
  result.push(s.match(/abr/).index);
  s=s.replace('abr','___');
  }
  return result;
}
</code></pre>

<p>Use regex here is not necessary but it is more flexible in case the pattern is dynamic.</p>

<p>Down voter: please consider your vote!</p>
    </div>