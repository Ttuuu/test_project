<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Duplicate If-Statements</h1>

<p>You have 5 validations that look all the same. You could write a function to get ride of the duplication.</p>

<p>The function could look like:</p>

<pre><code>function makeGreenIfValidationIsValid(tagId, regex) {
    if(input_tag.id == tagId) {
        if(regex.test(x.value)) {
            x.style.backgroundColor = "green";
            x.style.borderColor = "green";
        }
    }
}
</code></pre>

<p>After that, the <code>onClick</code>-calback would look like</p>

<pre><code>button_tag.onclick = function() {
    var x = document.getElementById(input_tag.id);
    makeGreenIfValidationIsValid('input_0', /^[a-zA-Z]+$/)
    makeGreenIfValidationIsValid('input_1', /^[0-9]+$/)
    makeGreenIfValidationIsValid('input_2', /^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/)
    makeGreenIfValidationIsValid('input_3', /\d{1,5}\s\w{1,10}\s\w{1,10}/)
    makeGreenIfValidationIsValid('input_4', /^\d{3}-\d{3}-\d{4}$/)

    document.getElementById(fieldset_tag.id).appendChild(button_tag);

    this.count += 1;
}
</code></pre>

<h1>Extract Class</h1>

<p>The method <code>constructForm</code> in <code>ContentDisplayer</code> should be a own class. An indicator for that is that it is huge (more than 80 lines) and you have many tag-comments in it. </p>

<p>Comments are add all not bad but when you group your code in a method you all ready see semi-independent logic. In Robert C. Martins words: <a href="https://www.goodreads.com/author/quotes/45372.Robert_C_Martin?page=2" rel="nofollow noreferrer">“Don’t Use a Comment When You Can Use a Function or a Variable”</a></p>

<p>For example, the class might be named "Form" and could contain several methods. Based on your comments I could look like</p>

<pre><code>function Form() {

    //Create div containing the form
    this.createDivTag() {}

    //Create the form tag
    this.createFormTag() {}

    //Create the fieldset tag
    this.createFieldsetTag() {}

}
</code></pre>

<p>The logic in <code>create[tag-name]Tag</code> for creating a <code>div</code>, <code>form</code> and <code>fieldset</code> looks very similar. We should extract the common logic into a function.</p>

<h1><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance" rel="nofollow noreferrer">Prototyping</a></h1>

<p>Currently <code>ContentDisplayer</code> and <code>Form</code> (the class from above) don't use it.</p>

<p>A disadvantage is that on each creation of an object all methods like <code>show</code> will be recreated each time. The result is that it costs performance.</p>

<p>With prototyping it would look like</p>

<pre><code>function ContentDisplayer() {
    this.count = 0;
}

ContentDisplayer.prototype.show = function(id) {/**/}

ContentDisplayer.prototype.showText = function(id, content) {/**/}

// ...
</code></pre>
    </div>