<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>You do not have to check <code>len(sys.argv)</code> yourself. A properly constructed <code>ArgumentParser</code> will sort that out by itself.</li>
<li>Likewise, you do not need to pass <code>sys.argv[1:]</code> to <code>parse_args()</code>, <code>argparse</code> will figure it out.</li>
<li><code>default=None</code> and <code>required=False</code> are default values for an optional argument (those starting with <code>'-'</code>), you do not need to supply them.</li>
<li>You do not need to use a <code>lambda</code> to specify the function to call, just pass in the name of the function: it will simplify handling this parameters.</li>
<li>You can add <code>do_work</code> as a default value for <code>'-a'</code>: no more <code>TypeError</code> as the content of <code>parsed_args.cmd</code> will alway be a callable.</li>
<li>There is no need in using a mutually exclusive group if you only ever put one option in it: remove it.</li>
<li>You should use <a href="https://stackoverflow.com/q/419163/5069029"><code>if __name__ == '__main__':</code></a> and put your top-level code under it.</li>
<li>In <code>do_*work</code> you should test <code>database</code> using <code>is None</code> or <code>is not None</code>.</li>
</ul>



<pre><code>def do_work(database=None):
    if database is not None:
        print 'Doing work for {0}'.format(database)
    else:
        print 'Doing work all database'

def do_other_work(database=None):
    if database is not None:
        print 'Doing other work for {0}'.format(database)
    else:
        print 'Doing other work all database'

def create_parser():
    parser = ArgumentParser(description='Parser')
    parser.add_argument('--db', '-d', dest='database', help='Database name')
    parser.add_argument('-a', dest='cmd', action='store_const',
                        const=do_other_work, default=do_work)
    return parser


if __name__ == '__main__':
    parsed_args = create_parser().parse_args()
    parserd_args.cmd(parsed_args.database)
</code></pre>
    </div>