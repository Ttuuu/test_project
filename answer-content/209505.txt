<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Review for the updated version (because there are no answers yet, I think you can still remove the first version).</p>

<p>I really like your implementation. Especially the idea of expanding the board instead of calculating the opposide indices <a href="https://codereview.stackexchange.com/questions/154587/compact-game-of-life-implementation">as i did</a>). That makes the code much more readable / understandable. I also like the way you imlemented the <code>neighboursCount</code> function - the  combination of <code>mapi</code>, <code>filter</code> and <code>map</code> is a good example for functional programming.</p>

<p>In fact, I don't see much room for improvement.</p>

<p>Maybe you could rename <code>neighboursCount</code> into <code>countNeighbours</code> an move the <code>board</code> to the end of the argument list so it can be used like: <code>eBorad |&gt; countNeighbours j i</code></p>

<p>Within the <code>isGameOver</code> function, I think I would prefer writing <code>prevBoards |&gt; List.contains board</code> over <code>List.contains board prevBoards</code>.</p>

<p>Thanks for sharing your solution :).</p>
    </div>