<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code works well for odd inputs:</p>

<pre><code>9
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *
</code></pre>

<p>However, the output is weirdly wrong for even inputs:</p>

<pre><code>8
       **
  ****
 ******
********
******
 ****
  **
Â 
</code></pre>

<p>If you want to improve performance (in a way that would be noticeable to benchmarks, but not to the human eye), the most important change you should make is to reduce the number of <code>System.out.print()</code> calls.  Each <code>.print()</code> results in a system call, which would require synchronization (acquiring a lock, in case your program is multithreaded, so that the output of multiple simultaneous <code>.print()</code> calls won't get interleaved with each other), as well as context switching (putting your Java code on hold to run code in the operating system kernel).  All of that overhead is <em>huge</em>, compared to any other change you can make to your algorithm.</p>

<p>Therefore, for better performance, you should create a <code>StringBuilder</code> and repeatedly append the entire diamond to it, then call <code>System.out.println()</code> just once per line, or, better yet, just once at the end.  <a href="/a/111470/9357">Here is an example that prints an hourglass shape</a>, which is closely related to your diamond shape.</p>
    </div>