<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You professor sounds like a ... let's say "piece of work." This code seems really reasonable to me. I even ran the static analyzer on it, and got no complaints beyond what the compiler already suggested. I see 2 minor things (not counting the problems with the header he created) that I would change:</p>
<h1>Don't Double <code>#include</code></h1>
<p>The header file <code>#include</code>s <code>&lt;iostream&gt;</code> and so does the source file. Since it's in the header and you're including the header, don't include it again. It just wastes CPU time for the compiler to check.</p>
<h1>Use The Correct Return Type (or at least cast it to the correct type)</h1>
<p>The <code>gcd()</code> function takes 2 <code>long long</code>s, but returns an <code>int</code>. This causes a warning (at least with llvm) because you could be losing precision if the result is actually larger than fits in an <code>int</code>. <s>Since you can't change the function prototype, you need to at least cast it to an <code>int</code> to get rid of the warning. It would be nice to check to make sure the result is less than or equal to <code>INT_MAX</code> and throw an exception if it's not, but you're probably fine just casting for this homework assignment.</s> It turns out you can change the prototype! So I would have it return a <code>long long</code> instead.</p>
<p>Here are some issues I'd have with the header if it came to me in a code review at work:</p>
<h1>Don't use <code>using namespace std</code></h1>
<p>You obviously know this one, and you're right. Enough said.</p>
<h1><code>const</code> Correctness</h1>
<p>There is some use of <code>const</code> in the header, but there are many places where it's not used, and that's almost worse than not using it anywhere. For example, in the constructor that takes <code>long long</code>s, why aren't both arguments <code>const</code>? You're not changing them.</p>
<h1>Specify Visibility</h1>
<p>I program in C++ daily, and I'll be honest, I don't remember what the visibility rules are for members that don't have it specified. Are <code>_p</code>, <code>_q</code>, and <code>simplify()</code> public? Beats me! It's literally 10 characters in the worst case (<code>protected:</code>) to spell it out, so just spell it out! Don't make me think! I need to concentrate on what the code is doing, not on remembering arcane rules of the language that the compiler can't enforce for me.</p>
    </div>