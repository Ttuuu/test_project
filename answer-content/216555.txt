<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you don't want to use a JSON library, you can combine the 2 regex expressions into one and use named groups <code>(?&lt;name&gt;expression)</code>.</p>

<pre><code>private static Regex _regex =
    new Regex(@"""(?&lt;key&gt;.*)"".*?(?&lt;value&gt;\d*\.\d*)", RegexOptions.Compiled);
</code></pre>

<p>The you get the result with</p>

<pre><code>var match = _regex.Match("{ key = \"foo\", value = 1.6557, }");
string key = match.Groups["key"].Value;
string value = match.Groups["value"].Value;
</code></pre>

<p>Note that in a verbatim string, double quotes must be escaped by doubling them. The named group <code>key</code> does not include the double quotes, so you get the key directly.</p>

<p>So I basically have the regex</p>

<pre><code>key_expression.*?value_expression
</code></pre>

<p>Both expressions are separated by <code>.*?</code>. The quotation mark tells the <code>*</code> to be lazy, i.e. to take as few characters as possible. If you don't, it will swallow the digits before the decimal point.</p>
    </div>