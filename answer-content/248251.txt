<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Format</h1>
<p>Use proper indentation, after a curly brace use a tab or 4 spaces.</p>
<h1>Readability</h1>
<p>Add a message with your exceptions. It's a terrible practice to just throw a regular exception and no message. You'd have to look at the line numbers in the stack trace in order to know where the exception message came from. It's better to have a user-friendly message describing the issue that occurred.</p>
<p>Do not mix <code>!</code> with <code>&gt;</code> or <code>&lt;</code>. It's confusing to read.</p>
<p>Try to use negative or positive validation. For example, be consistent either checking if the inputs are wrong, or always check that their right. In other words have your error messages all at the top or bottom.</p>
<p><code>OutputResponse</code> Is not a good name. It's meaningless. Assuming this is a class you made, consider changing the name. Also consider using an <code>ArrayList</code> rather than separate fields, that way you don't need to refactor to include a 4+ separations.</p>
<h1>Example code:</h1>
<pre><code>public OutputResponse splitAmount(BigDecimal totalAmount, int divideInto) {
    if ((1 &gt; divideInto || 3 &lt; divideInto)) {
        throw new Exception("Divide into must be between 1-3");
    }
    
    if (totalAmount == null || totalAmount.compareTo(BigDecimal.ZERO &lt;= 0) {
        throw new Exception("Total amount must be a number greater than 0!");
    }
    
    BigDecimal recurringAmounts = null;
    BigDecimal firstAmount = totalAmount;
    if (divideInto &gt; 1) {
        recurringAmounts = totalAmount.divide(BigDecimal.valueOf(divideInto), 2, RoundingMode.FLOOR);
        firstAmount = totalAmount.subtract(recurringAmounts.multiply(new BigDecimal(divideInto - 1)));
    }

    OutputResponse outputResponse = OutputResponse.builder()
            .firstAmt(firstAmount)
            .secondPmtAmt(recurringAmounts)
            .build();

    if (divideInto &gt; 2) {
        outputResponse.setThirdPmtAmt(recurringAmounts);
    }
}
</code></pre>
    </div>