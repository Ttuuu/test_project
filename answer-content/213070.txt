<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, when in doubt, profile.</p>

<p>Now a not-so-wild guess. Most of the time is wasted in</p>

<pre><code>    qcnt="select count(1) from "+tb
    resq=c.execute(qcnt)
    rq=c.fetchone()
    rq=str(rq[0])
</code></pre>

<p>In fact, the <code>rq</code> is incremented by each successful <code>insert</code>. Better fetch it once, and increment it locally:</p>

<pre><code>    qcnt="select count(1) from "+tb
    resq=c.execute(qcnt)
    rq=c.fetchone()

    for row in csvfile:
        ....
        insert = ....
        c.execute(insert)
        rq += 1
        ....
</code></pre>

<p>Another guess is that committing each insert separately also does not help with performance. Do it once, after the loop. In any case, you must check the success of each commit.</p>

<hr>

<p>Notice that if there is more than one client updating the table simultaneously, there is a data race (clients fetching the same <code>rq</code>), both with the original design, and with my suggestion. Moving <code>rq</code> into a column of its own may help; I don't know your DB design and requirements.</p>

<p>Consider a single <code>insert values</code>, wrapped into a transaction, instead of multiple independent <code>insert</code>s.</p>

<hr>

<p>Testing for <code>cnt &gt; 0</code> is also wasteful. Read and discard the first line; then loop for the remaining rows.</p>

<hr>

<p>Figuring out whether a field represents a date seems strange. You shall know that in advance.</p>
    </div>