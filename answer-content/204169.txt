<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>The docs on "use strict" are vague but I'm not entirely sure putting it inside a function makes it apply to the function definition.</p></li>
<li><p><code>var shuffle = function shuffle (array) {</code> seems unnecessarily redundant. I would just use <code>function shuffle (array) {</code></p></li>
<li><p>Use <code>const</code> and <code>let</code> instead of <code>var</code> (unless you're trying to support older browsers)</p></li>
<li><p>It doesn't make sense to initialize <code>randomIndex</code> or <code>temporaryValue</code>.</p></li>
<li><p>I would write <code>while (currentIndex &gt; beginningIndex) {</code> especially if the <code>indexDecrement</code> could be something other than <code>1</code>. Actually I would prefer a <code>for</code> loop though its arguable given the way your loop is structured.</p></li>
<li><p>I would use destructuring assignment to swap values:</p>

<pre><code>[ array[currentIndex], array[randomIndex] ] = [ array[randomIndex], array[currentIndex] ];
</code></pre></li>
<li><p>If you use <code>const</code> or <code>let</code> you can move the definition of <code>randomIndex</code> and <code>temporaryValue</code> inside the loop block. </p></li>
<li><p>You return the <code>shuffle</code> function but your IIFE doesn't assign it anywhere. Apart from the fact that this seems unnecessarily complex I wonder if this even works? </p></li>
</ul>
    </div>