<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<p>Please give me some hints how i can write better, cleaner and more readable code</p>
</blockquote>
<p>.</p>
<p><strong>Objects: anything else is merely arranging the deck chairs on the Titanic</strong></p>
<pre><code>var listCoordinates = [
  [1, "München", "Robert-Bürkle-Straße", "1", 85737, "Ismaning", 48.229035, 11.686153, 524, 854],
  [2, "Berlin", "Wittestraße", "30", 13509, "Berlin", 52.580911, 13.293884, 648, 302],
  [3, "Braunschweig", "Mittelweg", "7", 38106, "Braunschweig", 52.278748, 10.524797, 434, 341],
  [4, "Bretten", "Edisonstraße", "2", 75015, "Bretten", 49.032767, 8.698372, 276, 747],
  [5, "Chemnitz", "Zwickauer Straße", "16a", 9122, "Chemnitz", 50.829383, 12.914737, 622, 525],
  [6, "Düsseldorf", "Gladbecker Straße", "3", 40472, "Düsseldorf", 51.274774, 6.794912, 138, 455]
];


// if I'm making lots of mistakes identifying the array elements, 
// its because the reader starts off not knowing that the heck the
// this array data is, then it's ripped apart several times, named and
// then renamed. 
// I cannot tell without very careful study and tracing what the heck
// is going on.

var places = []; 
listCoordinates.forEach(place =&gt; {
   places.push(
     { order          : place[0],
       city           : place[1],
       street         : place[2],
       doNotKnow      : place[3],
       whatIsThis     : place[4],
       nearestNeighbor : place[5],
       latitude       : place[6],
       longatude      : place[7],
       something      : place[8],
       somethingElse  : place[9]
    }
  ) );


//heuristic strict nearest neighbor (points that already have a connection do not get calculated)

// pass in a place object and use its properties.  
// I'm not going to rewrite this because I cannot tell how/where all these independent
// variables match to the place object.
// The stark contrast after *you* rewrite using coherent, understandable objects will be a huge "a-ha" moment
// in your understanding of readability, understandability,
// and the potential of object oriented coding in general.
</code></pre>
<p>P.S. write <code>toString</code> methods for objects that output the properties - great for debugging.</p>
    </div>