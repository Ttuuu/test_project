<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Although I don't disagree with the accepted answer, I just wanted to point out another option that is more similar to the OP's original code/logic but with less redundancy.</p>

<p>When one variable is continuously checked, that is a perfect case for a <code>switch</code> statement.</p>

<pre><code>function isAuthenticated(url, lv){

    let conf = config.getConfig();

    switch(url){

        // Role Editor
        case "/RoleEditor":
        case "/SaveRoles":
            return lv &gt; conf.roleEditor;

        // Queue
        case "/WriteQueueData":
            return lv &gt; conf.queuedata;

        // Listener
        case "/startListener":
        case "/stopListener":
        case "restartListener":
        case "/ListenerConfig":
        case "/SaveListenerConfig":
            return lv &gt; conf.listener;

        // Client details
        case "/ClientInfo":
            return lv &gt; conf.clientDetails;

        // User information
        case "/UserManagement":
            return lv &gt; conf.userOverview;

        // User Edit
        case "/EditUser":
        case "/EditUserToDb":
            return lv &gt; conf.userEdit;

    }

    return false;
}
</code></pre>

<p>As can be seen in the code, replacing a bunch of <code>if</code> expressions with a <code>switch</code> allows you to keep your code comments pretty much as-is, and you can mimic the <code>||</code> by using fall-through on a <code>case</code>.</p>

<p>Some people prefer always having <code>default</code> case where you <code>return false;</code>, others prefer returning outside the <code>switch</code>.</p>

<p>This is definitely more verbose and arguably not as elegant as other solutions, but I just thought it would be good to round out possible solutions because I think it is a perfect example of when you <em>could</em> use a <code>switch</code> statement.</p>
    </div>