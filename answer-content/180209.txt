<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Object-oriented code</h3>
<p>The OO code looks like a good start, though for a larger application, some separation of model and view logic may be necessary. Also, the constructor of the <em>Building</em> class is a bit long. I would recommend abstracting out the code to add elements into separate methods- a template might make that process simpler.</p>
<h3>Properly accessing the DOM</h3>
<p>Before accessing DOM elements, it would be wise to wait until the DOM has been loaded. <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener" rel="nofollow noreferrer"><code>EventTarget.addEventListener()</code></a> can be used on <code>document</code> to wait for the <a href="https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded" rel="nofollow noreferrer"><em>DOMContentLoaded</em></a> event.</p>
<pre><code>document.addEventListener("DOMContentLoaded", function(event) {
    var cookies_display = document.getElementById("cookies");
    var cookies_produced_display = document.getElementById("cookies_produced");

    var buildings = document.getElementById("buildings");
    //rest of code using cookies_display, cookies_produced_display and buildings
});
</code></pre>
<p>For more tips about optimizations with Javascript interacting with the DOM, I recommend <a href="https://ilikekillnerds.com/2015/02/stop-writing-slow-javascript/" rel="nofollow noreferrer">this article</a>. It has some tips like:</p>
<ul>
<li><strong>Caching DOM lookups</strong> - while there appears to be only one <em>Clicker</em> instance, each time the constructor is called it gets two elements by Id. Those should be cached in variables - and perhaps assigned once the DOMContentLoaded event is triggered.</li>
<li><strong>Adding new elements to a document fragment</strong> - Apparently the code in the <em>Building</em> constructor does something similar to this with the <code>&lt;span&gt;</code> element assigned to the <em>area</em> property.</li>
</ul>
    </div>