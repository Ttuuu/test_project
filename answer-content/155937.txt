<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>First, fix the bug!</h3>

<p>You're using <code>sys.exc_info()[-1].tb_lineno</code> but you're not importing the <code>sys</code> module anywhere, so do that first !</p>

<p>Now, I'll start my review with a couple of style guides. You can read more about them <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">here</a>.</p>

<ul>
<li>use snake_case convention for your variable names</li>
<li><p><code>import</code>s should be grouped in the following order:</p>

<ul>
<li>standard library imports</li>
<li>related third party imports</li>
<li>local application/library specific imports</li>
</ul></li>
</ul>

<p>You should put a blank line between each group of imports. More, absolute imports are recommended, as they are usually more readable and tend to be better behaved (or at least give better error messages) if the import system is incorrectly configured</p>

<ul>
<li>don't add redundant parentheses in conditional statements</li>
<li>use the <code>print()</code> function even if you're using Python 2.7.12</li>
<li>add a <kbd>space</kbd> before and after each operator</li>
<li>try to keep your lines no longer than 120 characters</li>
<li><p>use string formatting when you're concatenating strings: e.g: </p>

<pre><code>print("Skiwi hates stacks {} times more than I do!".format(100))
</code></pre></li>
</ul>

<p>With all of the above in mind, we'll have the following code (the formatting is a bit ugly because you have really long formulas but heh..):</p>

<pre><code>import math
import sys

import arcpy
from arcpy.sa import Con, Raster

arcpy.CheckOutExtension('spatial')
arcpy.env.overwriteOutput = True

climate_models = ["CanESM2", "CSIRO-Mk3-6-0", "HadGEM2-ES"]
concentration_pathway = ["rcp26", "rcp45", "rcp85"]

budworm_list = [2.1, 2.3, 0.6, 2.1, 1.7, 1.1, 1.6, 2.4, 2.1, 2.2, 0.9, 1.6, 0.6, 2.0, 1.7, 0.6, 0.7, 1.8, 1.3, 2.4,
                2.1, 0.8, 2.2, 1.6, 0.5, 1.0, 1.6, 2.4, 2.5, 2.5, 0.8, 0.5, 2.5, 0.9, 1.2, 0.7, 1.8, 1.8, 0.4, 1.9,
                0.8, 1.3, 0.6, 2.2, 0.7, 1.6, 1.0, 0.7, 0.8, 2.4, 1.7, 0.5, 1.1, 2.2, 0.9, 1.6, 1.8, 0.8, 2.3, 0.9,
                0.8, 1.0, 0.5, 1.6, 2.5, 2.2, 2.0, 1.3, 1.6, 1.2, 2.4, 0.9, 1.1, 0.8, 2.1, 2.2, 1.5, 2.4, 2.5, 2.2,
                1.3, 0.4, 1.5, 1.3, 1.7, 1.9, 1.8, 0.4, 0.4, 0.5, 1.5, 0.5, 0.6, 0.7, 1.6, 0.9, 0.9, 2.5, 1.4, 1.3]
time_step = ['4h', '8h', '12h', '16h', '20h', '24h']

try:
    for gcm in climate_models:
        for rcp in concentration_pathway:
            budworm_count = 1
            for budworm in budworm_list:
                year = 1971
                while year &lt;= 2070:
                    if (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):
                        days = 366
                    else:
                        days = 365
                    dev_stage = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_Stage.tif")
                    dev_stage_female = Raster(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_Stage_female.tif")
                    dev_l2o = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_L2o.tif")
                    dev_l2 = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_L2.tif")
                    dev_l3 = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_L3.tif")
                    dev_l4 = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_L4.tif")
                    dev_l5 = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_L5.tif")
                    dev_l6_male = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_L6_male.tif")
                    dev_l6_female = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_L6_female.tif")
                    dev_pupa_male = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_pupa_male.tif")
                    dev_pupa_female = Raster(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Dev_pupa_female.tif")
                    l2_date = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_L2.tif")
                    l3_date = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_L3.tif")
                    l4_date = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_L4.tif")
                    l5_date = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_L5.tif")
                    l6_date = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_L6.tif")
                    pupa_male_date = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_pupa_male.tif")
                    pupa_female_date = Raster(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_pupa_female.tif")
                    adult_male_date = Raster("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_adult_male.tif")
                    adult_female_date = Raster(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Jul_adult_female.tif")

                    current_day = 1
                    while current_day &lt;= days:
                        for time in time_step:
                            tempfile = Raster(
                                "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\{}\\{}\\4hTempTimeStep\\{}_{}_{}.tif".format(
                                    gcm, rcp, time, current_day, year))
                            dev_l2o = Con(((dev_stage == 1) &amp; ((tempfile &gt; 2.5) &amp; (tempfile &lt; 35)) &amp; (dev_l2o &lt;= 1)),
                                          dev_l2o + (float(budworm)) * ((0.194 * (
                                          (1 / (1 + (math.e ** (3.00 - (5.84 * ((tempfile - 2.5) / (35 - 2.5))))))) - (
                                          math.e ** ((((tempfile - 2.5) / (35 - 2.5)) - 1) / 0.034)))) / 6), dev_l2o)
                            dev_l2 = Con(((dev_stage == 2) &amp; ((tempfile &gt; 4.4) &amp; (tempfile &lt; 38)) &amp; (dev_l2 &lt;= 1)),
                                         dev_l2 + (float(budworm)) * ((0.919 * (
                                         (1 / (1 + (math.e ** (2.91 - (5.32 * ((tempfile - 4.4) / (38 - 4.4))))))) - (
                                         math.e ** ((((tempfile - 4.4) / (38 - 4.4)) - 1) / 0.061)))) / 6), dev_l2)
                            dev_l3 = Con(((dev_stage == 3) &amp; ((tempfile &gt; 4.4) &amp; (tempfile &lt; 38)) &amp; (dev_l3 &lt;= 1)),
                                         dev_l3 + (float(budworm)) * ((0.438 * (
                                         (1 / (1 + (math.e ** (3.06 - (6.85 * ((tempfile - 4.4) / (38 - 4.4))))))) - (
                                         math.e ** ((((tempfile - 4.4) / (38 - 4.4)) - 1) / 0.061)))) / 6), dev_l3)
                            dev_l4 = Con(((dev_stage == 4) &amp; ((tempfile &gt; 4.4) &amp; (tempfile &lt; 38)) &amp; (dev_l4 &lt;= 1)),
                                         dev_l4 + (float(budworm)) * ((1.211 * (
                                         (1 / (1 + (math.e ** (3.80 - (7.55 * ((tempfile - 4.4) / (38 - 4.4))))))) - (
                                         math.e ** ((((tempfile - 4.4) / (38 - 4.4)) - 1) / 0.148)))) / 6), dev_l4)
                            dev_l5 = Con(((dev_stage == 5) &amp; ((tempfile &gt; 4.4) &amp; (tempfile &lt; 38)) &amp; (dev_l5 &lt;= 1)),
                                         dev_l5 + (float(budworm)) * ((0.269 * (
                                         (1 / (1 + (math.e ** (3.02 - (8.57 * ((tempfile - 4.4) / (38 - 4.4))))))) - (
                                         math.e ** ((((tempfile - 4.4) / (38 - 4.4)) - 1) / 0.005)))) / 6), dev_l5)
                            dev_l6_male = Con(
                                ((dev_stage == 6) &amp; ((tempfile &gt; 4.4) &amp; (tempfile &lt; 38)) &amp; (dev_l6_male &lt;= 1)),
                                dev_l6_male + (float(budworm)) * ((0.288 * (
                                (1 / (1 + (math.e ** (2.67 - (5.03 * ((tempfile - 4.4) / (38 - 4.4))))))) - (
                                math.e ** ((((tempfile - 4.4) / (38 - 4.4)) - 1) / 0.151)))) / 6), dev_l6_male)
                            dev_l6_female = Con(
                                ((dev_stage_female == 1) &amp; ((tempfile &gt; 4.4) &amp; (tempfile &lt; 38)) &amp; (dev_l6_female &lt;= 1)),
                                dev_l6_female + (float(budworm)) * ((0.317 * (
                                (1 / (1 + (math.e ** (3.06 - (4.66 * ((tempfile - 4.4) / (38 - 4.4))))))) - (
                                math.e ** ((((tempfile - 4.4) / (38 - 4.4)) - 1) / 0.136)))) / 6), dev_l6_female)
                            dev_pupa_male = Con(
                                ((dev_stage == 7) &amp; ((tempfile &gt; 4.4) &amp; (tempfile &lt; 35)) &amp; (dev_pupa_male &lt;= 1)),
                                dev_pupa_male + ((0.259 * (
                                (1 / (1 + (math.e ** (2.75 - (4.66 * ((tempfile - 4.4) / (35 - 4.4))))))) - (
                                math.e ** ((((tempfile - 4.4) / (35 - 4.4)) - 1) / 0.053)))) / 6), dev_pupa_male)
                            dev_pupa_female = Con(((dev_stage_female == 2) &amp; ((tempfile &gt; 4.4) &amp; (tempfile &lt; 35)) &amp; (
                            dev_pupa_female &lt;= 1)), dev_pupa_female + ((0.205 * (
                            (1 / (1 + (math.e ** (2.85 - (6.28 * ((tempfile - 4.4) / (35 - 4.4))))))) - (
                            math.e ** ((((tempfile - 4.4) / (35 - 4.4)) - 1) / 0.044)))) / 6), dev_pupa_female)

                            dev_stage = Con(((dev_stage == 1) &amp; (dev_l2o &gt; 1)), dev_stage + 1, dev_stage)
                            dev_stage = Con(((dev_stage == 2) &amp; (dev_l2 &gt; 1)), dev_stage + 1, dev_stage)
                            dev_stage = Con(((dev_stage == 3) &amp; (dev_l3 &gt; 1)), dev_stage + 1, dev_stage)
                            dev_stage = Con(((dev_stage == 4) &amp; (dev_l4 &gt; 1)), dev_stage + 1, dev_stage)
                            dev_stage = Con(((dev_stage == 5) &amp; (dev_l5 &gt; 1)), dev_stage + 1, dev_stage)
                            dev_stage = Con(((dev_stage == 6) &amp; (dev_l6_male &gt; 1)), dev_stage + 1, dev_stage)
                            dev_stage = Con(((dev_stage == 7) &amp; (dev_pupa_male &gt; 1)), dev_stage + 1, dev_stage)
                            dev_stage_female = Con(((dev_stage_female == 1) &amp; (dev_l6_female &gt; 1)),
                                                   dev_stage_female + 1, dev_stage_female)
                            dev_stage_female = Con(((dev_stage_female == 2) &amp; (dev_pupa_female &gt; 1)),
                                                   dev_stage_female + 1, dev_stage_female)

                            l2_date = Con(((dev_l2o &gt; 1) &amp; (l2_date == 0)), l2_date + current_day, l2_date)
                            l3_date = Con(((dev_l2 &gt; 1) &amp; (l3_date == 0)), l3_date + current_day, l3_date)
                            l4_date = Con(((dev_l3 &gt; 1) &amp; (l4_date == 0)), l4_date + current_day, l4_date)
                            l5_date = Con(((dev_l4 &gt; 1) &amp; (l5_date == 0)), l5_date + current_day, l5_date)
                            l6_date = Con(((dev_l5 &gt; 1) &amp; (l6_date == 0)), l6_date + current_day, l6_date)
                            pupa_male_date = Con(((dev_l6_male &gt; 1) &amp; (pupa_male_date == 0)),
                                                 pupa_male_date + current_day, pupa_male_date)
                            adult_male_date = Con(((dev_pupa_male &gt; 1) &amp; (adult_male_date == 0)),
                                                  adult_male_date + current_day, adult_male_date)
                            pupa_female_date = Con(((dev_l6_female &gt; 1) &amp; (pupa_female_date == 0)),
                                                   pupa_female_date + current_day, pupa_female_date)
                            adult_female_date = Con(((dev_pupa_female &gt; 1) &amp; (adult_female_date == 0)),
                                                    adult_female_date + current_day, adult_female_date)

                        current_day = current_day + 1
                    l2_date.save(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\{}_{}_Budworm_{}_L2_{}.tif".format(gcm,
                                                                                                                  rcp,
                                                                                                                  budworm_count,
                                                                                                                  year))
                    l3_date.save("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Budworm_{}_L3_{}.tif".format(
                        budworm_count, year))
                    l4_date.save("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Budworm_{}_L4_{}.tif".format(
                        budworm_count, year))
                    l5_date.save("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Budworm_{}_L5_{}.tif".format(
                        budworm_count, year))
                    l6_date.save("C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Budworm_{}_L6_{}.tif".format(
                        budworm_count, year))
                    pupa_male_date.save(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Budworm_{}_pupa_male_{}.tif".format(
                            budworm_count, year))
                    adult_male_date.save(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Budworm_{}_adult_male_{}.tif".format(
                            budworm_count, year))
                    pupa_female_date.save(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Budworm_{}_pupa_female_{}.tif".format(
                            budworm_count, year))
                    adult_female_date.save(
                        "C:\\Users\\Robert\\Documents\\PCIC_ClimateData\\TEST\\Budworm_{}_adult_female_{}.tif".format(
                            budworm_count, year))

                    year += 1
                budworm_count += 1
            print("{} {} has finished".format(gcm, rcp))
except Exception as e:
    print("An error occurred")
    print(e)

except arcpy.ExecuteError:
    print("A geoprocessing error occurred")
    print(arcpy.GetMessages(2))

except IndexError:
    print('Error on line {}'.format(sys.exc_info()[-1].tb_lineno))

arcpy.CheckInExtension('spatial')
</code></pre>

<h3>Code related improvements</h3>

<ul>
<li><p>you said you want to generate a list of 100 random numbers (which should be the same while looping). That's quite easy to do if you're using the <code>random</code> module:</p>

<pre><code>def budworm_list(lower_limit, upper_limit, decimals):
    return [round(random.uniform(lower_limit, upper_limit), decimals) for _ in range(100)]
</code></pre>

<p>Which can be latter called like this:</p>

<pre><code>budworm_list = generate_budworm_list(0.4, 2.5, 1)
</code></pre></li>
<li><p>use <a href="https://docs.python.org/2/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> to get rid of the usual counter. This Function can also take as a parameter the <code>step</code> which will let you start from 1.</p>

<pre><code>...
for budworm_count, budworm in enumerate(budworm_list, start=1):
    ...
</code></pre></li>
<li><p>don't initialize the <code>year</code> each time you're looping. Instead, declare it at the top of the program. More, that's a constant, which is usually declared in UPPER_CASE. (<code>YEAR = 1971</code>). Better yet, remove completely the while loop and add a for loop (see below).</p></li>
<li><p>there's a built-in which can tell you if an year is leap or not. You can find it in the calendar module:</p>

<pre><code>import calendar

print calendar.isleap(1900)
&gt;&gt; True
</code></pre>

<p>So, let's make a little function which will return the number of days needed:</p>

<pre><code>def is_leap(year):
    return 366 if calendar.isleap(year) else 365
</code></pre></li>
<li><p>your program is a big <code>main()</code> where you've written all the logic. This makes the whole <strong>really</strong> hard to read! Instead, write small functions for each specific task.</p></li>
<li><p>your <code>while</code> loops can be re-written as <code>for</code> loops. This will save some variables allocation (extra incrementation):</p>

<pre><code>for year in range(1971, 2071):
    ...
    for current_day in range(1, days + 1):
        ...
</code></pre></li>
</ul>

<p>I'd really like to review more of this, but unfortunately I can't test any of the code + you didn't add enough context (<em>for me</em>) to understand better what you'd like to achieve with each piece of code. For example, you create some variables in a for loop, and redefine them in another loop with the previous values from the previous loop... and so on.</p>
    </div>