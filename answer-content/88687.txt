<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some suggestions:</p>

<ul>
<li><p>The assignment says “ you may assume that n is a non-negative integer”, but the condition you check is “n &gt; 0”. Since n = 0 is non-negative (and corresponds to no mutation of the list), you should handle that as well.</p></li>
<li><p>An assert should only really be used to check that the program isn’t in an impossible situation. It would be preferable to use exceptions, and it’s very simple to do so:</p>

<pre><code>if n &lt; 0:
    raise ValueError("Input %d is not a non-negative integer" % n)
</code></pre>

<p>(Alternatively, you could implement negative indices as right-shifting, but I’ll leave that for now.)</p></li>
<li><p>You can condense the for loop in <code>shift</code> with a list slice: the following code achieves the same effect:</p>

<pre><code>lst[:-1] = lst[1:]
</code></pre>

<p>Everything except the last element in <code>lst</code> is assigned to the element one to its left in the original list.</p>

<p>You can extend this list slicing to do away with the <code>temp</code> variable (which is probably a bit more memory efficient), and do the list slicing in a single line. Shifting one position to the left is achieved with the line</p>

<pre><code>lst[:] = lst[1:] + [lst[0]]
</code></pre></li>
<li><p>At that point, the <code>shift()</code> function is almost so simple that you can do away with it entirely, and recurse only on the <code>shift_left()</code> function. Here’s what I reduced it to:</p>

<pre><code>if n == 0:
    return
else:
    lst[:] = lst[1:] + [lst[0]]
    shift_left(lst, n-1)
</code></pre></li>
</ul>
    </div>