<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Use a function declaration <code>function rechne2b(a, b, {operator}){</code> rather than a function expression <code>let rechne2b = function(a, b, {operator}){</code></li>
<li>There is only a single optional argument so don't use the rest operator <code>...</code></li>
<li>The optional argument is passed in an object so you should use destructuring assignment <code> function rechne2b(a, b, {operator})</code> to extract the operator if given.</li>
<li>Avoid <code>switch</code> statements if you can by using a lookup (see example)</li>
</ul>
<h2>Rewrite</h2>
<pre><code>function rechne2b(a, b, {operator}) {
    const ops = {
        subtrahiere(a, b) { return a - b },
        multipliziere(a, b) { return a * b },
    };
    return ops[operator] ? ops[operator](a, b) : a + b;
}
</code></pre>
    </div>