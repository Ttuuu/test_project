<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">


<p>Assuming that you always want the data from a single button press to fall on the same row, you can achieve this functionality with</p>

<pre class="lang-vb prettyprint-override"><code>let ws.[A1].Offset(row-1).Resize(1,10) = _  
        Array( _ 
            JobID.Text, _ 
            Surveyor.Text, _  
            DateBox.Text, _ 
            AddressBox.Text, _ 
            CityBox.Text, _ 
            PostcodeBox.Text, _ 
            THPBox.Text, _ 
            ChamberBox.Text, _ 
            ORFibreBox.Text)   
let ws.[K1].Offset(row-1).Formula="=I" &amp; row &amp; "*5"
</code></pre>

<p>where you have to row is found in the same way as you had been doing before, with some column that is garunteed not to have a blank.
Or, if we assume that column J will always be blank at the time a new row is added, you can do this with </p>

<pre class="lang-vb prettyprint-override"><code>let ws.[A1].Offset(row-1).Resize(1,10) = _  
        Array( _ 
            JobID.Text, _ 
            Surveyor.Text, _  
            DateBox.Text, _ 
            AddressBox.Text, _ 
            CityBox.Text, _ 
            PostcodeBox.Text, _ 
            THPBox.Text, _ 
            ChamberBox.Text, _ 
            ORFibreBox.Text, _ 
            "", _  
            ("=I" &amp; row &amp; "*5"))
</code></pre>

<p>That said, you should probably look into making the table into a <a href="https://docs.microsoft.com/en-us/office/vba/api/excel.listobject" rel="nofollow noreferrer">ListObject</a>. If you do so (CTRL + T while highlighting the table; yes it has headers), you can make your code look like </p>

<pre class="lang-vb prettyprint-override"><code>dim lo as ListObject, _
    lr as ListRow

Set lo = ws.[A1].listobject
Set lr = lo.ListRows.Add
let lr.Range(1, 1).Resize(1, 11) = _ 
        Array( _ 
            JobID.Text, _ 
            Surveyor.Text, _  
            DateBox.Text, _ 
            AddressBox.Text, _ 
            CityBox.Text, _ 
            PostcodeBox.Text, _ 
            THPBox.Text, _ 
            ChamberBox.Text, _ 
            ORFibreBox.Text, _ 
            "", _  
            ("=I" &amp; row &amp; "*5"))
</code></pre>

<p>and, if you do end up doing this, you would probably want to change the way that the final formula is assigned to reflect <a href="https://support.office.com/en-us/article/using-structured-references-with-excel-tables-f5ed2452-2337-4f71-bed3-c8ae6d2b276e" rel="nofollow noreferrer">Excel Table Reference notation</a></p>

<p>If you choose to do either of these ways, it will greatly reduce the number of updates that are made to the worksheet by pushing the entire row at once. This should make the method run significantly faster - thought I would expect this not to be very noticible with this relatively small number of columns.</p>
    </div>