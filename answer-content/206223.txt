<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>That works, but obviously, the code is repetitive, and a lot of work to maintain.  To prepare each Mad Lib, you have to count the number of each type of blank, to make the required number of prompts.  Then, you fill in the blanks using <code><em>str</em>.format(â€¦)</code> with some rather cryptic placeholders in the format string.</p>

<p>A smarter approach would be to have the computer do most of that work for you, so that you only need to supply a template in some human-friendly format, and the code figures out the necessary prompts.  That would necessitate a complete rewrite of the code.</p>

<p>Furthermore, you should avoid making separate lists for each part of speech, because that forces you to write separate code to handle each part of speech.  Rather, you should store the words in a dictionary, with the parts of speech as 
keys, and list of words as values.  (More specifically, you can use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> to ensure that each key is initially associated to an empty list.)  Storing the data in a dictionary would also help you avoid the nasty use of global variables.</p>

<h2>Suggested solution</h2>

<p>This solution uses <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a> to analyze the template and perform the word substitutions.</p>

<pre><code>from collections import defaultdict
import random
import re

def mad_lib(template):
    blanks = re.findall(r'\{(.*?)\}', template)
    random.shuffle(blanks)
    words = defaultdict(list)
    for part_of_speech in blanks:
        words[part_of_speech].append(input(part_of_speech + ":\n&gt; "))
    for answers in words.values():
        random.shuffle(answers)
    return re.sub(
        r'\{(.*?)\}',
        lambda match: words[match.group(1)].pop(),
        template
    )


print("&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Mad Libs &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;")

print(mad_lib(
    "{Verb(-ing)} these {Noun(plural)}, {Noun} like a {Noun}, I'm {Verb(-ing)} {Noun(plural)} now, someone {Verb(-ed)} me do I {Verb} {Noun(plural)}, it's gonna be {Adjective}, {Verb(-ing)} {Noun(plural)} that's what I'm {Verb(-ing)} about yeah"
))

print(mad_lib(
    """You have been {Verb(-ed)} into Hogwarts {Noun(singular)} of {Adjective} and {Adjective}. You will be {Verb(-ing)} throughout the {Noun(singular)} and will {Verb} in the {Noun(plural)}. You will be {Verb(-ed)} in one of the four houses.
{Noun(singular)}, {Noun(singular)}, {Noun(singular)} or {Noun(singular)} and will learn much about the {Adjective} {Noun(plural)}. Once you arrive you will {Verb} The Great {Noun(singular)} for a feast with the headmaster, Proffessor
{Noun(singular)}. You will need to get all the {Adjective} {Noun(plural)} in {Noun(singular)} Alley and get a {Noun(singular)} from Ollivanders {Noun(singular)} shop. We hope to {Verb} you there."""
))
</code></pre>
    </div>