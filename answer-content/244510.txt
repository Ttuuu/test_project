<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As this question was asked nearly four years ago it is likely the case that you have learned more about JavaScript since then and/or changed this code. Nonetheless perhaps the info below will help you and/or somebody else.</p>
<p>It is interesting that <a href="https://backbonejs.org/#" rel="nofollow noreferrer">The BackBoneJS documentation</a> uses some valid JSON for specifying the keys of objects but not all. The keys in the original code don't all need to be double quoted - e.g.</p>
<pre><code>var UserModel = Backbone.Model.extend({
    "urlRoot": "/users",
    "id": "id",
</code></pre>
<p>could simply be</p>
<pre><code>var UserModel = Backbone.Model.extend({
    urlRoot: "/users",
    id: "id",
</code></pre>
<hr>
<p>There is a lot of duplicate code in the <code>addUser</code> and <code>editUser</code> methods of <code>UsersView</code>. Follow the <a href="https://deviq.com/don-t-repeat-yourself/" rel="nofollow noreferrer"><strong>D</strong>on't <strong>R</strong>epeat <strong>Y</strong>ourself principle</a> by abstracting the common code - perhaps into a method that handles the common functionality and can be called in both places. That way if you need to update something it can be done in one place instead of multiple.</p>
<hr>
<p>In the <code>UsersView</code> method <code>initialize</code> I see the following:</p>
<blockquote>
<pre><code>var self = this;
</code></pre>
</blockquote>
<p>That is an anti-pattern in Javascript. Instead of using that, use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind" rel="nofollow noreferrer"><code>Function.bind()</code></a> to bind the context, or else use <code>_.bind()</code> or <code>_.bindAll()</code> as is used in other parts of the code.</p>
<p>The block after that line, i.e.</p>
<blockquote>
<pre><code> $("#addUser").on("click", function() {
</code></pre>
</blockquote>
<pre><code>            self.addUser();
        });
</code></pre>
<p>Can be simplified to</p>
<pre><code>$("#addUser").on("click", this.addUser.bind(this));
</code></pre>
<p>This removes the excess function wrapper.</p>
<p>It can also be simplified using the jQuery shorthand method <a href="https://api.jquery.com/click" rel="nofollow noreferrer"><code>.click()</code></a>:</p>
<pre><code>$("#addUser").click(this.addUser.bind(this));
</code></pre>
    </div>