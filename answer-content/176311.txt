<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Good job in general!</p>

<p><strong>Avoid using goto unless absolutely necessary</strong></p>

<p>Gotos make code really hard to follow, and difficult to refactor. You should really consider changing that whole approach.</p>

<p>A simple "enum and switch"-based state machine would work just as well, and be a lot more straightforward.</p>

<p><strong>Edit</strong> Example:</p>

<pre><code>enum GameState {
  X_PLAY,
  O_PLAY,
  X_WON,
  O_WON,
};

GameState state = X_PLAY;

while (counter != 9) {
  switch(state) {
  case X_PLAY:
    ...
    break;
  case O_PLAY:
    ...
    break;
  };
}
</code></pre>

<p><strong>Avoid using magic values</strong></p>

<p>Most of your constants should de defined as global variables or defines. What would happen if you wanted to change the x and o to the upper-case letters? That refactor would require multiple changes around the code, and be error-prone.</p>

<p><strong>Always use braces with your if/while/for</strong></p>

<p>I find it just too easy to accidentally make a mistake when refactoring code that does not use braces for single-statement ifs. </p>

<p>That's one of the main reason I personally really like the "opening brace on the if line" coding convention. It makes adding the braces have very little influence on code length.</p>

<pre><code>if (j != 2)
  printf("|");
// vs
if (j != 2) {
  printf("|");
}
</code></pre>

<p>The only exception to this would be <code>if</code> -&gt; <code>else if</code> sequences:</p>

<pre><code>if(a) {
  ...
} else if(b) {
  ...
} else {
  ...
}
</code></pre>

<p><strong>You are conflating the game representation and the visual representation</strong></p>

<p>You are using your graphic representation as your game state. Generally, that's frowned upoon, as it breaks isolation of concerns, and forces you to think about the game state when manipulating the visual representation and vice-versa.</p>

<p>This is definitely a bit contentious, as it's so very convenient for tic-tac-toe, that there is value in it.</p>
    </div>