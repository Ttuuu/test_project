<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It's not unbeatable.</p>
<p>I beat it with the following series of moves (though I see you have some randomness so some tries may be required to replicate it)</p>
<p>I went first, then played middle bottom, ai responded middle middle, I played middle left, ai responded top right, I played bottom left, ai played bottom right, I played top left, and won.</p>
<p>This will inform my review of your code.</p>
<p>First of all I would say that if you suspect something like 'this is unbeatable', but you can't prove it. Then that's a brilliant impetus to rewrite your code so that it's easier to reason about and prove is unbeatable.</p>
<p>Some comments on your code, you shouldn't be using var in JavaScript. It has funny scoping, for example what do you believe the following example prints</p>
<pre><code>function f() {
    for (var i = 0; i &lt; 10; i++) {
        setTimeout(() =&gt; console.log(i));
    }
}

f();
</code></pre>
<p>You should prefer let and const.</p>
<p>In terms of structure, it would be good for you to separate the logic of playing the game, and the logic of representing the game. For example, the function for the AI deciding what it should play shouldn't concern itself with the representation of the board. Instead have a sensible structure which is an abstract representation of the board (say, an array of arrays), have a function which takes this representation and works out the next move, and another function which translates that move to the UI representation. This will make your code much easier to reason about.</p>
    </div>