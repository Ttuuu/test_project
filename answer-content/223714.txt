<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your concepts look completely misguided.</p>

<p>A <em>ring</em> is a mathematical concept, an algebraic structure. It does have a size, but it doesn't have a value.</p>

<p>The value would be part of a <em>ring element</em>. Such a ring element is a tuple (ring, value).</p>

<p>The pitch of a note is indeed a ring element. A ring element can only be used to store the pitch of a note, but not its octave. If it did, it would not match the mathematical concept of a ring anymore.</p>

<p>To represent a musical note in Western notation, my first idea is:</p>

<pre><code>data class Note(
    val octave: Int,
    val name: NoteName,
    val mod: NoteModifier,
    val duration: NoteDuration
)

enum class NoteName {
    C, D, E, F, G, A, B
}

enum class NoteModifier {
    Natural, Sharp, Flat, TwoSharp, TwoFlat
}

enum class NoteDuration {
    Full, Half, Quarter, Eighth, Sixteenth
}
</code></pre>

<p>The above definitions are very rough and limited. To get a grasp of the actual complexity of typesetting music, have a look at LilyPond, it should have a definition of a note somewhere in the code.</p>

<p>If you just want to replay the music, there's no need to distinguish between c# and d<span class="math-container">\$\flat\$</span>, which would make the above definitions much simpler.</p>

<p>In Kotlin you don't need setters since the <code>copy</code> function is more powerful than in Java. You can just say:</p>

<pre><code>val note = other.copy(octave = 3, pitch = 5)
</code></pre>

<p>This is easier to grasp and less code to write. If you write a setter method in Kotlin, lean back and think twice. Probably you are doing something unusual.</p>

<p>By the way, property names in Kotlin are written in lowercase. Kotlin is based on Java, not C#.</p>
    </div>