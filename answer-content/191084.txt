<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You created public properties for </p>

<ul>
<li>UserName</li>
<li>Password</li>
<li>Server </li>
<li>Database  </li>
</ul>

<p>but you shouldn't allow these things to be editable by other objects</p>

<p>these are things that need to be hidden from everyone except this class,  the consumer of this class should not know what these values are, or be allowed to change them without following a strict set of rules defined in the class itself</p>

<p>I think that what you want is a <a href="https://docs.microsoft.com/en-us/dotnet/visual-basic/language-reference/modifiers/protected" rel="nofollow noreferrer">protected property</a>, something that is only available to the class and any class that inherits the class.</p>

<p>the Server property would look like this:</p>

<pre><code>Protected Property Server
    Get
        Return _Server
    End Get
    Set
        _Server = Value
    End Set
End Property
</code></pre>

<hr>

<p>Your function that gets the connection string needs to be renamed, it is not connecting the server all by itself, it is returning a connection string.  I suggest: <code>GetConnectionString</code> or something like that</p>

<p>I also believe that this can be done in a single line, and if you can use string interpolation you can get rid of those pesky ampersands too.</p>

<p>Your code:</p>

<blockquote>
<pre><code>Public Function Connect_Server() As String
    Connect_Server = "server=" &amp; Server &amp; ";" &amp; "userid=" &amp; UserName &amp; ";" &amp; "password=" &amp; Password &amp; ";" &amp; "database=" &amp; Database
    Return Connect_Server
End Function
</code></pre>
</blockquote>

<p>after my suggestions:</p>

<pre><code>Public Function GetConnectionString() As String
    Return $"server = {Server};userid={UserName};password{Password};database{Database}"
End Function
</code></pre>

<p>And then you can use some using statements to clean up the clean up of the <code>Retrieve_Row</code> function </p>

<p>by doing this you won't have to call the Garbage Collector or close your Connection, Command or Reader.  you can also assign the properties of the command with the Object Initializer syntax.</p>

<p>so now the code looks like this:</p>

<pre class="lang-vb prettyprint-override"><code>Public Function Retrieve_Row(SQLStatement As String) As ArrayList
    Try
        Dim result As New ArrayList
        Using MySqlConnection As New MySqlConnection With {.ConnectionString = GetConnectionString()}
            MySqlConnection.Open()
            Using MySqlCommand As New MySqlCommand _
                With {.CommandText = SQLStatement,
                            .Connection = MySqlConnection}
                Using reader = MySqlCommand.ExecuteReader
                    While reader.Read()
                        Dim Dict As New Dictionary(Of String, Object)
                        For count As Integer = 0 To (reader.FieldCount - 1)
                            Dict.Add(reader.GetName(count), reader(count))
                        Next
                        result.Add(Dict)
                    End While
                End Using
            End Using
        End Using
        Return result
    Catch ex As Exception
        Console.WriteLine("MySQL retrieve row: " &amp; ex.Message &amp; Err.Number)
    End Try
End Function
</code></pre>
    </div>