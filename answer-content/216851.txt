<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would use dependency injection. Something like</p>

<pre><code>serviceCollection
   .AddTransient&lt;IShareStrategy, ShareOnFacebook&gt;()
   .AddTransient&lt;IShareStrategy, ShareOnTwitter&gt;()
   .AddTransient&lt;IShareStrategyProvider, ShareStrategyProvider&gt;();

public class ShareStrategyProvider : IShareStrategyProvider
{
   private readonly IEnumerable&lt;IShareStrategy&gt; _strategies;
   public ShareStrategyProvider(IEnumerable&lt;IShareStrategy&gt; strategies) 
   {
      _strategies = strategies;
   }

   public GetStrategy(ShareStrategy sharingStrategy);
   {
      return _strategies.Single(s =&gt; s.SharingStrategy == sharingStrategy);
   }
}
</code></pre>

<p>edit: Read up on open/closed principle, its related</p>
    </div>