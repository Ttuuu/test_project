<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I took a look at your github and I think your code is broken up a bit too much. I think a few files can be consolidated.
For instance, consider consolidating the files for; input_cursor.c, pressed_key.c into one file called "user_input.c" and do the same for the .h files.</p>

<p>I would also avoid making files named after reserved words in C. like "structures.h". Putting all of your structures in one place is fine if they all serve the same purpose, but name the file after the thing's purpose, not the thing. </p>

<p>I see you're not including std.io until the testing functions are declared in the file. This won't affect performance or compile time. It only distracts the programmer. so regardless of the purpose of the include or which functions will use it, put them all at the top. Now, if you're planning on deleting your test code after release then you really should put all your test functions in their own files in a different directory labeled "test" and define a makefile that can take in a test flag so that it knows to compile the test objects together with the rest of your code.</p>

<p>I also saw a variable declared in a c-code file called <em>keys_pqueue[25] = {}</em>, this is a configuration, and should go in a header file. leave the c-code files for functional code and the headers for all your different kinds of configurations and namespace management.</p>

<p>That's the only feedback I have for now. Your code looks very well thought-out. And C/C++ are hard languages to begin coding with. So it's all very well done!</p>
    </div>