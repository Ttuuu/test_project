<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>On first sight, your code looks reasonably short. Nevertheless, no matter how short the code is, there's always something to improve.</p>

<p>The function name and signature are perfect. I though about passing the string as <code>ByVal</code>, but that might be less efficient since the string might have to be copied then.</p>

<p>Initializing the return value of the function to <code>False</code> at the very beginning is good style. For a function that validates something, any accidental return should say "not valid". This is a commonly found pattern, especially in security-related code.</p>

<p>Some of the variable names start with an uppercase letter and some with a lowercase letter. I don't see any reason to mix these two styles. You should either start all variable names with an uppercase letter, or all with a lowercase letter.</p>

<p>Typo: <code>Lenght</code> should be <code>Length</code> instead. It seems the Microsoft IDE lacks a spell checker. That should really be fixed on Microsoft's side.</p>

<p>The variable name <code>tempStr</code> does not say much about the purpose of that variable. A better name would be <code>ReorderedIBAN</code>.</p>

<p>The variable name <code>o</code> is strange as well. For cases like here, the variable name <code>i</code> is more common. This name is an abbreviation for <code>index</code>.</p>

<p>The variable name <code>newStr</code> is confusing because its type is not <code>String</code> but <code>Variant</code>.</p>

<p>After each line containing <code>Exit Function</code>, I would put an empty line, to start a new paragraph. This groups the code lines more logically.</p>

<p>It's unfortunate that this simple function needs a whole spreadsheet just to look up the IBAN length by country name. I'd rather encode all the length requirements in a single string, like this:</p>

<pre><code>' See https://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country
LengthByCountry = "AL28 AN24 AT20 AZ28 BH22 ..."
</code></pre>

<p>Given this string, you could search like this:</p>

<pre><code>LengthIndex = Index(LengthByCountry, Left(IBAN, 2))
If LengthIndex Mod 5 &lt;&gt; 1 Then Exit Function

CountryLength = Mid(LengthByCountry, LengthIndex + 2, 2)
If Len(IBAN) &lt;&gt; CountryLength Then Exit Function
</code></pre>

<p>And if you made it this far, you could also validate that the IBAN matches the BBAN Format that is given in the Wikipedia article.</p>

<p>When you loop over the characters of the <code>ReorderedIBAN</code>, you use a spreadsheet lookup again. I'm sure VBA has a built-in function for getting the character code from the first character of a string, but I couldn't find it. Usually it is called <code>ASC</code>, <code>ORD</code>, <code>CODE</code>.</p>

<p>Instead of creating new strings all the time, you could also do the <code>Mod 97</code> math directly on the digits as you convert them. The idea is:</p>

<pre><code>Result = 0
For i = 1 To Len(ReorderedIBAN)
    ch = Mid(ReorderedIBAN, i, 1)

    If IsNumeric(ch) Then
        n = Asc(ch) - Asc("0")
    Else
        n = Asc(ch) - Asc("A") + 10
        If n &lt; 1 Or n &gt; 26 Then Exit Function
    End If

    If Result &lt; 10 Then
        Result = (10 * Result + n) Mod 97
    Else
        Result = (100 * Result + n) Mod 97
    End If
Next i
</code></pre>

<p>The above code takes care not to use strings but rather only simple arithmetic operations, since the latter are usually faster than string operations.</p>

<p>Your code currently may or may not handle lowercase letters correctly. That depends on the part of the Excel spreadsheet that you omitted from your question. If in doubt, just call <code>UCase</code> on the <code>ReorderedIBAN</code> before looping over it.</p>

<p>To ensure your code works as intended, you should place a <code>Sub TestIsValidIban</code> next to it that contains example IBANs and whether they validate or not. If any of them does not validate, an error should occur. Or does VBA have a unit test framework? Then, use that instead. Have a look at this <a href="https://rosettacode.org/wiki/IBAN#VBA" rel="noreferrer">example code at Rosetta Code</a>, which contains a half-automatic test; you still have to inspect its output manually.</p>
    </div>