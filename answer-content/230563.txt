<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The function is a bit repetitive, as both cases (iterating over sub array vs individual elements) check if the element is undefined and if the return array includes that value. That could potentially be abstracted to a separate function or simplified.</p>

<hr>

<p>It appears that the following line:</p>

<blockquote>
<pre><code>var index = props[level];
</code></pre>
</blockquote>

<p>Could be moved outside of the <code>forEach</code> function, since it doesn't depend on any of the variables defined inside the callback function.</p>

<hr>

<p>If you know that the values to be compared will most likely be primitive values like strings or integers then <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes" rel="nofollow noreferrer"><code>Array.includes()</code></a> could likely be used to replace the calls to <code>retArray.some()</code>. While it may not reduce the computational complexity, it would allow simplifying the code to check for existing values. Note that function <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Browser_compatibility" rel="nofollow noreferrer">isn't supported by IE and other older browsers</a>, and is case-sensitive when comparing strings and characters<sup><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Parameters" rel="nofollow noreferrer">1</a></sup></p>
    </div>