<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Style</strong></p>

<p>Python has a style guide called <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a> which is definitly worth a read.</p>

<p>A few things can be improved :</p>

<ul>
<li><p>function name does not respect convention</p></li>
<li><p>missing whitespaces</p></li>
<li><p>useless parenthesis</p></li>
<li><p>name <code>str</code> hides builtin <a href="https://docs.python.org/2/library/functions.html#str" rel="nofollow noreferrer"><code>str</code></a></p></li>
</ul>

<p>Then your code becomes :</p>

<pre><code>def starts_with_article(string):
    '''Return True if the first word of string is "The", "A" or "An"'''

    if string.startswith("The ") and string.find(' ') == 3:
        return True
    elif string.startswith("An ") and string.find(' ') == 2:
        return True
    elif string.startswith("A ") and string.find(' ') == 1:
        return True

    return False

print('"A boy" returned', starts_with_article("A boy"))
print('"An apple" returned', starts_with_article("An apple"))
print('"The cat" returned', starts_with_article("The cat"))
print('"Abyss" returned', starts_with_article("Abyss"))
print('"There" returned', starts_with_article("There"))
print('"Ant" returned', starts_with_article("Ant"))
</code></pre>

<p><strong><a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow noreferrer">Don't Repeat Yourself</a></strong></p>

<p>You are doing the same thing multiple times. You could try to see what is similar and what changes and see if you can use a relevant data structures for the changing parts.</p>

<p>Here I stored the articles in a list to be able to iterate over them.</p>

<pre><code>def starts_with_article(string):
    '''Return True if the first word of string is "The", "A" or "An"'''
    for article in ["The ", "An ", "A "]:
        if string.startswith(article) and string.find(' ') == len(article) - 1:
            return True

    return False
</code></pre>

<p><strong>Don't repeat yourself (again)</strong></p>

<p>You are looking for the article followed by a space and then you check if there is a space in the wanted position. There is no need for that check.</p>

<pre><code>def starts_with_article(string):
    '''Return True if the first word of string is "The", "A" or "An"'''
    for article in ["The ", "An ", "A "]:
        if string.startswith(article):
            return True

    return False
</code></pre>

<p><strong>Don't repeat yourself (again again)</strong></p>

<p>I have to repeat the whitespace in the different elements of the list I a using. This is easy to forget if I ever need to add an article. Let's add the space as part of the logic.</p>

<pre><code>def starts_with_article(string):
    '''Return True if the first word of string is "The", "A" or "An"'''
    for article in ["The", "An", "A"]:
        if string.startswith(article + ' '):
            return True
    return False
</code></pre>

<p><strong>More Python good stuff</strong></p>

<p>The <a href="https://docs.python.org/2/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a> builtin seems to do what you are doing. Let's use it.</p>

<pre><code>def starts_with_article(string):
    '''Return True if the first word of string is "The", "A" or "An"'''
    return any(string.startswith(article + ' ')
        for article in ["The", "An", "A"])
</code></pre>

<p><strong>The best option: reading the documentation</strong></p>

<p>If we look at the <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>startswith</code> documentation</a>, we have:</p>

<blockquote>
  <p>prefix can also be a tuple of prefixes to look for.</p>
</blockquote>

<p>At that point, your problem is pretty much solved :-)</p>
    </div>