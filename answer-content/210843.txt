<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Closing PHP in a PHP-only file</h3>

<p>In PHP, it may look like <code>&lt;?php</code> and <code>?&gt;</code> are paired in the same way as <code>{</code> and <code>}</code> or <code>()[]</code>, etc.  But they actually aren't.  Each file starts in HTML context.  That means that it just blats out whatever you write.  This is normally used to display HTML.  When you use <code>&lt;?php</code> or <code>&lt;?</code>, it switches to PHP context, where it evaluates what you write as PHP code.  In many (most) files, you will do this on the first line, so that you can write comments about copyright and licensing.  </p>

<p>In your case, you are writing PHP only.  You only need to open the PHP block.  You do not need to close it with a <code>?&gt;</code>.  In general, if your file only contains PHP and never needs to enter HTML context, you leave off any final <code>?&gt;</code>.  </p>

<p>One reason for this is that if you put anything in HTML context after a closing <code>?&gt;</code>, PHP blats it out as if it were HTML.  In many cases, this is fine.  But if you try to issue a header later, it will give you an error about headers already being sent.  This is because the first HTML (which could be blank space) that is sent implicitly triggers the sending of the headers.  So a standard practice is to leave off the <code>?&gt;</code>, so no spaces (e.g. blank lines) can appear as if they were HTML in a file that is just doing PHP with no output.  </p>

<p>The headers already sent error can be annoying to debug, as it shows up at the place where you want the headers to be sent rather than the place where they actually were.  </p>

<h3>String delimiters</h3>

<p>You are using double quotes to delimit your strings.  This works.  But there is an argument in favor of using single quotes.  Single quotes do not do variable interpolation.  So by using them, you implicitly let people know that your string is not using variable interpolation.  </p>

<p>None of your strings do variable interpolation, which is when you embed a variable in a string so that the string gets the contents of the variable.  E.g. <code>"Hello, $name"</code> will contain "Hello, Tobi Alfin" if <code>$name = 'Tobi Alfin';</code>.  </p>

<p>There are <a href="http://php.net/manual/en/language.types.string.php" rel="nofollow noreferrer">four types of PHP strings</a>:  </p>

<ul>
<li>Single quoted:  no variable interpolation.</li>
<li>Double quoted:  variable interpolation and escaped characters.</li>
<li>Heredoc:  multiple lines with variable interpolation and escaped characters.</li>
<li>Nowdoc:  multiple lines with no variable interpolation.  </li>
</ul>

<p>Because your strings are all single line (some are single character) without variable interpolation, I would write them with single quotes.  Not a big deal, but it makes it slightly more obvious which strings are doing variable interpolation.  </p>
    </div>