<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>I <em>very</em> strongly recommend to <em>always</em> type explicit braces, even around one-liners, e.g.</p>

<pre><code>if (newp == NULL) {
    err(EXIT_FAILURE, "realloc");
}
</code></pre></li>
<li><p>Every time you feel compelled to put a comment like <code>/* count newlines and create array of pointer to lines */</code>, or <code>/* randomly permutate lines */</code>, it is a strong indication that the commented piece of code wants to be a function.</p>

<p>In general, avoid naked loops. A loop implements an algorithm, and hence deserves a name.</p></li>
<li><p>The shuffling algorithm</p>

<pre><code>for (i = 0; i &lt; nl.nval; i++) {
    randn = arc4random_uniform(nl.nval);

    tmp = nl.array[i];
    nl.array[i] = nl.array[randn];
    nl.array[randn] = tmp;
}
</code></pre>

<p>is biased. Some permutations are more likely than others. For details, see <a href="https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#Na%C3%AFve_method" rel="nofollow noreferrer">here</a>.</p></li>
<li><p>The <code>/* print random lines */</code> loop condition is very convoluted. Consider fixing <code>nshuf</code> as soon as you know the number of lines:</p>

<pre><code>if ((nshuf == 0) || (nshuf &gt; nl.nval)) {
    nshuf = nl.nval;
}
</code></pre>

<p>Then the loop condition becomes much simpler:</p>

<pre><code>for (i = 0; i &lt; nshuf; i++)
</code></pre></li>
</ul>
    </div>