<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let's look at some of the code:</p>
<pre><code>Random random = new Random((int)DateTime.Now.Ticks);
</code></pre>
<p>You don't need to create a seed for the Random constructor from the clock, the parameterless constructor does that:</p>
<pre><code>Random random = new Random();
</code></pre>
<hr>
<pre><code>List&lt;string&gt; characters = new List&lt;string&gt;() { };
</code></pre>
<p>You don't need the initialiser brackets when you don't put any items in the list at that point:</p>
<pre><code>List&lt;string&gt; characters = new List&lt;string&gt;();
</code></pre>
<hr>
<pre><code>result += characters[random.Next(0, characters.Count)];
</code></pre>
<p>Using <code>+=</code> to concatenate strings is bad practice. Strings are not appended at the end, as strings are immutable. Code like <code>x += y;</code> actually end up as <code>x = String.Concat(x, y)</code>. You should rather use a <code>StringBuilder</code> to build the string.</p>
<hr>
<pre><code>Thread.Sleep(1);
</code></pre>
<p>Why on earth are you sleeping in the middle of the loop?</p>
<hr>
<p>Instead of creating a list of strings, just use a string literal to pick characters from:</p>
<pre><code>public static string GenerateCoupon(int length) {
  Random random = new Random();
  string characters = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
  StringBuilder result = new StringBuilder(length);
  for (int i = 0; i &lt; length; i++) {
    result.Append(characters[random.Next(characters.Length)]);
  }
  return result.ToString();
}
</code></pre>
<p>Consider if all those characters should be included, or wheter you should omit similar looking characters like <code>o</code>, <code>O</code> and <code>0</code>. Having the characters in a string literal makes it easy to do that.</p>
<h3>Edit:</h3>
<p>If you are going to call the method more than once, you should send in the random generator as a parameter:</p>
<pre><code>public static string GenerateCoupon(int length, Random random) {
  string characters = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
  StringBuilder result = new StringBuilder(length);
  for (int i = 0; i &lt; length; i++) {
    result.Append(characters[random.Next(characters.Length)]);
  }
  return result.ToString();
}
</code></pre>
<p>Usage:</p>
<pre><code>Random rnd = new Random();
string[] coupon = new string[10];
for (int i = 0; i &lt; coupon.Length; i++) {
  coupon[i] = GenerateCoupon(10, rnd);
}
Console.WriteLine(String.Join(Environment.NewLine,coupon));
</code></pre>
<p>Example output:</p>
<pre><code>LHUSer9dPZ
btK0S01yLb
hruw4IXINJ
hwMdRDRujt
cr4TDezvcZ
b8tVETNXNL
JrG6sfXgZF
Y7FRypnRiQ
JbfnhY3qOx
quWNakbybY
</code></pre>
    </div>