<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>General Feedback</h3>

<p>This code is fairly straight-forward and easy to read. There are only three functions and none of them extend beyond thirteen lines. If you really wanted more atomic functions you could abstract some functionality from <code>get_info</code>, for instance the code that parses each listing. </p>

<p>The name <code>link</code> doesn’t feel as appropriate for a string literal that represents a URL as something like <code>url_template</code>. Also see the related section below about naming constants. </p>

<p>The description was somewhat vague and didn’t specify whether each listing should correspond to an individual list within the returned list but if so, one could use <code>itemstorage.append()</code> instead of <code>itemstorage.extend()</code>.</p>

<h3>Suggestions</h3>

<p>While it isn’t a requirement, it is recommended that each function have a <a href="https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring" rel="nofollow noreferrer">docstring</a>. </p>

<blockquote>
  <p><em>All modules should normally have docstrings, and all functions and classes exported by a module should also have docstrings. Public methods (including the <code>__init__</code> constructor) should also have docstrings.</em><sup><a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer">1</a></sup></p>
</blockquote>

<p>Additionally, while constants aren’t really different than variables in python, idiomatically uppercase letters are used for the naming constants in python as well as many other languages. As was mentioned above, <code>url_template</code> feels more appropriate for the string currently named <code>link</code> so it may improve readability to use uppercase letters to signify that is a constant: <code>URL_TEMPLATE</code>.</p>

<p><sup>1</sup><sub><a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0257/</a></sub></p>
    </div>