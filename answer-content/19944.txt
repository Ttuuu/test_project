<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There probably is no 'good' regexp to validate an email id. The Internet Standard RFC has classified a 500-character long RegExp which according to them is the standard way to validate an email-id. Well, it does work, but it is so messy and almost impossible for most of us to understand.</p>

<pre><code>(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
</code></pre>

<p>If you have understood it, then, you need not read further. But if you haven't, go on.</p>

<p><a href="http://www.regular-expressions.info/email.html" rel="nofollow">This page</a> gives a decent info on how to validate an email id using regexp.</p>

<p>I use this one</p>

<pre><code>RegExp("^[A-Z0-9._%+-]+@([A-Z0-9.-]+\.){1,4}[A-Z]{2,4}$","i")
</code></pre>

<p>This works fine, atleast for me, but it fails to validate emails on .museum domain or any other domain longer than 4-characters.</p>

<p>Coming to your patterns, both of them are almost same except the fact that the first one uses <code>i</code> modifier and it allows 2 or more than 2 characters as TLD.
Hope it helps.</p>
    </div>