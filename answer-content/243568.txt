<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Use valid constants</strong></p>

<p><code>14480561146010017169, 18446744073709551557</code> are typically outside the <code>long long</code> range.  Append a <code>u</code>.</p>

<p><strong>Simplify allocation sizing</strong></p>

<p>Insptead of <code>p = some_alloc(sizeof(matching pointer type) * n)</code>, use <code>p = some_alloc(sizeof *p * n)</code>.  It is easier to code right, review and maintain.</p>

<pre><code>// nt-&gt;buckets = malloc(sizeof(ftbucket) * nt-&gt;size);
nt-&gt;buckets = malloc(sizeof *(nt-&gt;buckets) * nt-&gt;size);
</code></pre>

<p><strong>Use <code>size_t</code> for indexing</strong></p>

<p><code>uin</code> is not the best type for array index, it may be too narrow or wide for array indexing and sizing.  Use <code>size_t</code>.</p>

<p>I'd reccomend <code>unsigned long long</code> or <code>uintmax_t</code> for the <em>key</em> type though.</p>

<p><strong>Avoid FP math</strong> for an integer problem.</p>

<pre><code>//if (((float) ft-&gt;count + 1) / ((float) ft-&gt;size) &gt; MAX_LOAD) {
//    ft = resize(ft);
//}

#define MAX_LOAD_N 1
#define MAX_LOAD_D 2
// if ((ft-&gt;count + 1) / ft-&gt;size &gt; MAX_LOAD_N / MAX_LOAD_D) {
if ((ft-&gt;count+1) / MAX_LOAD_N &gt; ft-&gt;size / MAX_LOAD_D) {
    ft = resize(ft);
}
</code></pre>
    </div>