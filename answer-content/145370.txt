<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Redundancy of both <code>out</code> parameter and <code>return</code></h3>

<pre><code>    public static string TellMeWhatToSay(out string passTheQuote)
    {
        string whatIsWritten;
        Console.WriteLine("Tell Me What To Say");
        whatIsWritten = Console.ReadLine();
        passTheQuote = whatIsWritten;
        return passTheQuote;
    }
</code></pre>

<p>You both write the result to an <code>out</code> parameter and return it. A violation the DRY principle, this outputs the same information twice. As the <code>out</code> parameter does not feel appropriate for a modern language to me, I will leave only the <code>return</code>:</p>

<pre><code>    public static string TellMeWhatToSay()
    {
        string whatIsWritten;
        Console.WriteLine("Tell Me What To Say");
        whatIsWritten = Console.ReadLine();
        passTheQuote = whatIsWritten;
        return passTheQuote;
    }
</code></pre>

<p>Now that we eliminated that redundancy, we can simplify by returning directly:</p>

<pre><code>    public static string TellMeWhatToSay()
    {
        Console.WriteLine("Tell Me What To Say");
        return Console.ReadLine();
    }
</code></pre>

<h3>Unecessary alias of a built-in <code>Console.ReadLine</code></h3>

<pre><code>    public static void HelloWorld(string itWillBeSpoken)
    {
        Console.WriteLine(itWillBeSpoken);
    }
</code></pre>

<p><code>HelloWorld</code> is the same as <code>Console.WriteLine</code> so there is no need to write it.</p>
    </div>