<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Note: Before checking these functions, you need to check <code>if len(str(n)) == len(str(m))</code></p>

<pre><code>def perm(n,m):
    return sorted(str(n)) == sorted(str(m))
</code></pre>

<pre class="lang-none prettyprint-override"><code>%timeit perm(783169,781396)
1.25 µs ± 36.5 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)

%timeit perm(783169123123123123123123,781396123123123123123123)
3.44 µs ± 17.2 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)

%timeit perm(783169123123123123123123,781396123123123123123123)
3.79 µs ± 205 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
</code></pre>

<p>The <code>sorted()</code> function of string is the fastest <em>if the string size is small</em>.</p>

<pre><code>def perm(n,m):
    n = [i for i in str(n)]
    for i in str(m):
        try:
            n.remove(i)
        except:
            return False
    return True
</code></pre>

<pre class="lang-none prettyprint-override"><code>%timeit perm(783169,781396)
1.57 µs ± 46.3 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)

%timeit perm(783169123123123123123123,781396123123123123123123)
4.77 µs ± 114 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
</code></pre>

<p>Using a <code>List</code> instead of a <code>Dictionary</code> or <code>Counter()</code> is faster, since you don't always have to check for all the items.</p>

<pre><code>def perm(n,m):
    n = collections.deque(str(n))
    for i in str(m):
        try:
            n.remove(i)
        except:
            return False
    return True
</code></pre>

<pre class="lang-none prettyprint-override"><code>%timeit perm(783169,781396)
1.45 µs ± 38.4 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)

%timeit perm(783169123123123123123123,781396123123123123123123)
3.28 µs ± 181 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
</code></pre>

<p>The <code>deque()</code> function from the <code>collections</code> module is faster than <code>List</code> when it comes to popping items.</p>

<p>Even though <code>sorted()</code> is much faster than <code>deque()</code> for a small string, <code>deque()</code> is much faster for a longer string. These timings were calculated for the worst case scenario where the two strings are permutations of each other. For cases where this is not true, <code>deque()</code> would become even faster while <code>sorted()</code> would stay the same.</p>
    </div>