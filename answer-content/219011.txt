<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>aws_object = json.dumps({"S3Object":{"Bucket":self.s3_bucket,"Name":self.filename}}).replace(' ', '')  # can't have any spaces lol picky AWS CLI
start_textract_command = "aws textract start-document-text-detection --document-location '{}'".format(aws_object)
</code></pre>

<p>This is not AWS which is picky, rather you’re not building the command line properly. If you provide a single string and start your <code>subprocess</code> using <code>shell=True</code>, each space will mark a new argument. Instead, you’d be better off building a list of arguments and let <code>subprocess</code> quote them properly:</p>

<pre><code>start_textract_command = ['aws', 'textract', 'start-document-text-detection', '--document-location', json.dumps(…)]
</code></pre>

<p>and then just run <code>subprocess.check_output(start_textract_command, stderr=subprocess.STDOUT)</code>.</p>

<p>Speaking of which, instead of using the <a href="https://docs.python.org/3/library/subprocess.html#older-high-level-api" rel="nofollow noreferrer">older high level API</a>, you should switch to <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><code>subprocess.run</code></a>:</p>

<pre><code>process = subprocess.run(start_textract_command, capture_output=True, encoding='utf-8')
try:
    process.check_returncode()
except CalledProcessError:
    if 'InvalidS3ObjectException' in process.stderr:
       …
else:
    job_id = json.loads(process.stdout)['JobId']
    with open(self.output_filename, 'wb') as output_file:
       process = subprocess.run(['aws', 'textract', 'get-document-text-detection', '--job-id', str(job_id)], stdout=output_file, stderr=subprocess.PIPE)
    if process.returncode:
        log.error(process.stderr.decode('utf-8'))
</code></pre>

<hr>

<p>Now for the <code>time.sleep</code> part, <a href="https://docs.aws.amazon.com/textract/latest/dg/how-it-works.html" rel="nofollow noreferrer">AWS Textract provides two modes of operations</a>: synchronous and asynchronous. You can start by using the synchronous <a href="https://docs.aws.amazon.com/textract/latest/dg/API_DetectDocumentText.html" rel="nofollow noreferrer"><code>detect-document-text</code></a> operation if it fits your need and you won't have to deal with the timing at all.</p>

<p>Otherwise, if you need to stick to <a href="https://docs.aws.amazon.com/textract/latest/dg/API_StartDocumentTextDetection.html" rel="nofollow noreferrer"><code>start-document-text-detection</code></a>, the completion of the process is published as a notification. I’m not at all versed in how SNS works but they have <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-tutorials.html" rel="nofollow noreferrer">a tutorial to get you started on using Amazon SNS</a> so you can create a channel, specify it in your textract job and wait for the completion event.</p>
    </div>