<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is very nice, however, I usually just use:</p>

<pre><code>using typeid_t = void const*;

template &lt;typename T&gt;
typeid_t type_id() noexcept
{
  static char const type_id;

  return &amp;type_id;
}
</code></pre>

<p>The <code>void const*</code> pointers can be compared and hashed and cannot be dereferenced without casting. Good enough for me. The solution also avoids casts, just like your question.</p>

<p>Alternatively:</p>

<pre><code>using typeid_t = void(*)();

template &lt;typename T&gt;
typeid_t type_id() noexcept
{
  return typeid_t(type_id&lt;T&gt;);
}
</code></pre>
    </div>