<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>Write functions. Make this a <code>balance_scale</code> function, that returns the minimum.</li>
<li>Your variable names are pretty poor, single letter variable names leave people guessing at what they mean.</li>
<li>You should change <code>cc = cc = ...</code> to just one assignment.</li>
</ol>

<hr>

<p>Since you can use a maximum of two spare weights the solution can be a lot simpler than you've produced.</p>

<ol>
<li><span class="math-container">\$W_1\$</span> is the smaller weight in <code>weights</code> and <span class="math-container">\$W_2\$</span> is the larger.</li>
<li>If <span class="math-container">\$W_1 = W_2\$</span> then you return an empty list.</li>
<li><p>We can determine what weight is needed when only one weight can be used.</p>

<p><span class="math-container">\$S = W_2 - W_1\$</span></p>

<p>Therefore if <span class="math-container">\$S\$</span> is in <code>spare_weights</code> then we can return <span class="math-container">\$S\$</span>.</p></li>
<li><p>For each <span class="math-container">\$S_1\$</span> in <code>spare_weights</code> we can determine the weight needed, <span class="math-container">\$S_2\$</span>.</p>

<p><span class="math-container">\$S_2 = |W_2 - W_1 - S_1|\$</span></p>

<p>We take the absolute as this weight can be on either side of the scale. If the non-absolute value of <span class="math-container">\$S_2\$</span> is positive then we add it to <span class="math-container">\$W_1 + S_1\$</span> if it's negative then we add it to <span class="math-container">\$W_2\$</span>.</p></li>
</ol>

<p>If we add <span class="math-container">\$0\$</span> twice to <code>spare_weights</code>, then we can see that (4), (3) and (2) are all roughly the same equation.</p>

<p>We don't need to check if <span class="math-container">\$S_1\$</span> and <span class="math-container">\$S_2\$</span> both exist in <code>spare_weights</code>, as the only time they are the same is if <span class="math-container">\$W_1 = W_2\$</span>, and so they would both be 0. We however have to assign <span class="math-container">\$S_1\$</span> to 0 first.</p>

<pre><code>def balance_scale(scale, spares):
    w1, w2 = sorted(scale)
    spare_set = set(spares) | {0}
    for s1 in [0] + spares:
        s2 = abs(w2 - w1 - s1)
        if s2 in spare_set:
            return [i for i in [s1, s2] if i]
    return None


print(balance_scale([4, 3], [1, 2, 7, 7]))
</code></pre>

<pre><code>[1]
</code></pre>
    </div>