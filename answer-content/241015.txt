<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think you have some reading/research to do as I'm not sure you understand OOP...</p>

<h2>What is Main?</h2>

<ul>
<li>Main is setup as a class, used as a namespace in instantiation, then extended(why?).</li>
<li>Generally in the context it seems to be intended to be used <code>App</code> or <code>&lt;AppName&gt;</code> are better options</li>
</ul>

<h2>When to extend</h2>

<ul>
<li>Why do all elements extend <code>Main</code>?

<ul>
<li>It appears to be solely for it's constructor which it never uses itself. (Extra Baggage in Main)</li>
<li><code>Main</code> also only contains functions the other elements never need or use (Extra Baggage in the Sub-Objects)</li>
</ul></li>
<li>Extending a class makes more sense if the classes extended from it share functionality</li>
</ul>

<h2>What even is an Object? ##</h2>

<ul>
<li>You seem to be using your objects as functions disguised as things.

<ul>
<li>For example: when you create a <code>navItem</code>:</li>
<li>You create the object</li>
<li>It's controller prints itself to the screen</li>
<li>You capture it in a variable never to be used again. Why?</li>
</ul></li>
</ul>

<h2>Who gets to be an Object?</h2>

<ul>
<li><code>navItem</code> is an object <code>navBar</code> Isn't</li>
<li><code>navDropdown</code> is an object <code>navDropdownItem</code> isn't</li>
</ul>
    </div>