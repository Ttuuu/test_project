<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have access to the stack array directly so you can copy the unsorted stack it to a new stack and sort it in place using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort" rel="noreferrer"><code>Array.sort</code></a></p>

<pre><code>"use strict";
function sortStack(stack) {
    const sorted = new Stack();
    while (!stack.isEmpty()) { sorted.push(stack.pop()) }
    sorted.storage.sort((a, b) =&gt; a - b);
    return sorted;
}
</code></pre>

<p>or</p>

<pre><code>"use strict";
function sortStack(stack) {
    const sorted = new Stack();
    sorted.storage = [...stack.storage].sort((a, b) =&gt; a - b);
    return sorted;
}
</code></pre>

<p>If they did not want you to access the storage array directly they would have protected it in closure. (well if that crossed their minds)</p>

<p>BTW your should always add <a href="https://developer.mozilla.org/en-US/docs/Glossary/strict_mode" rel="noreferrer"><code>"use strict"</code></a> to the top of your javascript code as you have neglected to declare any of your variables, making them all global and setting your self up for some horror bugs.</p>

<p>The use strict directive will not let you use undeclared variable.</p>
    </div>