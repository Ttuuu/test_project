<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Boost.Signals2 is a thread-safe library. It uses mutex locking internally. There are some caveats, as explained in <a href="https://theboostcpplibraries.com/boost.signals2-multithreading" rel="nofollow noreferrer">this article</a>:</p>

<blockquote>
  <p>Almost all classes provided by Boost.Signals2 are thread safe and can
  be used in multithreaded applications. For example, objects of type
  <code>boost::signals2::signal</code> and <code>boost::signals2::connection</code> can be
  accessed from different threads.</p>
  
  <p>On the other hand, <code>boost::signals2::shared_connection_block</code> is not
  thread safe. This limitation is not important because multiple objects
  of type <code>boost::signals2::shared_connection_block</code> can be created in
  different threads and can use the same connection object.</p>
</blockquote>

<p>but in its simplest and default forms, Boost.Signals2 is multi-threading safe.</p>

<p>Your given example is, indeed, thread-safe.</p>

<blockquote>
  <p>What happens if an Observer is destructed during notifyObservers?</p>
</blockquote>

<p>The slot is disconnected preemptively.</p>
    </div>