<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The difference between the code for moving right:</p>

<blockquote>
<pre><code>    for x in range(self.grid_position[0] + 1, grid.columns):
        # Position to check
        position = (x, self.grid_position[1])

        # If there is nothing in the space it is available
        if grid.board_layout[position[1]][position[0]] is None:
            available_spaces[position[1]][position[0]] = True

        # If there is a piece of the opposite colour in the space it is available, but further spaces are not
        elif grid.board_layout[position[1]][position[0]]['colour'] != self.colour:
            available_spaces[position[1]][position[0]] = True
            break

        # If there is a piece of the same colour in the space it is not available, neither are further spaces
        else:
            break
</code></pre>
</blockquote>

<p>and for moving forward is just the definition of <code>position</code>:</p>

<blockquote>
<pre><code>        position = (self.grid_position[0], y)
</code></pre>
</blockquote>

<p>So you can certainly factor out a function looking something like this:</p>

<pre><code>def update_line(chessman, grid, available_spaces, line_positions):
    for position in line_positions:

        # If there is nothing in the space it is available
        if grid.board_layout[position[1]][position[0]] is None:
            available_spaces[position[1]][position[0]] = True

        # If there is a piece of the opposite colour in the space it is available, but further spaces are not
        elif grid.board_layout[position[1]][position[0]]['colour'] != chessman.colour:
            available_spaces[position[1]][position[0]] = True
            break

        # If there is a piece of the same colour in the space it is not available, neither are further spaces
        else:
            break
</code></pre>

<p>This can be shared between the rook, bishop, and queen. The rook would call it something like</p>

<pre><code>    update_line(self, grid, available_spaces,
                ((x, self.grid_position[1]) for x in range(self.grid_position[0] + 1, grid.columns))
    update_line(...)
    ...
</code></pre>
    </div>