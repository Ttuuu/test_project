<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Code review:<br>
1. Use  <code>discrete++</code> instead of <code>discrete = discrete + 1</code><br>
2. Use <code>if i != j &amp;&amp; xi == xj</code> instead of  </p>

<pre><code>if i != j {
    if xi == xj {
        is_discrete = false
        break
     }
}
</code></pre>

<ol start="3">
<li><p>Don't use underscores in Go names: <code>is_discrete</code>, simply use <code>discrete</code> or <code>isDiscrete</code>.</p></li>
<li><p>You may use <code>slice ...string</code> instead of <code>slice []string</code> like the following code:</p></li>
</ol>

<pre><code>// O(n**2)
func distincts(x ...string) int {
    result := 0
    for i, xi := range x {
        unique := 1
        for j, xj := range x {
            if i != j &amp;&amp; xi == xj {
                unique = 0
                break
            }
        }
        result += unique
    }
    return result
}
</code></pre>

<p>Also note the <code>result += unique</code> instead of <code>if ...</code>.</p>

<ol start="5">
<li>Using map, the following code has the time complexity (asymptotic notation): <code>O(n)</code></li>
</ol>

<pre><code>package main

import "fmt"

func main() {
    r := distincts("a", "b", "c", "a")
    fmt.Println(r) // 2

}

// O(n)
func distincts(slice ...string) int {
    result := 0
    m := map[string]int{}
    for _, str := range slice {
        m[str]++
    }
    for _, v := range m {
        if v == 1 {
            result++
        }
    }
    return result
}

</code></pre>
    </div>