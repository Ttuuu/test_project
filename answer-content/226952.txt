<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><code>searchNode(int i)</code> performs a loop. Wrapping it inside yet another loop makes  <code>indexOf</code> and <code>remove(Object element)</code> quadratic in the length of the list, instead of linear which they supposed to be.</p></li>
<li><p>Testing for emptiness via <code>this.length == 0 &amp;&amp; this.first == null &amp;&amp; this.last == null;</code> feels strange. It is enough to test just for length. If first and/or last happen to be non-null in this situation means that integrity of the list is broken, and probably should cause an exception.</p></li>
<li><p><code>add</code> and <code>addAtBegin</code> are bit more wordy than necessary. You don't really need <code>lastElm/firstElm</code>.</p>

<p>While we are here, their names should be more symmetric. Traditionally they are <code>append</code> and <code>prepend</code>, or <code>addFirst/addLast</code> (or even <code>push_front/push_back</code> in C++ parlance).</p></li>
</ul>
    </div>