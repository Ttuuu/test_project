<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>            if (!nums1Count.ContainsKey(num))
            {
                nums1Count.Add(num,1);
            }
            else
            {
                nums1Count[num]++;
            }
</code></pre>
</blockquote>

<p>I think it can be written as:</p>

<pre><code>nums1Count.TryGetValue(num, out int count);
nums1Count[num] = count + 1;
</code></pre>

<p>You don't have to test the return value of <code>TryGetValue()</code> in this case, because <code>TryGetValue()</code> sets <code>count</code> to default (<code>0</code>) if it returns false.</p>

<p>The loop could also be written as a LINQ sequence as:</p>

<pre><code>var nums1Count = data.GroupBy(i =&gt; i).ToDictionary(gr =&gt; gr.Key, gr =&gt; gr.Count());
</code></pre>

<hr>

<p>Likewise:</p>

<blockquote>
<pre><code>            if (nums1Count.ContainsKey(num) &amp;&amp; nums1Count[num] &gt; 0)
            {
                res.Add(num);
                nums1Count[num]--;
            }
</code></pre>
</blockquote>

<p>can be changed to:</p>

<pre><code>if (nums1Count.TryGetValue(num, out int count) &amp;&amp; count &gt; 0)
{
  res.Add(num);
  nums1Count[num]--;
}
</code></pre>
    </div>