<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Member Names</strong> - don't use too short names, <code>answer</code> is better than <code>ans</code>; what exactly is <code>att</code>?</p>

<p><strong>Method Names</strong> - method names should be verbs describing <em>what</em> the method does - <code>generateNewSum()</code> is better than <code>sumGenerator()</code>. Also use Java method conventions - CamelCase (no underscore in method names - <code>answerGetterScore()</code>, see below for more about this method)</p>

<p><strong>Class Names</strong> - follow Java Class naming conventions - they should start with a capital letter, and don't be lazy - write the whole word - <code>Calculator</code>. The name of the class should denote its part in the program - <code>Machine</code> tells you nothing about the class, perhaps something more in the lines of <code>SumExercise</code>?</p>

<p><strong>Responsibilities</strong> - object oriented programming is all about division of responsibility - one object is responsible for interacting with the user, another represents an item in a list, etc.</p>

<p>This means that a single class should be responsible for interacting with the user - getting input, printing out results. A single class should be responsible for managing the exercise - how many iterations there are, how you calculate score...</p>

<p>In your code, for example, the number of iterations (<code>5</code>) appears both in the main class and the <code>Machine</code> class - tomorrow you'll want to make it <code>10</code> iterations - you are bound to forget to change it inside the <code>Machine</code> class.</p>

<p>Same goes for method names - remember <code>answerGetterScore()</code>? The name that came out is awkward, because it tries to convey that the method does at least two things which are apparently unrelated - see if the answer is correct, and calculate the score (actually it does three - it also requests the answer from the user). You should split the method to its parts - (1) get the answer from the user; (2) check if it is correct; (3) calculate the new score; (4) notify the user. I'll leave it to you to decide which of those methods should go to which class.</p>

<p><strong>Comments</strong> - you said you added comments for our behalf, to show your intention, and sometimes comments are really needed (not too often though!), but these comments do not convey any information, they simply say where a block ends (<code>//else</code>). Indentation should do that. </p>
    </div>