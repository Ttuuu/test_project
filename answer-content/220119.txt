<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't see how to optimize the linq-query, and it doesn't look complicated to me. It's a method that returns authors with a specific name. That is of course of very little use, so the first thing to do, is to provide the name to search for as a parameter to the method:</p>

<pre><code>public JsonResult GetAuthors(string name) {... .Where(b =&gt; b.Name == name) ...}
</code></pre>

<hr>

<p>The generated Json object is also not very "helpful" to the client in that it only contains names of the authors and their books. Returned to the client and displayed in a list it's OK, but when the user clicks on one of the authors or books, I suppose, you'll want to fetch more information about the selected object from the server. Therefore you should provide the Id for both authors and books, in order to return that to the server, when the user clicks on an item - which on the server can be handled by:</p>

<pre><code>public JsonResult GetAuthor(int id) {...}
</code></pre>

<p>and</p>

<pre><code>public JsonResult GetBook(int id) {...}
</code></pre>

<p>So I would change your method to:</p>

<pre><code>    [HttpGet]
    public JsonResult GetAuthors(string name)
    {
        var books = db.Authors
            .Where(c =&gt; c.Name == name)
            .Include(b =&gt; b.AuthorsBooks)
            .Select(p =&gt; new
            {
                id = p.Id,
                name = p.Name,
                books = p.AuthorsBooks.Select(z =&gt; new { id = z.Id, name = z.Book.Name })
            })
            .ToList();

        return new JsonResult(books);
    }
</code></pre>

<hr>
    </div>