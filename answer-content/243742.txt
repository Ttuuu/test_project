<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>How to broke your code into sub rutines</h3>
<p>Well, there I see some util things you could do in order to separate the code:</p>
<ul>
<li>First, you could create some functions which job is to request the data to the user and until that data is correctly entered, the function continues requesting data, Example:</li>
</ul>
<pre class="lang-java prettyprint-override"><code>    //let this be a static field so you can call it in any other new static function
    private static Scanner scanner = new Scanner(System.in);

    private static readInt(String requirement) {
        System.out.print(requirement + " : ");
        int input;
        boolean correctInput = false;
        do {
            try {
                input = scanner.nextInt();
            } catch (Exception ignored) {
                System.out.println("An error has occurred, introduce the number again");
            }
        } while(!correctInput);
        //equivalent to correctInput != true or correctInput == false
        return input;
    }
</code></pre>
<p>(I suppose you're working with only a main class which has the <code>public static void main</code>)</p>
<p>I would recommend you to create two more functions <code>readString</code> and <code>readDouble</code> so that you are simplifying the data gathering process and not repeat code.</p>
<ul>
<li><p>Now, you use the <code>readString</code> function to request the user the book name and the <code>readDouble</code> for the book price. and so you are saving more code.</p>
</li>
<li><p>Finally, each case in a switch can be turned into a function.</p>
</li>
</ul>
<h3>Referent to your code style</h3>
<ul>
<li>Do not use comparisons of type <code>if ([booleanVariable] == true)</code> or <code>if ([booleanVariable] == false)</code>, until I have knowledge it is also a comparison that your machine has to do in runtime, if you are coding a <em>very large system part</em> the effect will be more notorious. Instead use <code>if ([booleanVariable])</code> or <code>if (![booleanVariable])</code> the ! symbol means not.</li>
</ul>
<p>It doesn't apply only to Java, it works for many other languages (Python, C++, C, C#, GO, JS, PHP, ...), syntax may variate but still applies.</p>
<ul>
<li><p>Do not over-comment, it is good to have documentation about your code, but writting a lot of comments where it is intuitive what the code does, is bad, it consumes your time and the code gets messy.</p>
</li>
<li><p>Last, it perhaps is not the big deal, but most Java programmers uses</p>
</li>
</ul>
<pre><code>[expression] { //this brace opening
}

[expression]
{//rather than this.
 //I may say, it is more likely to be done for someone who comes from C#, C++ or C
}
</code></pre>
<p>it doesn't matter at the end, but you know, some people care about it and well, it is better to work under the same language, using a common terminology.</p>
<p>Note: certainly it is better to use <code>read</code> instead of <code>get</code> according to <a href="https://codereview.stackexchange.com/users/6499/roland-illig">Roland Illig</a>'s comment.</p>
<p><strong>Hope it helped you, cheers.</strong></p>
    </div>