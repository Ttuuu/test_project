<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>You can simplify your <code>if</code> structure. You duplicate the code for <code>hits == 1</code> and <code>hits &gt; 1</code>. To do this move the <code>if hits == 0</code> code into a 'guard-statement' that updates the state to the correct one.</li>
<li>You should create a class to help ease your use code. A simple class with an internal list, a name, a selection and a size would allow you to Significantly reduce the amount of code you'd have to write.</li>
<li>All the appends are the same, except you perform a slice to get the size that you'd like, you can do this in the list class made in 2.</li>
<li>You only change what list you append to in your ifs, and so you can use a dictionary to reduce the amount of code needed for this. You'd need to have a 'default' list and to use a <code>dict.get</code>.</li>
<li>You won't need to use <code>zip</code> if you make the list contain the name, leaving a basic <code>for</code>.</li>
</ol>

<p>I don't really know what the rest of your functions are, and so I'll leave it at this:</p>

<pre><code>class List(list):
    def __init__(self, name, selection, size):
        super().__init__()
        self.name = name
        self.selection = selection
        self.size = size

    def add(self, value):
        self.append(value[:self.size])

lists = [
    List('zeroes', 0, 2),
    List('single', 1, 4),
    List('multiples', None, 3),
]
list_selections = {l.selection: l for l in lists}
default = list_selections.pop(None)

for row in df.itertuples():
    hits, uri = ask_rkd(best_q(row))
    if hits == 0:
        hits, uri = ask_rkd(bracket_q(row))

    list_ = list_selections.get(hits, default)
    list_.add([row.priref, str(row.name), hits, uri])

for list_ in lists:
    listfile = '{}_{}.csv'.format(input_fname, list_.name)
    writelist(list=list_, fname=listfile) 

outfile = fname + '_out' + ext
df.to_csv(outfile, sep='|', encoding='utf-8-sig')
</code></pre>
    </div>