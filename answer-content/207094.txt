<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It's more efficient, better to maintain and the code becomes much cleaner if you use the promisify native Node function to transform the fs callback functions to promise based functions, then write your code with async/await style. </p>

<p>Code:</p>

<pre><code>const fs = require('fs');
const { promisify } = require('util');
const path = require('path');
const readDirAsync = promisify(fs.readdir);
//
const sourcePath = process.argv[2] || './';
// 
(async () =&gt; {

    // Main execution 
    var finalRes = await scanDir(sourcePath);
    console.log('Scan result', finalRes);
    process.exit(0);

    // Recursive async function 
    async function scanDir(dir) {
        const list = await readDirAsync(dir);
        // Array.map returns promisses because the argument function is async
        return Promise.all(list.map(async (name) =&gt; {
            try {
                // File (or directory) info 
                const itemPath = path.join(dir, name);
                const stats = fs.statSync(itemPath);
                const isDir = stats.isDirectory();
                var children = null;
                // Recursion for directories 
                if (isDir) {
                    children = await scanDir(itemPath);
                }
                //
                return {
                    name,
                    itemPath,
                    isDir,
                    parent: dir,
                    children
                };
            }
            catch (err) {
                console.error('Error in scanDir()', err);
            }
        }));
    } 
})();
</code></pre>

<p><a href="https://i.stack.imgur.com/ZnjdA.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/ZnjdA.png" alt="Scan output"></a></p>
    </div>