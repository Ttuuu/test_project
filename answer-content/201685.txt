<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>inside your <code>GetSiteMapUrls</code> Method you clean the Urls twice, and I don't see a reason for this.</p>

<blockquote>
<pre><code>foreach (Match m in urlRegex.Matches(sitemapText))
    urls.Add(CleanUriString(m.Value));

foreach (var url in urls)
{
    var cleanedUriString = CleanUriString(url);

    if (Uri.IsWellFormedUriString(cleanedUriString, UriKind.RelativeOrAbsolute))
        yield return new Uri(cleanedUriString);
}
</code></pre>
</blockquote>

<p>before you add the URL to the <code>urls</code> list you run them through the <code>CleanUriString()</code> method</p>

<p>then you traverse the list that you just made and run the urls through the same method before returning the new uri.</p>

<p>This is redundant.</p>

<p>instead you could just use a single foreach loop and return the list of good urls from it, like this:</p>

<pre><code>public IEnumerable&lt;Uri&gt; GetSitemapUrls(Uri sitemapUrl)
{
    var sitemapText = GetSitemapText(sitemapUrl);

    if (string.IsNullOrWhiteSpace(sitemapText))
        yield break;

    var urlRegex = new Regex(@"\b(?:https?://|www\.)[^ \f\n\r\t\v\]]+\b", RegexOptions.Compiled | RegexOptions.IgnoreCase);

    foreach (Match m in urlRegex.Matches(sitemapText))
    {
        var clean = CleanUriString(m.Value); 
        if (Uri.IsWellFormedUriString(clean, UriKind.RelativeOrAbsolute))
            yield return new Uri(clean);
    }
}
</code></pre>

<p><em>and personally I like Braces on my If's and Loops</em></p>
    </div>