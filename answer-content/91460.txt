<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>loadValues() is rather problematic.</strong></p>

<p>It checks for each possible data-attribute and if present overrides the value in <code>settings</code>. These repeated checks are just duplicated code which could be eliminated by just calling <code>.data()</code> without parameters to grab all the data-attributes. But the fact that it's modifying <code>settings</code> is a real problem because the function is used like so:</p>

<pre><code>$(".animate").each(function () {
    loadvalues($(this));
    // ... animate based on settings ...
});
</code></pre>

<p>Now consider when there are two <code>.animate</code> elements on page:</p>

<pre><code>&lt;div class="animate" data-speed="200"&gt;&lt;/div&gt;
&lt;div class="animate" data-delay="1000"&gt;&lt;/div&gt;
</code></pre>

<p>The first one will be animated with <code>speed=200</code> and default delay, but the second one will be animated with both <code>delay=1000</code> and <code>speed=200</code> because each time <code>loadValues()</code> is ran, the values it overrides in <code>settings</code> will stay there.</p>

<p><strong>This jQuery plugin is hard-coded to a concrete selector.</strong></p>

<p>Instead of selecting <code>.animate</code> class directly inside the plugin, you should use the <code>this</code> context element:</p>

<pre><code>this.each(function () {
    ...
});
</code></pre>

<p>After that you can use the plugin to animate any element:</p>

<pre><code>$(".animate, .some-other-class").animateSliders();
</code></pre>
    </div>