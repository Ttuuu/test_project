<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Due to the lack of real context here (and issues I'll mention later), I can't really speak to the algorithm. I'll just focus on style.</p>

<p>First, you need to take far greater care in creating meaningful names. This is incredibly hard to comprehend; and naming is the biggest contributor to the problem.</p>

<p>Take a step back, pretend you didn't write this, and look at</p>

<pre><code>let result = '', [_, a, x, b, n] = str.match(/\((-?\d*)([a-z])([-+]\d+)\)\^(\d+)/);
</code></pre>

<p>What are <code>a</code>, <code>x</code>, <code>b</code>, and <code>n</code>? Because they're coming from a regex match, they aren't self-descriptive. You need to give them proper names so that people like me (and others reading your code) can know the <em>intent</em> of the variable at a glance without needed to dig through and "discover" what they're for. I can't give suggestions due to the lack of context, but any names would be better than the single-letters being used now.</p>

<p>If the line gets long, split it up. Do the deconstruction on a second line if need-be.</p>

<hr>

<p>I'm not a fan of your use of nested ternaries here. A line like</p>

<pre><code>a = a ? a == '-' ? -1 : parseInt(a) : 1;
</code></pre>

<p>is unfortunate and takes longer to comprehend than it should, but is still mostly legible. At the very least, I'd add some brackets in so the grouping is more obvious:</p>

<pre><code>a = a ? (a == '-' ? -1 : parseInt(a)) : 1;
</code></pre>

<p>or maybe, split that off into a function (local or otherwise):</p>

<pre><code>function magnitude(a) {
    return a == '-' ? -1 : parseInt(a);
}

. . .

a = a ? magnitude(a) : 1;
</code></pre>

<p>At least now the line is simplified, and there's a name associated with part of the operation (<code>magnitude</code> was a bad guess. You know the intent so you'll be able to come up with a better name).</p>

<p>On the other hand though,</p>

<pre><code>let c = !b &amp;&amp; k &gt; 0
    ? 0
    : a**i * b**k * (k == 0
        ? 1
        : fac(n) / (fac(k) * fac(n - k)));
</code></pre>

<p>is bad. You are attempting to cram far too much functionality into too small of a space. Between the lack of proper names and the density, this is very hard to comprehend. I would definitely split this up. Maybe split it over a couple lines (with descriptively-named variables holding intermediate results), or maybe even split some off into a function.</p>

<p>Along the same theme, you also have lines like</p>

<pre><code>let result = '', [_, a, x, b, n] = str.match(/\((-?\d*)([a-z])([-+]\d+)\)\^(\d+)/);

b = parseInt(b); n = parseInt(n);
</code></pre>

<p>There's little need to put them on the same line like this. I always advocate for declarations to be split over multiple lines in most cases (with the exception being maybe a simple destructuring).</p>

<p>I would split these up:</p>

<pre><code>let [_, a, x, b, n] = str.match(/\((-?\d*)([a-z])([-+]\d+)\)\^(\d+)/);
let result = "";

let b = parseInt(b);
let n = parseInt(n);
</code></pre>

<hr>

<hr>

<p>Overall, I would encourage you to spend far more time practicing making your code readable. Practice putting yourself in the shoes of someone who has never seen your code before. This can be hard to do, but allows you to find your own readability problems. I would also like to emphasize that dense, packed, small code is not good in most scenarios. If code needs to be minified, it can be run through a minifier after the fact. Your base source should be readable so it can be maintained into the future.</p>

<hr>

<p>It was pointed out that <code>a</code>, <code>x</code>, <code>b</code>, and <code>n</code> are pulled directly from the question, so they're appropriate. If possible I still think they should have better names, but if those are the accepted names to be used in the math equation, or they're too arbitrary for proper names, then yes, they're fine. <code>k</code> and <code>c</code> though both seem like they're not directly related to the equation, so better name there would help. </p>
    </div>