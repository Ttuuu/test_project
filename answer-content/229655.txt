<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is some asymmetry in your code:</p>

<pre><code>addPairPreservingGraphTransitivity gr c@(a,b)
  | F.any ((== b) . fst) gr = S.insert c . S.union gr . S.map (\x -&gt; (a,x)) . S.map snd . S.filter ((== b) . fst) $ gr
</code></pre>

<p>If there is <code>F.any ((== b) . fst) gr</code>, where is the opposite direction <code>F.any ((== a) . snd) gr</code>? And indeed, <code>makeGraphTransitive</code> does not work as I expect:</p>

<pre><code>*TransitiveGraph&gt; makeGraphTransitive (S.fromList [('c','b'), ('b','a')])
fromList [('b','a'),('c','b')]
</code></pre>

<p>The easy example with <code>a</code> and <code>c</code> renamed works fine in <code>makeGraphTransitive (S.fromList [('a','b'), ('b','c')])</code>.</p>

<p>I tried to fix it with</p>

<pre><code>addPairPreservingGraphTransitivity gr c@(a,b)
  | F.any ((== b) . fst) gr || F.any ((== a) . snd) gr = S.insert c . S.union gr . S.union (S.map (\x -&gt; (x,b)) . S.map fst . S.filter ((== a) . snd) $ gr). S.map (\x -&gt; (a,x)) . S.map snd . S.filter ((== b) . fst) $ gr
</code></pre>

<p>but this still fails with this example, <code>('a','d')</code> is missing:</p>

<pre><code>*TransitiveGraph&gt; addPairPreservingGraphTransitivity (S.fromList [('a','b'), ('c','d')]) ('b','c')
fromList [('a','b'),('a','c'),('b','c'),('b','d'),('c','d')]
</code></pre>
    </div>