<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Like you, I don't see a better way than basing the method on evaluating <code>array_keys($arr)</code>, then iterate it to build each new member.</p>

<p>But there are two possible slight improvement in how to it:</p>

<pre><code>$arr = [
    'name' =&gt; ['a', 'b', 'c'],
    'age'  =&gt; [ 2 ,  1 ,  3 ]
];

$result = [];
$keys = array_keys($arr);
for ($row = 0,  $rows = count(reset($arr)); $row &lt; $rows; $row++) {
  foreach ($keys as $key) {
    $result[$row][$key] = $arr[$key][$row];
  }
}

echo '&lt;pre&gt;' . print_r($result, true) . '&lt;/pre&gt;';
</code></pre>

<p>The first (and somewhat obvious) improvement is: not to use intermediary variable <code>data</code>.</p>

<p>I'm not really sure of the second one: I tend to think that the <code>for()</code> loop will be faster, because it accesses <code>$arr</code> only once (<code>count(reset($arr))</code>), while the <code>foreach()</code> loop have to extract data from <code>$arr</code> on each step.</p>
    </div>