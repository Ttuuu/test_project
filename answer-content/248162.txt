<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>static</h1>
<p><code>IsMonotonic(...)</code> does not need an instance of the <code>MonotonicArray</code> class to function, therefore it should be static.</p>
<h1>Consistency</h1>
<p>You special case an array of length 1 as monotonic.  Is it really?  It is neither increasing nor decreasing.</p>
<p>What about <code>IsMonotonic(new int[]{1, 1, 1, 1})</code>?  Seems to me that should be <code>true</code>, but it will return <code>false</code>.  Definitely should be added as a test case.  And if it should return <code>true</code>, then ...</p>
<h1>Optimization</h1>
<p>... checking for length 1 is too restrictive.  Any length 2 array will always be monotonic as well.  Perhaps:</p>
<pre><code>    if (numbers.length == 1) {
        return true;
    }
</code></pre>
<p>should be:</p>
<pre><code>    if (numbers.length &lt;= 2) {
        return true;
    }
</code></pre>
<h1>Looping</h1>
<p>This is ugly.  Will Java optimize the <code>numbers.length - 1</code> calculation as a constant?</p>
<pre><code>    for (int index = 0; index &lt; numbers.length - 1; index++) {

        if (numbers[index + 1] == numbers[index]){
            continue;
        }
        ...
</code></pre>
<p>It may be better to use Java's enhanced <code>for</code> loop to extract numbers, and rely on monotonic behaviour allowing equality to handle the first element:</p>
<pre><code>    int current = numbers[0];
    for(int value : numbers) {
        if (value != current) {
           if (value &lt; current) {
              ...
           } else {
              ...
           }
           current = value;
        }
    }
</code></pre>
    </div>