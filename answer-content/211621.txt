<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>SQL Injections</h3>

<p>Even though you are having these proper placeholders for values, your code is still vulnerable to <a href="https://www.owasp.org/index.php/SQL_Injection" rel="nofollow noreferrer">SQL Injection</a> attacks as table and column names are not properly sanitized.</p>

<p>As table and column names cannot be parameterized the usual way, you could validate them separately. For instance, you could check that the table and column names are simply <em>valid MySQL identifiers</em>:</p>

<ul>
<li><a href="https://stackoverflow.com/questions/26497846/python-mysql-parameter-queries-for-dynamic-table-names">Python MySQL parameter queries for dynamic table names</a></li>
</ul>

<hr>

<h3>Object Relational Mappers</h3>

<p>As I understand the purpose of the task is to learn how to interact with the MySQL database via Python MySQL database driver, but, in general, this kind of problems are already solved by different abstraction layer libraries or commonly called ORMs (Object Relational Mappers) like SQLAlchemy, Peewee or PonyORM) which provide an extra Python layer around Python-to-database communication allowing you to basically write SQL queries in Python.</p>
    </div>