<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Although the preface is quite disheartening and basically says "I don't want this code to be improved or evolved into something bigger or better", but we can consider this notion as short-sighted and discard it for sake of providing a good code review.</p>
<p>The code is overall more good than bad, especially from the security standpoint.</p>
<p>However it could greatly benefit from a better structure:</p>
<ol>
<li><p>Move database connection in a separate file</p>
</li>
<li><p>Move service functions in another file</p>
</li>
<li><p>Create a bootstrap.php file to put all the bootstrapping (includes, settings) together</p>
</li>
<li><p>Separate the business logic from the HTML output. Right now your <code>die()</code> statements just leave torn HTML. I don't think it's acceptable even for a beginner's web page.</p>
<p>Start any HTML only when the business logic is finished and the end result is indeed HTML (not some HTTP header or another format).</p>
<ul>
<li>it will also make the <code>buildBody()</code> function obsolete. Above all, it will make your HTML look like HTML, not some ragged zombie.</li>
<li>however, we will have to find a way to make die() not to kill the script entirely, and it is called a <em>user-defined exception</em>.</li>
<li>for the time being, HTML can be kept in the file but as soon as the project grows, it could be moved into two separate files as well.</li>
</ul>
</li>
</ol>
<p>There could be also many other improvements.</p>
<p>For example, if you add just <code>return $queryStmnt;</code> to your <code>doSql</code> function it will make it fantastically versatile, allowing to write concise PHP code that allows to run any SQL query and return the results in dozens different formats.</p>
<h3>bootstrap.php</h3>
<pre><code>&lt;?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
include __DIR__."/pdo.php";
include __DIR__."/helpers.php";
</code></pre>
<h3>helpers.php</h3>
<pre><code>&lt;?php

class UserErrorException extends Exception {};

function doSQL($con, $query, $values)
{
    $queryStmnt = $con-&gt;prepare($query);
    $queryStmnt-&gt;execute($values);
    return $queryStmnt;
}

function fethRemote($url)
{
    // many things can be improved here as well
    // but I believe this function deserves a distinct review
}
</code></pre>
<h3>index.php</h3>
<pre><code>&lt;?php
include 'bootstrap.php';

try {
    if (empty($_GET['path'])) {
        throw new UserErrorException("No video ID specified");
    }
    $vKey = $_GET['path'];
    if (!ctype_alnum($vKey) || (mb_strlen($vKey) &gt; 6 || mb_strlen($vKey) &lt; 5)) {
        throw new UserErrorException("Invalid video key format");
    }

    $sql = "SELECT * FROM cache WHERE id = ? and timestamp &lt; curdate()";
    $data = doSql($pdo, $sql, [$vKey])-&gt;fetch();
    if(!$data)
    {
        $data = fethRemote("https://kino.com/$vKey");
        $sql = "INSERT INTO cache (id, timestamp, url, width, height, type)
            VALUES(:id, :timestamp, :url, :width, :height, :type)
            ON DUPLICATE KEY UPDATE timestamp = :timestamp, url = values(url)";
        doSql($pdo, $sql, $data);
    }
} catch (UserErrorException $e) { // errors shown to the client
    $error = $e-&gt;getMessage();
} catch (Throwable $e) {
    error_log($e);
    http_response_code(500);
    if (ini_get('display_errors')) {//all other errors
        die($e); 
    } else {
        $error = "An internal error occurred, please try again later";
    }
}
?&gt;
</code></pre>
<p>HTML part that can be moved into a separate file or kept in place:</p>
<pre><code>&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;Video Mirror&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;?php if ($error): ?&gt;
    &lt;?= $error ?&gt;
  &lt;?php else: ?&gt;
    &lt;video controls style="width:&lt;?= $data['width'] ?&gt;px;height:&lt;?= $data['height'] ?&gt;px;"&gt;
      &lt;source src="&lt;?= $data['url'] ?&gt;" type="&lt;?= $data['type'] ?&gt;"&gt;
    &lt;/video&gt;";
  &lt;?php endif ?&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
    </div>