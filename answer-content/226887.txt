<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>The 100ms time interval isn't.</h2>

<p>The way <code>loop()</code> is coded, the loop isn't 100ms.  It's 101ms plus the time to execute the code between the two calls to <code>millis()</code></p>

<pre><code>unsigned long currentMilliseconds = millis();
...
previousMilliseconds = millis();
</code></pre>

<p>The 101ms is because the test is:</p>

<pre><code>if ( (currentMilliseconds - previousMilliseconds) &gt; TIMEFRAME ) {
</code></pre>

<p>Maybe it doesn't matter, but to get a consistent interval it could be coded like so:</p>

<pre><code>void loop()
{
  unsigned long currentMilliseconds = millis();
    ...
  if ( (currentMilliseconds - previousMilliseconds) &gt;= TIMEFRAME ) {

    ...

    // this advances previousMilliseconds by the exact interval
    previousMilliseconds += TIMEFRAME;

    ...    
  }
}
</code></pre>

<p>A useful trick is to toggle an output bit in <code>loop()</code> or in the body of the <code>if</code> statement:</p>

<pre><code>digitalWrite(LED_BUILTIN, ! digitalRead(LED_BUILTIN));
</code></pre>

<p>You can then monitor that pin with an o-scope or logic analyzer.  Depending on where you put the toggle you can see how long it takes to run the loop, how often it runs, how much jitter there is in sending the data, etc.</p>
    </div>