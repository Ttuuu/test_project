<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Problems:</h3>

<p>Item format parsing is broken:</p>

<ul>
<li><code>"{0:X2}"</code> fails with an 'Unexpected end of text' exception, while <code>"{0:X2}a"</code> fails with a 'Mismatched end brace' exception. Both are valid formats.</li>
<li><code>"{0:}"</code> also fails with an 'Unexpected end of text' exception, but <code>"{0:}a"</code> returns an empty array instead. Both are valid formats.</li>
<li><code>"{0:{{"</code> and <code>"{0:}}"</code> are parsed successfully. Both should be rejected as invalid.</li>
</ul>

<h3>Improvements:</h3>

<ul>
<li>The index and alignment limits seem fairly arbitrary. If they're based on an actual limit it would be a good idea to document that. Also, exceeding those limits results in a misleading 'Mismatched end brace' error.</li>
<li>I'd recommend using a more specific exception exception type. The existing <code>FormatException</code> seems appropriate here.</li>
<li>For repeated string concatenation, a <code>StringBuilder</code> is (significantly) more efficient.</li>
<li>The exceptions don't provide much detail. It would be useful to know at what index the problem was detected, or what the parser was expecting when it hit the end of the input.</li>
<li>The main while loop body is fairly drawn out. If you're using local functions anyway, why not split things up further into a <code>ParseLiteralPart</code> and <code>ParseFormatPart</code> function?</li>
</ul>
    </div>