<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Parsing a line of space separated integers is repeated 4 times you can replace those with the method below:</p>

<pre><code>private static int[] parseLineOfInts(String s) {
    String[] tokens = s.split(" ");
    int[] arr = new int[tokens.length];
    for (int j = 0; j &lt; tokens.length; j++)
       arr[j] = Integer.parseInt(tokens[j]);
    return arr;
}
</code></pre>

<p>You can use arrays of arrays to hold 2D data. Parsing the parents becomes as below:</p>

<pre><code>int nParents = 3;
int[][] parents = new int[nParents][];
for (int i = 0; i &lt; nParents; i++) {
    parents[i] = parseLineOfInts(Input[i + 1]);
}
</code></pre>

<p>Note <code>parent1</code> is now <code>parent[0]</code> and so on.</p>

<p>You can use <code>parseLineOfInts</code> method to calculate <code>mask_element</code>s as below:</p>

<pre><code>int[] maskElements = parseLineOfInts(Input[0]);
</code></pre>

<p>parameters and local variables should be camelcase: first word starts with lowercase, subsequent words start with upper case:</p>

<ul>
<li><code>Input</code> should be <code>input</code></li>
<li><code>parent_x</code> should be <code>parentX</code></li>
<li><code>parent_y</code> should be <code>parentY</code></li>
</ul>

<p>Separate parsing and actual algorithm. Separation of concerns improves readability, testability, many other ...abilities. As a first step you can extract not string manipulation related code into a new function such that its signature becomes as below:</p>

<pre><code>int[] solve(int[] mask, int[][] parents)
</code></pre>
    </div>