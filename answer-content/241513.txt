<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Personally I think your algorithm has been made a lot more complex than needed.  </p>

<p>Is the concatenation a requirement?  If not, you can simplify by directly converting each digit into a <code>char</code> and storing it in a <code>char[]</code>.  This way instead of inefficiently concatenating each digit onto the string, you can use the string constructor overload that takes a <code>char[]</code>.</p>

<p>With this simplification, the method can be reduced to just a few lines:</p>

<pre><code>  public static String intToString(int num) {
    if(num == 0){
      return "0";
    }
    int count = 0;
    boolean isNeg = false;
    if (num &lt; 0) {
      num *= -1;
      count = 1;
      isNeg = true;
    }
    count += (int) Math.log10(num) + 1;
    char[] digits = new char[count];
    if (isNeg) {
      digits[0] = '-';
    }
    --count;
    while(num &gt; 0) {
      digits[count--] = (char) ((num % 10) + '0');
      num /= 10;
    }
    return new String(digits);
  }
</code></pre>
    </div>