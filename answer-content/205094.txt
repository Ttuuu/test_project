<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Overall, looks good design. good breakdown into methods.
Here are my comments:</p>

<ol>
<li><p>Avoid <a href="https://en.wikipedia.org/wiki/Magic_number_(programming)" rel="nofollow noreferrer">magic numbers</a><br>
Magic numbers are literals (String or Numeric values).  They should be replced with constant variables (<code>public static final ...</code> and <code>UPPER_CASE</code> named).  This has two benefits: 1) give meaning to the literal value (helps readability) and 2) one place to change value and also avoid (runtime!) errors due to incorrect value due to typo.<br>
Example: <code>public static final int MAX_ROLL_COUNT = 21;</code></p></li>
<li><p>Meaningful variable names 
This is particularly useful in your case where you have multiple index variables. You have both <code>i</code> and <code>index</code>.  IIUC, <code>i</code> is index on frames (==turns in bowling jargon, and don't forget to replace literal used as loop limit with constant!) and <code>index</code> is index on rolls.</p></li>
<li><p>Meaningful method names<br>
<code>rollIndex()</code> is not a good name. perhaps <code>calculateScoreForFrame()</code> or something similar </p></li>
<li><p>Use collection streams<br>
Depending on your proficiency in the language, you may want to experiment with replace these <code>for</code> loops with Java 8 collection streams.  It (arguably) makes the code even more clearer. </p></li>
</ol>
    </div>