<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Even though @SuperBiasedMan's answer makes a lot of sense and is the real solution, here's some things you can fix in your current approach.</p>

<p>First of all, do not use the <code>""" ... """</code> syntax as comments. They're multiline strings. Instead, prefix each line using <code>#</code>. (Except when you mean it as a docstring, in which case you may use <code>""" ... """</code> syntax).</p>

<pre><code>"""
    list1 reperesents customer
    list2 reperesents amount of products they have brought
"""

list1=['a','c','e','i','o','u']
list2=[12,23,45,10,7,2]
</code></pre>

<p>First of all, the variable names do not make a lot of sense. <code>list1</code> is <code>customers</code>, while <code>list2</code> is a list of <code>quantities</code>. Better name them as such.</p>

<pre><code>list3=[]
for i in range(0,len(list1)):
        list3.append([list1[i],list2[i]])
</code></pre>

<p>Here you're doing a loop at the Python level. Faster and cleaner would be the following:</p>

<pre><code>list3 = zip(list1, list2)
</code></pre>

<p>The difference will be that this gives a list of tuples instead of a list of lists. That's hardly going to be a problem in the following.</p>

<pre><code>list3=sorted(list3,key=lambda x: list3[list3.index(x)][1])
</code></pre>

<p>Let's think out loud what the lambda does: first, we find out the position of <code>x</code> in <code>list3</code>. Then, we use that position to look up the value at the given position in <code>list3</code>, (which should, in all reality, just be <code>x</code> again), and then get the second component.</p>

<p>Better would be to write</p>

<pre><code>list3 = sorted(list3, key=lambda x: x[1])
</code></pre>

<p>Or, even (which we can do because there are no other references to <code>list3</code>):</p>

<pre><code>list3.sort(key=lambda x)
</code></pre>

<p>That's so much shorter!</p>

<pre><code>for i in range(0.len(list3)):
    list1[i]=list3[i][0]
    list2[i]=list3[i][1]
</code></pre>

<p>Fixing the typo (<code>.</code> should be <code>,</code>) is obvious.</p>

<pre><code>for i in range(0, len(list3)):
    list1[i]=list3[i][0]
    list2[i]=list3[i][1]
</code></pre>

<p>Then, let's see if we can write this a bit differently. Yes we can!</p>

<pre><code>list1, list2 = zip(*list3)
</code></pre>

<p>At this point, <code>list1</code> and <code>list2</code> are tuples. But that we can solve by writing</p>

<pre><code>list1, list2 = map(list, zip(*list3))
</code></pre>

<p>instead.</p>
    </div>