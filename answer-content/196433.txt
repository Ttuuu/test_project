<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>your code is missing the <code>function</code> keyword - presumably that was omitted accidentally </li>
<li>the variable <code>time</code> is an array of strings - so something like <code>parts</code> or <code>timeParts</code> might be more descriptive, and because it doesn't get re-assigned, you can use <code>const</code> (as was mentioned in <a href="https://codereview.stackexchange.com/a/196431/120114">the answer by Glinkis</a>) to avoid accidental re-assignment</li>
<li>"<strong><em>Always specify a radix</em></strong>"<sup><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt#ECMAScript_5_removes_octal_interpretation" rel="nofollow noreferrer">1</a></sup> when using <code>parseInt()</code> (presumably <code>10</code>)</li>
<li>The reverse of the array could be eliminated if items are removed from the array using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift" rel="nofollow noreferrer"><code>array.shift()</code></a></li>
</ul>

<p>While it may be slower due to a loop and function call, see a rewrite below using a <code>while</code> loop:</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function hhmmssToMillis(hhmmss) {
   const parts = hhmmss.split(':');
   if (parts.length &gt; 3) {
     return 0;
   }
   let seconds = 0;
   while (parts.length) {
    seconds += parseInt(parts.shift(), 10) *  60 ** parts.length;
   }
   return seconds * 1000; 
}

console.log(hhmmssToMillis('53'));
console.log(hhmmssToMillis('15:46'));
console.log(hhmmssToMillis('10:14:22'));
console.log(hhmmssToMillis('4:00'));</code></pre>
</div>
</div>


<p>And that <code>while</code> loop could be transformed into a <code>for</code> loop:</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function hhmmssToMillis(hhmmss) {
   const parts = hhmmss.split(':');
   if (parts.length &gt; 3) {
     return 0;
   }
   for(var seconds = 0; parts.length &gt; 0; ) {
    seconds += parseInt(parts.shift(), 10) *  60 ** parts.length;
   }
   return seconds * 1000; 
}

console.log(hhmmssToMillis('53'));
console.log(hhmmssToMillis('15:46'));
console.log(hhmmssToMillis('10:14:22'));</code></pre>
</div>
</div>


<p>While it may be slower, you could also use a functional approach, using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce" rel="nofollow noreferrer"><code>Array.reduce()</code></a></p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function hhmmssToMillis(hhmmss) {
   const parts = hhmmss.split(':');
   if (parts.length &gt; 3) {
     return 0;
   }
   const reducer = (acc, cur, idx, arr) =&gt; {
     return acc + parseInt(cur, 10) * (60 ** (arr.length - idx - 1)); 
   };
   return parts.reduce(reducer, 0) * 1000;
}

console.log(hhmmssToMillis('53'));
console.log(hhmmssToMillis('15:46'));
console.log(hhmmssToMillis('10:14:22'));</code></pre>
</div>
</div>


<p>And borrowing from <a href="https://stackoverflow.com/a/17103893/1575353">this answer</a> to <a href="https://stackoverflow.com/q/9640266/1575353">a nearly identical SO Post (but without working code by OP)</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC" rel="nofollow noreferrer">Date.UTC()</a> could also be used, though apparently that technique <a href="https://jsperf.com/stringstomillis" rel="nofollow noreferrer">proves slower according to these jsPerf comparison tests</a>.</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function hhmmssToMillis(time)
{
    const parts = time.split(':');    
    return Date.UTC(1970, 0, 1, parts.length &gt; 2?parts[0]: 0, parts.length &gt; 1? parts[0]:0, parts[parts.length - 1]);
}

console.log(hhmmssToMillis('53'));
console.log(hhmmssToMillis('15:46'));
console.log(hhmmssToMillis('10:14:22'));</code></pre>
</div>
</div>

    </div>