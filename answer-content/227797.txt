<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Race Conditions</h3>

<p>You are using 2 concurrent dictionaries, which are each thread-safe, but used together there may be race conditions now and then. Think about possible impact and worst case scenarios.</p>

<blockquote>
<pre><code>_cooldownTasks = new ConcurrentDictionary&lt;string, Task&gt;();
_pendingNotifications = new ConcurrentDictionary&lt;string, string&gt;();
</code></pre>
</blockquote>

<h3>Thread Pool Resource Consumption</h3>

<p>Since you expect massive amounts of updates, having a <code>Task</code> for each update might just put too much pressure on the thread pool:</p>

<blockquote>
<pre><code>var newCooldown = new Task(async () =&gt; await Task.Delay(_throttleLimit));
</code></pre>
</blockquote>

<h3>WPF Binding Delay</h3>

<p>If you don't mind using a built-in solution (as we have established your UI is in WPF), you could go for a <a href="https://www.c-sharpcorner.com/UploadFile/mahesh/binding-delay-in-wpf-4-5/" rel="nofollow noreferrer"><code>Delay</code> on the <code>Binding</code></a>. Something like this:</p>

<pre><code>Value="{Binding ElementName=ValueText, Delay=500, Path=Text, Mode=TwoWay}"
</code></pre>
    </div>