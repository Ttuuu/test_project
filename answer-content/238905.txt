<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>how can I improve the performance of my program?</p>
</blockquote>

<p>A standard answer is use a better algorithm.</p>

<p>Trying to improve performance by shaving cycles while enumerating a 635 013 559 600 strong set is futile.</p>

<p>Consider instead enumerating subsets of valuable cards. There are merely <span class="math-container">\$2^{16} = 65536\$</span> of them; a trillion time acceleration. Given a <code>popcount</code> function, you may do something along the lines of</p>

<pre><code>for (int value_cards = 0; value_cards &lt; (1 &lt;&lt; 16); value_cards++) {
    if (popcount(value_cards) &lt;= 13) {
        hand_value = compute_hand_value(value_cards);
        hands[hand_value] += choose((52 - 16), 13 - popcount(value_cards));
    }
}
</code></pre>

<p><code>52 - 16</code> above is a number of a non-value cards in the deck. <code>13 - popcount(value_cards)</code> is a number of non-value cards which could be dealt to the hand with a given number of value cards.</p>

<p>And of course, the <code>choose</code> shall be a precomputed array.</p>
    </div>