<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3><em>Toward optimization and reorganization</em></h3>

<p><code>t9_dict</code> turned into a constant <code>T9_DICT</code>.</p>

<ul>
<li><p><code>t9_input</code> function <br>The function would better reflect the intention if named as <strong><code>number_to_chars_t9</code></strong> (or <code>number_to_t9chars</code>).<br>As the question stated <em>"Ignore 1's and 0's"</em> - instead of executing filtering condition on each iteration <code>0</code> and <code>1</code> can be stripped at once with flexible <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate</code></a> function: <code>str(number).translate({48: None, 49: None})</code>.<br>
Next, prefer list comprehension over constructing and appending to a list.<br>
Even further, it's better to return an immutable <code>tuple</code> of <code>T9</code> charsets to avoid compromising them.</p></li>
<li><p><strong><code>read_contact</code></strong> function
<br><code>list_text</code> argument is better renamed to a meaningful <strong><code>t9_charsets</code></strong>.<br>
<code>filename</code> is better defined as a keyword argument with default value: <strong><code>def read_contact(t9_charsets, filename='contacts.txt'):</code></strong>.<br>
<br>Instead of verbose <code>open(...)</code>, <code>f.close()</code> calls - use flexible context manager <strong><code>with</code></strong> to automate handling of a file resource.</p>

<p>Nested <code>for</code> loops with all those noisy conditions with dragging around <code>count</code> variable and <code>break</code> statements are just redundant.<br>All the crucial job can be done by means of builtin <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> (generates respective items pairs until exhausting the shortest iterable) and <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a> functions.</p></li>
</ul>

<hr>

<p>Finally, here's the full optimized implementation:</p>

<pre><code>T9_DICT = {
    2: "ABC",
    3: "DEF",
    4: "GHI",
    5: "JKL",
    6: "MNO",
    7: "PQRS",
    8: "TUV",
    9: "WXYZ",
}


def number_to_chars_t9(number):
    return tuple(T9_DICT[int(num)] 
                 for num in str(number).translate({48: None, 49: None}))


def read_contact(t9_charsets, filename='contacts.txt'):
    with open(filename) as f:
        for line in f:
            if all(c.upper() in t9_chars 
                   for c, t9_chars in zip(line, t9_charsets)):
                return line.strip()
    return "no result"
</code></pre>

<p>Tests:</p>

<pre><code>print(read_contact(number_to_chars_t9(728)))
print(read_contact(number_to_chars_t9(5203)))
print(read_contact(number_to_chars_t9(273))) 
print(read_contact(number_to_chars_t9(2738)))
</code></pre>

<p>The output (consecutively):</p>

<pre><code>Patricia Adkins        741-256-2766
Kadyn Giles            597-981-0606
Brennan Rosales        930-238-6553
no result
</code></pre>
    </div>