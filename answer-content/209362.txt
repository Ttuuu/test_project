<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code looks nice and the documentation is high quality.</p>

<p>Maybe a few things can be improved anyway.</p>

<p><strong>API</strong></p>

<p>It could be a good idea to get inspiration from the Python API functions related to sorting, we have:</p>

<ul>
<li><a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> returning a new list from an iterable</li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow noreferrer"><code>list.sort</code></a> sorts a list in place, returns None</li>
</ul>

<p>In your case, as <code>structure</code> is sorted in place, I am not sure it makes sense to return it.</p>

<p><strong>Parameter <code>structure</code></strong></p>

<p>This is mostly personal opinion but instead of <code>structure</code>, I'd find <code>container</code> to be a better name.</p>

<p>Also, if you want to be precise in the documentation, you might want to say that it is <code>mutable</code> but also that it implements <code>__len__</code>, <code>__getitem__</code> and <code>__setitem__</code>. These objects are also called <a href="https://docs.python.org/3/reference/datamodel.html#objects-values-and-types" rel="nofollow noreferrer">(mutable) sequences</a>.</p>

<p><strong>The code</strong></p>

<p>Not much to say about the code itself.</p>

<p>Instead of having <code>if not changed: break</code>, you could write a: <code>while changed</code> loop which is very slightly more concise.</p>

<p>Also, you'll find an optimisation suggestion on <a href="https://en.wikipedia.org/wiki/Bubble_sort#Optimizing_bubble_sort" rel="nofollow noreferrer">Wikipedia</a>:</p>

<blockquote>
  <p>The bubble sort algorithm can be easily optimized by observing that the n-th pass finds the n-th largest element and puts it into its final place. So, the inner loop can avoid looking at the last n âˆ’ 1 items when running for the n-th time</p>
</blockquote>

<p>Before getting into such a change, I highly recommend writing unit tests.</p>
    </div>