<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Instead of using a different function for your dynamic programming solution (which I believe, if done correctly, will solve your problem), just add an lru_cache decorator to your recursive hamiltonian path function. Make sure to make the arguments sent to that function immutable (tuples recommended). Try it and let us know.</p>

<p>It should look something like:</p>

<pre><code>from functools import lru_cache

@lru_cache
def hamiltonian_path(self, path, pos):
        path = list(path)
        if pos == self.n:
            return True

        for v in range(self.n):
            if self.is_safe(v, pos, path):
                path[pos] = v

                if self.hamiltonian_path(tuple(path), pos+1):
                    return True
                path[pos] = -1

        return False
</code></pre>
    </div>