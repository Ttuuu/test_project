<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The question is basically to continuously find the next lexicographically smallest string starting from 'a'</p>

<p>Here's the code I created to solve with recursion:</p>

<pre class="lang-py prettyprint-override"><code>from sys import setrecursionlimit
setrecursionlimit(10 ** 9)

ALPS = 'abcdefghijklmnopqrstuvwxyz'

def parsed_string(l):
    return ''.join(ALPS[i] for i in l)

def solve(string=None, i=0):
    """
    Prints the next lexicographically smallest string infinitely:
       a, b, ..., z, aa, ab, ..., zz, aaa, ..., zzz, ...
    """

    # Entering a list as default parameter should be avoided in python
    if string is None:
        string = [0]

    # Base case
    if i == len(string):
        print(parsed_string(string))
        return

    # Generate values if the current element is the alphabet
    while string[i] &lt; 26:
        solve(string, i + 1)
        string[i] += 1

    # If the current index is the first element and it has reached 'z'
    if i == 0:
        string = [0] * (len(string) + 1)
        solve(string)

    else:
        string[i] = 0

solve()
</code></pre>

<p><strong>EDIT 1:</strong>  </p>

<ul>
<li>This might cause <code>MemoryError</code> or <code>RecursionError</code> if the code is run for too long</li>
<li>You can <code>yield</code> the value or <code>append</code> it to a list if you wish. The code was to provide a basic idea of how to solve the problem</li>
</ul>

<p>Hope this helps!</p>
    </div>