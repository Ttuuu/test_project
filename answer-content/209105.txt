<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is Excel, so some Excel built-in perks can be used.</p>

<p>Return a Variant, not a defined type because you can then return an error quite easily. Yes this does apply to general VBA as well. </p>

<p>Return early from the function if you can to save further checks - although in this simple example it is not really necessary.</p>

<p>Every time I see an <code>ElseIf</code> I think that there is something in here that can be improved. </p>

<p>If you are looking to expand this later, then write it for such extension. The first example below just cleans up the code.</p>

<pre><code>Public Function SelValue(ValOne As Long, ValTwo As Long, _
                    Optional NeedMax As Boolean = True) As Variant
    If ValOne &lt; 0 Or ValTwo &lt; 0 Then
        SelValue = CVErr(xlErrValue)
        Exit Function
    End If

    If ValOne = 0 And ValTwo = 0 Then
        SelValue = CLng(0)
        Exit Function
    End If

    If NeedMax Then
        SelValue = IIf(ValOne &gt; ValTwo, CLng(ValOne), CLng(ValTwo)) ' But note comments about a minor performance hit 
        Exit Function
    End If

    If ValOne = 0 Then
        SelValue = CLng(ValTwo)
        Exit Function
    End If

    ' Now that we have cleaned out the special cases above. NeedMax is False
    If ValOne &gt; ValTwo And ValTwo &lt;&gt; 0 Then
        SelValue = CLng(ValTwo)
    Else
        SelValue = CLng(ValOne)
    End If

End Function
</code></pre>

<p>The above code is not the final way I would leave it - personally I would refactor it again because I prefer only one exit/return from a function. But the above iteration highlights something important. It isolates the logic. And you don't handle the case where <code>ValTwo = 0</code></p>

<p>Addendum: <code>SelValue = CVErr(xlErrValue)</code> is only useful if the function is a UDF. Raising error #5 (<code>Err.Raise 5</code>) here and still returning a Long is a valid approach for a non-UDF. Thanks to Mathieu Guindon.</p>
    </div>