<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few things:</p>

<p>First, you can make use of the third parameter of <code>range</code>, which is the step, <em>IF</em> you can guarantee that <code>part_duration</code> is an integer (which is the case for the example you posted here):</p>

<pre><code># Integer division
part_duration = song_duration // num_of_parts
parts = []

# I rearranged this a bit too
for i in range(0, song_duration, part_duration):
    part = [i, i + part_duration]
    parts.append(part)

print(parts)
# [[0, 5], [5, 10], [10, 15], [15, 20]] # Note they're integers
</code></pre>

<p>Note how this is just a transformation from a <code>range</code> to a <code>list</code> though. If you're transforming one collection to a list, list comprehensions should come to mind:</p>

<pre><code># List comprehension split over two lines
parts = [[i, i + part_duration]
         for i in range(0, song_duration, part_duration)]

print(parts)
# [[0, 5], [5, 10], [10, 15], [15, 20]]
</code></pre>

<hr>

<p>If you can't guarantee integer steps though, I'm not sure of a good way. Unfortunately, Python doesn't allow fractional steps for its <code>range</code>. </p>
    </div>