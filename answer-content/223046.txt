<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Dealing with <em>end of file</em> in I/O operations</strong>:</p>

<p>There are two basic ways to deal with EOF in functions like <code>read-line</code>:</p>

<p><em>1) Return a value</em></p>

<pre><code>           ; stream     ; signal eof error     ; return value if EOF
(read-line stream       nil                    nil)
</code></pre>

<p><em>2) Signal an error</em></p>

<pre><code>           ; stream     ; signal eof error
(read-line stream       t)
</code></pre>

<p>Typical way:</p>

<ul>
<li>use a loop, like SDS said</li>
<li>don't signal an error, but deal with an explicit EOF value</li>
</ul>

<p>Less typical:</p>

<ul>
<li>use a loop, like SDS said</li>
<li>signal an error and handle it -&gt; might need slightly more tricky error handling code</li>
</ul>

<p>Possible:</p>

<ul>
<li>use a loop, like SDS said</li>
<li>hide the error handling code behind a macro...</li>
</ul>
    </div>