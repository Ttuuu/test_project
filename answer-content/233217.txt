<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Good things</h2>

<p>This code uses <code>const</code> for variables that don't get re-assigned.</p>

<p>The functions are concise, though some of the lines are a bit long due to ternary operators.</p>

<h2>Suggestions</h2>

<p>Bear in mind that functional programming is typically slower than imperative because each iteration leads to a function being added to the call stack. This would be noticeable with large data sets. Having the function <code>addResult()</code> seems like an excess step since it is only called in one spot. The lines to ensure the object at the given key is an array and push an element to that array could simply exist in the callback to the <code>_.reduce()</code> call. </p>

<p>Also, instead of either creating a new array with the data item or pushing it into an existing array, it could create an empty array when appropriate and then always push the data. This may be slightly less performant but requires fewer lines of code than storing the data in a temporary variable.</p>

<pre><code>function createConfiguration(configuration) {
  return _.reduce(configuration.components, (result, data) =&gt; {
    const component = data.$ref ? getComponentByReference(data) : data;
    if(!result[component.key]) {
      result[component.key] = [];
    }
    result[component.key].push(component.components ? { ...component, components: createConfiguration(component) } : component)
    return result;
  }, {});
}
</code></pre>

<p>Unless you fully understand the ways <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Automatic_semicolon_insertion" rel="nofollow noreferrer">Automatic semicolon insertion</a> can be broken by certain statements, add semi-colons to terminate the lines. </p>
    </div>