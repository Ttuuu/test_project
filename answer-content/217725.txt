<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some in-place improvements you could make:</p>

<ul>
<li><p><a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP-8</a> recommends four space indentation, not two;</p></li>
<li><p><a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> would allow you to scan the list of words only once, without having to explicitly initialise to <code>0</code> for each word. Even easier, there's a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>, too;</p></li>
<li><p>Rather than iterate over all of the characters you want to replace, you could use <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a> with a regular expression pattern matching those characters (or <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code></a> for the characters you <em>do</em> want); and</p></li>
<li><p>You should generally use the <code>with</code> <em>"context manager"</em> to handle files; see e.g. <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">the tutorial</a>.</p></li>
</ul>

<p>More broadly, though, you have one function with three different purposes:</p>

<ol>
<li><p>Handling the file;</p></li>
<li><p>Cleaning up the text; and</p></li>
<li><p>Counting the words.</p></li>
</ol>

<p>Splitting these separate concerns up into separate functions would make those functions easier to test, understand and reuse.</p>

<p>With these ideas applied, you could write something like:</p>

<pre><code>from collections import Counter
import re

def get_text(filename):
    """Read and return the content of a specified file."""
    with open(filename, "rU") as handle:
         return handle.read()

def clean_text(text):
    """Lowercase text and extract words."""
    return re.findall("[a-z]+", text.lower())

def get_word_frequencies(filename):
    text = get_text(filename)
    words = clean_text(text)
    return Counter(words)
</code></pre>
    </div>