<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not familiar with the book, however, as you are at chapter 4 I will most likely tell you about stuff that will still follow.</p>

<h2>Hungarian notation</h2>

<p>Looking at the names of your variables, you seem to have your own version of the Hungarian notation. I've learned from experience that using it doesn't add much benefits. It makes it hard to change types, especially when you start using <code>auto</code>. When types start to become more complex, it becomes really confusing, where introducing new types is a better solution than encoding the type in the name.</p>

<h2>Functions</h2>

<p>Currently, all of your code is in the single function main.
I would separate the concerns of the logic into multiple functions:</p>

<ul>
<li>loadData: Function that retrieves the data and builds up the vector. No cout, no calculations.</li>
<li>use STL algorithms: <code>auto totalDistance = std::accumulate(distance.cbegin(), distance.cend(), 0.);</code> or 'auto [shortestIterator, greatestIterator] = std::minmax_element(distance.cbegin(), distance.cend());'</li>
<li>printOutput: Print the output of the calculations</li>
</ul>
    </div>