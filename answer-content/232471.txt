<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://codereview.stackexchange.com/users/95789/">RomanPerekhrest</a> has brought up several good points that you should definitely follow.</p>

<p>One point that was not mentioned however, is the recursive way you call your <code>_timer(...)</code> function. As you may or may not know, Python has an upper limit on how many recursion levels are allowed. You can query the limit on your system using <code>sys.getrecursionlimit()</code> after <code>import sys</code>. Once you hit that limit, an exception will occur and end your program.</p>

<p>Luckily for you, <code>time.sleep(...)</code> with the given intervals in your code is going to prevent you from hitting that limit during a normal workday. If I've not miscalculated, you would need to run your code for over 208h before getting in trouble (recursion limit of 1000 here on my machine, i.e. 500 cycles รก 25min = 208,...h).</p>

<p>But there are more good news here. You don't really need recursion! A simple iterative approach (based off of RomanPerekhrest's answer) should work equally well:</p>

<pre class="lang-py prettyprint-override"><code>import time
from twilio.rest import Client

WORK_TIME = 20 * 60
BREAK_TIME = 5 * 60


def _timer(work_state=True):
    client = Client("KEY", "KEY")  # client does not need to be global any more
    while True:
        if work_state:
            action, delay_time = 'work', WORK_TIME
        else:
            action, delay_time = 'break', BREAK_TIME
        work_state = not work_state

        client.messages.create(to="MYNUMBER", from_="TWILIONUMBER", 
                               body=f"Time To {action.title()}!")
        time.sleep(delay_time)


if __name__ == "__main__":
    _timer(False)
</code></pre>

<p>A few subtleties that I also changed: </p>

<ul>
<li><p>Since we are now always in the same function scope, <code>client</code> does not need to be a global variable anymore and can be moved into the function definition. </p></li>
<li><p>Starting the timer is now surrounded by <code>if __name__ == "__main__":</code>. This line will make sure, that the code is <a href="https://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer">only run if used as a script</a>, but not in case you would try to <code>import</code> something from that file.</p></li>
</ul>
    </div>