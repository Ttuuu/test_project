<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few obligatory <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP-8 rules</a>:</p>

<ul>
<li><p>Imports should be grouped in the following order:</p>

<ol>
<li>standard library imports</li>
<li>related third party imports</li>
<li>local application/library specific imports</li>
</ol></li>
<li>Use blank lines in functions, sparingly, to indicate logical sections.</li>
<li>Two blank lines between the import statements and other code.</li>
<li>Two blank lines between each function.</li>
<li>Don't use spaces around the <code>=</code> sign when used to indicate a keyword argument or a default parameter value.</li>
</ul>

<p>If this is written for python-3.x, I'd also suggest going for <a href="https://www.python.org/dev/peps/pep-0484/" rel="nofollow noreferrer">Type Hinting</a>.</p>

<hr>

<p>In the <code>split_texts</code> definition, I'd suggest having <code>naive=False</code> as the default (or <code>naive=True</code>) depending on the more obvious choice of the two.</p>

<hr>

<p>In the function <code>total_rts</code> (could be renamed to <code>total_retweets</code>), you can avoid one entire level of nesting by returning early in the first <code>if not string_inclusion</code> clause.</p>

<hr>

<p>The function <code>clean_text</code> makes several transition tables, which could be extracted out of the function and made a constant. More importantly, what I understood from the definition, I think you're (in order):</p>

<ol>
<li>cleaning the text of all printable characters</li>
<li>cleaning the text of all characters leftover from step 1</li>
<li>cleaning all punctuation from result of step 2</li>
<li>replacing all kinds of whitespace characters with a single <code>' '</code> in the result of step 3.</li>
</ol>

<p>You can define global transition tables as follows:</p>

<pre><code>WHITESPACE = ' ' * len(string.whitespace)
CLEAN_TRANSLATION = str.maketrans(string.whitespace, WHITESPACE, string.punctuation)
</code></pre>

<p>Alternatively, you can take the <code>CLEAN_TRANSLATION</code> inside the <code>clean_text</code> function and use the undefined non-printable characters in concatenation to <code>string.punctuation</code>. So, the function becomes:</p>

<pre><code>def clean_text(text):
    undefined_chars = text.translate(
        str.maketrans({c: None for c in string.printable}))
    cleanup_translation = str.maketrans(
        string.whitespace, WHITESPACE, string.punctuation + undefined_chars)
    return text.translate(cleanup_translation)
</code></pre>

<hr>

<p>And, most importantly, the description for each function that you've provided in the question, could be converted to <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer">a docstring</a> for each of them.</p>
    </div>