<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What you're actually doing is implementing Service Locator which is quite opposite to dependency injection. Please refer to <a href="https://stackoverflow.com/questions/4985455/dependency-injection-vs-service-location">[THIS]</a> discussion about it.</p>

<p><strong>Please use already existing solution.</strong></p>

<p>Few points from my side, just to point out why I think that's wrong for your case:</p>

<ol>
<li>Why do you think you need more lightweight DI container? Have you performed benchmarks and they proved that your bottle neck is DI injection?</li>
<li>Why have you choosen struct for DIReference? Struct is not good choice for a field, because you're unintenionally (I presume) allocating it on heap. Please refer to <a href="https://stackoverflow.com/questions/4853213/are-structs-always-stack-allocated-or-sometimes-heap-allocated">[THIS]</a> discussion.</li>
<li>Why would you need DIReference anyway? It's only complicating your code. You don't need to store it as field anywhere - instances that you need are already kept in _references in DIContainer.</li>
<li>Just to point out, as your _references is static readonly field, then this Dictionary is singleton. It causes few potential problems, to name two:

<ul>
<li>Is it guaranteed that every time you install bindings there won't be any other threads that trying to do same thing?</li>
<li>Every instance in this dictionary is also singleton-ish. What I mean by that - as soon as first class will install PlayerController into your _references in DIContainer then it'll be available for all classes that uses your DIContainer class. Yet you can still overwrite it. Why would that be a problem? It could cause huge GC pressure, because you'll constantly overwriting PlayerController in your dictionary and GC will have to clean that up which could lead to stopping all threads from running. You definitely want to avoid that especially in games.</li>
</ul></li>
</ol>

<p>I want to strongly suggest to use already existing solution for DI. If you're worried about performance please refer to <a href="https://github.com/danielpalme/IocPerformance" rel="nofollow noreferrer">[THIS]</a> benchamrks.</p>
    </div>