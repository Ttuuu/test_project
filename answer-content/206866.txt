<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you are making multiple requests to the same host, it is usually faster to open a <a href="http://docs.python-requests.org/en/master/api/#request-sessions" rel="nofollow noreferrer"><code>requests.Session</code></a>. This will re-use the connection to the server and you can even set headers which will automatically be included in each request:</p>

<pre><code>def unlist_packages(packages_to_unlist, apiKey, list_only=True):
    session = requests.Session()
    session.headers.update({"X-NuGet-ApiKey": apiKey})
    for unlist in packages_to_unlist:
        pprint(unlist["id"])
        package_id = unlist["id"]
        for version in unlist["previous"]:
            url = f"https://www.nuget.org/api/v2/package/{package_id}/{version}"
            if list_only:
                print(f"\t{url} - this is just a test") 
            else:
                # we don't want to remove them too fast            
                time.sleep(DELETE_DELAY_IN_SECONDS)
                response = session.delete(url)
                print(f"\t{url} - {response.status_code}")
</code></pre>

<p>I also turned your <code>if</code> around to make it easier to read. Note that comparing <code>== False</code> or <code>is True</code> is also frowned upon (at least use <code>if not list_only</code>).</p>

<hr>

<p>Instead of checking the response code yourself like this:</p>

<pre><code>if response.status_code != 200:
    raise Exception("Could not search for packages.")
</code></pre>

<p>You could just do:</p>

<pre><code>response.raise_for_status()
</code></pre>

<p>This will automatically raise a exception if the status code is not 200 (but will of course not have custom messages depending on which task failed).</p>
    </div>