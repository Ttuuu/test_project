<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your biggest problem targeting performance is the use of string concatenation by using <code>exportCSV +=</code>. Each time such a line will be executed a new string object will be created which takes time. </p>

<p>By using a <code>StringBuilder</code> like so  </p>

<pre><code>StringBuilder exportCSV = new StringBuilder(1024);
foreach (DataRow row in table1.Rows)
{
    int i = 1;
    foreach (DataColumn column in table1.Columns)
    {
        if (row[1].ToString() == "002" &amp;&amp; i &gt; 41 || row[1].ToString() == "END" &amp;&amp; i &gt; 4)
        {
            //do nothing
        }
        else
        {
            if (i &gt; 1)
            {
                exportCSV.Append(";");
            }
            exportCSV.Append(row[column.ColumnName].ToString());
        }
        i++;
    }
    exportCSV.AppendLine();
}
</code></pre>

<p>the performance will get a lot better.  </p>

<hr>

<p>The xml-part should be rewritten like so  </p>

<pre><code>DataSet ds = new DataSet("FItem");
_con.Open();
_dap.Fill(ds);
_con.Close();

StringWriter sw = new StringWriter();
ds.WriteXml(sw, XmlWriteMode.IgnoreSchema);
string outputXML = sw.ToString().Replace("Table", "Item");
System.IO.File.WriteAllText(xFilePath, OutputXML);
</code></pre>
    </div>