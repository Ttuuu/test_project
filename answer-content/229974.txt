<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Index less</h3>

<p>Also, you're indexing a lot. Perhaps it's better to seperate the two dicts:</p>

<pre class="lang-py prettyprint-override"><code>old, new = results_dict["Current model"], results_dict["New model"]
</code></pre>

<p>(And what's up with having an underscore in <code>Current_model</code> and a space in <code>New model</code>? That's asking for typos. You're not even consistent with it - in your first code they're both spaces, but in the assignment you use 3 underscores and a space for <code>Current</code>...)</p>

<p>Also, with how you make the checks, one of your conditions always implies the other. You should remove the redundant comparisons. Change:</p>

<pre class="lang-py prettyprint-override"><code>if recall_new &gt; recall_current or recall_new &gt; (recall_current-(0.1)):
# Into:
if recall_new &gt; recall_current - 0.1:
</code></pre>

<p>The additional braces don't do anything, and if <code>recall_new</code> is bigger than <code>current-0.1</code>, then it is also bigger than <code>current</code>. </p>

<h3>Loop</h3>

<p>If you look closely, you'll see you're doing the same thing multiple times. So just make it a loop.</p>

<p>Arguably you should make an outside variable for the keys to iterate over, or iterate over the keys of either new or old dict. But if hard-coding is appropriate, it could look a lot like:</p>

<pre class="lang-py prettyprint-override"><code>new_better = 0  # i is a bad variable name. Names should have meaning.
for key in ("Recall", "Precision", "F1_score"):
    if new[key] &gt; old[key]-0.1:
        new_better += 1
if new["Frauds"] &gt; old["Frauds"]*1.2:
    new_better += 1
</code></pre>

<p>Note that I removed your rounding. Python has no issues transforming a float to the closest integer by means of <code>int()</code>, but neither does it have a problem with comparing ints to floats. I did notice that your adjustments make it easier to score an increment for the first three variables, but harder for the fourth. Is this intentional?</p>
    </div>