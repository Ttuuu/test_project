<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Stack only needs to implement <code>push</code>, <code>pop</code>, <code>top</code>, <code>empty</code>.
Additionally you can have copy, assignment, <code>swap</code>, <code>clear</code> and serialization routines to make your class user-friendly.</p>

<p>Comments about this implementation:</p>

<ul>
<li><p>Recommend separate files (H &amp; CPP) for class definition and implementation. May even want to go to lengths to have a Stack interface (in C++ this can be done via class with only public pure virtual function and virtual no-op destructor). This StackList would be an implementation/child of the Stack.</p></li>
<li><p>You don't need both <code>head_</code> and <code>tail_</code>, only one is sufficient for FIFO/Stack API implementation</p></li>
<li><p>Copy Constructor function signature is incorrect, it needs to be <code>StackList(const StackList &amp; other)</code>, it is incorrect to be able to modify the input during copy via lvalue-ref.</p></li>
<li><p>Recommend following Copy-Swap idiom to implement <code>operator=</code>. You may even be able to get away with not needing to create 2 overloads one for lvalue-reference and one for rvalue-reference, use an object copy instead.</p></li>
<li><p>Do not create <code>operator[]</code> as it is not needed for Stack. Its run-time complexity is linear, so no need to add a slow unnecessary public method.</p></li>
<li><p><code>Traverse</code> doesn't need to be public on the <code>StackList</code> class</p></li>
<li><p>Recommend having const reference of StackList in <code>operator&lt;&lt;(std::ostream &amp; os, const StackList&lt;T&gt; &amp; stack)</code> as it doesn't need to modify the stack.</p></li>
<li><p>Follow <code>std</code> data structure API convention:</p>

<ul>
<li>Naming: Recommend changing the name of <code>EmptyList</code> to <code>clear</code></li>
<li>Adding an <code>empty</code> member function. This can be achieved via <code>0 == size()</code>, but prefer to have an explicit <code>empty</code> to ease Stack usage</li>
</ul></li>
</ul>
    </div>