<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is undefined behavior:</p>

<pre><code>namespace std
{
    template &lt;class T&gt;
    void swap(range_iterator&lt;T&gt;&amp; lhs, range_iterator&lt;T&gt;&amp; rhs)
    {
        lhs.swap(rhs);
    }

    template &lt;class T1, class T2, class U1, class U2&gt;
    void swap(range_step_iterator&lt;T1, T2&gt;&amp; lhs, range_step_iterator&lt;U1, U2&gt;&amp; rhs)
    {
        lhs.swap(rhs);
    }

    template &lt;class T&gt;
    void swap(reverse_range_iterator&lt;T&gt;&amp; lhs, reverse_range_iterator&lt;T&gt;&amp; rhs)
    {
        lhs.swap(rhs);
    }

};
</code></pre>

<p>You should never overload <code>swap</code> in the <code>std</code> namespace.  Instead, the <code>swap</code> should be overloaded in the same namespace as the type to be swapped.  This allows correct usage of <code>swap</code> to find the version with ADL.</p>

<p>This is wrong:</p>

<pre><code>void swap(range_iterator&amp; rhs)
{
    T temp_ptr = ptr;
    ptr = rhs.ptr;
    rhs.ptr = temp_ptr;
}
</code></pre>

<p>it should be</p>

<pre><code>using std::swap;
swap(ptr, rhs.ptr);
</code></pre>

<p>instead.  Same for the other <code>swap</code> functions.</p>
    </div>