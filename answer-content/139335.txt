<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<p><em>Should I try to concentrate more on JavaScript only? I mean: Should I try to reduce the mandatory HTML-, CSS-code to a minimun?</em></p>
</blockquote>
<p>I think, the code i.e. HTML and CSS are minimal. Storing the tooltip on the HTML elements is correct way rather than storing it in JavaScript. So, NO. You should not <strong>only</strong> concentrate on JavaScript.</p>
<blockquote>
<p><em>Or is Okay the way I have done it?</em></p>
</blockquote>
<p>Yes, the logic is correct. However, the code can be shortened(<em>see below</em>) when written in ES6.</p>
<blockquote>
<p><em>But actually the first parameter (CSS-selector) is mandatory for the function to work. If it isn't correct to code will silently fail.</em></p>
<p><em>Should I change that?</em></p>
<p><em>Return with an exit-code which signals an error? Perhaps even throw an exception?</em></p>
</blockquote>
<p>Let's look at the following statement</p>
<pre><code>selector = selector || '.tooltip';
</code></pre>
<p>This means, if <code>selector</code> is <a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" rel="nofollow noreferrer">falsy</a>, selector will be <code>.tooltip</code>. So, there will be no case when the <code>selector</code> will be empty and error will be thrown. That means, there is no need to handle that error.</p>
<p>And, I'll also suggest to use <code>[data-message]</code> as default parameter. This will select all the elements having <code>data-message</code> attribute.</p>
<hr>
<p><strong>Here are some suggestions:</strong></p>
<p>As <code>let</code> is used either the environment you're using supports ES6 or the source files are compiled to ES5.</p>
<p>Following features of ES6 can be used</p>
<ol>
<li><p><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Default_parameters" rel="nofollow noreferrer">Default Parameters</a></p>
<p>This will allow to use the assigned value to the parameter as default value if no value is passed when invoking the function.</p>
<p>Now, ES5's default parameter notation</p>
<pre><code>selector = selector || '.tooltip';
</code></pre>
<p>is no longer needed.</p>
</li>
<li><p><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from" rel="nofollow noreferrer"><code>Array.from()</code></a></p>
<p><code>Array.from()</code> can be used to create an array from <em>array-like</em> structures. To iterate over the DOM elements selected by <code>querySelectorAll()</code>, <code>Array.from()</code> can be used.</p>
<pre><code>items = document.querySelectorAll(selector);
items = Array.prototype.slice.call(items);

items.forEach(function(item) {
</code></pre>
<p>can be written as</p>
<pre><code>Array.from(document.querySelectorAll(selector))
    .forEach(function (item) {
</code></pre>
</li>
</ol>
<p><strong>Updated Code:</strong></p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="false" data-babel="true">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>(function (selector = '[data-message]', horizontalOffset = 5, verticalOffset = 5) {
    'use strict';

    Array.from(document.querySelectorAll(selector)).forEach(function (item) {
        // Every time the pointer moves over the element the
        // CSS-rule in overwritten with new values for
        // top and left.
        item.addEventListener('mousemove', function (e) {
            let countCssRules = document.styleSheets[0].cssRules.length;
            let newRule = selector +
                ':hover:after { display: block; ' +
                'left: ' + (e.offsetX + horizontalOffset) + 'px; ' +
                'top: ' + (e.offsetY + verticalOffset) + 'px; }';

            document.styleSheets[0].insertRule(newRule, countCssRules);
        });
    });
}('.tooltip-item', 10));</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>.wrap {
  width: 1000px;
  margin: 50px auto;
  font-family: georgia, serif;
  background-color: cornsilk;
  padding: 20px 30px;
}

div.tooltip-item {
  background-color: orange;
  width: 450px;
  height: 100px;
  border: 1px solid black;
  border-radius: 8px;
  margin: 60px 10px;
}

.tooltip-item {
  position: relative;
  cursor: pointer;
}

.tooltip-item:after {
  content: attr(data-message);
  position: absolute;
  left: 105%;
  white-space: nowrap;
  display: none;
  font-size: 1.2rem;
  background-color: rgba(230, 230, 230, 0.6);
  padding: 10px 20px;
  border-radius: 16px;
  font-family: Tahoma, Verdana, Segoe, sans-serif;
  font-weight: normal;
}

div.tooltip-item:after {
  text-transform: uppercase;
}

h1.tooltip-item:after {
  background-color: cyan;
  color: #ff14ec;
  font-weight: 800;
  border-radius: 20px;
  box-shadow: 6px 6px 9px #969696;
}

p.tooltip-item:after {
  background-color: #232323;
  color: #efefef;
  font-weight: 800;
  border-radius: 6px;
  box-shadow: 0 0 0 grey;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;div class="wrap"&gt;
  &lt;h1 class="tooltip-item" data-message="You are hovering the h1-element."&gt;Demo Page - Tooltip following the Mouse-Pointer&lt;/h1&gt; 
  &lt;div class="tooltip-item" data-message="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."&gt;&lt;/div&gt;
  &lt;p class="tooltip-item" data-message="Paragraph-element with a tooltip attached to it."&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu.&lt;/p&gt;
&lt;/div&gt;</code></pre>
</div>
</div>

    </div>