<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It is possible to do better than the <span class="math-container">\$O(n^2)\$</span> of my original solution and solve it in linear time by using a set to store the sums at each point and comparing if the sum at this point minus the target is in the set. However this solution uses <span class="math-container">\$O(n)\$</span> space:    </p>

<pre class="lang-py prettyprint-override"><code>def substring_sum(lst, target):
    sm = 0
    sums = {sm}
    for val in lst:
        sm += val
        if sm - target in sums:
            return True
        sums.add(sm)
    return False    
</code></pre>
    </div>