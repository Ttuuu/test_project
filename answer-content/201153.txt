<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You should start by organising your code better. Try to avoid global variables and group together code in functions.</p>

<p>In addition, you should learn about list comprehensions. They make initializing your signals way easier.</p>

<pre><code>import RPi.GPIO as GPIO

def twos_comp(i):
    ...

def gpio_setup(inputs, outputs):
    GPIO.setmode(GPIO.BCM)
    for pin in inputs:
        GPIO.setup(pin, GPIO.IN)
    for pin in outputs:
        GPIO.setup(pin, GPIO.OUT)

def main(input_pin, output_pins):    
    signals = [1 if i % 2 else -1 for i in range(26)]
    bit_signals = [twos_comp(i) for i in signals]

    for i in bit_signals:
        GPIO.wait_for_edge(input_pin, GPIO.RISING)
        for pin, k in zip(output_pins, str(i)):
            GPIO.output(pin, k) #k will be 0 or 1 which is accepted input

if __name__ == "__main__":
    in, out = [5], range(21, 29)
    gpio_setup(in, out)
    main(in[0], out)
    GPIO.cleanup()
</code></pre>

<p>And finally, there are better ways to do twos complement. A nice one is for example <a href="https://stackoverflow.com/a/37075643">here</a>.</p>
    </div>