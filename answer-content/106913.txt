<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Although @mjolka has provided the way to go, I would like to review the code nevertheless.  </p>

<blockquote>
<pre><code>public string GenerateNonce(string extra = "")
{
    string result = "";
    SHA1 sha1 = SHA1.Create();

    Random rand = new Random();

    while (result.Length &lt; 32)
    {
        string[] generatedRandoms = new string[4];

        for (int i = 0; i &lt; 4; i++)
        {
            generatedRandoms[i] = rand.Next().ToString();
        }

        result += Convert.ToBase64String(sha1.ComputeHash(Encoding.ASCII.GetBytes(string.Join("", generatedRandoms) + "|" + extra))).Replace("=", "").Replace("/", "").Replace("+", "");
    }

    return result.Substring(0, 32);
}  
</code></pre>
</blockquote>

<p>There are a few things that bothers me. </p>

<ol>
<li><p>the creation of the <code>string[] generatedRandoms</code> in a loop and later on using <code>string.join()</code> with an empty string as separator  </p>

<p>This should be replaced using a <code>StringBuilder</code> like so  </p>

<pre><code>public static string GenerateNonce(string extra = "")
{
    string result = "";
    SHA1 sha1 = SHA1.Create();

    Random rand = new Random();
    StringBuilder sb = new StringBuilder(1024);
    while (result.Length &lt; 32)
    {
        sb.Length = 0;
        string[] generatedRandoms = new string[4];

        for (int i = 0; i &lt; 4; i++)
        {
            sb.Append(rand.Next());
        }

        sb.Append("|")
            .Append(extra);

        result += Convert.ToBase64String(sha1.ComputeHash(Encoding.ASCII.GetBytes(sb.ToString()))).Replace("=", "").Replace("/", "").Replace("+", "");
    }

    return result.Substring(0, 32);
}
</code></pre></li>
<li><p>this very long line of code where you add to the result</p>

<p>This could be made pretier by using multiple lines like so  </p>

<pre><code>result += Convert.ToBase64String(
    sha1.ComputeHash(Encoding.ASCII.GetBytes(sb.ToString()))
    ).Replace("=", "")
     .Replace("/", "")
     .Replace("+", "");  
</code></pre>

<p>in this way one wouldn't need to scroll to the right that much  </p></li>
<li><p>the usage of <code>Replace</code> to replace a <code>=</code> from the string  </p>

<p>For a base64 string the only place a <code>=</code> can occur will be at the end of the string. So instead of using <code>Replace</code> you could do a simple <code>TrimEnd</code> which is a lot faster.</p>

<pre><code>public static string GenerateNonce(string extra = "")
{
    string result = "";
    SHA1 sha1 = SHA1.Create();

    Random rand = new Random();
    StringBuilder sb = new StringBuilder(1024);
    while (result.Length &lt; 32)
    {
        sb.Length = 0;
        string[] generatedRandoms = new string[4];

        for (int i = 0; i &lt; 4; i++)
        {
            sb.Append(rand.Next());
        }

        sb.Append("|")
            .Append(extra);

        result += Convert.ToBase64String(
            sha1.ComputeHash(Encoding.ASCII.GetBytes(sb.ToString()))
            ).TrimEnd('=')
             .Replace("/", "")
             .Replace("+", "");
    }

    return result.Substring(0, 32);
}
</code></pre></li>
</ol>
    </div>