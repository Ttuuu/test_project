<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The algorithm you're using is excessively complex. There's no need to track <code>total</code> and <code>negtotal</code> separately. You also don't need <code>tenttotal</code> unless you want to support particularly exotic numerals like IIX (which is rare but <a href="https://commons.wikimedia.org/wiki/File:Sonnenuhr_Jubi_Juist.JPG" rel="nofollow noreferrer">apparently not unattested</a>). And if you're not tracking <code>tenttotal</code>, then you don't need to distinguish the "current = next" and "current &gt; next" cases, either.</p>
<p>The algorithm I'd use is:</p>
<ul>
<li>Start with total = 0.</li>
<li>For each character in the string:
<ul>
<li>If the current character's value is less than the following character's value, subtract the current character's value from the total.</li>
<li>Otherwise, add the current character's value to the total.</li>
</ul>
</li>
</ul>
<p>So, something like this:</p>
<pre><code>for i in range(len(roman)):
    current_char_value = ref[roman[i]]
    next_char_value = ref[roman[i+1]] if i+1 &lt; len(roman) else 0

    if current_char_value &lt; next_char_value:
        total -= current_char_value
    else:
        total += current_char_value
</code></pre>
<p>By the way, <code>ref</code> is a strange name for your dictionary. <code>letter_values</code> would make a lot more sense.</p>
    </div>