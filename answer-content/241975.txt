<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few remarks:</p>

<ul>
<li>you have an <code>ID</code> and <code>idNumber</code>;</li>
<li>the constructor of <code>User</code> doesn't initialize a lot of fields, better make them <code>Optional&lt;String&gt;</code> or <code>Optional&lt;Address&gt;</code> if they are;</li>
<li><code>contracts</code> is a <code>List</code> without <em>type parameter</em> (e.g. <code>List&lt;Contact&gt;</code> or <code>List&lt;User&gt;</code> would be logical type parameters;</li>
<li>white space and indentation are a bit funky (sometimes no empty lines, sometimes up to three, what's up with that?).</li>
</ul>

<p>I'm not sure that <code>contacts</code> is something that is <em>inherent to</em> or <em>part of</em> a user. So I might want to create that <em>relationship</em> using e.g. a table rather than making it a field of a user.</p>

<p>I agree with Timothy, an official address is clearly a "has a" relationship. However, is an official address of another type as a <code>PostAddress</code>? I'd at least make <code>Address</code> an interface or abstract class. Or it could a full blown class if there are no real differences between the two kind of addresses.</p>

<p>When assigning an address within the constructor you may want to make the address <em>immutable</em> or otherwise make a copy. Otherwise you are not correctly implementing data encapsulation. The caller can change the given address and the user class will change with it. Same goes for any <code>getOfficialAddress</code> getter: either use an immutable <code>officalAddress</code> or perform a copy / clone.</p>
    </div>