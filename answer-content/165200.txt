<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>for a grid that's 6X6. Like @Ronan mentioned, there are (6-2)^2 number of hourglass because if you look at the center of the hour glass, at position <code>d</code>. It's only valid from position at (1,1) to (4,4). </p>

<p>So in the main function, you can first scanner the digits and store in an int arr[][].</p>

<p>Then from (1,1) to (4,4), I call the below function: </p>

<pre><code>public static int hourGlassSum (int[][] arr, int row, int col){
    int sum = arr[row][col]+ arr[row-1][col-1]+ arr[row-1][col]+ arr[row-1][col+1]
        + arr[row+1][col-1]+arr[row+1][col]+ arr[row+1][col+1];
    return sum;
}
</code></pre>

<p>Notice how int row and int col from the above function is the position of the center of the hourglass, position <code>d</code> in the graph. in my personal opinion, this is easier to understand than your <code>calculateHourGlassSum()</code></p>
    </div>