<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all I would like to say that, in my opinion, testing API in a such way is wrong, because how does such unit test behave when:</p>

<ul>
<li>developer machine does not have Internet connection?</li>
<li>developer machine does not have proper certificates?</li>
<li>machine that run test does not have acces to such domain?</li>
<li>external API URL changed?</li>
<li>some new requirements (headers, parameters, body) occure (assume that external API is still under development)?</li>
<li>external API has Internet/electricity/domain problem?</li>
</ul>

<p>The answer is simple - it will fail. And it could lead to <a href="https://en.wikipedia.org/wiki/Broken_windows_theory" rel="nofollow noreferrer">BROKEN WINDOWS THEORY</a> which basically means that someone can say "ok that unit tests does not pass, so we can ignore it" or even worse: "(...) add new failing tests!".</p>

<p>So if you want to test external API you should use some monitoring tool and health check it. If any problem occur - contact with API owner to make him solve the problem.</p>

<p>Secondly, you integrate external API with some kind of version - all responses are in JSON for example. The most important thing is to stub all its possible responses - correct ones with corrupted/correct data, without any data, empty response, timeouts, responses in other formats (HTML) etc. to test whether or not your code works correctly and predictable for all these cases. If API contract will change then new use cases you will add to your integration test.</p>

<p>My proposition is to wrap your communication method (HttpClient) into some kind of Facade, let's name it 'ICommunicatorFacade'. Let the parameters be single your custom Request, and let it return your custom Response type (which wraps what you need from HttpClient).</p>

<pre><code>interface ICommunicatorFacade
{
    Task&lt;CustomResponse&gt; Get(CustomRequest request);
}
</code></pre>

<p>That you can easily stub with <a href="https://nsubstitute.github.io/" rel="nofollow noreferrer">NSubstitute</a> <a href="https://github.com/Moq/moq4/wiki/Quickstart" rel="nofollow noreferrer">Moq</a> and other libraries. Also you can check whether or not your facade received correct paramters and of course how does ICommunicator user (method that invokes Get method) behave for all use cases I mentioned above.</p>

<p>Good luck!</p>
    </div>