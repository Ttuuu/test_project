<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This uses <code>collect</code> since <code>reduce</code> is meant for collecting with an immutable result and this is validated to use with <em>parallel</em> streams.</p>

<pre class="lang-java prettyprint-override"><code>return schedules()
  .map(s-&gt;ProgramEnrollment.from(s)) // same as @RobAu
  .sorted(Comparator.comparing(ProgramEnrollment::getStartDate))      
  .collect(
    ArrayList::new,
    (c, e)-&gt;{ 
      if (c.isEmpty()) {
        c.add(e);
      } else {
        var top = c.get(c.size() - 1);
        if (!top.getProgram().equals(e.getProgram())) {
          // Program changed
          c.add(e);  
        }
        else if (top.getStopDate() != null &amp;&amp;
          top.getStopDate().plusDays(1).isBefore(e.getStartDate())) {
          // At this point there is a gap with the program
          c.add(e);  
        }
        else if (top.getStopDate() != null &amp;&amp; 
          top.getStopDate().plusDays(1).isEqual(e.getStartDate())) {
          // update the stop date with the new stop date
          top.setStopDate(e.getStopDate());
        }
        else {
          throw new IllegalStateException();
        }
      }
    },
    (c1, c2) -&gt; {
      var topC1 = c1.get(c1.size() - 1);
      var botC2 = c2.get(0);

      if (!topC1.getProgram().equals(botC2.getProgram()) ||
          topC1.getStopDate() != null &amp;&amp;
          topC1.getStopDate().plusDays(1).isBefore(botC2.getStartDate())) {
        // Program changed or there is a gap with the program
        c1.addAll(c2);
      } else if (topC1.getStopDate() != null &amp;&amp;
          topC1.getStopDate().plusDays(1).isEqual(botC2.getStartDate())) {
        // update the stop date with the new stop date
        botC2.setStartDate(topC1.getStartDate());
        c1.remove(c1.size() - 1);
        c1.addAll(c2);
      } else {
        // handle cases when the data does not match the preconditions
        throw new IllegalStateException();
      }
    }
  );
</code></pre>
    </div>