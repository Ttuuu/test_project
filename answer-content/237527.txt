<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To answer your comment, yes there are equivalent of PEP8 in java. I suggest <a href="https://checkstyle.sourceforge.io/" rel="noreferrer"><code>checkstyle</code></a>, this plugin works in lots of IDE / text editors and can be configured with your code style.</p>

<h2>Code review</h2>

<h3><code>reverse_string</code> method</h3>

<ol>
<li>In java, we try to use the upper-case version of <a href="https://en.wikipedia.org/wiki/Snake_case" rel="noreferrer"><code>Snake case</code></a> only on constants / enums. For the methods and variables, I suggest that you use the <a href="https://en.wikipedia.org/wiki/Camel_case" rel="noreferrer"><code>Camel case</code></a> style.</li>
</ol>

<p><em>Before</em></p>

<pre class="lang-java prettyprint-override"><code>private static String reverse_string(String my_string) 
{
   //[..]
}
</code></pre>

<p><em>After</em></p>

<pre class="lang-java prettyprint-override"><code>private static String reverseString(String myString) 
{
   //[..]
}
</code></pre>

<ol start="2">
<li>When concatenating <code>String</code> in a loop, it's generally recommended to use a <a href="https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StringBuilder.html" rel="noreferrer"><code>java.lang.StringBuilder</code></a> to gain performance and take fewer operations.</li>
</ol>

<pre class="lang-java prettyprint-override"><code>private static String reverseString(String myString) 
{
   StringBuilder reversedString = new StringBuilder();

   for (int j = myString.length() - 1; j &gt;= 0; j--) 
   {
      reversedString.append(myString.charAt(j));
   }

   return reversedString.toString();
}
</code></pre>

<p>If you want not to use it, then I suggest the <code>+=</code> operator instead of the <code>+</code>; it will give the same result and make the code shorter.</p>

<h2>Other observations</h2>

<p>The code was missing a bit of formatting, but nothing too important, I sugest that you pick a formatter for your style (Horstmann style) depending on your IDE / text editor.</p>

<h2>Refactored code</h2>

<pre class="lang-java prettyprint-override"><code>private static String reverseString(String myString)
{
   String reversedString = "";

   for (int j = myString.length() - 1; j &gt;= 0; j--) 
   {
      reversedString += myString.charAt(j);
   }

   return reversedString;
}

public static void main(String[] args) 
{
   System.out.print("Insert a 'String': ");

   Scanner input = new Scanner(System.in);
   String userString = input.nextLine().toLowerCase().replace(" ", "");

   if (userString.equals(reverseString(userString))) 
   {
      System.out.println("It is a palindrome.");
   } 
   else 
   {
      System.out.println("It is not a palindrome.");
   }
}
</code></pre>
    </div>