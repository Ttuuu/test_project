<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Default case!</strong></p>

<p>In addition to the other excellent answers, you could add a default case to your switch statement! This is the case that is called when something other than the expected input is received. </p>

<p>In your example, it would end up looking something like this: </p>

<pre><code>switch (user14)
{
    case 1: 
        Add(n1, n2);
        break;
    case 2:
        Subtract(n1, n2);
        break;
    case 3:
        Multiply(n1, n2);
        break;
    case 4:
        Divide(n1, n2);
        break;
    Default:
        cout &lt;&lt; "Invalid operation\n";
        break;
}
</code></pre>

<p>In the above code, a 1, 2, 3, or 4 will perform the expected corresponding action, as in your original code. But in your original code, any other numerical input will just exit the switch statement and move on to the next thing, without telling the user that no action was taken. In the example above, it will instead tell the user why no action is being taken. </p>

<p>It's a useful way to let the user know that their input was invalid, but it can also be used to automatically take an action if none of the cases are matched. If that is confusing, you can think of default like the final "else" at the end of a series of "if/else if" statements.</p>

<p>On the other hand, if there's no need for user feedback and there's no "default" action that you want to happen normally, then there's no need to make a default case. </p>

<p>Another change I might suggest is for user14, I would personally use a <strong>char</strong> instead of an <strong>int</strong>. This will stop the program from crashing if the user inputs something other than an integer. But then, if you know that the input will only ever be an integer, then there's really no need to take that precaution! </p>

<p>Happy coding!</p>
    </div>