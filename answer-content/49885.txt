<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It's a pretty nice script! (You should open-source it, I would use it.)</p>

<h2>Prepared statements</h2>

<p>You should use prepared statements in your queries. It's not only easier to write, it's also more efficient. For example:</p>

<pre><code>def get(self, search_query, page_number):
    with self.get_conn() as conn:
        c = conn.cursor()
        query = """SELECT search_results FROM movies
                   WHERE search_query = ?
                   AND page_number = ?
                   AND strftime('%s', 'now') - timestamp &lt; ?; """

        c.execute(query, (search_query, page_number, cache_expiration))
        return c.fetchone()
</code></pre>

<p>Notice that you don't need to worry about quoting anymore.</p>

<p>You can do the same thing to your <code>Cache.put</code> method too:</p>

<pre><code>def put(self, search_query, page_number, search_results):
    timestamp = int(time.time())
    with self.get_conn() as conn:
        c = conn.cursor()
        insert = """INSERT OR REPLACE INTO movies
                    (search_query, page_number, timestamp, search_results)
                    VALUES (?, ?, ?, ?); """

        c.execute(insert, (search_query, page_number, timestamp, search_results,))
        conn.commit()
</code></pre>

<h2>Statements can be simplified</h2>

<p>Instead of this:</p>

<pre><code>results = "" 
for a in c.execute(query):
    results = a
return results
</code></pre>

<p>It would be simpler and cleaner like this:</p>

<pre><code>c.execute(query)
return c.fetchone()
</code></pre>

<p>Unless, you really want to iterate over multiple results and return only the last one, as it was in your original code.</p>

<h2>Python classes</h2>

<p>Modern classes should extend <code>object</code>, for example:</p>

<pre><code>class Cache(object):
    ...

class Movie(object):
    ...
</code></pre>

<h2>Coding style</h2>

<p>You can simplify this:</p>

<pre><code>if result != "":
    ...
</code></pre>

<p>like this:</p>

<pre><code>if result:
    ...
</code></pre>

<p>And it's good to follow <a href="http://legacy.python.org/dev/peps/pep-0008/" rel="nofollow">PEP8</a>, the official Python style guide.</p>
    </div>