<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>GregorianCalendar gc = new GregorianCalendar( yyyy, --mm, 1 );
</code></pre>

<p>Never do this. It's just confusing, use <code>mm-1</code>.</p>

<pre><code>throw new NumberFormatException("zero is an invalid year.");
</code></pre>

<p>And negative is fine?</p>

<p>Your many catch-clauses provide a detailed message, but does anyone need it? A date isn't that complicated... a single catch clause stating "expected MM/DD/YYYY, got ..." should do.</p>

<hr>

<p>If you really want to make it fast, then you surely shouldn't tokenize the string twice. And most probably you shouldn't write soooo much code.</p>

<p>You could also store the current midnight and start a <code>ScheduledThreadPoolExecutor</code> to update it regularly as this fooling around with the <code>Calender</code> can cost quite some time.</p>

<p>There's a <code>SimpleDateFormat</code> class doing about everything you need. But you don't need to convert anything to date for the comparison. Working with <code>int</code>s fully suffices. Working with the inputs <code>char</code>s would be most efficient, but a bit tedious.</p>

<hr>

<p>To keep it simple:</p>

<pre><code>// updated via the `ScheduledThreadPoolExecutor`
private int year;
private int month;
private int day;

private static final Pattern DATE_PATTERN =
    Pattern.compile("\\s*(\\d{1,2})/(\\d{1,2})/(\\d{4}))\\s*");

public static boolean isValidDate(String date) {
    Matcher m = Pattern.matcher(date); // no trimming needed
    checkArgument(m.matches(), ...);
    int inputYear = Integer.parseInt(m.group(3));
    checkArgument(inputYear &gt;= 1, ...);

    int inputMonth = Integer.parseInt(m.group(1));
    checkArgument(inputMonth &gt;= 1 &amp;&amp; inputMonth &lt;= 12, ...);

    int inputDay = Integer.parseInt(m.group(2));
    checkArgument(inputDay &gt;= 1 &amp;&amp; inputDay &lt;= daysInMonth(inputYear, inputMonth), ...);

    if (inputYear &lt; year) return false;
    if (inputYear &gt; year) return true;

    if (inputMonth &lt; month) return false;
    if (inputMonth &gt; month) return true;

    return inputDay &gt; day;
}
</code></pre>

<p>I'm leaving <code>daysInMonth</code> as an exercise. :D You surely know that one-line conditionals are against the conventions (but I love them). <code>checkArgument</code> is from <a href="https://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/base/Preconditions.html" rel="nofollow">Guava</a>.</p>

<hr>

<p>As already said, solution reading the input char by char would be faster, but I'd go the opposite direction. Most probably, the speed is more than good enough, and the problem is called "stringly typed programming". Never use strings, when something better is available. Unfortunately, JDK <code>Date</code> is rather worse (worst class ever?), so if you don't want to use Joda, you should write your own. <em>Immutable</em>.This is rather trivial as long as you implement only what you really need and delegate to one the terrible JDK classes.</p>
    </div>