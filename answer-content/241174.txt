<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In general, the code is nice and readable.  Here's some small suggestions:</p>

<ul>
<li><p>This:</p>

<pre><code>for (unsigned long i = 0; i &lt; 7; i++) {
    int job;
    std::cin &gt;&gt; job;
    job_list.push_back(job);
}
</code></pre>

<p>can be simplified (?) to</p>

<pre><code>std::copy_n(std::istream_iterator&lt;int&gt;{std::cin}, 7, std::back_inserter(job));
</code></pre></li>
<li><p>Introduce variables when you use them.  For example, the declaration of <code>permutations</code> may be moved after reading and sorting the numbers.</p></li>
<li><p>Marking <code>original_permutation</code> as <code>const</code> indicates that it is used for comparison only.</p></li>
<li><p>Use <code>emplace</code>:</p>

<pre><code>permutations.emplace(job_list.begin(), job_list.begin() + 3);
</code></pre>

<p>instead of</p>

<pre><code>permutations.insert(std::vector&lt;int&gt;(job_list.begin(), job_list.begin() + 3));
</code></pre></li>
<li><p><code>const auto&amp;</code> in the <code>for</code> loops.  Also, <code>std::cout &lt;&lt; '\n'</code> instead of <code>std::endl(std::cout)</code>.</p></li>
<li><p>Consider extracting the functionality into a function and changing magic numbers to arguments.</p></li>
</ul>

<p>Of course, there are more efficient ways to do this.  Your code generates
<span class="math-container">$$ 7! = 7 \times 6 \times 5 \times 4 \times 3 \times 2 \times 1 = 5040 $$</span>
permutations, but only end up with
<span class="math-container">$$ 7^{\underline{3}} = 7 \times 6 \times 5 = 210 $$</span>
results, and let <code>std::set</code> discard the remaining <span class="math-container">\$5040 - 210 = 4830\$</span> permutations.  You can modify your code so that it only stores one in <span class="math-container">\$4! = 24\$</span> permutations, but the other answers to the <a href="https://stackoverflow.com/q/61392431">linked question</a> provide better algorithms.</p>
    </div>