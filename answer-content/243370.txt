<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I can't comment, but I have a question for you. </p>

<h1>Question</h1>

<p>Why don't you use the jeep id of Facebook as a unique key, this way duplicates will not be a problem.</p>

<h1>Now for the code review</h1>

<p>Notes:</p>

<ul>
<li>I saw other responses told you you have bugs in your code, I didn't check your code for bugs. But please follow their advice.</li>
<li>This is my add-on above all that was already been told by others.</li>
</ul>

<hr>

<ol>
<li><p>The first impression the code looks good for its purpose.
What I mean - the code is a small CRON script and therefore using a <strong>single file</strong> might be ok for the use-case. Although code tends to grow or even infrastructure might change. </p></li>
<li><p>The code is broken into meaningful functions and is easy to read. and it's ok because its a small CRON job otherwise another structure was required.</p>

<ul>
<li>For example the non-readable parts are some of the boilerplate code that is scattered around which is the misfortune of a single file.</li>
<li>Another example of such misfortune is not needing to be object-oriented and have a clear responsibility structure embedded which makes the code less readable.</li>
<li>Yet another - There is no sense of layers in your code, so it's just simple progressive programming. If it was part of a bigger project, I would expect it to use existing DB layers or other existing infrastructure and may be part of a single monorepo and layers would have been a must and different restructuring.</li>
</ul></li>
<li><p>Good use of promise &amp; await, but why not stick with one method? promisify the endpoints and keep the consistency of async/await from there on to the top level.</p></li>
<li><p>very important, I read another person told you the same thing, you didn't handle catch-all exception in one location.</p></li>
</ol>
    </div>