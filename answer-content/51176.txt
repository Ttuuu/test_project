<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The only thing that sticks out to me is in your save methods your not calling finally, and that is where your close call should be. This way if the <code>IOException</code> happens before close gets called your possibly holding a file handler open somewhere.</p>

<pre><code>// Method for saving files - Removes duplication of code
private void saveFile(File filename) {
    try {
        BufferedWriter writer = new BufferedWriter(new FileWriter(filename));
        writer.write(textArea.getText());
        saved = true;
        window.setTitle("JavaText - " + filename.getName());
    } catch (IOException err) {
        err.printStackTrace();
    }
    finally
    {
          writer.close();
    }
}

// Method for quick saving files
private void quickSave(File filename) {
    try {
        BufferedWriter writer = new BufferedWriter(new FileWriter(filename));
        writer.write(textArea.getText());
    } catch (IOException err) {
        err.printStackTrace();
    }
    finally
    {
         writer.close();
    }
}
</code></pre>

<p>See <a href="http://docs.oracle.com/javase/tutorial/essential/exceptions/finally.html" rel="nofollow">"The <code>finally</code> Block"</a></p>

<p>Do the same for your <code>FileReader</code>s as well.</p>
    </div>