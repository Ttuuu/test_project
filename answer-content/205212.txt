<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I rows are being added dynamically I would write a class to wrap each row of controls and respond to the combobox events.</p>

<p>Since there appears to be is a fixed number of rows, there is no reason to iterate over all the Controls in the userform.</p>

<p>These variables seem legacy code because they are set but never used.</p>

<blockquote>
<pre><code>Dim ctl As MSForms.Control
Dim lbl As MSForms.Label
Dim cmb As MSForms.ComboBox
Dim txtbox As MSForms.TextBox
Dim optbtn As MSForms.OptionButton
</code></pre>
</blockquote>

<p>This code is repeated several times.</p>

<blockquote>
<pre><code>If Controls("Item" &amp; i - 1).Value &lt;&gt; vbNullString Then
    Controls("OrderLbl" &amp; i).Enabled = True
End If
</code></pre>
</blockquote>

<p>The <code>If</code> statements can usually be eliminated when setting Boolean values.</p>

<blockquote>
<pre><code>Controls("OrderLbl" &amp; i).Enabled = Controls("Item" &amp; i - 1).Value &lt;&gt; vbNullString
</code></pre>
</blockquote>

<p>A helper variable would make the code even easier to read.</p>

<blockquote>
<pre><code>Enabled = Controls("Item" &amp;  i - 1).Value &lt;&gt; vbNullString
Controls("Qty" &amp; i).Enabled = Enabled
Controls("UnitPrice" &amp; i).Enabled = Enabled
Controls("SubTotal" &amp; i).Enabled = Enabled
Controls("Comments" &amp; i).Enabled = Enabled
</code></pre>
</blockquote>

<h2>Refactored Code</h2>

<pre><code>Private Sub UpdateItemsToClean()
    Const ItemCount As Long = 5
    Dim Enabled As Boolean
    Dim Index As Long
    Enabled = True
    For Index = 2 to ItemCount
        If Enabled Then Enabled = Controls("Item" &amp; Index - 1).Value &lt;&gt; vbNullString
        Controls("OrderLbl" &amp; Index).Enabled = Enabled
        Controls("Item" &amp; Index).Enabled = Enabled
        Controls("Qty" &amp; Index).Enabled = Enabled
        Controls("UnitPrice" &amp; Index).Enabled = Enabled
        Controls("SubTotal" &amp; Index).Enabled = Enabled
        Controls("Comments" &amp; Index).Enabled = Enabled
        Controls("OptionIn" &amp; Index).Enabled = Enabled
        Controls("OptionOut" &amp; Index).Enabled = Enabled
    Next
End Sub
</code></pre>
    </div>