<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, you can use the OR operand. It's idiomatic to mean "either get the value of a variable or a fallback value, if falsey"</p>

<pre><code>assignment = someVariable || "fallback value"
</code></pre>

<p>Since you're checking <code>this.state.data</code> every time, it's better to either check it once </p>

<pre><code>const data = this.state.data || {}
</code></pre>

<p>and then use that</p>

<pre><code>var assigned = data.assigned || 1,
    delivered = data.delivered || 1,
    unassigned = data.unassigned || 1,
    pending = data.pending || 1,
    total = data.total || 1,
    failed = data.failed || 1;
</code></pre>

<p>This will leave <code>this.state.data</code> untouched, you are just working with a <em>different</em> variable called <code>data</code>. </p>

<p>Alternatively, you can directly check and possibly initialise <code>this.state.data</code>, assuming that doesn't lead to problems with any other potential initialisation.</p>

<pre><code>this.state.data = this.state.data || {}
</code></pre>

<p>and then you can check <code>var assigned = this.state.data.assigned || 1</code> and so on.</p>

<p>Note that this style will give you the fallback if the current value is <em>falsey</em>. This includes an empty string or the number zero. If those are valid values, then you should not be using the OR operator to get them. For example, with <code>this.state.data.failed = 0</code> the expression <code>failed = this.state.data.failed || 1</code> will give you <code>1</code>. In that case, you might need to write a custom function to get the value or get a default value. If you have Lodash, you can use <a href="https://lodash.com/docs/4.17.11#get" rel="nofollow noreferrer"><code>_.get()</code></a> for that purpose.</p>

<p>If you are using ES6, then this can be drastically shortened using a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" rel="nofollow noreferrer">destructuring assignment</a> with default values</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const data = { assigned: 5, delivered: 10, total: 42 };

let { 
  assigned = 1, 
  delivered = 1, 
  unassigned = 1, 
  pending = 1, 
  total = 1, 
  failed = 1 
} = data;

console.log("assigned", assigned);
console.log("delivered", delivered);
console.log("unassigned", unassigned);
console.log("pending", pending);
console.log("total", total);
console.log("failed", failed);</code></pre>
</div>
</div>

    </div>