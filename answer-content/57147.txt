<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>We know that we can move a pointer forward and backward, and we also know that we can trim a string from the left.  If we increment the pointer and decrement the pointer to trim from the right, then two <code>while</code> loops are enough.  You'll notice that the right walk count is less than the left walk count.</p>

<p>Right-trim code:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;ctype.h&gt;

void trim_both(char *, char *);

int main (void) {
    char title[100] = "                 My         long          string     ";
    char title_t[100] = "";

    (void) printf("String before left trim is:[%s]\n", title);
    trim_both(title, title_t);
    (void) printf("String after left trim is:[%s]\n", title_t);

}

// trim spaces from left
void trim_both(char *title_p, char *title_tp) {
    int flag = 0;

    // from left
    while(*title_p) {
        if(!isspace((unsigned char) *title_p) &amp;&amp; flag == 0) {
            *title_tp++ = *title_p;
            flag = 1;
        }
        title_p++;
        if(flag == 1) {
            *title_tp++ = *title_p;
        }
    }

    // from right
    while(1) {
        title_tp--;
        if(!isspace((unsigned char) *title_tp) &amp;&amp; flag == 0) {
            break;
        }
        flag = 0;
        *title_tp = '\0';
    }
}
</code></pre>
    </div>