<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>Using <code>sorted()</code> returns a new object but such isn't necessary in this case. You can use <code>sort()</code> directly on the <code>CharArray</code>.</p></li>
<li><p>You can reduce duplicated code by using classes and/or extension functions. e.g.:</p>

<pre><code>fun String.toSortedCharArray() = toCharArray().apply(CharArray::sort)
</code></pre></li>
<li><p>I recommend building each line and printing it atomically instead of printing it in segments. e.g.:</p>

<pre><code>val message = dictionary.filter { it.length == word.length }
        .filter { it.toSortedCharArray() contentEquals sortedCharArray }
        .joinToString(separator = " ")
println(message)
</code></pre>

<p>This also prevents printing a trailing space.</p></li>
<li><p>You don't need to re-read "dict.txt" as it doesn't change with each word.</p></li>
</ol>

<p>Altogether:</p>

<pre><code>val dictionary = File("dict.txt").readLines()
val wordList = File("wordList.txt").readLines()
fun String.toSortedCharArray() = toCharArray().apply(CharArray::sort)
for (word in wordList) {
    val sortedCharArray = word.toSortedCharArray()
    val message = dictionary.filter { it.length == word.length }
            .filter { it.toSortedCharArray() contentEquals sortedCharArray }
            .joinToString(separator = " ")
    println(message)
}
</code></pre>
    </div>