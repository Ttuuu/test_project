<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You already got some advice on coding style. however there is a big flaw in your algorithm which is not addressed by the accepted answer.</p>

<p>you try to iterate downward to get an effective implementation but you got the inner loop wrong. while you expect the outer loop to do few iterations your inner loop does check relatively low numbers early. you tried to limit that by stopping the iteration at 900, a magic value without reasoning. so your implementation may give wrong results as a pair of 901*901 is much smaller than a lot of untested pairs. you need at least a check if your product is bigger than the biggest untested one 999*900.</p>

<p>on the other hand if we do the inner loop right all problems are gone. we use the outer loop for the lower value and the inner loop for the greater one. we do not need an arbitrary limit any more and we are quite efficient.</p>

<pre><code>for i in range(999,99,-1):
    for j in range(999,i-1,-1):
        # check palindrome
</code></pre>

<p>again we do not want to collect all palindromes but only the biggest one. we can abort safely when we cannot get a bigger product than the current maximum one.</p>

<pre><code>def is_palindrome(n):
    s = str(n)
    return s == s[::-1]

def get_biggest_palindrome():
    max_product = 0
    for i in xrange(999, 99, -1):
        if max_product &gt;= 999*i:
            # no need to iterate further down
            break
        for j in xrange(999, i-1, -1):
            p = j * i
            if max_product &gt;= p:
                # no need to iterate further down
                break
            if is_palindrome(p):
                max_product = p
    return max_product
</code></pre>

<p>I did some other minor changes:</p>

<p><code>is_palindrome</code> - i like to name functions after what they return so the usage reads like a natural language sentence.</p>

<p>in python2 you should use <code>xrange()</code> instead of <code>range()</code> if you do not need a real list but just an iterator.</p>

<p>what you could do also:</p>

<p>make the magic numbers <code>999</code> and <code>99</code> constants and/or pass them as parameters. if it is about the number of digits you could define them as <code>10**(digits+1)-1, 10**digits-1</code> and pass digits as single parameter.</p>
    </div>