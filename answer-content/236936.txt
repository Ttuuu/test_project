<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think that <code>10</code> and <code>11</code> are confusing values, and it might be more readable to have them either calculated or more explicitly expressed.</p>

<p>As you say, an ace can be either <code>1</code> or <code>11</code>.</p>

<p>In addition, a valid hand cannot exceed <code>21</code>.</p>

<p>I'd expect the code to have <strong>only</strong> those values hard coded (as constants or something similar).</p>

<p>If you want to implement it in an object oriented way (might not be the best idea here), then all of the cards are an instance of a class, which has the following methods:</p>

<ul>
<li><code>has_alternative_value</code></li>
<li><code>get_regular_value</code></li>
<li><code>get_alternative_value</code></li>
</ul>

<p>Only the ace would return <code>True</code> to <code>has_alternative_value</code> and so forth.</p>

<p>Having it implemented like that, the code would only have to deal with the magic number <code>21</code>, and you wouldn't have <code>10</code> and <code>11</code> magic numbers.</p>

<p>While this sounds like over-engineering, I think that the main idea could be implemented in a simpler way. I don't have the time to write the entire solution myself, but I hope you catch my drift.</p>

<p>Good luck :)</p>
    </div>