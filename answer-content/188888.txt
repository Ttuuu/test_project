<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have way overcomplicated <code>minDepth()</code>:</p>

<pre><code>/* 
 * A recursive function returns the shortests distance
 * from the root node to a leaf
 */
int minDepth (Node *root)
{
    if (root == NULL) {
        return 0;
    }
    return 1 + MIN(minDepth(root-&gt;l), minDepth(root-&gt;r));
}
</code></pre>

<p>(but see the notes below on the <code>MIN()</code> macro expanding its arguments multiple times)</p>

<p>Your <code>insertNewNumber()</code> leaks very badly. You are creating a new node on each call. But only putting it in the tree at the root.</p>

<pre><code>void insertNewNumber(Node **root, int value)
{
    (*root) = insertNewNumberAtLeaf(*root, value);
}
Node* insertNewNumberAtLeaf(Node *root, int value)
{
     if (root == NULL) {
         return createNode(value);
     }
     if (root-&gt;val &gt; value) {
         root-&gt;right = insertNewNumberAtLeaf(root-&gt;right, value);
     }
     else {
         root-&gt;left  = insertNewNumberAtLeaf(root-&gt;left,  value);
     }
     return root;
}
</code></pre>

<p>I think your definition of <code>MIN</code> and <code>MAX</code> is wrong.</p>

<pre><code>#ifndef MIN
    #define MIN(X, Y) (((X) &gt; (Y)) ? (X) : (Y))
#endif
#ifndef MAX
    #define MAX(X, Y) (((X) &lt; (Y)) ? (X) : (Y))
#endif
</code></pre>

<p>Also if they are already defined is it OK to continue? Do you think everybody has the same definition as you? If either of these is already defined I would error out rather than continue.</p>

<p>I would also note that these macros make you call the function multiple times.</p>

<p>Taken from your code:</p>

<pre><code> return MIN(isMaxHeap(root-&gt;r), isMaxHeap(root-&gt;l));
</code></pre>

<p>This expands to:</p>

<pre><code> return (((isMaxHeap(root-&gt;r)) &gt; (isMaxHeap(root-&gt;l))) ? (isMaxHeap(root-&gt;r)) : (isMaxHeap(root-&gt;l)));
</code></pre>

<p>The compiler can't assume the function returns the same value each time (unless it is doing a lot of extra analysis). So this would be equivalent to:</p>

<pre><code> int tmpL = isMaxHeap(root-&gt;r);
 int tmpR = isMaxHeap(root-&gt;l);

 // Then call again to get the result.
 int rest = (tmpL &gt; tmpR) ? isMaxHeap(root-&gt;r) : isMaxHeap(root-&gt;l);
 return rest;
</code></pre>
    </div>