<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Elaborating on RoToRa's comments:</p>

<ol>
<li><p>If you are going to build a string by concatenation, then using a string builder like that only improves performance if there is a loop.  That doesn't apply here.  So your code could be written as:</p>

<pre><code>String logString = "Request URL: ") + uri + " Query String: " + queryString
        + " Session Id: " + httpRequest.getRequestedSessionId() + " Took: "
        + (endTime - startTime) + " milliseconds. " + " StartTime: "
        + startTimestamp 
        + (httpRequest.getMethod().equals("POST") ? 
              httpRequest.getParameterMap() : "");
LOG.info(logString);
</code></pre></li>
<li><p>You should be using a format String and parameters; e.g.</p>

<pre><code>LOG.info("Request URL: {} Query String: {} Session Id: {} Took: {} " +
         "milliseconds. StartTime: {} {}",
         uri, queryString, httpRequest.getRequestedSessionId(), 
         (endTime - startTime), startTimestamp,
         (httpRequest.getMethod().equals("POST") ?
              httpRequest.getParameterMap() : ""));
</code></pre>

<p>This is not just neater.  It is also a lot more efficient, since the work of interpolating the parameters into the format will <em>only</em> happen if "info" level logging is enabled.</p>

<p>(Just using <code>String.format</code> is not the solution ...)</p></li>
</ol>
    </div>