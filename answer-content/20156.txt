<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>profile it!</li>
<li><p>it's a good choice to use a <code>std::deque</code> (which is the default container used by <code>std::queue</code>) instead of a <code>std::vector</code>. The potentially expensive operations (again, you should profile to confirm this) are <code>push_back()</code> and <code>pop_front()</code> (<code>back()</code> is likely to be constant time for almost any container)</p>

<ul>
<li><code>std::vector</code> has amortized constant time <code>push_back</code>, but <code>push_front</code> is linear time
<ul>
<li>NB. this is because it has to move each of <em>n-1</em> items forward one space, but it does <em>not</em> have to reallocate</li>
</ul></li>
<li><code>std::deque</code> has amortized constant time <code>push_back</code> <em>and</em> <code>push_front</code>, so is probably faster</li>
</ul>

<p>I'm going to say it again though - you should profile both choices and verify this. Even if the asymptotic complexity is better for <code>std::deque</code>, the constant overhead is greater, and that could dominate depending on your data size</p></li>
<li><p>do you actually use <code>closedList</code> for anything? It looks like you only ever use the back, in which case you could replace it with a single <code>Point</code></p></li>
</ol>
    </div>