<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some points in addition to jlowe's excellent and comprehensive answer 
(and I'll mainly use the already suggested improved property names):</p>

<p>We care only about <em>distinct</em> guessed letters (even if the user guesses
the same letter twice), therefore a <em>set</em> is a more appropriate data
structure than an array:</p>

<pre><code>var guessedLetters: Set&lt;Character&gt;

mutating func playerGuessed(_ letter: Character) {
    guessedLetters.insert(letter)
}
</code></pre>

<p>Instead of the string interpolation in</p>

<pre><code>guessedAnswer += "\(letter)"
</code></pre>

<p>one can append a character directly:</p>

<pre><code>guessedAnswer.append(letter)
</code></pre>

<p>Using the conditional operator <code>?:</code> the computed property can be simplified
to</p>

<pre><code>var guessedAnswer: String {
    var guessedAnswer = ""
    let answer = correctAnswer.lowercased()
    for letter in answer {
        guessedAnswer.append(guessedLetters.contains(letter) ? letter : "_")
    }
    return guessedAnswer
}
</code></pre>

<p>But what that actually does is to <em>map</em> each character of the correct answer
to a new character, and that's what <code>map()</code> is for:</p>

<pre><code>var guessedAnswer: String {
    return String(correctAnswer.lowercased()
        .map { guessedLetters.contains($0) ? $0 : "_" })
}
</code></pre>

<p>Finally, in</p>

<pre><code>currentGame = Game(correctWord:word, image:value, guessedLetter: [])
</code></pre>

<p>the default memberwise initializer is used. But there should be no need to
pass an empty list as the last argument. Better set an initial value
for that property, and define an <code>init</code> method:</p>

<pre><code>struct Game {
    let correctAnswer: String
    let image: UIImage
    var guessedLetters = Set&lt;Character&gt;()

    init(answer: String, image: UIImage) {
        self.correctAnswer = answer
        self.image = image
    }

    // ...
}
</code></pre>

<p>and create new instances with </p>

<pre><code>currentGame = Game(answer: word, image: image)
</code></pre>
    </div>