<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Nothing happens!</h3>

<p>When I ran the script my first thought was that it had hung because
nothing happened. Apparently the calculations are just slow on my
computer.</p>

<p>To reassure the user that the program is working, have some output
indicating progress. Here's how I added it, but you can make it way
fancier with progress bars and stuff:</p>

<pre><code>n_reports = 20
for i in range(max_iter):
    if max_iter &gt;= n_reports and i % (max_iter // n_reports) == 1:
        print(f'{(i * 100 // max_iter)}% ', end = '', flush = True)
    ...
print('100%')
</code></pre>

<p><code>n_reports</code> is the number of times the completion percentage is
printed. An impatient user wants it printed more often, a patient one
(or one with a faster computer) wants it printed less often.</p>

<h3>Temporary directories</h3>

<p>Python has a module for temporary files and directories which you
should use instead of creating your own. Also, never change the
process current working directory (the <code>chdir</code> call) unless you have
to. It can cause very strange problems.</p>

<p>The <code>tempfile</code> and <code>pathlib</code> modules simplifies file handling:</p>

<pre><code>if visual:
    save_dir = pathlib.Path(tempfile.mkdtemp())
...
for i in range(max_iter):
    ...
    if visual:
        ...
        fig_name = f'{i:05}.png'
        plt.savefig(save_dir / fig_name)
...
if visual:
    frames = sorted([f.resolve() for f in save_dir.iterdir()])
    frames = [imageio.imread(frame) for frame in frames]
    image_file = save_dir.name + '.gif'
    imageio.mimsave(image_file, frames)
    print(f'Saved image as {image_file}')
</code></pre>

<p>I also made it so that filenames are padded with zeroes. That way, you
can rely on the lexicographical order and you don't have to write your
own key function.</p>
    </div>