<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>it seems you just need a dispatcher and some msghanlders., not many dispatchers.
the codes can modify like this:</p>

<pre><code>class BaseDispatcher
{
public:
    BaseDispatcher()          = default;
    virtual ~BaseDispatcher() = default;

    result_t Init(uint8_t idx)
    {
        //msgHandler.Init(idx);
        //to init pmsgHandlerVec
    };

    void Execute(MainControl &amp;ctrl)
    {
        for (int i = 0; i &lt; pmsgHandlerVec.size(); ++i)
        {
            BaseHandler* phandler = pmsgHandlerVec[i];
            bool res = phandler-&gt;handle_msg(txMsg, ctrl);
            if (res)
            {
                break;
            }
        }
    };

protected:
    MsgInfo         txMsg;
    std::vector&lt;BaseHandler*&gt;      pmsgHandlerVec;
    static const char* sw = "Embedded Test Program";
};

class BaseHandler
{
    public:
        virtual bol handle_msg(const MsgInfo &amp;msg, MainControl &amp;ctrl) = 0;
}

class Handler1 : public BaseHandler
{
    public:
        virtual bool handle_msg(const MsgInfo &amp;msg, MainControl &amp;ctrl)
        {
            switch (msg.msgID)
            {
            case REQ_PING:
                HandlePing(msg);
                break;
            case REQ_VERSION:
                HandleVersion(msg);
                break;
            default:
                return false;
            }
            return true;
        }
}

class Handler2 : public BaseHandler
{
    public:
        virtual bool handle_msg(const MsgInfo &amp;msg, MainControl &amp;ctrl)
        {
            switch (msg.msgID)
            {
            case INFO_TEMP:
                HandleTemperature(msg, ctrl);
                break;
            default:
                return false;
            }
            return true;
        }
} 

Class MainController()
{
    public:
        Execute()
        {
            dispatcher.Execute(*this);
        }
    protected:
        BaseDispatcher   dispatcher;
}
</code></pre>
    </div>