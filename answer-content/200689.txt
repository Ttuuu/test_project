<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In order to improve the performance of your script you should read cell values from an array that represents the entire range that your are going to scan.</p>

<p>This means that instead of repetedly calling</p>

<blockquote>
<pre><code>var status = sheet.getRange("F"+i).getValue(); //Get the value of the cell.
</code></pre>
</blockquote>

<p>you should get everything in a single call like <a href="https://developers.google.com/apps-script/reference/spreadsheet/sheet#getrangerow-column-numrows-numcolumns" rel="nofollow noreferrer">this one</a></p>

<pre><code>var values = getRange(row, column, numRows, numColumns).getValues();
</code></pre>

<p>it'll give you an array that you can iterate very fast. Example:</p>

<pre><code>for (var row in values) {
  for (var col in values[row]) {
      ...
  }
}
</code></pre>

<hr>

<p>Hiding rows can be a little bit tricky if you want to optimize it becasue it requries some additional work. If you do it for each row separately then you'll loose some performance agian. This means that this is not good:</p>

<blockquote>
<pre><code>sheet.hideRows(i); // Hide the row
</code></pre>
</blockquote>

<p>In my scripts that work with a few hundereds or thousands rows hiding some of them lasts no longer than 1-2 seconds.</p>

<p>Here's how it goes:</p>

<p>I have a special column that I call <code>Visible</code> (or whatever). I use it to store a <code>boolean</code> value.</p>

<p>When I run a loop I store the flag in a second array like <code>var visibles = [];</code> instead of calling <code>hideRows</code> each time.</p>

<p>After the loop is finished I update the <code>Visible</code> column with:</p>

<pre><code>// update row visibility
var visibleRange = sheet.getRange(row, column, numRows, numColumns);
visibleRange.setValues(visibles);
</code></pre>

<p>This runs super fast.</p>

<p>Next you have to <em>unhide</em> all rows with:</p>

<pre><code>// show all rows
sheet.showRows(rowIndex, numRows);
</code></pre>

<p>You have to sort them by visibility:</p>

<pre><code>// sort by 'visible' and make 'true' (visible) rows first
sheet.sort(..., false);  
</code></pre>

<p>Sorting is necessary so that you can finally hide an entire range in a blink of an eye:</p>

<pre><code>// hide 'false' (not-visible) rows
var rangeToHide = sheet.getRange(.., .., ..);
SpreadsheetApp.getActiveSpreadsheet().hideRow(rangeToHide);
</code></pre>

<p>If you need a different order you can sort it again after hiding.</p>

<p>With this solution it requires just a couple of calls which will make your script really smooth.</p>

<hr>

<p>You can read about a couople more optimization tipps on <a href="https://developers.google.com/apps-script/guides/support/best-practices" rel="nofollow noreferrer">Google Apps Script - Best Practices</a></p>
    </div>