<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The parms array could be initialized like this:</p>

<pre><code>new SqlParameter("@REMOTE_ADDR", SqlDbType.NVarChar,15) { Value = HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"] }
</code></pre>

<p>It gives minimal performance gain, cause you don't need to access the array members, and it becomes more robust against the order of parameters. You could add a new one on top, without the need to change the indexes of all the other ones.</p>

<p>This is useless</p>

<pre><code> SqlDataReader dr = null;
</code></pre>

<p>it can be done right here:</p>

<pre><code> var dr =  sqlh.ExecuteReaderStoreProcedure("usp_InsertFileLocation", parms);
</code></pre>

<p>It's still useless, you can omit the entire dr variable.</p>

<p>In general I cannot see what this routine is doing. Does it a Query or an Insert on the Database. It Executes a Reader, but there's something called "InsertFileLocation". So this need at least some comment. For a clear design you might divide Taking the Request and Storing something in two different routines. Cause you should be able to test it separately.</p>

<p>If you have a HttpContext as a Parameter, why do you access the static variable HttpContext.Current. It is probably the same reference, but it's not good habit to use a static workaround if you already have a local parameter with the same content.</p>
    </div>