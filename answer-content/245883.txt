<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p><strong>Use Booleans instead of Integers:</strong> The code uses integers to check if a cell is occupied or not. Example: Replace <code>I = [1,1,1,1]</code> with <code>I=[True,True,True,True]</code></p>
</li>
<li><p><strong>Mark internal functions with underscores:</strong> By python convention, any function that is not meant to be invoked from outside the class is usually marked with underscores. Example: Replace <code>def addPiece(...)</code> with <code>def _addPiece_(...)</code>.</p>
</li>
<li><p><strong>Use meaningful variable names:</strong> Use meaningful names for variables (including iterator variables) Don't use arbitrary names like i or j. Looking at the variable names, it isn't clear whether <code>doesThePieceFit</code> validates columns at all</p>
</li>
<li><p><strong>Handling invalid input:</strong> You can return an error value (throw a python error or return integer value -1) for invalid inputs. (Such as I9 on a size 10 board)</p>
</li>
</ol>
<hr>
<p>Also, if you can change the input format, you can make some minor changes to make this code more useful. You can change the constructor to <code>__init__(self,size)</code> instead of fixing the size to 10. Also, you can change the input format from string <code>"Q0,Q2"</code> to list <code>[["Q",0],["Q",2]]</code></p>
    </div>