<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Comments are good.</h3>

<ul>
<li>Provide a module level doc string describe what the program does or provide a link to wikipedia</li>
<li>What are the fields in the tuples in TOMATO (I think RGB color and a display string)</li>
<li>Why are some fields in TOMATO empty strings or just spaces?</li>
<li>maybe define RED = "#ff0000" and GREEN = "#00cc00" and use RED or GREEN in TOMATO</li>
<li>same for LOCATIONS</li>
</ul>

<p>IntEnum is intended for when you need to be able to use the enums as integers.  Your code doesn't use that feature.  So consider just using Enum.</p>

<h3>Enum</h3>

<p>Enum members are hashable and can be used as dictionary keys like so:</p>

<pre><code>TEXT = {
    TaskStatus.NONE: "",
    TaskStatus.STARTED: "",
    ...etc...
}
</code></pre>

<h3>@property</h3>

<p>Although @property is designed so that it can be used to make "read-only" attributes in Python, I don't think that is considered to be Pythonic.  It is more Pythonic to just access attributes directly.  Properties are more often used when you need to do some calculations when setting or getting the value of an attribute.  And you don't need to create properties unless and until you need them.</p>

<h3>State machine</h3>

<p>Clever use of <code>itertools.cycle()</code> for the progress indicator.  But does each state instance need its own?</p>

<p><code>InitialState.time_remaining()</code> returns "Press [Start]", which doesn't seem like a remaining amount of time.</p>

<p><code>IntermediateState.start()</code> calls <code>self._next_factory()</code> which is set to <code>None</code> in <code>__init__()</code>.  Perhaps it would be good to check that <code>_next_factory</code> was initialized.  This is in several places.</p>

<p>I don't see the benefit of the <code>transition_to()</code> method.  I would just use a <code>next_state</code> parameter in <code>__init__()</code>.  Similarly for <code>return_to()</code>.</p>

<p>I found the state transitions hard to follow, so you might want to document that somewhere for future reference.</p>

<p>If you don't want to roll your own, <a href="https://github.com/pytransitions/transitions" rel="nofollow noreferrer">transitions</a> is a nice state machine library.</p>
    </div>