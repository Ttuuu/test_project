<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Thanks <a href="https://codereview.stackexchange.com/users/98493/graipher">@Graipher</a> &amp; <a href="https://codereview.stackexchange.com/users/42401/peilonrayz">@Peilonrayz</a> for taking time to answer my question. Yesterday around 7PM IST I discussed this with my brilliant friend Abhay, who gave me a clue on how this can be solved with just <span class="math-container">\$O(n)\$</span> complexity.</p>

<p>To keep the question in mind:</p>

<blockquote>
  <p>Find the maximum product of <code>y</code> positive numbers which adds up to <code>x</code>.</p>
</blockquote>

<p>This is how he explained it to me:</p>

<blockquote>
  <p>If we observe the pattern of tuples that qualify for the output, we can easily see that all the values lie closer to <span class="math-container">\$\frac{x}{y}\$</span>.
  See for the pairs:</p>

<pre><code>| Pairs    | Solution Tuple                                | Max Product |
|----------|-----------------------------------------------|-------------|
| (14, 7)  | (2, 2, 2, 2, 2, 2, 2)                         | 128         |
| (20, 15) | (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2) | 32          |
| (13, 4)  | (3, 3, 3, 4)                                  | 108         |
| (5, 3)   | (1, 2, 2)                                     | 4           |
</code></pre>
  
  <p>If we take a even closer look we find that those values in the tuple are either <a href="https://en.wikipedia.org/wiki/Floor_and_ceiling_functions" rel="nofollow noreferrer">ceil(<span class="math-container">\$\frac{x}{y}\$</span>)</a> or <a href="https://en.wikipedia.org/wiki/Floor_and_ceiling_functions" rel="nofollow noreferrer">floor(<span class="math-container">\$\frac{x}{y}\$</span>)</a>.
  And the last individual element is what is left off in sum.</p>
</blockquote>

<p>Hence the program according to him was:</p>

<pre class="lang-py prettyprint-override"><code>from math import floor, ceil

for t in range(int(input()):
    x, y = map(int, input().split())
    psum, product = 0, 1
    for i in range(y):
        if i == y-1: product *= x - psum
        else:
            num = x/y
            num1, num2 = floor(num), ceil(num)
            psums, product = (psum+num1, product*num1) if abs(num - num1) &lt; abs(num - num2) else (psum+num2, product*num2)
    print(product)
</code></pre>

<p><a href="https://codereview.stackexchange.com/users/13301/rbarryyoung">@RBarryYoung</a>'s comment came close but I think x's and y's got messed up... (please correct me if it is not so).</p>

<p>I've never seen how well this answer fares @Peilonrayz's solution, but I would love to get some insight on it.</p>
    </div>