<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Short and sweet is best.</h2>
<p>Your statement</p>
<blockquote>
<p><em>"The main benefit I see here is that anybody reading the code can skim to the last line and know the overall purpose"</em></p>
</blockquote>
<p>That makes no sense at all, you say all that is needed to understand the functions is</p>
<pre><code>$scope.emailList = emailListUpdate;
</code></pre>
<p>Nobody jumping into someone else code will just skim, the only people that skim code are those that know the code.</p>
<p>You can make a few assumptions.</p>
<ul>
<li>All that read your code are competent coders.</li>
<li>All that read your code have read the project specs.</li>
<li>Every line of code will be read by a coder new to the code.</li>
</ul>
<h2>Example</h2>
<p>The best code is brief as possible without being a code golf entrant.</p>
<p>Notes</p>
<ul>
<li>Why <code>innerHTML</code>, should it not be <code>textContent????</code></li>
<li>This function is not a toggle. It is based on selection value.</li>
<li>The ternary expression is too long, break the line so it does need to be scrolled</li>
<li>The ternary has a syntax error. Misplaced <code>;</code></li>
<li>the <code>;</code> on the last line after "}" is redundant.</li>
</ul>
<p>Code, best option.</p>
<pre><code>$scope.selectEmailUsers = event =&gt; {
  $scope.selection = event.target.textContent;
  $scope.emailList = $scope.selection === "Select All" ? 
       $scope.users.filter(user =&gt; !user.report.emailed); : [];
  //                                                    ^ remove syntax error
}; // &lt;&lt; remove the ;
</code></pre>
    </div>