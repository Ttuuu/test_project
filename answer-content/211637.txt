<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Don't put everything into one big <code>main()</code></h1>

<p>If you can separate out the reading of inputs and writing of results from the actual multiplications, then it will be easier to test the multiplication code separately.</p>

<h1>Avoid non-standard libraries</h1>

<p>Here we have <code>"stdafx.h"</code> and <code>scanf_s</code> that aren't part of standard C++.  Ditch those and use the standard facilities (e.g. <code>std::cin &gt;&gt; a[j][l]</code>).</p>

<h1>Include what you use</h1>

<p>We don't seem to use <code>&lt;cmath&gt;</code> anywhere, so let's drop that.  We'll need <code>&lt;cstdio&gt;</code> for <code>std::printf()</code> - or switch to C++ style output using <code>&lt;iostream&gt;</code>.</p>

<h1>Avoid using the whole <code>std</code> namespace</h1>

<p>The <code>std</code> namespace isn't one of the few that's designed to be imported wholesale like that, and there's potential for name conflicts when moving to a new standards version.  Specify just the names you need, or just get used to writing <code>std::</code> - it's intentionally very short.</p>

<h1>Use C++ collections</h1>

<p>It's easier to work with the C++ collection types such as <code>std::array</code> or <code>std::vector</code> than with raw (C-style) arrays (which decay to pointers when passed as function arguments).</p>
    </div>