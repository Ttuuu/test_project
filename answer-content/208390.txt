<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome on Code Review</p>

<h2>Review</h2>



<pre><code>#define PRICE 45
#define CAPACITY 120
#define MAXDIGITS 5
</code></pre>

<ul>
<li>You define <code>PRICE</code> and <code>CAPATITY</code> as integers, but a price can have cents, and a bag can maybe contains more than a plain amount in pounds, maybe some ounces more. So you should use decimals here.</li>
</ul>



<pre><code>if ((argc &gt; 1) &amp;&amp; (argv[1] &gt; 0))
</code></pre>

<ul>
<li>Don't compare a <code>char*</code> to an <code>int</code>. This check doesn't insure that <code>argv[1]</code> is a valid number.</li>
<li>If the parameter isn't what you want, you can either print the usage and quit, or silently continue and ask for input.</li>
</ul>



<pre><code>val = strtol(argv[1], NULL, 0);
</code></pre>

<ul>
<li>You don't validate the program argument. <code>strtol</code> can silently fail and return "0". In this case, a good option would be to ask for a good input.</li>
<li><p>You parse the string to an unsigned integer; but the asked task stand asking a decimal number (and show "295.8" in the example). You could use <code>strtod</code> or <code>atof</code> but since you are a conscientious programmer, you want to check for validity.</p>

<p>So the combo <code>scanf</code>/<code>sscanf</code> (with <code>"%f"</code> or <code>"%lf"</code>)` are the solution. </p></li>
</ul>

<p></p>

<pre><code>do 
{
    printf("Please input the value of cement: ");
</code></pre>

<ul>
<li>Try to put a <code>\n</code>before your request. It will make the output more clear. Otherwise, it will print on the same line as last output.</li>
</ul>



<pre><code>scanf("%s", inp);
val = strtol(inp, NULL, 0);
</code></pre>

<ul>
<li>As above, use <code>scanf("%lf", ...)</code> instead (shorter, and you can check for errors)</li>
</ul>

<p></p>

<pre><code>int sum(int need)
</code></pre>

<p>Once what i said above is fixed (price and capacity as <code>double</code>) your function work fine. However, you can simplify it, by doing the computation in only one line (which can be simplified even more, with libmath).</p>

<p>Here's my corrected version:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

#define PRICE 45.
#define CAPACITY 120.

int sum(int);

int main(int argc, char *argv[])
{
    double need = 0.;

    if (argc &lt; 2 || sscanf(argv[1], "%lf", &amp;need) != 1) {
        while (printf("\nPlease input the amount of cement you need (e.g. 295.8): ") &amp;&amp; scanf("%lf", &amp;need) != 1) {
            for(int c = 0; c != '\n' &amp;&amp; c != EOF; c = getchar());
        } 
    }
    printf("For %.02lf pounds you need: $%.02lf!\n", need, PRICE * ((int)((int)(need / CAPACITY) * CAPACITY &lt; need) + (int)(need / CAPACITY)));

    // or with "#include &lt;math.h&gt;" and the compiler/linker flag "-lm"
    //printf("For %.02lf pounds you need: $%.02lf!\n", need, PRICE * ceil(need / CAPACITY));
    return 0;
}
</code></pre>
    </div>