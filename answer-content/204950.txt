<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Suppose that we wanted to add a new statistic, what would we have to do? Well, we'd need to make three changes: </p>

<ol>
<li><p>Compute the statistic and put its value in a new variable:</p>

<pre><code>new_statistic = data.loc[:, "area_hectares"].new_statistic()
</code></pre></li>
<li><p>Add the name of the new statistic to <code>results['Statistic']</code>. </p></li>
<li>Add the new variable to <code>results['Value']</code>. </li>
</ol>

<p>But when we do <em>1</em> and <em>3,</em> there's a risk that we might put the name and value in different positions in the lists, causing the tabulated output to be wrong.</p>

<p>To avoid this risk, we'd like to have a single place to put the information about the new statistic. There are two things to know about a statistic: its name, and which function to call to compute it. So I would make a global table of statistics, like this:</p>

<pre><code># List of statistics to compute, as pairs (statistic name, method name).
STATISTICS = [
    ('Average',          'mean'),
    ('Max',              'max'),
    ('Min',              'min'),
    ('Total',            'sum'),
    ('Count',            'count'),
    ('Count (distinct)', 'nunique'),
    ('Variance',         'var'),
    ('Median',           'median'),
    ('SD',               'std'),
    ('Skewness',         'skew'),
    ('Kurtosis',         'kurtosis'),
]
</code></pre>

<p>And then it's easy to build the <code>results</code> dictionary by iterating over the global table and using <a href="https://docs.python.org/3/library/operator.html#operator.methodcaller" rel="nofollow noreferrer"><code>operator.methodcaller</code></a>:</p>

<pre><code>from operator import methodcaller
column = data.loc[:, "area_hectares"]
results = {
    'Statistic': [name for name, _ in STATISTICS],
    'Value': [methodcaller(method)(column) for _, method in STATISTICS],
}
</code></pre>

<p>Now if we need to add a new statistic, we only need to make one change (adding a line to the <code>STATISTICS</code> list), and there's no risk of putting the name and value in different positions.</p>
    </div>