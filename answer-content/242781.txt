<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Please consider follow recommendations:</p>
<ol>
<li><p>Make habit of extracting each struct/class/enum in separate files which brings more readability and clarity. Code looks less cluttered.</p>
</li>
<li><p>Please try getting used to of not using semicolons :)</p>
</li>
<li><p>You have defined Events as a class with empty implementations of functions. Are you sure you want to do that, I think it could be converted as a protocol instead</p>
<p>To be able to inject different type of calendar APIs, you should define your own protocol and make concrete implementations for each calendar (Adapter Pattern).</p>
</li>
<li><p>You must use dependency injection. For example even things like <code>EKEventStore()</code> should be injected.</p>
<pre><code>final class iCal: Events {

    private let eventStore: EKEventStore

    init(with eventStore: EKEventStore = EKEventStore()) {
        self.eventStore = eventStore
    }
}
</code></pre>
</li>
<li><p>Using force unwrap is a bad practice, you should use <code>guard let</code> or <code>if let</code> to unwrap the optional value and only then use that unwrapped value for whatever purpose you want. By using forced unwrapping your app can crashes unexpectedly where it will find a nil value inside any optional variable.</p>
</li>
<li><p>Please make use of Swiftlint to make sure that your code is following standard convention. It will force you to think swift way :)</p>
</li>
<li><p>You should make class final when don't want to allow subclassing it (even if when you are not sure for now). If you do need subclassing later, you can remove <code>final</code> keyword.</p>
</li>
</ol>
<p>All the best!</p>
    </div>