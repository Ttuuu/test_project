<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Response to your prompt</h2>

<blockquote>
  <p><strong>Due to my lack of knowledge in JS I would like to know if this is a proper solution.</strong></p>
</blockquote>

<p>This code sets attributes on the elements to store properties. While this works, it technically leads to invalid HTML<sup><a href="https://stackoverflow.com/a/13041243/1575353">1</a></sup>. Alternatives include using <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes" rel="nofollow noreferrer">data attributes</a> and setting properties on the variable representing the element. See responses to <a href="https://stackoverflow.com/q/992115/1575353"><em>Custom attributes - Yea or nay?</em></a> and  <a href="https://stackoverflow.com/q/28650570/1575353"><em>Associate Data With HTML Element (without jQuery)</em></a></p>

<h2>Other review feedback</h2>

<p>Many developers believe it is good to move all JavaScript code out of the markup. So instead of the <code>onmouseover=...</code> and <code>onmouseout=...</code> attributes, you could register those event handlers in the JavaScript using <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener" rel="nofollow noreferrer"><code>EventTarget.addEventListener()</code></a></p>

<pre><code>document.addEventListener('DOMContentLoaded', function() {
  var image = document.getElementById('123');
  image.addEventListener('mouseover', rollover);
  image.addEventListener('mouseout', cancel);
});
</code></pre>

<p>With an approach like this, the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this" rel="nofollow noreferrer"><code>this</code></a> keyword inside the functions <code>rollover</code> and <code>cancel</code> refers to the element, so there isn't a need to accept the element as a parameter. If you did want to pass parameters to those functions, it could be achieved using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Partially_applied_functions" rel="nofollow noreferrer">partially applied-functions</a> with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind" rel="nofollow noreferrer"><code>Function.bind()</code></a>:</p>

<pre><code>  //set context of 'this' to the image and pass string literal '123' as the first parameter
  image.addEventListener('mouseover', rollover.bind(image, '123'));
</code></pre>

<hr>

<p>The <strong><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/id" rel="nofollow noreferrer"><code>id</code></a></strong> attribute can be used instead of <code>.getAttribute('id')</code>.</p>

<p>So instead of this line:</p>

<blockquote>
<pre><code>var id = element.getAttribute("id");
</code></pre>
</blockquote>

<p>the same can easily be achieved with:</p>

<pre><code>var id = element.id;
</code></pre>

<p>This may make assigning that value to a new variable superfluous. </p>

<p><sup>1</sup><sub><a href="https://stackoverflow.com/a/13041243/1575353">https://stackoverflow.com/a/13041243/1575353</a></sub></p>
    </div>