<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Another option:</p>

<p>I always like to keep the methods and as close to the domain model as possible. This way you don't have to go looking for (or remember) a service which can do the naming for you.</p>

<p>In this solution you'll see a GetName method on the Person class itself with an option to supply how you want to have the name formatted. </p>

<p>Now after constructing a Person instance, you don't need to go looking for a piece of code which can do the naming for you, the method is there, you just need to go and find implementations of the INamingFormatter class and choose the one you need.</p>

<pre><code>public class Person
{
    public string FirstName { get; private set; }
    public string MiddleName { get; private set; }
    public string LastName { get; private set; }
    public string Title { get; private set; }

    public Person(string title, string firstName, string middleName, string lastName)
    {
        Title = title;
        FirstName = firstName;
        MiddleName = middleName;
        LastName = lastName;
    }

    public Person(string firstName, string middleName, string lastName)
        : this(null, firstName, middleName, lastName)
    { }

    public string GetName(INamingFormatter namingFormatter)
    {
        return namingFormatter.Format(this);
    }
}
</code></pre>

<p>Interface:</p>

<pre><code>public interface INamingFormatter
{
    string Format(Person person);
}
</code></pre>

<p>Implementation:</p>

<pre><code>public class FullNameFormatter : INamingFormatter
{
    public static FullNameFormatter Instance = new FullNameFormatter();

    public string Format(Person person) =&gt; $"{person.FirstName} {person.MiddleName} {person.LastName}";
}
</code></pre>

<p>Call:</p>

<pre><code>class Program
{
    static void Main(string[] args)
    {
        var person = new Person("Mr", "Danial", "W", "Craig");

        var name = person.GetName(FullNameFormatter.Instance);

        Console.WriteLine(name);

        Console.WriteLine("Hello World!");
    }
}
</code></pre>
    </div>