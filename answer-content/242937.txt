<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>it is a bit hard to compare it with "standard code" if you only worked through first two chapters ;)</p>

<p>You should consider three principles in the following order:</p>

<ol>
<li>The code should work</li>
<li>The code should be readable</li>
<li>The code should be extendable</li>
</ol>

<p>Only the 1st is proofable. But maybe not that easy as one might think. Consider <a href="https://en.wikipedia.org/wiki/Edge_case" rel="noreferrer">edge cases</a> and errors. It takes some experience to know them. But usually something like </p>

<ol>
<li>Boundary values - e.g. 0 for a lower boundary</li>
<li>Wrong format of parameter e.g. <code>0,5</code> instead of <code>0.5</code> (for english local)</li>
<li>Input is out of allowed boundary</li>
</ol>

<p>There are a lot of ways to handle them, like to ask for a new value or to simply abort.</p>

<p>If your code is readable is matter of taste. I prefer short code blocks in methods that are named. Also repeated code should be avoided. 
That said here is my first concrete suggestion for you: There are common code blocks where you ask the user for a value (<code>System.out.print(...)</code>) and then read the value (<code>sc.nextDouble()</code>). You could combine them to a method, like</p>

<pre><code>private static double askForDouble(String label, Scanner scanner){
    System.out.print(label);
    return scanner.nextDouble();
}
</code></pre>

<p>which you can use then instead of every occurance:</p>

<pre><code>System.out.print("Days: ");
double day = sc.nextDouble();
</code></pre>

<p>becomes</p>

<pre><code>double day = askForDouble("Days: ", sc);
</code></pre>

<p>I would also put every calculation in separate functions although that would not give any benefit at the moment. But later you could write <a href="https://en.wikipedia.org/wiki/Unit_testing" rel="noreferrer">unit tests</a>.</p>

<p>There are more possible improvements, but you should go on with the tutorials to learn about them.</p>
    </div>