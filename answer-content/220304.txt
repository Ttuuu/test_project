<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Are you sure the bottleneck is the printing, as opposed to whatever <code>new ClassThatBuildsOnBuilder(builder);</code> is doing? </li>
<li>Is <code>coordinates</code> always going to have a width of four?</li>
<li>It appears you're building the whole string in memory, and then printing all your output at once at the end. While printing each line to standard-out individually may be slower, it also <em>may</em> take better advantages of the built-in output buffering. (Printing each word individually as you describe having originally done probably isn't a great idea.</li>
</ul>

<p>Would something like this work?</p>

<pre class="lang-java prettyprint-override"><code>  private void printRow(){
    System.out.format("#%.3f #%.3f #%.3f #%.3f%n",
      coordinates[0],
      coordinates[1],
      coordinates[2],
      coordinates[3]);
</code></pre>

<p>You could also try a <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter(java.lang.Appendable)" rel="nofollow noreferrer">Formatter</a>, which would let you use a StringBuilder as you already are, but also use printf syntax. </p>

<p>Finally, I don't know how to take manual control of System.out's buffering behavior, but it's probably possible and may help. </p>
    </div>