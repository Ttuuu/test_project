<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Please correct me if I got you wrong, but we're talking here about simple inheritance:  </p>

<pre><code>open class RealmObject {

    fun store() { /*RealmObject impl*/ } 

}

open class Player : RealmObject() {

    override fun store() { 
     /*Player impl*/ 
     super.store() /*RealmObject impl*/

   }
    ...
}
</code></pre>

<p>Your wanted behaviour fits:</p>

<pre><code>Player().store() // executes override function - Player impl, then RealmObject impl
RealmObject().store() // executes RealmObject implementation
</code></pre>

<hr>

<p><strong>If</strong> you want to keep it as <strong>extension functions, your code is valid</strong>, but isn't really an eye-candy.</p>

<p>Both classes <code>Player</code> and <code>RealmObject</code> would have the same function <code>store()</code>, but they are 'unrelated' - thats why we don't see any <code>override</code>. Extension functions extend statically and they can shadow your implementation, which makes your code very hard to read and the behaviour becomes at some point not understandable.</p>

<p>Please use extension functions wisely and try to never use it for inheritance.</p>
    </div>