<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The main issue with your code is repetition. The 4 methods calculating the result based on user input are sketched in the same way:</p>

<pre><code>public static void operation() {
    // get numbers
    // perform operation and print result
    // return to main loop
}
</code></pre>

<p>As a result, there is copy-pasted code inside those 4 methods.</p>

<p>The first remark is that all of them will need to get numbers from the user. Instead of having each of <code>addition</code>, <code>subtraction</code>, etc. to get the numbers, retrieve them before hand from the user. In the same way, all of them invoke <code>calculator();</code> to ask the user numbers again.</p>

<p>A first possiblity is therefore to have:</p>

<pre><code>int pick = askScanner.nextInt();

getNumbers();
// perform operation based on input
calculator();
</code></pre>

<p>with a sample operation being:</p>

<pre><code>public static void addition() {
    System.out.println("Addition");
    answer = firstNumber + secondNumber;
    System.out.println("This is the sum of the two numbers:  " + answer);
}
</code></pre>

<hr>

<p>That said, this still leaves a design issue:</p>

<pre><code>private static final Scanner askScanner = new Scanner(System.in);
public static double answer;
public static double firstNumber;
public static double secondNumber; //makes variables for the whole class
</code></pre>

<p>Having static global variables to keep the numbers input by the user <a href="https://stackoverflow.com/a/7026563/1743880">isn't a good idea</a>. What you want instead is to have local variables <a href="https://stackoverflow.com/a/7485927/1743880">with the minimum possible scope</a>.</p>

<p>You'll need to drop the method <code>getNumbers()</code> completely: it needs to have global variables (because it only returns one value and not the two). Also, the operation methods won't operate on the global variables anymore; instead, they will be given the two operands as parameter. And, lastly, they won't set the <code>result</code> global variable but <em>return</em> the result.</p>

<p>As such, the code would be:</p>

<pre><code>if (pick == 1) {
    addition(firstNumber, secondNumber);
} else if (pick == 2) {
    subtraction(firstNumber, secondNumber);
} else if (pick == 3) {
    multiplication(firstNumber, secondNumber);
} else if (pick == 4) {
    division(firstNumber, secondNumber);
} else {
    System.out.println("You need to choose 1, 2, 3, or 4");
}
</code></pre>

<p>with a sample operation being:</p>

<pre><code>public static double addition(double firstNumber, double secondNumber) {
    System.out.println("Addition");
    double answer = firstNumber + secondNumber;
    System.out.println("This is the sum of the two numbers:  " + answer);
    return answer;
}
</code></pre>

<hr>

<p>You could also consider using a <code>switch</code> instead of the <code>if/else</code> blocks:</p>

<pre><code>switch (pick) {
case 1: addition(firstNumber, secondNumber);
case 2: subtraction(firstNumber, secondNumber);
case 3: multiplication(firstNumber, secondNumber);
case 4: division(firstNumber, secondNumber);
default: System.out.println("You need to choose 1, 2, 3, or 4");
}
</code></pre>

<p>which makes the code a bit shorter.</p>

<hr>

<p>As a final note: your code is an infinite loop right now, the user has no way to exit. It would be nice to introduce an option giving the user the possibility to quit the program.</p>
    </div>