<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Pure JS vs jQuery</h2>

<p>Pure JavaScript will be significantly faster as you can see by <a href="http://jsperf.com/jquery-class-vs-getelementsbyclassname-class">this jsPerf</a> which pits <code>document.getElementByClassName</code> vs the jQuery selector. Here are the results for Chrome 25:</p>

<ul>
<li><code>$('.class')</code> - <strong>4355</strong> operations per second</li>
<li><code>getElementsByClassName('class')</code> - <strong>94636</strong> operations per second</li>
</ul>

<p>As you can see, for this simple operation the jQuery option is approximately 22 times slower than the pure-JavaScript equivalent. You can easily see why this is the case by checking out the <a href="http://code.jquery.com/jquery-1.9.1.js">jQuery development source</a>, since the jQuery 'selector function' is so general it needs to do a lot of checks to see what the input is before it can act upon it.</p>

<h2>Pure JS implementation</h2>

<p>I've left the jQuery <code>click</code> event in as it looks like you already have a dependency on jQuery so no point changing the way you're hooking up your events.</p>

<p><a href="http://jsfiddle.net/Tyriar/rs64D/">jsFiddle</a></p>

<pre><code>$("#Button").click(function() {
    var items = document.getElementsByClassName('class');
    for (var i = 0; i &lt; items.length; i++)
        alert(items[i].name);
});
</code></pre>

<h3>getElementsByClassName</h3>

<p>Also note that I used <code>getElementsByClassName</code>. It is pretty important to choose the ideal selector if you care about performance. Since we care about all elements with a certain class we can immediately dismiss the others like <code>getElementsByTagName</code> and <code>querySelectorAll</code> and opt for the function that was built for finding elements of a particular class.</p>

<h2>jQuery implementation</h2>

<p>This would be my implementation using jQuery, notice that I didn't bother getting the jQuery object for <code>this</code> (ie. <code>$(this)</code>) because the plain JavaScript attribute is much easier in this case.</p>

<p><a href="http://jsfiddle.net/Tyriar/BKCvh/">jsFiddle</a></p>

<pre><code>$("#Button").click(function() {
    $(".class").each(function() {
        alert(this.name);
    });
});
</code></pre>
    </div>