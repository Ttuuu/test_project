<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>Update the signature of the module to include your new properties.
This will let the compiler know about your new properties and will prevent it from throwing errors in the HTML template or in the <code>component.ts</code> file.</p>
<pre class="lang-javascript prettyprint-override"><code>declare module '@angular/forms' {
  interface AbstractControl {
    focused: boolean;
  }
}
</code></pre>
<p>I added <code>AbstractControl</code> because that is the base class that <code>FormControl</code> is built on and derives its properties from.</p>
</li>
<li><p>Add your new properties by extending the class, passing through <code>(...args)</code> for both the <code>constructor(...args)</code> and <code>super(...args)</code> calls.</p>
<pre class="lang-javascript prettyprint-override"><code>export class FormControlCustom extends FormControl {

  public focused: boolean = false;

  constructor(...args) {
    super(...args);
  }

}
</code></pre>
</li>
<li><p>Typecast your <code>FormControl</code>. Now all your <code>FormControlCustom</code> elements will have the new properties defined in the class which <code>extends FormControl</code> by default.</p>
<pre class="lang-javascript prettyprint-override"><code>sampleForm = new FormGroup({
    property: new FormControlCustom('', Validators.required)
});
</code></pre>
</li>
</ol>
<p>I tested this and it is working perfectly in Angular 9.</p>
    </div>