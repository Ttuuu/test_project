<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To make a fast logger you need to </p>

<ul>
<li>minimise the use of mutexes.</li>
<li>detach the logging from the writing.</li>
<li>minimise copying</li>
<li>pre-alloc the buffers

<ul>
<li>no allocs during logging.</li>
</ul></li>
<li>make a ring buffer

<ul>
<li>fixed number of logging</li>
<li>decide what should happen if its full</li>
<li>slightly slower using a dequeue with minimises allocs</li>
</ul></li>
<li>use atomic indexes to the (ring) buffer

<ul>
<li>if your system if fully loaded, you have to log often use the cv or wait until the logger thread gets scheduled by the OS.</li>
<li>use the cv.notice_one where the index is updated if the front is sufficient in front of the back end.</li>
</ul></li>
</ul>

<p>So a few of the things that are issues</p>

<ul>
<li>The logger_thread blocks further logging while it writes.</li>
<li>The write blocks other threads logging</li>
</ul>

<p>Running into a mutex that is taken causes a task switch, typically  taking from 1000ns to 22000ns on a x86, nearer the lower if its started again on the same hardware thread.</p>
    </div>