<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Another perhaps interesting option is using a <code>CopyOnWriteArrayList</code>:</p>

<pre><code>@Test
public void testCanRemoveFromCopyOnWriteArrayList() {
    List&lt;Integer&gt; nums = new CopyOnWriteArrayList&lt;&gt;(Arrays.asList(1, 2, 3, 4, 5));
    for (Integer num : nums) {
        if (num &lt; 3) {
            nums.remove(num);
        }
    }
    assertEquals(Arrays.asList(3, 4, 5), nums);
}
</code></pre>

<p>The downside is obvious, from the name of the class: it copies the underlying list before every write operation. This class is designed for <em>observer lists</em>, which are rarely modified and often traversed. I'm not sure if this applies to your case (if deleting from the list will be frequent or not), but I thought I'd mention this just in case.</p>
    </div>