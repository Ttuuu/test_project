<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here is a different possible approach:</p>

<pre><code>import java.time.*;

class Cal {
    public static void main(String[] args) {
        final LocalDate firstDate = LocalDate.of(Integer.valueOf(args[1]), Integer.valueOf(args[0]), 1);

        int firstDayOffset = firstDate.getDayOfWeek().getValue() - 1;
        for (int i = 0; i &lt; firstDayOffset; i++) {
            System.out.print("   ");
        }

        LocalDate aDate = firstDate.plusDays(0);
        while (aDate.getMonth() == firstDate.getMonth()) {
            System.out.printf("%2d ",aDate.getDayOfMonth());
            if ((aDate.getDayOfMonth() + firstDayOffset) % 7 == 0) {
                System.out.println("\n");
            } 
            aDate = aDate.plusDays(1);
        }

        System.out.println("\n");
    }
}
</code></pre>

<p>A sample run: <code>javac Cal.java; java Cal 12 2018;</code></p>

<pre><code>                1  2 

 3  4  5  6  7  8  9 

10 11 12 13 14 15 16 

17 18 19 20 21 22 23 

24 25 26 27 28 29 30 

31 
</code></pre>
    </div>