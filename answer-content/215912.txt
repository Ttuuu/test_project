<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your implementation will work nicely for integers, however, it might be doing a lot of copies which could hurt you for more expensive types.</p>

<p>An edge case that might sometimes be useful in case of calling this via a template: the min/max of 1 number.</p>

<p>Your noexcept is wrong in case of throwing copy constructors. You could change this to <code>noexcept(std::is_nothrow_copy_constructable&lt;T&gt;)</code> or fix the remark above and prevent copies.</p>

<p>Looking at the template arguments, you do allow T1 and T2 to be of a different type. I don't see much added value in that, as you would get an obscure error about the <code>?:</code> operator.</p>

<p>And to end with a positive note: I really like the constexpr. This allows you to write a unit test as a static_assert.</p>
    </div>