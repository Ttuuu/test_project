<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would go for</p>

<pre><code>interface Stack {
    boolean isEmpty();
    int pop();
    void push(int x);
}
</code></pre>

<p>And then make a class providing two Stacks.</p>

<p>Also create a counter to detect when both stacks are full. This can be done with an <code>AtomicInteger</code> (<strong>thread-safeness</strong>) counting the free array slots.</p>

<pre><code>public class StackPair {
    public final Stack firstStack = new Stack { ... };
    public final Stack secondStack = new Stack { ... };
    public StackPair(int capacity) { ... }
</code></pre>

<hr>

<p>In StackPair the single array and an AtomicInteger freeEntries. In both Stack implementations access to the array and freeEntries.</p>
    </div>