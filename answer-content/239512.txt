<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>When writing any kind of event method, I always try to minimize the code that executes because you don't want the user to be aware of processing that is happening between the keystrokes. In your case, your code is firing each time ANY cell on ANY sheet is changed. So in the spirit of keeping things streamlined, don't create, initialize, or perform any logic that you don't really need (until you need it). Using this philosophy, the beginning of my example method would look like this:</p>

<pre><code>If Sh.Name = "Response" Then Exit Sub

Dim checkCells As Range
Set checkCells = Union(Sh.Range("B3"), Sh.Range("B5"))
If Intersect(Target, checkCells) Is Nothing Then Exit Sub
If Target.Address = vbNullString Then Exit Sub
</code></pre>

<p>Notice that if the changed sheet is "Response", then initializing any other variable is meaningless. Once we get past that, a <code>checkCells</code> range is established using the <code>Union</code> function. It may be a bit overkill sometimes, but clearly illustrates the idea that you're looking at multiple, non-contiguous cells/ranges. </p>

<p>Also, from your OP code, if either cell is empty, you are immediately exiting. So you can check the target address after the other checks right away.</p>

<p>But then I get into an issue where you check if the cell value is null, but right away you're checking that it has a value:</p>

<pre><code>If Range("B3").Value = vbNullString Then Exit Sub
Application.EnableEvents = False
If Sh.Range("B3").Value &lt;&gt; vbNullString Then ...
</code></pre>

<p>This is redundant. And -- by the way -- you'll never get to your <code>Else</code> statement because you've already exited if B3 is a null string.</p>

<p>The statement in both parts of your <code>If</code> statement is confusing:</p>

<pre><code>Columns.ClearColumns
</code></pre>

<p><code>Columns</code> is a property of a <code>Range</code> or <code>Worksheet</code>, and <code>ClearColumns</code> is not a method of <code>Range</code> at all that I know of. So I'm assuming it's a part of the add-in. But if <code>Columns</code> is the name of one of your code modules, then change it. Using <code>Columns</code> is not a good name to use because it is the same as an existing property and is confusing. If you are clearing columns on a worksheet, then specify which worksheet <strong>always</strong>. I'm also assuming the <code>Transactions</code> is a code module in your VBA project as well.</p>

<p>Here is all of the code:</p>

<pre><code>Option Explicit

Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)
    If Sh.Name = "Response" Then Exit Sub

    Dim checkCells As Range
    Set checkCells = Union(Sh.Range("B3"), Sh.Range("B5"))
    If Intersect(Target, checkCells) Is Nothing Then Exit Sub
    If Target.Address = vbNullString Then Exit Sub

    Dim wsMyList As Worksheet
    Set wsMyList = ThisWorkbook.Sheets(2)

    Application.EnableEvents = False
    With Sh
        Dim lookupArea As Range
        If Target.Row = 3 Then
            Set lookupArea = wsMyList.Range("A:B")
            .Range("B4").Value = Application.WorksheetFunction.VLookup(Target.Value, _
                                                                       lookupArea, _
                                                                       2, False)
            .Range("B6").Value = "Type or Select a transaction"
            Columns.ClearColumns
            Transactions.FetchTransactions
        ElseIf Target.Row = 5 Then
            Set lookupArea = wsMyList.Range("D:E")
            .Range("B6").Value = Application.WorksheetFunction.VLookup(Target.Value, _
                                                                       lookupArea, _
                                                                       2, False)
            Columns.ClearColumns
            Columns.PopulateFields
        End If
    End With
    Application.EnableEvents = True
End Sub
</code></pre>
    </div>