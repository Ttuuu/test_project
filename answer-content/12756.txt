<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you are worried about modifying the array while looping, don't because foreach copies the array. Try </p>

<pre><code>$array = array('foo');
foreach ($array as $k =&gt; &amp;$item) {
  $array[] = 'bar';
}
var_dump($array);
</code></pre>

<p>And see it terminates just fine. <code>foreach ($array as $k =&gt; &amp;$v)</code> is a shorthand for <code>foreach (array_keys($array) as $k) $v = &amp;$array[$k]</code> so while there still is a copy of the array (that's why I used <code>&amp;$item</code> in my example so you can see, if you modify the array then it'll be modified in the reference!</p>

<pre><code>$array = array('foo', 'bar');
foreach ($array as $k =&gt; $item) {
  echo "$item\n";
  if (!$k) {
    $array[1] = 'baz';
  }
}
$array = array('foo', 'bar');
foreach ($array as $k =&gt; &amp;$item) {
  echo "$item\n";
  if (!$k) {
    $array[1] = 'baz';
  }
}
</code></pre>

<p>the first dump foo and bar, the second foo and baz.</p>
    </div>