<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let me introduce you to loops.</p>

<p>A loop is a very important element of a program, it can relieve us from most fatiguing jobs. However important it is, at the same time it is very easy to implement. Frankly, every time you see repeated blocks in your code, you can tell for sure that they can be replaced with a loop.</p>

<p>So, first of all we must define such blocks in your code. As we can see, it's data validation and form output. Let's see, if we can define variable parts in your repeated code blocks and put them in arrays, and then use these arrays to populate just a single code block in a loop:</p>

<pre><code>&lt;?php
// Include config file
require_once "config.php";

// Define all inputs
$config = [
    'fname' =&gt; 'Име',
    'lname' =&gt; 'Презиме',
    'dob' =&gt; 'Дата на Раѓање',
    'embg' =&gt; 'ЕМБГ',
    'address' =&gt; 'Адреса',
    'city' =&gt; 'Град',
    'mobile' =&gt; 'Мобилен',
    'email' =&gt; 'Е-маил',
    'workplace' =&gt; 'Работно Место',
    'workposition' =&gt; 'Работна Позиција',
    'jobstartdate' =&gt; 'Дата на Почнување на Работа',
    'contractfrom' =&gt; 'Договор за работа од',
];
// take all field names
$fields = array_keys($config);

if ($_POST) {

    // Define an array for errors
    $errors = [];

    // Let's collect all values here
    $input = [];

    // And let's validate all fields in one simple loop!
    foreach ($fields as $field) {
        $input[$field] = trim($_POST[$field]);
        if (!$input[$field]) {
            $errors[$field] = true;
        }
    }

    if (!$errors) {

        if (!empty($_POST['id'])) {
            $input['id'] = $_POST['id'];
            $sql = "UPDATE addemployees SET fname=?, lname=?, dob=?, embg=?, address=?, city=?, mobile=?, email=?, workplace=?,
                    workposition=?, jobstartdate=?, contractfrom=? WHERE id=?";
            $stmt = $mysqli-&gt;prepare($sql);
            $stmt-&gt;bind_param("ssssssssssssi", ...array_values($input));
            $stmt-&gt;execute();
        } else {
            $sql = "INSERT INTO addemployees SET fname=?, lname=?, dob=?, embg=?, address=?, city=?, mobile=?, email=?, workplace=?,
                    workposition=?, jobstartdate=?, contractfrom=?";
            $stmt = $mysqli-&gt;prepare($sql);
            $stmt-&gt;bind_param("ssssssssssss", ...array_values($input));
            $stmt-&gt;execute();
        }
        header("location: employees.php");
        exit();
    }
} elseif(!empty($_GET["id"])) {

    $sql = "SELECT * FROM addemployees WHERE id = ?";
    $stmt = $mysqli-&gt;prepare($sql);
    $stmt-&gt;bind_param("i", $_GET["id"]);
    $stmt-&gt;execute();
    $input = $stmt-&gt;get_result()-&gt;fetch_assoc();

    if (!$input) {
        exit("Record not found");
    }
} else {
    // Let's fill all fields with empty strings 
    foreach ($fields as $field) {
        $input[$field] = "";
    }
}
// a shorthand function for htmlspecialchars()
function e($str)
{
    return htmlspecialchars($str, ENT_QUOTES, 'utf-8');
}
?&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Update Record&lt;/title&gt;
    &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.css"&gt;
    &lt;style type="text/css"&gt;
        .wrapper{
            width: 500px;
            margin: 0 auto;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="wrapper"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="row"&gt;
            &lt;div class="col-md-12"&gt;
                &lt;div class="page-header"&gt;
                    &lt;h2&gt;Измени Податоци&lt;/h2&gt;
                &lt;/div&gt;
                &lt;form action="" method="post"&gt;
                    &lt;?php foreach (['fname', 'lname', 'dob', 'embg', 'address', 'city', 'mobile', 'email'] as $field ): ?&gt;
                        &lt;div class="form-group &lt;?= (!empty($errors[$field])) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;&lt;?=$config[$field]?&gt;&lt;/label&gt;
                            &lt;input type="text" id="&lt;?=$field?&gt;" name="&lt;?=$field?&gt;" class="form-control" value="&lt;?= e($input[$field]) ?&gt;"&gt;
                            &lt;span class="help-block"&gt;Please enter your &lt;?=$config[$field]?&gt;&lt;/span&gt;
                        &lt;/div&gt;
                    &lt;?php endforeach ?&gt;
                    &lt;div class="form-group &lt;?= (!empty($errors['workplace'])) ? 'has-error' : ''; ?&gt;"&gt;
                        &lt;label&gt;Работно Место &lt;span style="font-size: 15px; color: rgb(255, 0, 0); margin-right: 15px;"&gt;(ПРОВЕРИ)&lt;/span&gt;&lt;/label&gt;
                        &lt;select type="text" name="workplace" id="workplace" class="form-control" value="&lt;?= e($input['workplace']) ?&gt;"&gt;
                            &lt;option value="Кафич ГТ-1 - Широк Сокак бр. 55"&gt;Кафич ГТ-1 - Широк Сокак бр. 55&lt;/option&gt;
                            &lt;option value="Кафич ГТ-2 - Широк Сокак бр. 94"&gt;Кафич ГТ-2 - Широк Сокак бр. 94&lt;/option&gt;
                            &lt;option value="Ланч Бар ГТ - Широк Сокак бр. 55"&gt;Ланч Бар ГТ - Широк Сокак бр. 55&lt;/option&gt;
                            &lt;option value="Главен Магацин - Боримечка"&gt;Главен Магацин - Боримечка&lt;/option&gt;
                        &lt;/select&gt;
                        &lt;span class="help-block"&gt;Please enter your Работно Место&lt;/span&gt;
                    &lt;/div&gt;

                    &lt;div class="form-group &lt;?= (!empty($errors['workposition'])) ? 'has-error' : ''; ?&gt;"&gt;
                        &lt;label&gt;Работна Позиција &lt;span style="font-size: 15px; color: rgb(255, 0, 0); margin-right: 15px;"&gt;(ПРОВЕРИ)&lt;/span&gt;&lt;/label&gt;
                        &lt;select type="text" name="workposition" id="workposition" class="form-control" value="&lt;?= e($input['workposition']) ?&gt;"&gt;
                            &lt;option value="Келнер"&gt;Келнер&lt;/option&gt;
                            &lt;option value="Шанкер"&gt;Шанкер&lt;/option&gt;
                            &lt;option value="Колачи"&gt;Колачи&lt;/option&gt;
                            &lt;option value="Сладолед"&gt;Сладолед&lt;/option&gt;
                            &lt;option value="Производство Сладолед"&gt;Производство Сладолед&lt;/option&gt;
                            &lt;option value="Производство Торти"&gt;Производство Торти&lt;/option&gt;
                            &lt;option value="Кувар"&gt;Кувар&lt;/option&gt;
                            &lt;option value="Помошник Кувар"&gt;Помошник Кувар&lt;/option&gt;
                            &lt;option value="Салатер"&gt;Салатер&lt;/option&gt;
                            &lt;option value="Пицер"&gt;Пицер&lt;/option&gt;
                            &lt;option value="Менаџер"&gt;Менаџер&lt;/option&gt;
                            &lt;option value="Книговодител"&gt;Книговодител&lt;/option&gt;
                            &lt;option value="Хигиеничар"&gt;Хигиеничар&lt;/option&gt;
                            &lt;option value="Стражар"&gt;Стражар&lt;/option&gt;
                            &lt;option value="Магационер"&gt;Магационер&lt;/option&gt;
                            &lt;option value="Шофер"&gt;Шофер&lt;/option&gt;
                            &lt;option value="Дистрибутер"&gt;Дистрибутер&lt;/option&gt;
                        &lt;/select&gt;
                        &lt;span class="help-block"&gt;Please enter your Работна Позиција&lt;/span&gt;
                    &lt;/div&gt;
                    &lt;?php foreach (['jobstartdate','contractfrom'] as $field ): ?&gt;
                        &lt;div class="form-group &lt;?= (!empty($errors[$field])) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;&lt;?=$config[$field]?&gt;&lt;/label&gt;
                            &lt;input type="text" id="&lt;?=$field?&gt;" name="&lt;?=$field?&gt;" class="form-control" value="&lt;?= e($input[$field]) ?&gt;"&gt;
                            &lt;span class="help-block"&gt;Please enter your &lt;?=$config[$field]?&gt;&lt;/span&gt;
                        &lt;/div&gt;
                    &lt;?php endforeach ?&gt;
                    &lt;?php if (isset($input['id'])): ?&gt;
                        &lt;input type="hidden" name="id" value="&lt;?php echo $input['id']; ?&gt;"/&gt;
                    &lt;?php endif ?&gt;
                    &lt;input type="submit" class="btn btn-primary" value="Submit"&gt;
                    &lt;a href="employees.php" class="btn btn-default"&gt;Cancel&lt;/a&gt;
                &lt;/form&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>As you can see, this code, although covering both insert and update cases, is almost <strong>three times shorter than your initial code</strong>.</p>

<p>Moreover, adding a regular field would make it bigger by one single line - a new member in <code>$config</code> variable. Which, I believe, does answer your main question, how to make this code easier to maintain.</p>

<p>Please be advised though: this code is essentially 2000s' PHP at best. It is better than your 1990s' code, but it is still considered outdated nowadays. In 2018 you are supposed to use a <em>framework</em> for such a task. And or a reason:</p>

<p>Your code is oversimplified. In reality you will need different validations, different HTML in different form fields and so on. when you will try to implement all this in raw PHP, your code will start to bloat again. But, given such a task of adding / editing a record in the database is so common, that all popular frameworks offer very sleek solutions, including configurable validations, form generation, SQL automation and many, many more other things that will make even a customized code concise and maintainable. </p>
    </div>