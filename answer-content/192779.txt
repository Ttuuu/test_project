<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some things:</p>

<ul>
<li>You'll want to wrap the call to <code>main</code> in <code>if __name__ == '__main__':</code> to be able to import from your package in other packages.</li>
<li>For maximum flexibility use <code>argparse</code> to pass the file name rather than making an interactive script.</li>
<li>Format strings are generally preferred over string concatenation, so <code>fileToEncrypt + ".gpg"</code> becomes <code>"{}.gpg".format(fileToEncrypt)</code>.</li>
<li>Run the code through <code>pycodestyle</code> to get a bunch of tips on writing idiomatic Python. For example, Python appropriately uses <code>snake_case</code> for variable, function and method names.</li>
<li><code>Function</code> in a function name is completely redundant. Use a highlighting editor or (ideally) an IDE to trivially distinguish between functions and variables.</li>
<li>Magic strings like encryption parameters and the IPFS address should be moved to either a configuration file, a command line parameter (possibly with a default) or a constant at the top of the file.</li>
<li>The shebang line should be <code>#!/usr/bin/env python3</code> for maximum portability - it basically means that the first <code>python3</code> executable on the <code>PATH</code> will be used.</li>
<li>You have a race condition in <code>delEncryptedFile</code>. Rather than checking for a file and then deleting it you should just try to delete it and then let the exception bubble up to the user if it fails. If at some point you want a nicer formatted error message that should be generated in <code>main</code>, not further down, so that, again, other packages can use your package easily.</li>
</ul>
    </div>