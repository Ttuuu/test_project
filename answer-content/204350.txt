<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you have configured caching headers (both on request and response) correctly, the browser will do caching for you. You can have your code just do the request and the browser will decide whether to pull data from the server or use a cached response. You may need to look up on what your library (i.e. Angular's <code>HttpClient</code>) defaults to doing and/or inspect your requests and responses to see if caching is done correctly. Some libraries may disable caching entirely or may require you to explicitly tell it to consider cached results.</p>

<p>If you want to manually cache requests, you might want to look at Angular's <a href="https://angular.io/api/common/http/HttpInterceptor" rel="nofollow noreferrer"><code>HttpInterceptor</code></a> class. It works in tandem with <code>HttpClient</code> APIs and allows you to write code that sits in between the caller (your code) and the target (the server), allowing you to modify both request and response. You can use this as an intermediary to cache responses as well as cancel requests and return cached responses. One advantage of this approach is you don't have to write a special class that your consumer must know and use. You simply drop in the interceptor and use <code>HttpClient</code> APIs as is.</p>
    </div>