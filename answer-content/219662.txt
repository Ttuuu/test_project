<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>further to everything else that's been written I find it's generally better for functions to raise an exception if the wrong data-type is propagated, I'd therefore discourage use of code that special cases things like your checking for <code>int</code>s and <code>float</code>s.  I'd write the function as:</p>

<pre><code>def replace_null(text, *, empty_is_null=True, strip=True, nulls=('NULL', 'None')):
    """Return None if text represents 'none', otherwise text with whitespace stripped."""
    if text is None:
        return None
    if strip:
        text = str.strip(text)
    if empty_is_null and not text:
        return None
    if str.casefold(text) in (s.casefold() for s in nulls):
        return None
    return text
</code></pre>

<p>The asterisk (<code>*</code>) indicates <a href="https://stackoverflow.com/q/14301967/1358308">keyword-only arguments</a> (see <a href="https://www.python.org/dev/peps/pep-3102/" rel="nofollow noreferrer">PEP 3102</a>) as I think it would help with future readers of the code.  For example I would probably have to look at the definition to determine what: </p>

<pre><code>x = myobj._mynull(text, 'default', False)
</code></pre>

<p>does, especially the unqualified <code>False</code>, when compared to (assuming the above is saved in <code>utils.py</code>):</p>

<pre><code>x = utils.replace_null(text, strip=False) or 'default'
</code></pre>

<p>which relies more on keyword arguments and standard Python semantics.</p>

<p>I've also added a small <a href="https://stackoverflow.com/q/3898572/1358308">docstring</a>, so that <code>help(replace_null)</code> works.</p>
    </div>