<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>int find(std::wstring s);
</code></pre>

<p>Why is this passed by value (making a copy)?  And I find it odd that “checks if words are in file and returns row of it” would also <em>modify</em> the file object!</p>

<p>So, should this really be</p>

<pre><code>rownum_t find (const std::wstring&amp; s) const;
</code></pre>

<p>?  Note also I changed the return type to indicate its actual domain.  Even if you just make that a <code>typedef</code> with no compile-time checking, it still is good human documentation.</p>

<pre><code>std::vector&lt;Vocabulary&gt; get_part(const int begin, const int end);
</code></pre>

<p>Good that you’re returning the vector by value as a normal return value — many people try to avoid that for outdated reasons.  But, again you did not make the function itself <code>const</code>, so you are implying that calling this will modify the file object.</p>

<p>Second, the <code>const</code> in the parameters don’t have meaning there.  It is useful in a function <em>definition</em>, but ignored in a <em>declaration</em> so omitted as not being part of the interface contract.</p>

<p>As far as the use of wide strings (note for others:  On Windows <code>wchar_t</code> is 16 bits), it is necessary for calling Win32 API functions.  But for most uses in the program, it is easier to just use utf8 everywhere.</p>

<p>Note that C++ supports (portable) UTF8 string literals now, so you can write </p>

<pre><code>const char word[] = u8"Füße";
</code></pre>

<p>will show up in the source editor and code UTF-8 bytes in the character array, regardless of what ANSI code page is in effect when you run the compiler.</p>

<p>For display:  if you are outputting to the Windows Console, the normal 8-bit stream will use the current code page.  In the past, I’ve had inconsistent results using Microsoft’s library just switching to the wide calls — but that was years ago; maybe it’s fixed now.  I got proper output by using the raw Win32 console output commands instead of the stream wrappers that feed standard output to the console.</p>

<p>Meanwhile, the font loaded in the Console will not display characters outside of the current code page (or closely related ones).  You may need to switch to a Unicode font in the Console’s system menu.  A simple program to print the alphabet (in each language) will tell you if it is OK to proceed.</p>
    </div>