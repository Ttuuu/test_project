<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your name "startsWith" is confusing because it looks at both ends, and controls the placement of the trailing $.  I'd simplify this:</p>

<pre><code>bool startsWith = pattern.StartsWith("%") &amp;&amp; !pattern.EndsWith("%");
bool endsWith = !pattern.StartsWith("%") &amp;&amp; pattern.EndsWith("%");

if (startsWith)
{
    builder.Replace("%", "", 0, 1);
    builder.Append("$");
}
if (endsWith)
{
    builder.Replace("%", "", pattern.Length - 1, 1);
    builder.Insert(0, "^");
}
</code></pre>

<p>to this:</p>

<pre><code>bool leadingLiteral = !pattern.StartsWith("%");
if (leadingLiteral)
{
    builder.Insert(0, "^");
}

bool trailingLiteral = !pattern.EndsWith("%");
if (trailingLiteral)
{
    builder.Append("$");
}
</code></pre>

<p>You may also note that I left the named Boolean variables in the code.  I like using "explanatory variables" instead of comments. The optimizer will get rid of them in a production build, so they cost nothing to the runtime.  But I think they make the code more readable and therefore more maintainable.  They encourage you, the developer, to think about what you're doing.  And they encourage you to think of an appropriate name.  If you find it hard to name a thing, that may be a sign that it's unclear, or is doing too much.</p>
    </div>