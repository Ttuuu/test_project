<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Bugs</h2>

<p>Both your check for an existing user and checking if the user entered the correct password are not working correctly:</p>

<pre><code>if create_password in users:
    create_password = input("password taken re-enter: ")
</code></pre>

<p>This just checks if the just entered password is also a username already in use. <code>in</code> for dictionaries checks only if a value is present in the keys of the dictionary, not the values.</p>

<p>But even if this would be working like you intended (checking if this is the password of another user), <strong>checking if another user has the same password is very dangerous</strong>. First of all it gives away the fact that you are saving your passwords in clear text, which you shouldn't, anyway. In the best case the user will not want to use your system for that reason alone, in the worst case they will want to crack it.</p>

<p>And for this second case there is even more information now, because now they know the password of one other user! They just don't know which one, but if they keep on trying passwords and save them whenever they are already taken, they get a nice dictionary of passwords, where they know that each one is some users password. If they want to crack some specific users account, they just try all of them.</p>

<pre><code>if username in users:
    password = input("enter password")

if password in users:
    print("access granted")
    access = 1
</code></pre>

<p>This checks if the user exists (good) and if another user with the username of the just entered password also exists, but not if the password is the password of the user who wants to login (bad).</p>

<p><strong>This means that you can login to your system by knowing a single username!</strong> Just enter the username as both the username and the password and you are guaranteed access.</p>

<p>Instead, you want to check if the password is <em>that</em> users password:</p>

<pre><code>if username in users:
    password = input("enter password: ")
    if password == users[username]:
        print("access granted")
        access = 1
</code></pre>

<p>This also makes sure that the check for the password is only performed if the user actually entered a password. Otherwise it will check if the user <code>0</code> exists in users (in your current version) or it will raise a <code>KeyError</code>, since <code>user[username]</code> does not exist (in this version where the <code>if</code> is not nested).</p>

<h2>Style</h2>

<p>Using <code>1</code> and <code>0</code> for logged-in and not logged-in, respectively, sounds like you will mess this up at least once. Instead used <code>logged_in = False</code> in the beginning and then later set it to <code>logged_in = True</code> if the login is successful.</p>

<p>Indeed, you should probably move all of your code to separate functions, one of which, the <code>login</code> function, returns <code>True</code> or <code>False</code> depending on whether or not the login was successful.</p>
    </div>