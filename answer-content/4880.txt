<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>import random

def chunk(xs, n):
    ys = list(xs)
</code></pre>

<p>Copies of lists are usually taken using <code>xs[:]</code></p>

<pre><code>    random.shuffle(ys)
    ylen = len(ys)
</code></pre>

<p>I don't think storing the length in a variable actually helps your code much</p>

<pre><code>    size = int(ylen / n)
</code></pre>

<p>Use <code>size = ylen // n</code> // is the integer division operator</p>

<pre><code>    chunks = [ys[0+size*i : size*(i+1)] for i in xrange(n)]
</code></pre>

<p>Why the <code>0+</code>? </p>

<pre><code>    leftover = ylen - size*n
</code></pre>

<p>Actually, you can find size and leftover using <code>size, leftover = divmod(ylen, n)</code></p>

<pre><code>    edge = size*n
    for i in xrange(leftover):
            chunks[i%n].append(ys[edge+i])
</code></pre>

<p>You can't have <code>len(leftovers) &gt;= n</code>. So you can do:</p>

<pre><code>   for chunk, value in zip(chunks, leftover):
       chunk.append(value)


    return chunks
</code></pre>

<p>Some more improvement could be had if you used numpy. If this is part of a number crunching code you should look into it.</p>
    </div>