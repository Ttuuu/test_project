<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>How does it work?</h2>

<p>Seems to be working now. What I can't understand is how :)</p>

<p>Code should be readable and easily understandable by humans as well. You might even be one of the humans that have to work with code that you wrote a year or more ago..</p>

<p>There is a lot going on in the code that I cannot tell why it's there and what its use is.</p>

<p>For example:</p>

<pre><code> if (operationOnQueue) {
                    operationOnQueue = false;
                    secondNum = s;

                    list.set(list.lastIndexOf(firstNum), eval(firstNum, operator, secondNum));
                    list.remove(list.lastIndexOf(operator));
                    list.remove(list.lastIndexOf(secondNum));
                }
</code></pre>

<p>I can read the code and see what it will do, but why? I have no clue. </p>

<p>So either try to explain the why in comments, or re-write the code to be more self-explanatory.</p>

<p>(Btw your code looks a bit like <a href="https://en.wikipedia.org/wiki/Shunting-yard_algorithm" rel="nofollow noreferrer">https://en.wikipedia.org/wiki/Shunting-yard_algorithm</a>.) </p>

<h2>Try to break big methods into smaller ones</h2>

<p>You <code>evaluate</code> does a few things. The <code>while</code> loop in the end seems like a good candidate for a separate method. The second <code>if</code> in the <code>for</code> loop as well.</p>

<h2>Don't repeat yourself</h2>

<p>There are a few <code>Character.toString(tokens[i])</code> in the code. It's easier to read if you extract that to a variable, for example <code>String currentToken = Character.toString(tokens[i])</code></p>

<h2>Handling error cases</h2>

<p>What if the input is not a correct expression?</p>

<p>For example: <code>14+54/9+</code></p>

<pre><code>Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
    at java.util.ArrayList.rangeCheck(ArrayList.java:657)
    at java.util.ArrayList.get(ArrayList.java:433)
    at Math.evaluate(Math.java:64)
    at Math.main(Math.java:96)
</code></pre>

<p>BTW: for more interesting links / implementations see here:
<a href="https://stackoverflow.com/a/114601/461499">https://stackoverflow.com/a/114601/461499</a></p>
    </div>