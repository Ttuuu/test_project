<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The simplest way is to use <code>std::tuple_element</code></p>

<pre><code>namespace meta2 {
template &lt;typename ...Args&gt;
struct TypeList
{
    template&lt;std::size_t N&gt;
    using type = typename std::tuple_element&lt;N, std::tuple&lt;Args...&gt;&gt;::type;
};

template&lt;size_t idx, typename TList&gt;
using ExtractType = typename TList::template type&lt;idx&gt;;
} // namespace meta2
</code></pre>

<p>So you can get type by:</p>

<pre><code>using tl2 = meta2::TypeList&lt;bool, int, uint, double, char&gt;;
using Type2 = meta2::ExtractType&lt;1, tl2&gt;;
static_assert(std::is_same&lt;int, Type2&gt;::value);
</code></pre>
    </div>