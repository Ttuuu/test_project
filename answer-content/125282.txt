<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API" rel="nofollow noreferrer">Fetch API</a> is now supported by Firefox, Chrome and Opera, you could use it instead of the ugly <code>XMLHttpRequest</code>. How ironic, by the way, is using <strong>XML</strong>HttpRequest to make a JSON reqest?</p>

<hr>

<blockquote>
<pre><code>var data = {};
</code></pre>
</blockquote>

<p>Since you likely won't be reassigning this variable, you could use <code>const</code> instead. The same is true for <code>var xhr = new XMLHttpRequest();</code>.</p>

<hr>

<pre><code>for (var i = 0; i &lt; feedbackform.length; i++) {
    var input = feedbackform[i];
    if (input.name &amp;&amp; input.value) {
        data[input.name] = input.value;
    }
}
</code></pre>

<p>First, that's a perfect use case for a <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of" rel="nofollow noreferrer"><code>for...of</code> loop</a>. Secondly, if you want to check if a string is empty, it's better to explicitly compare it with an empty string.</p>

<p>I would rewrite this loop like this:</p>

<pre><code>for (let input of feedbackform) {
  if (input.name !== "" &amp;&amp; input.value !== "") {
    data[input.name] = input.value
  }
}
</code></pre>

<hr>

<blockquote>
<pre><code>feedbackform.send.disabled = true;
</code></pre>
</blockquote>

<p>It's better to disable the whole form, instead of just the submit button. Did you know that you can submit a form by pressing <kbd>Enter</kbd> while focused in an input?</p>

<hr>

<blockquote>
<pre><code>xhr.onloadend = function () {}
</code></pre>
</blockquote>

<p>Oh come on, it's the 21<sup>st</sup> century! Why do you still use <code>.onevent</code> properties? You should totally drop that and try <s>jQuery</s> <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener" rel="nofollow noreferrer"><code>.addEventListener()</code></a>. See <a href="https://stackoverflow.com/a/35093997/3853934">addEventListener vs onclick</a>.</p>

<p>You can also use <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions" rel="nofollow noreferrer">an arrow function</a> here.</p>

<p>I would rewrite it like this:</p>

<pre><code>xhr.addEventListener("loadend", () =&gt; {
  // event listener code
})
</code></pre>

<hr>

<blockquote>
<pre><code>if (xhr.status == 200) 
</code></pre>
</blockquote>

<p>Always use three-equals operator (<code>===</code>) for equality comparisons. See <a href="https://stackoverflow.com/q/359494/3853934">Does it matter which equals operator (== vs ===) I use in JavaScript comparisons?</a>.</p>

<p>Besides, 200 isn't the only status code which means that request was successful. There is for example status code 204â€”No Content. Therefore, you should be checking whether the status code is in 200-299 range:</p>

<pre><code>if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300)
</code></pre>

<hr>

<blockquote>
<pre><code>return false;
</code></pre>
</blockquote>

<p>What purpose does it serve?</p>
    </div>