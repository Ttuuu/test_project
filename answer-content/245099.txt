<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Edit: this is same algorithm as provided by Simon but different code.
.......</p>
<p>One option is to use Euler himself to solve Euler Project #1. Namely triangular numbers (Elements of Algebra, 427).</p>
<pre><code>def triangular_number(num, max_num=999):
    """Return maximum triangular number of num in range  max_num (inclusive).

    Calculate number of occurances of num within range. Then calculatate
    triangular number of occurances and multiply by num.

    :param num: number of which occurances are calculated
    :type num: int
    :param max_num: upper limit for finding num  occurances (inclusive)
    :type max_num: int
    :returns: triangular number
    :rtype: int
    """

    occurrences = max_num // num

    return (num * occurrences * (occurrences + 1)) / 2


print(triangular_number(3) + triangular_number(5) - triangular_number(15))
</code></pre>
    </div>