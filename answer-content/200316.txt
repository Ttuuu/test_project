<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It looks to me that you're over thinking this a bit.</p>

<p>The problem statement says that each vector will have positive integers.  It is very superfluous to check for that.</p>

<p>Always try to avoid using the concatenation operator(<code>+</code>) for joining strings, the <code>stringstream</code> is much better for that.</p>

<p>You run 2 nested loops twice once to check for  numbers that add to difference and those that subtract to difference.  My thought is use one loop and use the <code>std::binary_search</code> function in the <code>algorithm</code> header.  When each weight is subtracted from the difference all you need is the absolute value of the result and check if that weight exists.</p>

<p>Something like this:</p>

<pre><code>const string DEFAULT_MESSAGE = "NOT POSSIBLE";
typedef vector&lt;int&gt;::iterator iter;
string ScaleBalancing(vector&lt;int&gt;&amp; scale, vector&lt;int&gt;&amp; weights)
{
    stringstream ss;
    sort(scale.begin(), scale.end());
    sort(weights.begin(), weights.end());
    int difference = scale[1] - scale[0];
    iter begin = weights.begin();
    iter end = weights.end();
    if (binary_search(begin, end, difference))
    {
        return to_string(difference);
    }
    for (int i = 0; i &lt; weights.size(); ++i)
    {
        bool isNeg = false;
        int tempDifference = difference - weights[i];
        if (tempDifference &lt; 0)
        {
            tempDifference *= -1;
            isNeg = true;
        }
        if (tempDifference &gt; weights.back())
        {
            return DEFAULT_MESSAGE;
        }
        if (binary_search(begin,end,tempDifference) &amp;&amp; tempDifference!= weights[i])
        {
            if (isNeg)
            {
                ss &lt;&lt; tempDifference &lt;&lt; ',' &lt;&lt; weights[i];
            }
            else
            {
                ss &lt;&lt; weights[i] &lt;&lt; ',' &lt;&lt; tempDifference;
            }
            return ss.str();
        }
    }
    return DEFAULT_MESSAGE;
}
</code></pre>
    </div>