<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Response</h1>

<p><a href="https://codereview.stackexchange.com/a/173307/120114">xReprisal is correct</a> - it appears that the user input is not used in the database queries; the query appears to simply select all rows from one database table. </p>

<h1>Feedback</h1>

<h2>PHP</h2>

<h3>JSON encoded array</h3>

<p>I haven't used <a href="http://php.net/manual/en/arrayobject.getarraycopy.php" rel="nofollow noreferrer">ArrayObject::getArrayCopy()</a> before but see it returns a copy of an array. Why return a copy of the array? Why not just return the array? It isn't like the array returned is modified by the code that calls that method - it merely is used in the response... Also, it only accepts an array or an object, so in the case that the controller method <code>newsConfig()</code> returns an empty string literal (i.e. when the call to <code>mysqli_query()</code> returns a value evaluating to <code>false</code>), an exception is thrown with the following message: </p>

<blockquote>
  <p>Passed variable is not an array or object</p>
</blockquote>

<p>So I would suggest not using the ArrayObject class, always have that controller method return an array and simply pass that array to <code>json_encode()</code>. Something like the (<em>untested</em>) code below in <em>getnewscat.php</em>:</p>

<pre><code>&lt;?php require_once "../../bin/controll.php";
$db_controll = new Controll();

header('Content-type: application/json');
echo json_encode($db_controll-&gt;newsConfig());

?&gt;
</code></pre>

<h3>Unreachable code in controller method</h3>

<p>In the controller method <code>newsConfig()</code>, it appears that there are two return statements, and those come before the line that would close the database connection (i.e. <code>$this-&gt;CONN-&gt;close_connect($dfnet);</code>) - thus that line is unreachable. To ensure that the connection is closed properly, one would have to store the return value in a variable and return it <em>after</em> closing the connection - something like the code below. Also, presuming the answer to the question in the previous section is that there isn't really a need to copy the array, just return an array in all cases, even if it is empty...</p>

<p><em>warning- untested code:</em></p>

<pre><code>public function newsConfig(){ 
    $return = array();
    $this-&gt;CONN = new Conn();//class from external page to connect DB 
    try{
        $dfnet = $this-&gt;CONN-&gt;open_connect();
        $qnco = mysqli_query($dfnet,"select * from category");
        //if(!$qnco) return "";            else{
        if ($qnco) { //flipped logic
            while($qncoarray = mysqli_fetch_assoc($qnco)){
                //here I try copy rows into array
                $return[] = array(
                    'ID' =&gt; $qncoarray['ID'],
                    'Name' =&gt; $qncoarray['Name']
                );
            }
        }
        $this-&gt;CONN-&gt;close_connect($dfnet); 
    } 
    catch(Exception $er){ }
    return $return;
}
</code></pre>

<h2>JS</h2>

<h3>cache DOM references</h3>

<p>The JS code provided only shows two occurrences of <code>$("#jsGrid")</code> but it would be good to store that in a variable, which will reduce DOM lookups for that element to one. </p>

<pre><code>var gridElement = $("#jsGrid");

...
gridElement.jsGrid({ ... });

//in the callback:
    gridElement.jsGrid("option", $cb.attr("id"), $cb.is(":checked"));
</code></pre>

<p>Also, if Ecmascript-2015 (A.K.A. Es-6) is supported by target browsers, use <code>const</code> instead of <code>var</code>, since that value should not be re-assigned (see <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const#Browser_compatibilty" rel="nofollow noreferrer">browser compatibility</a>).</p>

<pre><code>const gridElement = $("#jsGrid");
</code></pre>
    </div>