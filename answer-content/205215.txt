<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>only include headers you actually need in that file. No need to <code>#include &lt;iostream&gt;</code> in StateManager.h.</p>

<p>Leaks abound. You <code>new</code> every state but I don't see anywhere you <code>delete</code> them. Use smart pointers or have States clean themselves up <code>on_exit</code>. I prefer smart pointers though.</p>

<p>Calling <code>change_state</code> inside <code>on_update</code> will lead to surprising effects due to on_exit being called during that. </p>

<p>Instead return the next state:</p>

<pre><code>void update_state(StateManager* manager) {
    unique_ptr&lt;State&gt; tmp = m_current_state-&gt;on_update(manager);
    if(tmp != nullptr)
        change_state(std::move(tmp));
}
</code></pre>
    </div>