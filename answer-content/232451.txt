<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your current version is very much a fixed piece of code, as you can see there is a lot of repetition and the result can be summed up as</p>

<ul>
<li>Based on 2019-04-01 being the start of the first year</li>
<li>The year counting up as starting on the 4th month of each year.</li>
</ul>

<p>This code is very much based on that premise, taking the start date (an optional parameter to this method - defaulted to current date) the code takes the difference between the date to test and the date of 2019-04-01 (using <a href="https://www.php.net/manual/en/datetime.diff.php" rel="nofollow noreferrer"><code>diff()</code></a>).  This returns an instance of <a href="https://www.php.net/manual/en/class.dateinterval.php" rel="nofollow noreferrer"><code>DateInterval</code></a>, which you can then extract the year component (<code>y</code>) and add 1 so that 2019 is year 1.</p>

<p>(Altered to be a standalone function for test purposes)...</p>

<pre><code>function getFinanceYear ( DateTime $dateToTest = null)  {
    // Use date passed in, or default to current date
    $dateToTest = $dateToTest ?? new DateTime();
    // Calculate the difference
    $interval = $dateToTest-&gt;diff(new DateTime("2019-04-01"));
    // return the difference in years (offset by 1)
    return $interval-&gt;y+1;
}
</code></pre>

<p>A few test runs...</p>

<pre><code>echo getFinanceYear().PHP_EOL;  // 1
echo getFinanceYear(new DateTime("2029-03-01")).PHP_EOL;   // 10
echo getFinanceYear(new DateTime("2029-04-01")).PHP_EOL;   // 11
</code></pre>
    </div>