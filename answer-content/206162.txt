<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can use the <code>for else</code> in python to done it in one <code>for</code> loop</p>

<pre><code>for each in say_list_two:
    if each['origin'] == say_element['origin']:
        print('Matched')
        break
else:
    say_list_two.append(say_element)
    print('not matched')
</code></pre>

<p>so if no element matches in the list of <code>say_list_two</code> the loop will go <code>else</code> part</p>

<p>I tried generator but the time spend has few difference, using generator to gather all items and use <code>set</code> to find the target item</p>

<pre><code>x = (each['origin'] for each in say_list_two)
if say_element['origin'] in x:
    print('Matched')
else:
    print('Not Matched')
</code></pre>

<h3>Full of my test code</h3>

<pre><code>from timeit import timeit
from random import randint
a = [{"key":randint(1,100000)} for _ in range(100000)]
b = {"key":66}

def fun1():
    for k in a:
        if k["key"] == b["key"]:
            # print("Matched")
            return
    else:
        # print("Not Matched")
        return


def fun2():
    x = (k['key'] for k in a)
    if b['key'] in x:
        # print('Matched')
        return
    else:
        # print('Not Matched')r
        return


t1 = timeit("fun1()",'from __main__ import fun1', number=1000)
print(t1)
t2 = timeit("fun2()",'from __main__ import fun2', number=1000)
print(t2)
</code></pre>

<h3>Time cost</h3>

<p>this is linear loop so, time cost is O(N), so does your code. and as my generator implement still using linear loop to gather all values of dictionary in list, so it also cost O(N).</p>

<p>using <code>for else</code> might spend a little less due to it break once find the target item</p>
    </div>