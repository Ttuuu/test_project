<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Style conventions</strong></p>

<p>Following the PEP style guide, <a href="https://www.python.org/dev/peps/pep-0008/#class-names" rel="nofollow noreferrer">class names</a> should be named with CamelCase and <a href="https://www.python.org/dev/peps/pep-0008/#documentation-strings" rel="nofollow noreferrer">documentation strings</a> should be formatted like the following.</p>

<pre><code>class DirectoryStatistics:
    """Gets the total size of a given dir and counts how many folders and
    files are in the given path directory. Also offers a printing utility to output
    the diagnosis results.
    """
    def __init__(self, ...):
        # etc.
</code></pre>

<p><strong>Classes</strong></p>

<p>You can't return values from <code>__init__</code> (aka. the class constructor), because it is called when you instantiate an object, thus the return value is the object itself. But you can call methods in your <code>__init__</code> method, that's why you should move the content of your <code>get_directory_statistics</code> method into the <code>__init__</code> method:</p>

<pre><code>class DirectoryStatistics:
    """Gets the total size of a given dir and counts how many folders and
    files are in the given path directory. Also offers a printing utility to output
    the diagnosis results.
    """
    def __init__(self, file_path):
        self.root_directory = path(file_path)
        self.file_count = 0
        self.total_size = 0
        self.non_hidden_files_count = 0
        self.folder_count = 0
        for f in self.root_directory.glob('**/*'):
            if f.is_file():
                self.file_count += 1
                self.total_size += f.stat().st_size
                if not f.name.startswith("."):
                    self.non_hidden_files_count += 1
            if f.is_dir():
                self.folder_count += 1
</code></pre>

<p>That way, by calling:</p>

<pre><code>statistics = DirectoryStatistics(file_path)
</code></pre>

<p>you run the directory diagnosis and save the results in your object.
Then you can pretty-print the results using your <code>print_statistics()</code> method.</p>
    </div>