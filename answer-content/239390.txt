<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think you did a pretty good job as a <a href="/questions/tagged/beginner" class="post-tag" title="show questions tagged 'beginner'" rel="tag">beginner</a>. In addition to what Errorsatz said:</p>

<ul>
<li><p>Consider making <code>element</code> a const reference to prevent unnecessary copying: <code>const auto&amp; element : elements</code></p></li>
<li><p>You missed <code>#include &lt;string&gt;</code> in the test file. </p></li>
<li><p><code>std::endl</code> flushes the buffer and causes performance degradation; use <code>\n</code> instead unless you need the flushing behavior. </p></li>
<li><p>Try to avoid compiler-specific nonstandard extensions, because they make your program non portable. <code>-std=c++20 -pedantic-errors</code> makes g++ go into conforming mode and disables these nonstandard extensions. It is also unnecessary to separate the compiling step from the linking step â€” g++ does it for you. And remember to turn on warnings! They help you spot many logical bugs in your program. My usual compiling directive looks like this:</p>

<pre><code>g++ main.cpp -o app -std=c++20 -Wall -Wextra -Werror -pedantic-errors
</code></pre>

<p>(Sometimes I turn on <code>-ftrapv</code> to avoid inadvertently relying on integer overflow behavior as well.)</p></li>
</ul>
    </div>