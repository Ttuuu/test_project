<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, the question asks for the least number which the proportion is <strong>exactly</strong> 99%. Your code finds the first number that the proportion is more or equal to 99%. That is not quite right. Also, comparing floating-numbers is inaccurate and you should change it to integer comparision for exactness: <code>bou * 100 == total * 99</code></p>

<p>Secondly, in the <code>bouncy</code> function, <code>list(str(N))</code> is repeated three times unnecessarily. The twice <code>sort</code> calls are also unnecessary. It can be improved as follows</p>

<pre><code>def bouncy(n):
    number = [*str(n)]
    sorted_n = sorted(number)
    return sorted_n != number and sorted_n[::-1] != number
</code></pre>

<p>Thirdly, the overall algorithm is a naive one. If you need a better performance, a better approach is needed, e.g. by exploiting the fact that if <span class="math-container">\$n\$</span> is a bouncy number, then <span class="math-container">\$10n+b\$</span> for any <span class="math-container">\$b\in[0,9]\$</span> is also a bouncy number and does not need to be checked again.</p>
    </div>