<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here's my take on it.  I split the vocab into 2 set.  The first set, <code>heads</code> if for substrings that start at the beginning of the string, and the second set <code>tails</code> for other substrings.</p>

<p>The <code>else</code> clause on a loop gets executed when the loop terminates "normally", but is skipped when <code>break</code> is used.  Some people don't like these <code>else</code> clauses, but I find them handy.</p>

<pre><code>def tokenize(text, heads, tails, max_token_length=10, unknown_token="[UNK]"):
    output_tokens = []

    for token in text.split():

        if len(token) &gt; max_token_length:
            output_tokens.append(unknown_token)
            continue

        sub_tokens = []

        substrs, flag = heads, ''
        while token:
            for end in range(len(token),0,-1):
                if token[:end] in substrs:
                    sub_tokens.append(f"{flag}{token[:end]}")
                    token = token[end:]
                    substrs, flag = tails, '##'
                    break

            else:
                output_tokens.append(unknown_token)
                break

        else:
            output_tokens.extend(sub_tokens)

    return output_tokens
</code></pre>

<p>Used like so:</p>

<pre><code>heads = set(v for v in vocab if v[:2]!='##')
tails = set(v[2:] for v in vocab if v[:2]=='##')

tokenize(s, heads, tails)
</code></pre>
    </div>