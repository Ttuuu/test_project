<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let me know if you ever see an Android activity class that is not spaghetti. I'm eager to learn if it is possible...</p>

<p>When UI code and business logic is combined into one class, the code becomes harder to read as the reader constantly needs to remember whether a field is related to UI or business logic. The code related to maintaining the payroll-related data should be placed into a separate package (putting them into a separate Maven project wouldn't be too extreme) and the Android-part should be reserved for as pure UI code as poosible.</p>

<p>Lambdas should be short and simple. Multi-line lambdas shoul be extracted into standalone classes. For some reason Android Java code heavily promotes anonymous classes. In my opinion they make the code hard to read and if the programmer is not diligent, results in single responsibility violations.</p>

<p>The activity class itself acts both as an activity and a listener. That's a clear single responsibility violation. Every single Android tutorial does it because it makes the sample code shorter. In the real world it's usually just bad practise.</p>
    </div>