<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Although you already have some good remarks about your code and a short functional solution in the accepted answer, I'd like to offer an alternative procedural solution. The observation here is that you do not actually have to <em>count</em> the <code>a</code>s and <code>b</code>s, you just have to go through the string in two directions and check that you only encounter <code>a</code>s on one side and <code>b</code>s on the other. As long as the length is even (and not zero) this will give you the right answer too:</p>

<pre><code>bool isInLanguageL2(string w) {
    int len = w.length();

    // Exclude the empty string and odd-length strings
    if(len == 0 || len % 2 == 1) { 
        return false; 
    }

    // Can do this with one counter until len/2, but then 
    // you need to check index i and len - 1 - i.
    for(int front = 0, back = len - 1; front &lt; back; ++front, --back) {
        if(w[front] != 'a' || w[back] != 'b') { 
            return false; 
        }
    }

    return true;
}
</code></pre>
    </div>