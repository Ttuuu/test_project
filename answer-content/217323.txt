<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Code with iterators and standard algorithms, and you'll see your coding style improve dramatically:</p>

<ul>
<li><p>finding the beginning of a group of Bs can be done with <code>std::find</code>: <code>auto b = std::find(first, last, 'B');</code></p></li>
<li><p>finding the end of a group of Bs can also be done with <code>std::find</code>: <code>auto e = std::find(b, last, 'W');</code></p></li>
<li><p>computing the distance between the two is the job of <code>std::distance</code>: <code>auto nb_bs = std::distance(b, e)</code>.</p></li>
</ul>

<p>So combining all that we get:</p>

<pre><code>#include &lt;vector&gt;
#include &lt;algorithm&gt;

template &lt;typename Iterator&gt;
auto groups_of_bs(Iterator first, Iterator last) {
    std::vector&lt;int&gt; result;
    while (true) {
        first = std::find(first, last, 'B');
        if (first == last) break;
        auto w = std::find(std::next(first), last, 'W');
        result.push_back(std::distance(first, w));
        if (w == last) break;
        first = std::next(w);
    }
    return result;
}
</code></pre>

<p>Now the only thing left is to display the size of the vector, and then its elements:</p>

<pre><code>#include &lt;string&gt;
#include &lt;iostream&gt;

int main() {
    std::string test{"BBWBWB"};
    auto res = groups_of_bs(test.begin(), test.end());
    std::cout &lt;&lt; res.size() &lt;&lt; '\n';
    for (auto i : res) std::cout &lt;&lt; i &lt;&lt; ' ';
}
</code></pre>
    </div>