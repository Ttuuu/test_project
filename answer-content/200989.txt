<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The default constructor is almost OK, since most members of the class have default values specified.  If the type <code>T</code> has a default construtor there are no problems.  If it is a type without one (like <code>int</code>), then <code>mInitial</code> will be uninitialized.</p>

<p>Your copy constructor is written more like a copy assignment operator.  Since the object being constructed is empty, there is no point in checking if <code>mLength == 0</code>, since it will be 0.  Get rid of the <code>if</code> statement completely, including the <code>else</code> code, but keep the compound statement between the <code>if</code> and <code>else</code>.  In addition, you may want to take the initial value by const reference (<code>const T &amp;initial</code>) to avoid making copies of large types.</p>

<p>Your copy assignment is flawed, because it does nothing if the existing length is shorter than the length of the <code>InitializedArray</code> being copied.</p>

<p>You should have a <code>const</code> version of your array element access, <code>const T &amp; operator[](size_t index) const</code>.  This version would not support adding a new element.</p>

<p>You should also look at the <a href="https://stackoverflow.com/questions/4782757/rule-of-three-becomes-rule-of-five-with-c11?s=1%7C238.1052">Rule of Five</a>.</p>
    </div>