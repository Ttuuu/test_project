<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Bad Habits</h1>
<p>I'd get out of the habit of including <code>bits/stdc++.h</code> as it's <a href="https://stackoverflow.com/questions/31816095/why-should-i-not-include-bits-stdc-h">non-standard and makes your compile times much longer</a> than they need to be. Especially with such a short program.</p>
<p>Likewise, <a href="https://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice"><code>using namespace std</code></a> can lead to problems and should be avoided.</p>
<h1>Naming</h1>
<p>You should use clearer variable and function names. The function name <code>activityNotifications()</code> sounds like it could be presenting the user with notifications. Or it could be processing activity notifications. Instead it's counting them. It might be better named <code>countActivityNotifications()</code>.</p>
<p>Within the function, you have a few good variable names. Namely, <code>median</code> and <code>results</code>. I have no idea what <code>dq</code> stands for, which means I also have no idea what <code>dq_idx</code> stands for (beyond that it's an index for <code>dq</code>). <code>expenditure</code> is singular, but it holds multiple expenditures, so I'd make the name plural. <code>d</code> is unhelpful as well. Just because the problem description named the variables <code>n</code> and <code>d</code> doesn't mean your code should use those names. They should be <code>numberOfExpenditureDays</code> and <code>numberOfTrailingDays</code>. (If you prefer <code>num</code> to <code>number</code> and removing <code>Of</code>, that's fine.)</p>
<h1>Simplify</h1>
<p>You don't need to sort the expenditures. You can get the median by generating a histogram and finding the middle value. A histogram is just an array where each element is the number of times that value was in the input. So a histogram of expenditures would hold the count of how many expenditures were for 1 dollar, and 2 dollars, and 3 dollars, etc. Since the expenditures are between 0 and 200 dollars each, you would have 200 buckets in your histogram. Furthermore, since you're dealing with trailing days, once you have the first one calculated, you can simply update 2 values on each subsequent pass. (Decrement the expenditure from the day that's falling off the array and increment the one that's being added in.)</p>
<p>Your <code>split_string()</code> function goes to a lot of trouble to clean the string before you tokenize it. But you don't need to. You can simply not add empty strings to the results. Something like this:</p>
<pre><code>void split(const std::string&amp; s, std::vector&lt;std::string&gt;&amp; results)
{
    size_t lastPos = 0;
    size_t nextPos = 0;
    while ((nextPos = s.find(" ", lastPos)) != std::string::npos)
    {
        std::string word = s.substr(lastPos, nextPos - lastPos);
        if (!word.empty()) {
            results.push_back(word);
        }
        lastPos = nextPos + 1;
    }
    
    if (lastPos != std::string::npos)
    {
        std::string word = s.substr(lastPos, std::string::npos);
        if (!word.empty())
        {
            results.push_back(word);
        }
    }
}
</code></pre>
<p>I had to read your function several times to realize what it was trying to do with <code>std::unique()</code>, <code>std::string::erase()</code>, and <code>std::string::pop_back()</code>.</p>
<h1>Readability</h1>
<p>The <code>activityNotifications()</code> function is really hard to read due to the odd, inconsistent spacing it uses. I recommend a space before and after every operator to make it more clear. So this line, for example:</p>
<pre><code>dq_idx=(dq_idx+1) %d;
</code></pre>
<p>is more readable when written like this:</p>
<pre><code>dq_idx = (dq_idx + 1) % d;
</code></pre>
    </div>