<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have repeated the following block of code twice:</p>

<pre><code>'firstName' =&gt; 'required|string',
'lastName' =&gt; 'required|string',
'gender' =&gt; 'required|in:Male,Female',
...
</code></pre>

<p>What I would do would be to create a <a href="https://laravel.com/docs/5.8/validation#creating-form-requests" rel="nofollow noreferrer">Custom Form Request</a>, let's call that ValidateNewUserRequest. Then, your controller can take the argument <code>ValidateNewUserRequest $request</code>.</p>

<p>In ValidateNewUserRequest, you can apply the validation in the <code>rules()</code> function. I've also noticed that both pieces of your validation above contains the line: 
<code>'email' =&gt; 'required|string|email|max:255|unique:stylists'</code>, but I'm guessing that you want the stylists to be unique to the stylists, and the businesses unique to the businesses (potentially). If so, at the top of <code>rules()</code> you can have your if statement that determines which table to look at.</p>

<pre><code>public function rules()
{

    if ($request-&gt;stylist == "stylist") {
        $table = 'stylists';

    } elseif ($request-&gt;business == "business") {
        $table = 'business';
    }

    // TODO :: you will want to determine which table to use if neither of the above

    return [
            'firstName' =&gt; 'required|string',
            'lastName' =&gt; 'required|string',
            'gender' =&gt; 'required|in:Male,Female',
            'email' =&gt; 'required|string|email|max:255|unique:stylists',
            'password' =&gt; 'required|string|min:6|confirmed',
            'mobileNumber' =&gt; 'required|integer',
            'address' =&gt; 'required|string',
            'name' =&gt; 'required|string',
            'registrationNumber' =&gt; 'required|unique:businesses',
            'bMobileNumber' =&gt; 'required|integer',
            'bAddress' =&gt; 'required',
    ];
} 
</code></pre>

<p>When you have this as your request object in your controller, it's already validated for (yay). There's lots of other stuff you can do in the custom request including error handling which you will be able to read about in the docs.</p>
    </div>