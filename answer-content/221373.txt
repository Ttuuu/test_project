<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't see much that I would change about this code. I recently discovered that the spread syntax can be used to split a string into an array so that could be used to eliminate calling the <code>split()</code> function.</p>

<p>Instead of </p>

<blockquote>
<pre><code>const sortWords = words =&gt; words.map(word =&gt;  word.split('').sort().join(''));
</code></pre>
</blockquote>

<p>use the spread syntax:</p>

<pre><code>const sortWords = words =&gt; words.map(word =&gt;  [...word].sort().join(''));
</code></pre>

<hr>

<p>In this reduction:</p>

<blockquote>
<pre><code>const countDuplicate = words =&gt; words.reduce((acc, word) =&gt; {
  return Object.assign(acc, {[word]: (acc[word] || 0) + 1});
}, {});
</code></pre>
</blockquote>

<p>I presume that the only reason you used brackets with a return statement is because it would be too long for a single line. You could avoid those by pulling out the arrow function to a separate line:</p>

<pre><code>const countWord = (acc, word) =&gt; Object.assign(acc, {[word]: (acc[word] || 0) + 1});
const countDuplicate = words =&gt; words.reduce(countWord, {});
</code></pre>

<p>I know that is only one line shorter but at least there is no need for the brackets and return statement. </p>
    </div>