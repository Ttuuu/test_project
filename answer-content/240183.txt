<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Class constants</h2>

<p>These:</p>

<pre><code>    self.MAX_WORKERS: int = 8
    self.N_PROCESSES: int = 8
</code></pre>

<p>should not be set as instance members; they should be static members, which is done by setting them in the class outside of function scope; i.e.</p>

<pre><code>class InstagramPV:
   MAX_WORKERS: int = 8
   N_PROCESSES: int = 8
</code></pre>

<h2>Nested <code>if</code></h2>

<pre><code>        if 'p' in urls.split('/'):
            if urls not in self.links:
</code></pre>

<p>can be</p>

<pre><code>if urls not in self.links and 'p' in urls.split('/'):
</code></pre>

<h2>Direct import</h2>

<p><code>urllib.parse.urljoin</code> could use a <code>from urllib.parse import urljoin</code>.</p>

<h2>URL passing</h2>

<p>You pass this into <code>submit</code> - <code>urllib.parse.urljoin(link, '?__a=1')</code> - and then fetch <code>url.split()[0]</code>. Why call <code>split</code> at all? Does the original string actually have spaces in it? If so, that should be taken care of before it's passed into <code>submit</code>. Also, don't call <code>urljoin</code> for a query parameter - instead, pass that QP into <code>get</code>'s <code>params</code> argument.</p>

<h2>Streamed downloads</h2>

<p>Regarding this:</p>

<pre><code>    with open(self.folder / f'Image{number}.jpg', 'wb') as f:
        content_of_picture = self.http_base.get(link).content
        f.write(content_of_picture)
</code></pre>

<p>The problem with using <code>content</code> is that it loads everything into memory before being able to write it to a file. Instead, pass <code>stream=True</code> to <code>get</code>, and then pass <code>response.raw</code> to <code>shutil.copyfileobj</code>.</p>
    </div>