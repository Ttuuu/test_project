<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Building on @Snakes and Coffee's answer a bit:</p>

<p>The purpose of the program is to print out the sequence fib(0) to fib(n) - in which case, I would argue that a recursive solution is not the most appropriate.</p>

<p>Currently, when the code goes to calculate fib(5), it starts by calculating the value fib(4) - it actually did this already when it printed out fib(4) in the previous iteration, but this value is not reused and so the work is done again needlessly.</p>

<p>An alternative solution could be to build the list [fib(0), fib(1), fib(2) ... fib(n)]. This is not wasteful as every item in the list is used for calculation, as well as printed out. It also means that once fib(x) has been calculated, the value can be reused for free.</p>

<p>Were the Fibonacci function only being used a handful of times, a recursive solution would make more sense in terms of memory and elegance.</p>
    </div>