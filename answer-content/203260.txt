<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You said…</p>

<blockquote>
  <p>Don't mind the excessive commentation, I've only just started using JavaScript and don't trust myself to remember what every line of code does after a few days.</p>
</blockquote>

<p>But commenting every line is a bad habit for a beginner to form.  Some of the comments are really very redundant and annoying:</p>

<blockquote>
<pre><code>// create web audio api context
var audioCtx = new AudioContext();

// create oscillator (tone) and gain (volume) node
var tone = audioCtx.createOscillator();
var volume = audioCtx.createGain();
</code></pre>
</blockquote>

<p>Comments should be used judiciously.  I think that this amount of commenting would be plenty, even for a beginner:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>// Pick one of these frequencies (in Hz) randomly
var frequencies = ["100", "400", "1600", "6300"];
var frequency = frequencies[(Math.random() * frequencies.length) | 0];

var audioCtx = new AudioContext();

var toneGen = audioCtx.createOscillator();
toneGen.type = 'sine';       // could be sine, square, sawtooth or triangle
toneGen.frequency.value = frequency;

var amplifier = audioCtx.createGain();
amplifier.gain.value = 0.5;  // setting gain above 1 would clip

// Connect nodes: toneGen -&gt; amplifier -&gt; output
toneGen.connect(amplifier);
amplifier.connect(audioCtx.destination);

// Start playing tone at 1 sec, stop at 2 sec
toneGen.start(1);
toneGen.stop(2);</code></pre>
</div>
</div>


<p>For clarity, I've renamed <code>tone</code> → <code>toneGen</code> (to make it clear that it acts as a sound source), and <code>volume</code> → <code>amplifier</code> (because that node is a component; <code>tone.connect(volume)</code> makes no sense).</p>
    </div>