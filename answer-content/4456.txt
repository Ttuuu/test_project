<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>(1) API is a bit odd. Why do I need to call some static methods after I instatiated an object and want to use it already? <code>ATM atm = new  ATM(amount); ATM.calcTotalCorpus();</code></p>

<p>(2) There is a slight mess with access modifiers. For example, Why protected ? <code>protected  int amount=0;</code>
 And why is this method public ?  <code>public  synchronized  void  withdrawCash()</code></p>

<p>(3)This method <code>void  withdrawCash()</code> is full of coments but it would be a lot better to divide this method into a smaller functions to make it more readable. Consider</p>

<pre><code>public  synchronized  void  withdrawCash(){
if(isAmountSufficient()){
    for (int i = 0; i &lt; currDenom.length; i++) {
        if (canDispenseDenomination()) {
            getNoteCount();
            if(canProceedWithIterations()){
                doCalculations();
                deductTotalCorpuse()
                calculateAmmountForNextIteration();
            }                
        }
    }
    displayNotes();
    displayLeftNotes();

}
else{
   reportInsufficientAmmount();
}
</code></pre>

<p>(4) There is also some odd synchronization. The presense of 2 customers means that you have 2 threads which work with a single ATM however in your case you have only one thread for a single ATM and no concurrent access to this ATM from different customers. I would do it in the follwoing way:</p>

<pre><code> public class Consumer extends Thread {
          private final ATM atm;    
          public Consumer (ATM atm) {this.atm = atm;} 

          public void Run() {
             this.atm.dispense(10);
             Thread.sleep(10);
             this.atm.dispense(20);
          }
   } 

   public static void main(String[] args) {
       ATM atm = new ATM(1000);
       Consumer c1 = new Consumer(atm);
       Consumer c2 = new Consumer(atm);
       c1.Start();
       c2.Start();
       ....
   }
</code></pre>

<p>The <code>dispsense()</code> function can implement the logic from <code>withdrawCash()</code> function.</p>
    </div>