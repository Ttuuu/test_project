<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code is clear and conforms to modern C++ programming guidelines.</p>

<p>Here are some small points to consider:</p>

<h1><code>final</code></h1>

<p>The point of <code>final</code> is to help the compiler devirtualize function calls.  Since your classes (<code>Buffer</code>, <code>RepeatHelper</code>, etc.) has no virtual member functions, <code>final</code> does not help the compiler optimize.  It is hence unreasonable to prevent inheriting from these classes (which is handy in many situations).  Therefore, remove the <code>final</code>.</p>

<h1>Template metaprogramming</h1>

<p><code>index_sequence</code> + <code>get</code> is handy, but <code>std::apply</code> is usually more readable.  For example, compare</p>

<pre><code>for (auto i = 0u; i &lt; alignInput; ++i)
{
    *(out + i) = function((begin + i)-&gt;template get&lt;Is&gt;()...);
}
</code></pre>

<p>with</p>

<pre><code>std::transform(begin, begin + i, out, [](auto&amp;&amp; element) {
    return std::apply(function, std::forward&lt;decltype(element)&gt;(element));
});
</code></pre>

<p>(assuming that the tuple from boost implements the standard tuple protocol).</p>

<p>Since you are already using boost, you can use Boost.Mp11 <a href="https://www.boost.org/doc/libs/1_72_0/libs/mp11/doc/html/mp11.html#mp_repeat_cl_n" rel="nofollow noreferrer"><code>mp_repeat_c</code></a> to produce a tuple of <code>N</code> copies of the same type:</p>

<pre><code>boost::mp11::mp_repeat_c&lt;std::tuple&lt;T&gt;, N&gt; // produces std::tuple&lt;/* N copies of T */&gt;
</code></pre>

<p>Also, this one from <code>join</code>:</p>

<pre><code>std::conjunction_v&lt;std::is_same&lt;Input1ValueType, Input2ValueType&gt;,
                   std::is_same&lt;Input1ValueType, OutputValueType&gt;&gt;
</code></pre>

<p>can be replaced by:</p>

<pre><code>boost::mp11::mp_same&lt;Input1ValueType, Input2ValueType, OutputValueType&gt;::value
</code></pre>
    </div>