<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a good first-cut solution to the functional requirement of stated question. However, when you look at it as production code related to two companies (<code>X</code> and <code>Y</code>) these points arise:</p>

<ol>
<li><p><strong>Monolithic</strong>: The code should be well demarcated across <code>X</code> and <code>Y</code> company logic. A single <code>analytics</code> <code>function</code> is processing all of the logic with an (admittedly, nice) <code>value</code> control. This has merged the implementation into one piece of code. Say, <code>Y</code> no longer needs the average or, maybe needs something else. Change in code for <code>Y</code> will need to engage with the primary logic of <code>X</code>'s code.</p></li>
<li><p><strong>Scaling</strong>: Imagine a new company <code>Z</code> wants to get not just the average but also the number of data points seen by <code>X</code> (the <code>totalPoints</code>). Changing this monolithic <code>analytics</code> code would engage with all of the existing logic.</p></li>
</ol>

<p>These are probably not the only points (and they are also both associated with monolithic and scaling issues). I am just trying to imagine some scaling paths and outline the monolithic-nature of this solution.</p>

<p>To get a fair view of this, consider some changes in the requirements and attempt to modify the code to incorporate them. The complexity required in the edit should be reasonably comparable to the requirement (not higher). Contact of the edit with other parts of the implementation should be minimal.</p>

<p>From a different standpoint, this code would be called a prototype of the logic. The production version would need to handle aspects beyond functionality (like: maintainability, scaling, business-logic separation, readability too).</p>

<p>I wonder if you were asked further questions by the interviewer after reading this program. Were they alluding towards these points.</p>
    </div>