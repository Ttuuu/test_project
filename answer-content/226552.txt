<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Something I ran into while making my own implementation:</p>

<p>After 34 rows, the highest number in the row will be two <code>1166803110</code>s. Adding these for row 35 exceeds the maximum value for ints, resulting in integer-overflow.</p>

<p>You might consider putting the line that does the addition into a <code>checked</code> block, so that an <code>OverflowException</code> is properly thrown:</p>

<pre><code>for (int j = 0; j &lt; prevRow.Count - 1; j++)
{
     checked 
     {
         row.Add(prevRow[j] + prevRow[j + 1]);
     }
}
</code></pre>

<p>As mentioned in the comments, the values in the rows grow almost exponentially. This means that switching from <code>int</code> to <code>long</code> as datatype in the lists will only roughly double the amount of rows that can be supported before these too overflow.</p>
    </div>