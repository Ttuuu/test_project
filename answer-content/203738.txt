<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Lets start with the time complexity of your current algorithm:</p>

<p><code>for (int i = 0; i &lt; A.length; i++)</code> has a time complexity of <code>O(M)</code> (Length of array 'A' is 'M')<br>
<code>Arrays.sort(I)</code> has a time complexity of <code>O(N*log(N))</code><sup><a href="https://stackoverflow.com/questions/21219777/the-running-time-for-arrays-sort-method-in-java">1</a></sup><br>
<code>Arrays.fill(I, I[I.length - 1])</code> has a time complexity of <code>O(N)</code> (The number of counters)</p>

<p>That means the complexity of your current algorithm is <code>O(N^2 * log(N) * M)</code>.<br><br></p>

<p>You can replace the sorting by keeping track of the maximum value for all counters like this:</p>

<pre><code>public int[] maxCount(int[] A, int N)
{
    int[] I = new int[N];
    //Initialize the max value to 0
    int max = 0;

    for (int i = 0; i &lt; A.length; i++)
    {
        if (A[i] == N + 1)
        {
            Arrays.fill(I, max);
        }
        else
        {
            I[A[i] - 1]++;

            if (I[A[i] - 1] &gt; max)
            {
                //Update the max value 
                max = I[A[i] - 1];
            }
        }
    }
    return I;
}
</code></pre>

<p>The time complexity of this version is now <code>O(M * N)</code>. This version is also using <code>if</code> statements to control the flow of the program as opposed to exceptions which is an anti-pattern<sup><a href="https://web.archive.org/web/20140430044213/http://c2.com/cgi-bin/wiki?DontUseExceptionsForFlowControl" rel="nofollow noreferrer">2</a></sup>.</p>

<p><strong>UPDATE</strong>: I've used the suggestion of <strong>Mees de Vries</strong> from his comment to implement a data structure for the problem. The complexity of the function reading the instruction <code>incrementCounters()</code> is <code>O(n)</code>.</p>

<pre><code>public class SynchronizedCounters
{
    private int[] counters;
    private int size;
    private int base = 0;
    private int max = 0;
    private final int INSTRUCTION_OFFSET = 1;

    public SynchronizedCounters(int size)
    {
        this.size = size;
        this.counters = new int[size];
    }

    public void incrementCounters(int[] instructions)
    {
        for (int instruction : instructions)
        {
            int instruct = instruction - INSTRUCTION_OFFSET;

            if (instruct &gt;= size)
            {
                base = max;
            }
            else
            {
                normalizeCounter(instruct);

                counters[instruct]++;

                if (counters[instruct] &gt; max)
                {
                    max = counters[instruct];
                }
            }
        }
    }

    public Integer getCounterValue(int counter)
    {
        normalizeCounter(counter);
        return counters[counter];
    }

    private void normalizeCounter(int index)
    {
        counters[index] = java.lang.Math.max(counters[index],base);
    }
}
</code></pre>

<p>Example using the class:</p>

<pre><code>public static void main(String[] args)
    {
        SynchronizedCounters synchronizedCounters = new SynchronizedCounters(5);
        synchronizedCounters.incrementCounters(new int[]{1, 1, 1, 3, 2, 1, 1, 6, 2, 3});
        System.out.println("Value of first counter: " + synchronizedCounters.getCounterValue(0));
    }
</code></pre>

<p>Output:</p>

<pre><code>Value of first counter: 5
</code></pre>

<p><sup><a href="https://stackoverflow.com/questions/21219777/the-running-time-for-arrays-sort-method-in-java">1</a></sup> <a href="https://stackoverflow.com/questions/21219777/the-running-time-for-arrays-sort-method-in-java">https://stackoverflow.com/questions/21219777/the-running-time-for-arrays-sort-method-in-java</a></p>

<p><sup><a href="https://web.archive.org/web/20140430044213/http://c2.com/cgi-bin/wiki?DontUseExceptionsForFlowControl" rel="nofollow noreferrer">2</a></sup> <a href="https://web.archive.org/web/20140430044213/http://c2.com/cgi-bin/wiki?DontUseExceptionsForFlowControl" rel="nofollow noreferrer">https://web.archive.org/web/20140430044213/http://c2.com/cgi-bin/wiki?DontUseExceptionsForFlowControl</a></p>
    </div>