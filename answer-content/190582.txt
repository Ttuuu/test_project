<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Pure V State</h1>

<p>There are two ways you can do this.</p>

<h3>Pure</h3>

<p>The first functional pure method first copies the array, then checks if the item to toggle exists then depending on that result adds or removes the item. Making sure that the added item is a copy, not a reference. It has no side effects but requires additional memory and CPU cycles.</p>

<pre><code>const toggleItem = (itemDesc, items, prop = "name") =&gt; {
    items = [...items]; 
    const index = items.findIndex(item =&gt; itemDesc[prop] === item[prop]);
    index &gt; -1 ? items.splice(index, 1) : items.push({...itemDesc});
    return items;
}
</code></pre>

<h3>State</h3>

<p>The second does not create a new array and keeps all references It is "functionally" impure and ensures that the changed state is available to all references to the original. It is considerably quicker and uses less memory.</p>

<pre><code>const toggleItem = (itemDesc, items, prop = "name") =&gt; {
    const index = items.findIndex(item =&gt; itemDesc[prop] === item[prop]);
    index &gt; -1 ? items.splice(index, 1) : items.push(itemDesc);
    return items;
}
</code></pre>
    </div>