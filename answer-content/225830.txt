<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't use Python on a day-to-day basis, so here's a basic improvement (less incredible since you edited your code but still useful). It's pretty straightforward, I just grouped your conditions differently to have less redundances.</p>

<pre><code>def get_max_sum(num, input):
    output_1 = {'skip': True, 'sum': input[0]+input[1], 0: input[0], 1:input[1]}
    output_2 = {'skip': False, 'sum': input[0]+input[2], 0: input[0], 2:input[2]}

    main_output = [output_1, output_2]

    for i in range(2, num):
        for output in main_output:
            if output.get(i) is not None: #let you save on indentation
                continue
            if output['skip']:
                output['skip'] = False
                continue
            if len(input) &gt; i+1 and input[i] &lt;= input[i+1]: #the special case
                output[i+1] = input[i+1]
                output['sum'] += input[i+1]
                if output.get(i) is not None:
                    output['skip'] = True
            else: #all the others
                output[i] = input[i]
                output['sum'] += input[i]
                if output.get(i-1) is not None:
                    output['skip'] = True


    if main_output[0]['sum'] &gt;= main_output[1]['sum']:
        return main_output[0]['sum']
    else:
        return main_output[1]['sum']


print(get_max_sum(8, [3, 2, 3, 2, 3, 5, 1, 3]))
print(get_max_sum(5, [10, 3, 5, 7, 3]))
print(get_max_sum(5, [10, 1, 5, 7, 3]))
</code></pre>

<p>As someone pointed in the comment, I'm not sure your code would work on every cases, but I'm here to improve the code, not the solution ^^</p>

<p>Still, consider things like [1, 8, 10, 4, 1] for example.</p>
    </div>