<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can speed this further in 2 ways.</p>

<h1>local variables</h1>

<p>a local variable lookup is faster than  a global. Since you lookup scales an awful lot, this can improve performance</p>

<h1>np.fromiter</h1>

<p>where you can even specify the initial length to improve performance further</p>

<pre><code>def affinity_matrix_generator(protein_sequence, rna_sequence, scales=scales):
    for base in rna_sequence:
        base_scale = scales[base]  # saving another dict lookup
        for protein in protein_sequence:
            yield base_scale[protein]

def affinity_matrix(protein_sequence, rna_sequence, scales=scales):
    iterator = affinity_matrix_generator(protein_sequence, rna_sequence, scales=scales)
    size = len(protein_sequence) * len(rna_sequence)
    return np.fromiter(iterator, dtype=float, count=size).reshape(len(protein_sequence), len(rna_sequence))
</code></pre>
    </div>