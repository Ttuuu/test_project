<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's not much weak points I can see. </p>

<p>The biggest one is the way to use it. One needs to declare a variable to be caught in the block (closure), and I think it's unnecessary. You should be able to do this:</p>

<pre><code>  Repeater.new do
    event_present_in_database
  end.until do |result|
    result
  end.repeat(times: 10, delay: 0.1)
</code></pre>

<p>If you changed the <code>break</code> like like this: </p>

<pre><code>  break if @until_block.present? &amp;&amp; @until_block.call(result)
</code></pre>

<p>The second, tiny point would be: make it clearer to understand the extraction to method conditionals: </p>

<pre><code>  # ...
  break if exit_criteria_satisfied?(result)
  # ...

  private 
  def exit_criteria_satisfied?(result)
    @until_block.present? &amp;&amp; @until_block.call
  end
</code></pre>

<p>That's all I got. The rest of the code seems pretty clear to me. </p>

<blockquote>
  <p>I know Ruby has all sorts of tricks</p>
</blockquote>

<p>Yeah, but I don't know a single one that could help with the readability here. </p>
    </div>