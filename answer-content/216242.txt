<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Spark dataframes (and columns) have a <code>distinct</code> method, which you can use to get all values in that column. Getting the actual values out is a bit more complicated and taken from <a href="https://stackoverflow.com/a/39384987/4042267">this answer</a> to a <a href="https://stackoverflow.com/q/39383557/4042267">similar question on StackOverflow</a>:</p>

<pre><code>from pyspark.sql import SparkSession

def get_distinct_values(data, column):
    return {x[column] for x in data.select(column).distinct().collect()}

spark = SparkSession \
    .builder \
    .appName("Python Spark SQL basic example") \
    .config("spark.some.config.option", "some-value") \
    .getOrCreate()

input_data = spark.read.csv("/tmp/sample.csv", inferSchema=True, header=True)
input_data.createOrReplaceTempView("input_data")

print({c: get_distinct_values(input_data, c) == {True, False}
       for c in input_data.columns})
# {'category': False, 'logged_in': True, 'gid': False, 'pol_id': False, 'subcategory': False}
</code></pre>

<p>I don't know enough about spark to know how you would cast this back into a spark dataframe, but this should get you at least halfway there and be a bit faster, since it can do the fastest implementation it can to reduce the values to sets.</p>

<hr>

<pre><code># /tmp/sample.csv
pol_id,gid,category,subcategory,logged_in
1,1,A,a,1
2,1,A,b,0
1,2,B,b,1
2,2,B,a,0
</code></pre>
    </div>