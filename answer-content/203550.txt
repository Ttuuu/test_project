<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <code>if</code> condition  </p>

<pre><code>if( batch == null || batch?.Count() == 0 ) { logger.Error( MSG_NO_DATAROWS ); return false; }  
</code></pre>

<p>has some flaws:  </p>

<ul>
<li><p>the Null-Conditional operator <code>?</code> on <code>batch?.Count() == 0</code> isn't needed, because you already check for <code>batch == null</code>  </p></li>
<li><p>If the passed <code>IEnumerable&lt;DataRow&gt;</code> isn't a <code>Collection&lt;T&gt;</code> the <code>IEnumerable&lt;DataRow&gt;</code> will be enumerated completely for calculating the <code>Count</code>.<br>
Assume you have millions of items in that <code>IEnumerable&lt;T&gt;</code> guess how much time it takes to iterate twice (once for <code>Count()</code> and once for the <code>foreach</code>).  </p></li>
<li><p>Having multiple statements in a single line reduces the readability of the code.</p></li>
</ul>

<p>A better way would be to use the <code>Any()</code> method like so  </p>

<pre><code>if( batch == null || !batch.Any()) 
{ 
    logger.Error( MSG_NO_DATAROWS ); 
    return false; 
}  
</code></pre>
    </div>