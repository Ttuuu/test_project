<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>string[] splitStrArray = SNString.Split('-');
int[] expectedLengths = { 3, 8, 3 };

if( splitStrArray.length != 3 ){
    return false;
}

for( int i = 0; i &lt; expectedLengths; ++i ){
    int expectedLength = expectedLengths[i];
    int actualLength = splitStrArray[i].Length;

    if( expectedLength != actualLength ){
        return false;
    }
}

return true;
</code></pre>

<p>I prefer loops, early exits and an "innocent until proven guilty" approach.</p>

<p>With regards to making code simple and generic, the original code is terrible.
Explicitly naming values in an array like that, then doing the same operation to them all is bad practise. Reasons being:</p>

<ul>
<li>It's awkward to maintain</li>
<li>It's not scalable</li>
<li>It just causes code to become longer than needed</li>
</ul>

<p>It might be overkill in this situation, but generalised code that don't have names like "part1, part2, part3" is just way easier for me to read and get to grips with.</p>

<p>Hope this helps!</p>
    </div>