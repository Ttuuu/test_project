<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Indentation</strong></p>

<p>Much about indentation is a <em>style issue</em>.  Best to follow your group's style guide.  That said I would align comment with code.</p>

<pre><code>//check letter count
    if (check == 'l')
</code></pre>

<p>to</p>

<pre><code>    // check letter count
    if (check == 'l')
</code></pre>

<p><strong>Spell check</strong></p>

<p>Spelling errors are a distraction and a confusion.</p>

<p><strong><code>double</code> vs. <code>float</code></strong></p>

<p>In C, <code>double</code> is the default type for floating point constants like <code>0.0588</code>.  Code is going through lots of gyrations converting form <code>int</code> to <code>float</code> to <code>double</code> and back to <code>float</code>.  I suggest using <code>double</code> unless required to use <code>float</code> or code has <em>lots</em> of FP.  </p>

<pre><code>// float gradeLevel = (0.0588 * (100 * (float) length(input, 'l') / (float) length(input, 'w')) - 0.296 * (100 * (float) length(input, 's') / (float) length(input, 'w'))) - 15.8;
double gradeLevel = 0.0588 * (100.0 * length(input, 'l') / length(input, 'w'))
    - 0.296 * (100.0 * length(input, 's') / length(input, 'w')) - 15.8;
</code></pre>

<p>If staying with <code>float</code>, use <code>float</code> constants: <code>0.0588</code> --&gt; <code>0.0588f</code></p>

<p><strong>Rounding (advanced)</strong></p>

<p><code>round()</code>returns a <code>double</code>.  C provides a nice way to round a <em>floating point</em> to an integer type in one step</p>

<pre><code>long gradeLevel = lround(0.0588 * (100.0 * length(input, 'l') / length(input, 'w'))
    - 0.296 * (100.0 * length(input, 's') / length(input, 'w')) - 15.8);
...
printf("Grade %ld\n", gradeLevel);
</code></pre>
    </div>