<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Configuration file paths</h2>
<p>If possible, factor out a common path:</p>
<pre class="lang-none prettyprint-override"><code>[FILES]
MEDIA_PATH=C:\Users\Dell\Desktop\gjh\formfill\media
HTML_FILE_NAME_FOL=mydoc-utf8.htm
HTML_FILE_NAME_DPID=mydoc-utf8.htm
EXCEL_FILE_NAME=AM2.CSV
</code></pre>
<h2>Typo?</h2>
<p><code>I do now need</code> -&gt; <code>I do not need</code></p>
<h2>Caching</h2>
<blockquote>
<p>I do [not] need to run this function again and again but once once similar
to like what one would do if one wants to fill the database the first time.
Is this possible anyway?</p>
</blockquote>
<p>Almost certainly. The easiest way to do this is check if the file exists beforehand. One risk of this approach is that it may not be thread-safe, so you may need to surround the file-check-file-write in a lock if access to that code path is multi-threaded.</p>
<h2>Enums</h2>
<p>Consider making an <code>Enum</code> to represent the two (?) choices for <code>opt</code> values:</p>
<pre><code>class TagOpt(Enum):
    FOL = 'FOL'
    DPID = 'DPID'
</code></pre>
<p>rather than accepting it as a string.</p>
<h2>Temporary variables</h2>
<pre><code>config["FILES"][f"HTML_FILE_NAME_{opt.upper()}"]
</code></pre>
<p>should be put into a temporary variable since you write it twice; perhaps:</p>
<pre><code>html_path = config["FILES"][f"HTML_FILE_NAME_{opt.upper()}"]
html = codecs.open(html_path, encoding='utf-8').read()
with open(html_path, "w", encoding="utf-8") ...
</code></pre>
<h2>I/O costs</h2>
<p>Depending on the load characteristics of your application, you might want to modify <code>load_custom_tags</code> to use something like an LRU cache so that a certain number of most-recently-used HTML files are kept in memory. The cost of a round trip to the hard disc might end up being inconvenient to pay.</p>
    </div>