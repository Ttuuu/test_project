<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Feedback</h2>

<p>This is an interesting script. I understand the desire to update the styles but don't see the point in changing the titles and placeholder texts to contain <em>Stack OverFlow</em> since it isn't the case that the search would involve SO posts...  </p>

<p>Do you still use this userscript? I see that <a href="https://greasyfork.org/en/scripts/34034-so-ify" rel="nofollow noreferrer">the linked code</a> has evolved (and I have feedback on that code but I'll save that for another review). The <a href="http://web.archive.org/web/20180216174901/https://stackoverflow.com/" rel="nofollow noreferrer">styles from February 16th 2018</a> are a bit different that those of today - especially with the new sidebar that was introduced back in June...</p>

<h2>Suggestions</h2>

<h3>Many elements are obtained via queried when properties could be used:</h3>

<ul>
<li><p><code>document.querySelectorAll("link[rel='stylesheet']");</code> -&gt; <a href="https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets" rel="nofollow noreferrer"><code>document.styleSheets</code></a> (though that wouldn't include the favicon - I see the latest verison updates that)</p>

<p>I also considered suggesting that the filtering of stylesheets could be moved into the CSS selector - something like <code>document.querySelectorAll("link[rel='stylesheet']:not([href~='stackoverflow']")</code> - that way the <code>if</code> condition within the callback function passed to <code>sheets.forEach()</code> could be removed... This would be analogous to filtering in a database query instead of a scripting language. </p></li>
<li><code>document.getElementsByTagName("body")[0]</code> -&gt; <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/body" rel="nofollow noreferrer"><code>document.body</code></a></li>
<li><code>document.querySelector('title').innerText</code> -&gt; <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/title" rel="nofollow noreferrer"><code>document.title</code></a></li>
<li><code>document.querySelector('input[name="q"]');</code> -&gt; <code>document.forms[0].elements.q</code></li>
</ul>

<h3>Use <code>const</code> instead of <code>let</code> wherever re-assignment is not needed</h3>

<p>This will avoid unintentional variable clobbering. Even if properties of an object or elements of an array are assigned later, <code>const</code> can still be used</p>

<h3>Variable created for <code>&lt;head&gt;</code> element but not always used when it could be</h3>

<p>The first SO styleSheet is added via <code>head</code> but the second is added via <code>document.head</code></p>

<h3>D.R.Y. adding CSS files</h3>

<p><code>primaryCSS</code> and <code>secondaryCss</code> could be added to an array, and then for each of those paths, an iterator loop could create the link elements - possibly using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" rel="nofollow noreferrer"><code>Array.forEach()</code></a> with a callback function - or that callback function could be a named function. Also, the stack exchange sites should have jQuery, which could also be used to dramatically shorten the code needed to create elements. </p>
    </div>