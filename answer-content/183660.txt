<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, you don't need to hardcode the letters and their positions in the alphabet - you can use the <a href="https://docs.python.org/3/library/string.html#string.ascii_lowercase" rel="noreferrer"><code>string.ascii_lowercase</code></a>.</p>

<p>Also, you don't have to call <code>list()</code> on a <code>new_text</code> - you can just iterate over it character by character.</p>

<p>Then, what if we would construct a mapping between letters and letter indexes in the alphabet (with the help of <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="noreferrer"><code>enumerate()</code></a>). Then, use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a> to create an array of numbers which we then join to produce a result:</p>

<pre><code>from string import ascii_lowercase


LETTERS = {letter: str(index) for index, letter in enumerate(ascii_lowercase, start=1)} 

def alphabet_position(text):
    text = text.lower()

    numbers = [LETTERS[character] for character in text if character in LETTERS]

    return ' '.join(numbers)
</code></pre>
    </div>