<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The variable <code>file_does_not_exist</code> is simply used as loop control, but we don't need it:</p>

<pre><code>while not os.path.isfile(file_to_check):
    pass
</code></pre>

<p>However, this loop is very inefficient.  It's what we call a <strong>busy</strong> loop; that is, it never pauses, but continually polls for its condition.  This is harmful, as it monopolises a processor and wastes energy.  Sensible operating systems will de-prioritise busy tasks like this (to reduce its impact on other processes), which will reduce the UI responsiveness when you exit the loop, until the scheduler catches up with the change in the program's behaviour.</p>

<p>Instead, we should use operating system features (preferably abstracted in a platform-independent Python library) to <strong>wait</strong> for a change, allowing your process to sleep until it's notified.  I don't know of a platform-independent library, but there are some possibilities for Linux (<code>inotify</code>) and Windows (<code>watchdog</code>) at least.  Using one of these will yield processor time to other processes and make your program into a "good citizen" on a shared system.</p>
    </div>