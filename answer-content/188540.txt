<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The only thing I noticed is that <code>retry</code> has a potentially <strong>inconsistent</strong> behavior.</p>

<p>Let me explain:</p>

<pre><code>def retry(func, *func_args, **kwargs):
    retry_count = kwargs.get("retry_count", 5)
    delay = kwargs.get("delay", 5)
    while retry_count &gt; 1:
        if func(*func_args):
            return
        log.debug("waiting for %s seconds before retyring again")
        sleep(delay)
        retry_count = retry_count - 1

    return func(*func_args)
</code></pre>

<blockquote>
  <p>If <code>func</code> is successful while checking it <strong>inside</strong> the <code>while</code>,
  <code>None</code> will be returned. On the other hand, if it is successful
  <strong>outside</strong> the <code>while</code>, it will return whatever <code>func</code> returns (in your example <code>True</code>). You do not want to have that..</p>
</blockquote>

<p>So I would propose a slight re-coding:</p>

<pre><code>def retry(func, *func_args, **kwargs):
    retry_count = kwargs.get("retry_count", 5)
    delay = kwargs.get("delay", 5)
    for _ in range(retry_count):  # all tries happen in the loop
        if func(*func_args):
            return True           # if we succeed we return True
        log.debug("waiting for %s seconds before retyring again")
        sleep(delay) 
    return False                  # if we did not, we return False
</code></pre>

<hr>

<p>You can get a bit fancier if you want to by subsituting the above <code>for</code> loop with this:</p>

<pre><code>for _ in range(retry_count):
    res = func(*func_args) or log.debug("waiting for %s seconds before retyring again")
    if res is None:
        sleep(delay)
    else:
        return True
</code></pre>

<p><em>Note that I am assuiming here that <code>log.debug</code> returns <code>None</code> but it does not really matter as long as it does not return <code>True</code>.</em></p>
    </div>