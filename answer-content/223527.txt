<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2><code>main</code></h2>

<p>C17::6.11.6:</p>

<blockquote>
  <h3>Function declarators</h3>
  
  <ol>
  <li>The use of function declarators with empty parentheses (not prototype-format parameter type declarators) is an obsolescent feature.</li>
  </ol>
</blockquote>

<p>The new standards removed the implicit <code>int</code> rule (I don't know if it was C11 or C99).</p>

<p>Use <code>int main(void)</code>. </p>

<h2>bug</h2>

<p>CiaPan found a bug. Here are three proposals to fix it.</p>

<ol>
<li><pre><code>for (c = getchar(); (c != '\n') &amp;&amp; (c != EOF); i++) {
        longest[i] = c;
        c = getchar();
}
</code></pre></li>
<li><pre><code>c = getchar();
while ((c != '\n') &amp;&amp; (c != EOF)) {
        longest[i++] = c;
        c = getchar();
}
</code></pre></li>
<li><pre><code>while (((c = getchar()) != '\n') &amp;&amp; (c != EOF))
        longest[i++] = c;
</code></pre></li>
</ol>

<h2>macros parenthesized</h2>

<p>Although sometimes it's not needed, for safety reasons it's better to parenthesize macros always (at least macros that evaluate to a value):</p>

<pre><code>#define MAX_LINE (1000)
</code></pre>

<h2><code>ptrdiff_t</code> or <code>size_t</code></h2>

<p>Variables than mean array indices should preferably be of one of these <a href="//stackoverflow.com/a/3174900">types</a>.</p>

<h2>loop local variables</h2>

<p>Since C99 you can create variables local to a loop.  That helps removing some lines of code.</p>

<pre><code>for (ptrdiff_t i = 0; (c = getchar()) != EOF; i++) {
        ...
}
</code></pre>

<h2>magic numbers</h2>

<p>Don't write any number different than <code>0</code>, <code>1</code>, or <code>2</code> in any part of your code apart from constant macros: <code>#define FOO (9)</code> is the only place where numbers deserve to go.  Sometimes there are exceptions to that rule, but you will know the time when it comes.</p>

<p>If you see any magic number in your code, think of a good name for it and write a macro.</p>
    </div>