<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>General feedback</h2>

<p>It is difficult to tell exactly what this code is supposed to do, mostly because there are no samples of HTML where the code will and will not perform different tasks. I tried running it on the HTML of <a href="https://bhansa.github.io/" rel="nofollow noreferrer">your github page</a> (though without the CSS initially). I see the border added to two elements: a subscribe link and a <code>&lt;time&gt;</code> element. You replied to my question in a comment, saying:</p>

<blockquote>
  <p>I want to give border only to leaf nodes otherwise, it will result in nested borders. I just want to highlight that element that it is not compliant.</p>
</blockquote>

<p>But the code will only add the border and image to the first element of each tag that have only one child element. Should it do so to all elements of each tag that have only one element? If so, <code>document.querySelector()</code> won't work for that.</p>

<p>As was mentioned already, the code can likely be optimized to use fewer loops. And DOM lookups can be minimized by caching them in variables (see third bullet below). And instead of always adding every single element node to <code>arr</code> in <code>loop()</code>, would it work to only add node elements that have one and only one child element?</p>

<h2>More specific feedback</h2>

<ul>
<li><strong>ES-6</strong>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions" rel="nofollow noreferrer">Arrow functions</a> are used, which are a feature of <a href="https://www.ecma-international.org/ecma-262/6.0/#sec-arrow-function-definitions" rel="nofollow noreferrer">EcmaScript-2015 (A.K.A. es-6)</a>. Because of this, other es-6 features can be used like <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" rel="nofollow noreferrer"><code>const</code></a> for any variable that doesn't need to be re-assigned and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" rel="nofollow noreferrer"><code>let</code></a> for block scope variables.</li>
<li><strong>Unused variable</strong>: <code>var brandFont</code> does not appear to be used in the code after it is declared. Was it supposed to be used when setting <code>fontNotMatch</code>?</li>
<li><p><strong>Adding borders and adding images</strong>:</p>

<blockquote>
<pre><code>} if (document.querySelector(element).childNodes.length == 1) {
  document.getElementsByTagName(element)[0].style.border = "2px solid red";
</code></pre>
</blockquote>

<p>The conditional checks if the first element matched by <code>element</code> has one single child node, then the next line sets the border of the first element with that tag name. Then later on, the first element matched by <code>element</code> is used again to insert the image into. This could be optimized by storing the DOM reference to the first element with the tag name in a (<code>const</code>) variable at the beginning and then using that variable later instead of querying the DOM later. </p></li>
<li><p><strong>Checking for a substring in a string</strong> This code:</p>

<blockquote>
<pre><code>if (fontChecker[element].indexOf("Open Sans") != 1) {
</code></pre>
</blockquote>

<p>checks that <code>Open Sans</code> appears in the 2<sup>nd</sup> position (i.e. index 1). While that works for a string that starts with <code>"Open Sans"</code> that text could come later in the string, which would break the condition. A better check would be that the substring has an index greater than <code>-1</code> (i.e. found):</p>

<pre><code>if (fontChecker[element].indexOf("Open Sans") &gt; -1) {
</code></pre></li>
<li><p><strong>Empty Conditional block</strong>: As Marc mentioned, the block below can lead to a <a href="https://martinfowler.com/bliki/CodeSmell.html" rel="nofollow noreferrer">code smell</a>:</p>

<blockquote>
<pre><code>if (brandColor.indexOf(stylesContainer[element]) &gt; -1) {
  //pass
} else if (document.querySelector(element).childNodes.length == 1) {
</code></pre>
</blockquote>

<p>For more tips on cleaning up code, check out <a href="https://www.youtube.com/watch?v=GtB5DAfOWMQ&amp;t=2910s" rel="nofollow noreferrer">this video of a presentation Rafael Dohms talk about cleaning up code</a> (or <a href="https://www.slideshare.net/rdohms/bettercode-phpbenelux212alternate" rel="nofollow noreferrer">see the slides here</a>).</p></li>
</ul>
    </div>