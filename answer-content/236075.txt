<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'll start off by saying I don't have Caliburn.Micro experience but do have other MVVM experience.  </p>

<p>I'm going to assume the ShellView is the shell for your entire application.  I don't know what other code that is running but I can tell you as a user I would not want to fire off your application and wait for over 10 seconds, because we are waiting for 10 seconds plus the time it takes for the other calls to come back, to be able to use the application.  Worst yet is even if the screen hasn't shown.  Then I'm likely to fire it off multiple times thinking it stuck or I didn't double click it.   </p>

<p>In general it's not best practice to do async void, so I would question why Task.Delay instead of Thread.Sleep since the delay is the only async code.   </p>

<p>If we are leaving it as async it should be wrapped in a try/catch otherwise if there is an exception you will need to handle it in Application.DispatcherUnhandledException or AppDomain.UnhandledException.  Which brings up a point if there is an exception I assume you want just Failed as the user name? </p>

<p>Now to a different idea.  You could remove this from startup, or try once to get it in startup,  Then setup a timer to recheck if it failed.  The application state could be based on if it has a name yet or not.  For Example:  The user can start entering data but can't save it until we retrieved the AD user.  </p>

<p>If just want to wait until there is user name or not it still better to give the user an idea what's going on so they can see the application isn't just hung and that's it's checking network activity.  Create an initial view of just gather application information and part of that is gathering network user information. </p>
    </div>