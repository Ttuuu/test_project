<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>There is no reason to allocate the <code>double[] x</code> array. It is better to compute the argument as you go: initialize <code>double x = a;</code> and increment it <code>x += delta_x;</code> in the loop body.</p></li>
<li><p><code>if</code> in the loop is usually a performance killer. Consider incrementing <code>j</code> by 2:</p>

<pre><code>    for (int j = 1; j &lt; n; j += 2)
    {
        sum += 2 * Function(x);
        x += delta_x;
        sum += 4 * Function(x);
        x += delta_x;
    }
</code></pre>

<p>Now depending on the parity of <code>n</code> the very last addition could be wrong, and you need to compensate for it.</p></li>
<li><p><code>Function</code> shall not be a <code>Simpson</code>'s method. The <code>Simpson</code> shall not care what it integrates. Change the signature of <code>Compute</code> to accept the callable.</p></li>
<li><p>The choice of <span class="math-container">\$\dfrac{1}{1 + x^5}\$</span> for an integrand looks strange. It is hard to verify that the result is correct. I recommend to test against some more friendly integrands first.</p></li>
</ul>
    </div>