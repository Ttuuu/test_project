<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>String as an Array</strong></p>

<p>You got your string parameter:</p>

<pre><code>string originalString
</code></pre>

<p>Then you turned it into a list:</p>

<pre><code>OriginalList.AddRange(originalString);
</code></pre>

<p>Then you turned it into an array:</p>

<pre><code>charArray = OriginalList.ToArray();
</code></pre>

<p>And finally used it as:</p>

<pre><code>character = (charArray[i]);
</code></pre>

<p>Instead of all that, you could have just done this:</p>

<pre><code>character = (originalString[i]);
</code></pre>

<p><strong>Class Design</strong></p>

<p>Instantiating a StringCompression class every time you wanna compress a string can be avoided by just declaring the function CompressionMethod as static since the class has no members anyway. So in Main, you only have to do:</p>

<pre><code>StringCompression.CompressionMethod("String here");
</code></pre>

<p>Or better: make it an <a href="http://msdn.microsoft.com/en/library/bb383977.aspx">extension method</a>.</p>

<p><strong>String Builder</strong></p>

<p>Instead of a list of strings in:</p>

<pre><code>CompressedList = new List&lt;string&gt;();
</code></pre>

<p>You could instead use a <a href="https://msdn.microsoft.com/en-us/library/System.Text.StringBuilder(v=vs.110).aspx">String Builder</a> to create the resulting string.</p>
    </div>