<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>BmiCalculatorWorking</code> This name is confusing. All code should eventually be 'working'.</p>

<p>Don't use static for all variables. I can only guess you did this to avoid the warning about calling non-static variables from a static method.</p>

<p>Instead, you can instantiate a BmiCalculatorWorking, and call the methods on the object.</p>

<p>You should never use <code>while(true)</code>, instead put the condition inside the while loop.</p>

<p>If you've learned how to create methods, you should start practicing making them. It'll make your code much easier to read &amp; much easier to refactor. For example, printing out the welcome message could be a method.</p>

<p>This can be shortened to: <code>int userInput = input.nextInt();</code></p>

<pre><code>int userInput;
userInput = input.nextInt();
</code></pre>

<p><code>bmiCalcImperial</code> is a really bad name for a method. It's not descriptive. This method is also doing waaaaay too much. Methods should only do 1 thing. This becomes easy when you name your methods descriptively. For example, this method would have a really long &amp; awkward name.</p>

<p><code>continueLoop</code> is a bad name. Try to give descriptive names. Naming it continueLoop because it's used in a while statement is silly.</p>

<p>Just want to further emphasis that breaking this down into methods would substantially increase readability. Even for yourself. For example when trying to figure out your own errors or add functionality.</p>

<p>Indentation also plays a huge part in readability. An IDE will help you with this but I understand some college/university courses start off disallowing an IDE and I will assume that's the case here.</p>

<p>You shouldn't shorten variables names. <code>bmi</code> is okay, but I can't think of what <code>cms</code>, <code>mtr</code> stand for. Even if it's obvious, the computer doesn't care about how long your variable names are and you aren't saving much time by shortening them. It's not a big deal here but something to keep in mind for future programs.</p>
    </div>