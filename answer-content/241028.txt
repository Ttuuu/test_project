<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I must admit that my experience with <a href="/questions/tagged/typescript" class="post-tag" title="show questions tagged 'typescript'" rel="tag">typescript</a> and <a href="/questions/tagged/react.js" class="post-tag" title="show questions tagged 'react.js'" rel="tag">react.js</a> is quite limited so my review will be limited to basic syntax points. This code seems straight-forward. It makes good use of arrow functions and destruction assignment. There are just a couple suggestions I will make below.</p>

<blockquote>
<pre><code>if (typeof e?.stopPropagation === 'function') e.stopPropagation();
</code></pre>
</blockquote>

<p>It is best to include brackets around the block, even if it is all on one line:</p>

<pre><code>if (typeof e?.stopPropagation === 'function') { e.stopPropagation(); }
</code></pre>

<p>Some believe such blocks should never be on one line. If you are going to do it on one line, you could use short-circuiting:</p>

<pre><code>typeof e?.stopPropagation === 'function' &amp;&amp; e.stopPropagation();
</code></pre>

<hr>

<p>This block can be simplified somewhat:</p>

<blockquote>
<pre><code>if (typeof value === 'boolean') {
    // @ts-ignore
    return [value, setter, booleanAgg(value, setter, makeSetter)]
} else if (typeof value === 'string') {
    // @ts-ignore
    return [value, setter, stringAgg(value, setter)];
} else if (typeof value === 'number') {
    // @ts-ignore
    return [value, setter, numberAgg(value, setter)];
} else {
    throw new Error('Only boolean, string and number is supported');
}
</code></pre>
</blockquote>

<p>The <code>else</code> keywords can be avoided because preceding blocks have <code>return</code> statements.'</p>

<pre><code>if (typeof value === 'boolean') {
    // @ts-ignore
    return [value, setter, booleanAgg(value, setter, makeSetter)]
} 
if (typeof value === 'string') {
    // @ts-ignore
    return [value, setter, stringAgg(value, setter)];
} 
if (typeof value === 'number') {
    // @ts-ignore
    return [value, setter, numberAgg(value, setter)];
}
throw new Error('Only boolean, string and number is supported');
</code></pre>
    </div>