<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A company I used to work for asked candidates to code a quick Tic Tac Toe implementation as part of the interview process. We used these to sanity check a candidate's basic ability to code. Based on that experience, I have two pieces of general feedback.</p>

<ol>
<li><p>Stylistically, this code strikes me as workable but a bit windy / verbose. You're using "object orientation" but there's no real sophistication in the OOP, nor any need for it over such a simple domain, so your objects are just containers with friendly names. You're writing explicit code to check columnar and row state (<code>CheckVerticals</code>, <code>CheckHorizontals</code>, <code>CheckDiagonals</code>) which is easily normalized. This code may work, but it's not a joy to read and doesn't seem to have a cohesive shape beyond OOP-by-default. That said, it's still better than the majority of TTT samples I've looked at.</p></li>
<li><p>What would give your code a more cohesive shape? One way would be: rewrite your code <a href="https://codepen.io/labiej/post/using-bit-logic-to-keep-track-of-a-tic-tac-toe-game" rel="nofollow noreferrer">using bitwise operations to represent board state and detect win conditions</a>. This would shorten and tighten your logic, and in particular, those cumbersome explicit checks for various win conditions would melt away.</p></li>
</ol>

<p>All in all, your code is good enough I would feel comfortable, in a formal code review, pushing you to produce something tighter and a bit more opinionated. If you can produce the above code, you can produce the above code with tighter logic.</p>
    </div>