<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Never</strong>, <strong>NEVER</strong> edit the files created with pyuic, 
use them as modules instead. Read more on using Designer <a href="https://www.riverbankcomputing.com/static/Docs/PyQt5/designer.html" rel="nofollow noreferrer">https://www.riverbankcomputing.com/static/Docs/PyQt5/designer.html</a> .</p>

<p>You do 5  <code>for</code> loops, although all this is done in a single loop.</p>

<p>You have a problem with the names of variables and methods, do not give them names with a capital letter.</p>

<pre><code>import sys
import random
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.resize(766, 603)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.Title = QtWidgets.QLabel(self.centralwidget)
        self.Title.setGeometry(QtCore.QRect(260, 20, 251, 81))
        font = QtGui.QFont()
        font.setFamily("MS UI Gothic")
        font.setPointSize(28)
        self.Title.setFont(font)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(50, 130, 291, 345))
        self.Result_Output = QtWidgets.QLabel(self.centralwidget)
        self.Result_Output.setGeometry(QtCore.QRect(420, 430, 131, 51))
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(450, 330, 201, 51))
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(370, 130, 391, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(390, 170, 341, 21))
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 766, 26))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew_Game = QtWidgets.QAction(MainWindow)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Title.setText(_translate("MainWindow", "Mastermind!"))
        self.groupBox.setTitle(_translate("MainWindow", "Guess History"))
        self.Result_Output.setText(_translate("MainWindow", "Result"))
        self.pushButton.setText(_translate("MainWindow", "Submit!"))
        self.label.setText(_translate("MainWindow", "A random 4 digit code has been created! "))
        self.label_2.setText(_translate("MainWindow", "Put 4 numbers in the boxes bellow and read the result!! "))
        self.actionNew_Game.setText(_translate("MainWindow", "New Game"))
        self.actionNew_Game.setStatusTip(_translate("MainWindow", "Start a new game?"))
        self.actionNew_Game.setShortcut(_translate("MainWindow", "Ctrl+N"))


class MainWindow(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setupUi(self) 
        self.pushButton.clicked.connect(self.test_Input)

        self.guessnum = -1
        self.submit_clicks = 0
        self.ans = random.sample(range(0, 10), 4)
        print(self.ans)

        self.guessinpt, self.results_guess, self.input = [], [], []          # +++
        for num in range(15):                                                # +++
            QtWidgets.QLabel(
                f'Guess {num+1: &gt;2}', 
                self.groupBox,
                geometry=QtCore.QRect(20, 30 + (21 * int(f'{num}')), 55, 16) 
            )
            self.guessinpt.append(
                QtWidgets.QLabel(
                    self.groupBox,
                    geometry=QtCore.QRect(100, 30 + (21 * int(f'{num}')), 61, 16)
                )
            )
            self.results_guess.append(
                QtWidgets.QLabel(
                    self.groupBox,
                    geometry=QtCore.QRect(190, 30 + (21 * int(f'{num}')), 55, 16)
                )
            )            
            if num &lt; 4:
                self.input.append(
                    QtWidgets.QSpinBox(
                        self.centralwidget,
                        geometry=QtCore.QRect(380 + (90 * int(f'{num}')), 250, 71, 41),
                        maximum=9                                                       # 9 !!! 
                    )
                )             

    def test_Input(self):
        self.numcorrect = 0
        self.poscorrect = 0
        self.user_input = [
                           int(self.input[0].value()), 
                           int(self.input[1].value()), 
                           int(self.input[2].value()),
                           int(self.input[3].value())
                          ]
        for x in self.input:
            if int(x.value()) == self.ans[self.input.index(x)]:
                self.poscorrect += 1
            elif int(x.value()) in self.ans and x not in self.input:
                self.numcorrect += 1

        self.guessnum += 1
        self.Result_Output.setText(
            str(self.numcorrect) + ' Numbers are in the code but in the wrong place!' + '\n' + str
            (self.poscorrect) + ' Numbers are correct!')
        self.Result_Output.adjustSize()

        if self.guessnum &gt;= 15:                        # 14
            self.Title.setText('You Lose!')
            self.Result_Output.setText('You Lose')
            return                                     # +++

        if self.poscorrect == 4:
            self.Result_Output.setText('You Win')
            self.Title.setText('You Win')

        self.results_guess[self.guessnum].setText(str(self.numcorrect) + ' #|' + str(self.poscorrect) + ' Pos')
        self.results_guess[self.guessnum].adjustSize()
        self.guessinpt[self.guessnum].setText(str(self.user_input))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    app.setFont(QtGui.QFont("Times", 8, QtGui.QFont.Bold))
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())
</code></pre>

<p><a href="https://i.stack.imgur.com/KCUyj.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/KCUyj.png" alt="enter image description here"></a></p>
    </div>