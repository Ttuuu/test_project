<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Review</h1>

<ul>
<li><p>Magic numbers</p>

<p><code>4</code> is a magic number, it is best to assign these to a variable name, that way it is more clear what this number means</p>

<p><em>numbers don't have names, variables do</em></p>

<pre><code>MAX_WORD_LENGHT = 4
</code></pre></li>
<li><p>Use built-ins when possible</p>

<blockquote>
<pre><code>to_keep = word_length - to_cut
if to_keep &lt; 4:
to_keep = 4
</code></pre>
</blockquote>

<p>Can be replaced with the <code>max</code> builtin</p>

<pre><code> to_keep = max(word_length - to_cut, 4)
</code></pre></li>
<li><p>Add tests</p>

<p>That way it becomes easy to check after a change if the function still works</p></li>
</ul>

<h1>Alternative</h1>

<p>I went a slightly different route, </p>

<p>Instead of joining after each word, I calculate the chars we need to cut beforehand</p>

<p>So we can keep a variable that will hold the amount of chars we still need to cut to reach our target</p>

<p>And only at the return join the words</p>

<pre><code>import doctest

MAX_WORD_LENGHT = 4

def cut_everything(sentence, max_length):
    """
    reduces each word in sentence to a length of 4

    :type sentence: string
    :param sentence: the sentence to cut
    :type max_length: int
    :param max_length: the length to which the sentence will be reduced

    &gt;&gt;&gt; cut_everything('foo bar foooobar', 16)
    'foo bar foooobar'

    &gt;&gt;&gt; cut_everything('foo bar foooobar', 8)
    'foo bar fooo'

    &gt;&gt;&gt; cut_everything('foo bar foooobar baaarfoo', 20)
    'foo bar fooo baaarfo'

    &gt;&gt;&gt; cut_everything('fooooooo baaaaaaar foooobar baaarfoo', 2)
    'fooo baaa fooo baaa'
    """
    words = sentence.split()
    chars_to_cut = len(sentence) - max_length
    for index, word in enumerate(words):
        if chars_to_cut &lt; 0:
            break
        word_length = len(word)
        if word_length &gt; MAX_WORD_LENGHT:
            to_keep = max(word_length - chars_to_cut, MAX_WORD_LENGHT)
            words[index] = word[:to_keep]
            chars_to_cut -= word_length - to_keep
    return ' '.join(words)

if __name__ == '__main__':
    doctest.testmod()
</code></pre>
    </div>