<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><strong>Correctness</strong>.</p>

<p>The parent of the source node is initially <code>-1</code>, and <code>buildPath</code> relies on that. However, if the source node belongs to a cycle, its parent will be eventually reassigned, breaking the contract. Now <code>buildPath</code> will misbehave.</p></li>
<li><p><strong>Efficiency</strong>.</p>

<p>Since the algorithm assumes an unweighted graph, the <code>distance</code> array seems redundant. In the implementation only one value is used, only to hint <code>buildPath</code> on the size of the <code>path</code> array. Meanwhile, the distances are incremented likely <span class="math-container">\$O(V)\$</span> times, and surely more than <code>P = pathLength</code> times. Instead you can let <code>buildPath</code> to compute P, trading <span class="math-container">\$O(V)\$</span> increments for <span class="math-container">\$O(P)\$</span> path length computation.</p></li>
</ul>
    </div>