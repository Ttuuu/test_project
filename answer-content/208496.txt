<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your <code>to_base_10(x)</code> function may be easily rewritten as:</p>

<pre><code>def to_base_10(base_3):
    return int(base_3, 3)
</code></pre>

<p>However, you are only using the function to convert base 3 numbers of the forms <code>'1'</code> followed by <code>n</code> zeros, and <code>'12'</code> followed by <code>n</code> zeros.  These can be directly computed as:</p>

<ul>
<li><code>to_base_10('1' + '0'*n)</code> --&gt;  <code>3 ** n</code></li>
<li><code>to_base_10('12' + '0'*n)</code> --&gt; <code>5 * 3**n</code></li>
</ul>

<hr>

<p>The output of the <code>to_base_3(x)</code> function is only used to produce 2 values: <code>len(base_3_value)</code> and <code>digit = base_3_value[0]</code>.  These can also be directly computed.  </p>

<pre><code>if number &gt; 0:
    len_base_3_value = int(math.log(number, 3)) + 1
    digit = number // (3 ** (len_base_3_value - 1))
else:
    len_base_3_value = 1
    digit = 0
</code></pre>

<p>Note: <code>digit</code> is now an <code>int</code> (<code>0</code>, <code>1</code>, or <code>2</code>), not a <code>str</code> (<code>'0'</code>, <code>'1'</code>, or <code>'2'</code>)</p>

<hr>

<p>You recursively call and then return the value of <code>find_charming_components(number, charming_components)</code>.  Python does not do tail recursion optimization, so this should be replaced with a simple loop, instead of recursion.</p>
    </div>