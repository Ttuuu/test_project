<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Whenever I see filtering, I tend to think LINQ.</p>

<pre><code>private string RemoveUnwantedCharacters(string input, IEnumerable&lt;char&gt; allowedCharacters)
{
    var filtered = input.ToCharArray()
        .Where(c =&gt; allowedCharacters.Contains(c))
        .ToArray();

    return new String(filtered);
}
</code></pre>

<p>You can call it like this:</p>

<pre><code>string filteredString = RemoveUnwantedCharacters(inputString, "0123456789numkMGHzVs%-.");
</code></pre>

<ul>
<li>Code is shorter</li>
<li>The intent is clear - it basically reads as "filtered is input where allowed characters contains this character", which is pretty self-explanatory</li>
<li>Allowed characters is a parameter, so you can reuse the method in various places. If you're using the same set of allowed characters in a lot of places, stick them in some sort of settings store.</li>
</ul>
    </div>