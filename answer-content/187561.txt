<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I solved it this way - I modified main method that hacker rank provided to not read all inputs for ransom note or store it - but break early if mismatch  is found. </p>

<p>Also, there is no need to store magazine words in a <code>String[]</code>, you can directly build map while reading input. </p>

<pre><code>import java.util.*;


public class RansomNote {


    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int m = in.nextInt();
        int n = in.nextInt();

        boolean flag = true;

        Map&lt;String,Long&gt; magazineMap = new HashMap&lt;&gt;();
        for(int magazine_i=0; magazine_i &lt; m; magazine_i++){
            magazineMap.merge(in.next(), 1L, Long::sum);
        }

        //Prepared only one map of magazines &amp; not ransom words to to have memory efficiency 
        // Ransom note stoarge is not needed

        for(int ransom_i=0; ransom_i &lt; n; ransom_i++){
            String ransomWord = in.next();

            if(!magazineMap.containsKey(ransomWord) || magazineMap.get(ransomWord) == 0) {
                flag = false;
                break;
            }else {
                Long newfrequency = magazineMap.get(ransomWord).longValue()-1L;
                magazineMap.put(ransomWord, newfrequency);
            }
        }



        if(flag)
            System.out.println("Yes");
        else 
            System.out.println("No");

        in.close();

    }
}
</code></pre>
    </div>