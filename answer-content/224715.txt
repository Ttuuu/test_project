<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>According to the <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a> widely-accepted style, your function should be named <code>show_picked_alien</code>.</p></li>
<li><p>You don't need a <code>class_names</code> list, as you can just do <code>if key in dictionary</code></p></li>
<li><p>If it always coincides with the key, you don't need the <code>name</code> attribute</p></li>
<li><p>You don't need a <code>input_enabled</code> variable: you can just break out of the loop, or better, put that in a function and return</p></li>
<li><p>You should avoid executable code at the top level of your module, for future extensibility (it also always helps having smaller functions). Use a classic: <code>if __name__ == "__main__": main()</code></p></li>
<li><p>It's better if you pick one quote type (single or doubles) and stick with it, within a program (also from PEP8). But don't pick one style "for life" and apply it on projects using other styles.</p></li>
<li><p>Maybe that's pushing it too far, but if your goal is to make a real application, you can transform your attributes, at least speed/size/damage into enums rather than strings (or use string constants). Because later on you will have checks like <code>if speed == 'average'</code> and don't want to repeat string literals and have to make them coincide in several places</p></li>
<li><p>I second MarkH's suggestion of making a class (but with a PEP8-compliant name). If you do this, implement <code>__str__</code> on it (maybe the same as your current <code>showPickedAlien</code> if not too verbose). That will help with your debugging later on.</p></li>
</ul>
    </div>