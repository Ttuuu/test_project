<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just looking at your tests, there's a couple of points to consider...</p>
<h1>Naming</h1>
<p>Having <code>Test</code> at the front of every test case is usually redundant (public methods in test classes are tests...).  The beginning of the test name is also quite valuable real-estate since your test runner/window is likely to truncate what it displays after a certain number of characters.  Consider removing the 'Test'.  A better prefix might be the name of the method under test (although you may be using the name of the `TestClass for that, since you don't include that part of your code).</p>
<h1>Make it clear what you're testing</h1>
<p>I found your test methods that are testing for exceptions to be less than clear.</p>
<blockquote>
<pre><code>[TestMethod]
[ExpectedException(typeof(ArgumentNullException))]
public void TestNullPredicate()
{
    int[] zero = Array.Empty&lt;int&gt;();
    Func&lt;int, bool&gt; predicate = null;

    // ReSharper disable once ExpressionIsAlwaysNull
    Assert.AreEqual(0, zero.DistinctCount(predicate));
}
</code></pre>
</blockquote>
<p>Initially I skipped over the method annotation and just rest the test code.  On the face of it, it look like if there was a <code>null</code> predicate, you are expecting the method to return 0.  This seemed odd, however possible behaviour.  There's nothing in the test name (such as <code>DistinctCount_NullPredicate_Throws</code>) to indicate what the expected outcome was, then eventually there's the <code>ExpectedException</code> attribute, which explains that actually the test is expecting an <code>ArgumentNullException</code>.</p>
<p>Having an <code>Assert</code> statement when you're not actually expecting a value to be returned from the call is misleading.  It would be better to just call the method (<code>zero.DistinctCount(predicate)</code>).  The lack of an assertion helps to make it more obvious that the attributes indicate the success criteria for the test.</p>
    </div>