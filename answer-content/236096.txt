<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Generic is your call, as using generic would avoid casting objects. </p>

<p>Would this version work with you ? : </p>

<pre><code>internal class EventManager&lt;T&gt;
{
    private readonly Dictionary&lt;int, Action&lt;T&gt;&gt; events = new Dictionary&lt;int, Action&lt;T&gt;&gt;();

    public virtual void Subscribe(int incidentId, Action&lt;T&gt; action)
    {
        if (events.ContainsKey(incidentId))
        {
            events[incidentId] = action;
        }
        else
        {
            events.Add(incidentId, action);
        }
    }

    public virtual void Unsubscribe(int incidentId, Action&lt;T&gt; action)
    {
        if (events.ContainsKey(incidentId))
        {
            events[incidentId] -= action;
        }
    }

    public virtual void Trigger(int incidentId, T args)
    {
        if (events.ContainsKey(incidentId))
        {
            events[incidentId]?.Invoke(args);
        }
    }
}
</code></pre>
    </div>