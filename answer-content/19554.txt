<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is a nice language extension in GHC called <a href="http://www.haskell.org/ghc/docs/7.2.1/html/users_guide/syntax-extns.html#view-patterns" rel="nofollow">ViewPatterns</a>. Together with <a href="http://www.reddit.com/r/haskell/comments/wp70x/lambdacase_and_multiway_if_added_to_ghc_head_for/" rel="nofollow">LambdaCase</a> that fature allows you to shorten your code, I think. And <code>do</code> notation will be much more readable for imperative part.</p>

<pre><code>runGameLoop game panel | victory game = return Victory
                       | otherwise = continue
    where
      anyEvent = gatPanelWindow panel &gt;&gt;= flip getEvent (Just 1)
      isRestart = (EventSpecialKey (KeyFunction 2) ==)
      isQuit = (EventSpecialKey (KeyFunction 10) ==)
      continue = do
          refreshGamePanel game panel
          render
          anyEvent &gt;&gt;= \case
              Just (isRestart -&gt; True) -&gt; return Restart
              Just (isQuit -&gt; True) -&gt; return Quit
              Just (EventSpecialKey (keyToDirection -&gt; Just dir)) -&gt;
                  runGameLoop (makeMove game dir) panel
              _ -&gt; runGameLoop game panel
</code></pre>

<p>Another variant is to consider using of <code>Monad Maybe</code> instance</p>

<pre><code>runGameLoop game panel = nextStep where
    anyEvent = gatPanelWindow panel &gt;&gt;= flip getEvent (Just 1)
    nextStep = if victory game then return Victory else do
        refreshGamePanel game panel
        render
        liftM react anyEvent &gt;&gt;= \case
            Just continuation -&gt; continuation
            Nothing -&gt; runGameLoop game panel
    react event' = do
        event' &gt;&gt;= \case
            EventSpecialKey (KeyFunction 2) -&gt; return (return Restart)
            EventSpecialKey (KeyFunction 10) -&gt; return (return Quit)
            EventSpecialKey key -&gt; do
                dir &lt;- keyToDirection key
                return (runGameLoop (makeMove game dir) panel)
            _ -&gt; Nothing
</code></pre>
    </div>