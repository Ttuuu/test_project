<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'll focus on the C# part of the code, but please run the output HTML through a <a href="https://validator.w3.org/" rel="nofollow noreferrer">validator</a> because at first glance I count no fewer than five HTML tags that are mismatched, misplaced, or simply broken.</p>

<h1>Outer loop</h1>

<p>You're not using the loop variable <code>x</code> anywhere. This suggests that the loop should be refactored around the thing that you're <em>actually</em> iterating over, which seems to be a <em>range of years</em>.</p>

<p>Each year is just an integer; you can get a range of integers using <code>Enumerable.Range</code>. You want the most recent <code>totalYearCount</code> years (inclusive of this year), so start the range at <code>nowYear - totalYearCount + 1</code>. You want this year <em>first</em>, so reverse the sequence too.</p>

<pre><code>foreach (var year in Enumerable
    .Range(aDate.Year - totalYearCount + 1, totalYearCount)
    .Reverse())
{
    var list = ms.GetListOfMeetingBygroupId(groupId, year);
    // ...
}
</code></pre>

<p>You can replace <code>aDate.ToString("yyyy")</code> accordingly.</p>

<h1>Naming</h1>

<p>When using <code>camelCase</code> and <code>PascalCase</code>, each distinct word should start with a capital letter. <code>GetListOfMeetingByGroupId</code>, <code>GetListOfPresentationsByMeetingId</code>, <code>meetingStartDate</code>, <code>meetingEndDate</code>, and so on.</p>

<p>Type prefixes like <code>sb</code> don't help much, especially when abbreviated. Rename that variable to better reflect what it actually is: it's a builder for the output, so maybe <code>outputBuilder</code> instead of <code>sbMeeting</code>.</p>

<p><code>list</code> is a really generic name for something we know to be a collection of meetings, so call it <code>meetings</code> or <code>meetingList</code>.</p>

<h1>Code we haven't seen</h1>

<p>It's advised to post or link to all supporting code. It's at least relevant because of this here:</p>

<pre><code>Convert.ToDateTime(meeting.MeetingDateList.Select(c =&gt; c.StartDate).Max());
</code></pre>

<p>What's the type of <code>c.StartDate</code>? You're converting it to a <code>DateTime</code> <em>after getting the maximum date</em> -- so it's probably not a <code>DateTime</code> already -- which begs the question <em>how are you sorting the dates</em>? I suspect you might've wanted the order switched:</p>

<pre><code>meeting.MeetingDateList.Max(c =&gt; Convert.ToDateTime(c.StartDate));
</code></pre>

<p>Note that I've used the overload for <code>Max</code> that takes a selector so that I can avoid the unnecessary <code>Select</code>.</p>

<h1>General readability</h1>

<p>Your spacing is inconsistent. Consistent spacing would make for better readability, so I offer these suggestions:</p>

<ul>
<li>Use exactly one indent per <code>{}</code> block -- your inner <code>foreach</code> loop is double-indented.</li>
<li>Avoid empty lines of padding within <code>{}</code> blocks -- see your <code>for</code> loop and the <code>else</code> block.</li>
<li>Parameters should be separated by a comma and one space -- see your first <code>sbMeeting.AppendFormat(...)</code>.</li>
</ul>

<p>All of those hard-coded HTML strings should be refactored out into some kind of template. They have no business being encoded inline in the method like that.</p>
    </div>