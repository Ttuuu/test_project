<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As a general comment, high performance code will not use <code>std::map</code> (or the like) - this has been quite well explained by e.g., Chandler Carruth in several talks. Here's his <a href="https://www.youtube.com/watch?v=fHNmRkzxHWs" rel="nofollow noreferrer">talk from CppCon 2014</a> on the topic.</p>

<p>A typical high performance implementation in the field of (parallel) graph algorithms for an edge list uses two arrays (i.e., continuous chunks of memory). The first one stores all the edges and the second specifies where adjacency (sub)lists for the vertices start. For example, if your graph is the 3-vertex triangle, the first array, call it A, would be <code>0 1 0 2 1 2</code> representing the three edges (0,1), (0,2), and (1,2). The second array would be <code>0 2 4</code> meaning the adjacency list for vertex 0 starts at A[0], the adjacency list for vertex 1 is at A[2], and so on.</p>
    </div>