<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't have much time for the review so I'll focus on regular expressions for the time being.</p>

<p><strong>About <code>re</code></strong></p>

<ul>
<li><p>You should probably be using <a href="https://docs.python.org/2/library/re.html#re.match" rel="nofollow"><code>match</code></a> instead of <a href="https://docs.python.org/2/library/re.html#re.search" rel="nofollow"><code>search</code></a> because you want the pattern to be at the beginning of the string. <a href="https://docs.python.org/2/library/re.html#search-vs-match" rel="nofollow">Read more</a></p></li>
<li><p>If you are re-using the same regexp multiple times like you are doing here, it might be worth <a href="https://docs.python.org/2/library/re.html#re.compile" rel="nofollow"><code>compile</code>-ing</a> it.</p></li>
<li><p>You could use the logic used for matching to split your result as well. If you do so, you do not need to change things in multiple places if the format changes;</p></li>
</ul>

<p>Like this :</p>

<pre><code>&gt;&gt;&gt; date = "14/07/1789"
&gt;&gt;&gt; m = re.match(r'(\d{1,2})/(\d{1,2})/(\d{4})', date)
&gt;&gt;&gt; m.groups()
('14', '07', '1789')
</code></pre>

<ul>
<li>Even better, you could use named elements. If the format changes (because your code is used in a different country where dates have a different format for instance), only the regexp will change, the code will still be ok because it will be accessing elements by their name and not by their position.</li>
</ul>

<p>Like this :</p>

<pre><code>&gt;&gt;&gt; date = "14/07/1789"
&gt;&gt;&gt; m = re.match(r'(?P&lt;day&gt;\d{1,2})/(?P&lt;month&gt;\d{1,2})/(?P&lt;year&gt;\d{4})', date)
&gt;&gt;&gt; m.groups()
('14', '07', '1789')
&gt;&gt;&gt; m.groupdict()
{'month': '07', 'day': '14', 'year': '1789'}
</code></pre>

<p>Also, the whole logic converting strings to dates (or to triples <code>(day, month, year)</code>) could be extracted in a function on its own.</p>

<p>You might also decide that you want to reuse already existing tools for this such as <a href="https://docs.python.org/2/library/datetime.html#datetime.datetime.strptime" rel="nofollow"><code>datetime.strptime</code></a></p>

<p><strong>Better user experience</strong></p>

<p>When I input 2 dates which is usually quite painful, I'd rather have my program to fail if the first date is incorrect rather than having to input the second date to know it.</p>
    </div>