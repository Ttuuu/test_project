<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not sure that elegance should be your first concern here, because the algorithm should be very simple and the code short however you write them. </p>

<p>I/O operations will have a much greater impact on performance than the lay-out of your loop, so you shouldn't worry too much about speed either. </p>

<p>Generality, I believe, is paramount in this case. That's why I see <code>vec.cend() - 1</code> as the main short-coming of your proposal, because it restricts your algorithm to at least bidirectional iterators, when your goal can be easily achieved for any kind of iterator.</p>

<p>Here's what I would consider better:</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;vector&gt;

template &lt;typename Container, typename Separator&gt; // any container is acceptable...
void pretty_print(const Container&amp; c, const Separator&amp; s) {
    std::cout &lt;&lt; '{';
    auto it = std::begin(c); // ... even arrays
    if (it != std::end(c)) do {
        std::cout &lt;&lt; *it;
        if (++it == std::end(c)) break; // that way you don't need to decrement the iterator
        std::cout &lt;&lt; s;
    } while (true);
    std::cout &lt;&lt; '}';
}
</code></pre>
    </div>