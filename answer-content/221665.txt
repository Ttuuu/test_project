<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Responding to your prompt</h2>

<blockquote>
  <p>Any good suggestions to avoid HTML code in controller make controller view and script separate.</p>
</blockquote>

<p>I would suggest you consider using a template on the client-side, and having the AJAX request return data in JSON format. That way the Laravel controller doesn't have to worry about the HTML formatted-data.</p>

<h2>Review Feedback</h2>

<p>That name <code>ajax</code> seems very non-descriptive for the route and Laravel Controller method name. Obviously it is intended to be used with an AJAX call but what happens when you want to have another AJAX call to load separate data? Perhaps a better name would be something like <code>loadProducts</code>.</p>

<p>As @Vlad suggested in <a href="https://codereview.stackexchange.com/a/221660/120114">his answer</a> that query will get all results because it doesn't appear to be filtered or limited to any number of results. Perhaps utilizing page number parameters or other filters would be useful.</p>

<hr>

<p>I see <code>$('.load-more')</code> multiple times in the JavaScript code. How many elements are there with that class name <em><code>load-more</code></em>? If there is only one, then perhaps it would be more fitting to use an <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id" rel="nofollow noreferrer"><em>id</em></a> attribute instead of a class name to select that element. </p>

<p>Also, it would be wise to store DOM element references instead of querying the DOM each time. For example, </p>

<pre><code>var loadMoreContainer = $('.load-more');
</code></pre>

<p>could then be used to simplify code like:</p>

<blockquote>
<pre><code>if(rowno &gt; allcount){
    // Change the text and background
    $('.load-more').text("show less");
    $('.load-more').css("background","darkorchid");
}else{
    $(".load-more").text("Load more");
}
</code></pre>
</blockquote>

<p>To this:</p>

<pre><code>if(rowno &gt; allcount){
    // Change the text and background
    loadMoreContainer.text("show less") //note we are chaining here
        .css("background","darkorchid");
}else{
    loadMoreContainer.text("Load more");
}
</code></pre>

<p>Note how the call to <code>.css</code> was chained to the previous line, where the semi-colon was removed from the end of the line.</p>

<hr>

<p>While that syntax of <code>$(document).ready()</code> still works with the latest jQuery version (i.e. 3.3.1 at the time of typing), it is deprecated and the recommended syntax is simply <code>$(function() {})</code><sup><a href="https://api.jquery.com/ready/" rel="nofollow noreferrer">1</a></sup>.</p>

<p><sup>1</sup><sub><a href="https://api.jquery.com/ready/" rel="nofollow noreferrer">https://api.jquery.com/ready/</a></sub></p>
    </div>