<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>[...], but there is a variable that is being declared, used, then overwritten by the next line.</p>
</blockquote>

<p>Indeed. And it's not clear why it is that way.
I believe you're talking about <code>vctags</code>, here:</p>

<blockquote>
<pre><code>vctags = main_content.find('div#visualcrumbs-relatedtags'); //THIS LINE

vctags.prepend(oldtags.children()).children().wrapAll('&lt;div class="js-watched-tag-list grid gs4 py4 fw-wrap"&gt;').each(function() {
    $(this).toggleClass('dno js-hidden js-tag grid--cell').children().slice(1).remove();
});
</code></pre>
</blockquote>

<p>The assignment here is unnecessary, because you could chain the call directly on <code>main_content.find(...)</code>, without assigning the result to a variable.
It would be quite natural that way.</p>

<p>I find long chains easier to read when split to multiple lines, like this:</p>

<pre><code>main_content
    .find('div#visualcrumbs-relatedtags')
    .prepend(oldtags.children())
    .children()
    .wrapAll('&lt;div class="js-watched-tag-list grid gs4 py4 fw-wrap"&gt;')
    .each(function() {
        $(this).toggleClass('dno js-hidden js-tag grid--cell').children().slice(1).remove();
    });
</code></pre>

<h3>Unnecessary selector</h3>

<p>The last <code>.parent()</code> here is unnecessary, you can safely drop it:</p>

<blockquote>
<pre><code>oldtags.before(vctags).children('h4, a').remove().parent();
</code></pre>
</blockquote>

<h3>Generating the new widget</h3>

<p>The value of the second parameter is too long, and it's hard to read what else is on the line:</p>

<blockquote>
<pre><code>var vctags = genSBWidget('Related Tags', '&lt;svg aria-hidden="true" class="svg-icon" width="18" height="18" viewBox="0 0 24 24"&gt;&lt;path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"&gt;&lt;/path&gt;&lt;/svg&gt;', 'relatedtags');
</code></pre>
</blockquote>

<p>It would be better to put that value in a variable:</p>

<pre><code>var icon = '&lt;svg aria-hidden="true" class="svg-icon" width="18" height="18" viewBox="0 0 24 24"&gt;&lt;path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"&gt;&lt;/path&gt;&lt;/svg&gt;';
var vctags = genSBWidget('Related Tags', icon, 'relatedtags');
</code></pre>

<p>Like this, it's reasonably clear that the line <code>var icon = '...'</code> is just a very long string and so even if I don't scroll to the far right, I probably won't miss anything too important. And the parameters of the function call are now clearly visible.</p>

<p>Furthermore, in the posted code <code>genSBWidget</code> is only called once.
If that's the case in your real code,
then there's no need for the parameters,
they could be inlined in the function itself.</p>

<h3>Naming</h3>

<p>I suggest some renames:</p>

<ul>
<li><code>oldtags</code> to <code>oldWidget</code> and <code>vctags</code> to <code>newWidget</code>, as I think that describes better what they really are.</li>
<li><code>main_content</code> to <code>mainContent</code> to make the naming style consistently <code>camelCase</code>.</li>
</ul>

<h3>Alternative implementation</h3>

<p>Putting the above together, I would write the main function this way:</p>

<pre><code>$(function() {
    var icon = '&lt;svg aria-hidden="true" class="svg-icon" width="18" height="18" viewBox="0 0 24 24"&gt;&lt;path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"&gt;&lt;/path&gt;&lt;/svg&gt;';
    var newWidget = genSBWidget('Related Tags', icon, 'relatedtags');
    var oldWidget = mainContent.find('div#related-tags, .module.js-gps-related-tags');

    oldWidget.children('h4, a').remove();
    oldWidget.before(newWidget);

    mainContent
        .find('div#visualcrumbs-relatedtags')
        .prepend(oldWidget.children())
        .children()
        .wrapAll('&lt;div class="js-watched-tag-list grid gs4 py4 fw-wrap"&gt;')
        .each(function() {
            $(this).toggleClass('dno js-hidden js-tag grid--cell').children().slice(1).remove();
        });
});
</code></pre>

<p>Note that I did not chain the calls on <code>oldWidget</code>,
even though I could have written as:</p>

<pre><code>    oldWidget
        .before(newWidget)
        .children('h4, a')
        .remove();
</code></pre>

<p>I think the way I wrote above is somewhat easier to read, clear and unambiguous without much thinking.</p>
    </div>