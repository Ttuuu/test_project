<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>UPDATE (ORIGINAL POST BELOW):</p>

<p>I just saw this function in the Underscore API, which is the most succinct, yet.  If readability is your goal, then consider this option.  Also, it seems to be the most performant for all data sets that I've tried.  </p>

<p></p><div class="snippet" data-lang="js" data-hide="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var arrays  = [
    [1, 4, 6, 78, 8, 9, 124, 44],
    [44, 6, 9],
    [124, 44, 16, 9]
];

console.time('sample 3 length');
var output = findCommonElements(arrays);
console.timeEnd('sample 3 length');
console.log(output); // [9,44]

function findCommonElements(inArrays) {
  // check for valid input
  if (typeof inArrays==="undefined") return undefined;
  if (typeof inArrays[0]==="undefined") return undefined;
  
  return _.intersection.apply(this, inArrays);
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="http://underscorejs.org/underscore-min.js"&gt;&lt;/script&gt;</code></pre>
</div>
</div>


<p>UPDATE: I added timers, and it turns out that although the bottom program has a low "big O" run time, the small input array sample here is not nearly large enough to see the payoff.  Also <code>_.intersection()</code> seems to be at least as performant for scaling as well.  Further, I've tested this against other solutions here and it seems to be the fastest on this page.</p>

<p>ORIGINAL POST:</p>

<p>I'll add another answer here, which I think is very similar to the answer from @mckenzm but with edge cases taken care of, and a working example.</p>

<p>Before I continue, I'll just point out that <a href="http://underscorejs.org/" rel="nofollow">Underscore</a>, a favorite library of mine, makes a similar run-time version of your example but with fewer lines of code.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var arrays  = [
    [1, 4, 6, 78, 8, 9, 124, 44],
    [44, 6, 9],
    [124, 44, 16, 9]
];

console.time('sample 1 length');
var output = findCommonElements(arrays);
console.timeEnd('sample 1 length');
console.log(output); // [9,44]

// functions
function findCommonElements(inArrays) {
  // check for valid data
  if (typeof inArrays==="undefined") return undefined;
  if (typeof inArrays[0]==="undefined") return undefined;
  
  // intersect adjacent arrays
  var outArray = inArrays[0];
  _.each(inArrays, function(arr) {
    outArray = intersect(outArray, arr);
  });
  return outArray;
}

function intersect(arr1, arr2) {
  return _.filter(arr1, function(el) {
    return _.contains(arr2, el);
  });
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="http://underscorejs.org/underscore-min.js"&gt;&lt;/script&gt;</code></pre>
</div>
</div>


<p>OK, so that was a more understandable solution, which has a similar run-time efficiency as yours.  Now, the following I think will be more scalable.</p>

<p>Strategy:</p>

<ol>
<li><p>Get an array without duplicates for each of your input arrays.  This ensures that step 4 produces the correct output.</p>

<p>Output will be:</p>

<pre><code>var uniqueArrays = [
    [1, 4, 6, 78, 8, 9, 124, 44],
    [44, 6, 9],
    [124, 44, 16, 9]
];
</code></pre></li>
<li><p>Concatenate the unique arrays together:</p>

<pre><code>var concatenatedUniqueArrays = [1, 4, 6, 78, 8, 9, 124, 44, 44, 6, 9, 124, 44, 16, 9];
</code></pre></li>
<li><p>Sort the resulting array:</p>

<pre><code>var sortedUniqueElements = [1, 4, 6, 6, 8, 9, 9, 9, 16, 44 ,44, 44, 78, 124, 124];
</code></pre></li>
<li><p>Add only the elements to the final answer which appear the same number of times as the total number of input arrays:</p>

<pre><code>var finalAnswer = [9, 44];
</code></pre></li>
</ol>

<p>Example code:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var arrays  = [
    [1, 4, 6, 78, 8, 9, 124, 44],
    [44, 6, 9],
    [124, 44, 16, 9]
];

console.time('sample 2 length');
var output = findCommonElements(arrays);
console.timeEnd('sample 2 length');
console.log(output); // [9,44]

function findCommonElements(inArrays) {
  // check for valid data
  if (typeof inArrays==="undefined") return undefined;
  if (typeof inArrays[0]==="undefined") return undefined;

  // step 1: Get an array without duplicates for each of your input arrays. 
  var uniqueArrays = [];
  _.each(inArrays, function (arr, i) {
    uniqueArrays[i] = _.uniq(arr);
  });
  console.log("uniqueArrays", uniqueArrays); // same as inArrays... there are no duplicates in each array
  
  // step 2: Concatenate the unique arrays together
  var concatenatedUniqueArrays = [];
  _.each(uniqueArrays, function (arr) {
    concatenatedUniqueArrays = concatenatedUniqueArrays.concat(arr);
  });
  console.log("concatenatedUniqueArrays", concatenatedUniqueArrays); // [1, 4, 6, 78, 8, 9, 124, 44, 44, 6, 9, 124, 44, 16, 9]
  
  // step 3: sort the resulting array
  var sortedUniqueElements = _.sortBy(concatenatedUniqueArrays, function(el) { return el; });
  console.log("sortedUniqueElements", sortedUniqueElements); // [1, 4, 6, 6, 8, 9, 9, 9, 16, 44, 44, 44, 78, 124, 124]
  
  // step 4: add only the elements to the final answer
  //         which appear the same number of times as
  //         the total number of input arrays.
  var finalAnswer = [];
  var prevElement = sortedUniqueElements[0];
  var prevElementCount = 1;
  for (var idx=1; idx &lt; sortedUniqueElements.length; idx++) {
    var currentElement = sortedUniqueElements[idx];
    if (currentElement === prevElement) {
      prevElementCount++;
      if (prevElementCount === inArrays.length) {
        finalAnswer.push(prevElement);
      }
    } else {
      prevElementCount = 1;
    }
    prevElement = currentElement;
  }
  
  return finalAnswer; // [9, 44]
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="http://underscorejs.org/underscore-min.js"&gt;&lt;/script&gt;</code></pre>
</div>
</div>

    </div>