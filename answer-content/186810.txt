<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Basically, I would say - installing SonarQube project and running it agains your code to see violations.
  Generally - long methods. Probably they do more than one thing. 
return "null", separate string and numbers could be "static final String NULL". </p>

<pre><code>private int checkPaddingTop(int padding) {
    return checkPadding(padding, "Top padding is invalid");
}

private int checkPaddingRight(int padding) {
    return  checkPadding(padding, "Right padding is invalid");
}

private int checkPaddingBottom(int padding) {
    return checkPadding(padding, "Bottom padding is invalid");
}

private int checkPaddingLeft(int padding) {
    return checkPadding(padding, "Left padding is invalid");
}
</code></pre>

<p>Seems like copy/paste code - could use use enum for Bottom/Left/Right/Top and use as input argument and have same code? </p>

<pre><code>private SubtreeDescriptor printImpl(BinaryTreeNode&lt;T&gt; node, 
                                BinaryTreeNodePrinter&lt;T&gt; nodePrinter) {
if (node.getLeftChild() == null &amp;&amp; node.getRightChild() == null) {
    TextSprite leafNodeTextSprite = nodePrinter.print(node);
    SubtreeDescriptor subtreeDescriptor = new SubtreeDescriptor();
    subtreeDescriptor.rootNodeOffset = 0;
    subtreeDescriptor.rootNodeWidth = leafNodeTextSprite.getWidth();
    subtreeDescriptor.textSprite = leafNodeTextSprite;
    return subtreeDescriptor;
}
</code></pre>

<p>constructing and initializing should be done probably in some factory class. Not in method named print. </p>

<p>Well and unit testing. When you try to unit test different scenarios for your code to make sure it works as expected - you will see how unit tests shape your code design. Its very hard to unit test method that does 20 things, so you will step by step refactor it to have one thing done and test its different cases/outcomes. </p>
    </div>