<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Separate logical elements</h3>

<p>It's good to separate different logical parts of a program, for example:</p>

<ul>
<li>Parse input: a function that takes an <code>InputStream</code> and returns a <code>String</code></li>
<li>Compute frequencies: a function that takes a <code>String</code> and returns frequencies in some form. In your current program you used an <code>int[]</code>, it could have been a <code>Map&lt;Character, Integer&gt;</code>.</li>
<li>Print the frequencies: a function that takes the frequencies in some form, returns nothing, and prints to screen the frequencies nicely formatted.</li>
</ul>

<h3>Computing indexes of letters</h3>

<p>If the input string contains only uppercase letters, then you can translate those letters to array indexes in the range of 0 to 25 (inclusive) like this:</p>

<pre><code>int index = ch - 'A';
</code></pre>

<p>This eliminates the nested loop you had.
It also eliminates the need for the <code>c</code> array.</p>

<h3>Initializing arrays</h3>

<p>Instead of this:</p>

<blockquote>
<pre><code>int[] f = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
</code></pre>
</blockquote>

<p>You could write simply <code>int[] f = new int[26];</code></p>

<p>Instead of this:</p>

<blockquote>
<pre><code>char[] c = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
</code></pre>
</blockquote>

<p>I would take a lazy approach and write <code>char[] c = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".toCharArray();</code></p>

<h3>Use better variable names</h3>

<p>Single-letter variable names should only be used for trivial, highly transient things.
The names <code>f</code> and <code>c</code> in the program are inappropriate, and make the program more difficult to read.</p>
    </div>