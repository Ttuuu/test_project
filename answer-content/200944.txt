<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Function name</h2>

<p>The function name <code>getColor</code> isn't representative of what it does its better of being named <code>createRgbaString</code> (or something along those lines) </p>

<h2>Return early</h2>

<p>Your script returns in two different places, this should be changed so you exit the function early, it saves an else statement and a level of identing</p>

<h2>Variable nameing style</h2>

<p>Your variable naming style is not compatible with PSR2 but that isn't the end of the world. </p>

<h2>Line length</h2>

<p>Your line length exceeds 80 character line length, this is again not the end of the world but will make it hard to read for some people </p>

<h2>Repeated calculation</h2>

<p>Your repeatedly do the same calculation if the <code>$index != 2</code> I would move this into a function so if it needs to be updated you only have todo it in one location</p>

<h2>How I might write it</h2>

<p><strong>I have used terrible variable names</strong>, because I don't have the time do work out the complete logic of your script, so this should be unit tested if your going to use it</p>

<pre><code>function getColor($value, $values_range, $opacity = '0.7')
{
    $deltaS = ($values_range['max'] - $values_range['min']) / 2;
    $ds = ($value - $values_range['min']) / $deltaS;
    $nearest_color_index = floor($ds);
    $alpha = $ds - $nearest_color_index;

    $r = $g = $b = -1;

    $colors = [
        ['r'=&gt;255,'g' =&gt; 60,'b' =&gt; 40],
        ['r' =&gt; 255,'g' =&gt; 247,'b' =&gt;40],
        ['r' =&gt; 12,'g' =&gt; 197,'b' =&gt; 17]
    ];

    $rNormal = getColorIndexPlusModifier($nearest_color_index, "r", 0, $colors);
    $gNormal = getColorIndexPlusModifier($nearest_color_index, "g", 0, $colors);
    $bNormal = getColorIndexPlusModifier($nearest_color_index, "b", 0, $colors);

    if ($nearest_color_index == 2) {
        return "rgba($rNormal,$gNormal,$bNormal,$opacity)";
    }

    $rPlusOne = getColorIndexPlusModifier($nearest_color_index, "r", 1, $colors);
    $gPlusOne = getColorIndexPlusModifier($nearest_color_index, "g", 1, $colors);
    $bPlusOne = getColorIndexPlusModifier($nearest_color_index, "b", 1, $colors);

    $r = doCalculation($rNormal, $alpha, $rPlusOne);
    $g = doCalculation($gNormal, $alpha, $gPlusOne);
    $b = doCalculation($bNormal, $alpha, $bPlusOne);

    return "rgba($r,$g,$b,$opacity)";
}

function getColorIndexPlusModifier($colorIndex, $colorString, $toModifyBy, $colors)
{
    return round($colors[$colorIndex + $toModifyBy][$colorString]);
}
//TODO Rename to something meaningful 
function doCalculation($normalValue, $alpha, $plusOneValue)
{
    return round($normalValue + $alpha * ($plusOneValue - $normalValue));
}
</code></pre>
    </div>