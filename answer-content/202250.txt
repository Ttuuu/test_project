<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>not so much but some tiny changes:</p>

<p><strong>DRY</strong></p>

<p>i just would avoid all the <code>self.healthBarView.frame.size.width</code> </p>

<p>and make methods:</p>

<ul>
<li><code>getWidth</code></li>
<li><code>setWidth</code>(or <code>updateWidth</code> because you set the diff)</li>
</ul>

<p><strong>Constants</strong></p>

<p>the magic numbers like <code>0.1</code> <code>0.05</code> <code>10</code> i would define as constants so it can changed only at one place. 7.63 i would calculate </p>

<p><strong>Naming</strong></p>

<p>rename <code>barAmount</code> to <code>maxAmount</code></p>

<p>create <code>minAmount</code></p>

<p><strong>Float/CGFloat</strong></p>

<p>the Float / CGFloat is realy needed? just put them also into getWidth and updateWidth </p>

<p><strong>else if</strong> </p>

<p>the else if block is not needed (same condition)</p>

<p><strong>7.63</strong></p>

<p>this is an value depending on your setup - it should also calculated so it not changes when you init it with different width</p>

<p><strong>Resulting Code</strong></p>

<pre><code>import UIKit

class ViewController: UIViewController {


    @IBOutlet weak var armorBarView: UIView!

    @IBOutlet weak var healthBarView: UIView!

    var damageAmount : Float = 0.0
    var healAmount : Float = 0.0

    // Min/Maximum Health
    var minAmount: Float = 0.00
    var maxAmount : Float = 0.0

    // how much damage was left after this number of hits
    let minAmountHits:Float = 10

    let demageFactor: Float = 0.10
    let healFactor: Float = 0.05

    override func viewDidLoad() {
        super.viewDidLoad()

        initAmount()
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }

    func initAmount(){
        damageAmount = getWidth() * demageFactor
        healAmount = getWidth() * healFactor
        maxAmount = getWidth()
        minAmount = maxAmount - minAmountHits * damageAmount
    }

    @IBAction func damageBar(_ sender: UIButton) {
        if getWidth() &gt; minAmount {
            updateWidth(-damageAmount)
        }
    }

    @IBAction func healBar(_ sender: Any) {
        if getWidth() &lt; maxAmount {
            updateWidth(healAmount)
        }
    }

    func getWidth() -&gt; Float {
        return Float(self.armorBarView.frame.size.width)
    }

    func updateWidth(_ amount: Float) {
        self.healthBarView.frame.size.width += CGFloat(amount)
        print(self.armorBarView.frame.size.width)
    }
}
</code></pre>
    </div>