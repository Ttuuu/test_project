<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are creating an array of strings (using <code>str.split(" ")</code>) as well as an array of numbers (<code>wordLengthArray</code>), then sorting <code>wordLengthArray</code>.  All three of those operations are wasteful, if you are aiming for performance.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function findLongestWordLength(str) {
  let maxLen = -1;
  for (var i = 0, j; (j = str.indexOf(" ", i)) != -1; i = j + 1) {
    maxLen = Math.max(maxLen, j - i);
  }
  return Math.max(maxLen, str.length - i);
}

console.log(6 == findLongestWordLength("The quick brown fox jumped over the lazy dog"));
console.log(5 == findLongestWordLength("May the force be with you"));
console.log(6 == findLongestWordLength("Google do a barrel roll"));
console.log(8 == findLongestWordLength("What is the average airspeed velocity of an unladen swallow"));
console.log(19 == findLongestWordLength("What if we try a super-long word such as otorhinolaryngology"));</code></pre>
</div>
</div>


<p>Depending on the browser/interpreter, your function is <a href="https://jsperf.com/findlongestwordlength/1" rel="nofollow noreferrer">33% to 86% slower</a> than mine.</p>
    </div>