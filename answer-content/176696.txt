<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Is this the most efficient way to do this function? </p>
</blockquote>

<p>For the sake of efficiency, what you have may be close. As others have pointed out, the selector for the fields to reset the value of <code>formmodified</code> could be combined. For example, the single selector offered in <a href="https://codereview.stackexchange.com/a/176541/120114">the answer</a> by <a href="https://codereview.stackexchange.com/users/6499/roland-illig">Roland Illig</a>: </p>

<pre><code>$("input[name='ModifyRecord'], input[name='DeleteRecord'], input[name='DeleteChecked']").click(function() {
    formmodified = false;
});
</code></pre>

<p>This could be simplified using an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions" rel="nofollow noreferrer">arrow function</a> (a feature of <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> - note the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Browser_compatibility" rel="nofollow noreferrer">browser support of those</a>).</p>

<pre><code>$("input[name='ModifyRecord'], input[name='DeleteRecord'], input[name='DeleteChecked']")
    .click(_ =&gt; formmodified = false);
</code></pre>

<p>Another approach is to use <a href="http://api.jquery.com/on/#direct-and-delegated-events" rel="nofollow noreferrer">event delegation</a> by adding a click handler to an element containing those inputs - e.g. the document, form, etc. Then check the <code>target</code> property of the <code>event</code> argument to see if it:</p>

<ol>
<li>has a value in the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName" rel="nofollow noreferrer"><code>tagName</code></a> attribute of <em>input</em>, and</li>
<li>has a value in the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/name" rel="nofollow noreferrer"><code>name</code></a> attribute matching one of the three inputs targeted <sub>(i.e. 'ModifyRecord', 'DeleteRecord', 'DeleteChecked')</sub></li>
</ol>

<p>For #1, we can access the <code>tagName</code> property. For #2, we can create an array - e.g. <code>var resetNames = ['ModifyRecord', 'DeleteRecord', 'DeleteChecked'];</code> and if the <code>name</code> attribute is in that array: </p>

<pre><code>$(document).click(function(clickEvent) {
    var targ = clickEvent.target;
    if (targ.tagName.toLowerCase() == 'input' &amp;&amp; resetNames.includes(targ.name)) {
        formmodified = 0; 
    }
}
</code></pre>

<p>Like <a href="https://codereview.stackexchange.com/users/148786/ced">ced</a> mentioned, adding a class attribute to the inputs to target could simplify the logic. Then the logic to check if the name of the input is in the array could be replaced by a simple call to <a href="http://api.jquery.com/hasclass/" rel="nofollow noreferrer"><code>targ.hasClass()</code></a>.</p>

<blockquote>
  <p>Or can it be simplified much more to run smoother?</p>
</blockquote>

<p>I am not sure about <em>smoother</em>, but I do know that the MDN documentation for <a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload" rel="nofollow noreferrer">onbeforeunload</a> states:</p>

<blockquote>
  <p>You <em>can</em> and <em>should</em> handle this event through <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener" rel="nofollow noreferrer"><code>window.addEventListener()</code></a> and the <a href="https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload" rel="nofollow noreferrer"><code>beforeunload</code></a> event. More documentation is available there.<sup><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload#Notes" rel="nofollow noreferrer">1</a></sup></p>
</blockquote>

<p>For a single page application, there may not be a need to have more than one function called during the <code>beforeunload</code> event, but as applications grow larger, there may be a need to have multiple. That approach (with <code>window.addEventListener('beforeunload', function() {...})</code> supports multiple callback functions to be run.</p>

<p>Also note that the documentation for <a href="https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload" rel="nofollow noreferrer">beforeunload</a> states:</p>

<blockquote>
  <p>If a string is assigned to the <code>returnValue</code> Event property, a dialog appears asking the user for confirmation to leave the page... WebKit-based browsers don't follow the spec for the dialog box. An almost cross-browser working example would be close to the following:</p>

<pre><code>window.addEventListener("beforeunload", function (e) {
      var confirmationMessage = "\o/";
      e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+
      return confirmationMessage;              // Gecko, WebKit, Chrome &lt;34
});
</code></pre>
  
  <p><sup><a href="https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload" rel="nofollow noreferrer">2</a></sup></p>
</blockquote>

<p>So for both cases, set the <code>returnValue</code> property on the event argument (i.e. <code>e</code> in the example above) and then return that value.</p>

<p>And in agreement with Roland, add <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/var" rel="nofollow noreferrer"><code>var</code></a> (I would say <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let" rel="nofollow noreferrer"><code>let</code></a> but maybe you are supporting browsers that don't fully support that and other <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> features like IE 10 and earlier) before initializing <code>formmodified</code> to limit the scope to that of the DOM-loaded callback.</p>

<p>Additionally, the format for <a href="http://api.jquery.com/ready/" rel="nofollow noreferrer"><code>.ready()</code></a> can be simplified to "the recommended syntax"<sup><a href="http://api.jquery.com/ready/" rel="nofollow noreferrer">3</a></sup>:</p>

<pre><code>$(function() { ... })
</code></pre>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>$(function() { //DOM ready callback
  var formmodified = 0;
  var resetNames = ['ModifyRecord', 'DeleteRecord', 'DeleteChecked'];
  $('form *').change(function() {
    formmodified = 1;
    console.log('set formmodified to 1');
  });
  window.addEventListener('beforeunload', confirmExit);

  function confirmExit(e) {
    if (formmodified === 1) {
      var confirmationMessage = "Are you sure you want to leave this page? This will abandon any progress on changes to document preferences";
      e.returnValue = confirmationMessage
      return e.returnValue;
    }
  }
  $(document).click(function(clickEvent) {
    var targ = clickEvent.target;
    if (targ.tagName.toLowerCase() == 'input' &amp;&amp; resetNames.includes(targ.name)) {
      formmodified = 0; 
      console.log('set formmodified to 0');
    }
  });
});</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.0/jquery.min.js"&gt;&lt;/script&gt;
&lt;form&gt;
  Some text
  &lt;input type="Number" name="numberField" /&gt;
  &lt;input name="CreateRecord" type="button" value="Create record" /&gt;
  &lt;input name="ModifyRecord" type="button" value="Modify record" /&gt;
  &lt;input name="DeleteRecord" type="button" value="Delete record" /&gt;
  &lt;input name="DeleteChecked" type="button" value="Delete checked" /&gt;
&lt;/form&gt;</code></pre>
</div>
</div>


<hr>

<p><sup>1</sup><sub><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload#Notes" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload#Notes</a></sub></p>

<p><sup>2</sup><sub><a href="https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload</a></sub></p>

<p><sup>3</sup><sub><a href="http://api.jquery.com/ready/" rel="nofollow noreferrer">http://api.jquery.com/ready/</a></sub></p>
    </div>