<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A review of a computational code starts with reviewing the <em>algorithm</em> it uses.</p>

<p>Here's a kicker. Your algorithm in exponential, or worse, whereas the well-known "classic" algorithm is linear.</p>

<p>This means your code is <em>spectacularly</em> slower, <strong><em>incomparably</em></strong> slower. </p>

<p>Why are your algorithm exponential <em>(at least)</em>? It is because in order to produce <em>n</em> first Hamming numbers you are testing <em>all</em> the natural numbers below the <i>n</i>th Hamming number. But the <i>n</i>th Hamming number is on the order of <i>~ exp (n<sup>1/3</sup>)</i> in magnitude, <a href="https://en.wikipedia.org/wiki/Regular_number#Number_theory" rel="nofollow noreferrer">according to Wikipedia</a>.</p>

<p>The "classic" algorithm is <strong><em>linear</em></strong> in <em>n</em>. So is the <strong><em>improved</em></strong> algorithm (used in the two older answers on 
<a href="https://stackoverflow.com/questions/12480291/new-state-of-the-art-in-unlimited-generation-of-hamming-sequence">the SO entry</a> where you've <a href="https://stackoverflow.com/questions/12480291/new-state-of-the-art-in-unlimited-generation-of-hamming-sequence/53842595#53842595">posted</a> your code), which is faster than the "classic" one by about a constant factor of <em>2</em>. I think anyone will agree that exponential algorithm is <em>no improvement</em> to the linear, <em>quite the contrary</em>.</p>

<p>Since the algorithm in your question is so abominably slow, any other considerations about your code will pale in comparison.</p>
    </div>