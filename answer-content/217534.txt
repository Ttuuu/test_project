<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Nice work! Here are my comments, mostly style related:</p>

<p><code>easter.h:</code></p>

<ul>
<li><p>Consider using <code>#pragma once</code> instead of the classic style header guard. While it's not strictly-conforming C, it's supported by all mainstream compilers. It is of my personal preference, since it keeps code cleaner and more uniform.  </p>

<p>For further discussions, pros and cons:</p>

<ul>
<li><a href="https://stackoverflow.com/questions/787533/is-pragma-once-a-safe-include-guard">https://stackoverflow.com/questions/787533/is-pragma-once-a-safe-include-guard</a></li>
<li><a href="https://en.wikipedia.org/wiki/Pragma_once" rel="nofollow noreferrer">https://en.wikipedia.org/wiki/Pragma_once</a></li>
</ul></li>
</ul>

<p><code>easter.c:</code></p>

<ul>
<li><code>#include "easter.h"</code> is missing.</li>
<li>In <code>Easter_DateGregorian</code>, variables <code>n</code> and <code>p</code> could be renamed <code>month</code> and <code>day</code>, respectively. While this knowledge could be implied from the return statement, it's better to give them a meaningful name. Then, the <code>+ 1</code> should be added to <code>day</code>, instead of when returning.</li>
<li>Similarly, in <code>Easter_DateJulian</code>, <code>f</code> and <code>g</code> could be renamed <code>month</code> and day, respectively.</li>
</ul>

<p><code>main.c:</code></p>

<ul>
<li><code>#include "easter.h"</code> is missing.</li>
<li>The function <code>Easter</code> appears before the <code>#include</code>s block: my recommendation is always placing <code>#include</code>s at the very beginning of the source file. It is useful to know that includes are always found in the same place, and not hiding in the source code. Also, since <code>Easter</code> is a reference function, consider a more expressive name such as <code>Easter_Ref</code>.</li>
<li><code>#include &lt;math.h&gt;</code> is missing for <code>round.h</code>.</li>
<li>Since <code>count</code> is a two-dimentional array, it should be initialized with double braces: <code>int count[5][32] = { { 0 } };</code>.</li>
<li>Consider using named constants for months 3 and 4, such as <code>MARCH</code> and <code>APRIL</code>. That way, the meaning of <code>m</code> is clear immediately.</li>
<li>From the same reasoning, consider renaming <code>m</code> and <code>d</code> to <code>month</code> and <code>day</code> respectively.</li>
</ul>
    </div>