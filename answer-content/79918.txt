<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>try {
    if(year.length() != 4) {
        throw new NumberFormatException("Please provide four(4) digits for the year.");
    }
    yyyy = Integer.parseInt(year);
    if(yyyy == 0) {
        throw new NumberFormatException("zero is an invalid year.");
    }
 }
 catch(NumberFormatException nfe) {
     throw new NumberFormatException(year + " is an invalid year.");
 }
</code></pre>
</blockquote>

<p>What happens if there is a non-numeric character in the year string?  You could either accept a three digit year or reject a four digit year.  E.g. -800 would be acceptable under this check but +2016 would not.  </p>

<p>What happens if someone provides a five digit year?  You'd throw an exception even though that would be a valid future date.  </p>

<p>You catch anything that is a <code>NumberFormatException</code> but then throw another <code>NumberFormatException</code> with a less-specific message.  </p>

<pre><code>try {
    yyyy = Integer.parseInt(year);
    if ( yyyy &lt;= 0 ) {
        throw new NumberFormatException("zero is an invalid year.");
    }
 }
 catch(NumberFormatException nfe) {
     throw new NumberFormatException(year + " is an invalid year.");
 }

 if ( yyyy &lt; 100 ) {
     throw new NumberFormatException("Please provide all digits for the year (" + year + ").");
 }
</code></pre>

<p>This version accepts years with three or more digits but rejects two digit years (often abbreviations for four digit years).  It throws a general invalid year exception if <code>parseInt</code> fails or if the year is non-positive.  If the year is between 0 and 100, it assumes that it is abbreviated and asks for more digits.  </p>

<p>This still catches and rethrows the exception on non-positive years, but it doesn't discard any information in doing so.  </p>

<p>If you want to reject three digit years as well, you can just increase the boundary from 100 to 1000.  However, I'm strongly against rejecting five or more digits, as that essentially puts an expiration date on your code.  It may be early, but why introduce an unnecessary Y10K problem?  </p>
    </div>