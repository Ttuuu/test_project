<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Expanding on <a href="https://codereview.stackexchange.com/questions/229076/leetcode-top-k-frequent-elements-c/229084#229084">@tinstaafl's answer</a>, you may write an extension method to retrieve the X most frequently occurring items like so:</p>

<pre><code>public static IEnumerable&lt;T&gt; GetMostFrequent&lt;T&gt;(this IEnumerable&lt;T&gt; inputs, int topXMostFrequent)
{
    var uniqueGroups = inputs.GroupBy(i =&gt; i);

    if (uniqueGroups.Count() &lt;= topXMostFrequent)
    {
        return uniqueGroups.Select(group =&gt; group.Key);
    }

    return uniqueGroups.OrderByDescending(i =&gt; i.Count())
                       .Take(topXMostFrequent)
                       .Select(group =&gt; group.Key);
}
</code></pre>

<p>I personally prefer <strong>the method syntax</strong> to <strong>the query syntax</strong>. (See <a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/query-syntax-and-method-syntax-in-linq" rel="nofollow noreferrer">this page</a> for the differences between the two.)</p>

<p>Notice that there is no need to call <code>OrderByDescending()</code> if all of the unique groups of items in the initial collection are to be included in the final collection.</p>

<p>This generic method allows you to pass in collections of any type (and not just of the <code>int</code> type). E.g.:</p>

<pre><code>public class Program
{
    public static void Main()
    {
        int[] numbers = { 1, 1, 1, 2, 2, 3 };
        // Prints 1 and 2
        Console.WriteLine("Two most frequent numbers: " + string.Join(", ", numbers.GetMostFrequent(2)));

        char[] letters = { 'a', 'a', 'a', 'b', 'b', 'c' };
        // Prints 'a' and 'b'
        Console.WriteLine("Two most frequent letters: " + string.Join(", ", letters.GetMostFrequent(2)));

        string[] fruits = { "apple", "apple", "apple", "banana", "banana", "banana", "cherry", "cherry" };
        // Prints "apple" and "banana"
        Console.WriteLine("Two most common fruits: " + string.Join(", ", fruits.GetMostFrequent(2)));
    }
}
</code></pre>

<p>You may run my code <a href="https://dotnetfiddle.net/OOCdRB" rel="nofollow noreferrer">here</a> and play around with it.</p>
    </div>