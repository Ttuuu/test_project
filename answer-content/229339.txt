<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Performance</h3>

<ul>
<li>The recursive function is as fast as I can think of.</li>
<li>The iterative function should enqueue <code>root.left</code> and <code>root.right</code> instead of <code>root</code> and <code>root</code> to gain a cycle (micro-optimisation).</li>
</ul>

<h3>Review</h3>

<ul>
<li>I find it weird that the null node is considered symmetric <code>IsSymmetric(null)</code>. I would throw an error for invalid input.</li>
<li>Both algorithms are not able to deal with <code>TreeNode</code> instances that have a cycle (stack overflow exception vs infinite loop respectively). You will lose some performance if you guard against cycles.</li>
<li><code>Helper</code> is a public method. There is no reason for this. Make it private or local inside the public method, and perhaps rename it to <code>IsSymmetric</code>, which will not be in conflict with the public method because of different signature.</li>
<li>Parameter names <code>t1</code> and <code>t2</code> are best avoided. Use full and more clear names like <code>node1</code> and <code>node2</code>.</li>
<li><code>Queue&lt;TreeNode&gt; Q = new Queue&lt;TreeNode&gt;();</code> should be written more concisely and clearly as <code>var queue = new Queue&lt;TreeNode&gt;();</code>.</li>
</ul>
    </div>