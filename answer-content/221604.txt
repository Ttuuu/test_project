<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Regular expressions</h3>
<p>You might <a href="https://stackoverflow.com/questions/9969158/when-not-to-use-regexoptions-compiled">consider compiling</a> your regular expressions.</p>
<pre><code>ipRegex = new Regex(@"[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
        , RegexOptions.Compiled);
</code></pre>
<hr>
<h3>Path normalization</h3>
<blockquote>
<pre><code>Console.WriteLine("Please specify file path");
filePath = Console.ReadLine();
</code></pre>
</blockquote>
<p>-&gt; append the following method to have some leverage on user input.</p>
<pre><code>filePath = System.IO.Path.GetFullPath(filePath )
</code></pre>
<hr>
<h3>New lines</h3>
<blockquote>
<p><code>rawResult.Trim().Split('\n');</code></p>
</blockquote>
<p>Are you sure to use <code>\n</code>? Perhaps this is fine. Maybe consider using <code>Environment.NewLine</code> instead. It depends how this tool encodes new lines.</p>
<hr>
<h3>Seperation of concerns</h3>
<p>Method <code>ReplaceHexNotation</code> performs both tokenizing and outputting to the console. You should extract algorithms from output for better usability and maintainability.</p>
    </div>