<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Right, so don't use the <code>reverse()</code> helper because it would make the algorithm solution too easy.</p>

<p>Every solution thus far has made use of the <code>for</code> loop, excellent. I don't like using it anyway.</p>

<p>I was going to use the <code>reduce()</code> helper, but that was taken.</p>

<p>Alright, so instead I will use a different type of <code>for</code> loop introduced with ES2015, called the <code>for...of</code> syntax.</p>

<ol>
<li>Create an empty string called <code>reversed</code>.</li>
<li><code>for</code> each <code>character</code> in the provided string</li>
<li>Take the <code>character</code> and add it to the start of <code>reversed</code></li>
<li><code>return</code> the variable of <code>reversed</code></li>
</ol>

<p>You are dying to see the code aren't you.</p>

<pre><code>function reverse(str) {
  let reversed = '';
  for (let character of str) {
    reversed = character + reversed;
  }
  return reversed;
}

reverse('abc');
</code></pre>

<p>So what's going on here? We say <code>for</code> a variable declaration, I am creating a temporary variable that is redeclared every single time through this loop of <code>character</code>:</p>

<pre><code>for (let character of str) {
 reversed = character + reversed;
}
</code></pre>

<p>Then we say <code>of</code> and then the iterable object we want to iterate through, in this case its all the <code>character</code>s of <code>str</code> variable.</p>

<p>So we iterate through each <code>character</code> of <code>str</code>, one by one, and set each <code>character</code> equal to the temporary variable of <code>character</code>.</p>

<p>We then take that <code>character</code>, add it to the start of the string <code>reversed</code> and after the entire <code>for</code> loop, we <code>return</code> the string <code>reversed</code>.</p>

<pre><code>function reverse(str) {
    let reversed = '';
  for (let character of str) {
    reversed = character + reversed;
  }
  return reversed;
}

reverse('abc');
</code></pre>
    </div>