<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your description is not very clear, but I see the usual suspects.</p>

<h2>Indenting</h2>

<p>Always indent your code properly - this makes it easier to read, easier to pick out the logic loops and easier to maintain. In itself, it does not guarantee code correctness.</p>

<h2>Option Explicit</h2>

<p>Always put <code>Option Explicit</code> at the top of your modules.</p>

<h2>Variable names</h2>

<p>Use descriptive variable names. For what you tell us the code is intended to do, <code>curDate</code> and <code>curCountry</code> mean nothing. Neither does <code>colsX</code>, <code>rowsX</code>, <code>def</code>, <code>Rng</code> or <code>Mrange</code>.</p>

<h2>Use arrays</h2>

<p>Using arrays will improve your performance significantly. The reason for this improvement is that you stop switching between the VBA Engine and the Excel Engine (which comes at a cost) and you work purely in the one context. You also stop working with complex objects, which also incur an overhead.</p>

<p>The following is an example of how to adjust the code, but is not intended to be an accurate representation of your code.</p>

<pre><code>Dim originalMatrix as Variant
originalMatrix = Selection.Value '&lt;-- creates an array from the range values - only time to touch Excel
Dim title as String
title = CStr(originalMatrix(LBound(originalMatrix,1), LBound(originalMatrix,2))
Dim finalMatrix(,) As Variant '&lt;-- or whatever type you want here
ReDim finalmatrix(UBound(originalMatrix,1) * UBound(originalMatrix,2),2)

' Adjust following loops to pick the right rows and columns.
For iterator1 = LBound(originalMatrix,1) To UBound(originalMatrix,1)
    For iterator2 = LBound(originalMatrix,2) To UBound(originalMatrix,2)
        finalMatrix(someCounter,1) = someValue1
        finalMatrix(someCounter,2) = someValue2
    Next iterator2
Next iterator1

'.... some code here to select output range and resize to match finalMatrix …
' … and then
outputRange.Value = finalMatrix '&lt;--- again, a light touch against the Excel model
</code></pre>

<p>The use of LBound and UBound protect you against any confusion as to whether your array is 1-based or 0-based.You could store these in variables if you wanted the code to read a bit better. </p>
    </div>