<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Standard disclaimer: in a production setting it is overwhelmingly better to use somebody else's crypto. </p>

<p>I don't have the expertise to certify "Yes, this is secure" (and as I'm some randomer online, you should assume that even if I was actually a world expert!) There are, however, a few things that strike me as red flags.</p>

<pre><code>byte[] ivSeed = Guid.NewGuid().ToByteArray();
</code></pre>

<p>In crypto, if you need a random number, you basically always need a cryptographically secure random number. <code>NewGuid()</code> is not cryptographically secure. </p>

<pre><code>var messageLength = BitConverter.GetBytes(messageLengthAs32Bits);
</code></pre>

<p>Block ciphers like AES do not claim to obscure the approximate message length, so this is not strictly a vulnerability. Nevertheless if you are vulnerable to any attacks based on the length, then passing the precise length in plaintext makes those attacks a whole bunch quicker and easier to execute.</p>

<pre><code>byte[] Key = rfc.GetBytes(16);
byte[] IV = rfc.GetBytes(16);
</code></pre>

<p>The derivation of your key should not be tied to the derivation of your IV. </p>
    </div>