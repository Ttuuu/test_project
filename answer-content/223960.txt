<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My main observation is that there seem to be a lot of free standing functions:</p>

<pre><code>csvToken csvFirstMatch(const csvStringView&amp; strView, FirstMatcher firstMatcher, OtherMatchers... otherMatchers)
csvToken csvFirstMatch(const csvStringView&amp; strView, LastMatcher lastMatcher)
bool csvIsNewline(char c) noexcept
bool csvIsCellTerminal(char c) noexcept
csvToken csvScanSeparator(const csvStringView&amp; strView) noexcept
csvToken csvScanLF(const csvStringView&amp; strView) noexcept
csvToken csvScanCRLF(const csvStringView&amp; strView) noexcept
csvToken csvScanNewline(const csvStringView&amp; strView) noexcept
csvToken csvScanUnquotedCell(const csvStringView&amp; strView) noexcept
csvToken csvScan(const csvStringView&amp; strView) noexcept
</code></pre>

<p>And three classes</p>

<pre><code>enum class csvTokenType
class csvToken final
struct csvStringView final
</code></pre>

<p>But it does not spring out at my how to use this.<br>
Personally I would like to see something like:</p>

<pre><code>CSVFile   file("FileName");
for(auto loop = file.begin(); loop != file.end(); ++loop) {
    // loop is now an iterator to a token.
}

// If you can do that with C++11
// Then the simpler syntax for C++14 make it easier:

CSVString  data(stringLoadedFromASourceThatIsNotAFile);
for(auto const&amp; token: data) {
    // token is now a reference to the next token in the loop.
}
</code></pre>
    </div>