<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I wouldn't say the code is difficult to follow but I do have some suggestions.</p>

<p>The first thing I notice is that some variables are declared with <code>let</code>. Many of those variables never get re-assigned. It is wise to use <code>const</code> for any value that shouldn't get re-assigned - even if it isn't a constant.  This helps avoid accidental re-assignment.</p>

<p>The values in <code>apiRoot</code> and <code>key</code> are basically constants and could be moved to the top of the script. That way you won't have to go searching through the code in case you need to update the values. Also, a common convention of many c-based languages is to use ALL_CAPS for constants.</p>

<p>And while <code>let</code> and <code>const</code> aren't exactly <a href="/questions/tagged/es6" class="post-tag" title="show questions tagged 'es6'" rel="tag">es6</a> features, the code could be simplified with other <a href="/questions/tagged/es6" class="post-tag" title="show questions tagged 'es6'" rel="tag">es6</a> features like arrow functions, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of" rel="nofollow noreferrer"><code>for...of</code></a> loops, the fetch API (or a similar XHR library like axios, reqwest, etc.).</p>

<p>Instead of constructing HTML elements by building strings, you can use methods like <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement" rel="nofollow noreferrer"><code>document.createElement()</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild" rel="nofollow noreferrer"><code>Node.appendchild()</code></a>.</p>

<p>I would also suggest using adding event handlers via JavaScript instead of inline in the HTML.  For instance, instead of adding lines like this:</p>

<blockquote>
<pre><code>linkElement += ' onmouseover="showSitename(\'' + tooltipID + '\',\'' + siteLinkSplit[2] + '\')"';
</code></pre>
</blockquote>

<p>Add event listeners to elements using <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener" rel="nofollow noreferrer"><code>element.addEventListener()</code></a> - especially simple if using elements created via <code>document.createElement()</code> as mentioned in the previous section. You could also consider using <a href="https://davidwalsh.name/event-delegate" rel="nofollow noreferrer">event delegation</a> on a parent element and handling events based on the element that was interacted with (e.g. based on class names, etc.). The advantage of this is that it keeps the logic (JS) out of the markup (HTML)</p>
    </div>