<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The first thing that strikes me is that you're writing error and status messages to the <em>standard output</em> stream, when usually these go to <code>stderr</code>, the <em>standard error</em> stream.</p>

<p>I'm not sure it makes much sense to attempt to create an empty file if the file opening fails - why not leave this until it's time to save?  What if the reason it failed is because the file doesn't have read permission for the process?  And how do you know whether creating a new file succeeded or not?</p>

<p>I'd argue that it's better to return a null pointer if the file opening fails, so that client code can distinguish this from a successful load of an empty list:</p>

<pre><code>if (f == NULL)
{
    /* NULL return signifies nothing could be read */
    return NULL;
}

studentList *list = newList();
</code></pre>

<p>I'm assuming <code>newList()</code> is an allocation function that returns a null pointer if the allocation fails; that means we shouldn't attempt to use it until we've checked it's a valid pointer.</p>

<p><code>while (!eof)</code> is <a href="//stackoverflow.com/q/5431941">a common anti-pattern</a>; what we want to do instead is more like <code>while (fscanf(...)==2)</code> - and that removes the need to measure the file size before reading the contents.</p>

<p>This line is clearly wrong</p>

<blockquote>
<pre><code>    fflush(f);
</code></pre>
</blockquote>

<p><code>f</code> is an <em>input stream</em>, so <code>fflush(f)</code> is Undefined Behaviour.  Just remove this call.</p>
    </div>