<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If your need is truly</p>

<blockquote>
  <p>Add 2 strings representing 2 doubles, return the sum of the 2 doubles in string format.</p>
</blockquote>

<p>then it is as easy as</p>

<pre class="lang-py prettyprint-override"><code>def add_strings(x, y):
    return str(float(x) + float(y))

a = add_strings("2.3", "4.5")

print(a)
print(type(a))
</code></pre>

<p>which gives</p>

<pre><code>6.8
&lt;class 'str'&gt;
</code></pre>

<p>Note that returning a numerical string is a strange and mostly not required operation in the Python world.
The function should return without the <code>str</code> call, and the conversion to string will either be implicit (like <code>print</code> can do it) or explicit by the user of that function.
If you hand the returned string into a new function that does, say, multiplication, and that function has to convert string to float again... you see the unnecessary chain there.</p>

<p>Other than that, your code can benefit from sticking to the <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP 8 Style Guide</a>.
Most of all, in this case, having all variables in <code>snake_case</code> can save you from hearing "PEP 8"-comments again.
In <code>res = ''</code>, you could issue <code>res = ""</code>, since those quotes are impossible to mistake.
<code>''</code> can look like <code>"</code>.</p>
    </div>