<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I recommend practicing Python 3 rather than Python 2 these days.</p>

<p>According to <a href="https://www.python.org/dev/peps/pep-0008/#function-and-variable-names" rel="noreferrer">PEP 8</a>, <code>isClean()</code> should be <code>is_clean()</code>.</p>

<p>One or more of your loops could be replaced by some use of the <a href="https://docs.python.org/2/library/functions.html#any" rel="noreferrer"><code>any()</code></a> function.  Note that this suggests that an <code>is_explicit()</code> function would be a more natural concept than an <code>is_clean()</code> function.</p>

<p>I would expect song lyrics to contain a mixture of uppercase and lowercase.  Words may be delimited by punctuation as well as spaces.  Therefore, <code>words = line.split(" ")</code> is probably too naïve.  Furthermore, I would expect each song to be short enough to fit entirely in memory very comfortably, so processing each file line by line is an unnecessary complication.</p>

<p>I would rewrite the program to use a <a href="https://docs.python.org/2/library/re.html" rel="noreferrer">regular expression</a> instead.</p>

<pre><code>import re

explicit_words = [
    …
]

is_explicit = re.compile(
    r'\b(?:' +
        '|'.join(re.escape(w) for w in explicit_words) +
    r')\b',
    re.IGNORECASE).search

def main():
    with open(raw_input("Enter path to song: ")) as song:
        print("EXPLICIT" if is_explicit(song.read()) else "CLEAN")

if __name__ == '__main__':
    main()
</code></pre>

<p>The way I chose to write the <code>is_explicit()</code> function above might show too much Haskell influence for some Python programmers' taste.  Here's a more conventional way of writing it:</p>

<pre><code>def is_explicit(text):
    return re.search(
        r'\b(?:' +
            '|'.join(re.escape(w) for w in explicit_words) +
        r')\b',
        text,
        re.IGNORECASE
    )
</code></pre>
    </div>