<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Scale</h2>
<p>Since you have</p>
<pre><code>for ii in range (0,1750):
    for jj in range (31,351):
        for kk in range (31,351):
            pulse_2d = np.zeros((39,63,63))
</code></pre>
<p>your inner loop will be on the order of</p>
<p><span class="math-container">$$
1750 \cdot (351-31)^2 \cdot 39 \cdot 63^2 = 27,738,547,200,000
$$</span></p>
<p>That is well (<em>well</em>) beyond the point that I would give up Python altogether and drop down to C. Even if you were to vectorize this further with Numpy as much as possible (and I'm not clear on whether that's possible), I doubt that you could get this down to a sane execution time.</p>
<p>Strongly consider GSL and/or BLAS.</p>
    </div>