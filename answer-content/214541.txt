<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you handle the parameters of the URLs manually using <code>f-string</code>s, you open yourself to a whole lot of possible bugs. If the file name of an attachment contains even so much as a space, your script will break.</p>

<p>You could fix this by manually URL encoding your parameters, or you could use the features provided by the <code>requests</code> library for this by passing a dictionary  with all parameters:</p>

<pre><code>def navigate_to_workerprofile(user_id: int):
    params = {'actionType': 'view', 'kUserID': user_id}
    return sess.get(f'{URL}acm_userProfileControl', params=params)

def download_attachment(file_name):
    params = {'actionType': 'download',
              'attachCat': 'worker',
              'attachCatID': kuserid,
              'attachName': file_name}
    logger.debug(f'Downloading {file_name}')
    r = sess.get(f'{URL}acm_attachmentControl', params=params)
    if 'JSESSIONID' not in sess.cookies:
        raise ConnectionError
    return r
</code></pre>

<p>Next, you should not rely on global variables, if at all possible. Currently you are passing some parameters as arguments to your functions and some not. Instead, pass all parameters as arguments (global constants like <code>URL</code> are OK):</p>

<pre><code>BASE_PATH = Path('E:/Penelope Logs/mywebapp')

def save_log_files(log_attachments):
    for log_name in sorted(log_attachments):
        log_file_path = BASE_PATH / log_name

        if not log_file_path.exists():
            try:
                log_download_response = download_attachment(log_name)
                with open(log_file_path, 'wb') as log_file:
                    log_file.write(log_download_response.content)
                    logger.debug(f'Log File {log_file_path} saved to disk')
            except ConnectionError as e:
                logger.error('Connection no longer valid. No session token.')
        else:
            logger.debug(f'{log_file_path} already exists')
</code></pre>
    </div>