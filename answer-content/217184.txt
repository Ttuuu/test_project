<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It appears <a href="https://www.npmjs.com/package/music-metadata" rel="nofollow noreferrer">music-metadata</a> is the Node.js/desktop flavor of music-metadata-browser (intended for browsers).  The author doesn't explain the differences between the two, but maybe the desktop variant will be faster for you.</p>

<p>Synchronous anything is a mistake for an inherently parallel task like this.   Use <code>fs.lstat</code> instead of the <code>fs.lstatSync</code>.  If <code>createLibraryEntry</code> or <code>dispatch</code> touch the disk they should be replaced with async versions as well.</p>

<p>Worker threads <a href="https://nodejs.org/api/worker_threads.html" rel="nofollow noreferrer">are a thing</a> but you probably don't need them, because disk access is what's slowing you down and async disk access <a href="https://blog.stephencleary.com/2013/11/there-is-no-thread.html" rel="nofollow noreferrer">doesn't require threads</a>.  </p>

<p>If you have disk I/O that can't be asynchronized (if that's a word) by conventional callback functions, or if you've made everything async and it's still too slow, that is the time to consider using workers.</p>
    </div>