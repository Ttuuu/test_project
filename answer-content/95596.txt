<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Memoization is not strictly needed to avoid to repeat computations</p>

<pre><code>def fib(n):
    (x,y) = fibpair(n)
    return y

def fibpair(n):
    if n == 0:
       return (1,0)
    else:
       (x, y) = fibpair(n-1)
       return (x+y, x)
</code></pre>

<p>The functions are linked by the relation</p>

<pre><code>fibpair(n) == (fib(n+1), fib(n))
</code></pre>

<p><strong>Edit:</strong> if you dont like the idea of computing also <code>fib(n+1)</code> when you need <code>fib(n)</code>, you can also start from</p>

<pre><code>fp(n) == (fib(n), fib(n-1))
</code></pre>

<p>with a fictious value of 1 for <code>fib(-1)</code> to preserve the recurrence relation.</p>

<pre><code>def fib(n):
    (x, y) = fp(n)
    return x    
def fp(n):
    if n==0:
        return (0, 1)
    else:
        (x,y) = fp(n-1)
        return (x+y, x)
</code></pre>
    </div>