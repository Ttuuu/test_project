<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Your code is pretty good. Nice job.</li>
<li>I'd personally change the first <code>else</code> to an <code>elif</code> so you don't have as much indentation.</li>
<li><p>Rather than using that while loop you can just use one <code>%</code> per number.</p>

<p>For each number if you get the modulo then you can find out how much to add. 7 % 5 is 2. Where 5 - 2 is not less than 3.</p>

<p>And so you can easily change the while to just <code>difference = 5 - grade % 5</code></p></li>
<li>You can merge <code>grade % 5 == 0</code> into the else.</li>
<li>You can change the order and content of the ifs. This is as we don't need to call <code>list.append</code> three times, just mutate <code>grade</code>.</li>
</ul>

<pre class="lang-py prettyprint-override"><code>def gradingStudents(grades):
    rounded_grades = []
    for grade in grades:
        if grade &gt;= 38:
            difference = 5 - grade % 5
            if difference &lt; 3:
                grade += difference
        rounded_grades.append(grade)
    return rounded_grades
</code></pre>

<p>Since we know the range that anything modulo 5 is 0-4, we can just make a small lists that holds how much to round.</p>

<pre class="lang-py prettyprint-override"><code>ADDITIONS = [0, 0, 0, 2, 1]


def gradingStudents(grades):
    rounded_grades = []
    for grade in grades:
        if grade &gt;= 38:
            grade += ADDITIONS[grade % 5]
        rounded_grades.append(grade)
    return rounded_grades
</code></pre>

<p>You can also change the code to a list comprehension if you're that way inclined.</p>

<pre class="lang-py prettyprint-override"><code>ADDITIONS = [0, 0, 0, 2, 1]


def gradingStudents(grades):
    return [
        grade if grade &lt; 38 else grade + ADDITIONS[grade % 5]
        for grade in grades
    ]
</code></pre>
    </div>