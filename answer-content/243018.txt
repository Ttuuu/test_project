<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is an answer based on @PeterT 's answer.</p>

<p>So I kept the main logic of your code :</p>

<ul>
<li>No merging of cells but center across selection</li>
<li>A 2 dimensional array</li>
<li>Keep Data and formatting separate</li>
<li>Removing magic numbers</li>
</ul>

<p>And I changed a few things : </p>

<ul>
<li>removed all .select</li>
<li>I noticed that if I apply "xlCenterAcrossSelection" on the whole row it gives the same result</li>
 - 
</ul>

<p>And I came up with the following code :</p>

<pre><code>Option Explicit

Sub CreateTimeAxis()

    Application.ScreenUpdating = False

Const MONTH_ROW As Long = 1
Const WEEK_ROW As Long = 2
Const DATE_ROW As Long = 3
Const AXIS_ROWS As Long = 3
Const StartClearance As Long = 10 'Calendar days
Const FinnishClearance As Long = 19 '2x7 (two weeks) + 5 (Totalworkdays in a week)
Const Saturday As Long = 6
Const Friday As Long = 5

'---only for testing
    'Otherwise these are module private variables defined in the main Sub
    Range("firstday").Offset(-2, 0).Resize(3, 500).Clear
    Dim day1 As Range
    Set day1 = Range("firstday")
    Dim projectstart As Date
    Dim projectend As Date
    projectstart = "25/03/2020"
    projectend = "31/07/2020"

'--- Compute array and copy to worksheet
    Dim startminus10 As Date
    Dim firstmonday As Date
    Dim lastfriday As Date
    Dim totalWorkingDays As Long
    startminus10 = DateAdd("D", -StartClearance, projectstart)
    firstmonday = startminus10 - (Weekday(startminus10, vbMonday) - 1)
    lastfriday = DateAdd("D", FinnishClearance - Weekday(projectend, vbMonday), projectend)
    totalWorkingDays = WorksheetFunction.NetworkDays(firstmonday, lastfriday)


    '--- create three "time" rows:
    '      top row is months
    '      middle row is week number
    '      bottom row is working date
    Dim timeaxis As Variant
    ReDim timeaxis(1 To AXIS_ROWS, 1 To totalWorkingDays)

    Dim axisDate As Date
    Dim previousMonth As Long
    Dim previousWeek As Long
    Dim i As Long
    i = 1
    For axisDate = firstmonday To lastfriday
        If Weekday(axisDate, vbMonday) &lt; Saturday Then
            '--- if this is a new month, this cell notes the first of the month
            If previousMonth &lt;&gt; Month(axisDate) Then
                timeaxis(MONTH_ROW, i) = DateSerial(Year(axisDate), Month(axisDate), 1)
                previousMonth = Month(axisDate)
            End If

            '--- if this is a new week number, this cell notes the new week number
            If previousWeek &lt;&gt; WorksheetFunction.WeekNum(axisDate) Then
                timeaxis(WEEK_ROW, i) = WorksheetFunction.WeekNum(axisDate)
                previousWeek = timeaxis(WEEK_ROW, i)
            End If

            '--- each cell on row 3 always gets a date
            timeaxis(DATE_ROW, i) = axisDate
            i = i + 1
        End If
    Next axisDate

    '--- copy the time axis to the worksheet at the given range anchor
    Dim axisRange As Range
    Set axisRange = day1.Offset(1 - AXIS_ROWS, 0).Resize(AXIS_ROWS, totalWorkingDays)
    axisRange.Value = timeaxis

'--- Format axis
    With axisRange
        With .Rows(MONTH_ROW)
            .Font.Name = "Calibri"
            .Font.Size = 16
            .HorizontalAlignment = xlCenterAcrossSelection
            .Borders(xlEdgeRight).ColorIndex = xlAutomatic
            .Borders(xlInsideVertical).ColorIndex = xlAutomatic
            .NumberFormat = "mmm-yyyy"
        End With
        With .Rows(WEEK_ROW)
            .Font.Name = "Calibri"
            .Font.Size = 16
            .Font.Bold = True
            .HorizontalAlignment = xlCenterAcrossSelection
            .Borders(xlEdgeRight).ColorIndex = xlAutomatic
            .Borders(xlInsideVertical).ColorIndex = xlAutomatic
        End With
        With .Rows(DATE_ROW)
            .Orientation = 90
            .Font.Size = 10
            .NumberFormat = "dd/mm/yyyy"
            .RowHeight = 60#
            .ColumnWidth = 2#
            .HorizontalAlignment = xlCenter
        End With
    End With
    '--- Borders on DATE_ROW
    For i = 1 To UBound(timeaxis, 2)
        If Weekday(timeaxis(DATE_ROW, i), vbMonday) = Friday Then
            axisRange(DATE_ROW, i).Borders(xlEdgeRight).ColorIndex = xlAutomatic
        End If
    Next

    Application.ScreenUpdating = True
End Sub
</code></pre>

<p>I'm a bit stubborn as I didn't make a routine with parameters as inputs but I think it is not really different as my input are public and defined in the main Sub. Also I kept the native VBA WorkDay / NetWorkDay functions at least for now. But I saved the one you shared for later use if needed</p>

<p>Overall I'm quite happy with the result. It's much cleaner and runs about 4 times faster than my original code. Thanks to you!</p>
    </div>