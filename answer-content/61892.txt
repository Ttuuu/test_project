<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Be careful with your inequalities.  You've listed 500 twice: once as <code>if (Score &lt;= 500)</code> and again as <code>else if (Score &gt;= 500)</code>.  That's confusing, as the first condition takes precedence.</p>

<p>I think that you would be better off with one state variable representing the current difficulty level.  The code would also be simpler if you determine <code>NewDifficulty</code> using a level-triggered rather than edge-triggered mechanism.</p>

<pre><code>int Difficulty;

void IncreaseScore()
{
    int NewDifficulty = (Score &lt;   100) ? 0
                      : (Score &lt;=  500) ? 1
                      : (Score &lt;= 1500) ? 2
                                        : 3;
    // One-way ratchet: difficulty can only increase, even if the
    // score subsequently drops.
    if (NewDifficulty &lt; Difficulty)
    {
        Difficulty = NewDifficulty;
    }
}
</code></pre>

<p>If the score can never decrease in this game, then you can simplify it further:</p>

<pre><code>void IncreaseScore()
{
    Difficulty = (Score &lt;   100) ? 0
               : (Score &lt;=  500) ? 1
               : (Score &lt;= 1500) ? 2
                                 : 3;
}
</code></pre>
    </div>