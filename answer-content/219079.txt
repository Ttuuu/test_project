<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To answer your question exactly and with very little value: <strong>no</strong>. All those println's and traversal modes add unnecessary length to your code.</p>

<p>But lets get down to business... shortness is not always he most desirable feature of source code. Your choice of providing accessors for <code>value</code> but not for the <code>left</code> and <code>right</code> subtrees is questionable. Be consistent with how you expose and manipulate your fields.</p>

<p>You left out the context of <code>dtfRecursion</code>. Defining the traversal mode outside the traversal algorithm is odd. You could implment the traversal modes as separate classes. This would free you from the need to check the correctness of the <code>tMode</code>. Also you wouldn't need to worry about someone changing <code>tMode</code> during traversal (not that you do it now, eh).</p>

<p>It seems that you're just doing this for the sake of writing the algorithm but to make this review more useful, I'll point out that instead of hardcoding the println's you could pass a <code>Consumer&lt;Integer&gt;</code> to the traversal method and implement whatever you want to do with the values in that. And you could implement <code>Node</code> as a parameterized class to allow storage of types other than just integers.</p>

<p><code>Node</code> is also a bit generic name for a class that is highly specific in it's implementation. <code>BinaryTreeNode</code> might be better.</p>
    </div>