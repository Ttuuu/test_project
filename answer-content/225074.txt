<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Specification and Unit Tests</h2>

<ul>
<li>You are lacking a clear specification for your methods. We have to guess what these methods do exactly, specially for edge cases.</li>
<li>You should provide unit tests when providing an API class. You would have found some bugs if you did.</li>
</ul>

<h2>Review</h2>

<blockquote>
<pre><code> @head.setter
    def head(self, node):
        if node is not None:
            self.__head = node
</code></pre>
</blockquote>

<p>There is no link from the new head to the previous one. Also, what would you do if node.next is already filled?</p>

<pre><code> @head.setter
    def head(self, node):
        if node is not None:
            node.next = self.__head
            self.__head = node
</code></pre>

<hr>

<blockquote>
<pre><code>@tail.setter
    def tail(self, node):
        if node is not None:
            try:
                if node.next is None:
                    self.__tail.next = node
                    self.__tail = self.__tail.next
            except AttributeError:
                self.__tail = node
</code></pre>
</blockquote>

<p>Why would you expect an <code>AttributeError</code> here? You are only setting <code>next</code>. And why would you ignore a tail that has a next node? Why not include the tail chain?</p>

<hr>

<blockquote>
<pre><code>''' generator for nodes '''
''' iterating, search etc. '''
def node_generator(self, target=None):
    node = self.head
    yield node
    while node.next is not None and node.next.key != target:
        node = node.next
        yield node
</code></pre>
</blockquote>

<p>The spec is unclear here. You always include the head, and then continue as long as a next node's <code>key</code> does not match the specified <code>target</code>. Why not check head for the same condition?</p>

<hr>

<blockquote>
<pre><code>def delete(self, target):
    for node in self.node_generator(target):
        pass
    node.next = node.next.next
    self.length -= 1
</code></pre>
</blockquote>

<p>What if the node you want to delete is the tail? This edge case is not foreseen.</p>
    </div>