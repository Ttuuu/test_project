<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>First</h2>
<blockquote>
<p>but without forEach not able to return a value i'm struggling for a succinct solution.</p>
</blockquote>
<p>Addressing this in your post, in the future it may help to know you can use the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" rel="nofollow noreferrer">.map() function</a>, which <em>does</em> return values to an array, unlike <code>forEach()</code></p>
<p>an example using .map() and what you have:
</p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const config = {"levels": {"first": ["a", "b", "c"], "second": ["d", "e", "f"]}};
const accessor = config.levels

let combine = Object.keys(accessor).map(key=&gt;{return accessor[key]});
let levels = [].concat.apply([], combine);

console.log(levels);
// levels == ["a", "b", "c", "d", "e", "f"]</code></pre>
</div>
</div>

<h2>More Succinct Solution</h2>
<p>That said, something like this may be what you're looking for:</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const config = {"levels": {"first": ["a", "b", "c"], "second": ["d", "e", "f"]}};
const accessor = config.levels

const combine = Array.prototype.concat(...Object.values(accessor));
console.log(combine)</code></pre>
</div>
</div>

<p>NOTE 1: Accessor is pulled out in case it needs to change, but is not necessary</p>
    </div>