<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>keeping separate actions on a different line and tabbing your code will go a long way with making your code readable.</li>
<li>avoid declaring single-use variables </li>
<li>I don't see <code>$brand_string</code> being used, so that declaration can be omitted.</li>
<li>I do not prefer the <code>endforeach</code> syntax.  Despite being declarative, I find it unnecessarily verbose.  Good tabbing is always enough to help me track the nesting of control structures and functions.</li>
<li>move all inline styling to an external stylesheet.  Using meaningful class names to assign appropriate colors is most logical here.</li>
<li>I expect all <code>&lt;div&gt;</code> tags are <code>display: block;</code> by default -- I doubt this style declaration is necessary.</li>
<li>use a lookup array to swiftly translate <code>$term-&gt;name</code> values into <code>class</code> attribute values and eliminate the mostly redundant <code>if</code> blocks.</li>
<li>don't declare <code>$key</code> if you never intend to use it.</li>
<li>filter the variations array based on the lowercase value of <code>$term-&gt;name</code> and use a conditional <code>break</code> for best efficiency.  I am confidently assuming that there will only be one match in your variations array based on the trailing <code>&lt;/div&gt;</code></li>
<li>your list item should be nested inside of a list tag (e.g. <code>&lt;ul&gt;</code>)</li>
<li>remove the <code>&lt;span&gt;</code> tags -- they are unnecessary markup.  If you need to style the list items, style the <code>&lt;li&gt;</code> tags</li>
<li>if you must have your data processing in the same script as your content outputting, then I recommend doing your processing first, then keeping your markup readable by referencing the generated variables</li>
</ul>

<p>Code:</p>

<pre><code>$colorClasses = [
    'Roze' =&gt; 'roze-kleur',
    'Grijs' =&gt; 'grijze-kleur',
];
foreach (get_the_terms($post, 'pa_kleur') as $term) {
    $lowerColor = lcfirst($term-&gt;name);
    $colorUrl = 'you_decide_the_url';
    foreach ($product-&gt;get_available_variations() as $row) {
        if ($row['attributes']['attribute_pa_kleur'] === $lowerColor) {
            $colorUrl = $value['image']['url'];
            break;
        }
    }

    echo '&lt;div&gt;
              &lt;div class="' , ($colorClasses[$term-&gt;name] ?? 'default-kleur') , '"&gt;&lt;/div&gt;
              &lt;ul&gt;&lt;li&gt;' , $colorUrl , '&lt;/li&gt;&lt;/ul&gt;
          &lt;/div&gt;';
 }
</code></pre>
    </div>