<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I am trying to understand what aspect of my code could be made more efficient and faster.</p>
</blockquote>

<p>First, the low hanging fruits...</p>

<ul>
<li><p>You unnecessarily copy the sequence of integers when passing it to <code>findBound</code>:</p>

<pre><code>int findBound(vector&lt;int&gt; a, int b, bool lower)
</code></pre>

<p>should be</p>

<pre><code>int findBound(const vector&lt;int&gt;&amp; a, int b, bool lower)
</code></pre></li>
<li><p>You dispatch on the <code>bool lower</code> flag in every iteration of the main <code>while</code>-loop:</p>

<pre><code>if(lower) {
   /* ... */
} else {
   /* ... */
}
</code></pre>

<p>Consider implementing two separate functions for the starting and one for the end index of the range.</p></li>
<li><p>In one of the <code>if</code>-conditions in the middle of the main loop, you compute <code>a.size() - 1</code>. This could be done once at the top of the function and bound to a <code>const</code>-qualified variable. No need to evaluate this in every iteration.</p></li>
</ul>

<p>Now, the crucial step...</p>

<ul>
<li><p>You are doing unnecessary work when comparing values. The very first <code>if</code>-condition,</p>

<pre><code>if(a[mid]==b) { // ...
</code></pre>

<p>tests for the branch with the least likelihood. Instead, check for <code>a[mid] &lt; b</code> and <strong>nothing more</strong>. If you're wondering how this can be sufficient, check out this part of <a href="https://www.youtube.com/watch?v=iwJpxWHuZQY#t=28m12s" rel="noreferrer">Sean Parent's Pacific C++ talk</a> from 2018.</p></li>
</ul>
    </div>