<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I hate the name, but don't have a better one so I'll leave that for another answer.</p>

<p>Here's what I do have though: why not make it <em>more</em> generic?</p>

<p>I'm looking at this function:</p>

<pre><code>fun next(element: T) {
    val value = valueFunction(element)
    if (value &gt; bestValue) {
        bestValue = value
        bestElements = mutableListOf(element)
    } else if (value &gt;= bestValue) {
        bestElements.add(element)
    }
}
</code></pre>

<p>Why not make a <code>isBetterThanFunction: (T, T) -&gt; Boolean</code> and <code>isEqualToFunction: (T, T) -&gt; Boolean</code>. Then, you can support a wider array of items, and you don't need <code>valueFunction</code>.</p>

<pre><code>class Best&lt;T&gt;(private val isBetterThanFunction: (T, T) -&gt; Boolean, private val isEqualToFunction: (T, T) -&gt; Boolean) {

    private var bestValue: ...
    private var bestElements: MutableList&lt;T&gt; = mutableListOf()

    fun next(element: T) {
        if (isBetterThanFunction(element, bestValue)) {
            bestValue = element
            bestElements = mutableListOf(element)
        } else if (isEqualToFunction(element, bestValue)) {
            bestElements.add(element)
        }
    }

    fun randomBest(): T = bestElements.random()
    fun getBest(): List&lt;T&gt; = bestElements.toList()
    fun firstBest(): T = bestElements.first()
    fun isBest(element: T): Boolean = bestElements.contains(element)
    fun getBestValue(): Double = bestValue

}
</code></pre>

<p>To me, it makes things more clear. I'm no longer inferring what you mean with <code>(T) -&gt; Double</code>. How is that weighted? Well, now <em>I</em> make that decision.</p>

<p>Why does this matter? What if I defined <code>best</code> as "shortest"? With your version, I have to get clever about it and probably negate the value or something. With this version, <em>I</em> pick how that works.</p>
    </div>