<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>pandas</code> has a good fast (compiled) <code>csv</code> reader (may be more than one)</p>

<pre><code>In [279]: df=pd.read_csv('cr152194.csv')
In [280]: df
Out[280]: 
        1         1      2.92
0       1         2     70.75
1       1         3     60.90
2       2         1     71.34
3       2         2      5.23
4       2         3     38.56
5       3         1     61.24
6       3         2     38.68
7       3         3      4.49
In [281]: df.info()
&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 8 entries, 0 to 7
Data columns (total 1 columns):
     1         1      2.92    8 non-null object
dtypes: object(1)
memory usage: 96.0+ bytes
</code></pre>

<p>Read its docs for more control options.  For example as I used it, it used the first row as labels, whereas it looks more like data.</p>

<p>This is better:</p>

<pre><code>In [294]: df=pd.read_csv('cr152194.csv', header=None)
In [295]: df
Out[295]: 
                            0
0       1         1      2.92
1       1         2     70.75
.....
</code></pre>

<p>On SO there are lots of questions about reading csv files.  I've mostly dealt with the ones that use <code>numpy</code> readers like <code>loadtxt</code> and <code>genfromtxt</code>.  Those written in Python and I can outline their behavior.  But to generate a DataFrame, using this <code>pd</code> function is simpler and faster.</p>

<p>Same load via <code>np.genfromtxt</code>:</p>

<pre><code>In [285]: data = np.genfromtxt('cr152194.csv', dtype=None)
In [286]: data
Out[286]: 
array([(1, 1, 2.92), (1, 2, 70.75), (1, 3, 60.9), (2, 1, 71.34),
       (2, 2, 5.23), (2, 3, 38.56), (3, 1, 61.24), (3, 2, 38.68),
       (3, 3, 4.49)], 
      dtype=[('f0', '&lt;i4'), ('f1', '&lt;i4'), ('f2', '&lt;f8')])
In [287]: pd.DataFrame(data)
Out[287]: 
   f0  f1     f2
0   1   1   2.92
1   1   2  70.75
2   1   3  60.90
3   2   1  71.34
4   2   2   5.23
5   2   3  38.56
6   3   1  61.24
7   3   2  38.68
8   3   3   4.49
</code></pre>

<p><code>genfromtxt</code> with <code>dtype=None</code> determines datatype from the first data row, and then uses that to convert all the other rows.  Note the <code>data.dtype</code>, which specifies which columns are integer and which are floats.</p>
    </div>