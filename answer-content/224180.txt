<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As a good practice to promote code reuse, the function should <code>return</code> a numeric result.  The <code>print()</code> should be done by the caller.</p>

<p>Constantly referring to <code>is_previous_vowel</code> is tedious. There are a couple of solutions you could use involving <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code></a>. In particular, <code>groupby()</code> and <code>zip_longest()</code> could be useful.</p>

<p>Ultimately, the simplest solution is to use a <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expression</a> to declare what you are looking for: one or more consecutive vowels (<code>'[aeiouy]+'</code>), but not an <code>e</code> at the end (<code>'(?!e$)</code>).</p>

<pre><code>import re

def count_syllables(word):
    return len(
        re.findall('(?!e$)[aeiouy]+', word, re.I) +
        re.findall('^[^aeiouy]*e$', word, re.I)
    )
</code></pre>
    </div>