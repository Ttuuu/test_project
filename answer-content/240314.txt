<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code solves the problem in a desired way, it is concise which is good.</p>
<h3>Some comments</h3>
<p>Your design limits the shifting to <code>k &gt; len(D) - 1</code>, if it is your intention, then it is perfect otherwise this could be solved by doing</p>
<pre class="lang-py prettyprint-override"><code>def shift_left(D, k):
    k = k % len(D) #the modulus makes k to be in the positive integer domain
    if (k &lt; 1):
        return
    x = D.delete_first()
    D.insert_last(x)
    #it could be done with a for and saves recursively comparing k each time
    shift_left(D, k-1)
</code></pre>
<h3>An alternative</h3>
<pre class="lang-py prettyprint-override"><code>def shift_left(D, k):
    k = k % len(D)
    if (k &lt; 1):
        return
    #avoids recursion, which saves recursive calls and passing parameters
    #(could be done using a while)
    for i in range(0,k)
        x = D.delete_first()
        D.insert_last(x)
</code></pre>
    </div>