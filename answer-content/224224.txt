<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From a short review;</p>

<ul>
<li><code>filtery</code>, <code>filterm</code> etc. are unfortunate names, just go for <code>filterYear</code>, <code>filterMonth</code>, etc. It would make the code so much more readable and parseable. At the very least it should follow lowerCamelCase -&gt; <code>filterY</code> and <code>filterM</code></li>
<li><p>This piece of code has been copy pasted a number times, a mortal sin in code review. Please have a function that can be called.</p>

<pre><code>    $("#myHTMLTable").append("&lt;tr align='middle'&gt;" +
      "&lt;td align='left'&gt;"+incarr[i][0]+"&lt;/td&gt;" +
      "&lt;td align='left'&gt;"+incarr[i][1]+"&lt;/td&gt;" +
      "&lt;td align='left'&gt;"+incarr[i][2]+"&lt;/td&gt;" +  //full filter
      "&lt;td align='left'&gt;"+incarr[i][3]+"&lt;/td&gt;" +
      "&lt;td align='left'&gt;"+incarr[i][4]+"&lt;/td&gt;" + 
      "&lt;td align='left'&gt;"+incarr[i][8]+"&lt;/td&gt;" +
     "&lt;/tr&gt;");  
</code></pre></li>
<li>Your code seems to assume that <code>incarr[i][6]</code> will always contain the year. If you had a yearColumn constant (with the value of 6), you would just access <code>incarr[i][yearColumn]</code>. If one day the year is another column, then you only need to update the <code>yearColumn</code> constant. Look up <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow noreferrer">'Dont Repeat Yourself'</a></li>
<li>Your code has about 8 lines of comment, of which 6 are the same copy pasted ones</li>
<li>Variables like "MONTH" should be constants defined up top</li>
<li>If you are using jQuery, then you might as well use more of the feature's, check out

<ul>
<li><a href="https://api.jquery.com/val/" rel="nofollow noreferrer">.val</a></li>
<li><a href="https://api.jquery.com/html/" rel="nofollow noreferrer">.html</a></li>
</ul></li>
<li>Accessing <code>incarr[i]</code> so many times is hard on the reader, and also is a bit taxing on the JavaScript engine. Why not assign that to a variable in the beginning of the loop?</li>
</ul>

<p>All in all, that would lead me to an (obviously untested) alternative that looks like this:</p>

<pre><code>function displaytable() {                               
    $("myHTMLTable").html("&lt;tr align='middle'&gt;" +
  "&lt;th align='left'&gt;"+"&lt;b&gt;Systems Affected&lt;/b&gt;"+"&lt;/th&gt;" +
  "&lt;th width= 5% align='left'&gt;"+"&lt;b&gt;Incident Date&lt;/b&gt;"+"&lt;/th&gt;" +                   
    "&lt;th align='left'&gt;"+"&lt;b&gt;Incident Number&lt;/b&gt;"+"&lt;/th&gt;" +
  "&lt;th align='left'&gt;"+"&lt;b&gt;Root Cause&lt;/b&gt;"+"&lt;/th&gt;" +
    "&lt;th align='left'&gt;"+"&lt;b&gt;Description&lt;/b&gt;"+"&lt;/th&gt;" + 
    "&lt;th width= 6% align='left'&gt;"+"&lt;b&gt;Attachments&lt;/b&gt;"+"&lt;/th&gt;" +                                         
  "&lt;/tr&gt;");                 

    var filterYear = $("#dropdownyear").val();
    var filterMonth = $("#dropdownmonth").val().toUpperCase();
    var filterSystem = $("#dropdownsystem").val().toUpperCase();
    var filterSeverity = $("#dropdownseverity").val().toUpperCase();                
    var yearColumn = 6;
    var monthColumn = 5;
    var systemColumn = 0;
    var severityColumn = 7;

    for (i = 0; i &lt; arri; i++){
      var incident = incarr[i];

      if(filterYear != "YEAR" &amp;&amp; incident[yearColumn] != filterYear)
        continue;

      if(filterMonth != "MONTH" &amp;&amp; incident[monthColumn] != filterMonth)
        continue;

      if(filterSystem != "SYSTEM" &amp;&amp; incident[systemColumn] != filterSystem)
        continue;

      if(filterSeverity != "SEVERITY" &amp;&amp; incident[severityColumn] != filterSeverity)
        continue;

      $("#myHTMLTable").append("&lt;tr align='middle'&gt;" +
                "&lt;td align='left'&gt;" + incident[0] + "&lt;/td&gt;" +
                "&lt;td align='left'&gt;" + incident[1] + "&lt;/td&gt;" +
                "&lt;td align='left'&gt;" + incident[2] + "&lt;/td&gt;" +  //full filter
                "&lt;td align='left'&gt;" + incident[3] + "&lt;/td&gt;" +
                "&lt;td align='left'&gt;" + incident[4] + "&lt;/td&gt;" + 
            "&lt;td align='left'&gt;" + incident[8] + "&lt;/td&gt;" +
            "&lt;/tr&gt;");                       
    }                           
}
</code></pre>
    </div>