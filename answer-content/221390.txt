<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is a potential issue when providing an argument to a method that would only be used in a certain condition. <code>defaultValue</code> is only returned when the dictionary does not contain an instance of <code>TValue</code> for the given <code>key</code>.</p>

<ul>
<li>What if the default value is the result of an exhaustive algorithm or a service call? It would be a pitty to fetch this object when <code>GetValueOrDefault</code> would not require it.</li>
</ul>

<blockquote>
<pre><code>public static TValue GetValueOrDefault&lt;TKey, TValue&gt;(
   this Dictionary&lt;TKey, TValue&gt; dictionary, TKey key, TValue defaultValue = default(TValue))
{
    TValue value;
    return dictionary.TryGetValue(key, out value) ? value : defaultValue;
}
</code></pre>
</blockquote>

<p>For this reason, I suggest an alteration to the method signature and a convenience overload for the initial situation. (Edited after remark below)</p>

<pre><code>public static TValue GetValueOrDefault&lt;TKey, TValue&gt;(
   this Dictionary&lt;TKey, TValue&gt; dictionary, TKey key, Func&lt;TValue&gt; defaultValueSelector)
{
    // arg checking left out for brevity
    TValue value;
    return dictionary.TryGetValue(key, out value) ? value 
       : defaultValueSelector != null ? defaultValueSelector() : default(TValue);
}

public static TValue GetValueOrDefault&lt;TKey, TValue&gt;(
   this Dictionary&lt;TKey, TValue&gt; dictionary, TKey key, TValue defaultValue = default(TValue))
{
     return GetValueOrDefault(dictionary, key, () =&gt; defaultValue);
}
</code></pre>
    </div>