<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Python has a built-in <a href="https://docs.python.org/3/library/functions.html#sorted" rel="noreferrer"><code>sorted</code></a> function, you should use it. What it needs to sort according to some special criteria is a <code>key</code> function:</p>

<pre><code>def max_digit_diff(n):
    n_str = str(n)
    return int(max(n_str)) - int(min(n_str))
</code></pre>

<p>This uses the fact that <code>"0" &lt; "1" &lt; ... &lt; "9"</code>.</p>

<p>However, the <code>sorted</code> function uses a stable sorting algorithm, so if two elements compare equal, the original order is preserved. But here we want the opposite order (later elements come first), so we just reverse the list first:</p>

<pre><code>def digit_difference_sort(a):
    return sorted(reversed(a), key=max_digit_diff)
</code></pre>

<p>This should be vastly easier to read than your convoluted function. Note that the function names also follow Python's official style-guide, <a href="https://www.python.org/dev/peps/pep-0008/" rel="noreferrer">PEP8</a>.</p>

<p>Like all (good) sorting functions, this is <span class="math-container">\$\mathcal{O}(n \log n)\$</span>. Here is a timing comparison to your function with arrays up to length 10k (at which point your function takes more than a minute...).</p>

<p><a href="https://i.stack.imgur.com/L2ydw.png" rel="noreferrer"><img src="https://i.stack.imgur.com/L2ydw.png" alt="enter image description here"></a></p>

<hr>

<p>Here is an implementation of the radix sort suggested by <a href="https://codereview.stackexchange.com/users/121394/jollyjoker">@JollyJoker</a> in <a href="https://codereview.stackexchange.com/a/215197/98493">their answer</a>:</p>

<pre><code>from itertools import chain

def radix_sort(a):
    sub_a = [[] for _ in range(10)]
    for x in a:
        sub_a[max_digit_diff(x)].append(x)
    return list(chain.from_iterable(reversed(x) for x in sub_a))
</code></pre>

<p>This seems to have the same complexity as my approach, probably the implementation of <code>max_digit_diff</code> actually dominates this:</p>

<p><a href="https://i.stack.imgur.com/ipPV2.png" rel="noreferrer"><img src="https://i.stack.imgur.com/ipPV2.png" alt="enter image description here"></a></p>
    </div>