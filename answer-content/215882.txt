<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I decided to make a more efficient solution to a Google interview question</p>
</blockquote>

<p>The purpose of such interview questions is to get signal as to whether you understand asymptotic efficiency or not; your answer indicates you do not. It will also be looking for signal as to whether you understand the asymptotic performance characteristics of various data structures.</p>

<p><code>sort</code> is O(n lg n) time complexity in the typical case, but <code>max</code> and <code>min</code> can be implemented in O(n) time complexity; whether you can recognize that or not, and write the code accordingly, is the test.</p>

<blockquote>
  <p>I believe it is more efficient because you can use my method to find any nth lowest value in the array so it solves for all cases.</p>
</blockquote>

<p>That's not the sort of "efficiency" they're looking for. The question they're asking is not "<em>can you solve a more general problem, and therefore be more efficient in terms of lines of code written per problem solved?</em>"  The question they are asking is "<em>can you find the algorithm that makes more efficient use of machine resources?</em>".</p>

<p>If you wanted to use this solution in a Google-style interview and impress the interviewers, what you need to do is to make the argument that your sorting solution is more efficient in terms of <em>amortized</em> costs.</p>

<p><strong>Exercise</strong>: under what circumstances is the amortized cost of the "least n" query on an arbitrary unsorted array lower if you spend the time sorting the array once?</p>

<blockquote>
  <p>Please let me know if there is anything I can do to improve this solution</p>
</blockquote>

<p>Google-style interviewers will be looking <em>primarily</em> for signal as to whether you can write <em>correct</em> code, and provide <em>test cases</em> and <em>logical arguments</em> that demonstrate its correctness. Summing up:</p>

<ul>
<li>You haven't found a correct solution.</li>
<li>You haven't made any argument for correctness.</li>
<li>You have provided a single test case.</li>
<li>You haven't found the asymptotically efficient solution.</li>
</ul>

<p>This would be an easy "no hire" for a Google interviewer.</p>

<p>So, this gives you some things to concentrate on:</p>

<ul>
<li>Solve the problem that was posed; if you feel the need to solve a more general problem, say why.</li>
<li>Have a good working understanding of asymptotic performance; I do not expect candidates to be able to rattle off the Master Theorem (I have had a grand total of one candidate in 20 years do so, and they did it wrong) but I do expect candidates to be able to tell me if an algorithm is sublinear, linear, superlinear, quadratic, exponential, and so on.</li>
<li>Follow good coding practices: don't mutate your inputs, for example.</li>
<li>Create a correct solution.</li>
<li>Make a cogent, clear, correct argument that explains why your solution is correct.</li>
<li>Provide test cases that convince the interviewer that you've thought about ways your algorithm could go wrong.</li>
</ul>
    </div>