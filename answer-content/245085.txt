<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From a quick review;</p>
<ul>
<li><p>You could host your templates as separate HTML files, retrievable with a <code>fetch</code></p>
<ul>
<li>You would have the overhead of extra http calls</li>
<li>HTML tooling might be worse for HTML templates/snippets</li>
</ul>
</li>
<li><p>I agree with your boss, html code does not belong in a database</p>
</li>
<li><p><code>template</code> should be <code>const</code></p>
<pre><code>  let template = document.getElementById("vacancyTemplate").innerHTML;
  for (const vacancy of vacancies) {
      let t = template;
</code></pre>
</li>
<li><p>You could consider a less manual approach to filling in the values</p>
<pre><code>function fillOutTemplate(t, object){
    Object.keys(object).forEach(key =&gt; t = t.replace(new RegExp(key, 'g'), object[key]) );
    return t; 
}
</code></pre>
<p>and calling <code>t = fillOutTemplate(t, Vacancy);</code> could save a ton of coding once you harmonize the Vacancy properties and the template.</p>
</li>
<li><p>It looks odd that not finding entries return the message <code>"Non-static method requires a target."</code>, it makes the hacker in me find out that this is most likely a LINQ error and wonder if I can pass different parameters to abuse this knowledge</p>
</li>
<li><p>You create 3 'a' link tags from scratch, consider a helper routine for this.</p>
</li>
<li><p>I know someone else runs with the styling, but that inline styling is rough though..</p>
</li>
</ul>
    </div>