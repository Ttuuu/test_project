<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Inconsistent UX</h3>

<p>Most validation errors call <code>setError</code> of the relevant input field.
An exception is when the confirmation password doesn't match the first entry,
that pops up a toast.
It would be better to handle validation errors consistently,
by using <code>setError</code> for mismatched confirmation password.</p>

<p>It's ok to use a toast for the result of the registration,
when all form fields are valid.</p>

<h3>Creating account with invalid input</h3>

<p>Before calling <code>mAuth.createUserWithEmailAndPassword</code>,
the only validation that's really enforced is that the confirmation password is not empty.
That's strange.
It would be better to call this only when all entries of the form are filled and valid.</p>

<h3>Style issues</h3>

<p>A convention in Java is to use <code>camelCase</code> for variable names.
For example <code>RegisterConfirmPassword</code> should be <code>registerConfirmPassword</code>.</p>

<p>Instead of <code>if (a == false) {</code> it's more natural to write <code>if (!a) {</code>.</p>

<p>It's a convention in Java to place braces like this:</p>

<pre><code>if (cond) {
    // ...
} else {
    // ...
}
</code></pre>
    </div>