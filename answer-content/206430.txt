<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you need people to review your code you have to give a complete bunch of working code. 
Here, we can only make assumptions about how what you show interoperate with what you don't show.</p>

<p>Your <code>movementDirection..x</code> and <code>movementDirection..y</code> can only be <code>-1</code>, <code>0</code>, <code>1</code>. Correct?
So, why using <code>float</code>s instead of <code>int</code>s ? Or even better, an <code>enum</code>, per example:</p>

<pre><code>enum Movement
{
    Backward = -1,
    None = 0,
    Forward = 1      
};
</code></pre>

<p>You only need flipping sprite if movements are negatives (for each axis). That's right?</p>

<p>Why just don't test for backwarding movement and set <code>flipX</code> to false otherwise (same for Y).</p>

<pre><code>void Update()
{   
    flipX = (movementDirection.x == Movement.Backward);
    flipY = (movementDirection.y == Movement.Backward);

    spriteRenderer.flipX = flipX;
    spriteRenderer.flipY = flipY;
}
</code></pre>

<p><strong>Edit:</strong>
That's in case of neutral fixed states (Movement.None never flipped).
If when no movement you want to keep the last flipped states you still want two statement by axis.</p>

<pre><code>void Update()
{   
    if  (movementDirection.x != Movement.None)
        flipX = (movementDirection.x == Movement.Backward);
    if  (movementDirection.y != Movement.None)
        flipY = (movementDirection.y == Movement.Backward);

    spriteRenderer.flipX = flipX;
    spriteRenderer.flipY = flipY;
}
</code></pre>

<p><strong>Edit 2:</strong></p>

<p>For completeness, if you really want to minimize statements, you can use Convert, but i dont think it will improve performances :</p>

<pre><code>void Update()
{   
    if  (movementDirection.x != Movement.None)
        flipX = Convert.ToBoolean(movementDirection.x - 1);
    if  (movementDirection.y != Movement.None)
        flipY = Convert.ToBoolean(movementDirection.y - 1);

    spriteRenderer.flipX = flipX;
    spriteRenderer.flipY = flipY;
}
</code></pre>
    </div>