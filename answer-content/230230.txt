<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have asked that you provide more code, and I hope that you do.</p>

<p>Until then, I suggest you have a look at the <a href="https://python-3-patterns-idioms-test.readthedocs.io/en/latest/Visitor.html" rel="nofollow noreferrer"><em>Visitor Pattern</em></a> and its implementation using <em>multiple dispatch</em>.</p>

<p>You have a lightning attack. You are applying certain effects, including some effects that are common to all attacks. </p>

<p>You have not yet reached the point where some defenders will be immune to lightning, or take reduced damage, or immune to stun, but you will.</p>

<p>It makes more sense to <a href="https://www.martinfowler.com/bliki/TellDontAsk.html" rel="nofollow noreferrer"><em>Tell, don't Ask</em></a> in thise situation. You tell the defender that they were attacked by lightning, and let the defender handle things. </p>

<p>The default behavior would be substantially what you have shown. But you could then create a defender subclass that was immune to lightning, or suffered reduced damage, and the logic would be located <em>with that particular defender,</em> which improves your code organization and maintainability.</p>

<p>Beyond that, since your defender seems to be a class already (based on the code you have shown), it should be easy to encode the "standard attack checks" into the base class in a single method. You can then raise an exception or return a sentinel value to indicate that the attack is blocked due to stun or confusion, or just print out the results (not recommended).</p>
    </div>