<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>minor  </p>

<pre><code>static bool isPrime(long n)
{
    if (n &lt; 2)      return false;
    if (n &lt;= 3)     return true;
    if (n % 2 == 0) return false;
</code></pre>

<p>this is wrong  </p>

<pre><code>for (long i = 2; i &lt;= Math.Floor(Math.Sqrt(n)); ++i)
</code></pre>

<p>you should be starting on 5 and skipping by 2 </p>

<p>see <a href="https://en.wikipedia.org/wiki/Primality_test" rel="nofollow">wiki</a></p>

<pre><code>function is_prime(n : integer)
if n ≤ 1
    return false
else if n ≤ 3
    return true
else if n mod 2 = 0 or n mod 3 = 0
    return false
let i ← 5
while i×i ≤ n
    if n mod i = 0 or n mod (i + 2) = 0
        return false
    i ← i + 6
return true;
</code></pre>

<p>I identified the problem to Denis of even number fails in a comment but he declined to make a simple fix to his answer.<br>
Solution:</p>

<pre><code>long num = 600851475143;
long sqrt = (int)Math.Sqrt(num);
long count = 2;
while (num &gt; 1)
{
    if (num % count == 0)
        num /= count;
    else
    {
        count ++;
        if(count % 2 == 0)
            count ++;
        if(count &gt; 3 &amp;&amp; count % 3 == 0)
            count += 2;
        if (count &gt; sqrt)
        {
            Console.WriteLine("number is prime ignore following line");
            break; // num is a prime
        }
    }
}
Console.WriteLine("The largest prime factor of the number {0} is {1} ", num, count);
Console.ReadLine();
</code></pre>
    </div>