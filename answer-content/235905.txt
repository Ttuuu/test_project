<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As has been pointed out by @Joop Eggen, you should decide if <code>Node</code> is part of the interface or not.  As it stands, you can directly access the value of <code>head</code> and <code>tail</code> via the accessors (<code>getHead</code>,<code>getTail</code>), however you can't get at any of the other values in the other values you've stored in the <code>LinkedList</code> unless you happen to have kept track of the <code>Node</code> that you inserted into it.  Try writing <code>printList</code> in a client class for your linked list.</p>

<pre><code>  public void setNext(Node next){
  public Node nextNode(){
</code></pre>

<p>These methods represent a property, so they'd usually be named consistently, i.e. <code>getNext</code>, <code>setNext</code>.  However, if you go down the route of making <code>Node</code> an internal class, I'd get rid of them altogether and directly access the fields.</p>

<p>It's also worth mentioning that at the moment, even though the list stores integers, you can't safely store -1 in it because you're using this as an error value when returning head/tail for an empty list.  It'd be better to throw an exception in such a situation, or return an <code>Optional&lt;Integer&gt;</code>.</p>
    </div>