<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Possible Bugs</strong><br>
In <code>main()</code> there is an assignment from a fuction that returns long long (factorial) to an integer variable (fact). This may result in errors depending on the word size of int. One of the possibilities is a positive long long value can be converted to a negative integer. Since there is a comparison between the variable <code>fact</code> and another long long value (the loop control variable <code>i</code>) it would be better if <code>fact</code> was declared as long long.</p>

<p><strong>Reducing Verbosity</strong><br>
To reduce the verbosity it might be better to move the functions <code>swap</code>, <code>mobile</code>, <code>printArray</code> and <code>factorial</code> before the function <code>permute</code> and delete all the function prototypes.</p>

<p>The variable names <code>bigInd</code> and <code>bigNum</code> can be confusing it based on the comments and to remove the need for the comments perhaps bigInd could renamed <code>indexLargestMobileNumber</code> and <code>bigNum</code> could be renamed <code>largestMobileNumber</code>. I initialy confused bigInd with big Endian. It is also not clear why <code>dir</code> and <code>res</code> are named <code>dir</code> and <code>res</code>.</p>

<p><strong>Array Memory Allocation</strong><br>
When allocation memory for arrays in the C programming language it might be better to use <code>calloc(size_t SIZE_OF_ARRAY, size_t SIZE_OF_ELEMENT);</code> for 2 reasons, the first is it is obvious that array is being allocated, and the second is that calloc() zeros out all the elements of the array. This means that in the function <code>permute</code> this for loop would not be necessary</p>

<pre><code>for (int i = 0; i &lt; n; i++) {
    dir[i] = LEFT;
}
</code></pre>

<p>The <code>calloc()</code> function will perform better than the preceeding for loop. If the code continues to use <code>malloc()</code> rather than calloc it might be better to use <code>memset()</code> since this will also out perform the previous for loop.</p>

<p><strong>Complexity</strong><br>
The function <code>permute()</code> is complex and it may be better to break it down into sub-functions where some of the code my be reusable. </p>
    </div>