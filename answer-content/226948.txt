<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code isn't unreasonable. There are ways to clean it up, though.</p>

<h2>Functions</h2>

<p>Organize your code into sub-routines - perhaps one to load categories from your spreadsheet, one to write information to your database, etc.</p>

<h2>Magic numbers</h2>

<p>Numbers like 26, 27, 19, etc. should be assigned to constants, to make the code easier to understand.</p>

<h2>Ineffectual commit</h2>

<p>The last line of your code is a commit after no operation. Perhaps this is just an indentation error and you meant to commit after your <code>execute</code>.</p>

<p>Delete the commit before it in the <code>else</code>. More broadly, you may want to consider reducing the number of commits in your code, maybe even to one at the end. This depends on a number of things, including how you want to deal with errors and whether they effect validity of the data as a whole, as well as performance.</p>

<p>Finally, have a read through <a href="https://dev.mysql.com/doc/connector-python/en/connector-python-api-mysqlconnection-autocommit.html" rel="nofollow noreferrer">https://dev.mysql.com/doc/connector-python/en/connector-python-api-mysqlconnection-autocommit.html</a> . The way you're using commits now, you're better off just turning on autocommit.</p>

<h2>Combined inserts</h2>

<p>Your <code>insert into member_project</code> is inefficient. You should not insert in a loop. Read <a href="https://dev.mysql.com/doc/connector-python/en/connector-python-api-mysqlcursor-executemany.html" rel="nofollow noreferrer">https://dev.mysql.com/doc/connector-python/en/connector-python-api-mysqlcursor-executemany.html</a></p>

<h2>Add a prompt to your input()</h2>

<p>Otherwise, the user doesn't know why the program has suddenly hung.</p>
    </div>