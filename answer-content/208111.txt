<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Instead of splitting the data into a separate variables by column, you could convert each JSON object into a flat dictionary using a function similar to this</p>

<pre><code>def course_dict(item):
    return {'Course Title': item['title'],
            'Vendor': item['vendors'][0]['display'] if item['vendors'] else None,
            # and so on
            }
</code></pre>

<p>and construct the dataframe using</p>

<pre><code>data = response.json()
df = pd.DataFrame([course_dict(item) for item in data])
</code></pre>

<p>Keeping related data together makes the code easier to follow. Also, since your final output is a csv file, you could skip the dataframe and use <code>csv.DictWriter</code> instead.</p>

<blockquote>
  <p>I am not sure what the usual placeholder value is for missing string values in Python.</p>
</blockquote>

<p><code>None</code> is the usual placeholder for missing values of any type.</p>
    </div>