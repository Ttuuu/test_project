<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let's first check what your code is doing repeatedly</p>

<ul>
<li>Read the json file and fill a <code>List&lt;Employee&gt;</code>  </li>
<li>Filter this list by checking the <code>GetTaxForm</code> property of the employee which by the way is a bad name for a property, just <code>TaxForm</code> would be better <strong>or</strong> return all employees  </li>
<li>Display the resulting <code>List&lt;Employee&gt;</code> in a <code>DataGridView</code>  </li>
</ul>

<p>Now let us check what your code isn't doing  </p>

<ul>
<li>It doesn't change the json file  </li>
</ul>

<hr>

<p><strong>Improvements</strong></p>

<ul>
<li><p>I suggest reading the json-file only once and fill a <code>List&lt;Employee&gt;</code> which you filter if needed by the desired property.  </p></li>
<li><p>Having a method <code>DisplayEmployees()</code> or like <a href="https://codereview.stackexchange.com/a/208040/29371">@user2156791 stated in his/her answer</a> <code>FillEmployeeDataGrid()</code> (but I would pass an <code>IEnumerable&lt;Employee&gt;</code> as the method argument).</p></li>
</ul>

<hr>

<p>This  </p>

<blockquote>
<pre><code>//Method to determine developer type
string typeName;
public string SetDevType(int id)
{
    if (id == 1)
    {
        typeName = "Object-Oriented";
    }
    else if (id == 2)
    {
        typeName = "Scripts";
    }
    else { typeName = "Unknown"; }
    return typeName;
}  
</code></pre>
</blockquote>

<p>looks strange in many ways. The method is called <code>SetXX()</code> but is <strong>getting</strong> a value.  The class level field <code>typeName</code> is only used in this method so why is it a class level field ?  </p>

<p>Why do you have <code>public double AnnualPay(double amount) =&gt; 12 * amount;</code> inside the <code>Employee_Pay_Form</code> class ? Why don't you use the Â´AnnualPay()<code>from the</code>Employee` class ?  </p>

<hr>

<p>Implementing the mentioned points will lead to  </p>

<pre><code>private static List&lt;Employee&gt; LoadEmployees(string fileName)
{
    if (string.IsNullOrWhiteSpace(fileName))
    {
        return new List&lt;Employee&gt;();
    }
    string content = File.ReadAllText("JSON.json");
    return JsonConvert.DeserializeObject&lt;List&lt;Employee&gt;&gt;(content );
}
</code></pre>

<p>which is called once at startup and stored in a class-level field <code>List&lt;Employee&gt; eployees</code>.  </p>

<pre><code>private void DisplayEmployees(IEnumerable&lt;Employee&gt; avaibleEmployees)
{
    EmployeeDataGridView.Rows.Clear();

    foreach (var employee in avaibleEmployees)
    {
        string[] row = 
        { 
            employee.Name, 
            employee.Zip, 
            employee.Age.ToString(), 
            string.Format("{0:C}", employee.Pay),
            employee.DepartmentId.ToString(), 
            employee.FetchDevType(employee.DepartmentId),
            string.Format("{0:C}", employee.CalculateTax(emp.Pay)),
            string.Format("{0:C}", employee.AnnualPay(emp.Pay) - employee.CalculateTax(emp.Pay))
        };
        EmployeeDataGridView.Rows.Add(row);
    }
}
</code></pre>

<p>where <code>FetchDevType()</code> looks like so  </p>

<pre><code>public string FetchDevType(int departmentId)
{
    switch (departmentId)
    {
        case 1:
            return "Object-Oriented";
        case 2:
            return "Scripts";
        default:
            return "Unknown";
    }
}
</code></pre>

<p>and should be placed inside the <code>Employee</code> class.</p>

<pre><code>private IEnumerable&lt;Employee&gt; FilterByTaxForm(string desiredTaxForm)
{
    return from employee in employees
                    where employoee.TaxForm == desiredTaxForm
                    select employee;
}  
</code></pre>

<p>which is called where you need to filter the eployees like e.g so  </p>

<pre><code>private void ContractEmployeeButton_Click(object sender, EventArgs e)
{
    DisplayEmployees(FilterByTaxForm("1099"));
}
</code></pre>
    </div>