<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Is the implementation complete?</strong></p>

<p>From the manual pages of strcmp()</p>

<blockquote>
  <p>The strcmp() and strncmp() functions return an integer less than,
  equal    to, or greater than zero if s1 (or the first n bytes thereof)
  is found,    respectively, to be less than, to match, or be greater
  than s2.</p>
</blockquote>

<p>Now if we take your strcmp function we have</p>

<pre><code>strcmp:
    mov ecx,0
    strcmp_loop:
        mov byte dl,[eax+ecx]
        mov byte dh,[ebx+ecx]
        inc ecx
        cmp dl,0
        je strcmp_end_0
        cmp byte dl,dh
        je strcmp_loop
        jl strcmp_end_1
        jg strcmp_end_2
    strcmp_end_0:
        cmp dh,0
        jne strcmp_end_1
        xor ecx,ecx
        ret
    strcmp_end_1:
        mov ecx,1
        ret
    strcmp_end_2:
        mov ecx,-1
        ret
</code></pre>

<p>The first string goes to eax and the second to ebx. When eax is shorter than ebx, the null byte of eax is read first so. <code>cmp dl,0</code> is going to be true first. Therefore, it jumps to strcmp_end_0. At strcmp_end_0 if ebx has got any other byte than 0, the function returns 1. But if string in eax is smaller than ebx, it should return an integer less than 0.</p>

<p>Also suppose the strings were:</p>

<p><code>eax=[0x03,0x03,0x04,0x00]</code> 
and 
<code>ebx=[0x03,0x03,0x03,0x00]</code></p>

<p><code>cmp byte dl,dh</code> at the third byte is +ve. Therefore,after <code>jg strcmp_end_2</code> the function returns -1. Shouldn't it return 1 since eax&gt;ebx?</p>

<p>A simple fix would be to move eax to dh and ebx to dl.</p>
    </div>