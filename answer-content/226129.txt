<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I actually just recently did something like this for a coding challenge.</p>

<p>I chose to create two separate classes. One is a reader class that reads from files and feeds data to a Grid class. The Grid class then initializes itself with all of the possible combinations of words at the start. This then makes it nice and easy for finding words as it just needs to make a call to the "find" on a set. </p>

<p>If you wish to add an additional interface for this then I would add this as a separate class. This class would handle transforming user input into calls to the reader/writer class, which in turn makes calls to the Grid class. If your interface is simple enough (i.e. you only want to be able to input which text file should be read by the your reader/writer class) this can be just done in main() but a separate class is better if you want to make it portable in the future.</p>

<p>Now onto your code specifically, the biggest issue that I see with your implementation is that you have 8 separate functions that do more or less the exact same thing. You should try to abstract this out and have it all done within a single single method. I have an example within my Grid's <a href="https://github.com/ThomasKolarik/alphabet-soup/blob/master/Grid.cpp" rel="nofollow noreferrer">"GenerateWords" method</a>.</p>

<pre><code>    while (iss) {
        iss &gt;&gt; letter;
        temp_vec.push_back(letter);
    }
</code></pre>

<p>If you simply make your check,</p>

<pre><code>    while (iss &gt;&gt; letter) {
        temp_vec.push_back(letter);
    }
</code></pre>

<p>you will find that there is not "an extra" letter that is being added to the end.</p>
    </div>