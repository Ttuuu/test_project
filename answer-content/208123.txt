<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I can only add to Heslacher:</p>

<p>1) Your comments are almost all redundant in that they explain what is obvious. Use comments to explain the not so obvious - why the code does what it does for instance.</p>

<p>2) Brackets:</p>

<blockquote>
<pre><code>            foreach (var day in eventsInDay)
                if (day.Cor != calEvent.Cor) // Only set hasDifColor to True if it founds a different color
                {
                    hasDifColor = true;
                    break; // Break loop
                }
</code></pre>
</blockquote>

<p>this is possible but should be avoided. For a small loop like this, it is though easy to understand, but the larger the loops are, the more difficult it becomes to read. So always use curly brackets:</p>

<pre><code>foreach (var day in eventsInDay)
{
  if (day.Cor != calEvent.Cor) // Only set hasDifColor to True if it founds a different color
  {
    hasDifColor = true;
    break; // Break loop
  }
}
</code></pre>

<hr>

<p>Heslachers suggestion could be taken some steps further:</p>

<p>1)</p>

<pre><code>  foreach (var calEvent in CalEvents)
  {
    var eventsInDay = eventDao.Select(FromEventos.WhereDay, calEvent.DataDocumento);
    var cor = eventsInDay.Any(eid =&gt; eid.Cor != calEvent.Cor) ? MULTIPLE_EVENTS : calEvent.Cor;
    events.Add(new eventAndColor(calEvent.DataDocumento, cor));
  }
</code></pre>

<p>2)</p>

<p>or you could go all in on LINQ:</p>

<pre><code>  var groups = from calEvent in CalEvents
               group calEvent by
               eventDao
               .Select(FromEventos.WhereDay, calEvent.DataDocumento)
               .Any(day =&gt; day.Cor != calEvent.Cor) ? MULTIPLE_EVENTS : calEvent.Cor;

  events.AddRange(groups.SelectMany(group =&gt; group.Select(ce =&gt; new eventAndColor(ce.DataDocumento, group.Key))));
</code></pre>

<hr>

<p>A detail to consider:</p>

<p>You compare two strings in this way:</p>

<pre><code>day.Cor != calEvent.Cor
</code></pre>

<p>are you sure, that they always have the same case?
Consider using: </p>

<pre><code>string.Equals(day.Cor, calEvent.Cor, StringComparison.CurrentCultureIgnoreCase);
</code></pre>

<p>or one of the other <code>IgnoreCase</code> <code>StringComparison</code>s if case doesn't matter.</p>
    </div>