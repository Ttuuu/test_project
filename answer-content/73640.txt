<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Don't throw <code>Exception</code></p>

<blockquote>
<pre><code>throw new Exception("Need an equal count of xs and ys");
</code></pre>
</blockquote>

<p>It forces client code to catch any subclass of <code>Exception</code>. In this case I would throw an <code>ArgumentException</code>.</p>

<hr>

<p>The <code>continue</code> at the end of the last loop is redundant.</p>

<hr>

<p>Here you're using <code>double.Equals</code></p>

<pre><code>if (delta[i] == 0)
</code></pre>

<p>From <a href="http://msdn.microsoft.com/en-us/library/ya2zha7s%28v=vs.110%29.aspx" rel="nofollow">MSDN</a></p>

<blockquote>
  <p>The <code>Equals</code> method should be used with caution, because two apparently
  equivalent values can be unequal due to the differing precision of the
  two values.</p>
</blockquote>

<p>That link covers two techniques for dealing with this.</p>

<hr>

<p>As far as I can tell, <code>toFix</code> can be removed. For example,</p>

<blockquote>
<pre><code>var toFix = new List&lt;int&gt;();
for (int i = 1; i &lt; length - 1; i++)
{
    if ((delta[i] &gt; 0 &amp;&amp; delta[i - 1] &lt; 0) || (delta[i] &lt; 0 &amp;&amp; delta[i - 1] &gt; 0))
    {
        toFix.Add(i);
    }
}
foreach (var val in toFix)
{
    m[val] = 0;
}
</code></pre>
</blockquote>

<p>Can be rewritten as</p>

<pre><code>for (int i = 1; i &lt; length - 1; i++)
{
    if ((delta[i] &gt; 0 &amp;&amp; delta[i - 1] &lt; 0) || (delta[i] &lt; 0 &amp;&amp; delta[i - 1] &gt; 0))
    {
        m[i] = 0;
    }
}
</code></pre>
    </div>