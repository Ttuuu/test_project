<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><em>Note it is much easier to read if you chop up the comprehension into blocks, instead of having them all on one line</em></p>

<p>You could use unpacking to remove some usages of <code>line.split</code></p>

<pre><code>&gt;&gt;&gt; {
...    int(k): v
...    for line in data.split() 
...    for k, v in (line.split(':'),)
... }
{41: 'n', 43: 'n', 44: 'n', 46: 'n', 47: 'n', 49: 'n', 50: 'n', 51: 'n', 52: 'n', 53: 'n', 54: 'n', 55: 'cm', 56: 'n', 57: 'n', 58: 'n'}
</code></pre>

<p>Or if the first argument can be of <code>str</code> type you could use <code>dict()</code>.</p>

<p>This will unpack the <code>line.split</code> and convert them into a key, value pair for you</p>

<pre><code>&gt;&gt;&gt; dict(
...    line.split(':') 
...    for line in data.split() 
... )
{'41': 'n', '43': 'n', '44': 'n', '46': 'n', '47': 'n', '49': 'n', '50': 'n', '51': 'n', '52': 'n', '53': 'n', '54': 'n', '55': 'cm', '56': 'n', '57': 'n', '58': 'n'}
</code></pre>
    </div>