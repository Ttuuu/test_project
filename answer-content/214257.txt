<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Simplify with <code>case</code>, and eliminate a conditional</h3>

<p>Instead of this:</p>

<blockquote>
<pre><code>case "${number_argument}" in
    1 ) signal_human_friendly='HUP'  ;;
    2 ) signal_human_friendly='INT'  ;;
    3 ) signal_human_friendly='QUIT' ;;
    6 ) signal_human_friendly='ABRT' ;;
    15) signal_human_friendly='TERM' ;;
    * ) signal_human_friendly=''     ;;
esac

if [ "${signal_human_friendly}" = "" ]
then
    print_error_and_exit "..."
else
    # tidy up ...
fi
</code></pre>
</blockquote>

<p>I suggest to move the <code>print_error_and_exit</code> in the <code>case</code>,
and then you can eliminate the conditional that follows,
and "flatten" the code:</p>

<pre><code>case "${number_argument}" in
    1 ) signal_human_friendly='HUP'  ;;
    2 ) signal_human_friendly='INT'  ;;
    3 ) signal_human_friendly='QUIT' ;;
    6 ) signal_human_friendly='ABRT' ;;
    15) signal_human_friendly='TERM' ;;
    * ) print_error_and_exit "..." ;;
esac

# tidy up ...
</code></pre>

<h3>Eliminate a low-value conditional statement</h3>

<p>Instead of this:</p>

<blockquote>
<pre><code>[ -f "${script_one_instance_lockfile}" ] &amp;&amp; rm "${script_one_instance_lockfile}"
</code></pre>
</blockquote>

<p>Why not simply:</p>

<pre><code>rm -f "${script_one_instance_lockfile}"
</code></pre>

<h3>Sharpen error messages</h3>

<p>Instead of "Exactly one argument has not been passed! [...] Passed: ...",</p>

<p>I would write "Expected one argument. Received: ...".</p>
    </div>