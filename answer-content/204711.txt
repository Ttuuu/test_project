<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You should avoid statements on the same line as an <em>if</em>.<br>
So for example  </p>

<pre><code>if (len == 0)
    return true;
</code></pre>

<p>instead of  </p>

<pre><code>if (len == 0) return true;
</code></pre>

<p>Also, I find that the <code>(s.charAt(0) &lt; 65) || (s.charAt(0) &gt; 90)</code> are really hard to understand as they use magic numbers.</p>

<p>But, most importantly, are you sure your code is responding to all the cases ?</p>

<p>Let's create some unit test with JUnit and AssertJ :</p>

<pre><code>class TestTestString {
    @Test
    void isValidString_shouldAcceptSimpleWord() {
        assertThat(TestString.isValidString("Hello")).isTrue();
    }

    @Test
    void isValidString_shouldAcceptVeryLongWord() {
        assertThat(TestString.isValidString("Thisincrediblylongwordisylbidercnilongz")).isTrue();
    }

    @Test
    void isValidString_shouldAcceptSingleUppercaseString() {
        String[] values = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N" };
        for (String s : values) {
            assertThat(TestString.isValidString(s)).isTrue();
        }
    }

    @Test
    void isValidString_shouldAcceptStringWithDiacritics() {
        assertThat(TestString.isValidString("Résumé")).isTrue();
    }

    @Test
    void isValidString_shouldRefuseStringThatStartWithALowerCaseLetter() {
        assertThat(TestString.isValidString("apropos")).isFalse();
    }

}
</code></pre>

<p>Without much surprise, the <code>isValidString_shouldAcceptStringWithDiacritics</code> is failing... but so is the <code>isValidString_shouldAcceptVeryLongWord</code> because the <em>120</em> isn't the good number !<br>
Never forget to do some unit tests :) (you should also add some tests for numbers and special characters)</p>

<p>To conclude, if I were you, I'd get rid of the current test altogether and use the <em>Character</em> methods that are nicer lookings, namely <em>isUpperCase</em> and <em>isLowerCase</em> :</p>

<pre><code>public static boolean isValidString(final String s){
        int len = s.length();

        if (len == 0)
            return true;
        if (!Character.isUpperCase(s.charAt(0)))
            return false;
        for (int i = 1; i &lt; len; i++) {
            if (!Character.isLowerCase(s.charAt(i)))
                return false;
        }

        return true;
    }
</code></pre>

<p>Now, if you rerun the tests, they should be all green.</p>

<p>You can also use the same methods for your convert function ;)</p>
    </div>