<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The problem specs are ambiguous as to whether its 25 trips/350 km total, or per car. You should ask for clarification.</p>

<p>You can combine a lot of your numbers into a single data structure. I recommend one dataframe for the parameter data, and then another for the user-generated data.</p>

<pre><code>import pandas as pd

taxi_specs = pd.DataFrame([[4,2.5,1,.0074],[9,4,1.25,.0086],[12,5,1.15,.0092]],
                          index=['saloon','people car','mini'],columns=['max passengers','base','per km','fuel usage'])
rides = pd.DataFrame(columns = ['passengers','distance','car type','price','fuel cost'])

def find_car_type(passengers):
    for index, row in taxi_specs.iterrows():
        if passengers &lt;= row['max passengers']:
            return index
</code></pre>

<p>Now for each trip, you after you get number of passengers and distance, you can do:</p>

<pre><code>car_type = find_car_type(passengers)
price = taxi_specs.loc[car_type]['base']+ taxi_specs.loc[car_type]['per km']*distance
fuel_costs = taxi_specs.loc[car_type]['fuel usage']*distance  
rides.append(pd.Series([passengers,distance,car_type,price,fuel_costs],
                       index=rides.columns),ignore_index=True)
</code></pre>

<p>You can get totals with <code>totals = rides.groupby('car type')[['passengers','price','fuel cost']].sum()</code>. You'll then have to do something along the lines of <code>totals['price']=totals['price']*1.06</code>, although if you to be more realistic, this is often rounded, and the rounding is done for each transaction, so you'll have to multiply by 1.06 first, then round, then take the total.</p>
    </div>