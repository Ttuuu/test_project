<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, first of all, that's not bubble sort at all.</p>

<p>Here's bubble sort:</p>

<pre><code>bool swapped = true;
while (swapped) {
  swapped = false;
  for (int i = 0; i &lt; randomIntegers.length - 1; i++){
    if (randomIntegers[i] &gt; randomIntegers[i + 1]) {
      swapped = true;
      int temp = randomIntegers[i];
      randomIntegers[i] = randomIntegers[i + 1];
      randomIntegers[i + 1] = temp;
    }
  }
}
</code></pre>

<p>Here's an improved version of bubble sort, where the items known to be sorted are excluded:</p>

<pre><code>bool swapped = true;
for (int i = randomIntegers.length - 1; swapped &amp;&amp; i &gt;= 0; i--){
  swapped = false;
  for (int j = 0; j &lt; i; j++){
    if (randomIntegers[j] &gt; randomIntegers[j + 1]) {
      int temp = randomIntegers[j];
      randomIntegers[j] = randomIntegers[j + 1];
      randomIntegers[j + 1] = temp;
    }
  }
}
</code></pre>

<p>On the subject of optimising the code that you have, whatever algorithm that is, you can let <code>j</code> loop from <code>i + 1</code> instead of <code>i</code>, so that you don't need to use <code>j + 1</code> everywhere. Also, use a temporary variable to swap the items:</p>

<pre><code>for (int i = 0; i &lt; randomIntegers.length; i++) {
  for (int j = i + 1; j &lt; randomIntegers.length; j++) {
    if (randomIntegers[i] &gt; randomIntegers[j]) {
      int temp = randomIntegers[i];
      randomIntegers[i] = randomIntegers[j];
      randomIntegers[j] = temp;
    }
  }
}
</code></pre>
    </div>