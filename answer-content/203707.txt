<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Formatting of certain lines, like</p>

<pre><code>    if (!line) return NULL;
</code></pre>

<p>goes without saying. Same for not using curly braces around one-liners.</p>

<p>I guess you already know that.</p></li>
<li><p><code>line = (char *)realloc(line, size);</code> is considered bad practice. Shall <code>realloc</code> fail, you'd lose information already collected, plus you'd have a memory leak.</p></li>
<li><p>Error handling in <code>getline</code> is, umm, pessimistic:</p>

<pre><code>if (!fgets(line+len, size-len, fp))
  { free(line); return NULL; }
</code></pre>

<p>may throw away a perfectly valid line (e.g. if the file is missing a trailing <code>'\n'</code>).</p></li>
<li><p>The repeated <code>22</code> in</p>

<pre><code>  print_songs(tp-&gt;songs[0], 22, 12);
  ....
  print_songs(followlist(tp-&gt;songs[0],22), tp-&gt;nsongs[0]-22, 12);
</code></pre>

<p>suggests that the second call picks up where the first one ended. It looks like <code>print_song</code> should return a pointer to the first non-printed node, rather than be <code>void</code> about it.</p></li>
<li><p>Everything marked <code>CAN'T HAPPEN</code> eventually happens. If you print it anyway, you should not proceed.</p></li>
<li><p>The decision making should not be delegated deep into the calling sequence. For example, <code>add_tape</code> shall not decide wether to print or not. It seems that the code following the <code>/* Now see if any ready to print */</code> comment should he factored out into a function, which is to be called from <code>main</code> loop.</p></li>
<li><p>No review of the postscript code, sorry.</p></li>
</ul>
    </div>