<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few notes...</p>

<ul>
<li><strong>How to securely handle user information?</strong></li>
</ul>

<p>You should hash after you encrypt however you may be better using HMAC  which are hash MACS.</p>

<ul>
<li><strong>How should the User class be saved in the database?</strong></li>
</ul>

<p>You save the variable/user info in the DB not the class itself. </p>

<ul>
<li><strong>Should I be doing all this logic inside __init__?</strong></li>
</ul>

<p>You can but it may be easier to compare your conditions in a function to see if the condition from a user input.</p>

<ul>
<li><strong>Should I use more functions for better readability?</strong></li>
</ul>

<p>Don't make your code longer unnecessarily, The code below is an example of a simple version of what your trying to achieve from the main logic aspect. I have put things such as the attempt effort and db search into 1 function. </p>

<pre><code>import string


lower_char = string.ascii_lowercase
upper_char = string.ascii_uppercase
special_char = ['!', '@', '#', '$', "%", "&amp;", "*", "(", ")", "-"]
number_char = string.digits
all_char = [lower_char, upper_char, special_char, number_char]
user_db = 'test' # Your DB in here
user_pwd = 'password' # Your DB in here
print(all_char)


#class User():

class User:
  def __init__(self, name, pwd):
    self.name = name
    self.pwd = pwd

user = User

def run():
  while True:
    attempts = 3
    while attempts &gt;= 0:
      try:
        q1 = input('Username:&gt; ')
        if q1 == user_db: # if q1 in user_db
          q2 = input('Password:&gt; ')
          # search for value against q1 key in user_db
          if q2 == user_pwd: # id q2 in user_db
            print('DO SOMETHING ELSE') # do something else. Other function
            exit()
          else:
            print('Incorrect password')
        else:
            print('Username invalid')
            attempts -= 1
      except ValueError:
        pass
    else:
      print('Too many failed attempts')
      break

run()
</code></pre>

<p>This is the output. At the top I printed out the string.ascii variables so you don't have to type out each letter and number:</p>

<pre><code>['abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', ['
!', '@', '#', '$', '%', '&amp;', '*', '(', ')', '-'], '0123456789']
Username:&gt; test
Password:&gt; password
DO SOMETHING ELSE
</code></pre>

<p>and when you put in the wrong user or password. You will need to add arguments to check your db keys as names and values assigned to them for the password:</p>

<pre><code>Username:&gt; d
Username invalid
Username:&gt; f
Username invalid
Username:&gt; test
Password:&gt; s
Incorrect password
Username:&gt; j
Username invalid
Username:&gt; wksd
Username invalid
Too many failed attempts
</code></pre>
    </div>