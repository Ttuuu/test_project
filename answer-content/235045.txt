<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One thing I take issue with is that all of this code is in a <code>static</code>. If you're already drinking the Java kool-aid, you can have a brief static wrapper to do your <code>if (head == null)</code> shortcut, but the rest of the code should be one or more methods on <code>DoublyLinkedListNode</code>. Rather than continuing to reference your parameter <code>data</code>, the instance saved to <code>nodeToInsert</code> would, in the method you write, access its <code>this.data</code>.</p>

<p>Overall the question asks you to do a thing that sucks, so it isn't your fault: sorted insertion to a linked list is O(n), but you can do much better with a different choice of data structure, such as an AVL tree. If you're interested, here's an <a href="https://blog.scottlogic.com/2010/12/22/sorted_lists_in_java.html" rel="nofollow noreferrer">implementation of a sorted list in Java</a>.</p>
    </div>