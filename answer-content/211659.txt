<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For the word selection, there is a bug on </p>

<p><code>secret_word = word_list[random.randint(1, len(word_list))]</code></p>

<p>you should change to</p>

<p><code>secret_word = word_list[random.randint(0, len(word_list)-1)]</code></p>

<p>because <code>random.randint(1, len(word_list))</code> does not return <code>0</code> index, and  could return an index off the bound (<code>len(word_list)</code>).</p>

<p>Also, you may remove <code>secret_word = ['']</code> and <code>user_list=[]</code> at the beginning.</p>

<pre><code>number_of_tries = 5
guessed_letters = []
user_tries = 0
user_guess = ''

def select_word():
    with open('secret_words.txt', 'r') as f:
        word = f.read()
        word_list = word.split('\n')
        secret_word = word_list[random.randint(0, len(word_list)-1)]
        user_list = ['-'] * len(secret_word)
    return secret_word, user_list
</code></pre>

<p>looks more compact. So you can use it as :</p>

<pre><code>print('----HANG MAN----')
print('*Welcome, guess the word\n*you have 5 tries.')

secret_word, user_list = select_word()

...
</code></pre>

<hr>

<hr>

<p>Also for efficiency and compactness, you can change this</p>

<pre><code>while not game_over():
    for x in user_list:
        print(x, end='')
    user_guess = input('\nGuess a letter : ')
    if valid_input(user_guess):
        if repeated(user_guess):
            continue
        else:
            check_guess(user_guess)
</code></pre>

<p>to:</p>

<pre><code>while not game_over():
    print(''.join(user_list))
    user_guess = input('\nGuess a letter : ')
    if valid_input(user_guess):
        if not repeated(user_guess):
            check_guess(user_guess)
</code></pre>

<hr>

<hr>

<p>For the game itself, you may want to try using classes, which will make it more readable and easier to analyze.</p>
    </div>