<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Review</h1>

<ol>
<li>Remove unnecessary imports</li>
<li><p>Don't work in the global namespace</p>

<p>This makes it harder to track bugs</p></li>
<li><p>constants (<code>url</code>) should be <code>UPPER_SNAKE_CASE</code></p></li>
<li><p>Functions (<code>getShockingSales()</code>) should be <code>lower_snake_case</code></p></li>
<li><p>You don't break or return when an invalid status is encountered</p></li>
<li><p><code>if response.status_code is 200:</code> should be <code>==</code> instead of <code>is</code></p>

<p>There is a function for this though</p>

<p><code>response.raise_for_status()</code> this will create an exception when there is an 4xx, 5xx status</p></li>
<li><p>Why use a <code>while</code> inside the <code>for</code> and return when finished with the <code>while</code> </p>

<p>This is really odd!
Either loop with a <code>for</code> or a <code>while</code>, not both! Because the while currently disregards the for loop.</p>

<p>I suggest to stick with for loops, Python excels at readable for loops </p>

<p>(Loop like a native)</p></li>
</ol>

<blockquote>
  <p>Would one list be more than sufficient? Am I approaching this wrongly.</p>
</blockquote>

<p>Yes.</p>

<p>You don't have the use 4 separate lists, but can instead create one list and add the column names afterwards.</p>

<h1>Code</h1>

<pre><code>from requests import get
import pandas as pd

URL = 'https://shopee.com.my/api/v2/flash_sale/get_items?offset=0&amp;limit=16&amp;filter_soldout=true'

def get_stocking_sales():
    response = get(URL)
    response.raise_for_status()
    return [
        (item['name'], item['price'], item['discount'], item['stock'])
        for item in response.json()['data']['items']
    ]

def create_pd():
    return pd.DataFrame(
        get_stocking_sales(),
        columns=['Name', 'Price', 'Discount', 'Stock']
    )

if __name__ == '__main__':
    print(create_pd())
</code></pre>
    </div>