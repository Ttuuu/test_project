<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your current solution looks to be too complex. If all you need to do is swap the order of words, Strings that are separated by white space, then why not simply do this:</p>

<ul>
<li>Use <code>String#split("\\s+")</code> to split the input text into an array of words -- of Strings split greedily by white-space</li>
<li>Iterate through this array <em>backwards</em> in a simple for loop</li>
<li>Add these Strings to a StringBuilder (not a StringBuffer which has unnecessary overhead of thread-safety -- we're doing this in only one thread)</li>
<li>Avoiding use of <code>new String(...)</code>, it's almost <em>never</em> necessary to use this, and there is a down-side to its use, including avoiding appropriate and efficient use of the String-pool.</li>
<li>And then return. </li>
</ul>

<p>e.g., something as basic as:</p>

<pre><code>public static String reverseWords(String inText) {
    StringBuilder sb = new StringBuilder();
    String[] tokens = inText.split("\\s+");
    for (int i = tokens.length - 1; i &gt;= 0; i--) {
        sb.append(tokens);
        if (i != 0) {
            sb.append(" ");
        }
    }        
    return sb.toString();
}
</code></pre>
    </div>