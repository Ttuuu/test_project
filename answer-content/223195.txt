<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>dfhwze has said the most, I just miss the point of:</p>

<blockquote>
<pre><code>      duplicateIndexes.Add(index);
        duplicateIndexes.Add(j);
</code></pre>
</blockquote>

<hr>

<p>Recursion is an important pattern when programming, and sometimes it is inevitably, but in most circumstances you can find an iterative solution for the same problem. The advantages with iterative solutions are that they often are easier to understand and debug, and they are mostly also more time efficient - unless the language supports tail call optimization (C# doesn't AFAIK) (and your recursive call is a tail call), and they of course never overflow the stack.</p>

<p>A binary search can easily be implemented iteratively: </p>

<pre><code>public int Chop(int value, int[] subject)
{
  subject = subject ?? throw new ArgumentNullException(nameof(subject));
  if (subject.Length == 0 || value &lt; subject[0] || value &gt; subject[subject.Length - 1]) return -1;

  int start = 0;
  int end = subject.Length - 1;

  while (start &lt;= end)
  {
    int mid = start + (end - start) / 2;

    if (value == subject[mid])
      return mid;
    if (value &lt; subject[mid])
      end = mid;
    else
      start = mid + 1;
  }

  return -1;
}
</code></pre>
    </div>