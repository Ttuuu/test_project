<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><strong>Bug</strong></p>

<p>The main loop starts at <code>i = 2</code>. That is, <code>s.charAt(1) - s.charAt(0)</code> is never attended to. Suspicious, isn't it?</p></li>
<li><p><strong>Naming</strong></p>

<p>A name <code>comp</code> (and <code>comp2</code>) presumes that it carries some information about comparison. It obviously doesn't. <code>diff</code> and <code>rdiff</code> sound better.</p></li>
<li><p><strong>Algorithm</strong></p>

<p>Reversal of the string just wastes time. You may work the same string from both directions simultaneously:</p>

<pre><code>for (int i = 1; i &lt; s.length(); ++i) {
    diff = s.charAt(i) - s.charAt(i - 1);
    rdiff = s.charAt(s.length() - 1 - i) - s.charAt(s.length() - 1 - (i-1));
    ...
</code></pre></li>
<li><p><strong>Returning the comparison result</strong> is an anti-pattern.</p>

<pre><code>return stillEq;
</code></pre>

<p>achieves the same result as</p>

<pre><code>if (stillEq)
    return true;
else
    return false;
</code></pre>

<p>in a much cleaner way.</p></li>
<li>If you insist on reversing a string, better come up with an iterative method. Java cannot eliminate tail recursion.</li>
</ul>
    </div>