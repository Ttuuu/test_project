<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You really need a better algorithm.  Look into <strong>Sieve of Eratosthenes</strong> for a good first prime sieve to implement.  That avoids (expensive) division, using instead only addition and simple multiplications (I'm including <code>%</code> as "division" here).</p>

<p>In <code>is_prime</code>, you really only need to try dividing by the previously discovered primes, rather than by all numbers.  If you don't want to store the discovered primes, you can still reduce to testing against only odd numbers, since you only ever call it with odd <code>num</code> argument.  Also, there's no need to test all the way up to <code>num / 2</code> - if you've not found a factor before <code>std::sqrt(num)</code>, you won't find any.</p>

<p>In <code>main()</code>, I recommend ending the output with a newline:</p>

<pre><code>        std::cout &lt;&lt; i &lt;&lt; '\n';
</code></pre>
    </div>