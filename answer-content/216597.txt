<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would say that this code is quite above the average at whole. Yet there are some issues as well.</p>

<h3>Error reporting</h3>

<p>To elaborate on what others said about error reporting. Actually I've got a comprehensive article on <a href="https://phpdelusions.net/articles/error_reporting" rel="nofollow noreferrer">PHP error reporting basics</a>, which I highly recommend to read, but here is a gist just to get it right:</p>

<p>Error reporting is essential. A good programmer always crave for the every error message they can get. And it should be at max all the time. The difference is only the destination: on a local dev server it is naturally should be your screen, but on a production server errors should be completely banned from screen, going to the log file instead. Hence the two different setups:</p>

<ul>
<li>On a development server

<ul>
<li><strong>error_reporting</strong> should be set to E_ALL value;</li>
<li><strong>display_errors</strong> should be set to 1</li>
</ul></li>
<li>On a production server

<ul>
<li><strong>error_reporting</strong> should be set to E_ALL value;</li>
<li><strong>display_errors</strong> should be set to 0</li>
<li><strong>log_errors</strong> should be set to 1</li>
</ul></li>
</ul>

<p>So this setup contradicts a bit with what you have been told before but it makes a perfect sense. </p>

<h3>Database exposed</h3>

<p>Another security issue is the Sqlite database location. Assuming it is on the same level with other files, it means it is accessible by site users, so anyone would be able to download your whole database. I don't think its a good idea to let is so. Consider moving the database file outside the site root. And also use the <strong>absolute path</strong> to the file. To help with this issue I also have an article on <a href="https://phpdelusions.net/articles/paths" rel="nofollow noreferrer">files and directories</a>.</p>
    </div>