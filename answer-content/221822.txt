<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A suggestion that may help is to make generators of loops in <code>import_file_list</code> and <code>import_data</code>. <br>
This is more memory efficient on the intermediate steps and defers building the dataframe until the end.</p>

<pre class="lang-py prettyprint-override"><code>def import_file_list(file_name):
    with open(file_name) as f:
        for row in f:
            yield row.strip()


def import_data_to_dfs_iter(list_of_files)
    for item in list_of_files:
        yield pd.read_csv(
            item, sep='|', usecols=['A', 'B', 'C'], compression='gzip')

def main():
    dfs_iter = import_data_to_dfs(import_file_list(sys.argv[1]))
    df = pd.concat(dfs_iter)
</code></pre>
    </div>