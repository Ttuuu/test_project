<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>if (Enum.TryParse(billing_location, true, out mbl))
{
    return (MobiusBillingLocation)Enum.Parse(typeof(MobiusBillingLocation), billing_location, true);
}
</code></pre>
</blockquote>

<p>There is no need to parse it twice. You can just use:</p>

<pre><code>if (Enum.TryParse(billing_location, true, out mbl))
{
    return mbl;
}
</code></pre>

<hr>

<p>For the case, that the value couldn't be parsed, I would throw an exception (or at least add logging). If that case occurs, you have a serious problem.</p>

<p>Actually, I would prefer to store the underlying integer value because:</p>

<ul>
<li><p>if anybody renames the values of the enum, the connection to the database is lost. Sure, that problem exists also for numeric values, but IMHO that is less possible.</p></li>
<li><p>Conversion between enum and int is for free (Probably entity framework is able to do it for you!?)</p></li>
</ul>
    </div>