<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I only want to add some nitpicks, but otherwise a really clean code base!</p>

<h1>Don't create types with<code>_t</code> suffix</h1>

<p>These types are reserved by POSIX and C is currently even moving to claiming some of these, too.</p>

<h1>Use function prototypes</h1>

<p>Currently you don't use function prototypes for functions with no arguments, eg.</p>

<pre><code>void f();
</code></pre>

<p>This declaration defines the existence of a function returning void but "doesn't specify* whether it takes any arguments. To provide the necessary parameters (ie. that it does take no arguments), use:</p>

<pre><code>void f(void);
</code></pre>

<p>This will allow the compiler to error-check for mismatching definitions/declarations.</p>

<h1>Error handling: Print path</h1>

<p>While it's a common pattern to eg. do</p>

<pre><code>if (err = foo(), err == -1) {
    perror("progname: foo");
}
// Prints
// progname: foo: Some error message.
</code></pre>

<p>It's sensible to use a different pattern for functions like open:</p>

<pre><code>if (fd = open("bla.txt", mode), fd == -1) {
    perror("progname: bla.txt");
}
// Prints eg.
// progname: bla.txt: File not found
</code></pre>

<p>You chose a kinda in-between approach, describing the specific file with "worker dir" or something similar, however this makes it hard to understand errors, eg. when the path to worker dir is ill-formed for some reason. I'd print that rather significant information for debugging as part of the message. The message about "worker dir creation failed" is more of a user-centered message. I'd split those (developer-centric, end-user-centric) to have this:</p>

<pre><code>fprintf(stderr, "retask: %s: %s\n
        "Worker for creation failed\n", path, strerror(errno));
</code></pre>

<h1>Declare variables when used</h1>

<p>Since C99 you can declare variables later, when needed. This gives you far more possibilities for using <code>const</code> and often makes it easier to read as you don't need to "remember" what the variable was meant to say.</p>

<h1>Vertical space</h1>

<p>I'd use some empty lines to structure more, like paragraphs when writing prose. It makes it easier on the eyes.</p>
    </div>