<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First off, your code is <em>borderline unreadable</em>. Use proper indentation. Add whitespace (horizontal and vertical). Follow conventional guidelines (lowercase camelCase names for most things). And give your variables actual names - bytes are cheap.</p>

<p>If you want really compact code, use a minifier - <em>after</em> writing the code in readable, sane manner. This looks like a text dump of a fiendish Excel spreadsheet or something.</p>

<p>For the few things that I could read, and which stand out:</p>

<ul>
<li><p>You <code>Rand</code> [<em>sic</em>] function is doing a bunch of unnecessary stuff. You <code>parseFloat</code> something that's guaranteed to be an integer, because you called <code>Math.floor()</code> on it. You <code>parseFloat</code> on <code>min</code> when adding it at the end, but you don't do it when you subtract it from <code>max</code>.</p>

<p>And it's broken (which makes it technically off-topic for CodeReview, by the way).</p>

<p>Firstly, it doesn't even run because you've got one close-parenthesis too many, so there's a syntax error.   </p>

<p>Secondly, you're not paying attention to operator precedence: Multiplication precedes addition and subtract. So your code is saying <code>Math.random() * max</code> then subtracting <code>min</code> and finally adding <code>1</code>. Hence, if you call <code>Rand(9, 10)</code>, you're liable to get any number from 1-10, rather than a number from 9-10.</p>

<p>Just say:</p>

<pre><code>function rand(min, max) {
  var span = max - min;
  return Math.round(Math.random() * span) + min;
}
</code></pre></li>
<li><p>As for <code>Choose</code> [<em>sic</em>], you can use the bitwise-floor trick:</p>

<pre><code>function choose(arr) {
  return arr[Math.random() * arr.length | 0];
}
</code></pre></li>
<li><p>When appending to and array, use <code>push</code>. Don't just assign to an index. E.g.</p>

<pre><code>spades.push(values[i] + " of Spades");
hearts.push(values[i] + " of Hearts");
clubs.push(values[i] + " of Clubs");
diamonds.push(values[i] + " of Diamonds");
</code></pre></li>
</ul>

<p>As for "better RNG", that's a StackOverflow question if anything. JavaScript has <code>Math.random()</code> and that's it.</p>
    </div>