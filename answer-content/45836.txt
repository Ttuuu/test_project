<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This question <a href="https://stackoverflow.com/questions/22545735/chunk-or-partition-seq-of-items-into-sequences-of-n-items">has been asked</a> several times on StackOverflow, and I'm always amazed at the convoluted answers offered up (and the votes for them!). Brian (a member of the F# team) provided <a href="https://stackoverflow.com/a/4000413/162396">a simple solution</a> back in 2010. It doesn't seem to be too popular, presumably because it uses (local) mutation (as do the built-in collections modules). But Brian's solution</p>

<ul>
<li>is concise and easy to understand</li>
<li>outperforms (by a wide margin) solutions using <code>skip</code>/<code>take</code> or <code>yield!</code></li>
</ul>

<p>His solution, for reference:</p>

<pre><code>let split size source =
  seq {
    let r = ResizeArray()
    for x in source do
      r.Add(x)
      if r.Count = size then
        yield r.ToArray()
        r.Clear()
    if r.Count &gt; 0 then 
      yield r.ToArray()
  }
</code></pre>
    </div>