<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree that specific questions we can answer would be helpful. That being said, a few comments:</p>

<ul>
<li><p>Some would disagree, but I'd separate the View/display code from the game code (model). You can build out all the mechanics of cards (GameRoom, Hand, PlayingCard, etc.) <em>without</em> any React code. 
There is a separation between these and it will keep things simpler. That way you can script tests that ensure all your game code is correct. Then, you can put them into React components and there will be very little logic needed within the React components.</p></li>
<li><p>It seems a little odd that <code>determineWinner</code> throws an exception. I would probably just have it return null. </p></li>
<li><p>It can also be simplified because 0 is falsey:</p></li>
</ul>

<p><code>return compareFirstTuples(p1HandValue, p2HandValue) ||
        compareSecondTuples(p1HandValue, p2HandValue) ||
        null</code></p>

<ul>
<li>Some of the renaming of things throughout the code is a little hard to follow. I think <code>individualCardValues</code> becomes <code>p1HandValue[1]</code> and then <code>p1Tuple</code>. I'm not sure the abstraction to tuples really helps the code, since the code is very specific about what it's manipulating. They could just stay as "card values". </li>
</ul>
    </div>