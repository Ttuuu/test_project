<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code looks good and was easy to understand, at least for me :)</p>

<p>A few things you can do to improve it:</p>

<h1>Python String Format and Upper</h1>

<p>Consider using python <a href="https://docs.python.org/3.6/library/stdtypes.html#str.format" rel="nofollow noreferrer">format()</a> method, instead of:</p>

<pre><code>print("You have " + str(p_health) + ' hit points.')
</code></pre>

<p>try:</p>

<pre><code>print('You have {} hit points.'.format(p_health))
</code></pre>

<p>And when checking if a char equals to a given char, you don't have to check both cases you can just use Python upper/lower function so instead of:</p>

<pre><code>if again == 'y' or again == 'Y':
</code></pre>

<p>try:</p>

<pre><code>if again.lower() == 'y':
    do stuff
</code></pre>

<hr>

<h1>Better Practice</h1>

<p>The status() function could be improved by assigning a value to result and returning it, this is just better practice:</p>

<pre><code>def status():
    res = ''
    if g_health == 5:
        res = "\nA menacing goblin stands before you..."
    elif g_health &gt;= 3:
        res = "\nThe goblin is looking a little tired, and is bleeding..."
    elif g_health &gt;= 1:
        res = "\nThe goblin is bleeding horribly and looks enraged..."
    return res
</code></pre>

<hr>

<h1>Python Class</h1>

<p>Perhaps this code will be better in a GoblinGame class, this class will have properties such as goblin_health, player_health and goblin_alive that can be assigned when initializing the class instance, and a run() method to play a round of the game, I've wrote a quick sample class you can follow along from there:</p>

<pre><code>class GoblinGame:
    def __init__(self):
        self.player_health = 5
        self.goblin_health = 5

    def goblin_alive(self):
        return self.goblin_health &gt; 0

    @property
    def status(self):
        res = ''
        if self.goblin_health == 5:
            res = "\nA menacing goblin stands before you..."
        elif self.goblin_health &gt;= 3:
            res = "\nThe goblin is looking a little tired, and is bleeding..."
        elif self.goblin_health &gt;= 1:
            res = "\nThe goblin is bleeding horribly and looks enraged..."
        return res

    def run(self):
        while self.goblin_alive:
         # write the game logic...
</code></pre>

<p>Good Luck!</p>
    </div>