<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is a lot of unnecessary noise in the function.</p>

<p>If the base path is not expected to change it can be moved out into a constant.</p>

<p><code>System.IO.Path</code> can be used to construct the path to the desired image.</p>

<p>To avoid null reference errors when consuming this function, try to avoid returning null. An empty array should be returned.</p>

<pre><code>const string BASEIMAGEPATH = "..\\..\\Imagens";
const string DEFAULTIMAGENAME = "\\logotipos-prototipo_logo_prototipo_print.jpg";

public static byte[] GetBytesFromImage(string imageName) {
    byte[] bytes = null;
    imageName = imageName == "" ? DEFAULTIMAGENAME : imageName;
    string path = Path.Combine(BASEIMAGEPATH, imageName);
    if (File.Exists(path) &amp;&amp; !imageName.EndsWith("png", StringComparison.InvariantCultureIgnoreCase)) {
        using (MemoryStream image = new MemoryStream())
        using (System.Drawing.Image bmpImageToConvert = System.Drawing.Image.FromFile(path))
        using (System.Drawing.Image bmpNewImage = new Bitmap(bmpImageToConvert.Width, bmpImageToConvert.Height))
        using (Graphics gfxNewImage = Graphics.FromImage(bmpNewImage)) {
            gfxNewImage.DrawImage(bmpImageToConvert, new Rectangle(0, 0, bmpNewImage.Width, bmpNewImage.Height), 0, 0, bmpImageToConvert.Width, bmpImageToConvert.Height, GraphicsUnit.Pixel);
            bmpNewImage.Save(image, ImageFormat.Png);
            bytes = image.ToArray();
        }
    }
    return bytes ?? Array.Empty&lt;byte&gt;();
}
</code></pre>

<p>The logic should also be reviewed as it was stated</p>

<blockquote>
  <p>The objective of the code is to receive an image path, check if the image exists or if it isn't png, if the image isn't png convert it to png and return a byte[] of the stream.</p>
</blockquote>

<p>but currently, if the image exists <strong>and</strong> is already a PNG, it wont return the contents of the file.</p>

<pre><code>const string BASEIMAGEPATH = "..\\..\\Imagens";
const string DEFAULTIMAGENAME = "\\logotipos-prototipo_logo_prototipo_print.jpg";

public static byte[] GetBytesFromImage(string imageName) {
    byte[] bytes = null;
    imageName = imageName == "" ? DEFAULTIMAGENAME : imageName;
    string path = Path.Combine(BASEIMAGEPATH, imageName);
    if (File.Exists(path)) {
        using (MemoryStream image = new MemoryStream()) {
            if (imageName.EndsWith("png", StringComparison.InvariantCultureIgnoreCase)) {
                using (FileStream imageStream = new FileStream(path, FileMode.Open, FileAccess.Read)) {
                    imageStream.CopyTo(image);
                    bytes = image.ToArray();
                }
            } else {
                using (System.Drawing.Image bmpImageToConvert = System.Drawing.Image.FromFile(path))
                using (System.Drawing.Image bmpNewImage = new Bitmap(bmpImageToConvert.Width, bmpImageToConvert.Height))
                using (Graphics gfxNewImage = Graphics.FromImage(bmpNewImage)) {
                    gfxNewImage.DrawImage(bmpImageToConvert, new Rectangle(0, 0, bmpNewImage.Width, bmpNewImage.Height), 0, 0, bmpImageToConvert.Width, bmpImageToConvert.Height, GraphicsUnit.Pixel);
                    bmpNewImage.Save(image, ImageFormat.Png);
                    bytes = image.ToArray();
                }
            }
        }
    }
    return bytes ?? Array.Empty&lt;byte&gt;();
}
</code></pre>
    </div>