<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The only way to reduce the number of operations is to sort one of the arrays. But 4 elements is hardly worth it. </p>

<p>Perhaps when adding the numbers to the array then add them in a sorted order, otherwise quicksort is good for arrays under 10 elements in size.</p>

<p>Performing a binary search on a sorted array would give you O(log n) time for each search - with O(n log n) time to compare two full arrays of the same size. Quicksort is O(n log n), with binary search that's roughly O(2[n log n]).</p>

<p>Adding items in a sorted order, then searching, would be a similar complexity: O(n log n) for adding 'n' items, and O(n log n) for searching through n items. I prefer this solution because it's one simple algorithm, and it's cleaner.</p>
    </div>