<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A suggestion would like to give, not sure how useful it would turn out for you.</p>

<ol>
<li><strong>Separate out the controller level validations from Model level validations.</strong> </li>
</ol>

<p>For validating the data for the users whether they have mentioned attributes or not, "comparable_attributes: [:id, :email, :first_name, :last_name]", mention such validation at Model level spec file.</p>

<p>For instance:</p>

<pre><code>require 'rails_helper'

describe User do
    #Tests for fields
    it {is_expected.to respond_to :firstname}
    it {is_expected.to respond_to :lastname}
    it {is_expected.to respond_to :email}

    #Tests for validations
    describe 'validate lengths' do
        it {is_expected.to validate_length_of(:email).is_at_most(255)}
        it {is_expected.to validate_length_of(:firstname).is_at_most(255)}
        it {is_expected.to validate_length_of(:lastname).is_at_most(255)}
    end



describe 'validate presence' do
        it {is_expected.to validate_presence_of :firstname }
        it {is_expected.to validate_presence_of :lastname }
    end

end
</code></pre>

<p><strong>Create a user in the model with valid parameters and set it in the current_user and that same object can be used in the controller, where you can authenticate various controller request</strong></p>
    </div>