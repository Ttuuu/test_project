<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Don't import tkinter twice.</h2>

<p>You're importing tkinter twice:</p>

<pre><code>import tkinter as tk
from tkinter import *
</code></pre>

<p>Just import it once, and prefix everything with <code>tk.</code>:</p>

<pre><code>import tkinter as tk
...
self._frame.pack(fill=tk.BOTH, ...)
...
self._text = tk.Label(..., justify=tk.RIGHT, anchor=tk.E, ...)
</code></pre>

<h2>Group all of your layout code together</h2>

<p>When you create a widget, then call grid, then create a widget, then call grid, etc, it makes it very hard to visualize the interface, and to see the logical and physical groupings. Instead, separate widget creation from widget layout. </p>

<p>This will also help expose some typos that you have (you try to save four different buttons as <code>self._button_plus</code>). </p>

<p>Example:</p>

<pre><code>    self._text = tk.Label(self._frame, text="INIT", font=self._font, justify=RIGHT, anchor=E, bg="white", padx=20, pady=20)
    self._button_0 = tk.Button(self._frame, text="0", font=self._font, command=lambda:self._controller.digit(0))
    self._button_1 = tk.Button(self._frame, text="1", font=self._font, command=lambda:self._controller.digit(1))
    self._button_2 = tk.Button(self._frame, text="2", font=self._font, command=lambda:self._controller.digit(2))
    self._button_3 = tk.Button(self._frame, text="3", font=self._font, command=lambda:self._controller.digit(3))
    self._button_4 = tk.Button(self._frame, text="4", font=self._font, command=lambda:self._controller.digit(4))
    self._button_5 = tk.Button(self._frame, text="5", font=self._font, command=lambda:self._controller.digit(5))
    self._button_6 = tk.Button(self._frame, text="6", font=self._font, command=lambda:self._controller.digit(6))
    self._button_7 = tk.Button(self._frame, text="7", font=self._font, command=lambda:self._controller.digit(7))
    self._button_8 = tk.Button(self._frame, text="8", font=self._font, command=lambda:self._controller.digit(8))
    self._button_9 = tk.Button(self._frame, text="9", font=self._font, command=lambda:self._controller.digit(9))
    self._button_plus = tk.Button(self._frame, text="+", font=self._font, command=lambda:self._controller.operator(Operator.PLUS))
    self._button_minus = tk.Button(self._frame, text="-", font=self._font, command=lambda:self._controller.operator(Operator.MINUS))
    self._button_mult = tk.Button(self._frame, text="*", font=self._font, command=lambda:self._controller.operator(Operator.MULT))
    self._button_div = tk.Button(self._frame, text="/", font=self._font, command=lambda:self._controller.operator(Operator.DIV))
    self._button_equals = tk.Button(self._frame, text="=", font=self._font, command=lambda:self._controller.operator(Operator.EQUALS))
    self._button_clear = tk.Button(self._frame, text="C", font=self._font, command=self._model.reset)

    self._text.grid(row="0", column="0", columnspan="4", sticky="NSWE")
    self._button_0.grid(row="5", column="0", columnspan="2", sticky="NSWE")
    self._button_1.grid(row="4", column="0", sticky="NSWE")
    self._button_2.grid(row="4", column="1", sticky="NSWE")
    self._button_3.grid(row="4", column="2", sticky="NSWE")
    self._button_4.grid(row="3", column="0", sticky="NSWE")
    self._button_5.grid(row="3", column="1", sticky="NSWE")
    self._button_6.grid(row="3", column="2", sticky="NSWE")
    self._button_7.grid(row="2", column="0", sticky="NSWE")
    self._button_8.grid(row="2", column="1", sticky="NSWE")
    self._button_9.grid(row="2", column="2", sticky="NSWE")
    self._button_plus.grid(row="2", column="3", rowspan="2", sticky="NSWE")
    self._button_minus.grid(row="1", column="3", sticky="NSWE")
    self._button_mult.grid(row="1", column="2", sticky="NSWE")
    self._button_div.grid(row="1", column="1", sticky="NSWE")
    self._button_equals.grid(row="4", column="3", rowspan="2", sticky="NSWE")
    self._button_clear.grid(row="1", column="0", sticky="NSWE")
</code></pre>

<h2>Use a loop to create nearly identical widgets</h2>

<p>Your buttons are all nearly identical, with the only difference being the character that they insert and the value they pass to the controller. You can cut down on the number of lines of code by using a loop, and storing the widgets in a dictionary:</p>

<pre><code>self.buttons = {}
for char in ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"):
    self.buttons[char] = tk.Button(self._frame, text=char, font=self._font, command=lambda c=char: self._controller.digit(c))
</code></pre>

<p>With that, instead of using something like <code>self._button_1</code>, you would use <code>self.buttons['1']</code> if you need to reference the buttons elsewhere in the code. Plus, by using a loop you reinforce to the reader that these buttons are intended to be virtually identical.</p>
    </div>