<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are 6 conditions (maybe more) and right now you're doing 6 loops to filter them out. This is very inefficient. </p>

<p>I understand that list comprehension is a great tool but you shouldn't use it at such an expense of performance. Imagine if this was the code :</p>

<pre><code>inScope = []
for s in set2:
    if s['LEAD_TIME'] &gt;= 0:
        inScope.append(s)

set2 = inScope
for s in set2:
    if  s['WRK_RLTN_DSC'] != "INDEPENDENT CONTRACTOR":
        inScope.append(s)

set2 = inScope
#...
</code></pre>

<p>Surely you would notice something is wrong? This is basically what your code is doing.</p>

<p>I believe the most readable way (although not "pythonic") would be to use to good ol' <code>for</code> and <code>if</code> operators.</p>

<pre><code>inScope = []
for s in set2:
    if  s['LEAD_TIME'] &gt;= 0 and s['WRK_RLTN_DSC'] != "INDEPENDENT CONTRACTOR": #...
        inScope.append(s)
</code></pre>

<p>If you <em>absolutely</em> want to use list comprehension, what I would suggest is to define a lambda and use it then.</p>

<pre><code>var conditions = lambda s : s['LEAD_TIME'] &gt;= 0 and s['WRK_RLTN_DSC'] != "INDEPENDENT CONTRACTOR" #...

inScope = [s for s in set2 if conditions(s)]
</code></pre>

<p>or even better (which is also "pythonic"):</p>

<pre><code>inScope = filter(conditions, set2)
</code></pre>

<p>(I just realized this is an old question, this code assumes a python 3.* version)</p>
    </div>