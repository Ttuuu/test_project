<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>        StringBuffer reverse = new StringBuffer();
</code></pre>
</blockquote>

<p>A <code>StringBuffer</code> is only needed if you are going to access the same variable from multiple threads.  Your program is single-threaded, so you're not doing that.  (Even in multi-threaded programs, you may not use the variable across threads.  But here you are simply singled-threaded.)  Just use a <code>StringBuilder</code> instead.  </p>

<pre><code>        StringBuilder ciphered = new StringBuilder(s.length());
</code></pre>

<p>The <code>StringBuilder</code> has the same interface as the <code>StringBuffer</code>, but it is more efficient.  It doesn't waste time synchronizing the accesses.  </p>

<p>I don't like the name <code>reverse</code>, as to me it implies changing the <em>order</em> of the characters rather than their place in the alphabet.  </p>

<p>Since you know the length of the string that you are building, you might as well tell the constructor at initialization.  That way it can allocate the correct amount of memory once rather than going through repeated resizing operations.  </p>

<h3>Java 8 Streams</h3>

<p>If you are using Java 8 or later, you could do this with a <code>Stream</code> instead.  Something like </p>

<pre><code>String ciphered = s.codePoints()
                   .map(c -&gt; (c &gt;= 'a' &amp;&amp; c &lt;= 'z') ? 'a' + 'z' - c : c)
                   .collect(StringBuilder::new,
                            StringBuilder::appendCodePoint,
                            StringBuilder::append)
                   .toString();
</code></pre>

<p>I removed the named constants as they actively harm readability.  And renamed I'm not sure about the functionality, as this only works for contiguous alphabets.  In my opinion, this works better as being strictly limited to the Latin1 alphabet.  For the same reason, I don't use <code>Character.isLowerCase</code>.  That will attempt to apply the Latin1 transformation to letters from other alphabets, which simply won't work.  </p>

<h3>See also</h3>

<ul>
<li><a href="https://stackoverflow.com/q/49543782/6660678">Java Stream .map capitalize first letter only</a></li>
<li><a href="https://stackoverflow.com/q/20266422/6660678">Simplest way to print an <code>IntStream</code> as a <code>String</code></a></li>
</ul>
    </div>