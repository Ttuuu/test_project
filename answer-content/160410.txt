<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A canvas works on absolute positions so shouldn't be used for any relative layouts</p>

<p>However there are several options available in the WPF framework</p>

<p>the one that I think fits your needs most is transformation</p>

<p>once you have your fixed not relative canvas you can apply a transformation to the entire canvas and scale the entire thing, the easiest way to do this is to use a viewbox as this automatically scales its content to fit its available area while maintaining the aspect ratio</p>

<p>another option is if you were trying to do a simple grid layout (eg battleship style) then you can just use a grid and this will fit the available space though with out regard to the aspect ratio</p>

<p>Here is an Example of these 2 alternative layouts</p>

<pre><code>&lt;Window x:Class="WpDemo.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpDemo"
        mc:Ignorable="d"
        Title="Window1" Height="300" Width="300"&gt;
    &lt;Grid&gt;
        &lt;Grid.ColumnDefinitions&gt;
            &lt;ColumnDefinition Width="*"/&gt;
            &lt;ColumnDefinition Width="*"/&gt;
        &lt;/Grid.ColumnDefinitions&gt;
        &lt;Grid Grid.Column="1"&gt;
            &lt;Grid.ColumnDefinitions&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
                &lt;ColumnDefinition Width="*"/&gt;
            &lt;/Grid.ColumnDefinitions&gt;
            &lt;Grid.RowDefinitions&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
                &lt;RowDefinition Height="*"/&gt;
            &lt;/Grid.RowDefinitions&gt;
            &lt;Rectangle Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="3" Grid.RowSpan="2" Fill="Aqua"/&gt;
            &lt;Rectangle Grid.Column="6" Grid.Row="3" Grid.ColumnSpan="3" Grid.RowSpan="4" Fill="Black"/&gt;
            &lt;Rectangle Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="1" Grid.RowSpan="2" Fill="Green"/&gt;
            &lt;Rectangle Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="1" Grid.RowSpan="1" Fill="Red"/&gt;
            &lt;Rectangle Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="1" Fill="Yellow"/&gt;
        &lt;/Grid&gt;
        &lt;Viewbox &gt;
            &lt;Canvas Width="200" Height="200"&gt;
                &lt;Rectangle Canvas.Top="10" Canvas.Left="30" Width="60" Height="30" Fill="Aqua" /&gt;
                &lt;Rectangle Canvas.Top="60" Canvas.Left="30" Width="60" Height="100" Fill="Black"/&gt;
                &lt;Rectangle Canvas.Top="0" Canvas.Left="10" Width="20" Height="20" Fill="Green"/&gt;
                &lt;Rectangle Canvas.Top="10" Canvas.Left="70" Width="80" Height="20" Fill="Red"/&gt;
                &lt;Rectangle Canvas.Top="80" Canvas.Left="10" Width="30" Height="16" Fill="Yellow"/&gt;
            &lt;/Canvas&gt;
        &lt;/Viewbox&gt;
    &lt;/Grid&gt;
&lt;/Window&gt;
</code></pre>
    </div>