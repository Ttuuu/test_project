<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Define an auxilliary function:</p>

<pre><code>replaceIfNothing :: Maybe a -&gt; a -&gt; a
replaceIfNothing (Just x) _ = x
replaceIfNothing Nothing  x = x
</code></pre>

<p>And then you can do:</p>

<pre><code>replaceIfNothing shortMonth $
replaceIfNothing longMonth $
replaceIfNothing monthPoint $
-- I think you get the idea now
</code></pre>

<p>You can also do it as an operator, which I personally think is nicer:</p>

<pre><code>(&amp;&gt;) :: Maybe a -&gt; a -&gt; a
(&amp;&gt;) (Just x) _ = x
(&amp;&gt;) Nothing  x = x
infixr 1 &amp;&gt;

shortMonth &amp;&gt; longMonth &amp;&gt; monthPoint &amp;&gt; ...
</code></pre>

<p>Of course, since this is Haskell, a <a href="https://hoogle.haskell.org/?hoogle=a%20-%3E%20Maybe%20a%20-%3E%20a" rel="nofollow noreferrer">quick search</a> shows that this is just <a href="https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Maybe.html#v:fromMaybe" rel="nofollow noreferrer"><code>Data.Maybe.fromMaybe</code></a> with the arguments reversed; you can thus just define <code>replaceIfNothing = flip fromMaybe</code> (although you have to do <code>import Data.Maybe</code> first). It's possible to use <code>fromMaybe</code> directly as well, although it feels a little clumsy:</p>

<pre><code>flip fromMaybe shortMonth $
flip fromMaybe longMonth $
flip fromMaybe monthPoint $
...
</code></pre>
    </div>