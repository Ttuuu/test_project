<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From a short review;</p>
<ul>
<li><p>the <code>tilescale</code> is <code>16</code> which is a great value to multiply or divide with, so</p>
<pre><code>x = x/tilescale;
z = z/tilescale;
</code></pre>
<p>can become</p>
<pre><code>x = x &gt;&gt; 4; //Divide by 16 (tilescale)
z = z &gt;&gt; 4; //Divide by 16 (tilescale)
</code></pre>
<p>this does mean that changing the tilescale can become a performance drag (like in real games)</p>
</li>
<li><p>So are <code>256</code> and <code>4</code>, so</p>
<pre><code>return(mapcol[(x+z*mapscalex)]*tilescaley);
</code></pre>
<p>could be</p>
<pre><code>return(mapcol[(x+z&lt;&lt;8)]&lt;&lt;2); //Nice comment here
</code></pre>
</li>
<li><p><code>~~</code> is faster than <code>Math.floor()</code> but for negative values it does return ~~-6.3 -&gt; 6</p>
</li>
<li><p>Don't count on <code>Math</code> to be fast, I dont think I've ever seen <code>Math</code> be faster in anything, <a href="https://stackoverflow.com/questions/4924842/javascript-math-object-methods-negatives-to-zero">even an <code>if</code> statement is faster than <code>Math.max(0,Math.floor(x))</code></a></p>
</li>
<li><p>When you know that x or z are either negative or greater than 255, why not just exit with a fixed value?</p>
</li>
<li><p>Check out <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" rel="nofollow noreferrer">8 bit arrays</a>, they might reduce the need for clamping in your code</p>
</li>
</ul>
    </div>