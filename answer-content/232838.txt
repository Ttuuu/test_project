<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This code looks okay, though there are am excessive amount of DOM lookups. It would be wise to cache those, since they can be expensive. </p>

<p><a href="https://i.stack.imgur.com/ybMID.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/ybMID.jpg" alt="bridge toll"></a></p>

<blockquote>
  <p><em>”...DOM access is actually pretty costly - I think of it like if I have a bridge - like two pieces of land with a toll bridge,  and the JavaScript engine is on one side, and the DOM is on the other, and every time I want to access the DOM from the JavaScript engine, I have to pay that toll”</em><br>
      - John Hrvatin, Microsoft, MIX09, in <a href="https://channel9.msdn.com/Events/MIX/MIX09/T53F" rel="nofollow noreferrer">this talk <em>Building High Performance Web Applications and Sites</em></a> at 29:38, also cited in the <a href="https://books.google.com/books?id=ED6ph4WEIoQC&amp;pg=PA36&amp;lpg=PA36&amp;dq=John+Hrvatin+%22DOM%22&amp;source=bl&amp;ots=2Wrd5G2ceJ&amp;sig=pjK9cf9LGjlqw1Z6Hm6w8YrWOio&amp;hl=en&amp;sa=X&amp;ved=2ahUKEwjcmZ7U_eDeAhVMGDQIHSfUAdoQ6AEwAnoECAgQAQ#v=onepage&amp;q=John%20Hrvatin%20%22DOM%22&amp;f=false" rel="nofollow noreferrer">O'Reilly <em>Javascript</em> book by Nicholas C Zakas Pg 36</a>, as well as mentioned in <a href="https://www.learnsteps.com/javascript-increase-performance-by-handling-dom-with-care/" rel="nofollow noreferrer">this post</a></p>
</blockquote>

<p>In <code>events</code> the keys need not be string literals... e.g. </p>

<pre><code>const events = [
{
  type: 'click',
  selector: '.start-button', 
  handler: quiz.start,
},
</code></pre>

<p>using <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> features, variables can be <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Swapping_variables" rel="nofollow noreferrer">swapped with destructuring assignment without the need for a temporary variable</a> - so <code>shuffleArray()</code> can be greatly simplified - also using the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Decrement" rel="nofollow noreferrer">prefix decrement operator</a>.</p>
    </div>