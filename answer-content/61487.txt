<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is neat :)</p>

<p>I think that unless you're tracking the <code>rects</code> which have changed, <code>display.update()</code> is no better than <code>display.flip()</code>, though I suppose for a student it would be easier to read.</p>

<p>I'm curious as to why collisions are being checked <em>after</em> the view updates? I know that in an event loop situation the actual order of processes can be a little lax, especially if you're working at a high FPS, and I see that it presents the code in a way where the end of the loop contains the "exit or don't" code, but I guess I'm of the opinion that all the state checking work should happen before the view is updated. That's probably small potatoes, I've no idea the age or experience of the students you're working with.</p>

<p>I have to agree that the paused handling is a bit weird, just because it kind of starts a discussion about using states to control the flow of the (very short) script. Would rather see something more like "if not paused: do_stuff()" rather than "if paused: continue".</p>

<p>It's also sort of interesting which aspects of the PyGame API you've chosen to work with; for my part, it feels very strange to do an Intro To Games class without working with <em>sprites</em>. The Pygame sprite.Sprite object is a pretty helpful thing to have around! But as I look over the code it seems like it introduces a range of different concepts, so maybe there's no call for adding yet another concept to the mix.</p>
    </div>