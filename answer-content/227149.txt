<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with the advice in dfhwze's answer. Because <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> features like arrow functions are used, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of" rel="nofollow noreferrer"><code>for...of</code></a> loops could be used to simplify the loop syntax. And instead of pushing values into <code>questions</code> and <code>incorrect</code> using <code>i</code>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push" rel="nofollow noreferrer"><code>Array.push()</code></a> could be used.</p>

<p>I see that <code>getData()</code> is called at the end of <code>completionScreen()</code>, which is called at the end of <code>createQuestionElements()</code> if <code>questionCount</code> is not less than 10, and that function is called at the end of <code>pickQuestion()</code>. I haven't seen this code in action but fear there could be a timing issue - i.e. the results might not be loaded from the API before other code attempts to load data from the questions array. </p>

<p>The second promise callback could be simplified to a one-line arrow function:</p>

<pre><code>.then(data =&gt; questionsdata = data.results)
</code></pre>

<p>Though be aware that <code>questionsdata</code> would get returned and any subsequent promise would receive that value.</p>

<p>It looks like the <code>for</code> loops with the regexp replacements decode HTML entities. There are <a href="https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript">various other techniques for this</a>. I noticed the first element of <code>characters</code> has two semi-colons at the end. Should it only have one?</p>

<p>Other ES-6 features could be used, like <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" rel="nofollow noreferrer">destructuring assignment</a> for <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Swapping_variables" rel="nofollow noreferrer">swapping variables</a> without the need for a temporary variable.</p>

<p>Inside the <code>shuffle()</code> function the technique used to decrement <code>currentIndex</code> could be simplified to the decrement operator: <code>--</code>. In fact, that could be moved to the previous line after it is used:</p>

<blockquote>
<pre><code>randomIndex = Math.floor(Math.random() * currentIndex);
currentIndex -= 1;
</code></pre>
</blockquote>

<p>could be simplified to: </p>

<pre><code>randomIndex = Math.floor(Math.random() * currentIndex--);
</code></pre>

<p>The conditional for the <code>while</code> could be reduced to simply <code>currentIndex</code> because it is considered <a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" rel="nofollow noreferrer"><em>falsey</em></a></p>
    </div>