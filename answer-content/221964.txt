<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1><a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP 8</a> implementation is great, now to focus on being concise -</h1>

<p>While you have started writing immaculate programs, as in <a href="https://codereview.stackexchange.com/questions/221930/palindrome-insertion-challenge">here</a> and your current question, I believe you should start making your programs more concise. This decreases memory space and sometimes, makes your program faster. Also, I'm glad to see you've started implementing the <a href="https://stackoverflow.com/questions/419163/what-does-if-name-main-do/419185#419185"><code>if __name__ == '__main__'</code></a> guard.</p>

<p>Here's one approach you could use to make your program really concise and fast -</p>

<pre><code>def zigzag(word: str, num_rows: int) -&gt; str:

    ans = [''] * num_rows
    x = 0
    direction = 1
    for i in word:
        ans[x] += i
        if 0 &lt;= x + direction &lt; num_rows:
             x += direction
        else:
             direction *= -1
             x += direction
    return ''.join(ans)

if __name__ == "__main__":
    print(zigzag("PAYPALISHIRING", 3))
</code></pre>

<p>Here, I believe that it would be better if you don't declare <code>word</code> and <code>num_rows</code> before calling the function. This -</p>

<pre><code>print(zigzag("PAYPALISHIRING", 3))
</code></pre>

<p>looks much shorter (and better) than -</p>

<blockquote>
<pre><code>word = "PAYPALISHIRING"
num_rows = 3
print("".join(line for array in zigzag() for line in array))
</code></pre>
</blockquote>

<p>Also, (hey, I'm <em>kind of</em> like a beginner, so please correct me if I'm wrong) I feel that you should perform the <code>.join()</code> function, or any other function really, in the principal function, as I have done above -</p>

<pre><code># rest of the principal function
return ''.join(ans)
</code></pre>

<p>Just use the <code>if __name__ == __main__</code> guard to (simply) call the principal function and execute the entire program (you <em>shouldn't</em> really perform any other function(s) in it <em>except</em> calling the principal function to execute it) -</p>

<pre><code>if __name__ == "__main__":
    print(zigzag("PAYPALISHIRING", 3))
</code></pre>

<hr>

<p>Also, I would rename <code>increasing</code> to <code>direction</code> as it suits this task better ("the value of "<code>direction</code>" changes only when we have moved up to the topmost row or moved down to the bottommost row" (taken from <a href="https://leetcode.com/problems/zigzag-conversion/solution/" rel="nofollow noreferrer">Leetcode</a>). If you're wondering what <code>*=</code> means, it's just another way of doing <code>x = x * 5</code>, which is specified <a href="https://www.programiz.com/python-programming/operators#assignment" rel="nofollow noreferrer">here</a>.</p>

<p>Also, you could make -</p>

<blockquote>
<pre><code>array = []
for _ in range(num_rows):
    array.append([])
</code></pre>
</blockquote>

<pre><code>num_rows = 3
print(array)
# [[], [], []]
</code></pre>

<p>more concise by just simply initializing it -</p>

<pre><code>array = [[] for _ in range(num_rows)]  # Thanks to Maarten Fabré

num_rows = 3
print(array)
# [[], [], []]
</code></pre>

<p>See how concise you can get by doing this? This removes the need to use <code>.append()</code>, which, in this case, is unnecessary (this will also take up less memory space).</p>

<hr>

<blockquote>
  <p><em>I know the final line is a bit messy, and I could unpack it into a
  two-line for loop but I really like single-line for loops.</em></p>
</blockquote>

<p>Nah, don't worry. As far as I know,</p>

<pre><code>print("".join(line for array in zigzag() for line in array))
</code></pre>

<p>is so much more concise than unpacking it into a two-line <code>for</code> loop. I'm glad you like single-line <code>for</code> loops :)</p>

<p>Here are the times taken for each function -</p>

<p>Your function -</p>

<pre><code>%timeit "".join(line for array in zigzag() for line in array)
8.34 µs ± 834 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
</code></pre>

<hr>

<p>My function -</p>

<pre><code>%timeit zigzag("PAYPALISHIRING", 3)
4.19 µs ± 134 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)
</code></pre>

<p>As you can see above, the time taken for execution has been approximately halved, which also shows that making your function concise, down to what I have done in my function, can make your program much faster.</p>

<p>Here is the Leetcode result for my program (if need be) -</p>

<blockquote>
  <p><a href="https://i.stack.imgur.com/xbtRJ.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/xbtRJ.png" alt="enter image description here"></a></p>
</blockquote>

<p>Hope this helps!</p>
    </div>