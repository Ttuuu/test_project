<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Doesn't look like you've done this:</p>

<blockquote>
  <p>Explain the correctness of your code, and analyze its time and space complexities.</p>
</blockquote>

<hr>

<p>This is an anti-pattern:</p>

<pre><code>    length = len(text)

    for i in range(length):
        # code using only `text[i]`, but never using `i`
</code></pre>

<p>You are computing the length of <code>text</code>, then using a <code>for</code> loop of over the <code>range(length)</code>, assigning the index to <code>i</code>, but then never using <code>i</code> for anything other than fetching the character <code>text[i]</code>.</p>

<p>Far, far better is looping over the letters of <code>text</code>:</p>

<pre><code>    for ch in text:
        # use `ch` here.
</code></pre>

<hr>

<p>Efficiency:</p>

<pre><code>        if text[i] == '(':
           # ...
        elif text[i] == ')':
           diffCounter -= 1
        if diffCounter &lt; 0:
           diffCounter += 1
           # ...
</code></pre>

<p>Will <code>diffCounter</code> ever be negative, without first subtracting 1 from it?  No?  Perhaps the next test belongs in the <code>elif</code> clause:</p>

<pre><code>        if text[i] == '(':
           # ...
        elif text[i] == ')':
           diffCounter -= 1
           if diffCounter &lt; 0:
              diffCounter += 1
              # ...
</code></pre>

<p>But that is still subtracting 1 and then (possibly) immediately adding 1 again.  Better: check for the underflow condition first.</p>

<pre><code>        if text[i] == '(':
           # ...
        elif text[i] == ')':
           if diffCounter &gt; 0:
              diffCounter -= 1
           else:
              # ...
</code></pre>

<hr>

<p>While the <code>diffCounter</code> is an understandable variable name (barely), the variable named <code>answer</code> is completely mysterious.  Answer to what?  Why is it incremented when there is an underflow?  Why is it added to <code>diffCounter</code> at the end.  Not a comment in sight, and the code is anything but self documenting.</p>

<hr>

<p>Follow <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP-8</a> coding standards, and use <code>pylint</code> or other style checker.  For instance, variables should not be <code>camelCase</code>, and <code>answer +=1</code> needs an extra space.</p>
    </div>