<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Security</strong></p>

<blockquote>
  <p>I'm concerned about security and I'm not the best.</p>
</blockquote>

<p>You use prepared statements, secure random numbers, and didn't make any other giant mistakes (from what I can tell), so that is already very good. </p>

<p>Still, there are two issues:</p>

<ul>
<li>you definitely want to set these cookies as httpOnly (it may somewhat mitigate XSS attacks). </li>
<li>you definitely want to hash the token in the database (use proper hashing such as bcrypt). Otherwise, once your database is compromised, an attacker can login as anyone that has an active remember me token. [your sha256 doesn't count here, an attacker can still just pass the value in the db]</li>
</ul>

<p>And two minor points:</p>

<ul>
<li>do you need the token in the session? It doesn't seem so to me, so I wouldn't store it. It shouldn't happen, but <a href="https://security.stackexchange.com/questions/116631/how-could-an-attacker-read-the-content-of-php-session-variables/116638#116638">session data may leak</a>, eg on shared hosts, so if it's not necessary, I wouldn't store secret information in them.</li>
<li>the <a href="https://security.stackexchange.com/a/111041/8754">feasibility of remote timing attacks</a> is still somewhat disputed, but it's not that far fetched. With your code, it's highly unlikely that anything may happen, but still, ideally, your code should be secure against it, and I'm pretty sure that your SELECT isn't. If you use bcrypt as suggested, you get a timing safe string compare for free. Otherwise, see eg <a href="https://codereview.stackexchange.com/questions/120770/persistent-login-remember-me-cookie-using-php/120771#120771">here</a> (it also links to some more information on proper remember me mechanisms).</li>
</ul>

<p><strong>Misc</strong></p>

<ul>
<li><code>rememberMe</code> isn't named all that good. It's not a function used to remember me, but a function used to check if I am remembered. So <code>isRemembered</code> would be more fitting. Something like <code>authenticateCookie</code> or similar might also work.</li>
<li>two spaces indentation is not enough, it makes your code hard to read. Use at least 4 spaces. If that leads to too long lines, reduce your nesting.</li>
<li>you should share one connection across your code (for performance reasons).</li>
<li>your <code>rememberMe</code> function may do a bit too much. It verifies the validity of a remember me token, but it also loads user info and saves it in the session. I would probably separate the second task into its own function.</li>
</ul>
    </div>