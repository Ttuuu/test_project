<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>the cs50.h that I have does not have a function: <code>get_long_long()</code>, so, for me, the code does not compile.  My compiler suggested: <code>getlonglong()</code></p>

<p>which credit card company is, normally, contained in the left digits of the card number, not in the right digits. so the posted code logic is (probably) not correct.</p>

<p>The posted code fails to take into account the <code>security code</code> found on the back of the credit card.</p>

<p>Not all credit cards use 16 digits, but rather varies by which vendor is producing the card. So that assumption should not be in the code logic.</p>

<p>Suggest reading the digits as a string rather than as a <code>long long int</code>.  Remember that a character digit - '0' results in a value 0...9, so the conversion, digit by digit is easy.</p>

<p>OT: when compiling, always enable the warnings, then fix those warnings. ( for gcc, at a minimum use: <code>-Wall -Wextra -Wconversion -pedantic -std=gnu11</code> ) Note other compilers use different options to produce the same results.</p>

<p>the posted code, when run through the compiler, results in the following:</p>

<pre><code>gcc   -O1  -ggdb -Wall -Wextra -Wconversion -pedantic -std=gnu11  -c "untitled1.c"  -I.

untitled1.c: In function ‘main’:

untitled1.c:17:17: warning: implicit declaration of function ‘get_long_long’; did you mean ‘GetLongLong’? [-Wimplicit-function-declaration]
      get_card = get_long_long(" Enter credit card: ");
                 ^~~~~~~~~~~~~
                 GetLongLong

untitled1.c:26:23: warning: conversion to ‘int’ from ‘long long int’ may alter its value [-Wconversion]
        sumofothers += card % 10;
                       ^~~~

untitled1.c:29:20: warning: conversion to ‘int’ from ‘long long int’ may alter its value [-Wconversion]
        otherdigs = card % 10;
                    ^~~~

untitled1.c:14:10: warning: unused variable ‘card_length’ [-Wunused-variable]
      int card_length;
          ^~~~~~~~~~~

Compilation finished successfully.
</code></pre>

<p>regarding: <em>Compilation finished successfully</em>  This only means the compiler provided some <code>workaround</code> for each of the problems it found in the code.  It does NOT mean the correct/expected code was produced.</p>

<p>Regarding you question about your suitability to become a programmer.</p>

<p>All programmers started some where, usually fumbling through many many programs before they started thinking of problems in terms of the needed code to solve the problem, so your doing quite well and will get better and better as you gain experience.</p>

<p>regarding: </p>

<p><em>I even don't know half of c syntax yet.</em></p>

<p>the C language is not that big.  besides what you have in the posted code, there are <code>pointers</code> and the <code>while()</code> and <code>switch()</code> statement.  Note: learning <code>pointers</code> can be a real pain.  After that there are many many standard C library functions. In Linux, in a 'terminal' window, type <code>man functionName</code> to learn all about a function.  The 'man' command is your best friend, After some 40+ years of programming, I still use that function regularly.</p>
    </div>