<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here are a few suggestions.</p>

<p><strong>Write a function</strong></p>

<p>Your code could be moved into a function on its own. It has the benefit of giving the code a clear name, a clear input, a clear output and we could go further and add documentation and tests.</p>

<pre><code>def split_song(song_duration, num_of_parts):
    """Returns parts when a song of duration song_duration is split into num_of_parts parts."""
    part_duration = song_duration / num_of_parts
    parts = []
    marker = 0

    for _ in range(num_of_parts):
        part = [marker, marker + part_duration]
        marker += part_duration
        parts.append(part)
    return parts

assert split_song(20, 4) == [[0, 5.0], [5.0, 10.0], [10.0, 15.0], [15.0, 20.0]]
assert split_song(21, 4) == [[0, 5.25], [5.25, 10.5], [10.5, 15.75], [15.75, 21.0]]
</code></pre>

<p><strong>Proper data structure</strong></p>

<p>You are returning a list of list. In Python, there is a <a href="https://nedbatchelder.com/blog/201608/lists_vs_tuples.html" rel="noreferrer">cultural difference in how <code>tuple</code> and <code>list</code> are used</a>.</p>

<p>In our case, we know that each piece will contain 2 pieces of information: the begining and the end. It would be more relevant to use tuples here.</p>

<pre><code>part = (marker, marker + part_duration)
</code></pre>
    </div>