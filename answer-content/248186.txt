<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Bearing in mind that this code was written over five years ago, things may have changed drastically with it and you may have learned a lot since then.</p>
<h2>Long comment lines</h2>
<p>The longest line appears to be this comment which is 159 characters (including whitespace):</p>
<blockquote>
<pre><code>// each day has a "section" tag, which has a child that has class "header" and it's "id" == "header-(date)" where date is the date of the events contained.
</code></pre>
</blockquote>
<p>For readability, use a multi-line comment and split it into multiple lines:</p>
<pre><code>  /* each day has a "section" tag, which has a child that has class "header" and 
     it's "id" == "header-(date)" where date is the date of the events contained.
  */
</code></pre>
<h2><code>http.request()</code> vs <code>http.get()</code></h2>
<p>Using <code>http.get()</code> eliminates the need to call <code>req.end();</code></p>
<blockquote>
<p>Since most requests are GET requests without bodies, Node.js provides this convenience method. The only difference between this method and <a href="https://nodejs.org/api/http.html#http_http_request_options_callback" rel="nofollow noreferrer"><code>http.request()</code></a> is that it sets the method to GET and calls <code>req.end()</code> automatically. <sup><a href="https://nodejs.org/api/http.html#http_http_get_options_callback" rel="nofollow noreferrer">1</a></sup></p>
</blockquote>
<h2>Promise library</h2>
<p>The <a href="https://www.npmjs.com/package/q" rel="nofollow noreferrer">Q library</a> hasn't been published since 2018 and has failed builds. It isn’t needed to return a promise- <a href="https://stackoverflow.com/q/38533580/1575353">this SO post shows an example</a> using the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" rel="nofollow noreferrer">Promise</a> constructor. That could easily be used to eliminate the Dependency of the Q library.</p>
<h2>overwriting variables</h2>
<p>I see these lines:</p>
<blockquote>
<pre><code>if(time) {
   time = moment(date + " " + time, "YYYY-MM-DD H:mma");
   time = time.format("hh:mm:ss A");
}
</code></pre>
</blockquote>
<p>While the intermediate value (returned by calling <code>moment()</code> is only used once, it isn’t exactly the same as the First value assigned to <code>time</code> because it is a moment object instead of a string. For readability it would be better to call that variable something else, like <code>dateTime</code>.</p>
    </div>