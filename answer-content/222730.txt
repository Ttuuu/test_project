<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd format this code slightly differently:</p>

<pre><code>return _formulaSheetSchema.column(columnName).get()
  .formula()
  .computeReferencedColums(getSheetName()).stream()
  .collect(groupingBy(ColumnRef::sheetName,
    LinkedHashMap::new,
    collectingAndThen(toSet(), set -&gt; set.stream()
      .map(ColumnRef::columnName).collect(toSet())));
</code></pre>

<p>Also the downstream operation you use here is wasteful, because it collects the set and then restreams it. Instead use the <code>mapping</code> collector:</p>

<pre><code>  .collect(groupingBy(ColumnRef::sheetName,
    mapping(ColumnRef::columnName, toSet()));
</code></pre>

<p>Sidenote: I personally prefer using 2-space indents across the board, but this formatting works with 4-space indents just as well...</p>

<p>Additionally the <code>_</code>-prefix for instance variables is something I dislike, but so long as you're consistent about it, that should be fine.</p>

<p>I also dislike that you're not checking whether the column actually exists, before accessing it's formula.  </p>
    </div>