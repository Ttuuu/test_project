<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If I were you (and I am) I would take the suggestion by <a href="https://codereview.stackexchange.com/users/145459/j-h">J H</a>, i.e. "<em>You're doing a linear scan through an array. You'd be happier if you were doing hashed O(1) time lookups in a set (or map).</em>" and use the end time as the index of the output array (i.e. the hash map). Also, let us build on functional techniques (beyond array_map()) and use <a href="http://php.net/array_reduce" rel="nofollow noreferrer">array_reduce()</a> to iterate through the timeslots.</p>

<p>By using the end time as the index, we can look for that end time in the array and if it exists, then combine it, setting the last start time, moving the combined timeslot to have the index of the new end time and un-setting the timeslot at the previous end time. </p>

<p>Then when outputting the times, we don't need to worry about the keys, since we output the start times only. A great advantage of this is the need for referencing <code>$outputs</code> via the <code>use</code> statement within the lambda function is eliminated since we aren't iterating over the keys anymore. </p>

<pre><code>function combine($timeslots) {
    $outputs = array_reduce($timeslots, function($outputs, $timeslot) {
        if (array_key_exists($timeslot['start'], $outputs)) {
            $timeslotToCombine = $outputs[$timeslot['start']];
            $timeslotToCombine['lastStart'] = $timeslot['start'];
            $outputs[$timeslot['end']] = $timeslotToCombine;
            unset($outputs[$timeslot['start']]);
        }
        else {
            $outputs[$timeslot['end']] = array(
                'start' =&gt; $timeslot['start']
                );
        }
        return $outputs;
    }, array());
    return implode(', ', array_map(function($timeslot) {
        if (array_key_exists('lastStart', $timeslot)) {
            return $timeslot['start'].'-'.$timeslot['lastStart'];
        }
        return $timeslot['start'];
    },$outputs));
}
</code></pre>

<p>For a demonstration of this, checkout <a href="https://www.tehplayground.com/UmUnhM7Xli39tU5x" rel="nofollow noreferrer">this playground example</a>.</p>
    </div>