<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>The Security</h3>
<p>The main point here is your assumption that HTTP_REFERER could prevent someone from using this code. Unfortunately it doesn't. Referrer, just like any other HTTP header, is easily faked, one is setting it routinely with any software that is doing HTTP requests. So be advised that it is an ostrich-style defense.</p>
<p>You should understand that there is <strong>absolutely no way to protect</strong> the information which is shown in the browser. The only way to restrict an access to a script is to make it password protected.</p>
<p>Moreover, I suppose that a concerned user could easily guess the domain from which you are requesting the data, and then just bluntly <strong>take the token from the source of <em>your</em> page</strong> and then just use it at their own disposal. Consider storing the token inside your PHP code instead.</p>
<h3>The code.</h3>
<p>That said, your code could be <em>syntactically</em> improved as well. First of all, just like it said in the other answer, you could combine all conditions in one. <em>But it mustn't be done at the expense of readability.</em> So first define your conditions and then check them at once.</p>
<p>After that you could just write your code without any conditions. A loop is unnecessary if there is only one value in the array</p>
<pre><code>$referrer = $_SERVER['HTTP_REFERER'] ?? '';
$access = preg_match('!^http://localhost/test!', $referrer);
$token = $_GET['token'] ?? '';
$source = $_GET['source'] ?? '';
$source_ok = $source == 'player';

if (!$referrer || !$access || !$token || !$source || !$source_ok) {
    header('HTTP/1.1 404 Not Found');
    die;
}
$urlPost = 'https://www.player.com/?token='.$token;
$url = file_get_contents($urlPost);
preg_match('/CONFIG = (.*)/', $url, $matches);
$jsn =  json_decode($matches[1]);
$vdUrl = $jsn-&gt;streams[0]-&gt;url;
header('location:'.$vdUrl);
</code></pre>
<p>Note: if <code>$_GET['source'] ?? '';</code> operator is giving you an error, consider upgrading your PHP version immediately, because it is not supported anymore.</p>
    </div>