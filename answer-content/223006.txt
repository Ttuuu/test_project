<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Constants</h3>

<p>You have a lot of mathematical constants that aren't constants in your API. Why?</p>

<blockquote>
  <p>Excentricity, MLower, MUpper, TLower, TUpper, TOrigin, ROrigin, N, G.</p>
</blockquote>

<p>EDIT:</p>

<p>In the comments you suggest that the compiler does not accept these constants. But the problem is not the compiler, it's that <strong>you should not use the formula to declare a constant</strong>. Pre-calculate the constant using <a href="https://docs.microsoft.com/en-us/visualstudio/modeling/code-generation-and-t4-text-templates?view=vs-2019" rel="nofollow noreferrer">T4</a> and use the result in your derived constants.</p>

<pre><code>// Just paste the pre-calculated result from T4
static double Excentricity = 0.0818191910428158d;
</code></pre>

<p>A simpler option is to use <code>static readonly</code>as Peter suggests in his answer.</p>

<h3>Naming Conventions</h3>

<p>Some, but not all of your variables and functions are named after mathematical usage. I like it either way, but a combination is an inconsistent naming convention.</p>

<blockquote>
<pre><code>public const double f = 1 / 298.257222101;
public const double lowerLatitude = 49.8333333 * Mathf.Deg2Rad;
</code></pre>
</blockquote>

<h3>Aliases</h3>

<p>You are using both <code>System.Math</code> and <code>UnityEngine.Mathf</code>. To avoid repeating code I suggest to import the one you used most as a <em>static using</em> and the other as an <code>aliased using</code>.</p>

<pre><code>using static UnityEngine.Mathf;
using Math = System.Math;
</code></pre>
    </div>