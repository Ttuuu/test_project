<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd personally go for option one as it's by far the simplest, as the names <code>FromNet</code> and <code>FromGross</code> give a clear indication of what the code is doing. That clarity is lost in the other examples.</p>

<p>However, there is room to improve things. Both methods perform the same basic calculation, resulting in four near-dentical expressions. So DRY can be applied here:</p>

<pre><code>public class TaxedPrice
{
    private TaxedPrice()
    { }

    public decimal NetAmount { get; private set; }
    public decimal GrossAmount { get; private set; }

    public static TaxedPrice FromNet(decimal netAmount, decimal taxRate)
    {
        return new TaxedPrice
        {
            NetAmount = ApplyRounding(netAmount),
            GrossAmount = ApplyRounding(netAmount.ApplyTax(taxRate))
        };
    }

    public static TaxedPrice FromGross(decimal grossAmount, decimal taxRate)
    {
        return new TaxedPrice
        {
            GrossAmount = ApplyRounding(grossAmount),
            NetAmount = ApplyRounding(grossAmount.RemoveTax(taxRate))
        };
    }

    private decimal ApplyRounding(decimal rawValue)
        =&gt; decimal.Round(rawValue, 2, MidpointRounding.AwayFromZero)

}
</code></pre>
    </div>