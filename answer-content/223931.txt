<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Style</h3>

<p>The indentation seems to be consistent, but the other whitespace isn't. Take just the first three lines:</p>

<blockquote>
<pre><code>        private static int  FindMaxInsert(string str)
        {
            int amount =0;
</code></pre>
</blockquote>

<p>The double-space before the method name is unnecessary, but for consistency there should be a space after the <code>=</code> in the third line.</p>

<p>Some <code>else</code> lines have a blank line before them, and others don't. I would remove all of those blank lines.</p>

<p>Four blank lines before the return statement is definitely excessive.</p>

<hr>

<p><code>amount</code> is not an informative name. Amount of what?</p>

<hr>

<blockquote>
<pre><code>            if (str.Contains("aaa"))
            {
                amount = -1;
            }

            else
            {
                ... 59 lines ...
            }




            return amount;
</code></pre>
</blockquote>

<p>If you use an early return in the first statement, you can lose a level of indentation from 90% of the method.</p>

<hr>

<blockquote>
<pre><code>        Console.WriteLine("dog " + FindMaxInsert("dog"));
        Console.WriteLine("aabab " + FindMaxInsert("aabab"));
        Console.WriteLine("aa " + FindMaxInsert("aa"));
        Console.WriteLine("a " + FindMaxInsert("a"));
        Console.WriteLine("Empty " + FindMaxInsert(String.Empty));
</code></pre>
</blockquote>

<p>Avoiding repetition is what <code>for</code> loops are for.</p>

<p>Tests aren't very useful if you don't compare the observed result to the expected result. What do you expect for each of these? (IMO it fails the last one).</p>

<p>Where's the test case for a substring of <code>"aaa"</code> giving an output of <code>-1</code>?</p>

<h3>Correctness</h3>

<p>Here's a couple of test cases which this code fails:</p>

<pre><code>Assert(FindMaxInsert("bbbbbb") == 14);
Assert(FindMaxInsert("babababa") == 6);
</code></pre>

<p>There's a lot of case analysis going on, and I'm not going to try to find the bug. Quicker to rewrite the whole thing using a simpler approach: consider pairs of non-<code>a</code> characters rather than triples of arbitrary characters.</p>
    </div>