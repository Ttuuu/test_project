<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I will discuss 2 points to your code: Readability/Cleanliness and Robustness</p>

<p>From the Readability/Cleanliness perspective I'd argue that your code is the easiest to read vs any answer you've received thus far. I knew in 3 seconds the purpose of all of that code and wouldn't need any comments to further explain it. </p>

<p>From the robustness perspective it all boils down to the use case of the code. If you know without a doubt that you will only ever see positive sized numbers &lt;1024 TB I'd say again your code is fine. If you wanted to handle file size differences (as in 100kb-150kb = -50kb) or file sizes beyond 1023TB then clearly you need to enhance your approach. </p>

<p>To handle the more general case this question has already been answered here as well: <a href="https://stackoverflow.com/questions/281640/how-do-i-get-a-human-readable-file-size-in-bytes-abbreviation-using-net/4975942#4975942">https://stackoverflow.com/questions/281640/how-do-i-get-a-human-readable-file-size-in-bytes-abbreviation-using-net/4975942#4975942</a> </p>

<p>As a side note it would appear size=0 would return [0,] but size of 1 would return [1,Bytes]. You may want to return [0,Bytes]</p>
    </div>