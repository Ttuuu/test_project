<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Since ES5 (which all browsers support nowadays) is <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some" rel="nofollow noreferrer"><code>array.some()</code></a>. It works in the same way as Lodash's/Underscore's <code>_.some()</code> but without the library.</li>
<li>If you target ES6, you can further trim your code using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions" rel="nofollow noreferrer">shorthand object methods</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions" rel="nofollow noreferrer">arrow functions</a>. </li>
<li>Your <code>object.trim()</code> can blow up if <code>object.name</code> is truthy but not a string. Do a <code>typeof obj.name === 'string'</code> instead of a truthy check. If it is always guaranteed to be a string, the truthy check is redundant since a trimmed empty string will always be empty.</li>
</ul>

<p>So your code could be as simple as:</p>

<pre><code>has_competitors(){
  return this.competitors.some(obj =&gt; obj.name.trim() !== '') 
}
</code></pre>
    </div>