<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd suggest the following changes:</p>

<ol>
<li>Use a loop instead of recursion</li>
<li>Use <code>for/of</code> instead of <code>.forEach()</code></li>
<li>push a single value instead of using an array with one element in it</li>
<li>cache the lowest value so far so you don't have to constantly refetch it on every comparison</li>
<li>Use a temporary array for the sort so the function is non-destructive to the source array (consistent with most array methods)</li>
<li>Use <code>const</code> where you can.</li>
</ol>

<p>Code:</p>

<pre><code> /**
     * selectionSort
     * @param toSort (not modified)
     * @param sorted (new sorted array)
     * @returns {Array}
     */
    function selectionSort(toSort, sorted = []) {
        if (!toSort.length) {
            return sorted;
        }
        // make copy so we don't modify source
        const sortData =  toSort.slice();

        while (sortData.length) {
            const minIndex = findMinimum(sortData);
            sorted.push(sortData[minIndex]);
            // remove min item from data left to be sorted
            sortData.splice(minIndex, 1);
        }
        return sorted;
    }

    function findMinimum(arr) {
        let minIndex = 0, minValue = arr[0];
        for (const [index, item] of arr.entries()) {
            if (item &lt; minValue) {
                minIndex = index;
                minValue = item;
            }
        }
        return minIndex;
    }


    const testCase = [64, 25, 12, 22, 11]
    const answer = selectionSort(testCase);
    console.log(answer);
</code></pre>
    </div>