<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some ideas:</p>

<ul>
<li><code>is_prime_number</code> doesn't scale well when dealing with bigger primes - the range of odd numbers 3..sqrt(number) is going to get very big. You'd be better off implementing a more sophisticated algorithm such as <a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes" rel="nofollow noreferrer">Eratosthenes' Sieve</a>, where the cost of checking primality of subsequent primes grows slower.</li>
<li><code>sum_prime_factors</code> duplicates the implementation of primality checking from <code>is_prime_number</code>.</li>
<li><p><code>[print_output(item, 1) for item in map(int, sys.stdin) if item != 4]</code> is awkward. I would use a <code>main</code> method and any of the common</p>

<pre><code>if __name__ == '__main__':
    main()
</code></pre>

<p>patterns for making the code reusable and testable.</p></li>
</ul>
    </div>