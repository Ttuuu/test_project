<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In my opinion this can be greatly simplified. First, there is no need for this to be a recursive function (which are seldom the best choice in Python due to the maximum recursion depth). Just make it an infinite loop.</p>

<p>Second, all of your options are almost the same. You ask if the file is on the desktop, then for the file name/path and then do something with that path. So, just define a function for that first part:</p>

<pre><code>USERNAME = "alpha"

def ask_file_name():
    user_input = input("Is this file located on the desktop? y/n")
    if user_input.lower() == "y":
        path = "/home/{}/Desktop/{}"
        return path.format(USERNAME, input("What is the name of the file?"))
    return input("Enter the full path for the file")
</code></pre>

<p>Then your main function becomes rather short:</p>

<pre><code>MENU = """
What would you like to do?

1)Read a file
2)Append to an existing file
3)Write to a new file
4)Delete a file
5)Go back/n
&gt;&gt;&gt; """

def option_two():
    """Option 2, File Creation/Editing:

    Asks the user what they would like to do
    They can view, append, write, or delete a file
    """

    while True:
        try:
            user_input = int(input(MENU))
        except ValueError:
            print("Invalid input, try again\n\n")
            continue
        user_message(user_input)
        path = ask_file_name()

        if user_input == 1:
            #View a file
            if check_path(path):
                open_file(path)
            else:
                continue
        elif user_input == 2:
            #append to a file
            if check_path(path):
                append_file(path)
            else:
                continue
        elif user_input == 3:
            #Write a new file
            write_file(path)
        elif user_input == 4:
            #Delete a file
            delete_path(path)
        print("Moving back to main")
        return
</code></pre>

<p>Note that <code>check_path</code> should work without having a boolean variable passed in and <code>delete_path</code> should probably just call <code>check_path</code> internally (or use <code>try...except</code>). </p>

<p>I also changed your comment under the function definition to conform to Python's <a href="https://www.python.org/dev/peps/pep-0257/" rel="noreferrer">docstring convention</a>.</p>
    </div>