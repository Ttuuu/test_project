<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can solve anything without globals. If not, you are doing wrong. If you are using globals, the debugging will be a nightmare. In the <code>checkGuess()</code> you can use single ifs instead of elif. The return will terminate the function and after the first 3 check, the last one can't be anything else than grater than <code>the_number</code>.
If you want to check a variable not to be null/zero/empty/None, you can use simply the <code>if var:</code> condition. It will be False if <code>var</code> is null/zero/empty/None.
In <code>getInput()</code> you can get the first value before the loop. If you get inside the loop and you use an additional if, then there will be 2 useless condition which slow down the app (I know only a little but...).</p>

<pre><code>#!/usr/bin/python
from random import randint


def checkGuess(guess, the_number):
    if guess &lt;= 0:
        return False
    if guess == the_number:
        return True
    if guess &lt; the_number:
        print "The number is HIGHER."
    else:
        print "The number is LOWER."

    return False


def isValid(guess):
    return guess and guess.isdigit()


def getInput(guesses):
    input = raw_input("(#" + str(guesses) + ") Guess a number: ")
    while not isValid(input):
        print "Please guess an integer!"
        input = raw_input("(#" + str(guesses) + ") Guess a number: ")

    return int(input)



def runGame(min, max):
    the_number = randint(min, max)
    guesses = 0
    guess = 0

    print "I'm thinking of a number between " + str(min) + " and " + str(max) + " ..."

    while not checkGuess(guess, the_number):
        guesses += 1
        guess = getInput(guesses)

    print "YOU WON!"


def printTitle():
    print "----------------------"
    print "----- MASTERMIND -----"
    print "----------------------"
    print 


if __name__=='__main__':
    printTitle()
    runGame(1, 100)
</code></pre>
    </div>