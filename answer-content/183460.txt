<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some of the things we can do to improve performance:</p>

<ul>
<li><p>install <a href="http://lxml.de/" rel="nofollow noreferrer"><code>lxml</code></a> and replace <code>import xml.etree.ElementTree as ET</code> with:</p>

<pre><code>from lxml import etree as ET
</code></pre>

<p>this should seriously improve the XML parsing speed</p></li>
<li>you can also save on the network as well by re-using a <a href="http://docs.python-requests.org/en/master/user/advanced/#session-objects" rel="nofollow noreferrer"><code>requests.Session()</code> instance</a></li>
</ul>

<p>You can also use <code>enumerate()</code> instead of handling <code>ID</code> manually. And, I am not sure you need that <code>for node in tree</code> loop at all.</p>

<p>The first part of the code hence can look something like:</p>

<pre><code>from lxml import etree as ET

artists = {}

url = 'http://ws.audioscrobbler.com/2.0/?method=geo.gettopartists&amp;country=spain&amp;page={page}&amp;api_key={api_key}'
with requests.Session() as session:
    for page in range(1, 3):
        response = session.get(url.format(page=page, api_key=api_key)
        tree = ET.fromstring(response.content)
        for index, artist in enumerate(tree.findall('artist')):
            artists[index] = {
                'id': index,
                'name': artist.findtext('name'),
                'mbid': artist.findtext('mbid')
            }
</code></pre>

<p>Note the use of <code>findtext()</code> shortcut.</p>

<p>I am also not absolutely sure about the <code>artists</code> data structure - why not using a list instead?</p>
    </div>