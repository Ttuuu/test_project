<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I am a fan of concise and simple code. If Streams are already used for printing why not also do the sorting with them. In that way, converting from <code>String</code> to <code>int</code> and back is unnecessary. However, it does only work as long as you have solely single digits in the input. Another advantage is that you do not need the number of input elements 'N' separately as an input value before the actual data. That's why I am going to ignore it by putting a <code>scan.nextLine();</code> at the beginning of the <code>while</code> loop. </p>

<p>This would be the complete code doing what you want then:</p>

<pre><code>import static java.util.stream.Collectors.joining;
import java.util.Arrays;
import java.util.Scanner;

class GFG {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int numTests = scan.nextInt(); 
        scan.nextLine(); 
        while (numTests-- &gt; 0) {
            scan.nextLine();
            String[] inputs = scan.nextLine().split(" ");
            System.out.println(Arrays.stream(inputs).sorted().collect(joining(" ")));
        }
        scan.close();
    }
}
</code></pre>

<p>Another remark: You should always close objects like the <code>BufferedReader</code> or the <code>Scanner</code> used in the other proposed solutions.</p>
    </div>