<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The loop is rather complicated. It is generally better to use simpler logic if possible, as that makes the loop simpler to reason about. For example, you can use <code>Integer.compare</code> to remove a lot of the logic from your loop.</p>
<pre><code>public static boolean IsMonotonic(int[] numbers) {
    int lastCmp = 0;

    for (int i = 1; i &lt; numbers.length; i++) {
        int cmp = Integer.compare(numbers[i], numbers[i - 1]);

        if (lastCmp == 0) {
            lastCmp = cmp;
        } else if (cmp != 0 &amp;&amp; ((cmp &gt; 0) != (lastCmp &gt; 0))) {
            return false;
        }
    }

    return true;
}
</code></pre>
<p>In each iteration the <code>cmp</code> variable is zero if the two numbers are equal, and either positive or negative depending on whether there was an increase or decrease.</p>
<p>When <code>lastCmp</code> is zero, we have yet to see an increase or decrease, i.e. all integers have been equal. If <code>lastCmp</code> is nonzero, then we have seen either an increase or decrease. If the sequence is not monotonic, we will eventually reach a pair that moved in the opposite direction from the first change, which is what the second condition will detect.</p>
<p>If the list is shorter than two elements, then the loop doesn't run at all, and just returns true.</p>
    </div>