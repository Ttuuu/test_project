<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As you were asking for <em>"less division"</em>... Here's a different approach with <strong>absolutely no division, multiplication or modulo operations</strong>. We have two counters <code>t</code> (for increment three) and <code>f</code> (for increment five), and update them in a single <code>while</code> loop. Due to the increments it's guaranteed <code>t</code> and <code>f</code> will always be numbers divisible by 3 resp. 5. Now we just have to pick which counter to update (the lower one), and to handle the case when both counters occasionally meet :)</p>

<p>(You can avoid the <code>std::min</code>-line and put the addition to <code>result</code> into the <code>if/else if/else</code>-part, but with this it's easier to understand what happens.)</p>

<pre><code>#include &lt;iostream&gt;

int main() {
  unsigned t=0, f=0;
  unsigned result=0;
  while (t&lt;1000) {
    result+=std::min(t, f);

    if (t&lt;f) t+=3;
    else if (f&lt;t) f+=5;
    else { // f==t
      t+=3;
      f+=5;
    }
  } 
  std::cout &lt;&lt; "Result: " &lt;&lt; result &lt;&lt; std::endl;
  return(0);
}
</code></pre>
    </div>