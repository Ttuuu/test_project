<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have never used Elixir in my life until seeing this question, so my feedback is very limited and I probably shouldn't be putting an answer on here. However, there are a few ways it could be simplified:</p>

<ul>
<li><p>the module <code>lstat(path, opts \\ [])</code> reads information about a path, returns a <code>FileStat</code> struct which has a <code>type:</code> field which can be <code>type: :device | :directory | :regular | :other | :symlink</code>; this could be used to determine what the path is (and whether to use <code>-r</code>), and if there is an error it means that the path does not exist (thus adding in the error handling)</p></li>
<li><p>in the case <code>{resp, exit_code} -&gt;</code> instead of checking the error message contents via <code>String.contains?</code>, do the switching based on exit code and then return the appropriate error messages.</p></li>
<li><p>in the case <code>{resp, exit_code} -&gt;</code>, I'd add a few extra error-handlers for statuses (for example directory not found on destination, invalid credentials, etc.)</p></li>
<li><p>for the inputs (user and ip address), a regex could be used to ensure sanity (the ip address looks like an ip, the username is not blank, etc.)</p></li>
<li><p>the case <code>true -&gt; {:error, :errunkown, exit_code}</code> could be replaced with <code>_ -&gt; {:error, :errunkown, exit_code}</code> as <code>_</code> appears to be a fall through (I'm unsure about this)</p></li>
</ul>
    </div>