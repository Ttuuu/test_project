<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not sure if you really desire that output. But I'll do some refactoring to show what your code does.</p>

<p>In your code</p>

<pre><code>def create_game_data():
    columns = {}
    for column in columnNames.keys():
        columnValues = []
        for event in events:
            columnValues.append(columnNames[column]) if column in columnNames.keys() else columnValues.append("NA")
        columns[column] = columnValues
    return columns
</code></pre>

<p>there is an if condition always true. <code>if column in columnNames.keys()</code> is always true for your loop <code>for column in columnNames.keys().</code> So we skip that test</p>

<pre><code>def create_game_data():
    columns = {}
    for column in columnNames.keys():
        columnValues = []
        for event in events:
            columnValues.append(columnNames[column])
        columns[column] = columnValues
    return columns
</code></pre>

<p>Next we find that you loop over the events without using them. So we could safely write </p>

<pre><code>def create_game_data():
    columns = {}
    for column in columnNames.keys():
        columnValues = []
        for _ in events:
            columnValues.append(columnNames[column])
        columns[column] = columnValues
    return columns
</code></pre>

<p>This is equivalent to </p>

<pre><code>def create_game_data():
    columns = {}
    for column in columnNames.keys():
        columns[column] = [columnNames[column]] * len(events)
    return columns
</code></pre>

<p>Now we chose to iterate over the dict in a key-value manner</p>

<pre><code>def create_game_data():
    columns = {}
    for column, name in columnNames.items():
        columns[column] = [name] * len(events)
    return columns
</code></pre>

<p>Which is easily written as comprehension</p>

<pre><code>def create_game_data():
    return {k:[v] * len(events) for k, v in columnNames.items()}
</code></pre>

<p>Is that really what you want?</p>
    </div>