<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your <code>if(head == null || k &lt; 0)</code> special case is unnecessary, since it is covered by the <code>if(k &gt; map.size() -1)</code> test.  You should also <strong>never</strong> omit the "optional" braces for a multi-line block.</p>

<p>Actually, the <code>if(k &gt; map.size() -1)</code> test could also be eliminated, if you used <a href="https://docs.oracle.com/javase/10/docs/api/java/util/Map.html#getOrDefault%28java.lang.Object,V%29" rel="nofollow noreferrer"><code>Map.getOrDefault(â€¦, -1)</code></a>.</p>

<p>The loop would be more easily recognized if written as a <code>for</code> loop.</p>

<pre><code>public static int getKthToLastElement(LinkedListNode head, int k) {
    int index = 0;
    Map&lt;&gt; map = new HashMap&lt;Integer, Integer&gt;();
    for (LinkedListNode n = head; n != null; n = n.next) {
        map.put(index++, n.data);
    }
    return map.getOrDefault(map.size() - 1 - k, -1);
}
</code></pre>

<p>I think that converting the linked list to an <code>ArrayList</code> would be better than converting it to a <code>HashMap</code>.  You would then be converting a cumbersome linked list into a kind of list that is useful and idiomatic in Java.</p>
    </div>