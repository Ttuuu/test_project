<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This mostly a response to your comment, but I feel it really shouldn't be another comment.</p>

<blockquote>
  <p>I guess I should have also done the following (?): 1) returned a helpful error message if a non-string argument was given to get_anagrams() and created a unit test for this 2) Created unit test for get_anagrams() with empty string argument (although I think this is the same as the unit test test_incorrect_word()) 3) Created a unit test for when initialise() is not called first (so self.map doesn't exist). However I think this is also the same as test_incorrect_word()</p>
</blockquote>

<p>I disagree on all those cases.</p>

<ol>
<li>I would expect to get raised a TypeError in this case. A wrong argument is an exceptional case, and exceptions are the best way to handle it. Arguably, getting a non-string here is a programming error, though in rare cases it might be a user error. </li>
<li>This should be able to be handled perfectly fine with an ordinary response. The response to any string is a list of anagrams. Since there are no anagrams to an empty string, a list with just an empty string is the correct response, just like the response to any other word without anagram is just a list containing that word.</li>
<li>You should still do that work in <code>__init__</code>. However, you might want to supply a special testing file upon instantiation for tests, containing just the anagrams you test on. For tests that don't care about reading the file, you can give it an empty file. You can import from the <a href="https://docs.python.org/3/library/tempfile.html" rel="nofollow noreferrer">tempfile</a> module for this. You can also hardcode the contents of your testing file, dump it into a tempfile, and use that for testing the tests that DO need a file.</li>
</ol>
    </div>