<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>jQuery</h2>

<p>Your code uses jQuery, but you don't seem to be using any features of jQuery that offer any advantages over the DOM - unless you need to target older browsers you can remove your jQuery dependency and thus make your code better: faster (less abstraction, fewer dependencies to download), more portable, more future-proof, etc).</p>

<p>Simply replace <code>$("#id")</code> with <code>document.getElementById</code> and <code>$(selector)</code> with <code>document.querySelectorAll</code> (you can alias it for brevity if necessary: <code>var q = document.querySelectorAll;</code>).</p>

<h2>Time-safety</h2>

<p>The <code>moment()</code> function, when called, returns the current time value the moment the function is called - your code keeps on calling the <code>moment()</code> function which could return different values each time it's called (if there's a long-enough delay in the interpreter, or if your code executes on a time-unit boundary) - issues like these can cause bugs if midnight at the end of a month happens while your function is executing.</p>

<p>For this reason, you should get the value of "now" only once, at the start of your function, and perform all operations on that value (you should treat it as an immutable value too, even though <code>Date</code> is mutable, as that's best-practice).</p>

<pre><code>var now = moment();
// ...
date1.value = now.add('days').format('yada');
</code></pre>

<h3>Culture-sensitivity</h3>

<p>You're using the <code>dd-MM-yyyy</code> pattern - only a few countries use dashes between the components and it is not ISO-8601 compliant. If this is intentional then that's fine - but if your users are coming from a variety of different countries (with their own date-formatting preferences) then you have two choices:</p>

<ol>
<li><p>Use ISO-8601 (<code>yyyy-MM-dd HH:mm:ss</code>) which is unambiguous and as a bonus: is lexicographically sortable.</p></li>
<li><p>Use Moment's built-in localization ("i18n") support: <a href="http://momentjs.com/docs/#/i18n/" rel="nofollow noreferrer">http://momentjs.com/docs/#/i18n/</a></p></li>
</ol>

<p>To respect your users' settings, do this:</p>

<ol>
<li>Get <code>moment-with-locales.js</code> from their website</li>
<li><p>Modify your initialization code:</p>

<pre><code>// Get the ISO culture settings for the current user, e.g. "en-US" or "es-MX":
var locale = window.navigator.userLanguage || window.navigator.language;

// Configure moment:
moment.locale( locale );
</code></pre></li>
</ol>

<p>When using locales, use the "locale formats" rather than specific formats. Moment uses <code>"L"</code> to denote a "numeric date" (e.g. "09/07/2016" in en-GB, "07/09/2016" in en-US, or "2016-07-09" in ISO-8601).</p>

<h2>Everything</h2>

<p>So your code would become:</p>

<pre><code>var locale = window.navigator.userLanguage || window.navigator.language;
moment.locale(locale);

var selectDate = document.getElementById('publicdate');
selectDate.addEventListener('change', onSelectDateChange);

function onSelectDateChange(e) {
    var date1 = document.getElementById('date1');
    var date2 = document.getElementById('date2');
    var now = moment();
    if( selectDate.value == "today" ) {
        date1.value = now.add('days').format('L');
        date2.value = now.add('days').format('L');
        date1.setAttribute('disabled', 'disabled');
        date2.setAttribute('disabled', 'disabled');
    }
    else if( value == "yesterday" ) {
        // and so on...
    }
}
</code></pre>
    </div>