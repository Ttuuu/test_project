<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It can be called a <strong>precomputed local cache immutable field array</strong>. </p>

<p>It is <strong>fine</strong> and definitely is better than computing the value every time.</p>

<hr>

<p>While I say immutable, I do not mean that it is deeply immutable - all of the values can be changed, only the array reference itself is immutable. If you need to pass it to methods that you do not fully trust, then you can pass a copy - if they mess with the values it is their local copy of it.</p>

<p>Please make sure that you use the correct initial values in the first place. To do so you can compute them with: <a href="https://www.wolframalpha.com/input/?i=N%5B1%2F2%5E(0..15),+15%5D" rel="nofollow noreferrer">https://www.wolframalpha.com/input/?i=N%5B1%2F2%5E(0..15),+15%5D</a></p>

<pre><code>N[1/2^(0..15), 15]
</code></pre>

<p>this would produce values</p>

<pre><code>{
  1.00000000000000, 
  0.500000000000000, 
  0.250000000000000, 
  0.125000000000000, 
  0.0625000000000000, 
  0.0312500000000000, 
  0.0156250000000000, 
  0.00781250000000000, 
  0.00390625000000000, 
  0.00195312500000000, 
  0.000976562500000000, 
  0.000488281250000000, 
  0.000244140625000000, 
  0.000122070312500000, 
  0.0000610351562500000, 
  0.0000305175781250000
}
</code></pre>

<p>The type <strong>double</strong> is approximated value and has the maximum of 15 places you can trust also referred to as <strong>significant digits</strong>. Counting starts not from decimal places, but from the highest value. For type <strong>float</strong> it is just 7 and <strong>decimal</strong> is 28. That is why I showed just 15 digits.</p>
    </div>