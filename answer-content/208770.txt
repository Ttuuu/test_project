<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Expanding on the answer provided by unherz;</p>

<h2>Validate the programmer</h2>

<p>Sometimes we make mistakes so you should check the <code>$settings</code> provided by the programmer are correct as you require them to pass at least two parameters <code>action</code> &amp; <code>controller</code> so I would add a method <code>validateRouteSettings</code> I also implemented unherz answer to show how early returns (exceptions in this case) would look</p>

<h2>Naming</h2>

<p>You call object methods "actions" which is in-correct, should try to be consistent in naming structures</p>

<p>Any way here an updated implementation</p>

<pre><code>&lt;?php

class Router {

    protected $routes = [];
    protected $routeMethods = [];

    public function get(string $route, array $settings) :void {
        $this-&gt;add($route, $settings, ['GET']);
    }

    public function post(string $route, array $settings) :void {
        $this-&gt;add($route, $settings, ['POST']);
    }

    public function add(string $route, array $settings, array $methods) :void {
        $this-&gt;validateRouteSettings($route, $settings);
        $this-&gt;routes[$route] = $settings;
        $this-&gt;routeMethods[$route] = $methods;
    }

    private function validateRouteSettings(string $route, array $settings) :bool
    {
        if(!isset($settings["controller"])){
            throw new \Exception("Missing controller for $route", 1);
        }elseif(!isset($settings["method"])){
            throw new \Exception("Missing method for $route", 1);
        }

        return true;
    }

    public function dispatch() :void {
        $requestUrl = $_SERVER['QUERY_STRING'];

        if (!array_key_exists($requestUrl, $this-&gt;routes)) {
            throw new \Exception('404 not found', 1);
        }

        $route = $this-&gt;routes[$requestUrl];
        $methods = $this-&gt;routeMethods[$requestUrl];
        $method = $_SERVER['REQUEST_METHOD'];

        if (!in_array($method, $methods)) {
            throw new \Exception('Method ' . $method . ' not allowed.', 1);
        }

        $controller = $route['controller'];

        if (!class_exists($controller)) {
            throw new \Exception('We couldn\'t find controller \'' . $controller . '\'', 1);
        }

        $class = new $controller(); // grab from di cache when we have one

        $method = $route['method'];

        if (!method_exists($class, $method)) {
            throw new \Exception('We couldn\'t find method \'' . $method . '\ in controller \'' . $controller . '\'', 1);
        }

        $class-&gt;$method();
    }
}
</code></pre>
    </div>