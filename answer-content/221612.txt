<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I often use the Index Match function in daily reporting tasks. I was
  looking for a quicker way to utilize Index Match, as I find the
  formula cumbersome to enter.</p>
</blockquote>

<p>However, a quick look at the form, implementing it into any workbook/application will be cumbersome and any user has to perform many steps - most accomplished Excel users will complete and auto-fill an INDEX/MATCH series in the time it would take to load and complete the form!</p>

<p>Your logic and general flow requires review - I am not going to go through it all. Try to understand your decision points and how this flows through each step. Break things down into helper functions if required. It looks like you coded this on the run and have not done your own review.</p>

<p>As an example, let us take the last event handler:</p>

<pre><code>Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then
        Dim ans As VbMsgBoxResult
        ans = MsgBox("Are you sure you want to exit?", vbYesNo, "???")
        If ans = vbYes Then GoTo CleanExit Else Cancel = True
    End If
CleanExit:
End Sub
</code></pre>

<p>Firstly, anytime you use <code>GoTo</code> you raise a huge code stink. Flag it, review it! And then work out if your really need it. I doubt you ran through this routine in your mind because the last effective statement in the code says to go to the next line!</p>

<p>You also assign a Boolean in a complicated way. Let me rewrite this one for you:</p>

<pre><code>Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then
        Dim ans As VbMsgBoxResult
        ans = MsgBox("Are you sure you want to exit?", vbYesNo, "???")
        Cancel = Not (ans = vbYes)
    End If
End Sub
</code></pre>

<p>Oh, and <code>Option Explicit</code> at the top of modules, always. Not sure if you have used it in this case. </p>

<p>You haven't provided an example of how the results of the form would be used. Why so many public variables - the easy approach is to create a public property that returns a string that can be put into a formula property of a range.</p>
    </div>