<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you are allowing console input, you may want to either validate the input format or catch exceptions or both. Also, I made some adjustments to handle prompt better and to be more PEP8 compliant for 80 chars. These modifications are nit picks aside from the docstring which is helpful when having documentation autogenerated (useful for larger projects).</p>

<pre><code>#!/usr/bin/env python
"""
My first python script.

This is a script to demonstrate how to ask for input, follow PEP python style,
and to learn the good methods of python.  I also learned how to leverage
Stack Exchange to get code review feedback.
"""

import datetime

# global constants usually are in all CAPS
DATE_FORMAT = "%d/%m/%y"
DATE_FORMAT_FOR_HUMANS = "DD/MM/YY"
TIME_FORMAT = "%H:%M:%S"
TIME_FORMAT_FOR_HUMANS = "Hour:Minute:Second"


def prompt_for_user_input():
    """Choose the date or time format to display."""
    prompt = (
        """
Please choose one of the options below and enter at the prompt:

1 - Show the date ({0})
2 - Snow the time ({1})
3 - Snow both date &amp; time ({0} {1})

Selection): """.format(DATE_FORMAT_FOR_HUMANS, TIME_FORMAT_FOR_HUMANS)
    )
    try:
        selection = int(input(prompt))
    except ValueError as nonIntErr:
        print("\nYou selected a non-integer, please follow\n {}\n ERR={}"
              .format(prompt, nonIntErr))
        exit(1)
    return selection


def print_datetime_from_input(user_input, datetime_value):
    """Output the datestring that was requested."""
    formatted_date = get_formatted_date(datetime_value)
    formatted_time = get_formatted_time(datetime_value)

    if user_input == 1:
        print(formatted_date)
    elif user_input == 2:
        print(formatted_time)
    elif user_input == 3:
        print(formatted_date, formatted_time)
    else:
        print("You didn't type in 1, 2 or 3!")


def get_formatted_time(datetime_value):
    """Return string format of time based on datetime object."""
    return datetime_value.strftime(TIME_FORMAT)


def get_formatted_date(datetime_value):
    """Return string format of date based on datetime object."""
    return datetime_value.strftime(DATE_FORMAT)


def main():
    """Run main for invocation when run via the terminal."""
    now = datetime.datetime.now()

    print("Welcome to Date and Time!")

    user_input = prompt_for_user_input()
    print_datetime_from_input(user_input, now)


if __name__ == "__main__":
    main()
</code></pre>
    </div>