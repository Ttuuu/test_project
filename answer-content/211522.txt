<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The obvious answer is to look again at the primality testing. There's no need to test divisibility by every number up to the square root: it suffices to test divisibility by the primes up to the sqrt. Add a cache and you'll probably beat the minute. For something even faster, look at precomputing all the primes in one sieve. If you want to avoid hard-coding the limit of the sieve, try segmenting it: E.g. sieve up to 1000, and if you need more then sieve 1001-2000, using your knowledge of the primes up to sqrt(2000); etc.</p>

<p>Then the actual search looks rather complicated, and I'm not sure it isn't doing more work than necessary. Have you tried just storing the pairs as a dict from larger to set of smaller and checking triples of those which pair with the current prime under consideration?</p>
    </div>