<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This review is going to be short, because it will cover ground that has been covered many times in Code Review. Searching previous articles should provide more information.</p>

<ol>
<li>Use <code>Option Explicit</code> at the top of modules every time. Always.
<strong><em>Always</em></strong> (search: Option Explicit).</li>
<li>Properly indent your code for readability and maintainability.
(search: indent code)</li>
<li>Avoid using select and activate unless you particularly want to draw
something to the user's attention.
(<a href="https://stackoverflow.com/questions/10714251/how-to-avoid-using-select-in-excel-vba">https://stackoverflow.com/questions/10714251/how-to-avoid-using-select-in-excel-vba</a>
is a good start as @BigBen noted).</li>
<li>Always fully qualify any reference to Range or Cells. Using a
qualified <code>With</code> block does count. (search: qualify ranges)</li>
</ol>

<p>Once the basics have been addressed, the code itself (as intended, not as currently presented) can then be reviewed. At the moment it is a bit too hard to read.</p>

<p>Why do you have <code>.End</code> three times?</p>

<pre><code>Cells(Rows.Count, 12).End(xlUp).End(xlUp).End(xlUp).Row
</code></pre>

<p>An additional hint is to declare and assign a <code>Workbook</code> and <code>Worksheet</code> object for the book/sheet(s) that you want to manipulate. When using the variable, the VBA IDE Intellisense will function and aid you in useful properties and methods. When not assigned to a variable, these commands (e.g. <code>ActiveWorkbook.Worksheets("WIP extract")</code>) will return a generic Object and the Intellisense does not function.</p>
    </div>