<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If path is always . and force is always true, why are you always setting them? It inhibits readability. </p>

<p>The priority should always be understanding, because well understood code can be made more modular by anyone (e.g. you in the future), but it's far harder to update code that you don't understand. </p>

<p>It's pretty easy to tell what you're doing already though. If you wanted to be minimalist, you functionally have key/value pairs of strings, and could just store them in an array or hashtable to send to New-ItemProperty.</p>

<p>I would personally lay it out like:</p>

<ol>
<li>declare a lambda that adds non-cursor entries</li>
<li>declare a lambda that adds cursor entries</li>
<li>Pipe a table of Key:Value pairs into lambda from step 1</li>
<li>Pipe a table of cursor names to cursor paths into lambda from step 2</li>
</ol>

<p>The reasoning is that:</p>

<ul>
<li>Pretty close to the minimal amount of code</li>
<li>Configuration is at the top of the file: the registry paths, cursor paths, and the mapping of friendly cursor names to paths is in the first two lines</li>
<li>Hashtables are hard to get typos in, and any errors like misspellings should be readily apparent</li>
<li>The hashtables are storing high-level data that can be further mutated later if desired</li>
<li>Non-cursors and cursors appear to be separate classes of data -- cursors always have the same property type, so that should be extrinsic from cursor entries.</li>
</ul>
    </div>