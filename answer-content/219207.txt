<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a tryout I cam up with - <a href="https://godbolt.org/z/JaiSHr" rel="nofollow noreferrer"><code>ConvertToUint8()</code></a>:</p>

<pre><code>#include &lt;immintrin.h&gt; // AVX &amp; AVX2

#define AVX_STRIDE          8
#define AVX_STRIDE_DOUBLE   16
#define AVX_STRIDE_TRIPLE   24
#define AVX_STRIDE_QUAD     32

void ConvertToUint8(unsigned char* mO, float* mI, int numElements, float scalingFctr)
{
    int ii;
    float *ptrInputImage;
    int *ptrOutputImage;

    __m256  floatPx1, floatPx2, floatPx3, floatPx4;
    __m256  scalingFactor;
    __m256i int32Px1, int32Px2, int32Px3, int32Px4;
    __m256i uint8Px1, uint8Px2;
    __m256i *ptrOutputImageAvx;

    for (ii = 0; ii &lt; numElements; ii += AVX_STRIDE_QUAD) {
        ptrInputImage       = mI;
        ptrOutputImageAvx   = (__m256i*)(mO);
        // AVX Pack is 8 Floats (8 * 32 Bit) -&gt; 32 UINT8 (32 * 8 Bit)
        // Hence loading 4 * 8 Floats which will be converted into 32 UINT8

        floatPx1 = _mm256_loadu_ps(ptrInputImage);
        floatPx2 = _mm256_loadu_ps(ptrInputImage + AVX_STRIDE);
        floatPx3 = _mm256_loadu_ps(ptrInputImage + AVX_STRIDE_DOUBLE);
        floatPx4 = _mm256_loadu_ps(ptrInputImage + AVX_STRIDE_TRIPLE);

        ptrInputImage += AVX_STRIDE_QUAD;

        // See https://stackoverflow.com/questions/51778721
        int32Px1 = _mm256_cvtps_epi32(_mm256_mul_ps(floatPx1, scalingFactor)); // Converts the 8 SP FP values of a to 8 Signed Integers (32 Bit).
        int32Px2 = _mm256_cvtps_epi32(_mm256_mul_ps(floatPx2, scalingFactor));
        int32Px3 = _mm256_cvtps_epi32(_mm256_mul_ps(floatPx3, scalingFactor));
        int32Px4 = _mm256_cvtps_epi32(_mm256_mul_ps(floatPx4, scalingFactor));
        uint8Px1 = _mm256_packs_epi32(uint16Px1, uint16Px2); // Saturating and packing 2 of 8 Integers into 16 of INT16
        uint8Px2 = _mm256_packs_epi32(uint16Px3, uint16Px4); // Saturating and packing 2 of 8 Integers into 16 of INT16
        uint8Px1 = _mm256_packus_epi16(uint8Px1, uint8Px2); // Saturating and packing 2 of 16 INT16 into 32 of UINT8
        uint8Px1 = _mm256_permutevar8x32_epi32(uint8Px1, _mm256_setr_epi32(0, 4, 1, 5, 2, 6, 3, 7)); // Permitation for Linear Orderinmg
        _mm256_storeu_si256(ptrOutputImageAvx++, uint8Px1); // Storing 32 UINT8, Promoting the pointer

    }
}
</code></pre>

<p>The code is based on <a href="https://stackoverflow.com/a/51779212/195787">answer of Peter Cordes - How to Convert 32 [Bit] Float to 8 [Bit] Signed <code>char</code></a>?<br>
I'd love to hear thoughts about it.</p>
    </div>