<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have changed my code to use substring and indexOf to extract the text from each string, which has resulted in a 30% performance increase. The memory usage is still on the high end but the method is on its own thread so there is no noticeable performance drop when the gc runs.</p>

<p><strong>Before (With subtitle example)</strong></p>

<pre><code>private static void defineBooks(List&lt;String&gt; paragraphs) {
    ...
Pattern subtitle = Pattern.compile("\\[Subtitle: [^\\[\\]]+]");
    ...
for (int i1 = 0, paragraphsSize = paragraphs.size(); i1 &lt; paragraphsSize; i1++) {
    ...
    Matcher msubtitle = subtitle.matcher(para);
    //...

    Book book = new Book();

    ... 
    //Old subtitle code

    if (msubtitle.find()) {
        book.setSubtitle(msubtitle.group()
                .replaceAll("\\[Subtitle: ", "")
                .replaceAll("]", "")
                .replaceAll("\\s{2,}", " "));
    } else {
        book.setSubtitle("");
    }

    ...

    if (!Objects.equals(book.getId(), "")) {
        books.add(book);
    }
}
</code></pre>

<p><strong>After (along with Doi9t's answer)</strong></p>

<pre><code>private static void defineBooks(List&lt;String&gt; paragraphs) {
    for (String para : paragraphs) {
        ...
        Book book = new Book();
        ...
        String subtitle = fastSubtitle(para);
        book.setSubtitle(subtitle);
        ...
        if (!Objects.equals(book.getId(), "")) {
            books.add(book);
        }
    }
}


private static String fastSubtitle(String para) {
    if (para.contains("[Subtitle:")) {
        try {
            return para.substring(para.indexOf("[Subtitle:") + 10, para.indexOf("]", para.indexOf("Subtitle:")));
        } catch (StringIndexOutOfBoundsException ex) {
            try {
                return para.substring(para.indexOf("[Language:") + 10, para.indexOf("[") - 1);
            } catch (StringIndexOutOfBoundsException ey) {
                return para.substring(para.indexOf("[Language:") + 10, para.length() - 1);
            }
        }
    }
    return "";
}
</code></pre>

<p>I am aware that I could use an if statements in the subtitle method but this does the job.</p>
    </div>