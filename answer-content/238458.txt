<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The Python community favors having just one way to do something. As <a href="https://www.python.org/dev/peps/pep-0020/" rel="nofollow noreferrer">the Zen of Python</a> puts it: </p>

<blockquote>
  <p>There should be one-- and preferably only one --obvious way to do it.</p>
</blockquote>

<p>Other people and packages will be using the <code>logging</code> module, in general. That makes it much easier for your code to interoperate with other packages, use consistent configuration, avoid non-obvious mistakes (like writing error messages to stdout), etc. As such, it's probably to your (and your code's) long-term advantage to use the <code>logging</code> module.</p>

<p>I'll say, one handy tip for logging in this particular case is the <code>exc_info</code> argument to <a href="https://docs.python.org/3/library/logging.html#logging.debug" rel="nofollow noreferrer"><code>.error</code></a>, which makes it easy to log exceptions and stack traces while also printing your own messages.</p>

<p>@Peilonrayz responded first with a couple points that I planned to mention, so I'll just re-affirm those points:</p>

<ol>
<li><p>You should use exceptions with messages properly; don't just log something and move on as if nothing happened. Whoever called your code (I don't care if you're the only one calling your functions) deserves to know that what they asked for didn't happen, and you're begging for bugs if you don't throw an exception to tell them.</p></li>
<li><p>Don't use a pile of if/else statements just to convert an integer into a string for an error message. Use named strings or a dictionary to store this data somewhere else in your code. (Once you do that, it'll make a whole lot more sense to just pass the error message to any handler function rather than have a custom function to look up error codes. This feels very much like an old habit from C/C++; welcome to Python, please don't use error codes that people need to look up, use <a href="https://docs.python.org/3/library/exceptions.html" rel="nofollow noreferrer">one of the many excellent error types</a> initialized with useful messages to communicate errors.)</p></li>
</ol>
    </div>