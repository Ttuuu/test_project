<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Const</h2>

<p>I consider</p>

<pre><code>const char *request_string
</code></pre>

<p>and </p>

<pre><code>free(request_string);
</code></pre>

<p>to be in conflict. If the contract for this function is that it is responsible for freeing the string it was given, it should not be <code>const</code>. Conversely, if you really think it should be <code>const</code>, shift responsibility of freeing it onto the caller.</p>

<h2>Stack allocation</h2>

<p>In C terms, support for dynamic stack allocation of the kind seen in </p>

<pre><code>char full_fifo_path[strlen(FIFO_STORAGE_PATH) + strlen(request_fifo_name) + 1];
</code></pre>

<p>is relatively new. If I were you I would be concerned that a hostile caller could pass a huge string in <code>request_string</code>, which parses into a huge <code>request_fifo_name</code> and blows the stack. As long as you take care to free the memory yourself through the various <code>return</code> paths in this function, I would consider <code>malloc</code> safer.</p>
    </div>