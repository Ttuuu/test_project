<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Looks good. A few nits:</p>

<ol>
<li><p>You might as well use <code>const</code> where you can, and <code>let</code> when that doesn't work. You can avoid <code>var</code> completely.</p></li>
<li><p>Instead of <code>var filePath = 'ImagesToUpload/'</code>-- and then modifying <code>filePath</code> with <code>+=</code>, just set <code>filePath</code> to the correct path immediately, ie. <code>const filePath = 'ImagesToUpload' + file</code>. This is just simpler and easier to read.</p></li>
<li><p>A subtler point: The logs are providing you your only reference to the file mapping onto the server. I'm concerned that these async functions won't necessarily run in order. Consider a huge file followed by a small file. Would the loop of files allow <code>bucket.upload</code> calls to be running at the same time? I would assume so. The small one would complete before the large one. If this happens, it's possible that your log <code>console.log(file)</code> will happen out of sequence with the <code>console.log(publicUrl)</code>. This can be solved by moving the first console <code>log</code> into the loop right before the <code>publicUrl</code> log. </p></li>
<li><p>Unused arguments at the end of the list can be omitted safely in JS, so <code>function( file, index )</code> can be simply <code>function( file)</code>, or even <code>file =&gt;</code> if you use the new ES syntax (which you are)</p></li>
</ol>
    </div>