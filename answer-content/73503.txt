<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>For newer ruby versions</strong></p>

<p>Since Ruby 2.1 keyword arguments are the best option.</p>

<pre><code>def initialize(person:, greeting: "Hello")
end
</code></pre>

<p>Here, person is required while greeting is not. If you don't pass person, you will get an <code>ArgumentError: missing keyword: person</code>.</p>

<p>The semantics of calling a method with keyword arguments are identical to a hash.</p>

<pre><code>Greeter.new(greeting: "Hey", person: "Mohamad")
</code></pre>

<hr>

<p><strong>For older ruby versions</strong></p>

<p>For older versions of Ruby (pre 2.1), one can use fetch<a href="http://www.ruby-doc.org/core-2.1.5/Hash.html#method-i-fetch" rel="nofollow noreferrer"><code>fetch</code></a>.</p>

<p>Using <code>fetch</code> has two advantages:</p>

<ol>
<li>It lets you set default values</li>
<li>It raises an error if you don't specify a default</li>
</ol>



<pre><code>def initialize(options = {})
  @greeting = options.fetch(:greeting, "Hello")
  @person = options.fetch(:person)
end
</code></pre>

<p>If you attempt to instantiate an object without passing a <code>:person</code>, Ruby will raise an error. While <code>:greeting</code> will default to <em>hello</em>.</p>
    </div>