<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Don't use <code>using namespace std;</code> it pollutes the namespace and creates name collisions. Only do this with concrete classes and only within a namespace or cpp file.</p>

<hr>

<p><code>new</code> without <code>delete</code> =&gt; leaks. Instead use smart pointers or store them by value where it makes sense. </p>

<hr>

<p>There is no need to create a class hierarchy for the edges, instead use a enum to differentiate: <code>enum{BIDIR, FROM_1_TO_2, FROM_2_TO_1}</code> and a self referential edge is a <code>BIDIR</code> and nodes 1 and 2 are equal.</p>

<p><code>unordered_set</code> is far from the best data structure, it's slow to iterate over, access is very often a cache miss or two. Instead prefer data structures like <code>std::vector</code> where it is very fast to iterate over.</p>

<p>The best data structure depends a lot on what operations you will be doing on it, which you didn't mention so I can't really judge beyond saying that unordered_set is most likely a bad choice. </p>
    </div>