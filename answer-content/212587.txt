<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>OOP feedback</h2>
<p>The class only has two methods, and one isn't used (you even said so yourself: <code>// not used yet, will be to reposition field</code>). That <code>position</code> method could be called by the constructor, and other parts of the constructor could be moved out into other methods - e.g. one to create the element, set the styles, etc.</p>
<h2>General feedback</h2>
<p>If there is only one element that will contain the map, then perhaps using the <em>id</em> attribute instead of a <em>class</em> name would be more appropriate.</p>
<hr>
<p>DOM queries aren't cheap:</p>
<blockquote>
<p><em>”...DOM access is actually pretty costly - I think of it like if I have a bridge - like two pieces of land with a toll bridge,  and the JavaScript engine is on one side, and the DOM is on the other, and every time I want to access the DOM from the JavaScript engine, I have to pay that toll”</em><br>
    - John Hrvatin, Microsoft, MIX09, in <a href="https://channel9.msdn.com/Events/MIX/MIX09/T53F" rel="nofollow noreferrer">this talk <em>Building High Performance Web Applications and Sites</em></a> at 29:38, also cited in the <a href="https://books.google.com/books?id=ED6ph4WEIoQC&amp;pg=PA36&amp;lpg=PA36&amp;dq=John+Hrvatin+%22DOM%22&amp;source=bl&amp;ots=2Wrd5G2ceJ&amp;sig=pjK9cf9LGjlqw1Z6Hm6w8YrWOio&amp;hl=en&amp;sa=X&amp;ved=2ahUKEwjcmZ7U_eDeAhVMGDQIHSfUAdoQ6AEwAnoECAgQAQ#v=onepage&amp;q=John%20Hrvatin%20%22DOM%22&amp;f=false" rel="nofollow noreferrer">O'Reilly <em>Javascript</em> book by Nicholas C Zakas Pg 36</a>, as well as mentioned in <a href="https://www.learnsteps.com/javascript-increase-performance-by-handling-dom-with-care/" rel="nofollow noreferrer">this post</a></p>
</blockquote>
<p>Bearing in mind he said that ~10 years ago and browsers have come a long way, it is still wise to consider. It is best to store those references in a variable (e.g. <code>const mapContainer = $('.map-container')</code>) and utilize those whenever needed later.</p>
<hr>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" rel="nofollow noreferrer"><code>const</code></a> can be used for any variable that doesn't get re-assigned - e.g. <code>newField</code>. That way there won't be any accidental re-assignment.</p>
<hr>
<p>The <code>switch</code> statement seems excessive for two cases (including the default) - it could easily be replaced by a simple <code>if</code>/<code>else</code> chain</p>
    </div>