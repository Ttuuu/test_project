<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Only constants should be written uppercase (and might contain underscores). Other variable names should not contain underscores rather use camelcase (e.g. apiUrl).</p>

<p>Constants (in your case <code>AND</code>) should be declared final static, so Java only allocate memory once for the value (and not for every new object).</p>

<p>Use explicit access modifiers for your variables and not the default one. In your case: <code>private</code>.</p>

<p>The usage of blank lines in your setXXX methods are not consistent. I wouldn't use any blank lines at all in those methods but if you want to use them, use them consistently.</p>

<p>Don't use underscores in your method names. </p>

<p>Sometimes you surround the plus operator (+) with spaces, sometimes you don't. Do it consistently. Preferable surrounded by spaces.</p>

<p><code>setCity_id</code> and <code>setCity_name</code> are no setters. They add something to a string. Either handle it like the <code>setAPI_KEY</code> method where you are storing the value in a variable which you later use to concatenate the string. Or rename the method to e.g. <code>addCity_name</code> to make it clear that there's a difference.</p>

<p>You are concatenating a string with the plus operator here:</p>

<pre><code>api_url.append("APPID="+API_KEY);
</code></pre>

<p>That's inconsistent. <code>API_KEY</code> should be appended on its own. Beside that since Java 9 it's most of the times better to use the plus operator instead of a StringBuffer (<a href="https://dzone.com/articles/jdk-9jep-280-string-concatenations-will-never-be-t" rel="nofollow noreferrer">https://dzone.com/articles/jdk-9jep-280-string-concatenations-will-never-be-t</a>)</p>
    </div>