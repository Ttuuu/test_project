<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://docs.oracle.com/javase/9/docs/api/java/lang/ClassLoader.html#getResourceAsStream-java.lang.String-" rel="noreferrer"><code>ClassLoader.getResourceAsStream()</code></a> throws a <code>NullPointerException</code> if the given name is null, something you can easily check. <a href="https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#readAllBytes--" rel="noreferrer"><code>InputStream.readAllBytes()</code></a> does not throw a <code>NullPointerException</code>, and neither does instatiating the String. </p>

<p>So basically, the null exception will happen if and only if <code>fileName</code> is null, or if the resource is not found and therefore resource is null; you can easily check both without catching an exception:</p>

<pre class="lang-java prettyprint-override"><code>private String getResourceContent(String fileName) throws IOException {
    if (fileName == null) {
        // now what?
    }
    try (InputStream resource = ErrorResource.classLoader.getResourceAsStream(fileName)) {
        if (resource == null) {
            // now what?
        }
        return new String(resource.readAllBytes(), StandardCharsets.UTF_8);
    }
}
</code></pre>

<p>The question now is what you want to do if <code>fileName</code> or <code>resource</code> is null. This depends on how you want your function to be used; in my opinion, you should expect the user to give a file name that is not null, so throw a <code>NullPointerException</code> if that is not the case. In the <code>resource</code> case, you could use your custom exception for that.</p>

<p>Now, what if <code>readAllBytes()</code> throws an exception? You can either let it propagate to the caller (like it's happening now) or use <code>ErrorDescriptorException</code> as a wrapper (but maybe this makes fortify complain again):</p>

<pre class="lang-java prettyprint-override"><code>private String getResourceContent(String fileName) throws ErrorDescriptorException {
    if (fileName == null) {
        throw new NullPointerException();
    }
    try (InputStream resource = ErrorResource.classLoader.getResourceAsStream(fileName)) {
        if (resource == null) {
            throw new ErrorDescriptorException(
                String.format("Error loading Error description data from Resource file [%s].", fileName));
        }
        return new String(resource.readAllBytes(), StandardCharsets.UTF_8);
    }
    catch (IOException | OutOfMemoryException e) {
        throw new ErrorDescriptorException(
                String.format("Error loading Error description data from Resource file [%s].", fileName), e);
    }
}
</code></pre>
    </div>