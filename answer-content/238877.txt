<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It's better to use a <strong>System.Timers.Timer</strong> for this job and the best way is to create it on <strong>OnCreate</strong>, pause it on <strong>OnPause</strong> and resume it on <strong>OnResume</strong></p>

<pre><code>protected override void OnCreate()
{
if(Timer_Is_Needed)
   SendStatisticsToEmailBySchedule();
}

protected override void OnResume()
        {
            StartSendStatisticsToEmailByScheduleTimer();
}

private void SendStatisticsToEmailBySchedule()
        {
            SendStatisticsToEmailByScheduleTimer = new System.Timers.Timer
            {
                Interval = 3600000,
                Enabled = true,
                AutoReset = true,
            };
            SendStatisticsToEmailByScheduleTimer.Elapsed +=
                new System.Timers.ElapsedEventHandler(OnSendStatisticsToEmailByScheduleTimerEvent);
            SendStatisticsToEmailByScheduleTimer.Start();
        }

        private void StopSendStatisticsToEmailByScheduleTimer()
        {
            if (SendStatisticsToEmailByScheduleTimer != null)
                if (SendStatisticsToEmailByScheduleTimer.Enabled == true)
                    SendStatisticsToEmailByScheduleTimer.Stop();
        }

        private void StartSendStatisticsToEmailByScheduleTimer()
        {
            if (SendStatisticsToEmailByScheduleTimer != null)
                if (SendStatisticsToEmailByScheduleTimer.Enabled == false)
                    SendStatisticsToEmailBySchedule();
        }
        protected override void OnPause()
        {
            StopSendStatisticsToEmailByScheduleTimer();
        }
</code></pre>
    </div>