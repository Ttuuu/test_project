<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Have you looked at <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#groupingBy-java.util.function.Function-" rel="nofollow noreferrer"><code>.groupingBy()</code></a> and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#toSet--" rel="nofollow noreferrer"><code>.toSet()</code></a>?</p>

<pre><code>Map&lt;Integer, Set&lt;MyObject&gt;&gt; collected = Stream.of(...)
    .collect(Collectors.groupingBy(Map.Entry::getKey,
                                   Collectors.mapping(Map.Entry::getValue, Collectors.toSet())));
</code></pre>

<p>You possibly want <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#groupingByConcurrent-java.util.function.Function-" rel="nofollow noreferrer"><code>.groupingByConcurrent()</code></a> instead, though it is not exactly clear why.</p>

<p>Not a repl.it, but a JShell log:</p>

<pre><code>U:\&gt;jshell
|  Welcome to JShell -- Version 13
|  For an introduction type: /help intro

jshell&gt; class MyObject { }
|  created class MyObject

jshell&gt; Map&lt;Integer, Set&lt;MyObject&gt;&gt; result = Stream.of(
   ...&gt;    Map.entry(123, new MyObject()),
   ...&gt;    Map.entry(123, new MyObject()),
   ...&gt;    Map.entry(234, new MyObject())
   ...&gt; ).collect(
   ...&gt;    Collectors.groupingByConcurrent(
   ...&gt;       Map.Entry::getKey,
   ...&gt;       Collectors.mapping(
   ...&gt;          Map.Entry::getValue,
   ...&gt;          Collectors.toSet()
   ...&gt;       )
   ...&gt;    )
   ...&gt; );
result ==&gt; {234=[MyObject@78c03f1f], 123=[MyObject@5ce81285, MyObject@52a86356]}

jshell&gt;
</code></pre>
    </div>