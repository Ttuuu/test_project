<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Using R for such a task is an overkill and wasteful.   This is easier and quicker done with some common command line tools.  But afterwards it's trivial to work in R.</p>

<p>You can quickly fix these files using <code>sed</code>.  </p>

<p>There is a detailed description how to adjust the first occurrences in this <a href="https://unix.stackexchange.com/questions/155805/sed-replace-first-k-instances-of-a-word-in-the-file">question</a>
The idea would be to select a non-offending separator - say <code>;</code></p>

<p>Similarly lines  can be deleted as shown in this <a href="https://stackoverflow.com/questions/5410757/delete-lines-in-a-text-file-that-contain-a-specific-string">question</a>.</p>

<p>So this turns the first 4 <code>,</code> into <code>;</code> (4 times the same instruction), deletes all lines that don't contain 4 <code>;</code> and creates a backup of the files with extension <code>.old</code>.  The <code>*.csv</code> does it for all files in the directory.</p>

<pre><code>sed -i.old -e 's/,/;/' -e 's/,/;/' -e 's/,/;/' -e 's/,/;/' -e "/^\(.*;\)\{4\}.*\$/!d" *.csv
</code></pre>

<p>Of course run this over a <strong>copy</strong>!  Might need a few tweaks for windows.</p>
    </div>