<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here is a collection of things to improve.</p>

<h3>Code Style Notes</h3>

<p>Overall, there is a number of <a href="https://www.python.org/dev/peps/pep-0008/" rel="noreferrer">PEP8 Code Style violations</a>, like lack of spaces around operators, blank lines, spaces before the <code>#</code> comment character etc. Make sure to address them. You can also use tools like <a href="http://flake8.pycqa.org/" rel="noreferrer"><code>flake8</code></a> or <a href="https://pylint.readthedocs.io/en/latest/" rel="noreferrer"><code>pylint</code></a> to statically analyze code for common PEP8 and other code quality issues.</p>

<p>Some other Code Style related notes:</p>

<ul>
<li><code>WebDriverWait</code> is unused - this time, don't remove it but rather use it instead of <code>time.sleep()</code> - more about it later below</li>
<li><a href="https://stackoverflow.com/q/14797375/771848">be specific about what exceptions you are handling avoiding catching bare <code>Exception</code> errors</a> - for instance, you should rather be catching either <a href="http://selenium-python.readthedocs.io/api.html#selenium.common.exceptions.WebDriverException" rel="noreferrer"><code>WebDriverException</code></a> than <code>Exception</code> in your browser interaction methods.</li>
<li><p>use <code>is</code> when comparing to <code>None</code>; for instance, replacing:</p>

<pre><code>if screenshot != None:
</code></pre>

<p>with:</p>

<pre><code>if screenshot is not None:
</code></pre></li>
<li><p>you can simplify the emptiness checks. For example, you can replace:</p>

<pre><code>if len(last_seen) &gt; 0:
    if "click here" in last_seen:
        pass
    else:
        return last_seen
</code></pre>

<p>with:</p>

<pre><code>if last_seen and "click here" not in last_seen:
    return last_seen
</code></pre></li>
<li><p>you don't need to call <code>.keys()</code> on the dictionary and then iterate over them - you can iterate over the keys by directly iterating over the dictionary:</p>

<pre><code>for emoji in self.emoji:
</code></pre></li>
<li><p>avoid hardcoding things inside your implementations - move "magic" numbers like these timeout values inside the browser interaction methods to proper constants (or use that <code>timeout</code> argument to compare with the elapsed time)</p></li>
</ul>

<h3>Selenium-specific Improvements</h3>

<ul>
<li><p>instead of hardcoding wait timeouts and using <code>time.sleep()</code>, use <a href="http://selenium-python.readthedocs.io/waits.html#explicit-waits" rel="noreferrer"><code>WebDriverWait</code> which implements an Explicit Wait functionality</a>. There is a number of <a href="http://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.support.expected_conditions" rel="noreferrer">built-in Expected Conditions</a> to wait for (and it's easy to write your own one) - for instance, you may wait for an element to be present or visible, button or link to be clickable etc.</p>

<p><code>time.sleep()</code> is seriously unreliable - it tends to wait more than you usually need and fails randomly when the timeout was not enough.</p>

<p>And, I don't think you should parameterize your class with a <code>wait</code> value.</p></li>
<li>you should tie the browse instance to your class instance and not the class itself - initialize <code>browser</code> inside the <code>__init__()</code> constructor of the <code>WhatsApp</code> class</li>
<li><em>your CSS selectors are too fragile</em> because they depend on the HTML structure of the page too much. Try to improve the quality and reliability of your locators, some tips to get you started: <a href="https://sqa.stackexchange.com/q/27978/5574">What makes a good selenium locator?</a></li>
</ul>

<h3>Other Things</h3>

<ul>
<li><p>I don't really see the need for <code>Emoji</code> to be a class. For me, it would be perfectly fine to have it in a dictionary or even in a separate JSON or YAML config file. <code>emojify()</code> can simply be a utility function. More on the subject of when to use classes and when not:</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=o9pEzgHorH0" rel="noreferrer">Stop Writing Classes</a></li>
<li><a href="http://lucumr.pocoo.org/2013/2/13/moar-classes/" rel="noreferrer">Start Writing More Classes</a></li>
</ul></li>
<li>or, you can take it a step further and use the <a href="https://pypi.python.org/pypi/emoji/" rel="noreferrer"><code>emoji</code> third-party library</a></li>
</ul>

<p><sup>note</sup> I don't use WhatsApp and may be missing some context-specific things here.</p>
    </div>