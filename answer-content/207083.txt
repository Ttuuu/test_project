<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I also implemented the insertion sort algorithm in Rust, but my version is slightly different than Shepmaster's one. In the following piece of code, which you can also find <a href="https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2015&amp;gist=56ae04de1b31e379afe3b83544fa6828" rel="nofollow noreferrer">here</a>, you have a rough comparison, in terms of time performance, between the two versions. Again, you should look at this comparison with a grain of salt. Note: to execute this code, you must specify the crates <code>rand</code> and <code>time</code> as dependencies in your <code>Cargo.toml</code> file.</p>

<pre><code>extern crate rand;
extern crate time;

use rand::Rng;
use time::PreciseTime;

pub fn nbro_insertion_sort&lt;T: Ord&gt;(seq: &amp;mut [T]) {
    for i in 1..seq.len() {
        let mut n = i;
        while n &gt; 0 &amp;&amp; seq[n] &lt; seq[n - 1] {
            seq.swap(n, n - 1);
            n = n - 1;
        }
    }
}

pub fn shepmaster_insertion_sort&lt;T&gt;(seq: &amp;mut [T])
where
    T: Ord,
{
    for i in 0..seq.len() {
        for j in (0..i).rev() {
            if seq[j] &gt;= seq[j + 1] {
                seq.swap(j, j + 1);
            } else {
                break;
            }
        }
    }
}

fn new_random_vec(n: usize) -&gt; Vec&lt;i32&gt; {
    let mut rng = rand::thread_rng();
    std::iter::repeat_with(|| rng.gen::&lt;i32&gt;()).take(n).collect()
}

fn main() {
    fn one(name: &amp;str, data: &amp;[i32], f: impl FnOnce(&amp;mut [i32])) { 
        let mut vec = data.to_vec();

        let start = PreciseTime::now();
        f(&amp;mut vec);
        let end = PreciseTime::now();

        println!(
            "{} seconds to sort {} integers, using {}",
            start.to(end),
            data.len(),
            name,
        );

    }

    let base_vec = new_random_vec(10_000);
    one("shepmaster_insertion_sort", &amp;base_vec, shepmaster_insertion_sort);
    one("nbro_insertion_sort", &amp;base_vec, nbro_insertion_sort);
}
</code></pre>
    </div>