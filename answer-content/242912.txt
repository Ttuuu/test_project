<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Unpacking arguments</h2>

<p>This:</p>

<pre><code>    self.x = pos[0]
    self.y = pos[1]
</code></pre>

<p>can be</p>

<pre><code>self.x, self.y = pos
</code></pre>

<p>One advantage of the latter is that it will catch weird sequences that have more than two items. The easier thing to do is simply have a uniform representation of coordinates, and use <code>x,y</code> everywhere instead of a random mixture of tuples and individual variables.</p>

<h2>Type hints</h2>

<pre><code>def __init__(self, pos):
    """Head of snake"""
    self.x = pos[0]
    self.y = pos[1]
    self.last_x = self.x
    self.last_y = self.y
    self.direction = [0, -BLOCK_SIZE]
    self.square = None
</code></pre>

<p>can likely be</p>

<pre><code>def __init__(self, pos: Tuple[int, int]):
    """Head of snake"""
    self.x: int = pos[0]
    self.y: int = pos[1]
    self.last_x: int = self.x
    self.last_y: int = self.y
    self.direction: Tuple[int, int] = (0, -BLOCK_SIZE)
    self.square: pg.Surface = None
</code></pre>

<h2>Strongly-typed direction</h2>

<p>Do not represent a direction as a <code>u/d/l/r</code> string. Either represent it as an enum, or a unit vector of <code>x,y in {(1,0), (-1,0), (0,1), (0,-1)}</code>.</p>

<h2>Mystery position list</h2>

<p><code>pos_list[3:]:</code> is spooky. It's not really a good idea to assign specific meanings to elements of a list such that you need to slice it for your business logic. What do the first three positions of the snake mean? Since they have a separate meaning, does it even make sense to keep them in the same list?</p>

<h2>Magic constants</h2>

<pre><code>    if ticker == 3:
</code></pre>

<p>should have its constant pulled out, so that you can write</p>

<pre><code>    if ticket == UPDATE_FRAMES - 1:
</code></pre>
    </div>