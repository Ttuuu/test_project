<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This should improve performance, so long as the StreamWriter.Write(char) implementation does not have particularly poor overheads. </p>

<p>NB, this will remove the need for any intermediate StringBuilder and associated temporary arrays.</p>

<pre><code>public void StripHighBitCharacters(string fn)
{
  string writeFile = fn + "B";
  using (var reader = new StreamReader(fn))
  using (var writer = new StreamWriter(writeFile))
  {
    while (!reader.EndOfStream)
    {
      string line = reader.ReadLine();
      if (line.Length &gt; 0)
      {
        foreach (var c in line.Where(c =&gt; c &gt;= 32 &amp;&amp; c &lt;= 175)) { writer.Write(c); }
      }

      writer.WriteLine();
    }
  }
  // You may wish to consider moving `fn` to a temp location and then deleting it after the `File.Move(writeFile, fn)` line succeeds
  File.Delete(fn);
  File.Move(writeFile, fn);
}
</code></pre>
    </div>