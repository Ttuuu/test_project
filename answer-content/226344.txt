<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><code>while (current_number &lt; std::numeric_limits&lt;int&gt;::max()) {</code> Good that you discovered numeric limits, but there is no point using it here. Just check up to <span class="math-container">\$\sqrt{n}\$</span> should be fine.</p></li>
<li><p>Your <code>is_prime</code> function depends on floats, which is not a good idea. This is a simpler implementation, checking whether the modulus is 0 or not (this is done with operator <code>%</code>).</p></li>
</ul>

<pre class="lang-cpp prettyprint-override"><code>bool is_prime(int n) {
    if (n == 1) return false;
    for (int i = 2; i * i &lt;= n; ++i) {
        if (n % i == 0) {
            return false;
        }
    } 
    return true;
}
</code></pre>

<ul>
<li>Your algorithm is quite slow, like for the function get_prime_above. Check this answer: <a href="https://codereview.stackexchange.com/questions/74587/project-euler-3-in-java?rq=1">Project Euler #3 in Java</a></li>
</ul>
    </div>