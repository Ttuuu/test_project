<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't want to repeat Blindly's observations (and those that have spotted under the comment section).</p>
<p>I would like to suggest other improvement areas:</p>
<h2>Constructor</h2>
<p>You are using instance constructor to initialize static member.</p>
<ul>
<li>Static constructor should be used to initialize your <code>HttpClient</code> with(out) proxy</li>
<li>There is no need to use instance constructor
<ul>
<li><code>UserName</code> and <code>Password</code> should be a parameter of the <code>Login</code></li>
</ul>
</li>
</ul>
<h2>Login - In general</h2>
<p>It does seems to me that you want to implement something on the server-side which was designed to support client-side authentication.</p>
<ul>
<li>Please check that does Instagram support server-side auth</li>
</ul>
<h2>Login - Error handling</h2>
<p>This error handling is really naive and thin.</p>
<ul>
<li>You should definitely look for <code>HttpRequestException</code>.</li>
<li>You should check the responses' <code>StatusCode</code> before any further processing</li>
</ul>
<h2>Login - Flow</h2>
<p>Separation helps the understanding and maintainability of a function. Smaller chunks can be easier tested, etc.</p>
<ul>
<li>I suggest to separate the two separate requests into two separate functions</li>
<li>Your <code>Login</code> should be the coordinator for the two functions</li>
</ul>
<h2>HttpClient - Header</h2>
<p>You are using a lot of strings to setup requests. Most of them are duplicated.</p>
<ul>
<li>Please consider to use constants instead</li>
<li>Consider to set the <code>Host</code> on the <code>HttpClient</code> level instead of on the <code>HttpWebRequest</code> level</li>
</ul>
<h2>HttpClient - Timeout</h2>
<p>In case of .NET Core the recommended approach to enforce timeout is to use the <a href="https://github.com/App-vNext/Polly/wiki/Timeout" rel="nofollow noreferrer">Polly</a> library. It is a quite neat utility and it exposes other useful policies as well (like circuit-breaker, bulkhead)</p>
    </div>