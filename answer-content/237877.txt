<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Depends on what you want to do with it. It seems a bit odd to store each top 5 in its own variable.</p>

<p>For starters, you can slice a DataFrame by continent using <code>.groupby</code>:</p>

<pre><code>for continent, continent_data in data.groupby("Continent"):
    # `continent` is now the name of the continent (you don't have to type the continent names manually)
    # `continent_data` is a dataframe, being a subset of the `data` dataframe
</code></pre>

<p><strong>Edit based on first comment</strong>: if you want to plot the variables, it's definitely not a good idea to store them each in a separate variable. Do you already know how you want to visualize your data? That's something you will need to work toward. I can't really see a top 5 countries for each type of alcoholic beverage for each continent in one plot.</p>

<pre><code>continents = []
top5s = {}
for continent, continent_data in data.groupby("Continent"):
    continents.append(continent)
    for beverage_column in ["Beer Servings", "Spirit Servings", "Wine Servings"]:
        topcountries = continent_data.nlargest(5, beverage_column)
        # do something with the data, such as:
        print(f"Top 5 countries in {continent} for {beverage}:")
        for row in topcountries.iterrows():
            print(f"- {row.Country}: {row['beverage_column']} servings")
</code></pre>

<p>To be very exact: <code>groupby()</code> doesn't return an iterable of tuples, but actually just a GroupBy object that implements iterability (i.e. <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.GroupBy.__iter__.html" rel="nofollow noreferrer">the <code>__iter__()</code> method</a>). </p>
    </div>