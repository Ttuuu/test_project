<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm writing this as an answer because of space restrictions but this is more of a reply to @TobySpeight.</p>

<p>Thanks to your help I've improved my Makefile to create debug and release builds separately but I had to make additional changes beyonf what you wrote.  I am recording them here for future posterity.</p>

<p>I had to change the install target so instead of depending on the release target which no longer exists, it cds to the release directory and builds there first.  In my top level Makefile:</p>

<pre><code>install:
    @cd release &amp;&amp; $(MAKE) install-$(PROGRAM)
</code></pre>

<p>...and in the release Makefile:</p>

<pre><code>install-$(PROGRAM): $(PROGRAM)
    $(INSTALL) -m755 -D -d $(DESTDIR)$(PREFIX)/$(BINDIR)
    $(INSTALL) -m755 $&lt; $(DESTDIR)$(PREFIX)/$(BINDIR/$(PROGRAM)
</code></pre>

<p>With the new setup, what happens if a user runs <code>make</code> in the top-level directory?  They are going to get errors.  Or what if they run <code>make distclean</code> in a subdirectory?  First I defined a function in the top-level Makefile to tell where we are.  This was unexpectedly complicated but this works:</p>

<pre><code>get_builddir = '$(findstring '$(notdir $(CURDIR))', 'debug' 'release')'
</code></pre>

<p>I defined two new targets:</p>

<pre><code>checkinbuilddir:
ifeq ($(call get_builddir), '')
    $(error 'Change to the debug or release directories and run make from there.')
endif

checkintopdir:
ifneq ($(call get_builddir), '')
    $(error 'Make this target from the top-level directory.')
endif
</code></pre>

<p>Then I had my <code>$(PROGRAM)</code> and <code>$(DISTCLEAN)</code> targets depend on them:</p>

<pre><code>$(PROGRAM): $(OBJECTS) | checkinbuilddir 
    $(LINK.cc) $(OUTPUT_OPTION) $^
    $(STRIP)

distclean: | checkintopdir
    cd debug &amp;&amp; $(MAKE) clean
    cd release &amp;&amp; $(MAKE) clean
</code></pre>

<p>So this will be my stock Makefile going forward.  I still don't deal with e.g. building libraries or multi-binary programs but I'm satisfied with it for now.  Thanks once again.</p>
    </div>