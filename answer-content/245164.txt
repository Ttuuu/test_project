<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Type Hints</h1>
<p>Use these to direct users what types of values your functions accept, and what types of values are returned.</p>
<pre><code>from typing import List

def ids(a: str, b: str) -&gt; List[str]:
    ...
</code></pre>
<h1>Meaningful names</h1>
<p>I would rename <code>l</code> to <code>results</code>, as that better demonstrates what you're returning.</p>
<p>You code now looks something like this:</p>
<pre><code>from typing import List

groups = [
    [
        ['NM1', 'OP', '1', 'SMITH', 'JOHN', 'PAUL', 'MR', 'JR'],
        ['ABC', '1L', '690553677'],
        ['DIR', '348', 'D8', '20200601'],
        ['DIR', '349', 'D8', '20200630']
    ],
    [
        ['NM1', 'OP', '1', 'IMA', 'MEAN', 'TURD', 'MR', 'SR'],
        ['ABC', '1L', '690545645'],
        ['ABC', '0F', '001938383',''],
        ['DIR', '348', 'D8', '20200601']
    ]
]

def ids(a: str, b: str) -&gt; List[str]:
    results = []
    for group in groups:
        for lst in group:
            lst = list(filter(None, lst))
            if lst[:2] == [a, b]:
                results.append(lst[-1])
                break
        else:
            results.append(None)
    return results

if __name__ == '__main__':

    current_id = ids('ABC', '1L')
    prior_id = ids('ABC', '0F')
    start_date = ids('DIR', '348')
    end_date = ids('DIR', '349')

    print(current_id)
    print(prior_id)
    print(start_date)
    print(end_date)
</code></pre>
<p><em>Spaced out <code>groups</code> so I could understand the layout easier.</em></p>
<h1>List slicing</h1>
<p>Instead of checking the first two elements with different checks, slice the array and check that array against an array of the passed elements.</p>
<h1>Simpler checking</h1>
<p>Since you want to add the last element, instead of checking the length of the array then appending a specific index, just append the last element using <code>[-1]</code>.</p>
<h1>Filtering</h1>
<p>I noticed there was a <code>''</code> at the end of one of the lists. If you expect this type of data, you should filter it out since it isn't involved with the rest of the function.</p>
<pre><code>lst = list(filter(None, lst))
</code></pre>
<p>This filters out every None type value in <code>lst</code>. Since an empty string is a None type, it gets removed.</p>
<h1>Main Guard</h1>
<p>This prevents the outside code from running if you decide to import this from another file / program.</p>
    </div>