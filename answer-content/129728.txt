<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Suppose the program to measure is <code>sleep 3s</code>.  Use the <code>time</code> util to append the total time elapsed to <em>run_time.txt</em>, plus <code>annotate-output</code> to more clearly distinguish various <em>IO</em> bits (see below) along the way, and then <code>tail -1 run_time.txt</code> after the program being logged,:</p>

<pre><code>/usr/bin/time -f '%e' -o run_time.txt -a annotate-output '+%n' sleep 3s 
tail -1 run_time.txt
</code></pre>

<p>Output:</p>

<pre><code> I: Started sleep 3s
 I: Finished with exitcode 0
3.02
</code></pre>

<p>Wrapped in a function which saves the exit code:</p>

<pre><code>function run_time {
    /usr/bin/time -f '%e' -o run_time.txt -a annotate-output '+%n' "${@}"
    n=$?
    tail -1 run_time.txt
    return $n
}
</code></pre>

<p>What <code>annotate-output</code> brings is text prefixes which distinguish output types, that may then be filtered from <em>outside</em> the function.</p>

<hr>

<p>The util <a href="http://linux.die.net/man/1/annotate-output" rel="nofollow noreferrer"><code>annotate-output</code></a> executes a specified program, while prepending every line with the current time, and <em>I</em> for <em>STDIN</em>, <em>O</em> for <em>STDERR</em>, and <em>E</em> for <em>STDERR</em>.</p>

<p>Example, run a shell, output a <code>y</code> to both <em>STDOUT</em> and <em>STDERR</em>, then finish with <code>false</code> to change the exit code:</p>

<pre><code>annotate-output bash -c - 'yes | head -1 | tee /dev/stderr ; false'
</code></pre>

<p>Output:</p>

<pre><code>07:44:56 I: Started bash -c - yes | head -1 | tee /dev/stderr ; false
07:44:56 O: y
07:44:56 E: y
07:44:56 I: Finished with exitcode 1
</code></pre>

<p>The single option <code>annotate-output</code> offers is a <code>date</code> string.  This example uses <code>ls</code> to output a few files, (and one that doesn't exist), prefixed by <em>seconds since 1970-01-01 00:00:00 UTC</em>:</p>

<pre><code>annotate-output +%s ls -log /bin/bash /bin/bahshshshshs /bin/sh
</code></pre>

<p>Output:</p>

<pre><code>1501070420 I: Started ls -og /bin/bash /bin/bahshshshshs /bin/sh
1501070420 O: -rwxr-xr-x 1 1099016 May 16 07:35 /bin/bash
1501070420 E: ls: cannot access '/bin/bahshshshshs': No such file or directory
1501070420 O: lrwxrwxrwx 1       4 Jul 28  2016 /bin/sh -&gt; dash
1501070420 I: Finished with exitcode 2
</code></pre>

<p>If the <code>date</code> string is just a <code>+%n</code>, (or simply a <code>+</code>), no timing data will be prefixed. (See top of this answer for example.)</p>
    </div>