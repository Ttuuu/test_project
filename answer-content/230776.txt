<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Python's string formatting has come a long way from the <code>"%s"</code> formatting days. Nowadays classes can even determine on their own how to handle format specifiers. Therefore I would write a matrix class that can be pretty printed with different format options determining the matrix style.</p>

<pre><code>class MathJaxMatrix:
    brackets = {'': 'matrix', 
                'p': 'pmatrix', 
                'b': 'bmatrix', 
                'B': 'Bmatrix', 
                'v': 'vmatrix',
                'V': 'Vmatrix'}
    e_msg = "unsupported format string passed to MathJaxMatrix.__format__"

    def __init__(self, m):
        if m.ndim == 1:
            m = m.reshape(len(m), 1)
        self.m = m
        self.rows, self.cols = m.shape

    def __str__(self):
        return "\\\\ \n".join(" &amp; ".join(str(x) for x in row) for row in self.m)

    def __format__(self, format_spec=None):
        if format_spec is None:
            return str(self)
        if format_spec == "a":
            format_spec = '{' + 'c'*(self.cols-1) + '|c}'
            start = rf'<span class="math-container">$$\left[ \begin{{array}}{format_spec}'
            end = r'\end{array} \right]$$</span>'
        else:
            try:
                brackets = self.brackets[format_spec]
            except KeyError as e:
                raise TypeError(self.e_msg) from e
            start = f'<span class="math-container">$$ \\begin{{{brackets}}}'
            end = f'\end{{{brackets}}} $$</span>'
        return "\n".join([start, str(self), end])
</code></pre>

<p>Which you can use like this:</p>

<pre><code>In [40]: x = np.random.rand(4, 5)

In [41]: m = MathJaxMatrix(x)

In [42]: print(m)
0.35170079706 &amp; 0.903087473471 &amp; 0.748996998207 &amp; 0.741200595894 &amp; 0.771233795397\\
0.251204439922 &amp; 0.40876741255 &amp; 0.101668325527 &amp; 0.738733484611 &amp; 0.3052742949\\
0.448079803976 &amp; 0.273533142438 &amp; 0.368031240997 &amp; 0.34312026244 &amp; 0.587809084934\\
0.0192109217812 &amp; 0.334069285732 &amp; 0.644616319752 &amp; 0.648226279564 &amp; 0.307678962448

In [43]: print(f"{m}")
<span class="math-container">$$\begin{matrix}
0.35170079706 &amp; 0.903087473471 &amp; 0.748996998207 &amp; 0.741200595894 &amp; 0.771233795397\\
0.251204439922 &amp; 0.40876741255 &amp; 0.101668325527 &amp; 0.738733484611 &amp; 0.3052742949\\
0.448079803976 &amp; 0.273533142438 &amp; 0.368031240997 &amp; 0.34312026244 &amp; 0.587809084934\\
0.0192109217812 &amp; 0.334069285732 &amp; 0.644616319752 &amp; 0.648226279564 &amp; 0.307678962448
\end{matrix} $$</span>

In [44]: print(f"{m:p}")
<span class="math-container">$$\begin{pmatrix}
0.35170079706 &amp; 0.903087473471 &amp; 0.748996998207 &amp; 0.741200595894 &amp; 0.771233795397\\
0.251204439922 &amp; 0.40876741255 &amp; 0.101668325527 &amp; 0.738733484611 &amp; 0.3052742949\\
0.448079803976 &amp; 0.273533142438 &amp; 0.368031240997 &amp; 0.34312026244 &amp; 0.587809084934\\
0.0192109217812 &amp; 0.334069285732 &amp; 0.644616319752 &amp; 0.648226279564 &amp; 0.307678962448
\end{pmatrix} $$</span>

In [45]: print(f"{m:a}")
<span class="math-container">$$ \left[ \begin{array}{cccc|c}
0.35170079706 &amp; 0.903087473471 &amp; 0.748996998207 &amp; 0.741200595894 &amp; 0.771233795397\\
0.251204439922 &amp; 0.40876741255 &amp; 0.101668325527 &amp; 0.738733484611 &amp; 0.3052742949\\
0.448079803976 &amp; 0.273533142438 &amp; 0.368031240997 &amp; 0.34312026244 &amp; 0.587809084934\\
0.0192109217812 &amp; 0.334069285732 &amp; 0.644616319752 &amp; 0.648226279564 &amp; 0.307678962448
\end{array} \right] $$</span>

In [62]: print(f"{m:e}")
---------------------------------------------------------------------------
KeyError                                 Traceback (most recent call last)
...
KeyError: 'e'

The above exception was the direct cause of the following exception:

TypeError                                Traceback (most recent call last)
...
TypeError: unsupported format string passed to MathJaxMatrix.__format__
</code></pre>

<p>Note that this removes the repeated code for getting a string representation of the actual matrix, uses <code>np.ndarray.ndim</code> and <code>np.reshape</code> to ensure it is a proper 2D matrix. I used the first letter of the different <code>*matrix</code> options to distinguish them because <code>}</code> is not allowed in format specifications.</p>

<p>The actual convenience function is then quite short:</p>

<pre><code>def format_matrix(m, format_spec):
    m = MathJaxMatrix(m)
    s = f"{m:{format_spec}}"
    print(s)
    pyperclip.copy(s)
</code></pre>
    </div>