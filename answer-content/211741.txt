<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Have not tried Vue.js. </p>

<p><code>number</code> within <code>getIndex</code> is not used, the first parameter can be replaced with an underscore </p>

<pre><code>const getIndex = (_, index) =&gt; index + 1;
</code></pre>

<p></p><p></p>

<pre><code>Array.from({length: 100}, getIndex)
</code></pre>

<p>can be substituted for </p>

<pre><code>new Array(100).fill(1).map(getIndex)
</code></pre>

<p>to reduce <code>Array</code> method calls. </p>

<p><code>getOutput()</code> function body can be reduced to two lines with one <code>return</code> statement by using destructuring assignment, AND <code>&amp;&amp;</code> operator for variables <code>Fizz</code> and <code>Buzz</code>, which <code>FizzBuzz</code> is derived from, and OR <code>||</code> operator</p>

<pre><code>function getOutput(number) {
  const [f, b, fb = f &amp;&amp; b &amp;&amp; 'FizzBuzz'] = [number % 3 &amp;&amp; 'Fizz', number % 5 &amp;&amp; 'Buzz'];
  return fb || f || b || number;
}
</code></pre>

<p><code>FizzBuzz</code>, <code>Fizz</code> and <code>Buzz</code> variable names can be substituted for single character variable names <code>fb</code>, <code>f</code> and <code>b</code> variable names within <code>getOutput</code> function body if necessary.</p>

<p>A single <code>return</code> statement can be substituted for two <code>return</code> statements within <code>getClass</code> function by using conditional operator <code>condition ? expression0 : expression1</code>.</p>

<pre><code>function getClass(number) {
  const output = this.$options.filters.getOutput(number);
  return isNaN(parseInt(output, 10)) ? output : '';
}
</code></pre>
    </div>