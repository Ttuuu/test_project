<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would also avoid using regexes or any kind of manual string parsing, you can do it all with <a href="http://www.php.net/manual/en/function.parse-str.php"><code>parse_str()</code></a> and <a href="http://www.php.net/manual/en/function.http-build-query.php"><code>http_build_query()</code></a>, thusly:</p>

<pre><code>function removeAndReturn(&amp;$url, $toRemove)
{
    $parsed = [];
    parse_str(substr($url, strpos($url, '?') + 1), $parsed);
    $removed = $parsed[$toRemove];
    unset($parsed[$toRemove]);
    $url = 'http://example.com/';
    if(!empty($parsed))
    {
        $url .= '?' . http_build_query($parsed);
    }
    return $removed;
}
</code></pre>

<p>Then with a simple script to test it:</p>

<pre><code>$input = ['http://example.com/?foo=42',
         'http://example.com/?foo=42&amp;bar=43',
         'http://example.com/?bar=43&amp;foo=42',
         'http://example.com/?bar=43&amp;foo=42&amp;baz=44'];

$expected = ['http://example.com/',
           'http://example.com/?bar=43',
           'http://example.com/?bar=43',
           'http://example.com/?bar=43&amp;baz=44'];


$count = count($input);
for($i = 0; $i &lt; $count; $i++)
{
    $foo = removeAndReturn($input[$i], 'foo');
    echo 'Foo: ' . $foo . '&lt;br /&gt;' .
          'URL: ' . $input[$i] . '&lt;br /&gt;';
    if($input[$i] === $expected[$i])
        echo 'Match&lt;br /&gt;';
}
</code></pre>

<p>You get:</p>

<pre><code>Foo: 42
URL: http://example.com/
Match
Foo: 42
URL: http://example.com/?bar=43
Match
Foo: 42
URL: http://example.com/?bar=43
Match
Foo: 42
URL: http://example.com/?bar=43&amp;baz=44
Match
</code></pre>
    </div>