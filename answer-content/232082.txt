<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>As has been pointed out, the code allocates a <code>new int[3][3]</code> for each pixel. Do this once and reuse. </p></li>
<li><p>Use <code>int[9] kernel</code> instead of <code>int[3][3]</code>. This will remove the need for the inner <code>j</code> loop when summing.</p></li>
<li><p><code>sourceImage.getRGB(x-1, y-1, 3, 3, kernel, 0, 3)</code> will read 9 pixels at once though it won't handle borders without similar conditions to yours.</p></li>
<li><p>Memory is cheap so get the whole RGB image, once only (<code>sourceImage.getRGB(0,0,w,h,pixels,0,w)</code>) then work directly with array-access only.</p></li>
<li><p>Consider writing this as a <code>ForkJoin</code> task to parallelise the processing. Though all tasks can share the same <code>pixels</code> array, any image-task can be split into two sub-tasks along its longest edge (like folding a towel)</p></li>
</ol>
    </div>