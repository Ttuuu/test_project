<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One obvious improvement would be to break the code up a bit more - identify standalone pieces of functionality and put them into functions, e.g.:</p>

<pre><code>def read_data(filename):
    csvf = open(filename,'rU')
    rows = csv.reader(csvf)
    data = [row for row in rows]
    csvf.close()
    return data

offer_sheet = read_data('OfferInfo.csv')
transaction_sheet = read_data('Transactions.csv')
</code></pre>

<p>This reduces duplication and, therefore, possibilities for errors. It allows easier development, as you can create and test each function separately before connecting it all together. It also makes it easier to improve the functionality, in this case by adopting the <code>with</code> context manager:</p>

<pre><code>def read_data(filename):
    with open(filename, 'rU') as csvf:
         return [row for row in csv.reader(csvf)]
</code></pre>

<p>You make that change in only one place and everywhere that calls it benefits.</p>

<hr>

<p>I would also have as little code as possible at the top level. Instead, move it inside an enclosing function, and only call that function if we're running the file directly:</p>

<pre><code>def analyse(offer_file, transaction_file):
    offer_sheet = read_data(offer_file)
    transaction_sheet = read_data(transaction_file)
    ...

if __name__ == "__main__":
    analyse('OfferInfo.csv', 'Transactions.csv')
</code></pre>

<p>This makes it easier to <code>import</code> the code you develop elsewhere without running the test/demo code.</p>
    </div>