<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Few things.</p>

<p>This number:</p>

<pre><code>unsigned long max = std::numeric_limits&lt;unsigned long&gt;::max();
</code></pre>

<p>Is</p>

<pre><code>18446744073709551615
</code></pre>

<p>If we assume that the average size of a number is half this length (so 10 characters). Then the size of the file is:</p>

<pre><code>   184467440737095516150 bytes.
=&gt; 180143985094819830 Kbytes
=&gt; 175921860444150 MBytes
=&gt; 171798691830 GBytes
=&gt; 167772150 TBytes
=&gt; 163830 PBytes
=&gt; 150 XBytes
</code></pre>

<p>Unless you have some sort of massive raid. I don't think you have storage space foe all those numbers.</p>

<p>Even if your system uses a smaller number of bits for an unsigned long than mine (say 32 bit). This is still a large file (though doable on modern systems).</p>

<pre><code>=&gt; 15 GBytes (approx)
</code></pre>

<p>But the problem is not the speed of the program. Its is the speed that the OS can copy data to the disk. That will be your limiting factor. If you want to see how fast it could write to an optimal disk then use the special file "/dev/null". You can write to this and it uses no disk space.</p>

<p>12G in 2 min is a write rate of:</p>

<pre><code>107374182 bytes a sec or
104857 K/s
102 M/s
</code></pre>

<p>A quick Google reveals that 500 M/s is achievable for SSD drives while normal HD achieve approx 100 M/s. So it looks like your desk top has normal spinning platter hard disk and it was going at the top speed.</p>

<p>Laptops are known to slower. Especially when they get hot. The hardware is designed to physically throttle the system to make sure it does not overheat.</p>

<p>Why not create and open the file in one line?</p>

<pre><code>std::ofstream myFile;
myFile.open( "/home/awesome/Desktop/large_numbers.txt" );
</code></pre>

<p>I would do this:</p>

<pre><code>std::ofstream myFile( "/home/awesome/Desktop/large_numbers.txt" );
</code></pre>

<p>Simpler to use a <code>for(;;)</code> loop than a <code>while()</code>.</p>

<pre><code>for(unsigned long i = 0;i &lt;= max; ++i)
    myFile &lt;&lt; i &lt;&lt; "\n";               // Note because you opened the file in
                                       // text mode. The '\n' character will
                                       // translated into the platform end of
                                       // of line sequence.
}
</code></pre>

<p>No need to flush or close the stream manually.</p>

<pre><code>myFile.flush();
myFile.close();
</code></pre>

<p>When the object goes out of scope the destructor is called. This will close the file which will flush the content of the buffers first.</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;limits&gt;
#include &lt;fstream&gt;

int main() {

    unsigned long max = std::numeric_limits&lt;unsigned long&gt;::max();

    std::ofstream myFile( "/home/awesome/Desktop/large_numbers.txt" );
    for(unsigned long i = 0; i &lt; max; ++i) {
        myFile &lt;&lt; i &lt;&lt; "\n";
    }
}
</code></pre>
    </div>