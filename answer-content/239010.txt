<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This compiles cleanly and produces reasonable integer output (though not in the format required by the problem statement).</p>

<p>Note that you are required to include <code>&lt;cstdlib&gt;</code> before using <code>EXIT_SUCCESS</code>; failing to do so may be a portability bug.</p>

<p>All that copying and sorting gets expensive as the input and <code>k</code> both get larger.  We should probably create a stateful class that we can update with the new right-most value and the left-most to be removed.  I'd probably implement that with two sets - one holding values lower than the median and one holding higher values.  When we shift the window by one position, then we update the two sets and move an element if necessary to balance them (remember that because a set is sorted, it's easy to find the lowest and highest values using <code>front()</code> and <code>back()</code>).</p>
    </div>