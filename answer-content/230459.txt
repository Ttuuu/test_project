<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Variable reuse</h2>

<p>Put</p>

<pre><code>'token.pickle'
</code></pre>

<p>into a constant variable somewhere.</p>

<h2>Security</h2>

<p>You're using an unencrypted serialized format for credential storage. This is not advisable. There are many (many) ways that this can be done more securely, some of them operating-system-dependent, some of them generic Python packages that you can import - but don't do what you're doing now.</p>

<h2>Legacy libraries</h2>

<p><code>email.mime</code> is a legacy library. Have a read through <a href="https://docs.python.org/3.7/library/email.html#module-email" rel="nofollow noreferrer">https://docs.python.org/3.7/library/email.html#module-email</a> - it will describe the newer methods of email composition and transmission, including <code>email.message</code>.</p>

<h2>Error handling</h2>

<blockquote>
  <p>I would rather log all the errors in staging table or in a file, though it depends on error handling method used</p>
</blockquote>

<p>Indeed. In that particular case, you should just let the exception fall through (or maybe wrap it in another exception using a <code>from</code> clause). You can catch it in the calling code above, and decide what to do from there. Perhaps investigate the use of the standard <code>logging</code> library, which gives you flexible options around sending log lines to files and/or the console.</p>

<h2>Unguarded code</h2>

<p>As of <code>df = pd.DataFrame()</code> and below, that code is not <code>main</code>-guarded. Tab it in. Also consider putting it in a function to keep it out of global scope. Unlike in C, <code>if</code> blocks do not create inner scope.</p>
    </div>