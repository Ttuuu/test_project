<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The following code with revised variable names and less coding</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function NumToWordsInt(NumIn) {
//---------------------------------------
//Convert Integer Number to English Words
//Using a Loop String Triplets
//Mohsen Alyafei 10 July 2019
//Call for whole and for fractional parts
//---------------------------------------

 if (NumIn==0) return "Zero";
 var  Small = ["", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"];
 var  Tens = ["", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"];
 var Scale = ["", "Thousand", "Million", "Billion", "Trillion", "Quadrillion", "Quintillion", "Sextillion", "Septillion", "Octillion", "Nonillion", "Decillion"];
 var NHundred, NSmall, Sep, TripletPos, WHundred,TotalTriplets,Triplet,WordSmall="", NumAll = "";
 NumIn+=""                                               //NumIn=NumIn.toString()
//----------------- code start -------------------
 NumIn = "0".repeat(NumIn.length * 2 % 3) + NumIn;       //Create shortest string triplets 0 padded
 TripletPos = 0;                                                  //Start with the highest triplet from LH
    for (TotalTriplets = NumIn.length / 3 - 1; TotalTriplets &gt;= 0; TotalTriplets--) {   //Loop thru number of triplets from LH most
      Triplet = NumIn.substring(TripletPos, TripletPos + 3);                 //Get a triplet number starting from LH
      if (Triplet != "000") {                              //Skip empty triplets
//------- One Triplet Loop decode ---------
        Triplet[2] != "0" ? Sep="-":Sep=" ";               //Only for dash for 21 to 99
        NHundred = Number(Triplet[0]);                     //Get Hundreds digit
        NSmall = Number(Triplet.substr(1));                //Get 2 lowest digits (00 to 99) 
        NSmall &gt; 19 ? WordSmall = Tens[Number(Triplet[1])] + Sep + Small[Number(Triplet[2])]:WordSmall = Small[NSmall]
        //Add " hundred" if needed, Create number with scale, and join the Triplet scales to previous
        NumAll = NumAll + ((NHundred&gt;0 ? WHundred = Small[NHundred] + " Hundred": WHundred="") + " " + WordSmall).trim() + " " + Scale[TotalTriplets]+ " "; 
      }
      TripletPos += 3;                                     //Go for next lower triplets (move to RH)
    }
//----------------- code end --------------------- 
 return NumAll.trim();                                     //Return trimming excess spaces
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;input type="text" name="number" placeholder="Number" onkeyup="word.innerHTML=NumToWordsInt(this.value)" /&gt;
&lt;div id="word"&gt;&lt;/div&gt;

&lt;script&gt;
function NumToWordsInt(NumIn) {
//---------------------------------------
//Convert Integer Number to English Words
//Using a Loop String Triplets
//Mohsen Alyafei 10 July 2019
//Call for whole and for fractional parts
//---------------------------------------

 if (NumIn==0) return "Zero";
 var  Small = ["", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"];
 var  Tens = ["", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"];
 var Scale = ["", "Thousand", "Million", "Billion", "Trillion", "Quadrillion", "Quintillion", "Sextillion", "Septillion", "Octillion", "Nonillion", "Decillion"];
 var NHundred, NSmall, Sep, TripletPos, WHundred,TotalTriplets,Triplet,WordSmall="", NumAll = "";
 NumIn+=""                                               //NumIn=NumIn.toString()
//----------------- code start -------------------
 NumIn = "0".repeat(NumIn.length * 2 % 3) + NumIn;       //Create shortest string triplets 0 padded
 TripletPos = 0;                                                  //Start with the highest triplet from LH
    for (TotalTriplets = NumIn.length / 3 - 1; TotalTriplets &gt;= 0; TotalTriplets--) {   //Loop thru number of triplets from LH most
      Triplet = NumIn.substring(TripletPos, TripletPos + 3);                 //Get a triplet number starting from LH
      if (Triplet != "000") {                              //Skip empty triplets
//------- One Triplet Loop decode ---------
        Triplet[2] != "0" ? Sep="-":Sep=" ";               //Only for dash for 21 to 99
        NHundred = Number(Triplet[0]);                     //Get Hundreds digit
        NSmall = Number(Triplet.substr(1));                //Get 2 lowest digits (00 to 99) 
        NSmall &gt; 19 ? WordSmall = Tens[Number(Triplet[1])] + Sep + Small[Number(Triplet[2])]:WordSmall = Small[NSmall]
        //Add " hundred" if needed, Create number with scale, and join the Triplet scales to previous
        NumAll = NumAll + ((NHundred&gt;0 ? WHundred = Small[NHundred] + " Hundred": WHundred="") + " " + WordSmall).trim() + " " + Scale[TotalTriplets]+ " "; 
      }
      TripletPos += 3;                                     //Go for next lower triplets (move to RH)
    }
//----------------- code end --------------------- 
 return NumAll.trim();                                     //Return trimming excess spaces
}
&lt;/script&gt;</code></pre>
</div>
</div>

    </div>