<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to Code Review.</p>

<p>As stated in the comments, the code is the C programming language, not C++. C is a procedural language and C++ is an object oriented lanugage originally based on C. We can tell from the first line,</p>

<pre><code>#include &lt;stdio.h&gt;
</code></pre>

<p>In C++ this file would be <code>&lt;cstdio&gt;</code> but generally we would not be using it because represents an older form of input/output that has been replaced in C++.</p>

<p>C++ generally uses </p>

<pre><code>#include &lt;iostream&gt;
</code></pre>

<p>which provides <code>std::cin</code> as input and <code>std::cout</code> as output.</p>

<p>The functions <code>printf()</code> and <code>scanf()</code> generally are not used in C++. FYI <code>scanf()</code> and <code>printf()</code> are not members of the std namespace and <code>std::scanf()</code> does not compile in many compilers.</p>

<p><strong>Complexity</strong><br>
It might be better if there was a function to get the input and another function to process the input. This would lead to less variables being declared in <code>main()</code> and functions that are shorter, easier to read debug and maintain.</p>

<p><strong>Variable Declarations</strong><br>
The line of code:</p>

<pre><code>    unsigned long int e[ne],gval,sum=0;
</code></pre>

<p>Is difficult to maintain, it would be better if it was multiple lines.</p>

<pre><code>    unsigned long e[ne];
    unsigned long gval;
    unsigned long sum=0;
</code></pre>

<p>Also one should choose either <code>long</code> or <code>int</code> but not both. It would be best if <code>gval</code> was also initialized.</p>

<p>Variables should be declared as needed, for instance the variable <code>gval</code> should be defined inside the first inner for loop as shown below:</p>

<p><strong>Variable Names</strong><br>
Rather than providing comments to explain what the variables are, give the variables meaningful names longer than 2 characters.</p>

<p>This makes the code much easier to read, debug and modify.</p>

<p><strong>Spacing</strong><br>
The vertical and horizontal spacing of the code is all crammed together which makes it very difficult to read add vertical spacing after declarations and after logic blocks.</p>

<p>In expressions there should be spaces around binary operators as shown below.</p>

<pre><code>int main()
{   int n,k;                   //n=height of triangle  k=height of sub-triangles   ne= number of elements
    int t1=0;
    int t2=0;

    scanf("%d %d", &amp;n, k);

    int ne=rec(n);
    int rk=rec(k);
    int nt=ne-rk-1;

    unsigned long e[ne];
    unsigned long sum=0;

    for(int i = 0; i &lt; ne; i++)
    {
        scanf("%ld",&amp;e[i]);
    }

    for(int rt = 0, ior = 0; ior &lt; nt; rt++)
    {
        for(int r=0; r&lt;=rt &amp;&amp; ior&lt;nt; r++,ior++)
        {
            int ioc = 0;
            unsigned long gval = 0;
            for(int ct=0; ioc &lt;rk; ct++)
            {
                for(int c = 0; c &lt;= ct &amp;&amp; ioc &lt; rk; ioc++, c++, t2++)
                {
                    if(gval &lt; e[t2])
                    {
                        gval = e[t2];
                    }
                }
                t2+=rt;
            }
            sum += gval;
            t1++;
            t2 = t1;
        }
    }
    printf("%ld", sum);
    return 0;
}
</code></pre>
    </div>