<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are multiple ways to improve upon this code. I'll go through each thing I found and show how to better implement a solution.</p>

<ul>
<li><code>getvalueofnode()</code> is redundant. You're checking if something is not <code>None</code> but returning <code>None</code> if the object is <code>None</code>. Instead of using this wrapper function, it is far simpler to just use the value of <code>node.text</code>. So in this example, every instance of <code>getvalueofnode(node)</code> should be translated to <code>node.text</code> without consequence.  </li>
<li>From the comments, it seems like you have a list of columns you would like to add from the xml. This seems like an excellent case for a for loop-- provided you have a predefined list of the columns you would like to extract.</li>
<li>I notice you are using two dataframes. Why? From what I can gather, it is simpler to only keep track of one dataframe and use that for the result. </li>
<li>On the topic of dataframes, it is better to collect all your values first and then translate the array of arrays to a dataframe <strong>at the end</strong>. Using <code>df.append</code> is an expensive operation and is not preferred when adding one row at a time in a predictable manner like this solution. It is better to collect all the values first and then convert the whole 2D array to a dataframe.</li>
</ul>

<p>With those points in mind and a few more Pythonic changes, here is what a cleaned up version should look like:</p>

<pre class="lang-py prettyprint-override"><code>import xml.etree.cElementTree as ET
import pandas as pd


if __name__ == '__main__':

    parsed_xml = ET.parse("xml_parsing.xml")
    dfcols = ['Date', 'Prog', 'Box', 'Feature', 'WIN']

    values = []
    for node in parsed_xml.findall('Phones'):
        values.append(map(lambda n: node.find(n).text, dfcols))

    df_xml = pd.DataFrame(values, columns=dfcols)

    df_xml.to_csv("./xml_parsing.csv")

</code></pre>
    </div>