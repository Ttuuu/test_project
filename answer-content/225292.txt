<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Review</h3>

<ul>
<li>Don't use the main entry point to implement an algorithm. Create a method instead.</li>
<li>Think about how to allow this method to be usable for all kinds of types, not just integers. You have implemented the algorithm for integers, yet you show an example with strings.</li>
<li>When creating an algorithm, surely you have made some unit tests, at least for the happy paths. Feel free to include them in the question.</li>
<li>Use clear variable names, and stick to one written language.</li>
<li>Don't mix algorithm logic with Console output.</li>
</ul>

<p>A possible method signature could be:</p>

<pre><code>public static IEnumerable&lt;IEnumerable&lt;T&gt;&gt; SplitRandom&lt;T&gt;(
    this IEnumerable&lt;T&gt; source, int targetCount)
{
    // .. algorithm implementation
}
</code></pre>

<p>Called as..</p>

<pre><code>var names = new [] { "John", "Mike", "Alice", "Bob" };
var teams = names.SplitRandom(2);
</code></pre>

<p>Or as..</p>

<pre><code>var numbers = Enumrable.Range(1, 10);
var numberGroups = numbers.SplitRandom(2);
</code></pre>
    </div>