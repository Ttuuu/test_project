<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I was wondering if there's a need to split at all, because characters are accessible directly using <code>String#charAt</code>.</p>

<p>This implementation (which is almost the same as yours - only with the split) should be among the fastest.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function reverse(str) {
  var result = [];
  for (var i = str.length - 1; i &gt;= 0; i--) {
    result.push(str.charAt(i));
  }
  return result.join("");
}

console.log(reverse("abcde"));</code></pre>
</div>
</div>


<p>According to <a href="https://stackoverflow.com/questions/7299010/why-is-string-concatenation-faster-than-array-join">some benchmark</a>, String concatenation is better optimized than <code>Array.join</code>, it also makes the code cleaner:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function reverse(str) {
  var result = "";
  for (var i = str.length - 1; i &gt;= 0; i--) {
    result += str.charAt(i);
  }
  return result;
}

console.log(reverse("abcde"));</code></pre>
</div>
</div>


<p>As a side-note, you can get creative by using <code>Array.prototype.reduce</code> and allow JavaScript duck-type the <code>String</code> as an <code>Array</code>.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function reverse(str) {
  return Array.prototype.reduce.call(str, function(result, c) {
    return c + result;
  }, "");
}

console.log(reverse("Hello world!"));</code></pre>
</div>
</div>


<p>And going further you can make an ES6 one-liner:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>let reverse = str =&gt; Array.prototype.reduce.call(str, (result, c) =&gt; c + result, "");

console.log(reverse("Hello world!"));</code></pre>
</div>
</div>


<p>JSFiddle forked from @Andreas: <a href="https://jsfiddle.net/kazenorin/6shbv6hs/2/" rel="nofollow noreferrer">https://jsfiddle.net/kazenorin/6shbv6hs/2/</a></p>
    </div>