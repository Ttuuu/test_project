<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Several people have suggested turning the loop in to a linq query and using string.join, I wholeheartedly endorse them, but if you’re not ready for that there is a minor change that addresses your concern.</p>

<pre><code>// Check's if this is the last property, if so, don't add an '&amp;'
if (props.IndexOf(prop) != (props.Count - 1))
{
  queryStringBuilder.Append($"{Uri.EscapeDataString(name)}={UriEscapeDataString(value.ToString())}&amp;");
}
else
{
  queryStringBuilder.Append($"{Uri.EscapeDataString(name)}={Uri.EscapeDataString(value.ToString())}");
}
</code></pre>

<p>Can easily be rewritten as:</p>

<pre><code>queryStringBuilder.Append($"{Uri.EscapeDataString(name)}={Uri.EscapeDataString(value.ToString())}");
// Check's if this is the last property, if not add an '&amp;'
if (props.IndexOf(prop) != (props.Count - 1))
{
  queryStringBuilder.Append(“&amp;”);
}
</code></pre>

<p>But really, if you are going to do this in an explicit loop, it’s a great place to use a ternary assignment:</p>

<pre><code>var queryDelimeter = props.IndexOf(prop) != (props.Count - 1) ? “&amp;” : “”;
queryStringBuilder.Append($"{Uri.EscapeDataString(name)}={Uri.EscapeDataString(value.ToString())}{queryDelimeter}");
</code></pre>
    </div>