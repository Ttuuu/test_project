<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your solution is good. There are a couple bits you could change, sure. Some of them boil down to personal preferences.</p>

<p>Give the arrays more useful names:</p>

<pre><code>public int solution(int[] size, int[] direction)
</code></pre>

<p>Declare <code>topStackDownstreamer</code> when you need it. Keeping the scope of a variable minimal gives you less things to remember. What is <code>topStackDownstreamer</code>? How is it used? What was it's value when we assign a new one? Should we do something with the old value first?</p>

<p>But you might as well not need <code>topStackDownstreamer</code> at all.</p>

<p>As you use <code>if</code> and two <code>else if</code> your code looks like it is missing something - the last <code>else</code>. I'd recommend using one <code>if</code> and <code>else</code> for clarity. You could also restructure the stack looping a little bit and check for stacksize=0 only once:</p>

<pre><code>        if (direction[fish] == DownstreamFloater)
        {
            downstreamersStack.Push(fish);
        }
        else // must be UpstreamFloater
        {
            while (downstreamersStack.Count &gt; 0)
            {
                if(size[fish] &gt; size[downstreamersStack.Peek()])
                {
                    downstreamersStack.Pop();
                }
                else
                {
                    break;
                }
            }

            if (downstreamersStack.Count == 0)
            {
                aliveFishesCounter++;
            }
        }
</code></pre>

<p>Another little bit - you could return without storing the added variables:</p>

<pre><code>return aliveFishesCounter + downstreamersStack.Count;
</code></pre>

<p>The last bit - maybe you could use shorter identifiers. e.g. <code>direction[fish] == DownstreamFloater</code> would look better if it was <code>direction[fish] == Downstream</code>. Another example <code>aliveFishesCounter</code> could be <code>survivors</code>.</p>
    </div>