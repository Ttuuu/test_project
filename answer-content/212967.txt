<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Hello Suule and welcome to Codereview.</p>

<p>What you can do is use a <em>strategy</em> pattern to say what to do in each case. This will not only allow you to reuse the "process" but also to decouple the monitoring and processing code.</p>

<pre><code>FileUtils.monitor(String directory, Consumer&lt;File&gt; action);

class LogAction implements Consumer&lt;File&gt; {

    private final String content;

    public LogAction(String content) {
        this.content = content;
    }

    @Override
    public void accept(File file) {
        Path logPath = Paths.get(file.getName() + LOG_EXTENSION);
        try {
            Files.write(logPath, this.content.getBytes());
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}

FileUtils.monitor("some/directory", new MoveAction(..).andThen(new LogAction(..));
</code></pre>

<p>Also note that the <code>ispdfFile(String):boolean</code> method can be simplified with <code>String#endsWith(String):boolean</code>.</p>
    </div>