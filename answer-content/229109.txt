<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My general approach of an algorithm, in readable form. It is in C#, but it should be clear enough to read. And I personally prefer an algorithmic sketch over a 1-liner, for the sake of clarity. Dictionary is the same as hash table, and StringBuilder is like a list of chars (because strings are immutable in C#). I did not test timing.</p>

<pre><code>    public string Count(List&lt;string&gt; strings)
    {
        var mapping = new Dictionary&lt;char, int&gt;();
        for (char c = 'a'; c &lt; 'z'; c++)
        {
            mapping[c] = 0;
        }
        foreach (var str in strings)
        {
            foreach (var ch in str)
            {
                if(Char.IsLower(ch))
                {
                    mapping[ch]++;
                }
            }
        }
        var b = new System.Text.StringBuilder();
        for (char c = 'a'; c &lt; 'z'; c++)
        {
            b.Append(c, mapping[c]); // Append(c, i) : adds c i times
        }
        return b.ToString();
    }
</code></pre>
    </div>