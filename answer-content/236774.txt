<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The functionality of your program seems slightly weird. You read multiple files, and each one gets split, but in doing so you (explicitly) delete the old data, is this right?</p>

<p>One thing I notice is this piece of code here:</p>

<pre><code>open("last_names.txt", "w").close() #cleaning the last_names.txt file
open("first_names.txt", "w").close() #cleaning the first_names.txt file
lastNamesFile = open("last_names.txt", "a+", encoding="utf-8-sig")
firstNamesFile = open("first_names.txt", "a+", encoding="utf-8-sig")
</code></pre>

<p>This could be replaced by: </p>

<pre><code>lastNamesFile = open("last_names.txt", "w", encoding="utf-8-sig")
firstNamesFile = open("first_names.txt", "w", encoding="utf-8-sig")
</code></pre>

<p>I'd also move it to the start of your function:</p>

<pre><code>with open(fileName, "r", encoding="utf-8-sig") as namesFromFile, 
     open("last_names.txt", "w", encoding="utf-8-sig") as lastNamesFile,
     open("first_names.txt", "w", encoding="utf-8-sig") as firstNamesFile:
</code></pre>

<p>So you can remove the <code>close</code> statements at the end. I'm not sure what the <code>encoding=</code> does, but it might not be necessary.</p>

<p>You can also reduce this:</p>

<pre><code>    for names in namesFromFile:
        allNamesFromFile.append(tuple(names.replace("\n", "").split(" ")))

    for namesTuples in allNamesFromFile:
        try:
            lastNamesFile.write(namesTuples[1] + "\n")
        except:
            lastNamesFile.write("n/a\n")
        try:
            firstNamesFile.write(namesTuples[0] + "\n")
        except:
            firstNamesFile.write("n/a\n")
</code></pre>

<p>To this:</p>

<pre><code>for names in namesFromFile:
    names_split = tuple(names.replace("\n", "").split(" "))
    if len(names_split) &gt;= 1:
        firstNamesFile.write(names_split[0] + "\n")
    else:
        firstNamesFile.write("n/a\n")

    if len(names_split) &gt;= 2:
        lastNamesFile.write(namesTuples[1] + "\n")
    else:
        lastNamesFile.write("n/a\n")
</code></pre>

<p>Allowing a <code>for</code> loop less and two less <code>try ... except</code> blocks as well as a global list which can now be left out:</p>

<pre><code>"Global Variables:"
allNamesFromFile = []
</code></pre>

<p>I don't think this is necessary:</p>

<pre><code>fileName = str(input("Please provide the file name with its extension: "))
</code></pre>

<p>Instead use:</p>

<pre><code>fileName = input("Please provide the file name with its extension: ")
</code></pre>

<p>I'd also look at this part:</p>

<pre><code>try:
    names_separator(fileName)
    print("operation completed")
    break
except:
    print("You have provided an incorrect file name...")
    continue
</code></pre>

<p>You are catching a lot of exceptions, try to be more precise. Instead try: </p>

<pre><code>except FileNotFoundError:
</code></pre>

<p>Lastly, you might want to check naming conventions, variables should be in <code>snake_case</code> and classes in <code>CamelCase</code>.</p>

<p>So, to summarize:</p>

<ul>
<li>check if your program does what you want it to do</li>
<li>open files using <code>with</code></li>
<li>limit the amount of global variables to 0</li>
<li>limit the amount of <code>try ... except</code> blocks</li>
<li>be explicit in the exceptions you're catching</li>
<li>check <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">pep8 style guide</a> for naming of variables</li>
</ul>
    </div>