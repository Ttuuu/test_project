<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since it's always <span class="math-container">\$n^2\$</span> in the second version, by not using <code>java.lang.Math#pow</code> (<span class="math-container">\$n * n\$</span>), you can save computation time. It takes me ±3k nanoseconds instead of the ±20k nanoseconds with the <code>java.lang.Math#pow</code>.</p>

<pre class="lang-java prettyprint-override"><code>    static double lnApproximationOptimized(double x, int n) {
        double a = x - 1;
        double aIteration = a * a;
        double b = 1d;
        double bIteration = 2d;
        double c = x + 1;
        double cIteration = c * c;
        double ln = a / (b * c);

        for (int k = 1; k &lt; n; k++) {
            a *= aIteration;
            b += bIteration;
            c *= cIteration;
            ln += a / (b * c);
        }

        return 2 * ln;
    }
</code></pre>
    </div>