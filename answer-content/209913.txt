<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>    public static int iterations = 1000;
</code></pre>
</blockquote>

<p>That seems quite low. See e.g. <a href="https://crypto.stackexchange.com/a/10335/1127">1</a>, <a href="https://security.stackexchange.com/a/3993/20403">2</a>. Or is the idea that you will use <code>setDurationOnCurrentComputer</code> always?</p>

<hr>

<blockquote>
<pre><code>    private static String seperator = ";";
</code></pre>
</blockquote>

<p>Please correct the spelling to <em>separator</em> throughout the code.</p>

<hr>

<blockquote>
<pre><code>    private static int key_length = 256;
    private static int salt_length = 64;
</code></pre>
</blockquote>

<p><code>static</code>? I find that surprising.</p>

<hr>

<blockquote>
<pre><code>    private static final String CIPHER_ALGORITHM = "AES/CBC/PKCS5Padding";
</code></pre>
</blockquote>

<p>Is there any good reason to choose CBC over GCM? The latter is more parallelisable, and I'm using it on Android API 19, which could fairly be described as ancient.</p>

<hr>

<blockquote>
<pre><code>    public static void setSaltLength(int length) throws Exception {
        if((length &gt; 0) &amp;&amp; ((length &amp; (length - 1)) == 0))
            salt_length = length;
        else
            throw new Exception("Invalid Salt Length");

    }
</code></pre>
</blockquote>

<p>I think this method could use a few improvements:</p>

<ol>
<li>Why a checked exception? <code>IllegalArgumentException</code> looks like the natural fit here.</li>
<li>Why must the salt length be a power of 2? That requirement is non-obvious, so it should be documented, and it wouldn't be a bad idea to also comment the test.</li>
<li>The person who catches that exception will have rude words for the person who wrote the message. <code>"Invalid Salt Length: " + length</code> is <em>much</em> more useful for debugging.</li>
</ol>

<hr>

<blockquote>
<pre><code>    public static String encrypt(char[] password, byte[] data) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidParameterSpecException, BadPaddingException, IllegalBlockSizeException, InvalidKeySpecException {
</code></pre>
</blockquote>

<p>I think you could reasonably throw <code>GeneralSecurityException</code> and simplify that signature a bit.</p>

<hr>

<blockquote>
<pre><code>        byte[] ciphertext = cipher.doFinal(data);
</code></pre>
</blockquote>

<p>While this is tempting, I can tell you from personal experience that it may fail for large data blocks in some API levels. I can't remember offhand whether it was 64kB or 128kB which was the upper limit; to play it safe I suggest calling <code>update</code> with 16kB chunks.</p>

<hr>

<blockquote>
<pre><code>        Base64.Encoder e = Base64.getEncoder();
        return e.encodeToString((e.encodeToString(iv) + seperator + e.encodeToString(ciphertext) + seperator + e.encodeToString(salt)).getBytes());
    }
</code></pre>
</blockquote>

<p>Ok, that's not efficient. Base64 encoding adds an overhead of 33%. Do it twice and you have an overhead of 78%. Ditch the outer <code>encodeToString</code>.</p>

<p>Also, there are two problems with the contents. Putting <code>salt</code> at the end means that you can't start decrypting until you've read the entire string, which is a problem for stream-based operation. And failing to include the value of <code>iterations</code> in the string could mean that you aren't able to decrypt it later.</p>

<hr>

<p>The hardest part of cryptography is key management. There are some clues that you intend this to be used only locally: i.e. you won't be transmitting the ciphertext to another computer to decipher it remotely. So I would strongly suggest that you look at <a href="https://developer.android.com/training/articles/keystore.html" rel="nofollow noreferrer">KeyStore</a>.</p>
    </div>