<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If the difference is only one word, your if statement should just change that one word. Something like this:</p>

<pre><code>string tableName = null; // tableName is the only difference between the two, right?
if (comboBox4.SelectedItem.ToString() == "Salary") {
    tableName = "salary";
} else if (comboBox4.SelectedItem.ToString() == "Other") {
    tableName = "other";
}
</code></pre>

<p>I suggest you to also add an <code>else</code> clause so that when the user selected neither of these, you can have some default table to insert into. But I'll assume you don't have one at the moment.</p>

<p>Now check whether <code>tableName</code> is null. If it isn't, do the insertion and stuff:</p>

<pre><code>if (tableName != null) {
    string iterpti = $"insert into budget.{tableName} (name, suma) values (@name, @price);";

    using (var conDataBase = new MySqlConnection(myConnection))
    using (var cmdDataBase = new MySqlCommand(iterpti, conDataBase))
    {
        cmdDataBase.Parameters.AddWithValue("@name", name);
        cmdDataBase.Parameters.AddWithValue("@price", suma);
        conDataBase.Open();
        cmdDataBase.ExecuteNonQuery();

        MessageBox.Show("Saved");
    }

}
</code></pre>

<p>You can also extract the insertion thingy as a method. You can easily do this by using the "Extract Method" feature in Visual Studio.</p>

<pre><code>private void InsertIntoTable(string tableName) {
    string iterpti = $"insert into budget.{tableName} (name, suma) values (@name, @price);";

    using (var conDataBase = new MySqlConnection(myConnection))
    using (var cmdDataBase = new MySqlCommand(iterpti, conDataBase))
    {
        cmdDataBase.Parameters.AddWithValue("@name", name);
        cmdDataBase.Parameters.AddWithValue("@price", suma);
        conDataBase.Open();
        cmdDataBase.ExecuteNonQuery();

        MessageBox.Show("Saved");
    }
}
</code></pre>

<p>If you're not using C# 6, you can't use string interpolation. You have to manually add the strings together:</p>

<pre><code>string iterpti = "insert into budget." + tableName + " (name, suma) values (@name, @price);";
</code></pre>
    </div>