<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just a quick note:</p>

<pre><code>synchronized(_leftChopstick){
    while(_leftChopstick.isUsed() || _rightChopstick.isUsed())     
</code></pre>

<p>Here you should synchronize on <code>_rightChopstick</code> too since <code>isUsed</code> could be called from other threads concurrently.</p>

<blockquote>
  <p>[...] synchronization has no effect unless both read and write operations are synchronized.</p>
</blockquote>

<p>From <em>Effective Java, 2nd Edition, Item 66: Synchronize access to shared mutable data</em>.</p>

<blockquote>
  <p>Locking is not just about mutual exclusion; it is also about memory visibility. 
  To ensure that all threads see the most up-to-date values of shared mutable 
  variables, the reading and writing threads must synchronize on a common lock.</p>
</blockquote>

<p>From <em>Java Concurrency in Practice, 3.1.3. Locking and Visibility</em>.</p>

<p>Another (and better) solution is using <code>AtomicBoolean</code>s.</p>
    </div>