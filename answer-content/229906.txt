<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A shell script intended to be run as a command (i.e. not sourced into a running shell) should always have a shebang to specify the interpreter it should be run with.  For <a href="/questions/tagged/bash" class="post-tag" title="show questions tagged 'bash'" rel="tag">bash</a>, that would normally be</p>

<pre><code>#!/bin/bash
</code></pre>

<p>That said, the script presented appears to be portable shell, so <code>#!/bin/sh</code> would be more appropriate as it stands.</p>

<p>There's no need for such long lines.  A simple reformat gives a slightly more readable version:</p>

<pre><code>#!/bin/sh

ls |
    xargs -n1 -I {} \
          sh -c 'fst={}; snd=`echo $fst | tr [:upper:] [:lower:]`; mv $fst $snd'
</code></pre>

<p>If we use Bash for the command, then we can use a downcasing expansion (<code>${var,,}</code>) instead of the cumbersome <code>tr</code> command:</p>

<pre><code>#!/bin/sh

ls |
    xargs -n1 -I {} \
          bash -c 'fst={}; snd=${fst,,}; mv $fst $snd'
</code></pre>

<p>The output of <code>ls</code> isn't suitable for parsing.  If we can assume GNU <code>ls</code>, then we could use <code>--quoting-style</code> to escape the names for reading by a shell:</p>

<pre><code>#!/bin/sh

ls --quoting-style=shell-escape |
    xargs -n1 -I {} \
          bash -c 'fst={}; mv $fst ${fst,,}'
</code></pre>

<p>When we have names which differ only in case, do we really want the second to overwrite the first?  I would suggest using <code>mv -n</code> to avoid overwriting existing files.  Sadly this won't give any diagnostic that the file wasn't moved, though.</p>

<p>All this said, a simple <code>for</code> loop is a much simpler alternative:</p>

<pre><code>#!/bin/bash

set -eu

for i in *
do mv -n -- "$i" "${i,,}"
done
</code></pre>
    </div>