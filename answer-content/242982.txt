<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Is my code good enough to get me an A or a B?</p>
</blockquote>

<p><strong>Produces incorrect output</strong></p>

<p>After a while the code produces wrong output.  I would not mind so much that code has a limited range, but one that starts producing errors, without warning, is not good.  B for effort - I admire your goals, C for implementation.</p>

<p><strong>FP for an integer problem</strong></p>

<p>The Fibonacci series runs though various odd numbers, resulting in incorrect results after the precision of <code>double</code> is used up at about 2<sup>DBL_MANT_DIG</sup> or typically 2<sup>53</sup>.  <code>unsigned long long</code> affords at least 2<sup>64</sup>-1.</p>

<p>Although using <code>double</code> allows for a greater <em>range</em>, I'd see using floating point (FP) as a weaker approach to this problem than integers and <a href="https://stackoverflow.com/a/34360258/2410359">strings</a>.</p>

<p><strong>Unneeded code</strong></p>

<p><code>Sleep(2500);</code> no functional purpose to the calculation of the Fibonacci series.  Use of magic numbers 2500, 250 lacks explanation.</p>

<p><strong>main() lacks return type</strong></p>

<p>This style of programming went out 20 years ago.  Code the return type.</p>

<pre><code>// main(){
int main() {
// or clearly
int main(void) {
</code></pre>

<p><strong>Consider declaring object when/where needed</strong></p>

<p>Example</p>

<pre><code>//double x, y, xy;
//...
//while (1){
//    xy = x + y;

double x = 0;
double y = 1;
...
while (1) {
    double xy = x + y;
</code></pre>

<p><strong>Strange to use end-of-line to start printing</strong></p>

<p>A more common idiom is <code>'\n'</code> afterwards and facilitates flushing <code>stdout</code> when line buffered.</p>

<pre><code>//printf("\n%.0lf", y);
printf("%.0lf\n", y);
</code></pre>

<p><strong>Minor: odd formatting</strong></p>

<p><code>}}</code> is uncommon.  Perhaps:</p>

<pre><code>    }
}
</code></pre>

<hr>

<blockquote>
  <p>Can I make the code more professional?</p>
</blockquote>

<p>Stop before the algorithm can no longer provide correct output.</p>
    </div>