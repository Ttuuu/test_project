<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Don't write functions with ten one-letter variables in them.  If you want to conserve bandwidth, enable gzip compression on the web server or use a minifier program.</p>

<p>Try building a string of HTML and inserting it all at once, so that the DOM isn't updated so often.  </p>

<p>Instead of querying class names over and over, keep track of what depth you're at and what unclosed tags are out there.   Every time you encounter a depth equal or less than the previous one, close all pending tags at that depth or deeper.</p>

<pre><code>function closeTags(mindepth, stack) { 
    var closes="";
    while (stack.length &amp;&amp; stack[stack.length-1].depth &gt;= mindepth) {
      var popped=stack.pop();
      closes += "  ".repeat(popped.depth) + "&lt;/" + popped.tag + "&gt;\n";
    }
    return closes;
}

function insertJson(json,target){
  var lastdepth=0,
      tagstack=[],
      html="";

  json=JSON.parse(json.trim());

  for(i of json.filter( i =&gt; i.t )){
    var depth=i.d || 0,
        tag=i.t,
        attrs=i.a || {},
        innerText=i.x || "",
        indent="  ".repeat(depth),
        attrHtml=Object.keys(attrs).map(a =&gt; `${a}="${attrs[a]}"`).join(" ");

    if (depth &lt;= lastdepth) html += closeTags(depth, tagstack);

    html += `${indent}&lt;${tag} ${attrHtml}&gt;${innerText}\n`;

    tagstack.push( {tag,depth} );
    lastdepth=depth;
  }
  document.getElementById(target.t).innerHTML = html + closeTags(0, tagstack);     
}

 insertJson(json,{t:"two"})
</code></pre>
    </div>