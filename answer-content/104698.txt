<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I donâ€™t see any problem with your code in itself; this is exactly the sort of thing variant records are for.</p>

<p>I think the only problem with naming record components is that it can lead you into writing code that attempts to directly alter one component, relying on the compiler to do the necessary whole-register reads and writes (the reference document says in para 17.4 that write accesses must be 16- or 32-bits wide, read accesses must be 8-, 16-, or 32-bits wide). There were <a href="https://groups.google.com/forum/#!searchin/comp.lang.ada/atomic%2420update%2420multiple%2420bitfields/comp.lang.ada/t7Tr6HG346A/1bBfrH3zM5kJ" rel="nofollow noreferrer">discussions on comp.lang.ada</a> about the fact that Ada currently has no way to specify this requirement; <a href="http://www.ada-auth.org/cgi-bin/cvsweb.cgi/ai12s/ai12-0128-1.txt?rev=1.14&amp;raw=N" rel="nofollow noreferrer">AI12-0128</a> refers (for Ada 2020). GNAT now has the pragma/aspect <a href="https://gcc.gnu.org/onlinedocs/gnat_rm/Pragma-Volatile_005fFull_005fAccess.html" rel="nofollow noreferrer"><code>Volatile_Full_Access</code></a>.</p>

<p>Nevertheless, naming the components will produce much more writable, readable and verifiable code.</p>
    </div>