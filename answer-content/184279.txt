<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The main reason why you fail may be because your code reverse the entire sentence while only the order of the words must be reversed; <code>Hello the world</code> should be <code>world the hello</code>. If you want to reverse the whole string, there is <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html#reverse()" rel="nofollow noreferrer">StringBuilder.html#reverse()</a></p>

<p>That put aside. Some problems I see is the usage of <code>StringBuffer</code> which is slower but synchronized. There is also this <code>new String()</code> in your loop which is useless because you can already use <code>sb.append</code>. And there is this ugly string building at the end where <code>sb.toString()</code> is abused while <code>sb.delete</code> can do it.</p>

<hr>

<p>For the fun I made mine which revert the words by traversing  the char sequence from the end and insert the character at a given index. The index is changed when a space is found to insert at the end of the new string : <a href="https://github.com/gervaisb/stackexchange-codereview/blob/q184229/src/main/java/q184229/Sentence.java" rel="nofollow noreferrer">https://github.com/gervaisb/stackexchange-codereview/blob/q184229/src/main/java/q184229/Sentence.java</a></p>

<pre><code>final StringBuilder target = new StringBuilder(value.length());
for (int i=value.length()-1, at=0; i&gt;-1; i--) {
    char character = value.charAt(i);
    if ( Character.isWhitespace(character) ) {
        target.append(character);
        at = target.length();
    } else {
        target.insert(at, character);
    }
}
</code></pre>
    </div>