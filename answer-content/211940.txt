<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The most confusing thing in your code is names of arguments and variables and their types.</p>

<blockquote>
<pre><code>DeviceContext context2D
</code></pre>
</blockquote>

<p>Why not <code>deviceContext</code>?</p>

<blockquote>
<pre><code>PolygonType polygon
</code></pre>
</blockquote>

<p>It's not polygon (which is collection of points as I expect), it's polygon type, so name it <code>polygonType</code></p>

<blockquote>
<pre><code>float numberOfPoints = (float)polygon;
</code></pre>
</blockquote>

<p>Why are you casting to <code>float</code>? Number of points can be non-integer? Also in my opinion it's not good to give another meanings to enum values except what they mean by their names. Your enum defines polygons types, not numbers of points. I recommend to create dictionary:</p>

<pre><code>private static readonly Dictionary&lt;PolygonType, int&gt; NumberOfPoints =
    new Dictionary&lt;PolygonType, int&gt;
    {
        [PolygonType.Trigon] = 3,
        // ...
    };
</code></pre>

<p>and use it:</p>

<pre><code>var numberOfPoints = NumberOfPoints[polygonType];
</code></pre>

<p>Why are you using for polygon types such strange names and not <em>Triangle</em> and <em>Square</em>?</p>

<p>If it's public API method, add arguments checking using appropriate exceptions (<code>ArgumentOutOfRangeException</code>, <code>InvalidEnumArgumentException</code> and so on). All possible exceptions should be documented via <code>&lt;exception&gt;</code> tags.</p>
    </div>