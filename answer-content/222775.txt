<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As developer consuming your API ..</p>

<h3>Usability</h3>

<p>I find this a verbose way of constructing validation rules.</p>

<blockquote>
<pre><code>var rules = ValidationRuleCollection
        .For&lt;Person&gt;()
        .Add(x =&gt;
            ValidationRule
                .Require
                .NotNull(x))
        .Add(x =&gt;
            ValidationRule
                .Require
                .NotNull(() =&gt; x.FirstName))
        .Add(x =&gt;
            ValidationRule
                .Ensure
                .True(() =&gt; x.FirstName.Length &gt; 3));

var (person, results) = default(Person).ValidateWith(rules);
</code></pre>
</blockquote>

<p>I would like to able to call this like:</p>

<pre><code>Tester.Require()
      .NotNull("I want to be able to provide my own error message")
      .NotNull(x =&gt; x.FirstName)
      .Ensure(x =&gt; x.FirstName.Length &gt; 3)
      .Validate();
</code></pre>

<h3>Extensibility</h3>

<ul>
<li>I would like to provide my own error messages and fallback to default messages if I don't specity any</li>
<li>I would like to be able to not only define pass/fail - <code>true</code>/<code>false</code> validations, but I would also like to provide a severity (error, warning, alert, ..)</li>
</ul>

<h3>General Issues</h3>

<ul>
<li>I feel your APIs are always well written, but also pretty complex/verbose. This is a small setback in intuitive use.</li>
</ul>
    </div>