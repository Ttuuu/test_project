<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>From the requirements</h2>

<blockquote>
  <p>I have a set of rules as follows:</p>
  
  <p><strong>Product One:</strong></p>
  
  <p>If either part is acceptable, update both parts </p>
  
  <p><strong>Product Two:</strong></p>
  
  <p>If either part is acceptable, and one age is &gt; 55, update both parts</p>
  
  <p>If either part is acceptable, and neither age is &gt; 55, then update
  whichever part needs updating (or both)</p>
</blockquote>

<p>Follows the next, almost literal, straightforward implementation:</p>

<h2>Straightforward implementation</h2>

<p>So, you could implement this using two <code>Checker</code>s, a <code>Product1Checker</code> and a <code>Product2Checker</code>. </p>

<pre><code>if (this.productName.equals(PRODUCT_ONE))
{
    new Product1Checker().check(this);
}
else if (this.productName.equals(PRODUCT_TWO))
{
    new Product2Checker().check(this);
}
</code></pre>

<p>Like this:</p>

<pre><code>class Product1Checker 
{

    public check (Product product)
    {
         if (product.isAcceptablePartOne || product.isAcceptablePartTwo) 
         {
               product.updatePartOne();
               product.updatePartTwo();
         }
    }
} 
</code></pre>

<h2>Alternative approach</h2>

<p>You could have the <code>Checkers</code> implement a <code>ProductChecker</code> interface. Also, each <code>ProductChecker</code> can have a <code>boolean</code> method indicating if this checker applies to a product. Then you can just add all the checkers to a <code>Set</code>, check if they are applicable, and if so, run them on the product</p>

<pre><code>interface ProductChecker
{
    boolean check     (Product p);
    boolean appliesTo (Product p);
}

Set&lt;ProductChecker&gt; checkers = new HashSet&lt;ProductChecker&gt;();
checkers.add(new Product1Checker());
checkers.add(new Product2Checker());

for (ProductChecker checker: checkers)
{
      if (checker.appliesTo(this))
      {
          checker.check(this));
      }
}
</code></pre>
    </div>