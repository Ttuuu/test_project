<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Good job with the type annotations! Here are a few things you could simplify/improve:</p>

<ul>
<li><p>instead of <code>listdir</code> and an extra file extension check, you could use <a href="https://docs.python.org/3/library/glob.html#glob.iglob" rel="nofollow noreferrer"><code>glob.iglob()</code></a>:</p>

<pre><code>for filename in glob.iglob('./**/*.xlsx'):
</code></pre></li>
<li><p>to improve excel file read performance and memory consumption, you could use <a href="https://openpyxl.readthedocs.io/en/stable/optimized.html#read-only-mode" rel="nofollow noreferrer"><code>read_only=True</code> mode</a></p></li>
<li><p>instead of iterating over <code>sheetnames</code> and getting a sheet by name, you could <a href="https://openpyxl.readthedocs.io/en/stable/api/openpyxl.workbook.workbook.html#openpyxl.workbook.workbook.Workbook.worksheets" rel="nofollow noreferrer">iterate over available worksheets directly</a>:</p>

<pre><code>for sheet in workbook.worksheets:
</code></pre></li>
<li><p><a href="https://stackoverflow.com/a/31237077/771848"><code>iter_rows()</code></a> should improve the way you read the sheet cells</p></li>
</ul>

<hr>

<p>As a side note and as an idea for an alternative solution: what if you transition the data through a <code>pandas.DataFrame</code>, <code>pandas</code> has <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_excel.html" rel="nofollow noreferrer"><code>.read_excel()</code></a> and <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html" rel="nofollow noreferrer"><code>.to_csv()</code></a> methods.</p>
    </div>