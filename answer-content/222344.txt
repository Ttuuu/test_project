<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some suggestions:</p>

<ul>
<li>Using <a href="https://docs.python.org/3/library/argparse.html" rel="noreferrer"><code>argparse</code></a> to parse arguments is preferable to any kind of interactive input, because it means that

<ul>
<li>it's much easier to automate and integrate in other scripts,</li>
<li>you could trivially support passing <em>multiple</em> songs in one command,</li>
<li>it's what any experienced shell user would expect, and</li>
<li>if the user adds <code>--help</code> or doesn't pass any arguments they will get a synopsis for the command.</li>
</ul></li>
<li>The list of explicit words should <em>not</em> be part of the code, because it is configuration and is very likely to change often. You'll want to put words in a separate file and read them in during initialization. You could very easily make this an optional argument (with <code>argparse</code>) so that you could do fancy stuff like <code>./explicit_song_checker.py --words=./words.txt --words=./other.txt ./kill-the-queen.txt ./bulls-on-parade.txt</code></li>
<li><a href="https://github.com/ambv/black" rel="noreferrer"><code>black</code></a> will automatically format your code to be pretty idiomatic, such as using <em>two</em> empty lines between top-level functions.</li>
<li><a href="https://gitlab.com/pycqa/flake8" rel="noreferrer"><code>flake8</code></a> will check for style issues. I believe it will assume that you're writing Python 3, and so will complain about the use of <code>raw_input</code> (called <code>input</code> in Python 3).</li>
<li><a href="https://github.com/python/mypy/" rel="noreferrer"><code>mypy</code></a> can be used to enforce type hints, which is a super helpful way to make your code clearer without resorting to comments.</li>
</ul>
    </div>