<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Waaaay too much duplicate code</p>

<p>For example, in your <code>renderConditionals</code> function</p>

<pre><code>&lt;span key={j}&gt;
  &lt;div id="location" onKeyDown={this.getRouteId} key={j} onClick={this.getRouteId}&gt;
      &lt;p onMouseEnter={this.highlightLoad} onMouseLeave={this.removeHighlight}  tabIndex="0" className={['load-clickables', id].join(" ")} style={{backgroundColor: color ? color : this.props.seededColorGenerator(id, delivery_id)}}&gt;{this.grabCityState(delivery_location)}&lt;i style={{color: '#252525'}} className="fas fa-exclamation"&gt;&lt;/i&gt;&lt;/p&gt;
  &lt;/div&gt;
&lt;/span&gt;
</code></pre>

<p>is identical to</p>

<pre><code>&lt;span key={j}&gt;
  &lt;div id="location" onKeyDown={this.getRouteId} key={j} onClick={this.getRouteId}&gt;
      &lt;p onMouseEnter={this.highlightLoad} onMouseLeave={this.removeHighlight}  tabIndex="0" className={['load-clickables', id].join(" ")} style={{backgroundColor: color ? color : this.props.seededColorGenerator(id, delivery_id)}}&gt;{this.grabCityState(delivery_location)}&lt;i style={{color: '#252525'}} className="fas fa-radiation-alt"&gt;&lt;/i&gt;&lt;/p&gt;
  &lt;/div&gt;
&lt;/span&gt;
</code></pre>

<p>Except for the class added to the icon. The easiest way to fix this is to break these items into their own component:</p>

<pre><code>import React, { Component } from 'react';

export default class Location extends Component {

    render(){
        const { key, id, color, delivery_id, delivery_location, pickupDel, hazmat, sameday,
            handleOnKeyDown, handleOnClick, handleOnMouseEnter, handleonMouseLeave,
            grabCityState, seededColorGenerator
        } = this.props

        return(
            &lt;span key={key}&gt;
              &lt;div id="location" onKeyDown={handleOnKeyDown} key={j} onClick={handleOnClick}&gt;
                  &lt;p onMouseEnter={handleOnMouseEnter} onMouseLeave={handleonMouseLeave}  
                    tabIndex="0" className={`load-clickables ${id}`} 
                    style={{backgroundColor: color ? color : seededColorGenerator(id, delivery_id)}}&gt;
                        {grabCityState(delivery_location)}
                        &lt;i style={{color: '#252525'}} className={`fas ${ hazmat &amp;&amp; 'fa-radiation-alt' } ${ sameday &amp;&amp; 'fa-exclamation'}`}&gt;&lt;/i&gt;
                  &lt;/p&gt;
              &lt;/div&gt;
            &lt;/span&gt;
        )
    }

}
</code></pre>

<p>I've thrown this location component together. It takes all the common stuff you use in every component, and receives more specific things as generic props. Then you import it into your main calendar component and pass it the props it needs.</p>

<p>Now using it would look something like:</p>

<pre><code>renderConditionals = (pickupDel, hazmat, sameday, id, delivery_id, delivery_location, j, color) =&gt; 
&lt;Location key={j} id={id} delivery_id={delivery_id} delivery_location={delivery_location} 
    hazmat={hazmat} sameday={sameday} color={color} pickupDel={pickupDel} 
    handleOnKeyDown={this.getRouteId} handleOnClick={this.getRouteId} handleMouseEnter={this.highlightLoad} handleMouseLeave={this.removeHighlight}
    grabCityState={this.grabCityState} seededColorGenerator={this.seededColorGenerator}
/&gt;
</code></pre>

<p>Now you don't need a big if else statement full of copied code.
Keep in mind I don't 100% understand what things are going on here, I didnt even read your functions, I'm just looking at how things are structured, which is where I think you are the most unfocused. The key takeaway is that if you ever have to copy and paste code in the same project, it can almost definitely be modualized and reused. It might make sense to move functions like <code>seededColorGenerator</code> and <code>grabCityState</code> into the location component if they are not used elsewhere, instead of passing them as props.</p>

<p>Also, I noticed in your highlighting function, you are using document selectors to change the style of things: </p>

<pre><code>let colorArr = document.getElementsByClassName(`${classId}`)`
</code></pre>

<p>We do not ever use document selectors, or directly query or modify the DOM directly in react. You should always be setting a components class by passing it's style props.</p>
    </div>