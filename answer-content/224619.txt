<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you are dealing with number lists, then <a href="https://docs.python.org/3/library/array.html#array.array" rel="nofollow noreferrer"><code>array.array</code></a> has a compact memory representation and implements the buffer protocol which allows <a href="https://docs.python.org/3/library/stdtypes.html#memoryview" rel="nofollow noreferrer"><code>memoryview</code></a>’s to be created, which directly support views like you are creating.</p>

<p>For lists which can hold other things (tuples, dictionaries, lambdas, ...), Python has no built in support, and your view class can be appropriate.</p>

<hr>

<h2>PEP8 guidelines</h2>

<p>Your class name should begin with a capital letter.  I’d suggest <code>ListView</code> as an option.  I don’t know what the ‘y’ is intended to mean.</p>

<p>There should be one space after every comma.  There shouldn’t be any spaces between a variable name and the <code>[</code> character (<code>b = a[1:3]</code>).</p>

<p>Private members (<code>self.begin</code>, etc) should begin with an underscore (<code>self._begin</code>, etc).</p>

<p>Use a pylint, pyflakes, ... to ensure PEP8 compliance. </p>

<hr>

<p>You could implement <code>__repr__</code> in terms of <code>__str__</code>:</p>

<pre><code>    def __repr__(self):
        return str(self)
</code></pre>

<hr>

<p>Extension: Your list view could support a view slice with a step size other than <code>1</code>.</p>

<hr>

<p>You don’t protect against indexing beyond the length of your view. <code>i &gt;= self.len</code>.</p>
    </div>