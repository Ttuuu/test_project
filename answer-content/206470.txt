<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can simplify a lot your first function, you have a lot of useless statements. Also, you don't have to call sqrt each time, just save the result (I know, optimizer can do it for you but...).</p>

<p>Your code fail if we give 2, it's prime, you don't catch this case. Once you know <code>n</code> is not 2 and nor pair, you can just iterate over odds.</p>

<pre><code>int prime(int n)
{       
    if (n == 2)  return 1;                                   
    if (n &lt;= 2 || !(n % 2))  return 0;
    int n_sqrt = (int)sqrt((double)n);
    for (int m = 3; m &lt;= n_sqrt; m += 2) {
       if !(n % m) return 0;
    }
    return 1;
}
</code></pre>

<p>Somes other random remarks:</p>

<ul>
<li>Your indents looks crazy, maybe a formating issue.</li>
<li>Also, you ask user to give number less than 1000, but you don't catch case where they don't respect this requirement.</li>
<li>You never verify validity of your <code>FILE*</code>. Openings can fail.</li>
<li>It's never asked to separate ints with comma in the 2nd file. Using just space should be fine.</li>
<li>For the first file, if you move the first outputting out of the loop, you can get rid of the if...else statement.</li>
</ul>

<p>Like this:</p>

<pre><code>//...
fprintf(fptr, "%d",random[0]);
for (int i = 1; i &lt; n; ++i) {
    fprintf(fptr,",%d",random[i]);
} 
//...
</code></pre>

<ul>
<li>I dont understand why you catch <code>0 &lt; n &lt; 3</code> in a different way</li>
<li>You can write a function <code>sorted_insert</code> that put an int in a array in a sorted way.</li>
<li>You can also compute prime check in the same loop. In fact, all the job can be made with an unique loop (plus one in <code>sorted_insert</code> and another in <code>prime</code>) but since I think it's a school assignment I let you find the rest by yourself.</li>
</ul>
    </div>