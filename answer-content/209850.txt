<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>General notes:</h3>

<p>I will focus mainly on your second question as I cannot imagine simpler solution. I would even suggest to do it a little bit more complex in order to make CSS more scalable (in the terms of resolution and content size).</p>

<p>For instance you can consider using <code>width: auto;</code> for your <code>.popup</code> class in order to make it scale itself depending on internal content.</p>

<p>Another approach would be to set width and height fixed and use <code>overflow:auto;</code> in order to use some scrollbars as internal content grows bigger.</p>

<p>If you would like to make it simpler for the user (if you mean an user of your code) you can wrap it inside some API like:</p>

<pre><code>function showPopup(message) {
      const popupContainerClass = '.popupBg';
      document.querySelector(popupContainerClass).classList.toggle('hide');
      const popupContentClass = '.popup';
      const popupElement = document.querySelector(popupContentClass);
      popupElement.innerHTML = message;
      //... but please be aware of potential Cross Site Request Forgery vulnerability here!
      popupElement.focus();
}
</code></pre>

<h3>Question2:</h3>

<p>Your approach is about hiding an element that in fact is always present in DOM. It usually has advantages because displaying popup will not consume any processing power.</p>

<p>But in some cases (for instance when your popup presence would solely cause complex computations, or require lot of memory -like some videos or animations) it would be considerable to completely remove it from DOM instead.</p>
    </div>