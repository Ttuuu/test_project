<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Your approach is working too hard. The inner loop does <code>K</code> iterations (with could be as large as <code>1,000,000,000</code>), and most of them are redundant: as soon as <code>halfPrice</code> goes beyond <code>M</code> it will stay beyond <code>M</code> for the rest of the loop. Notice that in the worst case (<code>N = 1,000,000,000</code>, and <code>M = 1</code>) you'll need just 30 iteration to reach <code>M</code>. So, something along the lines of</p>

<pre><code>    int halvings = 0;
    while ((halfPrice &gt; M) &amp;&amp; (halvings &lt; K)) {
        sum += halfPrice;
        halfPrice /= 2;
        halvings++;
    }
    sum += (K - halvings) * M;
</code></pre>

<p>will run up to 30,000,000 times faster.</p>

<p>Now, the entire loop is in fact unnecessary. As Jojo applies the promotions (say, <code>P</code> times), the amounts he pays form a geometrical progression: <span class="math-container">\$N + \frac{N}{2} + \frac{N}{4} + ... + \frac{N}{2^P}\$</span>.</p>

<p>It is easy to sum. The accumulated price he pays here is <span class="math-container">\$(1 - \frac{1}{2^{P+1}})*N\$</span>. The only thing left is to determine <code>P</code>. Recall that it is such that <span class="math-container">\$\dfrac{N}{2^P} \ge M\$</span> and <span class="math-container">\$\dfrac{N}{2^{P+1}} \lt M\$</span>. An accurate application of <code>log</code> computes it immediately.</p></li>
<li><p>Beware of the accuracy. During long summation the unavoidable floating point errors do accumulate. They accumulate even more when you add a very small number to a very large one. This phenomenon manifests quite surprisingly: floating point addition is not associative.</p>

<p>This is why it is recommended to do summation other way around: start from small values and work towards the large ones. I don't know if this particular problem is subject to such kind of numerical instability or not. You may want to experiment. In any case, this is necessary to know when tackling floating point.</p></li>
</ul>
    </div>