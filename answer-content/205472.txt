<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The printing portion should be simplified:</p>

<ul>
<li>The use of <code>OrderedDict</code> is superfluous.  A list of pairs would suffice.</li>
<li>I'd prefer to stick to the same iteration variable, when it is used to refer to the same thing.  Choose either <code>c</code> or <code>l</code>.</li>
<li>You are not using <code><em>str</em>.format()</code> effectively.</li>
<li><code>(total if total &gt; 0 else 1)</code> could just be <code>(total or 1)</code>.</li>
</ul>



<pre><code>for c, n in sorted(frequency.items()):
    print('{}:{:&gt;8}{:9.2f}%'.format(c, n, 100 * n / (total or 1)))
</code></pre>

<p>As for the counting process itself, you could write <code>c in frequency</code> instead of <code>c in frequency.keys()</code>.  But, really, the task is so naturally suited to a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> that it would be silly not to use it.</p>



<pre><code>from collections import Counter as _Counter
from string import ascii_lowercase as _ascii_lowercase

text = 'StackExchange Code Review'
frequency = _Counter({c: 0 for c in _ascii_lowercase})
frequency.update(c for c in text.lower() if c in frequency)

total = sum(frequency.values())
print('\n'.join(
    '{}:{:&gt;8}{:9.2f}%'.format(c, n, 100 * n / (total or 1))
    for c, n in sorted(frequency.items())
))
</code></pre>

<p>I think that the call to <code>sorted()</code> should be optional as of Python 3.6.</p>
    </div>