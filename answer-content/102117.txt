<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think you want to have some kind of a multi value single key dictionary. So I suggest to use for example a <code>List&lt;&gt;</code> to hold the values.</p>

<p>Here's an example:</p>

<pre><code>public class DuplicateDictionary&lt;TKey, TValue&gt; : Dictionary&lt;TKey, List&lt;TValue&gt;&gt;, IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;
{
    public new IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; this[TKey key]
    {
        get
        {
            List&lt;TValue&gt; values;
            if (!TryGetValue(key, out values))
            {
                return Enumerable.Empty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;();
            }

            return values.Select(v =&gt; new KeyValuePair&lt;TKey, TValue&gt;(key, v));
        }
        set
        {
            foreach (var _value in value.Select(kvp =&gt; kvp.Value))
            {
                Add(key, _value);
            }
        }
    }



    public void Add(TKey key, TValue value)
    {
        List&lt;TValue&gt; values;
        if (!TryGetValue(key, out values))
        {
            values = new List&lt;TValue&gt;();
            Add(key, values);
        }
        values.Add(value);
    }

    public IEnumerator&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; GetEnumerator()
    {
        foreach (var item in ((Dictionary&lt;TKey, List&lt;TValue&gt;&gt;)this))
        {
            foreach (var value in item.Value)
            {
                yield return new KeyValuePair&lt;TKey, TValue&gt;(item.Key, value);
            }
        }
    }
}
</code></pre>

<hr>

<pre><code>static void Main(string[] args)
{
    var dupDic = new DuplicateDictionary&lt;string, string&gt;();

    dupDic.Add("abc", "123");
    dupDic.Add("abc", "456");
    dupDic.Add("xyz", "789");
    dupDic.Add("xyz", "098");
    dupDic.Add("xyz", "290");

    foreach (var kvp in dupDic)
    {
        Console.WriteLine("Key = \"{0}\" Value = \"{1}\"", kvp.Key, kvp.Value);
    }

    Console.ReadKey();
}
</code></pre>
    </div>