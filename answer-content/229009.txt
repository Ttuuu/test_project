<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your first code snippet has the problem that (in Python 3) <code>input</code> always returns a string, so <code>type(user_in)</code> will always be <code>str</code>, which will never compare equal to <code>int</code>.</p>

<p>Your second code snippet solves the problem in the correct way: try to convert the result to an integer, and catch the exception in case that fails.</p>

<p>Fixing that code is as simple as adding a <a href="https://docs.python.org/3/reference/simple_stmts.html#the-break-statement" rel="nofollow noreferrer"><code>break</code></a> statement:</p>

<pre><code>while True: 
    try: 
        user_in = int(input('Enter an integer value'))
        break
    except ValueError:
        print('Invalid input, please try again')
# do something with user_in here
</code></pre>

<p>There's no reason to assign the result to <code>user_in</code> and then to <code>a</code>. If you want it to be in a variable called <code>a</code>, just assign it to <code>a</code> to begin with.</p>

<p>Also, you should catch the specific exception that you are looking for, in this case <code>ValueError</code>. Catching <em>every</em> exception is almost never a good idea, because this code could fail for reasons other than the user entering something invalid. For example, if you inadvertently used <code>input</code> as a variable elsewhere in the same function, this call of it will probably raise a <code>TypeError</code> or <code>NameError</code>, and you'll want to see that error, not an infinite loop of "Invalid input, please try again".</p>
    </div>