<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Advice 1</strong></p>

<pre><code>public class  LRUCache&lt;K,V&gt;
</code></pre>

<p>You have <em>two</em> spaces between <code>class</code> and <code>LRUCache</code>.</p>

<p><strong>Advice 2</strong></p>

<p><code>v=null</code></p>

<p>In professional Java programming, it is customary to have a single space <strong><em>before</em></strong> and <strong><em>after</em></strong> each <strong><em>binary</em></strong> operator.</p>

<p><strong>Advice 3</strong></p>

<pre><code>public V getElement(K key){

    readLock.lock();
    try { ... } ...
</code></pre>

<p>Looks strange to me. Why not have instead the following:</p>

<pre><code>public V getElement(K key){
    readLock.lock();

    try { ... } ...
</code></pre>

<p><strong>Advice 4</strong></p>

<pre><code>int maxSize=0;
</code></pre>

<p>First of all, I suggest you make it <code>private</code>. Also, there is no need to initialize member <code>int</code>s with zero, that is done by Java by default. Other fundamental types are initialized to zero too.</p>

<p><strong>Advice 5</strong></p>

<pre><code>public LRUCache(final int MAX_SIZE)
</code></pre>

<p>It is idiomatic to name only constants with <code>UPPER CASE</code>. Constructor (and method) parameters are advised to be in <code>camelCase</code>.</p>

<p><strong>Advice 6</strong></p>

<pre><code>private  ConcurrentHashMap&lt;K,V&gt; concurrentHashMap = new ConcurrentHashMap&lt;K, V&gt;();
</code></pre>

<p>You could omit type parameters in <code>new ConcurrentHashMap&lt;K, V&gt;</code> thanks to <strong><em>diamond inference</em></strong>. Also, you could declare all the members instead of <code>maxSize</code> to <code>final</code>:</p>

<pre><code>private final ConcurrentHashMap&lt;K,V&gt; concurrentHashMap = new ConcurrentHashMap&lt;&gt;();
</code></pre>

<p><strong>Advice 7</strong></p>

<pre><code>ConcurrentHashMap&lt;K,V&gt;
</code></pre>

<p>It is also customary to have a single space <strong><em>after</em></strong> each comma character: <code>&lt;K,_V&gt;</code>.</p>

<p><strong>Advice 8</strong></p>

<p><code>concurrentLinkedQueue</code> and <code>concurrentHashMap</code>. These are not the best possible names for the two data structures. Instead of naming them according to their type I instead suggest to name them according to what they do.</p>
    </div>