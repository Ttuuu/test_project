<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>All this criticism of the object model is well founded, but don't forget that this is a college exercise.  College exercises sometimes ask you to do something problematic so you can understand why it's problematic.  A classic example of this is bubble sort.  So I wouldn't focus on that too much unless you're in a relatively advanced programming course.</p>

<p>The first thing that leaps out at me is that you have classes Fahrenheit and Celsius, but your convert method doesn't return instances of those classes; it returns a double.  The pattern of passing a valueless instance of <code>Fahrenheit</code> or <code>Celsius</code> to the conversion method to indicate the desired units of the function's <code>double</code> output function is profoundly unidiomatic for OOP.  I suspect that your professor is after a conversion method that converts an instance of Fahrenheit to an instance of Celsius that represents the same temperature.</p>

<p>You might have </p>

<pre><code>public abstract class Temperature {
  public abstract Celsius toCelsius();
  public abstract Fahrenheit toFahrenheit();
}

public class Celsius extends Temperature {
  double celsius;

  Celsius() {
  }

  Celsius(double celsius) {
    this.celsius = celsius;
  }

  @Override
  public Celsius toCelsius() {
    return this;
  }

  @Override
  public Fahrenheit toFahrenheit() {
    return new Fahrenheit(celsius * 1.8 + 32);
  }
}
</code></pre>

<p>This isn't great object oriented design, but it might just be what your professor is looking for.  If your class is more advanced, it's possible that the exercise is designed to teach a more advanced technique to support methods that convert from one class to another.</p>

<p>As suggested elsewhere, another approach might be to have a single temperature class that stores its magnitude in Kelvin and has factory methods like <code>Temperature fromCelsius(double celsius)</code> for constructing instances from a given system of units, and instance methods like <code>double toCelsius()</code> that return a value in a given system of units.</p>
    </div>