<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have two considerations ,in your class <code>WeightFilterUseCase</code> you have the following method:</p>

<blockquote>
<pre><code>public List&lt;WeightUI&gt; filter(List&lt;WeightUI&gt; weights, WeightFilter weightFilter) {
    switch (weightFilter) {
        case ShowOnlyHaveComment:
            return filterByEmptyComment(weights, true);
        case ShowOnlyHaventComment:
            return filterByEmptyComment(weights, false);
        case ShowOnlyWeightGrowing:
            return filterWeightByChange(weights, WeightChange.WeightGrowing);
        case ShowOnlyWeightDecreases:
            return filterWeightByChange(weights, WeightChange.WeightDecreases);
    }
    throw new EnumConstantNotPresentException(WeightFilter.class, weightFilter.toString());
}
</code></pre>
</blockquote>

<p>You can rewrite the first two cases of your switch with just one case in a more compact way:</p>

<pre><code>case ShowOnlyHaveComment: case ShowOnlyHaventComment:
    return filterByEmptyComment(weights, weightFilter == WeightFilter.ShowOnlyHaveComment);
</code></pre>

<p>Instead of throwing the exception out of the switch you can add the <code>default</code> case and throw there the exception, so your method can be rewritten in this way:</p>

<pre><code>public List&lt;WeightUI&gt; filter(List&lt;WeightUI&gt; weights, WeightFilter weightFilter) {
    switch (weightFilter) {
    case ShowOnlyHaveComment: case ShowOnlyHaventComment:
        return filterByEmptyComment(weights, weightFilter == WeightFilter.ShowOnlyHaveComment);
    case ShowOnlyWeightGrowing:
        return filterWeightByChange(weights, WeightChange.WeightGrowing);
    case ShowOnlyWeightDecreases:
        return filterWeightByChange(weights, WeightChange.WeightDecreases);
    default:
        throw new EnumConstantNotPresentException(WeightFilter.class, weightFilter.toString());
    }
}
</code></pre>

<p>I don't know Kotlin, so I cannot help for Kotlin code.</p>
    </div>