<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think the biggest issue here is not properly working with abstractions.</p>

<p>Before we can create a proper abstraction, we need a better name. When I first looked at the "StaticList" class, I assumed all members of this class were static, as in, not an instance member. They are all instance members, which makes the name of the class misleading. Calling this class "ApplicationList" would be more appropriate</p>

<p>So, first things first, rename the StaticList class (I'll use ApplicationList from here on).</p>

<h2>Abstraction #1: An ApplicationList has a name</h2>

<p>You created a child class that is specific to a single list and hard coded the name of the list. Move this name up into the ApplicationList class and pass the name in when instantiating the list at runtime:</p>

<pre><code>$list = new ApplicationList('MS Office');
</code></pre>

<h2>Abstraction #2: iterating over the list</h2>

<p>Since you are modeling a list, and I'm sure at some point you'll want to iterate/loop over all the items in the list, you can have ApplicationList <a href="http://php.net/manual/en/language.oop5.iterations.php" rel="nofollow noreferrer">implement the Iterator interface in PHP</a>, so you can do things like:</p>

<pre><code>foreach ($list as $index =&gt; $item) {
    // do something with $item
}
</code></pre>

<h2>Separation of Concerns</h2>

<p>You are also mixing data access code with an object more focused on business logic. Consider moving this logic into another class.</p>
    </div>