<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I like this, a lot. It's.. brilliant. Like .NET <code>String</code> objects, VBA strings are immutable, which means like in .NET, when <code>"the quick brown fox"</code> gets appended with <code>"jumps over"</code> and then <code>"the lazy dog"</code>, it's 4 strings that have been generated, and thus the first one got copied 3 times; a VBA <code>StringBuilder</code> class is therefore definitely welcome to any VBA toolkit!</p>

<p>This is some serious code you've got here. Let's take a look.</p>

<p>So you've called the class <code>clsStringBuilder</code>. I know where you're coming from, but there's no real reason for this "cls" Hungarian prefix - I'd remove it, and call the class <code>StringBuilder</code>.</p>

<blockquote>
<pre><code>'******
'* v2 *
'******
</code></pre>
</blockquote>

<p>Don't bother with that. I know version control is natively near-impossible with VBA, but there is no need to "version" code in comments nonetheless; do you actually maintain the version number? Why bother? Just remove it, it's useless clutter.</p>

<blockquote>
<pre><code>Private Const DEFAULT_CAPACITY As Long = &amp;H10
</code></pre>
</blockquote>

<p>Why not <code>16</code>? Hexadecimal <code>10</code> is <code>16</code> right? I think it would be clearer to use a decimal notation. Actually that capacity is potentially confusing, especially given the hex notation. Is <code>&amp;H10</code> the number of bytes? Characters?</p>

<blockquote>
<pre><code>ReDim m_stringBuffer(0 To (DEFAULT_CAPACITY * 2) - 1) 'Each unicode character is 2 bytes
</code></pre>
</blockquote>

<p>Ah, characters then. How about calling the constant <code>DEFAULT_CHARACTER_CAPACITY</code>? Nah, too long.. and I personally don't like the YELLCASE, I'd just call it <code>InitialCharacterCapacity</code>, but I've seen other people use ALL CAPS for constants - as long as you're consistent, it works :)</p>

<p>BTW that's a good comment you have there, but I wouldn't bother specifying "unicode" characters; it gets confusing when the IDE itself only supports ANSI strings!</p>

<p>I don't like prefixes and abbreviated names, so <code>m_currLen</code> would become <code>currentLength</code> and <code>m_stringBuffer</code> would become <code>stringBufffer</code>, or just <code>buffer</code>.</p>

<p>Actually since <code>currentLength</code> is in bytes, I'd call it <code>currentByteLength</code>, so as to avoid question marks when it comes to this:</p>

<blockquote>
<pre><code>Public Property Get Length() As Long
    Length = m_currLen / 2
End Property
</code></pre>
</blockquote>

<hr>

<blockquote>
<pre><code>Public Function Append(strString As String) As clsStringBuilder
</code></pre>
</blockquote>

<p><code>strString</code>, really? I doesn't get any more Hungarian than that! Also you should know that parameters are passed <code>ByRef</code> by default - I'd change the signature to this:</p>

<pre><code>Public Function Append(ByVal value As String) As StringBuilder
</code></pre>

<p>The error handling isn't optimal - if anything blows up, you're bringing up the IDE for the end user to scratch their head and debug your code! That's not production-ready:</p>

<blockquote>
<pre><code>derp:
    Stop
    Resume
</code></pre>
</blockquote>

<p>"derp" means nothing to me - I like following a "template" like this:</p>

<pre><code>Public Sub Foo()
    On Error GoTo CleanFail

    'implementation

CleanExit:
    Exit Sub

CleanFail:
    'handle error
    Resume CleanExit
End Sub
</code></pre>

<hr>

<p>You might also want to make sure <code>Expand</code> doesn't actually <em>shrink</em> the buffer. I think. ;)</p>

<p>Lastly, I'm not sure I understand why <code>toString</code> isn't following the convention and named in <code>PascalCase</code> like every public method - <code>ToString</code> would be better-looking.</p>

<p>Good job!</p>
    </div>