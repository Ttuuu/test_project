<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Right at the start we can turn your <code>hands</code> array in to a dictionary so we can compare <code>Int</code> insted of <code>String</code>, which is way faster. </p>

<blockquote>
  <p>In such a small application it is not mandatory such optimizations, but it is good to consider in the long run.</p>
</blockquote>

<pre><code>Dictionary&lt;string, int&gt; handsValues = new Dictionary&lt;string, int&gt;()
            {
                {"Rock", 0},
                {"Paper", 1},
                {"Sci", 2}
            };
</code></pre>

<p>Because we are going to compare only <code>Int</code> values we get rid of:</p>

<pre><code>int randomNumber = rnd.Next(0, 3);
string computerHand = hands[randomNumber];
Console.WriteLine("Computer Hand : " + computerHand); 
</code></pre>

<p>We turn it into:</p>

<pre><code>int computerHand = rnd.Next(0, 3);
Console.WriteLine("Computer Hand : " + handsValues.Keys.ElementAt(computerHand));
</code></pre>

<p>Calling <code>.Keys</code> on a dictionary returns to us a collection of Index,Value pairs
<a href="https://i.stack.imgur.com/CdNBx.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/CdNBx.png" alt="Memory Visualization"></a>
Then calling <code>.ElementAt(int index)</code> we can get a value by its index</p>

<hr>

<p>The only clear problem with your code is the <code>computerHand</code> and <code>playerHand</code> logic, you can first check for equality of the hands before going to check each variation.</p>

<pre><code>if (handsValues[playerHand] == computerHand)
{
    playerPoints++;
    computerPoints++;
    Console.WriteLine("Player And Computer Win a Point" + Environment.NewLine);
}
else
{
    switch (handsValues[playerHand])
    {
        case 0:
            if (computerHand == 1)
            {
                computerPoints++;
                Console.WriteLine("Computer wins a point" + Environment.NewLine);
            }
            else
            {
                playerPoints++;
                Console.WriteLine("Player wins a point" + Environment.NewLine);
            }
            break;

        case 1:
            if (computerHand == 2)
            {
                computerPoints++;
                Console.WriteLine("Computer wins a point" + Environment.NewLine);
            }
            else
            {
                playerPoints++;
                Console.WriteLine("Player wins a point" + Environment.NewLine);
            }
            break;

        case 2:
            if (computerHand == 0)
            {
                computerPoints++;
                Console.WriteLine("Computer wins a point" + Environment.NewLine);
            }
            else
            {
                playerPoints++;
                Console.WriteLine("Player wins a point" + Environment.NewLine);
            }
            break;
    }
}
</code></pre>

<hr>

<p>A small detail, you can skip the <code>Console.WriteLine();</code>, by putting <code>"\r\n"</code> at the end of you string(not recommended due to OS compatibility problems) or by concatenating <code>Environment.NewLine</code> to your string.</p>

<p>Your naming of variable is on point, excluding the unclear <code>hands</code> </p>

<p>The full code you can check <a href="https://pastebin.com/AwE66frq" rel="nofollow noreferrer">HERE</a>, USE Ctrl + Click</p>
    </div>