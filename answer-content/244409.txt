<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to Code Review, the complexity of your code can be reduced using a <a href="https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Global_Objects/Map" rel="nofollow noreferrer">Map</a> object having as keys sorted lexicographically strings and as values arrays of their anagrams. For example you will have the following couples key - value starting from your input:</p>
<pre><code>key = "aet"  value = ["eat","tea","ate"]
key = "ant"  value = ["tan","nat"]
key = "abt"  value = ["bat"]
</code></pre>
<p>So you can define a function <code>anagrams</code> like this:</p>
<pre><code>function anagrams(input) {
    const map = new Map();

    for (let i = 0; i &lt; input.length; ++i) {
        const key = [...input[i]].sort().join('');
        const value = map.has(key) ? map.get(key) : [];
        value.push(input[i]);
        map.set(key, value);
    }

    return [...map.values()];
}

/*below it will print the expected result*/
console.log(anagrams(["eat", "tea", "tan", "ate", "nat", "bat"])); 
</code></pre>
<p>I just used the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax" rel="nofollow noreferrer">Spread operator</a> to expand the string <code>input[i]</code> to array of characters and after I sort it to obtain the corrisponding key in the map. After I add it to the array of strings associated to the key and finally I return the map values as an array.</p>
<p>Note: I'm a javascript beginner so every hint or criticism about my answer is highly appreciated.</p>
    </div>