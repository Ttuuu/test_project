<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>JAVASCRIPT SECURITY</h3>
<p>Javascript is running on the client, and is therefore under full control of the user. It can be disabled, inspected, manipulated, and everything else that can done in a programming language. You knew this, didn't you?</p>
<p>Javascript is, almost by definition, insecure. Things that have to do with the security of your site, like validating passwords, should not be done in Javascript. And in your code you don't do anything security related in Javascript. All you do is set a timer running and call two PHP scripts. No risks there.</p>
<br>
<h3>PHP SECURITY</h3>
<p>The PHP scripts are another matter. Here is where things really happen, and you should implement your security measures here. Even though these scripts implement AJAX calls, they can be executed by anybody.</p>
<p>You seem to have users, that can log in. Their user ID is stored in <code>$_SESSION['userid']</code>. I notice that you don't do anything, in your PHP scripts, when this ID is absent. You still execute the database queries. That is a bad idea.</p>
<p>When the two current PHP scripts are called, without an user ID, they will probably just perform database queries that are invalid. No real harm done. But you shouldn't rely on just pure luck. Good security should leave no doubts about what will happen.</p>
<p>I therefore propose I slight change to your code. Instead of writing this:</p>
<pre><code>if (isset($_SESSION['userid'])) {
  $userid = $_SESSION['userid'];
}
</code></pre>
<p>you could write this:</p>
<pre><code>if (!isset($_SESSION['userid'])) die('Not logged in.');
$userid = $_SESSION['userid'];
</code></pre>
<p>this means that the PHP scripts will halt execution when there's no user, as they should.</p>
<br>
<h3>PERFORMANCE</h3>
<p>You code is evidently not very efficient. Polling the database every second does not scale very well. There are other ways to do this. For instance with web sockets: <a href="https://developer.mozilla.org/en-US/docs/Web/API/Websockets_API" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/Websockets_API</a> ( you would use a combination of the tools mentioned there). Updates will be quicker, without polling.</p>
<p>For now polling will probably be fine for you, after all you're still learning Jquery and that is a challenge in itself. It takes time to understand how everything hangs together.</p>
    </div>