<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In R this is usually solved using the <code>na.locf</code> (Last Observation Carried Forward) function from the <a href="https://cran.r-project.org/package=zoo" rel="nofollow">zoo</a> package.</p>

<p>See also here:</p>

<ul>
<li><a href="https://stackoverflow.com/questions/27207162/fill-in-na-based-on-the-last-non-na-value-for-each-group-in-r">Fill in NA based on the last non-NA value for each group in R</a></li>
<li><a href="https://stackoverflow.com/questions/23340150/using-dplyr-window-functions-to-make-trailing-values">Using dplyr window-functions to make trailing values</a></li>
</ul>

<hr>

<pre><code># test data
x &lt;- read.table(text="id;date
1;23-04
1;23-04
1;NA
1;NA
2;24-04
2;NA
2;NA
2;NA
3;23-04
3;NA
3;NA
3;NA
4;NA
4;NA
4;NA
4;NA", header=TRUE, sep=";")

library("dplyr")
library("zoo")

x %&gt;% group_by(id) %&gt;% transmute(date=na.locf(date, na.rm=FALSE))
Source: local data frame [16 x 2]
Groups: id

   id  date
1   1 23-04
2   1 23-04
3   1 23-04
4   1 23-04
5   2 24-04
6   2 24-04
7   2 24-04
8   2 24-04
9   3 23-04
10  3 23-04
11  3 23-04
12  3 23-04
13  4    NA
14  4    NA
15  4    NA
16  4    NA
</code></pre>

<p>Another option are rolling self-joins supported by the <a href="https://cran.r-project.org/package=data.table" rel="nofollow">data.table</a> package (see <a href="https://stackoverflow.com/a/23341304/172261">here</a>).</p>
    </div>