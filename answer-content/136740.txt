<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can also implement recursive solution that finds the highest stack and removes element from it and does this until all stacks are of same height:</p>

<pre><code>        public static void main(String[] args) {
        Scanner inputStream = new Scanner(System.in);

        int n1          = inputStream.nextInt();
        int n2          = inputStream.nextInt();
        int n3          = inputStream.nextInt();

        int n1Height    = 0;
        int n2Height    = 0;
        int n3Height    = 0;

        int h1[]        = new int[n1];
        int h2[]        = new int[n2];
        int h3[]        = new int[n3];

        for(int h1_i=n1-1; h1_i &gt;= 0; h1_i--){
            h1[h1_i] = inputStream.nextInt();
            n1Height += h1[h1_i];
        }
        for(int h2_i=n2-1; h2_i &gt;= 0; h2_i--){
            h2[h2_i]  = inputStream.nextInt();
            n2Height += h2[h2_i];
        }
        for(int h3_i=n3-1; h3_i &gt;= 0; h3_i--){
            h3[h3_i]   = inputStream.nextInt();
            n3Height  += h3[h3_i];
        }

        int height = getHeight(n1, n1Height, n2, n2Height, n3, n3Height, h1, h2, h3);
        System.out.println(height);

        inputStream.close();
    }

private static int getHeight(int n1, int n1H, int n2, int n2H, int n3, int n3H, int[] h1, int[] h2, int[] h3) {
    if (n1H==n2H &amp;&amp; n1H==n3H) {
        return n1H;
    }
    if (n1H &gt; n2H) {
        n1-=1;
        n1H-=h1[n1-1];
    } else if (n2H &gt; n3H){
        n2-=1;
        n2H-=h2[n2-1];
    } else {
        n3-=1;
        n3H-=h3[n3-1];
    }
    return getHeight(n1, n1H, n2, n2H,  n3, n3H,  h1, h2, h3);
}
</code></pre>
    </div>