<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The most Pythonic version of this depends a bit on what you do with that URL afterwards. If you are using the <code>requests</code> module (which you probably should), this is already built-in by <a href="http://docs.python-requests.org/en/master/user/quickstart/#passing-parameters-in-urls" rel="nofollow noreferrer">specifying the <code>params</code> keyword</a>:</p>

<pre><code>import requests

URL = "https://example.com/hey"

r1 = requests.get(URL, params={"file": "example"})
print(r1.url)
# https://example.com/hey?file=example

r2 = requests.get(URL, params={"file": "example", "user": "boo"})
print(r2.url)
# https://example.com/hey?file=example&amp;user=boo

r3 = requests.get(URL, params={"user": "boo", "active": 1})
print(r3.url)
# https://example.com/hey?user=boo&amp;active=1

r4 = requests.get(URL, params={})
print(r4.url)
# https://example.com/hey
</code></pre>

<hr>

<p>If you do need a pure Python solution without any imports, this is what I would do:</p>

<pre><code>def get_url(base_url, **kwargs):
    if not kwargs:
        return base_url
    params = "&amp;".join(f"{key}={value}" for key, value in kwargs.items())
    return base_url + "?" + params
</code></pre>

<p>Of course this does not urlencode the  keys and values and may therefore be a security risk or fail unexpectedly, but neither does your code.</p>

<p>Example usage:</p>

<pre><code>print(get_url("/hey", file="example"))
# /hey?file=example

print(get_url("/hey", file="example", user="boo"))
# /hey?file=example&amp;user=boo

print(get_url("/hey", user="boo", active=1))
# /hey?user=boo&amp;active=1

print(get_url("/hey"))
# /hey
</code></pre>
    </div>