<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't see the point in this, further more if you want to hash unhashable things then you probably have a design problem.</p>

<p>Realistically this class lulls you into a false sense of security.</p>

<pre><code>&gt;&gt;&gt; dd = DoubleDict()
&gt;&gt;&gt; dd[1] = 2
&gt;&gt;&gt; dd.update({'foo': 'bar'})
&gt;&gt;&gt; del dd[1]
&gt;&gt;&gt; dict(dd.values_dict)
{2: [1]}
&gt;&gt;&gt; dd
{'foo': 'bar'}
</code></pre>

<p>If you haven't implemented all edge cases don't inherit. Instead just make the class an interface. If "there are a lot of things I haven't fleshed out" then don't inherit. Some may argue just don't inherit period.</p>

<p>I think inheritance is good if you know how to use it. Like if you inherit <a href="https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableMapping" rel="nofollow noreferrer"><code>collections.abc.MutableMapping</code></a>. By defining a meager 5 methods you too can have a complete dictionary. Better yet, if you inherit from <a href="https://docs.python.org/3/library/typing.html#typing.MutableMapping" rel="nofollow noreferrer"><code>typing.MutableMapping</code></a> you can have the object be fully typed too - if you type the abstract methods.</p>
    </div>