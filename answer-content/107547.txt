<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote class="spoiler">
  <p> <sub>Personally, I hate having a <code>setInterval</code> in JS code, especially to
 fetch live updates. I hate it even more when it is used for hitting
 the server for a database read/write operation, irrespective the size
 of project.</sub></p>
</blockquote>

<p>The code you have is quite good, considering that it was your first time. There are quite a few suggestions though. Read on:</p>

<ol>
<li>Instead of having 2 separate files to fetch data of <code>attendance = 0</code> and <code>attendance = 1</code>, use a single file with a parameter passed via a GET or POST request.</li>
<li>Instead of dumping the entire data as HTML, I'd suggest outputting the results as JSON so that it might be of use to other applications, without having to resort to HTML parsers. This helps if you think/plan on providing an API for other users to develop on.</li>
<li>Since the data for <code>room_data</code> gets updated with an underlying python application, you can modify it to write the output to a static JSON file and hit this JSON content instead of executing a MySQL query every second. This will help as the browser will get a <strong>304 response status</strong> from the server if the JSON was not updated since last fetch. <em>Caching FTW ^_^</em></li>
<li>Put the external script/stylesheets in <code>head</code>.</li>
<li><p>Since all you need for the MySQL to return is concatenated name string, do so in MySQL itself:</p>

<pre><code>SELECT CONCAT(firstname, ' ', lastname) AS 'name'
FROM room_Data
WHERE attendance = :something
</code></pre></li>
<li><strong>Do not use <code>h4</code> tags for list items</strong>.</li>
</ol>

<p>If you follow (1) above, you won't need the (3). I strongly recommend using (3) though.</p>
    </div>