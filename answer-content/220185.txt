<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Edit : as asked, I've edited my code to make a good proof of concept. I've also adapted it to the reworked version of the script, since it doesn't really matter.</strong></p>

<p>Well, I'm lazy and I love to let my script do all the work for me. And you should too !</p>

<p>So instead of <code>index</code>, <code>adults-new</code>, <code>young-adults</code> and <code>kids</code> having one page each, how about something like that :</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var listForm={
	'adult_old':{
		'Listening &amp; Speaking':{'weight':4,'fields':5,'max':100},
		'Reading':{'weight':3,'fields':5,'max':100},
		'Writing':{'weight':1,'fields':5,'max':100}
	},
	'adult_young':{
		'Listening':{'weight':4,'fields':4,'max':5},
		'Speaking':{'weight':3,'fields':4,'max':5},
		'Reading':{'weight':2,'fields':4,'max':5},
		'Writing':{'weight':1,'fields':4,'max':5},
	}
};
var form = document.querySelector('form');

function toggleForm(formSelected){
  let myForm=listForm[formSelected];
  let formContent='';
  for(activity in myForm){
    var myActivity=myForm[activity];
    formContent+='&lt;fieldset data-weight="'+myActivity['weight']+'"&gt;';
    formContent+='&lt;legend&gt;'+activity+'&lt;/legend&gt;';
    for(i=0;i&lt;myActivity['fields'];i++)formContent+='&lt;input type="number" step="any" min="0" max="'+myActivity['max']+'"&gt;';
    formContent+='&lt;output&gt;&lt;/output&gt;&lt;/fieldset&gt;';
  }
  document.getElementById('classActivity').innerHTML=formContent;
}

function averageInputValues(fieldset) {
  var totalValue = 0;
  var totalNumber = 0;
  var inputs = fieldset.querySelectorAll('input');
  for (var input of inputs) {
    if (!input.validity.valid) {
      return;
    }
    totalValue += Number(input.value);
    totalNumber += Boolean(input.value);
  }
  return totalValue / totalNumber;
}

function setOutputValues() {
  var max = form.querySelector('input').max;
  var totalWeightedAverage = 0;
  var totalWeight = 0;
  var fieldsets = form.querySelectorAll('fieldset');
  for (var fieldset of fieldsets) {
    var average = averageInputValues(fieldset);
    var fieldsetOutput = fieldset.querySelector('output');
    if (average == undefined) {
      fieldsetOutput.value = 'You may only enter 0 to ' + max + '.';
    } else if (isNaN(average)) {
      fieldsetOutput.value = 'Please enter a grade.';
    } else {
      fieldsetOutput.value = 'avg: ' + average.toFixed(1);
    }
    var weight = fieldset.dataset.weight;
    if (!weight) {
      weight = 1;
    }
    totalWeightedAverage += average * weight;
    totalWeight += Number(weight);
  }
  var classActivity = totalWeightedAverage / totalWeight;
  var divOutput = document.getElementById('total_output');
  if (isNaN(classActivity)) {
    divOutput.value = '';
  } else if (max == 5) { // Adults: New
    divOutput.value = 'CA: ' + (classActivity / (max / 100)).toFixed(1); // The class activity grade must be calculated out of 100.
  } else {
    divOutput.value = 'CA: ' + classActivity.toFixed(1);
  }
}

function detectChange() {
  var inputs = form.querySelectorAll('input');
  for (var input of inputs) {
    if (input.value) {
      return true;
    }
  }
}

var nav_items=document.querySelectorAll('.nav_item');
for (var nav_item of nav_items) {
  nav_item.addEventListener('click', function(){
    document.querySelector('.current').classList.remove('current');
    this.classList.add('current');
    toggleForm(this.id); 
   });
}
toggleForm('adult_old');//default form

form.querySelector('[type="button"]').addEventListener('click', setOutputValues);

form.addEventListener('reset', function(event) {
  if (detectChange() &amp;&amp; !confirm('Your changes will be lost.\nAre you sure you want to reset?')) {
    event.preventDefault();
  }
});

window.addEventListener('beforeunload', function(event) {
  if (detectChange()) {
    event.returnValue = 'Your changes may be lost.';
  }
});</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>html,
body {
  margin: 0;
  padding: 0;
}

header {
  padding: 16px 0;
  text-align: center;
  background: linear-gradient(#999, #333);
}

img {
  width: 36px;
  height: 36px;
  vertical-align: bottom;
}

h1 {
  font-size: 1.125rem;
  font-family: 'Times New Roman';
  color: #FFF;
  text-shadow: 0 3px #000;
  letter-spacing: 1px;
}

nav {
  display: flex;
  justify-content: center;
  background: #333;
  border-top: 2px solid;
}

span {
  color: #FFF;
}

nav span {
  padding: 12px 6px;
  font: bold 0.75rem Verdana;
  text-decoration: none;
  cursor:pointer;
}

nav span:not(:last-child) {
  margin-right: 2px;
}

nav span:hover,
nav span:focus,
.current {
  outline: 0;
  border-top: 2px solid;
  margin-top: -2px;
}

main,
div {
  display: flex;
}

form {
  margin: 32px auto;
}

fieldset {
  margin: 0 0 16px;
  padding: 12px 12px 0;
  border: 1px solid #CCC;
  background: linear-gradient(#FFF, #CCC);
}

legend,
input,
output,
button {
  font-family: Arial;
}

legend,
button {
  color: #333;
}

legend {
  padding: 0 4px;
  font-size: 0.875rem;
}

input,
button,
div output {
  font-size: 0.833rem;
}

input {
  width: 4em;
}

input:invalid {
  outline: 1px solid red;
}

output {
  color: #C00;
}

fieldset output {
  display: block;
  margin: 8px 0 8px 6px;
  font-size: 0.75rem;
}

fieldset output::after {
  content: "\00A0";
}
/* a placeholder */

div output {
  margin: auto auto auto 6px;
}

footer {
  padding: 12px;
  background: #333;
  font: 0.75rem Arial;
  color: #FFF;
}

address {
  float: right;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
  &lt;meta name="description" content="Calculate the class activity grades of the ILI students."&gt;
  &lt;title&gt;Class Activity Calculator&lt;/title&gt;
  &lt;link rel="icon" href="favicon.ico"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;header&gt;
    &lt;img src="logo.png" alt="Logo"&gt;
    &lt;h1&gt;Class Activity Calculator&lt;/h1&gt;
  &lt;/header&gt;
  &lt;nav&gt;
    &lt;span class="nav_item current" id="adult_old"&gt;Adults: Old&lt;/span&gt;
    &lt;span class="nav_item" id="adult_young"&gt;Young Adults&lt;/span&gt;
  &lt;/nav&gt;
  &lt;main&gt;
    &lt;form autocomplete="off"&gt;
      &lt;div id="classActivity" style="display:block;"&gt;&lt;/div&gt;&lt;!--didn't want to touch the css--&gt;
      &lt;div&gt;
        &lt;button type="button"&gt;Calculate&lt;/button&gt;
        &lt;output id="total_output"&gt;&lt;/output&gt;
        &lt;button type="reset"&gt;Reset&lt;/button&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  &lt;/main&gt;
  &lt;footer&gt;
    Share on &lt;a href="https://t.me/share/url?url=https%3A%2F%2Fclassactivitycalculator.github.io%2F&amp;text=Class%20Activity%20Calculator%3A%20Calculate%20the%20class%20activity%20grades%20of%20the%20ILI%20students." title="Telegram: Share Web Page"&gt;Telegram&lt;/a&gt; |
    &lt;a href="https://www.facebook.com/dialog/share?app_id=2194746457255787&amp;href=https%3A%2F%2Fclassactivitycalculator.github.io%2F" title="Post to Facebook"&gt;Facebook&lt;/a&gt;
    &lt;address&gt;&lt;a href="https://t.me/MortezaMirmojarabian" title="Telegram: Contact @MortezaMirmojarabian" rel="author"&gt;Give feedback&lt;/a&gt;&lt;/address&gt;
  &lt;/footer&gt;
&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>


<p>That way, you'll only need to change the object at the start if an activity (or class, or evaluation) is added or removed.</p>

<p>You should also put all your JS in <code>global.js</code> (or another file if you use <code>global.js</code> somewhere else, but I don't think so), it's good practice.</p>
    </div>