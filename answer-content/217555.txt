<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is actually a pretty solid solution (I am particularly fond of your <code>getFrequencyMapFromArray()</code>). The only "brute force" section I notice is your for loop in <code>countError()</code> loops through all letters a-z, rather than only the letters observed. </p>

<p>You could reduce this to only those present in the maps by using the <code>map.keySet()</code> and looping through both maps' key sets. As a bonus, when looping through the first keySet, <code>map.remove()</code> the keys present in both from the next map, to reduce your duplication even further! Should look something like this:</p>

<pre class="lang-java prettyprint-override"><code>private static int countError( Map&lt;Character, Long&gt; aMap, Map&lt;Character, Long&gt; bMap ) {
    long deletedChars = 0;
    for(Character key : aMap.keySet()){
        if (!bMap.containsKey(key) ) {
            deletedChars += aMap.get(key);
        } else if( bMap.containsKey(key)){
            deletedChars += Math.abs( aMap.get(key) - bMap.get(key));
            bMap.remove(key);//Remove here bc we have already checked this.
        }
    }
    for(Character key : bMap.keySet()){
        if(!aMap.containsKey(key)){
            deletedChars += bMap.get(key);
        }//No need to check for 'both maps contain' bc we have removed all such cases

    }
    return (int)deletedChars;
}
</code></pre>
    </div>