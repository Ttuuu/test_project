<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The third <code>&lt;div&gt;</code> appears to be the same in all three cases, so that can be abstracted out of the cases.</p>
<p>The outermost <code>&lt;div&gt;</code> appears to have class <code>pt-4</code> applied only if <code>is_page_template( 'landingpage.php' )</code> returns a value that evaluates to <code>FALSE</code> <em>and</em> <code>is_single()</code> returns a value that evaluates to <code>TRUE</code>.</p>
<p>And the first nested (i.e. second) <code>&lt;div&gt;</code> has class <code>container-fluid</code> if either of those functions return a value that evaluates to <code>TRUE</code>.</p>
<p>This logic could be rewritten as below. I know it strays away from the familiar wordpress style of using the <a href="https://www.php.net/manual/en/control-structures.alternative-syntax.php" rel="nofollow noreferrer">Alternative syntax for control structures</a> and uses the <em>shortcut syntax</em> (i.e. <code>&lt;?=</code>) of <code>echo</code> but it does add some separation of the logic from the markup</p>
<pre><code>&lt;?php
// default class names
$contentClass = 'site-content';
$containerClass = 'container-fluid';
if (!is_page_template( 'landingpage.php' )) {
    if (is_single()) {
        $contentClass .= ' pt-4';
    }
    else {
        $containerClass = 'container';
    }
}
?&gt;
    &lt;div id="content" class="&lt;?= $contentClass; ?&gt;"&gt;
        &lt;div class="&lt;?= $containerClass; ?&gt;"&gt;
            &lt;div class="row"&gt;
</code></pre>
<p>It could be simplified using <a href="https://www.php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary" rel="nofollow noreferrer">ternary operators</a> but some may argue that would detract from readability.</p>
<ul>
<li><p><em>Is this shorter</em>?</p>
<p>yes, only by two lines</p>
</li>
<li><p><em>is this more elegant</em>?</p>
<p>Well, that is subjective. The code above should be simpler to read. Consider the scenario where the code is updated by multiple people, including programmers and designers. The programmers can have designers update the markup without affecting the business logic. For more on this topic, refer to <a href="https://thisinterestsme.com/mixing-php-html/" rel="nofollow noreferrer">Mixing PHP and HTML</a>.</p>
</li>
</ul>
    </div>