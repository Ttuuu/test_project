<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The main idea is you can define routes in each controller (no matter how). For hide the base route, you can use a base class with a method addRoute and a property baseRoute or just use a simple variable for base route.</p>

<p>With Ecma6 will look something like this:</p>

<p>in projects.controller.js</p>

<pre><code>require('base.controller.js')
class ProjectsController extends BaseController {
  constructor(app){
    super(app, "/api/v1/Project");
    this.addRoute("/", "get", this.getAll);
    this.addRoute("/:id", "get", this.getOne)
  }
  getAll(){}
  getOne(){}
}
module.exports = ProjectsController;
</code></pre>

<p>in 'base.controller.js':</p>

<pre><code>class BaseController {
  constructor(app, baseRoute){
    this.baseRoute = baseRoute;
    this.app = app
  }
  addRoute(route, method, callback){
    const url = this.baseRoute + route;
    console.log('controllerRoute', url, method);
    this.app[method](url, callback.bind(this));
 }
}
module.exports=BaseController;
</code></pre>

<p>and in index.js (or app/server.js), for each controller:</p>

<pre><code>require("./projects.controller.")(app);
</code></pre>

<p>The simplest way:</p>

<pre><code>let baseRoute = "/api/v1/Project";
app.use(baseRoute + "/", new ProjectRouter().routes);
app.use(baseRoute + '/:projectId/Context', new ContextRouter().routes);
</code></pre>
    </div>