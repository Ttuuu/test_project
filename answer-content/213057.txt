<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Better strategy</strong> at the first glance does not exist. Consider a graph formed by the numbers an array, with the edges connecting vertices which add up to a perfect square. The problem then is reduced to finding a <a href="https://en.wikipedia.org/wiki/Hamiltonian_path_problem" rel="nofollow noreferrer">Hamiltonian path</a>. The problem is known to be NP-complete. There is an algorithm solving it in <span class="math-container">\$O(n^2 2^n)\$</span> time; in general case it is better than brute force, but still exponential.</p>

<p>Your case <em>could</em> have a better asymptotic, because the graph has a very particular structure. For starters, for path to exist the should be no more than 2 vertices of the degree 1 (if the array had 18, there would be 3 such vertices). Also your graph is very sparsely connected, and has quite a few vertices of degree 2. This suggests a heuristic similar to the <a href="https://en.wikipedia.org/wiki/Knight%27s_tour#Warnsdorf's_rule" rel="nofollow noreferrer">Warnsdorf's rule</a>: start with a vertex of the least degree, and always inspect the neighbors in the ascending order of degrees (smallest first).</p>

<p>For example in your array, starting with <code>16</code> (degree 1) forces the resulting sequence with not a single branch point.</p>
    </div>