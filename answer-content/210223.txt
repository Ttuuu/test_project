<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>These:</p>

<pre><code>char space_1 = ' ';
char space_2 = ' ';
char space_3 = ' ';
char space_4 = ' ';
char space_5 = ' ';
char space_6 = ' ';
char space_7 = ' ';
char space_8 = ' ';
char space_9 = ' ';
int space_1y, space_1x;
int space_2y, space_2x;
int space_3y, space_3x;
int space_4y, space_4x;
int space_5y, space_5x;
int space_6y, space_6x;
int space_7y, space_7x;
int space_8y, space_8x;
int space_9y, space_9x;
</code></pre>

<p>should certainly be refactored into three arrays. That will allow you to write sane loops and decrease the repetition in your code.</p>

<p>For all of your global variables, as well as all of your functions except <code>main</code>, they should be declared <code>static</code> because they aren't being exported to any other modules.</p>

<p>Your <code>running</code> and <code>playing</code> variables are actually booleans, so you should be using <code>&lt;stdbool.h&gt;</code>.</p>

<p>Having <code>x</code> and <code>y</code> as globals seems ill-advised, especially where you have them being used in loops like this:</p>

<pre><code>for(y=0;y&lt;=row;y++){
    for(x=0;x&lt;=col;x++){
</code></pre>

<p>They should probably be kept as locals, and in this case, instantiated in the loop declaration.</p>

<p>Your <code>if(which == 0){</code> can be replaced by a switch, since you're comparing it three times.</p>

<p><code>char *chose_x</code> and any other string that doesn't change should be declared <code>const</code>.</p>

<p>This:</p>

<pre><code>if(input == 'O' || input == 'o')
</code></pre>

<p>should be:</p>

<pre><code>if (tolower(input) == 'o')
</code></pre>

<p>and similarly for similar cases.</p>

<p>This:</p>

<pre><code>x = col / 2 - slen / 2;
</code></pre>

<p>can be:</p>

<pre><code>x = (col - slen) / 2;
</code></pre>

<p>though, as @PeterCordes correctly notes, you need to be careful about applying this rule generally if working with signed integers. And yes, it is best practice to make variables <code>unsigned</code> if you know that the data will not be negative.</p>

<p>This:</p>

<pre><code>    if(yy == 0 || yy % 2 == 0){
        mvprintw(y + yy, x, break_lines);
    }else{
        mvprintw(y + yy, x, play_lines);
    }
</code></pre>

<p>should use an intermediate variable for simplicity, and the first <code>== 0</code> is redundant:</p>

<pre><code>char *lines;
if (!(yy % 2))
    lines = break_lines;
else
    lines = play_lines;
mvprintw(y + yy, x, lines);
</code></pre>

<p>Do a similar temporary variable strategy in your code for <code>Print an "X" in the cell</code>. This is in the name of DRY ("don't repeat yourself").</p>

<p>Since you won't be modifying this:</p>

<pre><code>char done_splash[] = "Good move!";
</code></pre>

<p>You should instead declare it as a <code>const char*</code> rather than an array.</p>
    </div>