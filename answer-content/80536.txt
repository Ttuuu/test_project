<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is a lot to be improved here.  Number one is that you have huge blocks of code in super methods that handle entire moves.  You should split that up into smaller logical groups for ease of reading, debugging, maintenance, and additions.  One example I noticed is that you have this a lot:</p>

<pre><code>cout &lt;&lt; "\n 1. Attack the thief" &lt;&lt; endl;
cout &lt;&lt; "\n 2. Attempt to flee" &lt;&lt; endl;
</code></pre>

<p>Maybe you should make a method to print the options:</p>

<pre><code>void printOptions(std::vector&lt;std::string&gt; ops)
{
    for(const auto&amp; opt : ops) {
        std::cout &lt;&lt; &amp;elem - &amp;v[0] &lt;&lt; opt &lt;&lt; std::endl;
    }
}
</code></pre>

<p>Then, you can just call this:</p>

<pre><code>printOptions({"Attack the thief", "Attempt to flee"});
</code></pre>

<p>This is cleaner than the other version, and is reusable, so it will shorten your code.  You can also have as many arguments as you wish, so if you want three options sometime, no problem.</p>

<p>Another problem you have is you are <code>using namespace std;</code>.  This is bad, because later you may define your own namespace or use a different one that has some methods named the same, <a href="https://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice">which could cause problems</a>.</p>

<p>Your <code>switch</code> statements should not look like this:</p>

<pre><code>switch (input) {

    case 1:
    searchBody();

    case 2:
    riverstead();

}
</code></pre>

<p>Instead, the <code>case</code> statements should be indented, like this:</p>

<pre><code>switch (input) {
    case 1:
        searchBody();

    case 2:
        riverstead();
}
</code></pre>

<p>Also, I believe you have an error here.  In C++, and most other languages, once a matching <code>case</code> statement is reached, you continue executing all lower <code>case</code> statements.  If <code>case 1:</code> is matched and <code>searchBody();</code> is executed, that means <code>riverstead();</code> is also executed.  You should add a <code>break;</code> statement to the end of each <code>case</code> block:</p>

<pre><code>switch (input) {
    case 1:
        searchBody();
        break;

    case 2:
        riverstead();
        break;        // unnecessary here because it is the last statement, but good practice.
}
</code></pre>

<p>I prefer <code>if</code>/<code>else</code> statements to <code>switch</code> statements, but <code>switch</code> statements are sometimes helpful.</p>

<p>Again, you have huge methods that should be split up into smaller blocks.  I'm sure there are other things you can clean up, but this will be a good start</p>
    </div>