<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to Code Review, I have some suggestions for you:</p>

<h2>Logic of the game and a possible implementation</h2>

<p>Starting from your code:</p>

<blockquote>
<pre><code>int rock = 1;
int paper = 2;
int scissors = 3;
</code></pre>
</blockquote>

<p>You already identified that rock, paper, and scissors can be represented as three consecutive numbers, a better choice of these three numbers is rock = 0, paper = 1 and scissors = 2. Why ? Because if <code>player1</code> and <code>random</code> are the choices for the player and computer in the range of integers 0, 1, 2 you can determine who is the winner checking the conditions <code>player1 == ((random + 1) % 3)</code> and <code>random == ((player1 + 1) % 3)</code> . If the first one is true player wins, if the second one is true computer wins, if both are false there is a draw.</p>

<p>A possibility to reduce your code is given by creating an <code>Enum</code> Hand:</p>

<pre><code>private enum Hand {ROCK, PAPER, SCISSORS};
//the method below will print for 0, 1, 2 values for random the Strings ROCK, PAPER, SCISSORS
String hand = Hand.values()[random].name();
//with lowercase ROCK, PAPER, SCISSORS strings will become rock, paper, scissors
String lower = hand.toLowerCase();
</code></pre>

<p>The good thing about <code>Enum</code> is that <code>ROCK, PAPER, SCISSORS</code> have the default values of 0, 1, 2 so you don't need to define them, so you can define a prototype for your class like this:</p>

<pre><code>public class RockPaperScissors {

    private enum Hand {ROCK, PAPER, SCISSORS};

    public static void main(String[] args) { /*here your logic*/ }
}
</code></pre>

<p>Because you have a lot of repetitive messages about the game differing just for one word you can define String templates like these:</p>

<pre><code>String messageTie = "You have tied, computer %s, please try again\n";
String messageWin = "You win, computer chose %s\n";
String messageLost = "Computer chose %s, computer has won\n";
</code></pre>

<p>Notice that %s can be substituted by the words rock, paper, scissors so the number of messages decreases to three.</p>

<p>You can write your class like this:</p>

<pre><code>public class RockPaperScissors {

    private enum Hand {ROCK, PAPER, SCISSORS};

    public static void main(String[] args) {

        Random rd = new Random();
        String messageTie = "You have tied, computer %s, please try again\n";
        String messageWin = "You win, computer chose %s\n";
        String messageLost = "Computer chose %s, computer has won\n";

        try (Scanner kb = new Scanner(System.in)) {
            while (true) {
                System.out.print("Please Enter: \n0 for Rock, \n1 for Paper, \n2 for Scissors: ");
                int player1 = kb.nextInt();
                if(player1 &lt; 0 || player1 &gt; 2) {
                    System.out.print("Invalid response");
                    break;
                }
                //here the logic to determine the winner
        }
    }

}
</code></pre>

<p>My implementation differs from your's because I'm using the <a href="https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html" rel="nofollow noreferrer">try with resources statement</a> and legitimate choices for players are numbers 0, 1, 2, different number of another type of input will bring to the termination of the program.</p>

<p>The logic to determine the winner and print the appropriate the right message is the following:</p>

<pre><code>int random = (rd.nextInt(3));
String messageGame = messageTie;
if (player1 == ((random + 1) % 3)) {
    messageGame = messageWin;
} 
if (random == ((player1 + 1) % 3)) {
    messageGame = messageLost;
}
String hand = Hand.values()[random].name();
System.out.printf(messageGame, hand.toLowerCase());
</code></pre>

<p>Initially I'm supposing the game will end with a draw result and it will be printed the draw message, if one of the condition is true the message will change. The method <code>System.out.printf</code> will take the computer <code>hand</code> result as a parameter.</p>

<p>Here the code complete of my version of the class <code>RockPaperScissors</code>:</p>

<h2>RockPaperScissors.java</h2>

<pre><code>public class RockPaperScissors {

    private enum Hand {ROCK, PAPER, SCISSORS};

    public static void main(String[] args) {

        Random rd = new Random();
        String messageTie = "You have tied, computer %s, please try again\n";
        String messageWin = "You win, computer chose %s\n";
        String messageLost = "Computer chose %s, computer has won\n";

        try (Scanner kb = new Scanner(System.in)) {
            while (true) {
                System.out.print("Please Enter: \n0 for Rock, \n1 for Paper, \n2 for Scissors: ");
                int player1 = kb.nextInt();
                if(player1 &lt; 0 || player1 &gt; 2) {
                    System.out.print("Invalid response");
                    break;
                }
                int random = (rd.nextInt(3));
                String messageGame = messageTie;
                if (player1 == ((random + 1) % 3)) {
                    messageGame = messageWin;
                } 
                if (random == ((player1 + 1) % 3)) {
                    messageGame = messageLost;
                }
                String hand = Hand.values()[random].name();
                System.out.printf(messageGame, hand.toLowerCase());
            }
        }
    }

}
</code></pre>
    </div>