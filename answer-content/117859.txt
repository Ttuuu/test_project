<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>Public Enum comparisonOperator
    '/ Used [[ ]] because the outer set escape the inner brackets for the Enum list, which will then escape the operator when chosen as a value. E.G. they will appear as "Operator = [&lt;]" in code.
    [[&lt;]] = 1
    [[&lt;=]] = 2
    [[=]] = 3
    [[&gt;=]] = 4
    [[&gt;]] = 5
End Enum
</code></pre>
</blockquote>

<p>Why not just <em>name</em> them and comply with the language's rules for user identifiers? Also, <code>Enum</code> constants should be <em>enum</em>erated: let the compiler assign the underlying values:</p>

<pre><code>Public Enum ComparisonOperator
    EqualTo = 0
    LessThan 
    LessThanOrEqualTo 
    GreaterThanOrEqualTo 
    GreaterThan 
End Enum
</code></pre>

<p>There should be a sensible default (<code>0</code>) value; I think I'd make <code>EqualTo</code> that default.</p>

<hr>

<p>The operators in <code>Case Is = ...</code> are redundant, but the magic numbers in the <code>Case</code> expressions should be the enum named constants. The underlying values should be abstracted away behind the enum - the underlying values should be meaningless.</p>

<p>Consider:</p>

<pre><code>    Case ComparisonOperator.LessThan
    isTrue = sourceValue &lt; comparisonValue

    Case ComparisonOperator.LessThanOrEqualTo
    isTrue = sourceValue &lt;= comparisonValue

    Case ComparisonOperator.EqualTo
    isTrue = sourceValue = comparisonValue

    Case ComparisonOperator.GreaterThanOrEqualTo
    isTrue = sourceValue &gt;= comparisonValue

    Case ComparisonOperator.GreaterThan
    isTrue = sourceValue &gt; comparisonValue
</code></pre>

<p>That way nothing breaks if the enum members are reordered.</p>
    </div>