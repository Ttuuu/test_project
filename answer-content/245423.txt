<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It looks to me that you can filter the data in the original query, instead compiling the query then filtering it.</p>
<p>It's difficult to suggest an exact solution without access to the required objects and collections, but something like this can give you a start:</p>
<pre><code>public List&lt;News&gt; GetNewsbyYear(int NewsId, int Year, int CategoryId)
{
    using (var db = new NccnEcommerceEntities())
    {
        return (from n in db.News
                where n.Display == true &amp;&amp; 
                ((Year &gt; 0 &amp;&amp; n.ReleaseDate.Value.Year == Year) ||
                 (NewsId &gt; 0 &amp;&amp; n.NewsId == NewsId) ||
                 (CategorId &gt; 0))                                                               
                select new Model.News
                {
                    NewsId = n.NewsId,
                    Title = n.Title,
                    ReleaseDate = n.ReleaseDate,
                    Body = n.Body,
                    ExternalUrl = n.ExternalUrl,
                    LastUpdated = n.LastUpdated,
                    DisplayInBlog = n.DisplayInBlog,
                    BoilerPlate = n.BoilerPlate,
                    ItemDictionary = (from x in db.NewsCategoryXrefs
                                      where CategoryID &gt; 0 &amp;&amp; x.CategoryId == CategoryId
                                      join i in db.DboItemDictionaries on x.CategoryId equals i.ItemDictionaryId
                                      select new Model.ItemDictionary
                                      {
                                          Name = i.Name,
                                          ItemDictionaryId = i.ItemDictionaryId
                                      }).FirstOrDefault()
                }).toList();
    }
}
</code></pre>
    </div>