<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Indentation</h2>
<p>The indentation within <code>authenticate</code> is non-standard. Here are two standard alternatives:</p>
<pre><code>    r = praw.Reddit(username = config.username,
                    password = config.password,
                    client_id  = config.client_id,
                    client_secret = config.client_secret,
                    user_agent = "kanjibot")

    r = praw.Reddit(
        username = config.username,
        password = config.password,
        client_id  = config.client_id,
        client_secret = config.client_secret,
        user_agent = "kanjibot",
    )
</code></pre>
<h2>Comparison to <code>None</code></h2>
<pre><code>if summon != None
</code></pre>
<p>should be</p>
<pre><code>if summon is not None
</code></pre>
<h2>Sets</h2>
<p><code>comments_replied_to</code> within <code>run_bot</code> would be better-represented as a set. You haven't used type hints, so I'm guessing here, but since you use <code>.append</code> it's probably a list. A set is better for your membership comparison operations (<code>not in</code>).</p>
<p>To load it as a set directly, rather than:</p>
<pre><code>with open("comments_replied_to.txt", "r") as f:
    comments_replied_to = f.read()
    comments_replied_to = comments_replied_to.split("\n")
return comments_replied_to
</code></pre>
<p>use</p>
<pre><code>with open("comments_replied_to.txt") as f:
    return {line.rstrip() for line in f}
</code></pre>
<h2>Sleeping</h2>
<pre><code>time.sleep(5)
</code></pre>
<p>Why? This should not be needed.</p>
<h2>More sets</h2>
<p>For this:</p>
<pre><code>return any(summon in body for summon in RANDOM_SUMMONS)
</code></pre>
<p>If <code>body</code> and <code>RANDOM_SUMMONS</code> are both made sets, then this can be</p>
<pre><code>return not RANDOM_SUMMONS.isdisjoint(body)
</code></pre>
<p>which will be much more efficient.</p>
<h2>Loop efficiency</h2>
<pre><code>for summon in RANDOM_SUMMONS:
    if summon in body:
        return summon
    elif LOOKUP in body:
        return body.split('!lookup')[1]
</code></pre>
<p>Why are those last two lines in your loop? The result will not change no matter how many iterations you execute. You should move those last two lines out before your loop, then replace the loop with</p>
<pre><code>intersect = RANDOM_SUMMONS &amp; body
if len(intersect) &gt; 0:
    return next(iter(intersect))
return None
</code></pre>
<p>This assumes that it is non-fatal for there to be more than one overlap.</p>
<h2>Requests</h2>
<pre><code>requests.get('https://jisho.org/api/v1/search/words?keyword=' + query).json()['data']
</code></pre>
<p>First of all, when you get the response back, call <code>raise_for_status</code> - this call might not have succeeded. Also, do not pass query params in the URL string; pass them in a dictionary to the <code>params</code> kwarg.</p>
<h2>Successive concatenation</h2>
<p><code>reply +=</code> is not advisable; it present efficiency problems. There are few ways around this - using a <code>StringIO</code> is one solution.</p>
<h2>Caller choice</h2>
<p><code>generate_reply</code> should not print the reply; it should only return it. It should be up to the caller whether they want to print it or not.</p>
    </div>