<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Don't Re-Invent the Wheel Unless Absolutely Necessary</strong><br>
The C programming language already contains the function <a href="https://en.wikibooks.org/wiki/C_Programming/string.h/strcpy" rel="nofollow noreferrer">strcpy(destination, source)</a>. You have access to this function and many more string functions when you include string.h in your program. There is also the <code>char* strncpy(char* dst, const char* src, size_t size);</code> function that limits the number of characters that will be copied. C library functions have been optimized so that they will perform faster then code you write yourself.</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

Vehicle get_vehicle(int vehicle_ID)
{
    switch (vehicle_ID)
    {
    case 1: //toyota Landcruizer
    {
        Vehicle toyota_landcruizer;
        strcpy(toyota_landcruizer.type, "SUV"); //set type
        strcpy(toyota_landcruizer.make, "TOYOTA");
        strncpy(toyota_landcruizer.model, "LAND-CRUIZER", 10);
        toyota_landcruizer.manufacturing_year = 2019;
        return toyota_landcruizer;

        break;
    }

    ...
}
</code></pre>

<p><strong>Don't Repeat Yourself</strong><br>
There is a programming principle called the <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow noreferrer">Don't Repeat Yourself Principle</a> sometimes referred to as DRY code. If you find yourself repeating the same code multiple times it is better to encapsulate it in a function.</p>

<p>To simplify the code in <code>get_vehicle(int vehicle_ID)</code> you can write a generic function that creates a vehicle</p>

<pre><code>Vehicle add_vehicle(char *make, char *model, char* auto_type, int year)
{
    ...
}

Vehicle get_vehicle(int vehicle_ID)
{
    switch (vehicle_ID)
    {
    case 1: //toyota Landcruizer
        return add_vehicle("TOYOTA", "LAND-CRUISER", "SUV", 2019);

    case 2: //Nissan Maxima
        return= add_vehicle("NISSAN", "MAXIMA", "SEDAN", 2009);

    case 3: //Ford ranger
        return add_vehicle("FORD", "RANGER", "SUV", 2016);
    }
}
</code></pre>

<p>The <code>return</code> statement is enough, no <code>break</code> statement is necessary because it can't be reached.</p>
    </div>