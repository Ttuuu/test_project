<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You get the job done in 30 minutes and the use of a stack is the way to go, so that's a good start. In my opinion you're writing a little too much (repetitive) code and it could be a lot easier to read if you use a <code>switch</code>-statement instead:</p>

<pre><code>public bool IsValidReview(string s)
{
  Stack&lt;char&gt; endings = new Stack&lt;char&gt;();

  foreach (var curr in s)
  {
    switch (curr)
    {
      case '(':
        endings.Push(')');
        break;
      case '[':
        endings.Push(']');
        break;
      case '{':
        endings.Push('}');
        break;
      case ')':
      case ']':
      case '}':
        if (endings.Count == 0 || endings.Pop() != curr)
          return false;
        break;

    }
  }

  return endings.Count == 0;
}
</code></pre>

<p>Here the corresponding ending parenthesis is pushed to the stack instead of the starting one, which makes it easier to check when the ending shows up.</p>

<p>The name <code>myStack</code> doesn't say much, so I have changed it to something more meaningful in the context.</p>
    </div>