<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Overview</h2>
<p><strike>There is an issue (<strong>Bug</strong>) here in that <code>yytext</code> points at the beginning of the lexeme. But the lexeme is not null ('\0') terminated. You need to pass a length if you want to pass the current token into <code>vec</code></strike></p>
<pre><code>   vec.push_back(yytext);

   // should be:
   vec.emplace_back(yytext, yytext + yylen);
</code></pre>

<hr>
<p>You had a bug in your call to the underlying base class.</p>
<pre><code>    FileLexer(std::istream&amp; in, std::ostream&amp; out) :
        yyFlexLexer{&amp;in, &amp;out},
        out{out}
    {}
</code></pre>
<p>Sorry I fixed it before any answers. But you need to pass the address of the streams to <code>yyFlexLexer</code>.</p>
<hr>
<p>Normally I would return a value for each lexeme (and move any complex processing into methods of <code>FileLexer</code>. <strong>BUT</strong> this is such a simple class I don't see any issue with your current implementation of putting all the code in the lexer directly (though I would remove the <code>return 1;</code> from the end of line marker to make it consistent with field processing).</p>
<hr>
<p>This seems to be correct.</p>
<pre><code>std::copy(vec.begin(), vec.end(), std::experimental::make_ostream_joiner(out, ","));
out &lt;&lt; '\n';
</code></pre>
<p>But it is not obvious how it achieves it. Would be nice to have a comment that points out that field 10/11 are not added to the end but rather to a point not at the end of the end of the vector.</p>
<hr>
    </div>