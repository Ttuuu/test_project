<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It is hard to understand what this code does without context.</p>

<h1>Strange code</h1>

<p>I am looking at this enum and I am asking myself - why?
Is there any way to divide this enum into maybe 3 different enums? That's really strange that you use the same numbers for different elements.</p>

<pre><code>enum class PERK_SLOTS
{
    COMMON_SLOT_COLUMNS = 1,
    COMMON_SCOPE_PERK_COUNT = 2,
    SCOPE_SLOT_INDEX =0,
    STATS_UPGRADE_A_SLOT_INDEX = 1,
    UNIQUE_PERK_A_SLOT_INDEX = 2,
    STATS_UPGRADE_B_SLOT_INDEX = 3,
    UNIQUE_PERK_B_SLOT_INDEX = 4,
    STATS_UPGRADE_C_SLOT_INDEX = 5,
    UNIQUE_PERK_C_SLOT_INDEX = 6
};
</code></pre>

<h1>C++ is not C</h1>

<p>Next, you have:</p>

<pre><code>CommonPerks::CommonPerks(void)
</code></pre>

<p>Remove <code>void</code>, it is totally unneccesary. It should be simply</p>

<pre><code>CommonPerks::CommonPerks()
</code></pre>

<h1>Conventions</h1>

<p>Your methods starts with capital letters, that mostly not popular among C++ developers.</p>

<pre><code>virtual void AddPerk(IPerk* perk, int column, int row) = 0;
</code></pre>

<p>I suspect that <code>IComponent</code> has a virtual destructor. You do not need to do this.</p>

<pre><code>virtual ~IPerks(void);
</code></pre>

<h1>Bad naming</h1>

<p>Your parameters are badly named, give some more meaningful names.</p>

<pre><code>void CommonPerks::RemovePerk(unsigned int index_1, unsigned int index_2)
</code></pre>

<h1>Pragma</h1>

<p>Pragma is compiler dependent. I would suggest to use headers guards.</p>
    </div>