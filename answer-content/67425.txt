<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't think it's possible without the <code>eval</code>. A close candidate might be:</p>

<pre><code>atexit_handler() {
  local EXPR
  for EXPR in "${ATEXIT[@]}"; do
    echo "evaluating $EXPR"
    $EXPR || true
  done
}
</code></pre>

<p>But this won't work with non-trivial expressions like this:</p>

<pre><code>atexit 'for i in "a b" c; do echo $i; done'
</code></pre>

<hr>

<p>Using the <code>function</code> keyword in function declaration like this is an outdated practice:</p>

<blockquote>
<pre><code>function atexit_handler
{
  local EXPR
  for EXPR in "${ATEXIT[@]}"; do
    echo "evaluating $EXPR"
    eval "$EXPR" || true
  done
}
</code></pre>
</blockquote>

<p>Use the more modern style I wrote in the previous example above.</p>

<hr>

<p>Instead of this:</p>

<blockquote>
<pre><code>  for EXPR in "$@"; do
    ATEXIT+=("$EXPR")
  done
</code></pre>
</blockquote>

<p>A simpler way to iterate over <code>$@</code>:</p>

<pre><code>  for EXPR; do
    ATEXIT+=("$EXPR")
  done
</code></pre>

<p>But actually, as <a href="https://codereview.stackexchange.com/users/28012/etan-reisner">@etan-reisner</a> pointed out in a comment, it's silly to loop here when you can add the entire arg list in one swift move:</p>

<pre><code>ATEXIT+=("$@")
</code></pre>
    </div>