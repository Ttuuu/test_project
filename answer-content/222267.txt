<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm a little bit short on time at the moment, but I'ld like to share a few minor observations with you. Maybe I will also find time to look at performance related optimizations and expand it later.</p>

<hr>

<p>You said you would like your code to be Pythonic. With that in mind you could replace <code>print(list(reversed(values)))</code> by <code>print(values[::-1])</code> which uses slicing (nice <a href="https://stackoverflow.com/a/509295/5682996">explanation on Stack Overflow</a>) to revert the list. Since you need the complete list nevertheless, there is no real advantage in using a reverse iterator instead of a list directly.</p>

<p>Also since "Explicit is better than implicit." (from <a href="https://www.python.org/dev/peps/pep-0020/" rel="noreferrer">Zen of Python</a>) I would prefer to see </p>

<pre><code>distance = hamming if input_mode == 1 else levenshtein
</code></pre>

<p>or something similar instead of</p>

<pre><code>distance = [hamming, levenshtein][input_mode - 1]
</code></pre>

<p>The proposed version would also allow you to drop the string to int conversion. It would even work if the user entered something else than the two values presented by the prompt. <code>levenshtein</code> would be assumed to be the default then. Change the <code>if</code> to your liking if you prefer <code>hamming</code> as default. Although this might not be something to think about, since you have an input validation in place (good). However, the way it is written could be improved since you have a really small range (read: two) values that are valid. That makes it possible to list them explicitly:</p>

<pre><code># Validate user input
if input_mode not in (1, 2):
    raise ValueError("Invalid mode: " + input_mode) 
</code></pre>

<p>This almost reads like normal language.</p>
    </div>