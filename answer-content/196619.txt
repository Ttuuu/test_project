<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>1) Start using <a href="https://github.com/rubocop-hq/rubocop" rel="nofollow noreferrer">Rubocop</a> gem.</p>

<p>2) Prefer guard clauses &amp; stop execution early in a method. (Also, added 2 more conditions.):</p>

<pre><code>raise ArgumentError unless original.length == copy.length
return 0 if original.empty? &amp;&amp; copy.empty?
return 0 if original == copy
</code></pre>

<p>3) I would prefer Ruby's <a href="http://ruby-doc.org/core/String.html#method-i-chars" rel="nofollow noreferrer"><code>#char</code></a> over <code>#each_char</code> in this case:</p>

<pre><code>original = original.chars
copy     = copy.chars
</code></pre>

<p>4) I would prefer Ruby's <a href="http://ruby-doc.org/core-2.5.1/Array.html#method-i-zip" rel="nofollow noreferrer"><code>#zip</code></a> &amp; <code>#count</code> over <code>#with_index</code> to have a better readability:</p>

<pre><code>strands1.zip(strands2).count { |a, b| a != b }
</code></pre>

<p>At the end, it would look something like this:</p>

<pre><code>class Hamming    
  def self.compute(strand1, strand2)
    # Error handling and edge cases
    raise ArgumentError unless strand1.length == strand2.length
    return 0 if strand1.empty? &amp;&amp; strand2.empty?
    return 0 if strand1 == strand2

    strands1, strands2 = strand1.chars, strand2.chars
    # Merge elements of two arrays and compare arrays of array.
    strands1.zip(strands2).count { |a, b| a != b }
  end
end
</code></pre>
    </div>