<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Try to make the input and output types the same</h1>

<p>In your example, <code>remove_outliers()</code> takes a NumPy array as input, but returns a regular Python list. It would be nicer to have the function return a NumPy array in this case.</p>

<h1>The <code>axis</code> parameter only works when using the median</h1>

<p>Make sure that when you specify axes, that the resulting behaviour of the function is what you would expect. If, for some reason, the <code>axis</code> parameter could not work with means, then you should throw an error if the caller explicitly specified which axes to work on.</p>

<h1>Don't calculate values you are not going to use</h1>

<p>You calculate both the median and the mean, but only use one of them. This is inefficient, just write the code as:</p>

<pre><code>if use_median:
    measure = np.median(data, axis)
else:
    mean, std_dev = cv2.meanStdDev(data)
    measure = mean
</code></pre>

<p>I know you always need the standard deviation, but see the next comment.</p>

<h1>Avoid using CV2 for something as simple as calculating mean and standard deviation</h1>

<p>NumPy has functions for calculating those things as well. By avoiding importing cv2, you reduce the amount of dependencies users would have to install. As a bonus, the NumPy functions for mean and standard deviation also take an axis parameter. So consider writing:</p>

<pre><code>std_dev = np.std(data, axis)

if use_median:
    measure = np.median(data, axis)
else:
    measure = np.mean(data, axis)
</code></pre>

<h1>Don't special-case 3-dimensional data</h1>

<p>Why are you reshaping the input array only if <code>len(data.shape) == 3</code>? Your should aim to make your code work generically with arrays of any number of dimensions.</p>
    </div>