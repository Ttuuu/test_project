<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I actually ran this. Good thing I don't have epilepsy, because wow. The flashing is intense.</p>

<p>There are many ways to improve this, depending on how technical you want to get. Move to a more advanced graphics library that's able to draw circles in an off-screen memory buffer before showing them in <code>tkinter</code>, your current windowing framework. This will speed up the rendering significantly and won't create that flashing (unless that's part of your art?).</p>

<p>There's a bug where moving your window creates even more flashing - this time, instead of being due to the concentric circles being rendered from the outside in, I suspect it's from the circles being re-rendered by <code>graphics.py</code> rather than flattening the representation of the image to a rasterized buffer. Rendering to an off-screen buffer will fix this, too.</p>

<p>There's another bug: closing the window produces this stack trace -</p>

<pre class="lang-none prettyprint-override"><code>  File "/opt/pycharm-community-2019.2.1/helpers/pydev/pydevd.py", line 2060, in &lt;module&gt;
    main()
  File "/opt/pycharm-community-2019.2.1/helpers/pydev/pydevd.py", line 2054, in main
    globals = debugger.run(setup['file'], None, None, is_module)
  File "/opt/pycharm-community-2019.2.1/helpers/pydev/pydevd.py", line 1405, in run
    return self._exec(is_module, entry_point_fn, module_name, file, globals, locals)
  File "/opt/pycharm-community-2019.2.1/helpers/pydev/pydevd.py", line 1412, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "/opt/pycharm-community-2019.2.1/helpers/pydev/_pydev_imps/_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "/home/gtoombs/PycharmProjects/zelles/zelles.py", line 25, in &lt;module&gt;
    win.getMouse() # Pause to view result
  File "/home/gtoombs/.virtualenvs/zelles/lib/python3.7/site-packages/graphics/__init__.py", line 316, in getMouse
    if self.isClosed(): raise GraphicsError("getMouse in closed window")
graphics.GraphicsError: getMouse in closed window
</code></pre>

<p>which means that you're not handling shut-down gracefully. See if you can change your exit condition to be either when the mouse event is received or the window is closed.</p>
    </div>