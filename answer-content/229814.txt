<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The query plan seems to be too complicated because <code>all_constraint</code> is a view and not table. So it's difficult to derive what it's doing.</p>

<p>But from common sense it seems the optimal execution plan would be this:</p>

<ol>
<li>It first selects all ('P', 'U') records in the inner query</li>
<li>For each of them finds correspondent 'R' records (with loop join)</li>
<li>Filters and sorts what it gets after the loop</li>
</ol>

<p>Maybe it could be achieved by adding a <code>/*+ MATERIALIZE */</code> hint in the subquery, maybe additionally use qb_name+leading hints as describe <a href="https://asktom.oracle.com/pls/apex/f?p=100:11:0::::P11_QUESTION_ID:9530989800346226954" rel="nofollow noreferrer">here</a>.</p>

<p>But a better solution would be to rewrite the query to use explicit JOIN instead of IN (see <a href="https://explainextended.com/2009/09/30/in-vs-join-vs-exists-oracle/" rel="nofollow noreferrer">this</a> for example. Note that even if it tells Oracle query optimizer is capable of parsing IN as JOIN, it's not the case with your query because it self-joins view and not table).     </p>
    </div>