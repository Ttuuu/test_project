<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>So a few immediate things I see are, the hardcoded encoding, if you aren't going to identify the encoding of the file to search automatically, then make it a parameter the user specifies. You really can't do this accurately without certainty of the correct encoding to use. For more information on this and why check out:
<a href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow">http://www.joelonsoftware.com/articles/Unicode.html</a></p>

<p>Also, the chunk prefix is better off either handed in by the user, or being based off a: memory constraints you are aware of for the activity of this process, or b: the size of the file, as the chunk size will cause wildly different read-through performance based on the size of the file, i.e.</p>

<p>2gb file at 20mb a chunk will be processed much quicker than at 256b a chunk. A 400k file would be completely acceptable at 256b a chunk.</p>

<p>Know the memory limitations, concurrency expectations (so you aren't creating too many IO waits), and time expectations of the user to decide the chunk size, otherwise leave it up to users as a parameter.</p>

<p>Next, the name <code>SearchBytePattern</code> gives absolutely no illustration to the user what it's going to do, (I'm still not sure what it does having read it..) maybe it is returning the position of the beginning index of the BytePattern? Maybe it's returning by parameter the actual string in it's location? Give it a very clear unambiguous name (even if it's long), same goes for the parameters, a "position" is an integer, a list of int's might be positions? Or something else, and it's uncelar what they're positions for..</p>

<p>Disambiguate your parameters and method names.</p>

<p>Next, get rid of SearchBytePattern altogether anyway, instead of downconverting your searchpattern to bytes, use the correct encoding with a StreamReader and a StreamWriter which sends to a seperate file. then you just need to (forgive minor mistakes, winging it..):</p>

<pre><code>char[] charsReadFromFile = new char[chunkSize];

do
{
    int numberOfCharsReadFromFile = streamReaderOnGivenFile.Read(charsReadFromFile, 0, chunkSize);
    string stringReadFromFile = new String(charsReadFromFile).Trim(charsReadFromFile.Skip(numberOfCharsReadFromFile).ToArray());
    streamWriterOnNewFile.Write(stringReadFromFile.Replace(searchPattern, stringToReplacePatternWith));
} while(numberOfCharsReadFromFile &gt; 0)
</code></pre>
    </div>