<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are <a href="http://www.yahtzee.org.uk/strategy.html" rel="nofollow noreferrer">more than one way</a> to play Yahtzee, so you need several strategies. Thus the <code>StrategyFactory</code> can not be instatiated in the <code>StrategyAdviser</code>, it has to be <a href="https://en.wikipedia.org/wiki/Dependency_injection" rel="nofollow noreferrer">injected as a dependency</a>.</p>

<p>The name suggests that <code>StrategyAdviser</code> would just be a proxy between the chosen <code>Strategy</code> and the ongoing game. The <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">division of responsibilities</a> should be clear and well documented.</p>

<p>At every state of the game, there are a known set of actions the player can take (mainly, 32 different combinations of roll/hold a dice in the hand). These actions should be enumerated by a component that is responsible for maintaining the rules of the game. The strategy should be provided with these actions as input and calculate the risk and reward for each one (related to the strategy type) as output. The role of the advisor would then be to implement riskiness (e.g. a risk averse or reckless advisor or maybe an advisor that just gives bad advise) and select one of the choices.</p>
    </div>