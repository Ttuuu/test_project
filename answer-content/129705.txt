<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Structure</strong></p>

<ul>
<li><p>I would not separate reading the first line from the rest. You could just initialize <code>max</code> to zero.</p></li>
<li><p>Functions: I prefer the K&amp;R solution, to have smaller functions. This makes the program more easy to read and understand.</p></li>
</ul>

<p><strong>Output</strong></p>

<ul>
<li>The program will write each line that happens to be longer than the actual max. length. Not just the longest one.</li>
</ul>

<p><strong>Various</strong></p>

<ul>
<li><p>This won't work correctly if <code>helper</code> is longer than 100: <code>memset(help,0,100);</code>. I recommend using the constant instead. (Btw., it is really good that you do have the constant already.)</p></li>
<li><p><code>help</code> variable: I think <code>lineWithTerminator</code> would be slightly better. Also, I do not really understand, why this variable is needed at all? Why not just reuse <code>line</code>? If there is a good reason for that, I suggest documenting it in a comment (i.e documenting the reason, why that extra variable is needed).</p></li>
</ul>

<p><strong>Possible improvement</strong></p>

<p>You could even further improve either your solution, or that of the book to use dynamic allocation (malloc/realloc/free) instead of fixed size arrays.</p>
    </div>