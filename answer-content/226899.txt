<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>ARTICLE_URL = 'http://127.0.0.1:8000/api/articles/'
IMAGE_URL = 'http://127.0.0.1:8000/api/media/images/'
TOKEN_URL = 'http://127.0.0.1:8000/api-auth-token/'
</code></pre>
</blockquote>

<p>The repetition here could be harmful.  If you move the server, then there's three places that need to be edited and kept in sync.  It's easier to cope with such a move by reducing the duplication:</p>

<pre><code>BASE_URL = 'http://127.0.0.1:8000/api/'
ARTICLE_URL = BASE_URL + 'articles/'
IMAGE_URL = BASE_URL + 'media/images/'
TOKEN_URL = BASE_URL + 'api-auth-token/'
</code></pre>

<hr>

<p>It's good to see the <code>with</code> keyword used effectively to ensure that resources are cleaned up properly, even if exceptions are thrown; keep up the good habits!  <code>;-)</code></p>

<hr>

<p>In <code>main()</code>, the <code>while True</code> is misleading; the actual flow is that we repeat the first branch a number of times, and then the second branch exactly once.  We can restructure the loop to make that clearer:</p>

<pre><code>def main():
    while input("Upload image? (k): ") == 'k':
        img_file = open(input("Image - Filename: ").strip('\''), 'rb')
        img_title = input("Image - Title: ")
        image_upload(img_file=img_file, img_title=img_title)
        img_docload()

    headline = input("Article - Headline: ")
    summary = input("Article - Summary: ")
    article(headline=headline, summary=summary)
    print("Article is published")
</code></pre>

<p>Without <code>continue</code> and <code>break</code> it's much easier to understand the flow of control; use these keywords only as a last resort!</p>

<hr>

<p>We should run <code>main()</code> only if we're directly executing this as a program, not importing it as a module:</p>

<pre><code>if __name__ == '__main__':
    main()
</code></pre>

<p>We also need to move the username/password request into the <code>main()</code>, and we probably want to pass <code>headers</code> around as parameter rather than sharing a global variable.  (I assume that passing passwords around in plaintext is a weakness that is forced on you by the API you're using - when you're designing interfaces, you must never pass authenticators insecurely like that!).</p>
    </div>