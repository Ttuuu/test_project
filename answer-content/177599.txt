<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think you are in the right direction but let me suggest some things.</p>

<p>Remove the <code>try catch</code> and let the repository throw the exception. Either that or catch and throw your own exception.</p>

<p>Inject <code>IDbConnection</code> in the constructor of the repository and remove the <code>using</code> on the repository methods</p>

<pre><code>    private IDbConnection _connection;

    public CustomerRepository(IDbConnection connection)
    {
        _connection = connection;
    }
</code></pre>

<p>Probably you want to use the repository in this way in many scenarios and with your current implementation you lose the transaction scope.</p>

<pre><code>    public void DoWork()
    {
        using (var connection = ...)
        {
            //begin transaction
            var repository = new CustomerRepository(connection);
            var otherRepository = new OtherRepository(connection)
            var customer = repository.GetById(2);
            //do some stuff
            otherRepository.Update()...
            repository.Delete(customer);
            //commit transaction
        }
    }
</code></pre>

<p>This can be combined with IoC container.</p>
    </div>