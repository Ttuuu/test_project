<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Hash all string constants</h3>

<p>I'm presuming you only have a limited number of keywords ("move", "vertex" etc.).  Hash all of those with something fast - CRC32 is perfectly adequate.</p>

<p>Split the string into space-separated tokens, as usual, and calculate the hash of the first and second tokens.  Then you just need to compare the calculated hash with the hashes of the available commands.  If you have a large number of keywords, this can yield very significant improvements.</p>

<h3>Ditch the "Contains" and the regex</h3>

<p>To check whether it contains a bracket, the code has to scan over the entire variable name.  It then scans the entire string again to find the start and end of the brackets.  And the processing necessary for the regex pattern-matching is not fast.</p>

<p>All you actually need is "IndexOf".  If there's no bracket, IndexOf returns -1.  If there's a bracket, you've found the start of the number.  A second "IndexOf" to look for the closing bracket, starting at that index, will give you the end (or -1 if there isn't a closing bracket).  Then all you need to do is copy the substring.</p>
    </div>