<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd rather use a reference than a pointer:</p>

<pre><code>class CLockGuard {
public:
    CLockGuard::CLockGuard(CMutex&amp; mutex) m_mutex(mutex) {
        m_mutex.Lock();
    }
    ~CLockGuard() {
        m_mutex.Unlock();
    }

    void Unlock() {
        m_mutex.Unlock();
    }

protected:
    CMutex&amp; m_mutex;
};
</code></pre>

<p>Passing a <code>nullptr</code> to the <code>CLockGuard</code> class doesn't seem to make much sense to me, unless you want to have runtime control over using a mutex or not.</p>

<hr>

<p>Also you could make it a template (similar as <code>std::lock_guard</code>), to be able to operate with any <a href="https://msdn.microsoft.com/en-us/library/7c1b9kkf.aspx" rel="nofollow noreferrer"><code>CSyncObject</code></a> descendant:</p>

<pre><code>template&lt;typename T&gt;
class CLockGuard {
public:
    CLockGuard::CLockGuard(T&amp; so) m_synchobject(so) {
        m_synchobject.Lock();
    }
    ~CLockGuard() {
        m_synchobject.Unlock();
    }

    void Unlock() {
        m_synchobject.Unlock();
    }

protected:
    T&amp; m_synchobject;
};
</code></pre>
    </div>