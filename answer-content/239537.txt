<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To add to @Sara J's answer, in Python, it's generally a good practice to wrap your main code (so the last two lines) in a <code>if __name__ == '__main__':</code> statement so your script can be either:</p>

<ul>
<li>Directly run</li>
<li>Imported and its functions used as the dev that imported it pleases.</li>
</ul>

<p><a href="https://stackoverflow.com/a/419185/1524913">https://stackoverflow.com/a/419185/1524913</a></p>

<p>Also, contrary to a lot of other programming languages, Python insist on the <code>if it quacks, it's a duck</code> way of handling things:</p>

<p>Usually, in Python, when possible, you don't check data first. You just run the code and wrap it in a <code>try ... except</code> block. If it works (quack) you don't need to type-check, etc. So, eg, you'd do:</p>

<pre><code>try:
    userInput = int(input(f"Enter a number between {MIN_NUMBER} and {MAX_NUMBER}: ")
except ValueError:
    print("Please enter a valid number!")
</code></pre>

<p>So, all in all:</p>

<pre><code>MIN_GUESS = 0
MAX_GUESS = 20

def random_num_checker(goal, min_guess, max_guess):
    if goal &lt; min_guess or goal &gt; max_guess:
        raise ValueError("Goal is outside the min/max bounds")

    print(f'Enter a number between {min_guess} and {max_guess}')

    guess = None
    while guess != goal:
        try:
            # Could also (re-)ask every time instead of only once at the beginning
            guess = int(input())
        except ValueError: # Only try to catch what's needed
            print('That doesn\'t look like a number to me')
            continue

        if min_guess &lt; guess &lt; max_guess:
            if guess &gt; goal:
               print('Too high')
            elif guess &lt; goal:
               print('Too low')
        else:
            print(f'I said between {min_guess} and {max_guess}')

    print("CORRECT")

if __name__ == '__main__':
   goal = random.randint(MIN_GUESS, MAX_GUESS)
   random_num_checker(goal, MIN_GUESS, MAX_GUESS)
</code></pre>
    </div>