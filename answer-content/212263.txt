<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One quick and obvious improvement is possible in these two lines:</p>

<pre><code>denominator = denominator_df.sum(axis=1).values.tolist()
denominator = sum(denominator)-len(denominator)
</code></pre>

<p>This is equivalent to:</p>

<pre><code>denominator = denominator_df.sum(axis=1)
denominator = denominator.sum() - len(denominator)
</code></pre>

<p>which should be a lot faster since converting to a temporary list will be quite slow, as is summing using the Python built-in instead of using the <code>pandas</code> vectorized method.</p>

<p>Since you only care for the count in the numerator case, just use <code>sum</code>:</p>

<pre><code>numerator = (denominator_df[peer] == 1).sum()
</code></pre>

<p>Note that checking for <code>denominator_df[base] == 1</code> is unnecessary since that was already done in the construction of <code>denominator_df</code>.</p>

<hr>

<p>But the real speed gains are probably in eliminating the double <code>for</code> loop altogether and writing this using vectorized methods. With some example input that might be possible.</p>
    </div>