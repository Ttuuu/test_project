<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I can't resist mentioning this. These comments hurt me. </p>

<blockquote>
<pre><code>'Declaration of Variables
Public Seconds As Integer 'Store Seconds as Integer
Public Minutes As Integer 'Store Minutes as Integer
Public Hours As Integer 'Store Hours as Integer
Public CurHour As Integer 'Store the Current Hour as Integer
Public CurMinute As Integer 'Store the Current Minute as Integer
Public DelayOrTime As Integer 'Varibale used to distinguish between Shutdown on Delay or Shutdown on certain time
</code></pre>
</blockquote>

<p>It's pretty obvious that you're storing seconds as an integer. The comments just clutter the code and make it noisy. </p>

<p>In <code>frmMain_Load</code> there's a lot of repetition. I would use a loop here instead. </p>

<pre><code>For Each cntrl in frmMain.Controls
    If TypeOf cntrl Is ComboBox Then
        cntrl.SelectedIndex = 0
    End If
Next
</code></pre>

<p>It's more lines of code, but completely maintenance free if you should add another ComboBox. </p>

<p>I just noticed that all of the class variables are <code>Public</code>. Why? These should probably all be private. I can't think of a reason to expose them outside of the class. </p>

<p>As I briefly mentioned in the comments, <code>DelayOrTime</code> is a bit clunky. It has one of two possible values, 1 or 2. Magic numbers are bad. Avoid them. Normally, if there are only two possible states, I would recommend a boolean, but that doesn't feel quite right to me here. I would create an Enum and change the variable name to <code>Mode</code>. </p>

<pre><code>Private Enum ExecMode
    Delayed
    Timed
End Enum

Private Sub btnDelay_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSDDelay.Click

    'Convert Dropdown values to Integers
    Minutes = CInt(cbxMinutes.Text)
    Hours = CInt(cbxHours.Text)
    Seconds = 0
    Mode = ExecMode.Delayed
</code></pre>

<hr>

<p>Mat's Mug mentioned your <code>Shutdown_Restart</code> method. I don't like it either, but I'm not sure that I agree with his suggestion. I think it could be cleaned up by simply grouping the logic together correctly.</p>

<pre><code>Private Sub Shutdown_Restart()
    If DelayOrTime = 1 Then
        tmrDelayCount.Enabled = False
    ElseIf DelayOrTime = 2 Then
        tmrCheckTime.Enabled = False
    End If

    If radShutdown_t.Checked OrElse radShutdown_d.Checked Then
        System.Diagnostics.Process.Start("Shutdown","/s")
    ElseIf radRestart_d.Checked OrElse radShutdown_d.Checked Then
        System.Diagnostics.Process.Start("Shutdown","/r")
    End If
End Sub
</code></pre>
    </div>