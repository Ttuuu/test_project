<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code is a massive god-file. This is never a good idea and is seriously hard to read. Given the raw magnitude it makes me just want to run away.</p>

<p>The Cyclomatic Complexity, halstead metrics and maintainability index of your class is almost definitely the lowest grade it could possibly be in all of them. I suggest you looking for a tool like <a href="https://radon.readthedocs.io/en/latest/" rel="nofollow noreferrer">Radion</a> for JavaScript/TypeScript. These metrics are useful as they say how readable your code is.</p>

<p>The large <code>switch (token.type)</code> would be better described as a class. The following is just to showcase the structure, and does not work.</p>

<pre><code>class TokenHandler {
    tag(...) {
        let result = printIndent(previousToken, indent, indentLevel);
        if (!(token.val === 'div' &amp;&amp; (nextToken.type === 'class' || nextToken.type === 'id'))) {
          result += token.val;
        }
        this.startTagPosition = result.length;
        return result;
    }
}

let tokenHandler = new TokenHandler();

...

logger.debug('[printers:pug-ast:print]:', JSON.stringify(token));
// switch (token.type)
result += tokenHandler[token.type](...);
</code></pre>

<p>This would come with a couple of benefits.</p>

<ul>
<li>The methods, like <code>tag</code>, would be self contained. Anyone that has never read your code before can come along and mutate it with ease.<br>
You should be able to see that I've probably butchered how it actually should be, as your code is just far too complex for me to be able to replicate it correctly with ease.</li>
<li>You have the ability to define the constants of the function on <code>TokenHandler</code> in its constructor. Allowing for a couple of <code>this.</code> in your code, but fundamentally the same amount of code.</li>
<li>Your pug-ast <code>print</code> function can have a reduction in its size. This allows for easier maintenance on the function, as you don't have to skip a couple hundred lines to understand what the code is doing.</li>
</ul>

<p>I would also suggest breaking your <code>case 'attribute'</code> into more functions, as currently it's also far to large for a single function.</p>

<p>Currently I find your code to be unmaintainable, and in need of a massive re-write so you use at most 20 line long functions. This doesn't help with performance, but I always get the code to be as readable and maintainable as can be before starting on performance. And since I can barely comprehend your code, I won't be able to improve the performance.</p>
    </div>