<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Self-review</h1>

<hr>

<h2>comments</h2>



<p>Comments are very important to future readers, they speed up the comprehension of the whole code. I think I messed up at least one comment, (others pending review):</p>

<ul>
<li><p>original:</p>

<pre class="lang-none prettyprint-override"><code># let's take a closer look at the first argument, the editor
</code></pre></li>
<li><p>suggested:</p>

<pre class="lang-none prettyprint-override"><code># store the first argument, the editor name
</code></pre></li>
</ul>

<hr>



<h2>combine what can be combined</h2>

<p>By combining simple pieces of code, we make it easier to read.</p>

<ul>
<li><p>original:</p>

<pre class="lang-sh prettyprint-override"><code># store an editor alias, if there is any
editor_alias=$( alias "$editor_name" 2&gt; /dev/null )

# remove that alias for now
if [ -n "$editor_alias" ]; then
    unalias "$editor_name"
fi
</code></pre></li>
<li><p>suggested:</p>

<pre class="lang-sh prettyprint-override"><code># store an editor alias; and if there is any, remove it for now
if editor_alias=$( alias "$editor_name" 2&gt; /dev/null ); then
    unalias "$editor_name"
fi
</code></pre></li>
</ul>

<hr>

<h2>implement code workaround into the function</h2>

<p>My previous solution does not do any checks for <code>code</code> and also, by doing this we get rid of that <em>alien</em> alias.</p>

<ul>
<li><p>original:</p>

<pre class="lang-sh prettyprint-override"><code># VS Code specific workaround to work under root
alias sucode="sudo mkdir -p /root/.vscode &amp;&amp; sudo code -w --user-data-dir=/root/.vscode"
</code></pre></li>
<li><p>suggested:</p>

<pre class="lang-sh prettyprint-override"><code># run the editor with one-time SUDO_EDITOR set-up
if [ "$editor_name" = code ]; then
    # code specific workaround
    sudo mkdir -p /root/.vscode &amp;&amp;
    sudo code -w --user-data-dir=/root/.vscode "$@"
else
    # main command generic
    SUDO_EDITOR="$editor_path $wait_option" sudoedit "$@"
fi
</code></pre></li>
</ul>

<hr>

<h2>avoid generating editors aliases for which editor is not installed</h2>

<p>My previous solution is generating all editor aliases, no matter if such program is installed on the system, this could have been unpleasant to users.</p>

<ul>
<li><p>original:</p>

<pre class="lang-sh prettyprint-override"><code>for cli_editor in $sudoedit__cli_editor_list; do
    alias su$cli_editor="sudoedit_enhanced_run $cli_editor ''"
done
for gui_editor in $sudoedit__gui_editor_list; do
    alias su$gui_editor="sudoedit_enhanced_run $gui_editor -w"
done
</code></pre></li>
<li><p>suggested:</p>

<pre class="lang-sh prettyprint-override"><code>for cli_editor in $sudoedit__cli_editor_list; do
    if command -v "$cli_editor" &gt; /dev/null 2&gt;&amp;1; then
        alias su$cli_editor="sudoedit_enhanced_run $cli_editor ''"
    fi
done
for gui_editor in $sudoedit__gui_editor_list; do
    if command -v "$gui_editor" &gt; /dev/null 2&gt;&amp;1; then
        alias su$gui_editor="sudoedit_enhanced_run $gui_editor -w"
    fi
done
</code></pre></li>
</ul>
    </div>