<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Nodes are usually used internally within the tree and are created inside the insert function of your tree. This is to hide the implementation for users as well as prevent any corruptions that could occur due to external mutability. This isn't Python specific, but more about data structures in general. Data is encapsulated in the structure and use specific operations (functions) for retrieval/mutations.</p>
<p>I'm not sure what your use case is here, but I'd deter you from allowing <code>Node</code>s to be used outside of the <code>Tree</code> class (if possible).</p>
<p>To traverse the tree bottom up, here are two methods you can try:</p>
<ol>
<li><p><a href="https://www.geeksforgeeks.org/reverse-level-order-traversal/" rel="nofollow noreferrer">Reverse level order traversal</a></p>
</li>
<li><p><a href="https://www.geeksforgeeks.org/binary-tree-array-implementation/" rel="nofollow noreferrer">implement the binary tree with a list internally</a>. Then if you wanted to traverse from the bottom up, the last item in the list would certainly be the node at the bottom of the tree and you can get its parent via a list index (you can work this out by reading the previous link).</p>
</li>
</ol>
    </div>