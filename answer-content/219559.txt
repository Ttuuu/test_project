<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I really have difficulty understanding your explanation or your code, but the wanted output is clear. So going only by that I propose this function:</p>

<pre><code>function duplicates(testArray, id = 1)
{
    return testArray.filter(testId =&gt; testId !== id);
}
</code></pre>

<p>the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" rel="nofollow noreferrer">filter()</a> method creates a new array with all elements that pass the test implemented by the provided function. In this case I test that the array items are unequal to the given id. The output of your tests is:</p>

<blockquote>
  <p>This item is the same as item 2<br>
  This item is the same as item 2,3<br>
  This item is the same as item 2,3,4</p>
</blockquote>

<p>So, there's not the fancy 'and' in there yet, but that can be added. Is it really needed? Anyway, adding a bit of extra code like this:</p>

<pre><code>function formatArray(idArray)
{
    var ending = (idArray.length &gt; 1) ? ' and ' + idArray.pop() : '';
    return idArray.join(', ') + ending;
}

function duplicates(testArray, id = 1)
{
    return formatArray(testArray.filter(test =&gt; test !== id));
}
</code></pre>

<p>where we join the array to a string separated by commas, except for the ending if there are multiple items, when we insert an 'and'. The thing that might not be obvious is the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator" rel="nofollow noreferrer">conditional (ternary) operator</a>. If you don't like it you can replace it with a normal <code>if (...) {...} else {...}</code> statement. This returns:</p>

<blockquote>
  <p>This item is the same as item 2<br>
  This item is the same as item 2 and 3<br>
  This item is the same as item 2, 3 and 4</p>
</blockquote>

<p>Now this is "Code Review" so I should review your code. That is difficult. I can almost see what you were trying to do, but it is such a mess (sorry). It seems you started with the <code>for</code> loop and then just created this Frankenstein monster by adding bits. Inside the loop you have four <em>ifs</em>, two <em>elses</em> and even a <em>return</em>. Some of the actions are the same, like adding a space. I don't believe even you know exactly what's going on there. It might work, but that's it. This is not how you should be programming.</p>

<p>Some advice:</p>

<p>Try to analyse the problem before you start writing any code. There are two clear distinct jobs to do: </p>

<ol>
<li>Get rid of the duplicates.</li>
<li>Generate the output.</li>
</ol>

<p>Keep these two jobs apart. That makes each problem easier to solve and leads to easier to understand code, because the jobs themselves are easier. Ideally these two jobs should be done in two seperate functions. A function should only do one thing, and not two.</p>

<p>Now I have to agree that, what I did, simply requires a lot of experience. You need to know the language you're using. That will come with time and practice.</p>

<p>Another thing you need to pay attention to is the names you use. One of the major reason I cannot understand your code is that it is unclear what it all means. What is in <code>duplicatesArray</code>? And why is the function called <code>duplicates</code>? That just doesn't make much sense. Something like <code>removeDuplicates</code> would be better as a function name, because it implies a clear action.</p>

<p>In my personal opinion each function should always, and only, have one <code>return</code> in it. I'll admit that I don't always stick to this rule, but as a general idea it is sound. Having multiple returns makes a function harder to understand, and having no return just seems lazy. There's always something to return.</p>
    </div>