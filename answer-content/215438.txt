<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Having provided so much comment I thought it was only fair to post what my version of your code would be.  There is a deliberate error in the code.  I wonder what your thoughts are on how easy it is to spot?  I also can't guarantee that the code will work as intended(although it does compile) as a don't have a sample document to test it on.</p>

<pre><code>Option Explicit

Public Enum ErrorType
    ' Colors are selected from the Word.WdColourIndex enumeration
    Omitted = wdTurquoise
    Incorrect = wdYellow
    Added = wdBrightGreen

End Enum

Public Type ScoreCard

    Omittted                                As Long
    Incorrect                               As Long
    Added                                   As Long
    TotalErrors                             As Long
    TotalWords                              As Long
    Score                                   As Double ' Total errors as a percent of total words

End Type

Public Enum ReportRow
    [_First] = 1                ' The [_ and] means that the enumeration item will not appear in the intellisense
    Incorrect = 1
    Omittted = 2
    Added = 3
    TotalErrors = 4
    Score = 5
    GraderName = 6
    [_Last] = GraderName

End Enum

Public Const TABLE_COLUMNS                 As Long = 2

Sub CountErrorsByErrorType()

Dim my_scorecard                            As ScoreCard
Dim my_score_for_pasting                    As DataObject

    With my_scorecard

        .TotalWords = GetTotalWordsCount
        .Added = CountWordsWithError(ErrorType.Omitted, True, True)
        .Incorrect = CountWordsWithError(ErrorType.Incorrect, this_document:=ActiveDocument)
        .Omittted = CountWordsWithError(ErrorType.Omitted)
        .TotalErrors = .Added + .Omittted + .Incorrect

    End With

    CreateReport my_scorecard

    Set my_score_for_pasting = New DataObject
    my_score_for_pasting.SetText = Format$(my_scorecard.Score, "0.00% ")
    my_score_for_pasting.PutInClipboard

    MsgBox _
        "Scoring completed" _
        &amp; vbCrLf &amp; vbCrLf _
        &amp; "Score was " _
        &amp; CStr(my_scorecard.Score) _
        &amp; vbCrLf &amp; vbCrLf _
        &amp; "Remeber to paste the score!!", _
        vbOKOnly
End Sub

Public Function CountWordsWithError _
( _
    ByVal this_score_highlight_color As ErrorType, _
    Optional ByVal this_bold As Boolean = False, _
    Optional ByVal this_underline As Boolean = False, _
    Optional ByRef this_document As Word.Document _
) As Long

Dim my_count                                As Long
Dim my_document                             As Word.Document

    Set my_document = IIf(this_document Is Nothing, ActiveDocument, this_document)

    With my_document.StoryRanges(wdMainTextStory)

        With .Find

            .ClearFormatting
            .Text = ""
            .Format = True
            .Highlight = True
            .Font.Bold = this_bold
            .Font.Underline = this_underline
            .Wrap = wdFindStop
            ' Put any other search options here
            .Execute Wrap:=wdFindStop

        End With

        Do While .Find.Found

           If .HighlightColorIndex = this_score_highlight_color Then

                my_count = my_count + 1

            End If

           .Collapse Direction:=wdCollapseEnd
           .Move unit:=wdCharacter, Count:=1
           .Find.Execute

        Loop

    End With

    CountWordsWithError = my_count

End Function

Public Function GetTotalWordsCount(Optional ByRef this_document As Word.Document) As Long

Dim my_document                             As Word.Document

    Set my_document = IIf(this_document Is Nothing, ActiveDocument, this_document)

    With my_document.StoryRanges(wdMainTextStory)

        With .Find

            .ClearFormatting
            .Text = ""
            .Wrap = wdFindStop
            .Font.Italic = True
            .Execute

            If .Found Then

                GetTotalWordsCount = CStr(.Text)

            Else

                MsgBox "The total word count was not found", vbOKOnly
                End

            End If

        End With

    End With

End Function

Public Sub CreateReport(ByRef this_scorecard As ScoreCard, Optional ByRef this_document As Word.Document)

Dim my_document                     As Word.Document
Dim my_range                        As Word.Range

    Set my_document = IIf(this_document Is Nothing, ActiveDocument, this_document)

    With this_scorecard

        .Score = ((.TotalWords - .TotalErrors) / .TotalWords) * 100

    End With

    If my_document.Tables.Count = 0 Then

        my_range = my_document.StoryRanges(wdMainTextStory)
        my_range.Collapse Direction:=wdCollapseEnd
        InsertReportTable my_range, ReportRow.[_Last], 2

    End If

    With my_document.Tables(1).Range.COLUMNS(2)

        .Cells(ReportRow.Incorrect).Range.Text = CStr(this_scorecard.Incorrect)
        .Cells(ReportRow.Omittted).Range.Text = CStr(this_scorecard.Omittted)
        .Cells(ReportRow.Added).Range.Text = CStr(this_scorecard.Added)
        .Cells(ReportRow.TotalErrors).Range.Text = CStr(this_scorecard.TotalErrors)
        .Cells(ReportRow.Score).Range.Text = CStr(this_scorecard.Score)

    End With

End Sub

Sub InsertReportTable(ByRef this_range, Optional ByVal this_rows As Long = -1, Optional ByVal this_columns As Long = -1)

Dim my_rows                     As Long
Dim my_columns                  As Long

    my_rows = IIf(this_rows = -1, ReportRow.[_Last], this_rows)
    my_columns = IIf(this_columns = -1, TABLE_COLUMNS, this_columns)
    this_range.Tables.Add this_range, my_rows, my_columns

    With this_range.Tables(1).Range.COLUMNS(1)

        .Cells(ReportRow.Incorrect).Range.Text = "Incorrect:"
        .Cells(ReportRow.Omittted).Range.Text = "Omitted:"
        .Cells(ReportRow.Added).Range.Text = "Added:"
        .Cells(ReportRow.TotalErrors).Range.Text = "Total Errors:"
        .Cells(ReportRow.Score).Range.Text = "Score:"
        .Cells(ReportRow.GraderName).Range.Text = "Grader's name"

    End With

    this_range.Tables(1).Range.Paragraphs.Alignment = wdAlignParagraphLeft

End Sub
</code></pre>
    </div>