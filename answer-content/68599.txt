<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>When describing quicksort partitioning, your <code>v</code> is typically called the "pivot".  The code would be clearer if you named the variable according to that convention.</p>

<p>You always choose <code>a[lo]</code> as the pivot.  However, that <a href="http://en.wikipedia.org/wiki/Quicksort#Choice_of_pivot" rel="nofollow">produces pathological performance</a> when the input array is already sorted.</p>

<p>I would prefer to see</p>

<blockquote>
<pre><code>while(a[i] &lt; v):
      i += 1
      if (i == hi): break
</code></pre>
</blockquote>

<p>… written as</p>

<pre><code>while i &lt; hi and a[i] &lt; pivot:
    i += 1
</code></pre>

<hr>

<p>Array index bounds usually work better when specified as inclusive-exclusive ranges, such that <code>sort(a, lo, hi)</code> means "sort <code>a</code> where <code>lo</code> ≤ index &lt; <code>hi</code>".  This is a common convention — you can see it in Python's <a href="https://docs.python.org/2/library/functions.html#range" rel="nofollow"><code>range()</code></a> and <a href="https://docs.python.org/2/reference/expressions.html?highlight=slice#slicings" rel="nofollow">slicings</a>.  Also, Java's <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#sort%28int%5B%5D,%20int,%20int%29" rel="nofollow">Arrays.sort(a, fromIndex, toIndex)</a> works with inclusive-exclusive ranges.</p>

<p>Some nice properties of inclusive-exclusive ranges are:</p>

<ul>
<li><code>hi</code> - <code>lo</code> gives you the number of elements in the range.</li>
<li>When creating a range for the entire array <code>a</code>, <code>hi</code> is just <code>len(a)</code>.  You save a "-1".</li>
<li>When splitting [<code>lo</code>, <code>hi</code>) into two consecutive ranges, it becomes [<code>lo</code>, <code>mid</code>) and [<code>mid</code>, <code>hi</code>).  You save a "-1".</li>
<li>In Python, you can conveniently write <code>for i in range(lo, hi)</code> for the most common type of iteration. (Admittedly, iterating backwards is uglier, but it's less common.)</li>
</ul>
    </div>