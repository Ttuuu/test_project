<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What do you mean optimal?</p>

<p>Your thing transforms the object lots of times, which is liable to not be very efficient, if that's what you meant.</p>

<p>Here's something that I hope is simple to read that does your task.</p>

<pre><code>function sumObjects(obj1, obj2) {
    return Object.keys(obj2).reduce(
        (acc, currKey) =&gt; ({
        ...acc,
        [currKey]: acc[currKey] ? acc[currKey] + obj2[currKey] : obj2[currKey]
        }),
        obj1
    );
}

const result = dimensions.reduce(sumObjects);
</code></pre>

<p>The observation is that you just need to see how to do your task for two objects and the rest is just a reduce.</p>

<p>The most efficient thing will likely be just a for loop, like </p>

<pre><code>const res = {};
for (const obj of dimensions) {
    for (const key in obj) {
        res[key] = res[key] ? res[key] + obj[key] : obj[key];
    }
}
</code></pre>
    </div>