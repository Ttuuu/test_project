<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>By default you will have a numeric userId as well. Using the numeric userId rather than the username will probably perform better and reduce the size of the other tables. The userId will be a foreign key in 3 of the 4 tables and you need to consider the restraints that apply in each of the tables. </p>

<p>Naming a picture in the user's profile <code>pictureurl</code> could be confusing, I originally thought there were 2 instances of the post image URL. Any URL fields should probably be at least 1024 characters.</p>

<p>Decide what the most important fields in the profile are and put them in the table. You can use a JOIN to get all of the fields in the profile together, but by default I doubt the the user will use all the fields in the profile. Limit the size of the BIO, they shouldn't need any more than 1024 characters for the bio.</p>

<p>Limit the size of the comment text.</p>

<p>You may want to have a separate table of tags and include the tagId instead of the tag text. Post titles and post tags may require a larger size then is allowed for.</p>

<p>In the profile what is the rating and how is it calculated? You may want to have a floating point value rather than an integer value.</p>
    </div>