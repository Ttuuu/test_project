<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>That was a nice little break from work, tks for asking this question :-)
I think this is a good use case for an object/class vs. a method.</p>

<p>I would create a Currency class, which then allows you to either print it, or access its attributes independently...</p>

<pre><code>class Currency(object):

    COPPER_CONVERSION_MAP = {
        'copper': 1,
        'gold': 100 * 100,
        'silver': 100
    }
    gold = 0
    silver = 0
    copper = 0

    def __init__(self, copper=0, silver=0, gold=0):
        # convert all inputs into copper
        self.copper = (
            copper +
            silver * self.COPPER_CONVERSION_MAP['silver'] +
            gold * self.COPPER_CONVERSION_MAP['gold']
          )
        self.break_currency()

    def break_currency(self):
        for coin_type in ['gold', 'silver']:
            coins, coppers = divmod(self.copper, self.COPPER_CONVERSION_MAP[coin_type])
            setattr(self, coin_type, coins)
            self.copper = coppers

    def __str__(self):
        return '{:,} gold, {:,} silver and {:,} copper'.format(self.gold, self.silver, self.copper)
</code></pre>

<p>You can then consume like so:</p>

<pre><code>&gt;&gt;&gt; c = Currency(copper=653751735176)
&gt;&gt;&gt; str(c)
'65,375,173 gold, 51 silver and 76 copper'
&gt;&gt;&gt; c.copper
76
&gt;&gt;&gt; c.silver
51
&gt;&gt;&gt; c.gold
65375173
</code></pre>
    </div>