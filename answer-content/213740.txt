<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>Move more of your code out of the function. Make a <code>find_winner</code> function.</li>
<li>You don't need to add <code>_rps</code> to the end of every variable name. It only makes it harder to read the code.</li>
<li>PEP 8 doesn't say which string delimiter to use, but says to stick to <em>one</em>. I use <code>'</code>, you may prefer <code>"</code>.</li>
<li>You can use <code>random.choice</code> rather than <code>random.randint</code> to select from a list.</li>
<li><p>There is a bug in your code. I suggest you keep using string literals to a minimum to prevent this.</p>

<blockquote>
<pre><code>player_rps == 'sicssors' and com_rps == "paper"
</code></pre>
</blockquote></li>
<li><p>You can simplify your <code>yn</code> check by using <code>in</code>.</p></li>
</ol>

<p>This in all got me:</p>

<pre><code>WIN_VALUES = {
    'rock': 'scissors',
    'paper': 'rock',
    'scissors': 'paper'
}


def find_winner(choice1, choice2):
    if choice1 == choice2:
        return 0
    if WIN_VALUES[choice1] == choice2:
        return 1
    if WIN_VALUES[choice2] == choice1:
        return 2


def rock_paper_scissors(name):
    play = True
    while play:
        player = input('Rock, Paper, or Scissors: ').lower()
        com = random.choice(list(WIN_VALUES))
        print(com)

        winner = find_winner(com, player)
        if winner == 0:
            print('Tie')
        elif winner == 1:
            print('Chatter Bot Wins!')
        elif winner == 2:
            print(f'{name} Wins!')
        else:
            print(f'Invalid input {player}')

        yn = input('Do you want to play again. Y/N: ').lower()
        if yn in ('n', 'no'):
            play = False
</code></pre>
    </div>