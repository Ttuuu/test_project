<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You <em>can</em> do this, if it works... but it's not really using the React architecture or patterns.</p>

<ul>
<li><p>Most of this code that is drawing should be in the <code>render</code> method.</p></li>
<li><p>You'll want to move some of the state (<code>canvas</code>, <code>ctx</code>, <code>bgCanvas</code>, <code>bgCtx</code>) into the class's state, or just as instance variables.</p></li>
<li><p>You can probably do most of the creation in the constructor, although doing it in <code>componentDidMount</code> will work.</p></li>
<li><p>You can integrate the animation with React, 
<code>setInterval(() =&gt; this.forceUpdate(() =&gt; this.t += 0.05))</code>. This makes sense in componentDidMount. You'll also want to turn this off in the unmount method.</p></li>
</ul>

<h2>EDIT/ADDED LATER</h2>

<p>...maybe you just want to leave it the way it is, although it's quite non-React... it's working fine, though, and there aren't really problems...  </p>

<p>To make it "React" you're probably going to have to re-write it completely-- because just moving pieces around like I suggested may make you end up fighting the framework more than leveraging. Looking more, you'd probably make separate components for the different canvases and perhaps pass in <code>t</code> as a property, so there's a container component that functions as the "clock". Doing something like that would allow the regular React rendering mechanisms work.</p>
    </div>