<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>All in all I think, your solution is rather elegant. A tiny improvement could be:</p>

<pre><code>function isValidWalk(walk) {
  var directions = {
    N: 0,
    S: 0,
    E: 0,
    W: 0
  };

  walk.forEach(function (direction) {
    directions[direction]++;
  });

  var isHome = () =&gt; {
    return directions['N'] == directions['S'] &amp;&amp; directions['E'] == directions['W'];
  }
  /*it take 1 min to traverse 1 block &amp; I only have 10 minutes,
  &amp; I also want to attend appointment, so i want to come from where i start.*/
  return walk.length === 10 &amp;&amp; isHome();
}
</code></pre>

<p>The only caveat is (as others have pointed out) that you don't check the <code>walk.length</code> before you start walking.</p>

<p>That could be solved by using <code>array.reduce</code> in a way like this:</p>

<pre><code>function isValidWalk(directions) {
  var isHome = (offsets) =&gt; {
    return offsets['N'] == offsets['S'] &amp;&amp; offsets['E'] == offsets['W'];
  }

  var walk = (offsets, dir) =&gt; {
    offsets[dir]++;
    return offsets;
  }

  return directions.length === 10 &amp;&amp; isHome(directions.reduce(walk, { N: 0, S: 0, E: 0, W: 0 }));
}
</code></pre>
    </div>