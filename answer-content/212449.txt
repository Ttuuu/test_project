<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I have a solution to find if two values are present in a binary tree (not a bst).</p>
</blockquote>

<p>Why not use a BST? If you find yourself trying to hammer a square peg into a round hole, you should take a step back and see whether you can use a round peg or a square hole.</p>

<hr>

<blockquote>
  <p>[1] More efficient way to do this ?<br>
  [2] More elegant way to this ?</p>
</blockquote>

<p>Write code to search for a single item in a tree, aborting early when you find it, and call it twice.</p>

<hr>

<blockquote>
  <p>[4] How can we generalize the solution if we have to check if some 'n' values(all of them) are present in tree or not ?</p>
</blockquote>

<p>Turn the tree into a <code>std::unordered_set</code> and then test each value against the set.</p>
    </div>