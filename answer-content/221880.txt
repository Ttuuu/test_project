<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Design</h3>

<p>Since duplicates are allowed (no Set required) and you don't need to fetch books by name (no Map required), <code>ArrayList</code> will do just fine.</p>

<p><a href="https://en.wikiversity.org/wiki/Java_Collections_Overview" rel="nofollow noreferrer">Overview Collection Types</a></p>

<h3>Guard public entrypoints</h3>

<p>Make sure to checks arguments on all publically available code that takes input from calling code.</p>

<pre><code>if (novels == null) throw new IllegalArgumentException("novels must be set");
</code></pre>

<h3>Use plural for variable names that represent collections</h3>

<pre><code>private List&lt;Novel&gt; novels = new ArrayList&lt;&gt;();
private List&lt;ArtAlbum&gt; artAlbums = new ArrayList&lt;&gt;();
</code></pre>

<h3>Initialize object members only once</h3>

<p>Don't create the <code>ArrayList</code> instances twice. You can use <code>addAll</code> to add a range of items to a list. Perhaps you also want to create public methods to perform these actions.</p>

<pre><code>public class LibraryCatalog {
        private List&lt;Novel&gt; novels = new ArrayList&lt;&gt;();
        private List&lt;ArtAlbum&gt; artAlbums = new ArrayList&lt;&gt;();

        public LibraryCatalog(List&lt;Novel&gt; novels, List&lt;ArtAlbum&gt; artAlbums) {
            if (novels == null)
                throw new IllegalArgumentException("novels must be set");
            if (artAlbums == null)
              throw new IllegalArgumentException("argument must be set");
            this.novels.addAll(novels);
            this.artAlbums.addAll(artAlbums);
        }
    }
</code></pre>
    </div>