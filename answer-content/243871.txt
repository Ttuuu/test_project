<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Looks like you got a good start, but there's plenty left to improve. Considering you're doing this as a one-man project, I imagine there will always be minor issues.</p>
<p>First of all, initial set-up. On a fresh, barebones Python installation your program will miss a lot of dependencies. It looks like some of those will be hauled in during the installation, but not completely:</p>
<p><code>cryptography</code> has a tricky installation, possibly due to requiring Microsoft Visual C++ as an external dependency itself.</p>
<p><code>sqlalchemy typing-extensions pygments colorama commonmark pprintpp psycopg2</code> were still missing after the set-up as well.</p>
<p>There's inconsistent use of interpunction in your usermessages and I haven't found a method of destroying the master record completely (<code>purge</code> removes everything but the master password). When trying to pass arguments to the commands like the usage example, it ignores the arguments, asks for the parameters anyway like when not passing getting passed any arguments and then fails for no reason but having unexpected arguments.</p>
<pre><code>&gt;dinopass create NewUser Passw3
Please enter your master password: :
Name:
Name:
Name: NewUser
Password:
Usage: dinopass create [OPTIONS]
Try 'dinopass create --help' for help.

Error: Got unexpected extra arguments (NewUser Passw3)
</code></pre>
<p>Note that the usage guide states:</p>
<pre><code>Usage: dinopass [OPTIONS] COMMAND [ARGS]...
</code></pre>
<p>Turns out the arguments are <em>named</em>.</p>
<pre><code>&gt;dinopass create --help
Please enter your master password: :
Usage: dinopass create [OPTIONS]

  Create a new password with a specific name.

Options:
  --name TEXT      Name of the password.
  --password TEXT  Your new password.
  --help           Show this message and exit.
</code></pre>
<p>That could've been more explicit, I guess. Do note that it requires a master password just to get to the <code>--help</code> of a command. You know, the password that can't be purged. So the UX could use a bit of work.</p>
<p>Now, the code.</p>
<p>You have the <code>PasswordMixin</code>, <code>Password</code> and <code>MasterPassword</code> in the same file. That's good. They're all very much tied together. I'm not sure <code>models.py</code> is the best name for it, but it will definitely suffice. Good use of decorators too. Is it worth having <code>PasswordMixin</code> just for the two other classes? I think so. Classes usually grow in size faster than they shrink again, so the value may become even greater in time. It's a great way of keeping things simpler and not repeating yourself.</p>
<p>The next file is called <code>helpers.py</code>. With a function called <code>pp</code>. <code>pp</code> is a terrible name. What are you doing here, redefining prettyprint? It handles the printing of the data table, but you can't tell by the name of the function.</p>
<pre><code>def pp(title, data):
    title = f'[bold red][u]{title}[/u][/bold red]'
    table = Table(title=title, show_lines=True)
</code></pre>
<p>That's 5 <code>title</code> in 3 lines of code and it's actually 2 variations. You're redefining <code>title</code> here. Perhaps one of them could be named better to differentiate between them.</p>
<p>You got a decent separation of concerns going on between your files. However, I do think checking for the <code>IntegrityError</code> should be part of the <code>MasterPassword</code> class itself and not of the <code>MasterPasswordViewer</code>. The viewer shouldn't be concerned with something relatively low-level like that. But moving it is going to be non-trivial. Almost like your viewer is doing too much already.</p>
<p>The encryption definitely isn't the worst I've seen with hobby projects so I wouldn't worry too much about that at the moment. The usage of <code>click</code> is sensible too. It saves you a lot of boilerplate, that's usually a good thing with projects like this.</p>
    </div>