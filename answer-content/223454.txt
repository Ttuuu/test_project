<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Ok, first of all you should've take care of variable names. Naming them like <code>p</code>, <code>g</code>, <code>e</code>, etc is really a bad habbit. </p>

<p>Once you change them, it's much easier to read.</p>

<pre><code>def cost_calc(weight):
  ground_cost = calculate_ground_cost(weight)
  drone_cost = calculate_drone_cost(weight)
  premium_cost = 125
  ground_shipping_name = "Ground Shipping"
  premium_shipping_name = "Premium Ground Shipping"
  drone_shipping_name = "Drone Shipping"
</code></pre>

<p>Second python naming convention tells you to use underscores while naming variables or functions.</p>

<p>Third, your functionc that calculates costs can be minimized in many ways, when one of them is:</p>

<pre><code>import bisect 

def calculate_ground_cost(weight):
  limits = [2, 6, 10]
  multipliers = [1.5, 3, 4, 4.75]
  idx = bisect.bisect_left(limits, weight)
  return (weight * multipliers[idx]) + 20

def calculate_drone_cost(weight):
  limits = [2, 6, 10]
  multipliers = [4.5, 9, 12, 14.25]
  idx = bisect.bisect_left(limits, weight)
  return (weight * multipliers[idx])
</code></pre>

<p>Then you should take care of IFs statements that are really messy.</p>

<pre><code>if drone_cost == ground_cost or drone_cost == premium_cost or ground_cost == premium_cost:
</code></pre>

<p>Is equvalent to</p>

<pre><code>if drone_cost == ground_cost == premium_cost:
</code></pre>

<p>And the next rule good to follow is <strong>always</strong> return ASAP.</p>

<pre><code>if drone_cost == ground_cost == premium_cost:
    return "All shipping method cost %s according to your items weight" % premium_cost
</code></pre>

<p>Then all of this mess:</p>

<pre><code>if  d == g and d == p:
      print("All shipping methods cost $125 according to your items weight")
      return 
    if d == g:
      same1 = dS
      same2 = gS
      cost = d
    if d == p:
      same1 = dS
      same2 = pS
      cost = d
    if g == p:
      same1 = gS
      same2 = pS
      cost = g
    print("Youre cheapest shipping method is "+same1+" and "+same2+" as they both cost $"+str(cost))
    return
</code></pre>

<p>Can be changed to</p>

<pre><code>if ground_cost == drone_cost:
    return "Youre cheapest shipping method is %s and %s as they both cost$%s" %(ground_shipping_name, premium_shipping_name, ground_cost)
</code></pre>

<p>Because this is the last "IF" that is matching the statement.</p>

<p>And at the end, where u try to determine what is the lowest cost:</p>

<pre><code>  elif (g &lt; d) and g &lt; p:
    cheapMeth = gS
    cost = g
  elif (p &lt; d) and p &lt; g:
    cheapMeth = pS
    cost = p
  elif (d &lt; g) and d &lt; p:
    cheapMeth = dS
    cost = d
  print("Youre cheapest shipping method is "+cheapMeth+" costing $"+str(cost))
  return
</code></pre>

<p>You can change it to </p>

<pre><code>costs = sorted([
   (ground_cost, ground_shipping_name), 
   (drone_cost, drone_shipping_name), 
   (premium_cost, premium_shipping_name)])

min_cost, method = costs[0]
return "Your cheapest shipping method is %s costing $%s" % (method, min_cost)
</code></pre>

<p>So at the end, your code look like:</p>

<pre><code>import bisect 

def calculate_ground_cost(weight):
  limits = [2, 6, 10]
  multipliers = [1.5, 3, 4, 4.75]
  idx = bisect.bisect_left(limits, weight)
  return (weight * multipliers[idx]) + 20

def calculate_drone_cost(weight):
  limits = [2, 6, 10]
  multipliers = [4.5, 9, 12, 14.25]
  idx = bisect.bisect_left(limits, weight)
  return (weight * multipliers[idx])

def cost_calc(weight):
  ground_cost = calculate_ground_cost(weight)
  drone_cost = calculate_drone_cost(weight)
  premium_cost = 125
  ground_shipping_name = "Ground Shipping"
  premium_shipping_name = "Premium Ground Shipping"
  drone_shipping_name = "Drone Shipping"
  if drone_cost == ground_cost == premium_cost:
    return "All shipping methodrone_shipping_name cost $125 according to your items weight"

  if ground_cost == drone_cost:
    return "Youre cheapest shipping method is %s and %s as they both cost$%s" %(ground_shipping_name, premium_shipping_name, ground_cost)

  costs = sorted([
    (ground_cost, ground_shipping_name), 
    (drone_cost, drone_shipping_name), 
    (premium_cost, premium_shipping_name)])

  min_cost, method = costs[0]

  return "Your cheapest shipping method is %s costing $%s" % (method, min_cost)


weight = int(input("Enter weight: "))
print(cost_calc(weight))
</code></pre>
    </div>