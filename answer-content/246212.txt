<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Numpy</h2>
<p>Use it, or perhaps its wrapper Pandas. Vectorization with these libraries will get you most of the way to a performant solution. This would replace your <code>pickle.dump</code>, and change the internal format of <code>MainList</code> and <code>RaffleList</code>.</p>
<h2>Divmod</h2>
<p>Use <code>divmod</code> rather than a separated division and modulation here:</p>
<pre><code>remain_m = round(remain_s_tot / 60)
remain_s = round(remain_s_tot % 60)
</code></pre>
<h2>Boolean selection</h2>
<pre><code>    if sel.lower() == "y":
        return True
    elif sel.lower() == "n":
        return False
    else:
        print("\nPlease type either 'y' or 'n'.\n")
</code></pre>
<p>can be</p>
<pre><code>sel = input('&gt; ').lower()
if sel in {'y', 'n'}:
    return sel == 'y'
print("\nPlease type either 'y' or 'n'.\n")
</code></pre>
<h2>Randomly-chosen line</h2>
<p><code>randomLine</code> does not need to iterate at all. Instead, assuming that the line lengths are (within reason) on the same order of magnitude, you can simply</p>
<ol>
<li>Get the length of the file</li>
<li>Seek to a random position in the file</li>
<li>Read a buffer large enough to probably contain a newline</li>
<li>Consume to that newline</li>
<li>Consume to the next newline, and you have your random line.</li>
</ol>
    </div>