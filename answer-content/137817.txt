<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Simplifying @scottbb's answer even further:</p>

<p>You could use tuple unpacking to read the <code>filename</code> and <code>filehash</code> and make use of <code>format</code>s syntax to use a dictionary for its values:</p>

<pre><code>for row in readCSV:
    filename, filehash = row
    try:
        results = virustotal(filehash)['results']
        finalresults = "{positives}/{total}".format(**results)
    except ValueError:
        finalresults = "Not_Found"
    print "{},{},{}".format(filename, filehash, finalresults)
</code></pre>

<p>Or:</p>

<pre><code>for row in readCSV:
    try:
        results = virustotal(row[1])['results']
        finalresults = "{positives}/{total}".format(**results)
    except ValueError:
        finalresults = "Not_Found"
    print "{},{},{result}".format(*row, result=finalresults)
</code></pre>

<p>Or:</p>

<pre><code>    print "{1},{2},{0}".format(finalresults, *row)
</code></pre>

<p>Or (Python 3.6+):</p>

<pre><code>    print(f"{row[0]},{row[1]},{finalresults}")
</code></pre>
    </div>