<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, the methods are not <em>that</em> similar... basically, the real duplication is just reading a URL and parsing it into a json array, where the only difference is the message you print to stdout. As <code>System.out.println()</code> <em>normally</em> is just a temporaty solution (like: c'mon, who will read your stdout in reality?) I wager you can simply leave this out or replace it with a generic message.</p>

<p>Thus, create a method and use it, something along the lines of this:</p>

<pre><code>JSONArray readUrlContents(String link) throws ... {
    URL url = new URL(link.toString());
    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
    setupGETConnection(connection);
    connection.connect();

    System.out.println("Done reading url " + link);

    InputStream input = connection.getInputStream();
    String inputString = new Scanner(input, "UTF-8").useDelimiter("\Z").next();
    JSONObject jsonObject = new JSONObject(inputString); 
    JSONArray resultData = (JSONArray) ((JSONObject) jsonObject.get("data")).get("children"); 
    return resultData;
}
</code></pre>

<p>I would not go so far as to abstract the loop which comes after the reading step. You could probably do something with passing in lambdas or method references to convert the concrete object type to the respective target structure, but that would only make it complicated and convoluted just for removing the duplication of the for-loop.</p>

<p>While we are at it: you should close your resources after using them. (The method above does not include this part, following your example code.)</p>
    </div>