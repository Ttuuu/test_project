<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>With 24 bits, there are approximately 16.8 million possible hashes, so on average, you'd have to try 8.4 million pairs until you find a collision. With 36 bits, the numbers have to be multiplied by 4096, which yields 68 respectively 34 billion. You can cut this in half by not computing two hashes during each iteration, but instead computing one before the loop and keeping it constant.</p>

<p>However, that is probably still more time than you want to spend. One way to reduce that time is to utilize the Birthday Paradox (<a href="https://en.m.wikipedia.org/wiki/Birthday_problem" rel="nofollow noreferrer">https://en.m.wikipedia.org/wiki/Birthday_problem</a>). By computing a list of hashes and comparing each one with each other your chances of finding a collision are much higher. I won't try to type a complete algorithm on this phone screen, though :-)</p>
    </div>