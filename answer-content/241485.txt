<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The best argument for using an <code>enum</code> in this context is the ability to:</p>

<ol>
<li>Early input validation</li>
<li>Allowing users to discover valid inputs</li>
</ol>

<p>In order to take advantage of that, your first example needs a slight change to use the <code>enum</code> type as the parameter type:</p>

<pre><code>class PxPath {
    PxPath ([string]$path, [pxPathType]$pathType) {
        # if user input a string that doesn't correspond 
        # to a [pxPathType] name, we won't even get this far!
    }
}
</code></pre>

<p>Now, your user has the option to pass either a <code>[pxPathType]</code> value or a corresponding string value:</p>

<pre><code>$pxPath = [PxPath]::new("some\path", [pxPathType]::FileSystem_Folder)
# or
$pxPath = [PxPath]::new("some\path", 'FileSystem_Folder')
</code></pre>

<p>But this would fail even before we reach inside the constructor:</p>

<pre><code>$pxPath = [PxPath]::new("some\path", 'not_a_valid_enum_name')
</code></pre>
    </div>