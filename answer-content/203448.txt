<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>By adding the line:</p>

<pre><code>sess.graph.finalize()
</code></pre>

<p>I was able to track down the source of the problem.</p>

<p>The code was slow because the Tensorflow graph was getting bigger after each iteration. The cause of this was the 2 lines mentioned on the Edit #2. 
These two lines are:</p>

<pre><code>sess.run(agent.update_critic_weights(),feed_dict={agent.state_in:agent.time_step_info['s']})
sess.run(agent.update_actor_weights(),feed_dict={agent.state_in:agent.time_step_info['s']})
</code></pre>

<p>These two lines execute their corresponding functions:</p>

<pre><code>agent.update_critic_weights()
agent.update_actor_weights()
</code></pre>

<p>each of these functions were adding a new element to the graph each time they were called:</p>

<pre><code>self.update_actor_batch = self.optimizer.apply_gradients(zip(self.actor_gradients,self.tvars[:self.actor_tvar_num]))
</code></pre>

<p>and</p>

<pre><code>self.update_critic_batch = self.optimizer.apply_gradients(zip(self.critic_gradients,self.tvars[self.actor_tvar_num:]))
</code></pre>

<p>thus, if we want to fix the problem, instead of passing the function to the sess.run we can pass the element. The final solution is shown below:</p>

<p>change these two lines:</p>

<pre><code>sess.run(agent.update_critic_weights(),feed_dict={agent.state_in:agent.time_step_info['s']})
sess.run(agent.update_actor_weights(),feed_dict={agent.state_in:agent.time_step_info['s']})
</code></pre>

<p>for this line:</p>

<pre><code>sess.run([agent.update_critic_batch,agent.update_actor_batch],feed_dict={agent.state_in:agent.time_step_info['s']})
</code></pre>
    </div>