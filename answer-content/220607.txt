<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In <code>Insert(...)</code> you should use <code>TryGetValue</code> instead of <code>ContainsKey</code>for efficiency:</p>

<pre><code>  foreach (var letter in key)
  {
    if (!current.Edges.TryGetValue(letter, out var edge))
    {
      edge = current.Edges[letter] = new TrieMSNode();
    }
    current = edge;
  }
</code></pre>

<hr>

<p>Name your methods after what they do, not after their implementation:</p>

<blockquote>
  <p><code>DFS(...)</code></p>
</blockquote>

<p>could be <code>GetSumFrom(...)</code></p>

<hr>

<blockquote>
<pre><code>public int Sum(string prefix)
{
  int sum = 0;
  var current = Head;
  foreach (var letter in prefix)
  {
    if (!current.Edges.ContainsKey(letter))
    {
      return sum;
    }
    current = current.Edges[letter];
  }
</code></pre>
</blockquote>

<p>Here the <code>sum</code> variable is redundant because it is never changed so you could just return <code>0</code> from the loop</p>

<p>Again the loop can be optimized:</p>

<pre><code>  foreach (char letter in prefix)
  {
    if (!current.Edges.TryGetValue(letter, out current))
      return 0;
  }
</code></pre>

<hr>

<blockquote>
<pre><code>DFS()
</code></pre>
</blockquote>

<p>can be simplified using LINQ:</p>

<pre><code>    private int GetSumFrom(TrieMSNode current)
{
  if (current == null)
  {
    return 0;
  }

  return current.Edges.Aggregate(current.Value, (sum, kvp) =&gt; sum + GetSumFrom(kvp.Value));
}
</code></pre>

<p>You really don't have to check for <code>IsTerminal</code> because you know that only terminal nodes have a values different from <code>0</code>.</p>

<p>You should test this LINQ-approach against your own plain <code>foreach</code>-loop, and you'll maybe find the latter fastest. </p>
    </div>