<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <code>decoder.Decode</code> call is unnecessary and in fact throws an error at
the moment.</p>

<p>To your second point, yes, especially the <code>case</code> statements can all be
compressed down to a single function most likely, since they all only
have a few variables exchanged.</p>

<p>The indexing into a hash map <code>map[int]Record</code> is not ideal, in fact
that's probably causing a slowdown too with the two million elements in
that table, instead you can simply <code>append</code> the elements to a slice and
then it's all sorted and fine for iteration later on, no sorting
necessary at all.</p>

<p>And for <code>increment(&amp;i)</code> ... just go ahead and increment the counters.
If you make functions, okay, but like this it's not helping with
readability (<code>i += 1</code> is much clearer).</p>

<p><code>make([]string, 0, 1+len(headers)</code> - well that's valid, but you can
simply create the array with all elements instead, like
<code>[]string{uidString, ..., m[k].Year</code> etc.  Might be even better if you
can reuse that array for all loop iterations.</p>

<p>Well I can't see any other obvious things to change.  There's the
possibility that getting rid of <code>DecodeElement</code> and doing the whole
decoding yourself might improve things, but I'm skeptical.  If I, for
example, remove the whole <code>switch</code> block, doing <em>nothing</em> but XML
decoding essentially, this still takes three minutes for me, essentially
just one minute less than with that block included!  Meaning that with
this library it's just not going to get much quicker overall.</p>
    </div>