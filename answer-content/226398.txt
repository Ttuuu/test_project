<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Overall your code is pretty clean.</p>

<h2>Abstract class</h2>

<p>There are a few different ways to do this. You can explicitly use the <code>abc</code> stuff, but the simpler thing to do is in your abstract methods (e.g. <code>run</code>), raise a <code>NotImplementedError</code> - at the <code>Task</code> level, not just <code>KillTask</code>. Then classes like <code>KillTask</code> that are effectively abstract children simply omit the implementation.</p>

<h2>Enums</h2>

<p>Python needs help when it comes to the type system. It's good that you're using type hints. You can help it out a little more by using a formal enum for the numbers in <code>from_dict</code>. Read here - <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer">https://docs.python.org/3/library/enum.html</a></p>

<h2>Prepared statements</h2>

<p>The series of functions beginning with <code>n_pending</code> should really only be one function. This is the perfect use case for prepared statements. Make that <code>status</code> number a parameter.</p>

<h2>Don't conflate purpose</h2>

<p><code>TaskQueue.print</code> really does two things - a fetch and a print. You should probably separate these.</p>

<h2>sqlite autocommit</h2>

<p>From the brief Google I did, sqlite operates in autocommit mode by default. I don't think any of the commits you've done are necessary.</p>

<h2>Implicit cursors</h2>

<p>It shouldn't be necessary to explicitly get those cursors. You can iterate on the return value of <code>fetchall</code>.</p>
    </div>