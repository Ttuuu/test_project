<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In this loop, <code>while start &lt; len(s):</code>, the string <code>s</code> is not changing, so the length of the string is not going to change either.  Yet, for each iteration, you will evaluate <code>len(s)</code> in order to evaluate the loop condition.  <code>len(s)</code> is undoubtably a fast operation, but you should still cache the result to avoid the function call every iteration.</p>

<pre><code>limit = len(s)
while start &lt; limit:
    # ...
</code></pre>

<hr>

<p>The loop <code>for i in range(start, len(s)):</code>, you are again calling <code>len(s)</code> for each iteration (of the outer loop).  You could replace this with <code>for i in range(start, limit):</code>, but we will still have a different issue...</p>

<p>You are (mostly) not using <code>i</code> inside the loop; you are using <code>s[i]</code>.  And you look up the character <code>s[i]</code> in 3 different places inside the loop.  Instead of looping over the indices, and looking up the character at the index, you should directly loop over the characters of the string.</p>

<pre><code>for ch in s[start:]:
    # ...
</code></pre>

<p>Except for that pesky <code>seen[...] = i</code> statement.  You still want the index.  The <code>enumerate()</code> function can be used to count as you are looping:</p>

<pre><code>for i, ch in enumerate(s[start:], start):
    if ch in seen:
       start = seen[ch]+1
       seen = {}
       break
    else:
       seen[ch] = i
       size += 1
</code></pre>

<hr>

<h2>Hint</h2>

<p>When scanning the string <code>abcdefgdhijklmn</code>, after encountering the second <code>d</code>, you reset to the character after the first <code>d</code>, and continue your scan.  But ...</p>

<p>Do you have to?  Aren’t all the characters between the first <code>d</code> and the second <code>d</code> unique?  Is there any way you could preserve that information, and continue on, without needing to restart with the <code>e</code>?  Maybe you don’t need nested loops!</p>
    </div>