<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Focusing only on:</p>

<blockquote>
<pre><code>public static class Extensions
{
    public static string ExtendWithEmptySpaces(this string mainString, int desiredLength)
    {
        if (mainString.Length == desiredLength)
        {
            return mainString;
        }
        StringBuilder extendedStringBuilder = new StringBuilder(mainString);
        for (int i = 0; i &lt; desiredLength - mainString.Length; i++)
        {
            extendedStringBuilder.Append(" ");
        }
        return extendedStringBuilder.ToString();
    }
}
</code></pre>
</blockquote>

<p>You have a <code>public</code> method which everyone can call so you should add some proper validation. You want to encapsulate the inner working of that method and therefore you don't want to expose implementation details about it.  </p>

<p>What happens if <code>mainString</code> is <code>null</code> ? By accessing the <code>Length</code> property of the <code>mainString</code> an <code>ArgumentNullException</code> is thrown and the stacktrace will indicate exactly this which isn't what you want. You don't want to expose that you use the <code>Length</code> property of that string but only that <code>mainString</code> is <code>null</code>.  </p>

<p>What happens if <code>desiredLength</code> is negative ? Nothing bad, but you should tell the caller of the code that he/she did something wrong  by throwing an <code>ArgumentOutOfRangeException</code> otherwise a hidden bug in the callers code can occur.  </p>

<p>The name of that extension method is somehow misleading. How can a space be empty ?   </p>

<p>That being said, you are reinventing the wheel here, because there is already a well optimized .NET method namely <a href="https://msdn.microsoft.com/en-us/library/34d75d7s(v=vs.110).aspx" rel="nofollow noreferrer"><code>String.PadRight(Int32)</code></a> which you should use instead. Every decent programmer knows this method and wouldn't be surprised finding it in the code.  </p>
    </div>