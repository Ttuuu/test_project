<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code goes through the file twice - once to find the index where your new line is to be inserted, and again to actually perform the change.</p>

<p>My approach to this problem would be to create a class that contains three variables:</p>

<ol>
<li>The lines in <code>setup.py</code> before <code>"REQUIRED_PACKAGES = ["</code></li>
<li>The contents of the <code>REQUIRED_PACKAGES</code> list</li>
<li>The lines in <code>setup.py</code> after the <code>REQUIRED_PACKAGES</code> list</li>
</ol>

<p>Your problem then splits nicely into three distinct sub-problems:</p>

<ol>
<li>Parsing <code>setup.py</code> and returning an instance of the class above</li>
<li>Adding an element to the required packages list in your custom class (trivial)</li>
<li>Writing a new <code>setup.py</code> file</li>
</ol>

<p>Looking at your code specifically, your docstring for <code>parse_file</code> does not match what the code is doing. It says that <code>data</code> is returned, but the code actually returns <code>line_index</code>, and the <code>data</code> member you initialise is unused.</p>

<p>Your code comments in general could be improved. You comment some obvious things such as"open the file and read through it line by line" and "if there are no matches". These operations are immediately apparent from looking at the code, and do not require comments. </p>
    </div>