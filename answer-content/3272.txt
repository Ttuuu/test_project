<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Performance wise, you might want to check <a href="https://en.wikipedia.org/wiki/Boyer-Moore_string_search_algorithm" rel="nofollow noreferrer">Boyer-Moore's algorithm</a> (Googling found <a href="https://www.codeproject.com/Articles/12781/Boyer-Moore-and-related-exact-string-matching-algo" rel="nofollow noreferrer">this article</a> on CodeProject, and <a href="http://www.blackbeltcoder.com/Articles/algorithms/fast-text-search-with-boyer-moore" rel="nofollow noreferrer">this article</a> somewhere else). The algorithm is very efficient because it preprocesses your input string to know <strong>where to jump when there is a mismatch</strong>.</p>

<p>For example, if you are looking for the string <code>"Text to replace"</code> (15 chars), you should first check the 15-th character in your input stream. If it is a <code>'z'</code>, then obviously you can immediately jump 15 characters ahead, because there is no such character in your search string. On the other hand, if it's an <code>'r'</code>, then it might be the starting letter of the word <code>replace</code>, and the algorithm will jump 6 characters to try to align the matching string with the input stream. This is far more efficient than moving the pointer by only a single position in each iteration. </p>

<p>Next, your buffer size of <code>10*1024*find.Length</code> doesn't make sense. What is the purpose of this multiplication compared to a fixed buffer size (larger than <code>find</code>, of course)? And, more importantly, why do you keep going back by <strong>half this length</strong> every time, when you have already checked this data and should only backup for <code>find.Length-1</code> (in case the match is at the very end of your buffer)? What you are doing right now would only make sense if your buffer is exactly twice the length of <code>find</code> (which is what Jon probably meant in his answer).</p>

<p>Apart from that, <a href="https://codereview.stackexchange.com/questions/3265/replace-sequence-of-strings-in-binary-file/3271#3271">carlosfigueira</a>s answer covers the errors in your code (<code>SearchBytePattern</code> should have a parameter indicating the number of bytes actually read from the stream), and the problems dealing with Unicode (if you haven't read it already, check Jon Skeet's <a href="https://web.archive.org/web/20091105021417/http://msmvps.com/blogs/jon_skeet/archive/2009/11/02/omg-ponies-aka-humanity-epic-fail.aspx" rel="nofollow noreferrer">OMG Ponies</a>, the part about Unicode).</p>
    </div>