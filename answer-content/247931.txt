<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This looks to me like a issue about efficiency, not style.</p>
<p>We can use prefix sums instead of brute forcing each case. (learn more <a href="https://en.wikipedia.org/wiki/Prefix_sum" rel="nofollow noreferrer">here</a>)</p>
<p>Create an array <code>prefix</code> of size n + 1. At the ith index, find whatever the sum would be for the first i numbers. For example, if the list a was <code>a_1, a_2, a_3, ..., a_n)</code>, <code>prefix</code> would be <code>0, a_1, a_1 + 2*a_2, a_1+2*a_2+4*a_3, ...</code>.</p>
<p>Then, if we wanted to query from <code>L</code> to <code>R</code>, we could find <code>prefix[R]-prefix[L-1]</code>. As a basic example, pretend <code>L=2, R=3</code>. Then, the difference mentioned above would be <code>prefix[3]-prefix[1] = 2*a_2+4*a_3</code>, which is double of the sum that we are expecting. Afterwards, we can divide by <code>2^{L-1}</code> to get what the exercise wants.</p>
<p>I'm a little busy right now, but I will post some code as soon as possible.</p>
    </div>