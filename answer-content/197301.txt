<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>After spinning two routines main should wait for them to terminate. See <a href="https://golang.org/pkg/sync/" rel="nofollow noreferrer">sync package</a> for common synchronisation primitives. fmt.Scanln is for input reading.</li>
<li><a href="https://golang.org/pkg/net/http/#Get" rel="nofollow noreferrer">http.Get</a> may return error. Proper way would be to handle it.</li>
<li>resp.Body will be closed when downloadData returns and readData won't be able to use it anymore.</li>
</ul>

<p>Regarding your questions:</p>

<ol>
<li>As stated by documentation resp.Body must be closed. Close it as soon as you don't need it anymore.</li>
<li>The code lacks error checks and proper routines synchronisation. Despite the fact this code is compiling, this is not acceptable Go code and it must be fixed.</li>
</ol>

<p>I suggest you to read <a href="https://golang.org/doc/effective_go.html" rel="nofollow noreferrer">Effective Go</a> for concurrency and error handling overview.</p>
    </div>