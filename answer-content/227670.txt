<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The first thing about your code are the two lines inside your class <code>Thing</code>:</p>

<pre><code>private Random r = new Random();
private int a = r.nextInt(), b = r.nextInt(), c = r.nextInt();
</code></pre>

<p>If Random r is used just to initialize the array and not in other methods inside the class , it is better to use it in the costructor of the class :</p>

<pre><code>public Thing() {
    Random r = new Random();
    this.arr = new int[] {r.nextInt(), r.nextInt(), r.nextInt()};
}
</code></pre>

<p>You can check I initialize directy here the array of ints instead of defining variables a, b, c.
A good thing is also override the String method to print the internal state of a object:</p>

<pre><code>@Override
public String toString() {
    return Arrays.toString(arr);
}
</code></pre>

<p>Now you can print the state of your <code>Thing</code> object in this way:</p>

<pre><code>for (int i = 0;i &lt; 10; ++i){
    things[i] = new Thing();
    //print 3 numbers in each Thing object
    System.out.println(i + ": " + things[i]);
}
</code></pre>

<p>Your iterations with <code>Stream</code> are ok, but instead of use <code>Stream</code> because you are working with <code>int</code> values you can use instead <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html" rel="nofollow noreferrer">IntStream</a> simplifyng the code:</p>

<pre><code>Stream.of(things).forEach(t -&gt; System.out.println(Arrays.stream(t.getArr()).max().getAsInt()));
</code></pre>

<p>Below the code of class <code>Thing</code> including all my modifies:</p>

<pre><code>package codereview;

import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;

public class Thing {

    private int[] arr;

    public Thing() {
        Random r = new Random();
        this.arr = new int[] {r.nextInt(), r.nextInt(), r.nextInt()};
    }

    public int[] getArr() {
        return arr;
    }

    @Override
    public String toString() {
        return Arrays.toString(arr);
    }


    public static void main(String[] args) {
        Thing[] things = new Thing[10];
        for (int i = 0;i &lt;10; ++i){
            things[i] = new Thing();
            //print 3 numbers in each Thing object
            System.out.println(i + ": " + things[i]);
        }
        System.out.println();
        Stream.of(things).forEach(t -&gt; System.out.println(Arrays.stream(t.getArr()).max().getAsInt()));
    }  
}
</code></pre>
    </div>