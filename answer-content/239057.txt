<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are doing double force-unwraps, twice. This is really just asking for trouble ðŸ˜¬</p>

<p>As others have pointed out in their comments, there are a few edge cases you should <code>guard</code> against. Good thing is you can do both at the same time.</p>

<p>Additionally, you should avoid using shortened names for your variables. In Swift, we usually type everything out.</p>

<p>I've updated and annotated your code below, take a look;</p>

<pre class="lang-swift prettyprint-override"><code>@IBAction func clickHereButton(_ sender: UIButton) {

    // Start by ensuring we have actual values entered by the user
    guard let name = nameText.text, 
          let sizeString = sizeText.text,
          let weightString = weightText.text else {
        return
    }

    // Then, ensure the values are valid Doubles
    guard let size = Double(sizeString),
          let weight = Double(weightString) else {
        return
    }

    // Finally, ensure that size &gt; 0
    guard size &gt; 0 else {
        return
    }

    // We now are 100% safe and can start calculating our BMI
    let bmi = weight / pow(size, 2)
    let bmiRounded = (round(bmi * 10) / 10)

    // Even though this var name is longer, it's clearer what it is.
    let alertViewController = UIAlertController(title: "BMI for \(name)", message: "Your Body-Mass-Index is \(bmiRounded)", preferredStyle: .alert)

    // You can use the `.init(_:)` shorthand when a specific type is required
    alertViewController.addAction(.init(title: "Okay", style: .default))
    self.present(alertViewController, animated: true, completion: nil)
}
</code></pre>

<p>The only other thing I would improve is to move your actual BMI calculations to a specific function that takes in the <code>size</code> and <code>weight</code> parameters.</p>

<p>For the rest, it's pretty much all good.</p>
    </div>