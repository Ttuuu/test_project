<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>First Impressions</strong> <br>
I haven't gone through the functionality in detail but a few things strike me immediately.</p>

<p>Why explicitly include <code>StringSplitOptions.None</code>. They default value is none.</p>

<p><code>IsNullEmptyOrWhiteSpace()</code> seems to be a (not included) extension method for string that performs the same function as <a href="http://msdn.microsoft.com/en-us/library/system.string.isnullorwhitespace.aspx">String.IsNullOrWhiteSpace</a>.  Does it do something else as well?</p>

<p>The check for an empty 'line' inside the loop</p>

<pre><code>if (line.IsNullEmptyOrWhiteSpace())
        continue;
</code></pre>

<p>should be redundant as we have previously filtered the lines</p>

<pre><code>var filterLines = lines.Where(line =&gt; !line.IsNullEmptyOrWhiteSpace());
</code></pre>

<p>I would need to do up some performance checks to be sure but I reckon that the use of the StringBuilder (presumably for performance reasons) will be negated by the calls to <code>line.SubString()</code>. </p>

<p>I can't tell for certain what the requirements are  - I would guess
</p><ul>
<li>Max line Length of <em>n</em></li>
<li>Do not split words</li>
<li>Do not end on a space</li>
<li>Do not start on a space</li>
</ul>

<p>but it look like a linear progression through the string, with some back tracking to deal with split words/spaces, might work and appending the individual chars <em>might</em> give you better performance.</p>

<p>The final return should be</p>

<pre><code>return multiLine.ToString();
</code></pre>

<p>there is no need to create another string and place the result of multiLine.ToString() inside it and then return the anonymous string.</p>
    </div>