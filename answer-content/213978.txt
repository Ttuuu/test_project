<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have almost understood the <a href="https://en.wikipedia.org/wiki/Divide-and-conquer_algorithm" rel="nofollow noreferrer">divide and conquer principle</a> of recursion. Your solution is a bit too complex still.</p>

<ol>
<li>For each mapping that matches the start of the sequence...</li>
<li>...see how many times the rest of the sequence can be decoded.</li>
<li>If step 2 returned a number greater than 0, add the value to the sum.</li>
<li>Return sum.</li>
</ol>

<p>The only thing you need to pass as parameters in the recursion is the sequence to be decoded and the index from which you start decoding.</p>

<p>As to code style, please read <a href="https://www.oracle.com/technetwork/java/codeconvtoc-136057.html" rel="nofollow noreferrer">Oracles code conventions for Java</a> </p>

<p>Ps. <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#startsWith-java.lang.String-int-" rel="nofollow noreferrer"><code>String.startsWith(prefix, offset)</code></a> could be your friend right now.</p>
    </div>