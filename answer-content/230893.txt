<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><a href="https://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice">Don't do <code>using namespace std;</code></a>.</p></li>
<li><p><code>inline</code> is really only useful for defining non-template functions in header files. Modern compilers generally decide what functions to actually inline themselves.</p></li>
<li><p>To <a href="https://en.cppreference.com/w/cpp/string/byte/isspace" rel="nofollow noreferrer">use <code>std::isspace</code> correctly</a> we must cast the argument from a <code>char</code> to an <code>unsigned char</code> before passing it into the function.</p></li>
<li><p><code>std::regex_match</code> has a version that takes iterators. So we don't need to copy or modify the input strings:</p>

<pre><code>auto const is_not_space = [] (unsigned char c) {
    return std::isspace(c) == 0;
};

for (auto const&amp; s: string_vector) {
    auto const begin = std::find_if(s.begin(), s.end(), is_not_space);
    auto const end = std::find_if(s.rbegin(), std::reverse_iterator(begin), is_not_space).base();

    if (std::regex_match(begin, end, expression_two))
        ...
</code></pre></li>
<li><p>The test code checks <code>expression_two</code> three times, and doesn't use <code>expression_one</code> or <code>expression_three</code>!</p></li>
</ul>
    </div>