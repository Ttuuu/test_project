<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well Your code is working fine but there were some extra code which I have removed and now its like this working same as before.<br>
You can have more simple code if you use using namespace std; at the top of you document.</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;limits&gt;
#include &lt;random&gt;
using namespace std;
bool validateInput(int input)
{

    if (1 &lt;= input &amp;&amp; input &lt;= 100)
        return true;
    else
        return false;
}

int generateRandomNumber()
{
    random_device dev;
    mt19937_64 range(dev());
    uniform_int_distribution&lt;std::mt19937_64::result_type&gt; generator(1, 100);
    static_cast&lt;void&gt;(generator(range));
    return static_cast&lt;int&gt;(generator(range));
}

bool placement(int input, int target)
{
    if (input &gt; target)
    {
        cout &lt;&lt; "Guess is too high.";
        return false;
    }

    else if (input &lt; target)
    {
        cout &lt;&lt; "Guess is too low.";
        return false;
    }
    else
    {
        cout &lt;&lt; "Guess is correct!";
        return true;
    }
}

int main()
{
    bool end;
    cout &lt;&lt; "You have 7 guesses to guess what number I am thinking of between 1 and 100.\n";
    int winning_num{ generateRandomNumber() };
    static int tries{ 1 };
    do
    {
        end=true;
        int num;
        cout &lt;&lt; "\nGuess#" &lt;&lt; tries &lt;&lt; ": Enter a number -&gt; ";
        cin &gt;&gt; num;
        
        if (validateInput(num))
            ;
        else
        {
            continue;
        }
        if (!placement(num, winning_num))
        {
            cout &lt;&lt; "\nIncorrect!\n";
            ++tries;
        }
        else
        {
            cout &lt;&lt; "\nCorrect!\n";
            exit(0);
        }
        if(tries&gt;7)
        {
            cout&lt;&lt;"\nDo you want to guess more\nnPress y for it and \nPress n for closing\n";
            char guess;
            cin&gt;&gt;guess;
            switch(guess)
            {
                case 'y':
                {
                    cout&lt;&lt;"\nOk Lets go\n";
                    break;
                }
                case 'n':
                {
                    cout&lt;&lt;"\nEnding the program\n";
                    exit(0);
                }
                default:
                {
                    cout&lt;&lt;"\nEnter right choice\n";
                }
                
            }
        }

    }while (end==true);
    cout &lt;&lt; "\nYou did not guess the number in the alloted amount of guesses :(\nTry Again!\n";

}
</code></pre>
<p>You can also ask from user when he want to do more guesses or want to end the program making the program user friendly.</p>
    </div>