<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Expanding on Edward's point with "const": It's good practice to properly qualify all constant data, not so much for optimization (see <a href="http://www.gotw.ca/gotw/081.htm" rel="nofollow noreferrer">http://www.gotw.ca/gotw/081.htm</a>) as for displaying the author's intent, and for preventing errors. <code>const</code> is infectious, so you'll have to change all function signatures and pointer declarations operating on the constant brainfuck code.</p>

<p>That you can initialize a <code>char *</code> with a literal at all is pure legacy: K&amp;R C did not have <code>const</code> (which reflected the fact that one could (I think) write anywhere in memory on then-typical machines like the PDP11). So there was already a lot of code out there which would break, and even after 1989 a lot of people didn't use const.</p>

<p>Back to your program: I do not know brainfuck; a brainfuck program could well be self-modifying like a Turing machine. That it doesn't do that can be expressed in C, preventing <em>accidental</em> write attempts as well. </p>

<p>Incidentally this change makes your program valid C++, another thing I find good practice, even if <a href="https://stackoverflow.com/users/560648/lightness-races-with-monica">Lightness Races with Monica</a> will probably disagree: So cast your <code>malloc</code>s if you have any (even if <a href="https://stackoverflow.com/a/605858/3150802">unwind disagrees</a>), cast assignments to enums if you have any, and const your consts.</p>
    </div>