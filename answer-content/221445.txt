<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I want to start off by saying <a href="https://codereview.stackexchange.com/a/221440/52662">dfhwze</a> is the correct answer.  </p>

<p>I just wanted to touch more on the magic string "ActionToFunc".  Sometimes, especially with functional programming, you need to convert an Action to a Func&lt;&gt;.  I would copy what is already proven and working by borrowing from F# and Rx and create a Unit struct</p>

<p>Here is documentation on F# about Unit 
<a href="https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/unit-type" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/unit-type</a></p>

<p>and Rx info on Unit 
<a href="https://docs.microsoft.com/en-us/previous-versions/dotnet/reactive-extensions/hh211727(v%3Dvs.103)" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/previous-versions/dotnet/reactive-extensions/hh211727(v%3Dvs.103)</a></p>

<p>Both state Unit Struct Represents void.  </p>

<p>And here is the Rx source code for Unit, in case you don't want to add Rx just for a struct.</p>

<p><a href="https://github.com/dotnet/reactive/blob/f71f2d62fcec2eb44ca6eaced3b58b21e0372076/AsyncRx.NET/System.Reactive.Shared/System/Reactive/Unit.cs" rel="nofollow noreferrer">https://github.com/dotnet/reactive/blob/f71f2d62fcec2eb44ca6eaced3b58b21e0372076/AsyncRx.NET/System.Reactive.Shared/System/Reactive/Unit.cs</a></p>

<p><em>Repeat</em> this isn't the case for it but for example instead of magic string would have done</p>

<pre><code>if (result == Unit.Default) // Treat this as a void method
</code></pre>
    </div>