<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Make use of the <code>do</code>/<code>while</code> loop (instead of a <code>while</code> loop) where you can.  Both <code>collectnames</code> and <code>playertime</code> could benefit from a <code>do</code>/<code>while</code> loop.  The main difference is the the <code>do</code>/<code>while</code> loop will run once before checking the condition.  Oftentimes this will allow elimination of variables.  Any time you find yourself coding something like <code>flag = true; while (flag) { }</code> you probably want a <code>do</code>/<code>while</code> instead.</p>

<p>In <code>collectnames</code>, using <code>do</code>/<code>while</code> can eliminate use of the (uninitialized) <code>continuenameloop</code> variable.</p>

<pre><code>do {
    // ...
    playerlist.emplace_back(playercollected);
} while (++playerscollected &lt;= playercount);
</code></pre>

<p>Note that I've also replaced <code>playerlist.insert</code> with <code>playerlist.emplace_back</code>, which is a better choice (or, sometimes, <code>push_back</code>) for adding to the end of a <code>vector</code>.</p>

<p>The <code>do</code>/<code>while</code> loop in <code>playertime</code> can eliminate <code>runtimer</code>, and the "Time's up!" message would be outside the loop.</p>

<p>Adding a space between a keyword and the <code>(</code> that follows can improve the readability.</p>

<pre><code>if (condition)
while (condition)
for (;;)
</code></pre>

<p>When calling a function, or using the <code>[]</code> array subscript, leave off the space (like you've done for most of your calls).  However you choose to do it, <em>be consistent</em>.  It is easier to find things with consistent spacing.</p>

<p>In many places, you can use a <code>\n</code> (or add that to a string) in place of <code>std::endl</code>.  Using <code>endl</code> will flush the output buffer, which can reduce performance.  If you're outputting more text in the next statement, you can replace it with the <code>\n</code> newline.</p>
    </div>