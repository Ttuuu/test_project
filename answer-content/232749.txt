<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If I remember correctly, at the time that exercise had been given, using loops had not been covered, so you did very well to discover the while loop and how to use it.</p>

<p>The point of that exercise was to show you how tedious it is to write essentially the same code for each different element:</p>

<pre><code>let numbers = [3, 1, 4, 2]
var results = [Int]()

results.append(numbers[0] * numbers[1])
results.append(numbers[1] * numbers[2])
results.append(numbers[2] * numbers[3])
results.append(numbers[3] * numbers[0])

// and even maybe
print(results[0])
print(results[1])
print(results[2])
print(results[3])

// to print individually
</code></pre>

<p>...and that introduces the reason for using loops.</p>

<p>So your solution already went way beyond what was asked, so give yourself a pat on the back for that.</p>

<p>Martin's answer gives excellent advice on loops and those will also be covered in the next step of the course, but don't concern yourself too much about the more advanced stuff (like generics) for now. They are an important part of what makes Swift so expressive and so enjoyable to use, but they are an advanced topic and come later, once the basics have been addressed.</p>
    </div>