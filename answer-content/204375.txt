<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your outer loop starts at 999 and the inner loop multiplies that by all the numbers from 999 down to 100.</p>

<p>Then your outer loop decrements <code>$i</code> to 998, and the inner loop multiplies that by all the numbers from 999 down to 100.  The first test <code>998*999</code> has already been considered, since multiplication is commutative.  Not a huge inefficiency at this first step, but it gets worse.</p>

<p>When the outer loop gets down to 100, the inner loop again multiplies that by all the number from 999 down to 100 ... only 1 combination which is new.</p>

<p>You should start your inner loop at <code>$i</code>, instead of at <code>$max</code>.</p>

<hr>

<p>Early termination.  After finding a palindrome from the product of (say) 901 and 856, you donâ€™t have to test whether the product is a palindrome (expensive operation) unless <code>$result &gt; $found</code> is true (cheap test).  And if <code>$result</code> is less than <code>$found</code>, you can break out of your inner loop, since any successive product will be smaller.   Finally, if <code>$i * $i &lt; $result</code> (combined with the first optimization), you can also exit your outer loop. </p>
    </div>