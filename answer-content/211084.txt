<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>With the new ES6 syntax, arrow functions allow you to remove <code>.bind</code> from your code.</p>

<p>Don't make a stateful component if you're not using its state. Your <code>DieChooser</code> doesn't handle its value change by itself since its parent component is handling it. Make a stateless(function) component whenever you can and do not require to use lifecycle methods or a private state.</p>

<p>I also moved the <code>setSides</code> up to the parent to improve readability.</p>

<p>A <code>select</code> tag will always select the first option by default; there is no need for <code>this.props.setSides(props.dice[0]);</code>.</p>

<p>Props deconstructing will also make your code more readable, as the last component <code>Result</code> only takes a single line now.</p>

<p>Working live example : </p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="true">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const Dice = [4, 6, 8, 10, 12, 20];

class App extends React.Component {

	constructor(props) {
		super(props);

		this.state = {
			outcome: null,
			sides: null
		};
	}

	render = () =&gt; {
		return (
			&lt;div className="App"&gt;
				&lt;header className="App-header"&gt;
					Die roller
                &lt;/header&gt;
				&lt;DieChooser dice={Dice} setSides={this.setSides} /&gt;
				&lt;button onClick={this.handleClick}&gt;Roll&lt;/button&gt;
				&lt;Result outcome={this.state.outcome} /&gt;
			&lt;/div&gt;
		);
	}

	setSides = event =&gt; {
		this.setState({ sides: event.target.value });
	}

	handleClick = ev =&gt; {
		const rolled = Math.floor(Math.random() * (this.state.sides)) + 1;
		this.setState({ outcome: rolled })
	}
}

const DieChooser = ({ dice, setSides }) =&gt; {
	return (
		&lt;select onChange={setSides}&gt;
			{dice.map( die =&gt;
				&lt;option key={die} value={die}&gt;d{die}&lt;/option&gt;
			)}
		&lt;/select&gt;
	)
}

const Result = ({ outcome }) =&gt; &lt;p&gt;{outcome}&lt;/p&gt;


ReactDOM.render(&lt;App/&gt;, document.getElementById('root'))</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/16.3.0/umd/react.production.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.3.0/umd/react-dom.production.min.js"&gt;&lt;/script&gt;
&lt;div id='root'/&gt;</code></pre>
</div>
</div>

    </div>