<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>def int_to_bytes(integer) -&gt; bytes:
    # wish we didn't have to implement ourselves...
    result = []
    while integer:
        result.append(integer &amp; 255)
        integer &gt;&gt;= 8
    return bytes(reversed(result))
</code></pre>

<p>Your wish has been granted; you don't have to implement it yourself:</p>

<pre><code>def int_to_bytes(integer) -&gt; bytes:
    return integer.to_bytes((integer.bit_length() + 7) // 8, 'big')
</code></pre>

<p>Note: <a href="https://docs.python.org/3/library/stdtypes.html?highlight=bit_length#int.bit_length" rel="noreferrer"><code>int.bit_length()</code></a> is the length of the value in bits.  We must divide this by 8 to yield the required number of bytes, but we must not lose any fractions of a byte, so we add 7 to the number of bits first.  For example: If a number requires 81 bits, (10.125 bytes, or 1 bit more than 10 bytes), adding 7 will increase this to 88 bits, which integer-divided by 8 gives 11, as required.  <a href="https://docs.python.org/3/library/stdtypes.html?highlight=bit_length#int.to_bytes" rel="noreferrer"><code>int.to_bytes(num_bytes, 'big')</code></a> will then result in the correct <code>bytes</code> result.</p>
    </div>