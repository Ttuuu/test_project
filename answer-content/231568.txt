<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Thanks for sharing your code.</p>

<p>your solution is straight <em>procedural</em>. 
There is nothing wrong with <em>procedural</em> solutions as such but Java is an <em>object oriented</em> programming language and therefore you should learn to find OO-ish solutions to problems.<br>
However: this is just an advice, no judgement.</p>

<p>Here is what I consider problematic in your code:</p>

<h1>General approach</h1>

<h2>no calculation</h2>

<p>Your code <em>hides</em> the concept of the <em>Service Plan</em> from the problem statement by cascading decisions.
This leads to the "spaghetti code" we see and what you consider problematic yourself.</p>

<p>On top of that your code fails if the user enters the service IDs in an unexpected order, eg.: <code>4 3 1</code>.</p>

<p>A proper solution would try to calculate the best plan combination, so that adding new plans and/or services would just be a configuration.</p>

<h2>no reuse of variables</h2>

<p>At every assignment you create a new variable. </p>

<p>You declare multiple variables <code>input</code> with numbers. There should be only one variable <code>input</code> since <code>System.in</code> is a <em>singelton</em> and cannot be accessed concurrently anyway.
On top of that you declared <code>input</code> (without number) as a <em>class variable</em>. 
Since you only use this variable at only one method in our code which is the same where you assign it its value this is not needed.</p>

<p>The variables <code>choice1</code>, <code>choice2</code> and <code>choice4</code> hold the same value regarding the business case: the first selected service ID.
There should be only one variable <code>firstSelectedServiceID</code> to be used in all cases of the outer switch.
Similar is true for the other numbered <code>choice</code> variables.</p>

<h1>Naming</h1>

<p>Finding good names is the hardest part in programming. So always take your time to think carefully of your identifier names.</p>

<h2>Choose your names from the problem domain</h2>

<p>You have some identifiers which are named after their technical implementation: the same name with numbers. 
This makes your code hard to read and hard to understand.
Your variables should better be named like this:</p>

<ul>
<li><code>choice</code>: should be <code>numberOfServices</code><br>
instead  of writing a comment you can name the variable accordingly</li>
<li><code>choice1</code>, <code>choice2</code> and <code>choice4</code> as mentioned before</li>
<li><code>choice3</code> and <code>choice5</code> should be <code>secondSelectedServiceID</code></li>
<li><code>choice6</code> should be <code>thirdSelectedServiceID</code></li>
</ul>
    </div>