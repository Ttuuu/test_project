<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a good candidate for <strong>list comprehensions</strong>.</p>

<p>Here is some proposed code (not the most compact but should be fairly easy to understand):</p>

<pre><code>from typing import List

def is_even(number: int) -&gt; bool:
    return (number % 2) == 0


def balanced(lst: List)-&gt; bool:

    # list empty: return True by choice
    if len(lst) == 0:
        return True

    return len([item for item in lst if is_even(item)]) == len([item for item in lst if not is_even(item)])

# testing
lst1 = [1, 2, 3, 4, 5, 6]
print(f'List: {lst1} - balanced: {balanced(lst1)}')
</code></pre>

<hr>

<p>For convenience I have defined an additional function <code>is_even</code>.</p>

<p>Logic: count the even numbers, do the same with odd numbers and if both sets have the same length, return True.
I am not verifying that all items in the list are <code>int</code>...</p>
    </div>