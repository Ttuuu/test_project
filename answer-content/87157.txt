<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Reinventing the wheel</h1>

<p>Please note that encryption should, in principle, always be two way. A 'one way encryption' just sounds weird. Normally something is encrypted with the intention to decrypt it at a later stage. This is not what you do. What you do is called <em>hashing</em> or perhaps 'encoding' as you indicated in your title.</p>

<p>You could improve the formatting of your code. I really miss the empty lines before and after the functions, and a space before <code>{</code> in a function. Your code is also not working because of the <code>==&gt;</code> in it at the end. This should be <code>// ==&gt;</code>. Is is just nice if your code is working like published here.</p>

<p>The naming of your variables seems somewhat sloppy. In the beginning you call an encoded password <code>$newPass</code>. Is it a new password? I don't think so. Then in the <code>authorise()</code> function you rename it correctly to <code>$passEncode</code>, by which you probably mean <code>$passEncoded</code>.</p>

<p>So the big question is, why do you define your own hashing routine? Is it any better than the existing routines? PHP offers many of them!</p>

<p>See <a href="http://code.tutsplus.com/tutorials/understanding-hash-functions-and-keeping-passwords-safe--net-17577" rel="nofollow noreferrer">this link to tutsplus</a> which addresses some issues that are encountered in hashing passwords. Is your routine resistent to all these issues? I don't think so.</p>

<p>It is far better to use a good existing password hashing library that is present in PHP. Have a look here: <a href="http://php.net/manual/en/faq.passwords.php" rel="nofollow noreferrer">http://php.net/manual/en/faq.passwords.php</a></p>

<p>There's a lot of information about hashing and PHP out there. Find it and use it. I do really support new and inventive ways to solve problems but in this case it is definately not a good idea to reinvent the wheel.</p>
    </div>