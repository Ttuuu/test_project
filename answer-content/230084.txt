<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If <code>n</code> is zero then the loop</p>

<pre><code>while (startCol &lt;= endCol &amp;&amp; startRow &lt;= endRow)
</code></pre>

<p>does nothing, which means that the test</p>

<pre><code>if (n == 0)
</code></pre>

<p>is not necessary.</p>

<p>Here</p>

<pre><code>for (int i = endCol; i &gt;= startCol; i--)
{
    //keep in mind this is a spiral we can be in a line we are not suppose to touch the values
    //only in the upper half of the matrix we need
    if (startRow &lt;= endRow)
    {
        res[endRow][i] = num++;
    }
}
</code></pre>

<p>the condition of the if-statement is a loop invariant, so that it can be done outside of the loop:</p>

<pre><code>if (startRow &lt;= endRow)
{
    for (int i = endCol; i &gt;= startCol; i--)
    {
        res[endRow][i] = num++;
    }
}
</code></pre>

<p>Even if the C# compiler is smart enough to recognize the loop invariant and reorders the statements, the latter variant would be clearer to the reader of your code. The same applies to the next loop in your function.</p>

<p>Then note that <code>startRow</code>/<code>startCol</code> and <code>endRow</code>/<code>endCol</code> have the same value at the start of the loop body, and the tests </p>

<pre><code>if (startRow &lt;= endRow) ...
if (startCol &lt;= endCol) ...
</code></pre>

<p>can fail only in the <em>last</em> iteration. Therefore one can move that case out of the main loop, use only two variables for the first and last row/column, and write the inner loops in a symmetric fashion:</p>

<pre><code>int start = 0;
int end = n - 1;

while (start &lt; end)
{
    for (int i = start; i &lt; end; i++)
    {
        res[start][i] = num++;
    }
    for (int i = start; i &lt; end; i++)
    {
        res[i][end] = num++;
    }
    for (int i = end; i &gt; start; i--)
    {
        res[end][i] = num++;
    }
    for (int i = end; i &gt; start; i--)
    {
        res[i][start] = num++;
    }

    start++;
    end--;
}

if (start &lt;= end)
{
    res[start][start] = num;
}
</code></pre>
    </div>