<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Review</h3>

<ul>
<li>Don't use abbreviated variable names <code>s</code>, <code>curAns</code> and <code>posAns</code>; use self describing names: <code>value</code>, <code>index</code> and <code>targetIndex</code> instead. </li>
<li>The nullable int could be replaced with <code>-1</code>. This reads cleaner and allows you to bypass the final <code>??</code> operator in <code>curAns ?? -1</code>.</li>
<li>You can optimize the count <code>curAns.Value + target.Length</code> with adding <code>-1</code> because we don't care about finding another match on the currently best found index.</li>
<li>You should exit early if no targets are specified</li>
</ul>

<h3>Refactored</h3>

<pre><code>public static int IndexOfAny2(this string value, params string[] targets)
{
    var index = -1;
    if (targets == null || targets.Length == 0) return index;

    foreach (var target in targets)
    {
        var targetIndex = value.IndexOf(target, 0, 
            index &gt; -1 ? index + target.Length - 1 : value.Length);

        if (targetIndex &gt;= 0 &amp;&amp; (index == -1 || targetIndex &lt; index))
        {
            index = targetIndex;
            if (index == 0)
            {
                break;
            }
        }
    }

    return index;
}
</code></pre>
    </div>