<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Am I missing something?</p>
</blockquote>

<p>Each expansion of the tree visits every vertex, either as a member of <code>selectedSoFar</code> or as a candidate in <code>matrix[row]</code>.  That makes the runtime <span class="math-container">\$O(n^2)\$</span> in the number of vertices.  </p>

<p>An algorithm based on ordered data will tend toward <span class="math-container">\$O(n*log(n))\$</span>.  With a million vertices, that's 50 thousand times fasterâ€”the difference between an hour and six years.</p>

<p>See also <a href="https://en.wikipedia.org/wiki/Prim%27s_algorithm#Time_complexity" rel="nofollow noreferrer">Wikipedia on Prim's</a>; there's a section on time complexity.</p>
    </div>