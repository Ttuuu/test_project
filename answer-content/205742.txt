<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you were to extract all <code>abs(c)</code> into a list, you could use <code>max</code> over that list.</p>

<p>Fortunately, this is easy using your loops and a list-comprehension:</p>

<pre><code>Cs = [
    abs(value)
    for collection in elements.values()
    for (_, value), _ in collection
]
max_c = max(Cs)
</code></pre>

<p>Note the use of <a href="https://docs.python.org/3/library/stdtypes.html#dict.values" rel="noreferrer"><code>elements.values()</code></a> instead of extracting the values manually (<code>elements[a]</code>) and the use of <code>_</code> as a throwaway variable.</p>

<p>Now <a href="https://docs.python.org/3/library/functions.html#max" rel="noreferrer"><code>max</code></a> works on any iterable, meaning we don't even have to build a temporary list and can feed it a <a href="https://www.python.org/dev/peps/pep-0289/" rel="noreferrer">generator-expression</a>:</p>

<pre><code>max_c = max(
    abs(value)
    for collection in elements.values()
    for (_, value), _ in collection
)
</code></pre>
    </div>