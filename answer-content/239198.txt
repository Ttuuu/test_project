<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can use an intermediate generator function:</p>

<pre><code>[y for y in (complicated_function(x) for x in &lt;my_iterable&gt;) if y is not None]
</code></pre>

<p>An alternative is changing <code>complicated_function</code> to become a generator that accepts an iterable, instead of a pure function:</p>

<pre><code>def complicated_function(iterable):
    for x in iterable:
        if x &lt; 0:
            yield "a"
        elif x == 3.6:
            yield "b"
        elif x == 4:
            continue
        elif x &gt; 10:
            yield "c"
        else:
            yield "d"
</code></pre>

<p>and then: <code>list(complicated_function(&lt;my_iterable&gt;))</code></p>
    </div>