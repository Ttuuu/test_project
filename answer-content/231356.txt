<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Recusion Abuse</strong></p>

<p>This does not seem to be a naturally recursive problem and using recursion here causes more issues than it is worth: </p>

<ul>
<li>If the user enters too many invalid inputs, they can blow the stack.</li>
<li><p>If a user errors out by inputting an incorrect password, they have to re-select their intent to login before they are able to try again.</p></li>
<li><p>Control flow is not very flexible as the primary tool of control is
recursively starting from the beginning.</p></li>
<li>What if you wanted to lock out the user after entering 5 incorrect passwords? Keeping track of this would be needlessly complex using recursion.</li>
<li>Decreased readability.</li>
</ul>

<p><strong>Single Responsibility Principle</strong></p>

<p>Functions should do one thing. They should do it well. They should do it only. The method name "registerOrLogIn" immediately signals the method is doing more than one thing because of the "or". The method is responsible for registering the user <em>and</em> logging in the user. This should be separated into more modular methods. Also, if there are other ways the user can access your application in the future will you keep adding to this method? It makes sense to start to separate things now.</p>

<p><strong>Resource Management</strong></p>

<p>Explicitly Calling .Close() is not necessary if wrapped in a using statement in C#. Consider wrapping all of your SqlConnection statements in a using statement. Also, your connection string should be a global constant of some sort. Realistically this would probably come from the web.config, but a constant in the program class would work for now. </p>

<p><strong>Conclusion</strong></p>

<p>This is a great start! I like the way you are salting your hashes. Although things could be more modular, it is pretty easy to understand the flow of the code. I have recorded my live code review and will leave the link below. I hope this feedback helps!</p>

<p>Live code review:
<a href="https://www.youtube.com/watch?v=c9ZheaGGRMI" rel="nofollow noreferrer">https://www.youtube.com/watch?v=c9ZheaGGRMI</a></p>
    </div>