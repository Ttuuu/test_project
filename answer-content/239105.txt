<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Good:</p>

<p>no warnings with <code>-Wall -Wextra -pedantic</code> with both gcc and clang, no
memory leaks found with valgrind.</p>

<p>Bad:</p>

<p>use prototypes instead of declarations to give compiler a chance
to issue warnings when an incorrect number of parameters is passed or incorrect types are passed:</p>

<pre><code>void play(void)
int main(void)
</code></pre>

<p>You don't check if user passes correct acceptable difficulty level:</p>

<pre><code>$ ./main
1 = EASY, 2 = MEDIUM, 3 = HARD, &amp; 4 = INSANE
What level would you like to play: 6
Floating point exception
$ ./main
1 = EASY, 2 = MEDIUM, 3 = HARD, &amp; 4 = INSANE
What level would you like to play: 0
Floating point exception
</code></pre>

<p>You don't check if user passes an integer in the first place:</p>

<pre><code>$ ./main
1 = EASY, 2 = MEDIUM, 3 = HARD, &amp; 4 = INSANE
What level would you like to play: a
</code></pre>

<p>will make your program go into an endless loop.</p>

<p>Suggested:</p>

<p>convert <code>int difficulty = 1</code> into an en enum with additional <code>DIFFICULTY_MAX</code> and <code>DIFFICULTY_MIN</code> values, and check if value passed from the user is lower than <code>DIFFICULTY_MAX</code> and larger or equal to <code>DIFFICULTY_MIN</code>.</p>

<p>Use <code>EXIT_SUCCESS</code> to denote success at the end of <code>main()</code>:</p>

<pre><code>return EXIT_SUCCESS;
</code></pre>

<p>or just omit the return from <code>main()</code> - compiler will automatically return a success value if we run off the end. </p>
    </div>