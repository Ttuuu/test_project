<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Methods should be <code>const</code> where possible (<code>currentProgress</code>, <code>maxProgress</code>, various "stop" related functions - but see below).</p>

<p>This class should have a constructor.  In particular, besides having a default constructor, having one that can take the initial state (like max progress and/or an initial message) would streamline its use without having to call multiple <code>set</code> type functions.</p>

<p>Since your class is intended to be derived from, a <code>virtual</code> destructor, even if empty or defaulted, is necessary to avoid problems when destroying progress bars via a pointer to the base class.</p>

<p>Asking a progress bar if the current calculation or task should stop seems counter intuitive to me. Not all users of progress will need this capability, and it gets away from the Single Responsibility Principle. The progress bar should just handle progress. The calculation or task can handle the stopping. In some cases (like a GUI progress bar with a "stop" button) the progress class may need to keep track if a stop is requested.  This can be handled by the derived class, in cooperation with the task that is using the Progress object.  Should the stop be pushed to the task?  Should the task query the progress to see if the stop button was hit?  What about multiple threads processing the task?</p>
    </div>