<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First thing that comes to mind is subclassing Button, perhaps nesting it in your main class so it can easily modify class variables:</p>

<pre class="lang-java prettyprint-override"><code>import javafx.scene.control.Button;
import javafx.scene.layout.Pane;
import javafx.event.EventHandler;
import javafx.event.ActionEvent;

public class Quiz {

    private int subchapter;
    private Pane root = new Pane();

    private void chooseQuiz() {
        MyButton chapter1 = new MyButton("Skill acquisition", 30, 150, e -&gt; {...});
        chapter1.setSubchapter(18);
    }
    private void getQuestionsAndScores() {...}
    private void runQuiz() {...}

    private class MyButton extends Button {
        private MyButton(String text, int x, int y, EventHandler&lt;ActionEvent&gt; onClick) {
            super(text);
            this.setLayoutX(30);
            this.setLayoutY(50);
            this.setWrapText(true);
            this.setOnAction(onClick);
            root.getChildren().add(this);
        }
        private void setSubchapter(int value) {
            this.setOnAction(e -&gt; {
                subchapter = value;
                getQuestionsAndScores();
                runQuiz();
            });
        }
    }
}

</code></pre>

<p>This is essentially streamlining your code, delegating verbose code and repetitive calls to the constructor/class functions, which I assume is what you mean by "efficient".</p>

<p>EDIT:</p>

<p>As mjt pointed out, this could be considered an abuse of inheritance. A more proper way that avoids the use of inheritance would be using functions:</p>

<pre class="lang-java prettyprint-override"><code>import javafx.scene.control.Button;
import javafx.scene.layout.Pane;
import javafx.event.EventHandler;
import javafx.event.ActionEvent;

public class Quiz {

    private int subchapter;
    private Pane root = new Pane();

    private void chooseQuiz() {
        MyButton chapter1 = createButton("Skill acquisition", 30, 150, e -&gt; {...});
        setSubchapter(chapter1, 18);
    }
    private void getQuestionsAndScores() {...}
    private void runQuiz() {...}

    private Button createButton(String text, int x, int y, EventHandler&lt;ActionEvent&gt; onClick) {
        Button button = new Button();
        button.setText(text);
        button.setLayoutX(x);
        button.setLayoutY(y);
        button.setWrapText(true);
        button.setOnAction(onClick);
        root.getChildren().add(button);
        return button;
    }
    private void setSubchapter(Button target, int value) {
        target.setOnAction(e -&gt; {
            subchapter = value;
            getQuestionsAndScores();
            runQuiz();
        });
    }
}

<span class="math-container">```</span>
</code></pre>
    </div>