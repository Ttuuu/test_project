<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My take: ergonomics.</p>
<p>To improve <strong>user experience</strong> and keeping in mind the constraints of a console application, I would minimize the number of <strong>keystrokes</strong> required to operate the program.
To downvote or upvote a post, pressing <kbd>u</kbd> or <kbd>d</kbd> respectively should be sufficient.</p>
<p>The actions on the posts (currently: downvote, upvote) could be made an <strong>Enum</strong>.
It is possible that in the future, as your application grows you will want to add more actions eg. flag post, delete etc. I would build the app with flexibility and mind. So the Downvote action should be <em>mapped</em> to letter <kbd>d</kbd> etc.</p>
<p>But an Enum must contain integral values so we have to find another alternative. Here is my try inspired on <a href="https://stackoverflow.com/a/37399406/6843158">this post</a>.
Note the conversion of char to string in the switch block - required for comparing values. Response is converted to lowercase too.</p>
<p>TODO: wrap the code in a while loop to handle invalid responses.</p>
<pre><code>using System;

class MainClass {

  /* possible actions on a post */
  public static class PostAction
  {
      public const string 
      Downvote = "d",
      Upvote = "u";
  }

  public static void Main (string[] args) {
    char response;

    Console.WriteLine("What would you like to do now? \nYou can 'UpVote', 'DownVote'");
    response = Console.ReadKey().KeyChar;
    response = char.ToLower(response);
    Console.WriteLine("You answered: {0}", response);

      switch (response.ToString())
      {
          case PostAction.Downvote:
              Console.WriteLine("Downvote");
              break;
          case PostAction.Upvote:
              Console.WriteLine("Upvote");
              break;
          default:
              Console.WriteLine("Not a valid answer");
              break;
      }

  }
}
</code></pre>
    </div>