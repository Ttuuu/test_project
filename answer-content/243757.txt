<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Not too advanced myself - so take with a grain of salt.</p>
<ul>
<li>Foremost I would separate the logic for constructing the grid and printing. Especially extract the function to construct the grid.  Currently its wrapped in <code>printClockwise</code>  IMHO it should be prominently its own function.</li>
<li>There are a few definitions in <code>printClockwise</code>  (<code>emptyGrid</code>, <code>directionOrder</code> and the printing) that I would consider reusable and would make them top level.</li>
<li>You only use lens in one place. <code>lens</code> is quite an expensive import - there just was an <a href="https://dixonary.co.uk/blog/haskell/pain" rel="nofollow noreferrer">interesting post</a>.  I suppose your intend was to learn lens and therefore it's used - but just for the code I would consider removing the dependency.</li>
<li>the fixed <code>"%4s"</code> in printing - it's easy to estimate the required width for larger numbers. Or just make it that max <code>n</code> is <code>999</code>.</li>
</ul>
<p>Some stuff to consider that is really personal choice - no need to follow if you disagree:</p>
<ul>
<li>changing the data type to strict mutable array or similar.</li>
<li>adding a <code>walk</code> that takes larger strides.</li>
<li>split the <code>walk</code> function into one stream of positions in the spiral, and separately setting the values in a second step.  This could solve the issue that the input needs to be a perfect square - just take the first <code>n</code> positions.</li>
</ul>
<p>As last remarks:</p>
<ul>
<li>whenever I see such a spiral I think <a href="https://en.wikipedia.org/wiki/Ulam_spiral" rel="nofollow noreferrer">Ulam spiral</a>. If you want to expand I would consider adding functionality to the printing to allow highlight - in this case for primes.</li>
<li>I also checked whether the coordinates are on OEIS - they are <a href="https://oeis.org/A174344" rel="nofollow noreferrer">A174344</a>. And your algorithm agrees with the algorithm they post along side (the Julia implementation is almost the same, the other use some shenanigans with sin and cosine).</li>
</ul>
    </div>