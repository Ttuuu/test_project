<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To add onto KIKO's answer, you are on the right track.</p>

<p>Ultimately there is quite a bit you can change and there's a ton I would fix myself.  But I'm not going to re-write the whole thing for you.  Hopefully these pointers will help you move in the right direction.</p>

<p>First things first lets answer your question:</p>

<h1>Your Question</h1>

<blockquote>
  <p>How do you put the message below the table?</p>
</blockquote>

<p>Quite easy actually.  You can re-open PHP below that table and echo a variable or message.  Right now you have: </p>

<pre><code>if (empty($forename)) {
    echo "First name is required\n";
} else {
    $forename = fix_string($_POST["forename"]); 
}
</code></pre>

<p>Instead what you can do is store that error message in a variable</p>

<pre><code>if (empty($forename)) {
    $error = "First name is required\n";
    // You could also unset the variable here too- Not necessary but good for memory clean up
    unset($forename);
} else {
    $forename = fix_string($_POST["forename"]); 
}
</code></pre>

<p>then below your table</p>

<pre><code>&lt;?php
if($error){
 echo $error
}
?&gt;
</code></pre>

<p>With that you can also switch from the empty function to an exclamation mark operator</p>

<pre><code>if(!$forename){
// error
}else{
// Good to go
}
</code></pre>

<h2>Now let's get a bit more advanced</h2>

<p>Instead of storing each error in an individual variable, create an array for errors </p>

<p><code>$err = [];</code></p>

<p>Then inside each if statement you can add that message to that array</p>

<p><code>$err[] = "Some Error";</code></p>

<p>And below your table use an iterator to get all of the values from that array</p>

<pre><code>foreach($err as $key){
  echo $key;
}
</code></pre>

<p>Of course before you do any iteration, check to see if that array even has anything, you can achieve this by using the count function. </p>

<pre><code>$num = count($err);
if ($num &gt; 0 ){
 // Iterate
}
</code></pre>

<h1>Session Start</h1>

<p>First thing you have to change is where you're calling <code>session_start</code> take that and put it right at the very very top. In a vast majority of cases you should have it at the top before anything else.  Only when using say for example an login with AJAX. But lets not get to ahead of ourselves.  </p>

<h1>Password</h1>

<p>Same thing that KIKO said, you don't need to filter your password, at the very least change the 3rd parameter in it to <code>FILTER_UNSAFE_RAW</code> or just remove it - because you're hashing it there is no chance for a user to do anything.  I know you've been taught and told several times to filter ALL inputs, this is the one and only exception to that rule. Once a password is hashed there's nothing left that PHP will mistake for code.</p>

<h1>Functions</h1>

<p>Should be declared before you try to use them.  I'm not sure why they are at the bottom of your document, they should be at the top with all the other PHP.  Not sure if you just pasted those in from an include file at the bottom just so they were there?  If its a separate file just start a new code block with the little tilde's ```</p>

<h1>Finishing Up</h1>

<p>I think I covered everything that you were mainly asking. Like I said there a lot I would personally change. Hopefully that helps though. </p>
    </div>