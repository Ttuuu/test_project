<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Ok, so I'm also a beginner and some weeks ago I worked on a tic-tac-toe kind of game and learned a lot from it, here's what I think you could improve on.</p>

<p>DRY (Don't Repeat Yourself): Whenever you see that you are having to copy and paste your code a lot, you can generally assume there's a shorter way to do the same thing you're trying to do, either by using lists, for-loops, while-loops, etc.</p>

<p>One thing you can learn is using list comprehensions and the 'all' and 'any' operations, that's very useful when you are using lists.</p>

<pre><code>players = ['X', 'O']

gameRows = [[gameTable[0][0], gameTable[0][1], gameTable[0][2]],
            [gameTable[1][0], gameTable[1][1], gameTable[1][2]],
            [gameTable[2][0], gameTable[2][1], gameTable[2][2]]]

def check():
    # You don't need to repeat the same code for both players,
    # Just use a for loop for each of them
    for player in players:
        # You should iterate all the columns and diagonals of the table
        for row in gameRows:
            # Returns True if all of the tiles in the row are equal the player
            if all(i == player for i in row):
                who(1, player)
                return True

    # Here you can add the 'gameTable' into a list
    if '-' not in gameTable[0] + gameTable[1] + gameTable[2]:
        who(2, '-')
        return True


def who(win, cords):
    # Here it's pretty much the same, instead of printing 'p1'
    # you could just print 'cords'
    if win == 1:
        if cords == 'X':
            print('---=== {} WINS A GAME ===---'.format(p1))
        elif cords == 'O':
            print('---=== {} WINS A GAME ===---'.format(p2))
    elif win == 2:
        print('\t---=== DRAW ===---')
    else:
        pass
</code></pre>

<p>You could have a 'gameColumns' and 'gameDiagonals' lists for you to iterate through them.
Idk if this would actually work on your code, since you haven't provided all of it, but I think the general idea could be implemented. You could also check this link: <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0008/</a>
It's a style guide for writing code that is mostly accepted by all programmers, there's nothing wrong with using camelCase, it's just that people are generally used to other ways of casing variables.
Hope you understood everything. Good luck on learning python :)</p>
    </div>