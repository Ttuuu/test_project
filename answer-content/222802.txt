<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few key points:</p>

<ul>
<li>Make sure to put in semicolons!</li>
<li>You don't need to export properties (i.e do <code>this.myVar</code>) if you're not going to access them - this can lead to potentially slowing down recurrence, or in some cases, security vulnerabilities.</li>
<li>If you're going to use arrow functions, keep it consistent - do <code>const Tree = () =&gt; {</code> on the first line</li>
</ul>

<p>Some more specific things about the actual functionality/logic:</p>

<ul>
<li>By tracking <code>this.level</code>, you could simplify all required actions into an array by simply pushing their position in the tree. If <code>this.level === 0</code>, you know you are at the top of the tree, and you know to end recurrence.</li>
<li>Using a position-based tracking lets you make it asyncronous, and print the result at the end. Remember that in JS, <code>console.log</code>s take a lot of time, so you want to avoid it as much as possible.</li>
<li>This would let you essentially JSONify the tree into a bunch of function references, which, when called, would populate themselves. Giving the option to return this would make the class more integratable into other things, where a console output is not necessarily the most useful thing. Further, it would let you cut out the repetition of <code>if (left_tree.length&gt;1){</code>, which is not DRY.</li>
</ul>
    </div>