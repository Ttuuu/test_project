<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Clean up your code</h1>
<p>Don't leave in superfluous code (such as the extra <code>;</code> and subtraction by <code>0</code>) and debug output in your code.</p>
<p>Also format the code consistently, preferably using conventions outlined in a <a href="https://google.github.io/styleguide/javaguide.html" rel="nofollow noreferrer">Style Guide</a>, such as: Put spaces around operators, put a space between keywords (such as <code>if</code>) and the following <code>(</code>, etc.</p>
<h1>Document your code</h1>
<p>Especially because your task doesn't say, clearly document what your code takes/allows as input and what it returns. Currently your code aborts with an unhelpful exception if it receives an unexpected input such as any non-lowercase letter. Unless this needs to be super optimized (it doesn't) it would be better to check for and reject invalid input.</p>
<h1>Use high level Java features</h1>
<p>Unless you are specifically learning to use low-level feature (such as arrays) or are writing super optimized code (you aren't) consider using the full range of the Java API. For instance in this case it would make sense to use a <code>Map&lt;Char, Integer&gt;</code> to hold the character count instead of an array. This has for one the advantage that it can hold all characters and not only lower case ones.</p>
<h1>Alternative algorithm</h1>
<p>There is a slightly <del>better</del> different alternative that only loops once over the string. It requires, aside from the array/<code>Map</code> with the character count, additionally a <a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)" rel="nofollow noreferrer">queue</a>.</p>
<p>In the loop for the current char:</p>
<ul>
<li>Increase the character count</li>
<li>Put the index in the end of the queue</li>
<li>Remove all indices from start of the queue, which point to a character that has more than one count</li>
</ul>
<p>After the loop, the index is the first position of the queue is the solution.</p>
    </div>