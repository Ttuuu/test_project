<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Definitely not!</p>

<p>While using the ReadWriteLock pattern instead of simple intrinsic locking for collections is a good thing to do, you are doing almost everything wrong.
I recommend you to take a deeper look at Synchronizers in Java and also the Decorator Pattern. Following points are done wrong in your snippet:</p>

<ul>
<li><p>You are having a ReadWriteLock attribute but don't use it.</p></li>
<li><p>The synchronized Collection Wrapper is used in some methods but
doing that will not create any kind of Thread-Safety since the Mutex aquired is chaning every time the method is invoked.</p></li>
<li><p>You are having two other locks where as one should be the read and the 
other one the write lock. But using those to guard code sections in useless, 
since they both have no connection to each other and you don't even lock 
every critical section.</p></li>
</ul>

<p>Important for you to understand is, that when using locking every access must be serialized / guarded or your locking is worthless. Before you are having an important interview you may take a look at the Book <a href="https://www.amazon.de/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601" rel="nofollow noreferrer">Concurrency In Practice</a> which gives a very good introduction to Java Concurrency.</p>
    </div>