<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Usually it is a good style in Java to create named constant for string (and other) hardcoded values.</p>
</blockquote>

<p>This holds true for "magic numbers" and to a lesser extend random Strings. The reason to give them a meaningful name is to make things clear.</p>

<p>For example compare these 2 loop declarations:</p>

<pre><code>for ( int i = 0; i &lt; 5; i++) {
   ... do stuff
}

for ( int i; i &lt; MAX_BANANAS; i++) {
    ... do stuff
}
</code></pre>

<p>For the former you'll have to look through the entire loop before you hopefully realise why it's looping 5 times. The latter however shows you immediatly that you're doing something with a predefined amount of bananas.</p>

<p>Strings can have the same issue. If your XML had predefined business shortcuts instead of readable tags, defining them as constants at the top with an easily recognisable name would be the obvious preference. Since the best you could do was name them the same asside from a "KEY_" prefix there's not much added value here to do so. The only really useful constant is the filename, which following Doi9t's advice should probably be passed in as a parameter instead of being hard coded.</p>

<p>All that said, try to see what is more useful to you or other people actually using your code. Let's say you made a typo in one of the keys, how would you detect this? Would you debug the code right after reading the entire file, notice that there is <em>something</em> wrong but can't tell which input? Then putting them all together at the top would probably be more useful, as you can just go through them all easily to see which one has a type.</p>

<p>If you would easily figure out which field didn't get loaded in properly, then you'll probably jump into this file through the getter and can then see if the String defined there is correct instead of going a step further to the constant declaration (although in my IDE this is just 1 key press extra so doesn't change much either).</p>

<hr>

<p>Style guidelines are usually just that: guidelines. It helps (me at least) to understand why those guidelines were written like that and see if they actually make sense before using them blindly. </p>
    </div>