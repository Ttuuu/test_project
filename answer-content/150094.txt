<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If just looking for a single character in a set of strings, I would think basic string manipulation would be sufficient.</p>

<p>What is not clear to me from your question is why you are using word boundaries in your regex definition when the array itself is just single words.  Is your intent to analyze individual words in each of the array strings (with string perhaps consisting of multiple words) or are you only truly going to have single word string in the array?</p>

<p>For now, I will provide answer given the assumption of an array of single words.</p>

<p>To do that, I would simply use <code>Array.filter()</code> in combination with <code>String.indexOf()</code>.</p>

<pre><code>var needle = 'e';
var haystack = ["platypus", "elvis", "javascript", "stackoverflow"];
var filtered = haystack.filter( str =&gt; (str.indexOf(needle) === -1) );
</code></pre>

<p>Based on your comment that array entries could have multiple words, I would suggest using <code>Array.reduce()</code> to build all array of all words across all entries that do not have have the needle character in them.</p>

<pre><code>var needle = 'e';
// note global flag here to get all matches
var regex = new RegExp('\\b([^' + needle + ']+)\\b', 'g');
var haystack = ["platypus", "elvis", "javascript", "stackoverflow", "some multi-word string"];
var result = haystack.reduce(
    (aggregator, str) =&gt; {
        while (match = regex.exec(str) !== null) {
            aggregator.push(match[1]);
        }
    },
    []
);
console.log(result); // ["platypus", "javascript", "multi-word", "string"]
</code></pre>
    </div>