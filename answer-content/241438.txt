<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>General</h2>

<p>There are so, so many examples of people scraping stock tracker sites. For beginners it's an understandable urge: you can see the data on the web, and you want to be able to translate those data using a script.</p>

<p>The first thing you should reach for is an API, not a scraper. Scrapers are fragile, inefficient, and sometimes immoral - most website creators intend on human consumption, rather than bot consumption, and may be losing out on ad revenue. It's not clear to me what the business model of the MMTC is so I cannot confirm whether that is the case here, but there are many APIs that will give you the price of gold without having to go through the round trip of PDF-render-PDF-parse.</p>

<h2>Import order</h2>

<p>There are several different ways to do this; I recommend:</p>

<ul>
<li>Built-in libraries first, alphabetical</li>
<li>External libraries second, alphabetical</li>
</ul>

<h2>Global constants</h2>

<p>Things like <code>grams</code> should be <code>GRAMS</code> since they're global constants.</p>

<p><code>ctrx</code>, <code>gold_prices</code> and <code>date</code> should not be at the global level and should be state as represented in function arguments and/or class members.</p>

<p><code>date</code> needs its name changed to avoid shadowing the built-in <code>datetime.date</code>.</p>

<p><code>account_*</code> variables should not be hard-coded, and should be saved to a secure secrets wallet. There are multiple ways to do this either via Python libraries or the OS that you are using.</p>

<p>Strings like <code>"./gold-price-tracker-caa9e-firebase-adminsdk-9e39d-72694e4d52.json"</code> and <code>'gold-price-tracker-caa9e.appspot.com'</code> should be moved to global constants, if not made parametric configuration.</p>

<h2>Indentation</h2>

<p>Among other elements of the PEP8 standard, this:</p>

<pre><code>gp=float(str(contents[298]).replace(',',''))# Today's gold price.
</code></pre>

<p>should have two spaces before the hash. In fact, it's deeply confusing StackExchange's Python highlighting parser.</p>

<h2>Side-effects</h2>

<p><code>get_price</code> does not just get the price. It also adds the price to <code>gold_prices</code>. Why? This appending should not be done in this function.</p>

<h2><code>BytesIO</code></h2>

<p>You stream-ify the result of <code>urlopen</code> to a <code>BytesIO</code>. There is a much better way to do this:</p>

<ul>
<li>Use <code>requests</code>, not <code>urlopen</code></li>
<li>Use the streaming option of <code>requests.get</code></li>
<li>Use the raw stream from the response object, which is already a stream, passing this to <code>PdfFileReader</code></li>
<li>Do not make a <code>BytesIO</code></li>
</ul>

<h2>Getting the date and time</h2>

<p>Python has this built-in: <code>datetime.datetime.now</code>. Do not make an HTTP request to get the current time. If you're worried that the client's time is not reliable, that's a different problem that should be solved at the operating system level with NTP.</p>

<h2>Context managers</h2>

<p>Read <a href="https://docs.python.org/3.8/library/sqlite3.html#using-the-connection-as-a-context-manager" rel="nofollow noreferrer">the docs</a>. Use a <code>with</code> statement for your SQLite variables. Also, your call to <code>close()</code> should be in a <code>finally</code>, since the context manager does not actually do a <code>close</code>.</p>

<h2>No-op loop</h2>

<p>Your final</p>

<pre><code>while True:
    loop()
    break
</code></pre>

<p>does not have any effect. Replace it with a single call to <code>loop()</code>.</p>
    </div>