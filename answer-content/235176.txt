<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As suggested by Cris, did the changes in path and used the hint of copy files and now the it takes around 21 seconds. Here is the solution </p>

<pre><code>function image_sorting(color_img, depth_img, Openpose, selected_color, selected_depth)


file = dir(fullfile(depth_img, '*.timestamp'));

file2 = dir(fullfile(color_img, '*.timestamp'));

file3 = dir(fullfile(depth_img, '*.bmp'));

file4 = dir(fullfile(Openpose, '*.png'));


for k = 1:length(file)
    fileID = fopen(fullfile(depth_img, file(k).name),'r');
    % format longG
    A(k,:) = textscan(fileID,'%d64') ;
    fclose(fileID);
end


for m = 1:length(file2)

    fileID2 = fopen(fullfile(color_img, file2(m).name),'r');
    %format longG
    B(m,:) = textscan(fileID2,'%d64') ;
    fclose(fileID2);
end

%%%%%% Here there are two parts. Use any of them according to conditions
if length(file2) &lt;= length(file)
    %PART 1:- If RGB images are less than depth then use the following code

    for m = 1:length(file2)
        for k = 1:length(file)

            C{k,m} = A{k,1} - B{m,1};
            if C{k,m}&lt;0
                C{k,m} = -C{k,m};
            end
        end
    end

    [V,X] = min(cell2mat(C),[],1); % Is a row vector containing the minimum value of columns
    % V gives minimum value and X gives Index

    m = 1;
    copyfile(Openpose, selected_color) 
    for w= X

        depthDataBase = file3(w).name;
        %rgbDataBase = file4(m).name;

        depthData = fullfile(depth_img, depthDataBase);
        %rgbData = fullfile(Openpose, rgbDataBase);

        imageArrayy = imread(depthData);
        %imageArrayy2 = imread(rgbData);

        depthData2 = fullfile(selected_depth, depthDataBase);
        imwrite(imageArrayy, depthData2);
        %rgbData2 = fullfile(selected_color, rgbDataBase);
        %imwrite(imageArrayy2, rgbData2);
        %movefile(file4, file5) 


        m = m+1; % for part 2 m = m+1
    end


    %
    % PART 2:- If RGB images are more than depth then use the following code
else

    for m = 1:length(file2)
        for k = 1:length(file)

            C{m,k} = A{k,1} - B{m,1};
            if C{m,k}&lt;0
                C{m,k} = -C{m,k};
            end
        end
    end

    [V,X] = min(cell2mat(C),[],1); % Is a row vector containing the minimum value of columns
    % V gives minimum value and X gives Index

    copyfile(depth_img, selected_depth)
    for m= X

        %depthDataBase = file3(w).name;
        rgbDataBase = file4(m).name;

        %depthData = fullfile(depth_img, depthDataBase);
        rgbData = fullfile(Openpose, rgbDataBase);

        %imageArrayy = imread(depthData);
        imageArrayy2 = imread(rgbData);

        %depthData2 = fullfile(selected_depth, depthDataBase);
        %imwrite(imageArrayy, depthData2);
        rgbData2 = fullfile(selected_color, rgbDataBase);
        imwrite(imageArrayy2, rgbData2);


        w = w+1;
    end
end
</code></pre>
    </div>