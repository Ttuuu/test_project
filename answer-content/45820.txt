<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Readability</h2>
<p>Let's reformat your code quickly:</p>
<blockquote>
<pre><code>    HttpURLConnection connection = null;
    boolean connected = false;
    outer: for (int retry = 0; retry &lt;= RETRIES &amp;&amp; !connected; retry++) {
        if (retry &gt; 0) {
            log.warning("retry " + retry + "/" + RETRIES);
            Thread.sleep(RETRY_DELAY_MS);
        }
        connection = (HttpURLConnection) entries.openConnection();
        connection.connect();
        switch (connection.getResponseCode()) {
            case HttpURLConnection.HTTP_OK:
                log.fine(entries + " **OK**");
                connected = true;
                break; // fine, go on
            case HttpURLConnection.HTTP_GATEWAY_TIMEOUT:
                log.warning(entries + " **gateway timeout**");
                break;// retry
            case HttpURLConnection.HTTP_UNAVAILABLE:
                System.out.println(entries + "**unavailable**");
                break;// retry, server is unstable
            default:
                log.severe(entries + " **unknown response code**.");
                break outer; // abort
        }
    }
    connection.disconnect();
    log.severe("Aborting download of dataset.");
</code></pre>
</blockquote>
<p>Fixed:</p>
<ul>
<li><p>1-liners are hard to read:</p>
<pre><code>  case HttpURLConnection.HTTP_UNAVAILABLE: System.out.println(entries+ "**unavailable**");break;// retry, server is unstable
</code></pre>
</li>
<li><p>spacing inside for-loop conditions:</p>
<pre><code>  for(int retry=0;retry&lt;=RETRIES&amp;&amp;!connected;retry++)
</code></pre>
</li>
<li><p>indentation - 1-space indentation is <em>'just wrong'â„¢</em>.</p>
</li>
</ul>
<h2>Functionality</h2>
<p>Right, how does this code work? There are a few problems I can (now) see in here:</p>
<ol>
<li>On HTTP_OK, it <code>breaks</code> out of the switch, then it exits the loop (because <code>&amp;&amp; !connected</code>), and then immediately disconnects and logs a severe error? This can't be right?</li>
<li><code>HTTP_GATEWAY_TIMEOUT</code> logs a warning.... great, but <code>HTTP_UNAVAILABLE</code> does a <code>System.out.println</code></li>
</ol>
<p>The <code>InterruptedException</code> handling is not shown here. There are articles on how to do this properly. Google up on that.</p>
<h2>Suggestion</h2>
<p>I recommend a sub-function, with a do-while loop (the following is a quick hack-up - untested):</p>
<pre><code>private static final HttpURLConnection getConnection(URL entries) throws InterruptedException{
    int retry = 0;
    boolean delay = false;
    do {
        if (delay) {
            Thread.sleep(RETRY_DELAY_MS);
        }
        HttpURLConnection connection = (HttpURLConnection)entries.openConnection();
        switch (connection.getResponseCode()) {
            case HttpURLConnection.HTTP_OK:
                log.fine(entries + " **OK**");
                return connection; // **EXIT POINT** fine, go on
            case HttpURLConnection.HTTP_GATEWAY_TIMEOUT:
                log.warning(entries + " **gateway timeout**");
                break;// retry
            case HttpURLConnection.HTTP_UNAVAILABLE:
                log.warning(entries + "**unavailable**");
                break;// retry, server is unstable
            default:
                log.severe(entries + " **unknown response code**.");
                break; // abort
        }
        // we did not succeed with connection (or we would have returned the connection).
        connection.disconnect();
        // retry
        retry++;
        log.warning("Failed retry " + retry + "/" + RETRIES);
        delay = true;
        
    } while (retry &lt; RETRIES);
    
    log.severe("Aborting download of dataset.");
    
}
</code></pre>
    </div>