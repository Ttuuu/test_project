<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This looks nice.  It is very readable and is probably fast.</p>

<p>Sometimes ring buffer wrap is implemented by using the following kind of remainder stuff and offsets:</p>

<pre><code>end_offset = (end_offset + 1) % size;
</code></pre>

<p>But I like your way of doing it without offsets and division.</p>

<p>Some minor findings:</p>

<ol>
<li><p><code>NULL</code> pointer checks in <code>RB_pop</code> prevents segfaults, but the caller will get a return value of zero. So the caller won't know if zero is an error or a success result.</p>

<pre><code>int8_t RB_pop(ring_buffer* rb)
{
    if (rb == NULL || rb-&gt;buffer == NULL)
        return false;
</code></pre></li>
<li><p><code>RB_pop</code> and <code>RB_push</code> both do the check: <code>rb == NULL</code>.  Maybe other functions should do it too.</p></li>
</ol>
    </div>