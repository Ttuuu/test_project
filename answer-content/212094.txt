<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A little bit late to the party, but here is an <em>O(n)</em> ES6 version of solving the problem only looping through the array a single time to achieve the desired results. </p>

<pre><code>function multiplyArr(arr) {
    return arr.map((item) =&gt; eval(`${arr.join('*')}/${item}`));
}
</code></pre>

<p>The catch with this solution is that you can multiply all of the values of the array, but then divide by the current value to "remove" it. This method joins all the values of the array with a multiplication symbol and then divides by the current value. After that you eval the string to get the numeric result. </p>

<p><em>Note: Additional logic would be needed if 0 is in array</em></p>
    </div>