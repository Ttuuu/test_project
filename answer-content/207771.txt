<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice?s=1%7C1164.7147">Avoid</a> <code>using namespace std;</code>.</p>

<p>Why are you using raw pointers?  Use smart pointers, or (better yet) standard containers like <code>std::vector</code>.  Since <code>vector</code> constructs its elements, much of your initialization code can be eliminated.</p>

<p>Make use of the member initializer list in your constructor.  There's no real difference with fundamental types like <code>int</code>, but with more complicated objects it can be a big help or outright necessity (to initialize a reference).</p>

<pre><code>    Graph(int value): value(value) {
</code></pre>

<p>(That will initialize the member <code>value</code> with the parameter <code>value</code>.)  Then get rid of the <code>this-&gt;value = value</code> line.</p>

<p>Define variables as late as possible, with their first use if possible.  Make use of this in your <code>for</code> statements.</p>

<pre><code>for (int k = 0; k &lt; value; ++k)
</code></pre>

<p>In <code>newEdge</code>, your parameter validation accepts 0 as a valid edge index, but you then subtract one from it for the subscripting, resulting in Undefined Behavior and a possible crash.</p>

<p><code>display</code> and <code>isPath</code> should be const (<code>void display() const</code>.  <code>isPath</code> does not validate its parameters like <code>newEdge</code> does.</p>
    </div>