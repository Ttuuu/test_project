<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Literature</h2>

<p>Since you never worked with a Tree structure before, I recommend reading about tree traversal strategies.</p>

<ul>
<li><a href="https://en.wikipedia.org/wiki/Depth-first_search" rel="nofollow noreferrer">Depth-First</a></li>
<li><a href="https://en.wikipedia.org/wiki/Breadth-first_search" rel="nofollow noreferrer">Breadth-First</a></li>
<li><a href="https://www.geeksforgeeks.org/tree-traversals-inorder-preorder-and-postorder/" rel="nofollow noreferrer">Order (bottom-up, top-down, in order)</a></li>
</ul>

<hr>

<h2>Bug Alert</h2>

<p>If you set the same value as is already set and the value is <code>ITreeNodeAware&lt;T&gt;</code>, it will end up with <code>Node</code> is null, <strong>while it should have the current instance set</strong>. This could be solved by either only setting a value if it differs from the current value, or to swap the order of the <code>treeNodeAware.Node</code> assignments.</p>

<blockquote>
<pre><code>public T Value
{
    get { return _value; }
    set
    {
        var oldValue = _value;
        _value = value;

        //Notify the value about it's node, if the value implements ITreeNodeAware
        var treeNodeAware = _value as ITreeNodeAware&lt;T&gt;;
        if (treeNodeAware != null)
            treeNodeAware.Node = this;

        //Notify the old value about the change of it's node (new node is null)
        treeNodeAware = oldValue as ITreeNodeAware&lt;T&gt;;
        if (treeNodeAware != null)
            treeNodeAware.Node = null;
    }
}
</code></pre>
</blockquote>

<h3>Fix:</h3>

<pre><code>public T Value
{
    get =&gt; _value;
    set
    {
        if (value != _value) 
        {
            UpdateNode(_value, null);
            _value = value;
            UpdateNode(_value, this);
        }
    }
}

private void UpdateNode(T element, TreeNode&lt;T&gt; node)
{
    if (element is ITreeNodeAware&lt;T&gt; treeNodeAware)
    {
        treeNodeAware.Node = node;
    }
}
</code></pre>

<hr>
    </div>