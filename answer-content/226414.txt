<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Seems like a nice implementation! Here are my thoughts,</p>

<ul>
<li><p><code>this</code> is implicit. Consider removing <code>this</code>, i.e. use <code>topPtr</code> instead of <code>this-&gt;topPtr</code>. Similarly, <code>void</code> doesn't need to be used as an argument, consider removing <code>void</code>, i.e. <code>top()</code> instead of <code>top(void)</code>.</p></li>
<li><p>Consider using <code>std::size_t</code> for <code>MAX</code>. Also, consider naming <code>MAX</code> as <code>MAX_SIZE</code> since it is slightly more descriptive. If using <code>std::size_t</code>, make sure not to subtract one from <code>MAX</code> to avoid overflow. Instead, when checking for equality, add one to the other side. </p></li>
<li><p>It might be nicer to use a <code>T*</code> instead of an <code>int</code> for <code>topPtr</code>. <code>nullptr</code> could be used instead of <code>-1</code> initially for <code>topPtr</code>.</p></li>
<li><p>For <code>print</code> consider passing a <code>std::ostream</code> object. This allows for decoupling and one could pass in a <code>std::ostringstream</code> instead of <code>std::cout</code> if desired.</p></li>
<li><p>For <code>top</code> and <code>pop</code>, consider using <code>assert</code> instead <code>if/else</code>. An exception could also be used, but I think <code>assert</code> is a little nicer. To include a message, use something similar <code>assert(!empty() &amp;&amp; "Stack is empty. Can't pop");</code>. See <a href="https://en.cppreference.com/w/cpp/error/assert" rel="nofollow noreferrer">https://en.cppreference.com/w/cpp/error/assert</a>. Maybe add a comment about the requirements of these functions.</p></li>
<li><p>Consider adding documentation for any public function. Include information such as what the function returns, requires, and modifies. For example, <code>top</code> requires there are element in the stack.</p></li>
</ul>
    </div>