<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p><code>double get_variable(const string&amp; op, vector&lt;Variable&gt;&amp; v)</code> -
must return default value (0.0), for example if <code>op</code> is empty. Alternatively, you can show an error message.</p></li>
<li><p><code>double operate(const string&amp; op, istringstream&amp; iss, vector&lt;Variable&gt;&amp; v)</code> - 
Always initialize variables, like this:</p>

<pre><code>double value(0.0); OR
double value = 0.0;
</code></pre>

<p>and you must check this <code>op</code> in vector, if it doesn't exist - show error.</p></li>
<li><p><code>void define_new_var(vector&lt;Variable&gt;&amp; v, istringstream&amp; iss)</code> -
if variable already exists, set new value or show error.</p></li>
<li><p><code>bool is_number(const string&amp; op)</code></p>

<pre><code>int char_to_int = op[0];
</code></pre>

<p>if <code>op</code> is empty.</p></li>
<li><p>For this functions:</p>

<pre><code>double perform_addition(istringstream&amp; iss, vector&lt;Variable&gt;&amp; v);
double perform_subtraction(istringstream&amp; iss, vector&lt;Variable&gt;&amp; v);
double perform_division(istringstream&amp; iss, vector&lt;Variable&gt;&amp; v);
double perform_multiplication(istringstream&amp; iss, vector&lt;Variable&gt;&amp; v);
</code></pre>

<p>Define common function who get left and right.</p>

<p>I think you can define some <code>enum</code>s and functions, like this:</p>

<pre><code>double perform_operator(istringstream&amp; iss, vector&lt;Variable&gt;&amp; v, OperatorType type)
{
    std::string lhs, rhs;
    GetValues(iss, lhs, rhs); // fill them
    switch(type)
    {
        case Minus
        {
            return operate(left, iss, v) - operate(right, iss, v);
        }
        break;
    }
}
</code></pre></li>
</ol>
    </div>