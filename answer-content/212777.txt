<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There're a lot of things you write them better, In my answer I'll write some of them.</p>

<h1><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" rel="nofollow noreferrer">Template Literals</a></h1>

<p>In ES6 you can use template literals in code meaning:</p>

<p>Don't</p>

<pre><code>ing_block = '&lt;div class="ingredients_block"&gt;'+
        '&lt;div class="usedngredient_txt"&gt;Used in:&lt;/div&gt;'+
        used+
        '&lt;/div&gt;';

'&lt;i class="'+name+'"&gt;&lt;/i&gt;'
</code></pre>

<p>Do </p>

<pre><code>ing_block = `&lt;div class="ingredients_block"&gt;
        &lt;div class="usedngredient_txt"&gt;Used in:&lt;/div&gt;
        used&lt;/div&gt;`;

`&lt;i class="${name}"&gt;&lt;/i&gt;`
</code></pre>

<h1><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator" rel="nofollow noreferrer">If Condition and Conditional (ternary) operator</a></h1>

<ol>
<li>Don't compare with <code>undefined</code> simply you can write this <code>if(used_in)</code> instead of this <code>if(used_in != undefined)</code>.</li>
<li>You can use ternary operator.</li>
</ol>

<h1><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" rel="nofollow noreferrer">const and let instead of var</a></h1>

<p>you can use <code>const</code> if your variable won't change through your app, and let if it'll change.</p>

<h1><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" rel="nofollow noreferrer">Destructuring assignment</a></h1>

<p>Simply you can do this:</p>

<pre><code>const {price, type, icon} = item;
</code></pre>

<p>instead of this</p>

<pre><code>var price = item.price;
var type = item.type;
var icon = item.icon;
</code></pre>

<p>You also can iterate through your array using map instead of for loop.</p>

<h1><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys" rel="nofollow noreferrer">Object.keys instead of For in</a></h1>

<p>You can use Object.keys which is more efficient than iterating using for in. <a href="https://codepen.io/dsheiko/details/JdrqXa" rel="nofollow noreferrer">Source</a></p>
    </div>