<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Funny coincidence, I just created the solution for your problem (<a href="https://codereview.stackexchange.com/questions/226191/php-one-time-prepared-statement-execution-function">but in PHP</a>). The common thing here is the one-time use of a prepared statement, the difference is in the query string and arguments, so what you need is a function that accepts a query string, an argument determining what execution function to use (<code>executeQuery()</code> or <code>executeUpdate()</code>) and the parameters for the query:</p>

<pre><code>// note: QueryType is an enum you should define
public static ResultSet query(String sql, QueryType queryType, Object... queryArgs){
    // ...
}
</code></pre>

<p>Include the <code>try-catch</code> blocks in this function too of course, and return <code>null</code> when according to <code>queryType</code> there should be no results.</p>

<p><strong>Note:</strong> I have no experience with database interaction with Java, so if there are only 2 different statement execution functions then you can use a boolean argument instead of the enum <code>QueryType</code>.</p>

<p>Then your code could look like this:</p>

<pre><code>public static boolean checkLogin(String username, String password) {
    String sql = "select * from users where username = ? and password = ? ";
    ResultSet result = query(sql, QueryType.RETURN_RESULT, username, password);
    return result.next(); // true if User exists
}
</code></pre>

<p>A note about your query string: I find it more convenient to use CAPS for keywords and lowercase text for names, it highlights the structure of the query.</p>
    </div>