<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your function checks if an array contains a string that contains your given <code>$needle</code>. No, there's no such function in PHP yet. The <a href="https://www.php.net/manual/en/function.in-array.php" rel="nofollow noreferrer">in_array()</a> function does something else.</p>

<p>You could make your function more efficient if you include the <code>explode()</code> inside the function, like this:</p>

<pre><code>function find_parameters($needle, $parameterStr)
{       
    if (strpos($parameterStr, $needle) !== false) {
        $result = [];
        foreach(explode(";", $parameterStr) as $parameter) {
            if (strpos($parameter, $needle) !== false) {
                $result[] = $parameter;
            }
        }
        return $result;
    } 
    return false;
}
</code></pre>

<p>This function first checks whether the parameter string actually does contain the needle. It can quickly return <code>false</code> when it doesn't. If the needle is present it does what your code does, with the exception that it returns an array. This is done so that it can return multiple results. Suppose your parameter string looks like this:</p>

<pre><code>$params = "colorgroup-a;colorgroup-b;test;abc";
</code></pre>

<p>and you test this:</p>

<pre><code>var_dump(find_parameters("colorgroup", $paramsArr));
</code></pre>

<p>Then it will not return only <code>colorgroup-a</code>, like your function, but it will return an array with <code>colorgroup-a</code> and <code>colorgroup-b</code>.</p>

<p>So this new function is more efficient, when there are no matching parameters, and it is more correct in that it finds all the parameters.</p>

<p>Yes, it is longer, but shortness of code should not be the main aim when writing code. The use of regular expressions is also very popular for these kind of tasks, and it would result in less code. But the engine behind regular expressions is complex, and would make the code a lot less efficient.</p>
    </div>