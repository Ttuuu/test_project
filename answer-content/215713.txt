<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>With the proviso that it will fail unpredictably if mis-used (ex: deleting an index and then accessing it), the implementation seems reasonable for the most part.</p>

<p><strong>size</strong> however, is misleading since it doesn't take removals into account: list size 5 -&gt; add 10 items -&gt; remove 10 items -&gt; list size 15.  You could easily track the correct value in add / remove, so I'd suggest doing that.</p>

<p>Related to that, there's no way to traverse the list, or to see whether a particular index is valid.  For the purposes you're using it, that might not matter, but it does limit the usage.</p>

<p>Adding a method to convert the contents to a gap-less vector, or to a map (key = index) would give a way to do that.  Adding a method to check the validity of a given index is also an option, but at O(n) for each one it's not an efficient way to traverse the contents.</p>

<p>I would definitely suggest removing the implicit (incorrect) conversion to vector though!  Treating a free_list_vector with any elements deleted as a normal vector will blow up as soon as you try to traverse it.</p>
    </div>