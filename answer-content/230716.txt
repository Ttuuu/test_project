<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2><code>memset</code></h2>

<pre><code>for (int i = 0; i &lt; sizeof(data) - 1; i++){
    data[i] = 'a';
}
</code></pre>

<p>shouldn't be needed. Just use <code>memset</code> from <code>string.h</code>, which is indeed available in the kernel.</p>

<h2><code>sizeof</code></h2>

<p>You have this:</p>

<pre><code>int i = 0; i &lt; sizeof(data) - 1; i++
</code></pre>

<p>but also this:</p>

<pre><code>pos + len &lt; sizeof data ? len : sizeof data - pos
</code></pre>

<p>Today I learned that the parens are <a href="https://en.wikipedia.org/wiki/Sizeof" rel="nofollow noreferrer">needed on types and optional on expressions</a>:</p>

<blockquote>
  <p>The operator has a single operand, which is either an expression or a data type cast. A cast is a data type enclosed in parenthesis. </p>
</blockquote>

<p>The only syntax I've ever seen is with parens. You should at least stay internally consistent.</p>

<h2>Buffer sizes</h2>

<p>5000 is a little unusual, especially inside the kernel. Unless there are hidden motivations, consider just making it 1024*4 == 4096.</p>
    </div>