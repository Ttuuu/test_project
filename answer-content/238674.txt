<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I was going to write this as a comment, but I have too much to talk about.  When I first read the question, what was screaming at me is "<strong><em>WHY?!</em></strong>"  Why go through such gymnastics?  Are you intentionally trying to <strong>reinvent-the-wheel</strong>?  If you are, then please tag the question with that tag.</p>

<p>If you are wanting to learn C#, and equally important, .NET, then I would suggest your focus should be on relying upon the framework.</p>

<p>For a simple Americanized string, where each character in the string is its own entity, you could try something like:</p>

<pre><code>public static string ReverseString(string str)
{
    char[] arr2 = str.ToCharArray();
    Array.Reverse(arr2);
    return new string(arr2);
}
</code></pre>

<p>There are also examples here on CR where the reversing is done by only going halfway through the char array.  The endpoints are swapped, and then indices are moved inward.</p>

<p>Note the above only works for some strings.  If your input string contains certain characters from different cultures, these characters are known as surrogate pairs.  You may loosely think of the pair as a composite.  For such things, you do not want to reverse the individual characters because it breaks the surrogate relationship.  Instead, you would use .NET and look into the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.globalization.stringinfo?view=netframework-4.8" rel="nofollow noreferrer">StringInfo</a> class (part of System.Globalization).  The link provided shows how to honor surrogates.</p>
    </div>