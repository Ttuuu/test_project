<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You overwrite inv with the return value of addToInventory</p>

<pre><code>inv = addToInventory(inv, dragonLoot)
</code></pre>

<p>Yet add to inventory does not return anything. 
In order to first get your code to work, just return the inventory:</p>

<pre><code>def addToInventory(inventory, addedItems):
    draft = {}
    for i in addedItems:
        if (i not in draft):
            draft[i]=1
        else:
            draft [i]= draft [i] + 1
    for i in draft:
        if i not in inventory:
            inventory[i]=draft[i]
        else:
            inventory[i] = inventory[i]+draft[i]
    return inventory
</code></pre>

<p>And then lets improve that function using the <a href="https://docs.python.org/2/library/collections.html" rel="nofollow noreferrer">collections</a> library such as:</p>

<pre><code>from collections import Counter

def addToInventory(inv, loot):
    loot_counter = Counter(loot)
    return dict(loot_counter + Counter(inv))
</code></pre>

<p>Further, for the second displayInventory function, you iterate over dict.items(), yet you then try to use the item itself as an index. Instead iterate over dict.keys() and you will be fine: </p>

<pre><code>def displayInventory(inventory):
    print ("Inventory: ")
    total=0
    for i in inventory.keys():
        total+=1
        print (str(inventory[i])+" "+str(i))
    print("Total number of items is"+str(total))
</code></pre>
    </div>