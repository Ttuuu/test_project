<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Handling invalid input</h2>
<p>Instead of returning an array when inputs are invalid, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/throw" rel="nofollow noreferrer">throw exceptions</a> and use <a href="https://www.chaijs.com/api/bdd/#method_throw" rel="nofollow noreferrer"><code>throw</code></a> to detect it in the tests.</p>
<h2>Avoid <code>else</code> when previous blocks have return statements</h2>
<p>The <code>else</code> can be eliminated since the block evaluated when <code>value &lt;= 0</code> has a return statement (or would <code>throw</code> an exception). Additionally, the <code>switch</code> statement can be simplified to a few <code>if</code> statements (for an example see <a href="https://codereview.stackexchange.com/a/211122/120114">this answer</a> to a related question).</p>
<h2>Don't forget to set scopes</h2>
<p>While the code is in a module, it is best to set the scope of variables and functions - e.g. <code>numbers</code> and <code>i</code> in the loop within <code>numbers</code> should be prefixed by the keywords <code>const</code> and <code>let</code>, respectively, to avoid accidental re-assignment/confusion.</p>
<p>In that same vein, the first few lines of the test are setting variables:</p>
<blockquote>
<pre><code>var chai = require('chai');
    expect = chai.expect,
    fizzbuzz = require('../lib/fizzbuzz');
</code></pre>
</blockquote>
<p>Perhaps you meant to add a comma instead of semi-colon after <code>require('chai')</code>? It would be simpler just to have each variable on its own line:</p>
<pre><code>const chai = require('chai');
const expect = chai.expect;
const fizzbuzz = require('../lib/fizzbuzz');
</code></pre>
<p>Actually instead of importing <code>chai</code> just to use <code>expect</code> from it on a separate line, use object-destructuring:</p>
<pre><code>const { expect } = require('chai');
const fizzbuzz = require('../lib/fizzbuzz');
</code></pre>
    </div>