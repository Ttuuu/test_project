<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From your code:</p>

<blockquote>
<pre><code>static int[] performInsertionSort(int[] inputarray)
{
    for (int i = 0; i &lt; inputarray.Length-1; i++)
    {
        int j = i+1;

       while (j&gt;0)
        {
            if (inputarray[j-1] &gt; inputarray[j])
            {
                int temp = inputarray[j-1];
                inputarray[j - 1] = inputarray[j];
                inputarray[j] = temp;

           }
            j--;
        }
    }
    return inputarray;
}
</code></pre>
</blockquote>

<p>I can see a couple of things that I would do differently.</p>

<p>Instead of using a while on the inside I would probably use another <code>for</code> loop because it would look a little bit cleaner. I would also change the name of <code>inputarray</code> to <code>inputArray</code> because of common naming schemes.  </p>

<p>Personally I think for something this simple <code>i</code> and <code>j</code> are fine, if the operations become more complex and you aren't just sorting random numbers, then you would have something meaningful that you could name them, so I would just keep <code>i</code> and <code>j</code>.</p>

<p>Here is what my version would look like:</p>

<pre><code>static int[] performInsertionSort(int[] inputArray)
{
    for (int i = 0; i &lt; inputArray.Length-1; i++)
    {
        for (int j = i + 1; j &gt; 0; j--)
        {
            if (inputArray[j-1] &gt; inputArray[j])
            {
                int temp = inputArray[j-1];
                inputArray[j-1] = inputArray[j];
                inputArray[j] = temp;
            }
        }
    }
    return inputArray;
}
</code></pre>

<hr>

<p>I wanted to test this to make sure that it worked correctly, here is my code with the output programmed into the application.</p>

<p><a href="https://codereview.stackexchange.com/q/60156/18427">Insertion sort revised with output to console</a></p>
    </div>