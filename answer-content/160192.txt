<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In terms of efficiency, I like the code.</p>

<p>I'd just fix a few stylistic issues:</p>

<ul>
<li><p>Naming: <code>l</code>, <code>a</code>, <code>s</code> don't say anything about what the variable means. Also, you named your function <code>palindrome</code>, but that's returning a boolean, so I'd name it <code>is_palindrome</code>. The <code>i</code> in the <code>substring</code> function is a bit puzzling to me: you have a variable named <code>end</code>, why not call the other one <code>start</code>?</p></li>
<li><p>As @kyrill mentioned, you should probably change comments above the functions to docstrings.</p></li>
<li><p>The comment <code>Declare local variable for the length of s.</code> is useless.</p></li>
<li><p>I'd instead add another comment explaining why it works. If you have a function simply called <code>substrings</code> I expect it to return the substrings. This code only works because it returns the substrings starting from the longest to the shortest. I'd at least change the comment <code>descending order</code> (which may mean for example lexicographical order or alphabetical order) to <code>from longest to shortest</code>. Better be explicit.</p></li>
<li><p>I know, it's a bit long, but since you're using a generator, I'd rename the function <code>substrings</code> to <code>get_next_substring</code>.</p></li>
<li><p>As @zondo mentioned <code>Question2</code> is not a PEP8 compliant name, but I'm not sure if the automatic grader will need it to be called like that.</p></li>
</ul>
    </div>