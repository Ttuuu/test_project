<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Imo, the <code>Date</code> class is a red herring.  This problem is better modeled as integers.  A day has 48 half hour intervals.  Let the numbers 0 through 47 be your model.  Then you need only create:</p>

<ol>
<li>A function to convert from time format to an integer</li>
<li>From an integer back to a time format</li>
<li>A utility that takes two integer endpoints and returns a range</li>
</ol>

<p>These are all essentially one-liners:</p>

<pre><code>var toInt  = time =&gt; ((h,m) =&gt; h*2 + m/30)(...time.split(':').map(parseFloat)),
    toTime = int =&gt; [Math.floor(int/2), int%2 ? '30' : '00'].join(':'),
    range  = (from, to) =&gt; Array(to-from+1).fill().map((_,i) =&gt; from + i),
    eachHalfHour = (t1, t2) =&gt; range(...[t1, t2].map(toInt)).map(toTime);

console.log(eachHalfHour('12:00', '15:30'))
</code></pre>
    </div>