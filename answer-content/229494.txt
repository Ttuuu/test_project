<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Never do this:</h3>

<pre class="lang-py prettyprint-override"><code>from tkinter import *
</code></pre>

<p>Instead use:</p>

<pre class="lang-py prettyprint-override"><code>from tkinter import Every, Class, I, Will, Ever, Need
</code></pre>

<p>Or if your really must:</p>

<pre class="lang-py prettyprint-override"><code>import tkinter as tk
# Or:
import tkinter
</code></pre>

<p>or similar. <code>import *</code> just dumps all module-level variables in your global space, which makes it a lot harder to read your code.</p>

<h3>GUI Organization</h3>

<p>I'm not 100% on how much this applies to Tkinter, but for PyQt we'd put as much of the initialization of GUI elements into extensions of the element's classes. So any child widget of X would be defined by and inside a method of X. </p>

<p>Otherwise, you could put it all in a function named main() and then call that function inside a <code>if __name__ == "__main__":</code> <a href="https://stackoverflow.com/questions/419163/what-does-if-name-main-do">guard</a>.</p>
    </div>