<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your solution is sane, and it can easily be extended to a generic extension method. <code>Last()</code> is the best you can do. It would have been better if <code>context.ComponentRegistry.Registrations</code> somehow stored some registration meta info like <code>DateTime</code> of registration. There is a <em>meta</em> dictionary foreseen, but it is unclear what is stored inside.</p>

<pre><code>public static class AutofacExtension
{
    public static void RegisterComposite&lt;T, TComposite&gt;(
        this ContainerBuilder builder) where TComposite : class
    {
        if (builder == null) throw new ArgumentNullException(nameof(builder));

        builder.Register(context =&gt;
        {
            var services =
                from r in context.ComponentRegistry.Registrations
                from s in r.Services.OfType&lt;KeyedService&gt;()
                where typeof(T).IsAssignableFrom(s.ServiceType)
                group (r, s) by s.ServiceKey into g
                let last = g.Last()
                select last.r.Activator.ActivateInstance(
                    context, Enumerable.Empty&lt;Parameter&gt;());

            return Activator.CreateInstance(
                typeof(TComposite), services.Cast&lt;IResourceProvider&gt;());
        });
    }
}
</code></pre>

<p>And registered..</p>

<pre><code>builder.RegisterComposite&lt;IResourceProvider, CompositeProvider&gt;();
</code></pre>

<p>Instead of..</p>

<blockquote>
<pre><code>builder.Register(context =&gt;
{
    var services =
        from r in context.ComponentRegistry.Registrations
        from s in r.Services.OfType&lt;KeyedService&gt;()
        where typeof(IResourceProvider).IsAssignableFrom(s.ServiceType)
        group (r, s) by s.ServiceKey into g
        let last = g.Last()
        select last.r.Activator.ActivateInstance(context, Enumerable.Empty&lt;Parameter&gt;());

    return new CompositeProvider(services.Cast&lt;IResourceProvider&gt;());
});
</code></pre>
</blockquote>
    </div>