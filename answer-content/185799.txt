<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Thanks for sharing your code,</p>

<p>instead of using <code>size</code>, you should implement <code>__len__</code>, this way you can use <code>len(my_stack)</code>.</p>

<pre><code>def __len__(self):
    return len(self.item)
</code></pre>

<p>I think a method that prints an element from a collection is a bit unusual. What I would expect is a method called <code>peek</code> that returns the top element but <strong>doesn't remove it</strong>. By just printing it you're limiting its use to console only applications, and the only way to retrieve the element is to remove it!</p>

<p>You should consider adding an error message to go with your <code>IndexError</code>, and maybe reconsider the exception type, an <code>IndexError</code> sounds like you're accessing an index, but you're not maybe a custom <code>StackEmpty</code> exception would be more suitable.</p>

<p>I think <code>self.item</code> should be <code>self.items</code> (plural) as it will be representing zero or more <strong>items</strong>.</p>

<p>Bonus Stuff</p>

<p>you could implement the <code>__iter__</code> method. This would allow the caller to do something like</p>

<pre><code>for element in my_stack:
    do_stuff()
</code></pre>

<p>You code is also missing docstrings, you could optionally add those to document your code.</p>

<p>You could implement the <code>__str__</code> method to provide a nice string representation so you can simply say</p>

<p><code>print my_stack</code></p>

<p>Hopefully you found this helpful, keep it up!</p>
    </div>