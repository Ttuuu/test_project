<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here are a few suggestions on how to simplify and format your code.</p>
<h3>Break directly from the loop</h3>
<p>In your loop construct there really is no point in keeping track of <code>exit</code>.  In addition <code>exit</code> is used by Python, and it is better to not reuse these things becuase it can be confusing.  Instead something like:</p>
<pre><code>while True:
    if input(msg).lower() == 'exit':
        break
</code></pre>
<p>In addition this shows how you really only need one input statement.  Instead the message for input can be set as needed.</p>
<h3>Avoid extra parens</h3>
<p>In all three of these cases you have an extra set of outer parens.</p>
<pre><code>if (enter=="exit"):
while(enter=="" or not exit):
enter=(input("Press Enter to Roll Again! \n").lower())
</code></pre>
<h3>Use descriptive variable names</h3>
<p>As an example you have a variable named <code>count</code>, that I think would be more descriptive as <code>roll_number</code>.  Additionally <code>dice_number</code> might be more descriptive as <code>dice_value</code>.</p>
<h3>Use the programming language to its fullest.</h3>
<p>Python has a bunch of nifty operators that can make code cleaner.</p>
<pre><code>count = count + 1
  
</code></pre>
<p>Can be written as:</p>
<pre><code>count += 1
  
</code></pre>
<p>which makes it more explicit that the variable is being incremented, and not just assigned.</p>
<h3>PEP8</h3>
<p>You should consider formatting your code in accordance with <a href="https://www.python.org/dev/peps/pep-0008/" rel="noreferrer">pep8</a>.  This is important when sharing code, as the consistent style makes it much easier for other programmers to read your code.  There are various tools available to assist in making the code pep8 compliant.  I use the <a href="https://www.jetbrains.com/pycharm/" rel="noreferrer">PyCharm</a> IDE which will show pep8 violations right in the editor.</p>
<p>One PEP8 note that I will highlight is to not use what are relatively obvious comments.  With clean code and descriptive variable names the code will often be as descriptive as the comments.</p>
<h3>Reconstructed code:</h3>
<pre><code>""" This Program is Dice Simulator that produce an Output from 1-6
everytime the User presses Enter. In order to close the Program,
the User has to type "Exit" into the console.
"""

import random

print(" Hi! Welcome to Dicey!")
print("""

   .-------.    _______
  /   o   /|   /\\      \\
 /_______/o|  /o \\  o   \\
 | o     | | /   o\\______\\
 |   o   |o/ \\o   /o     /
 |     o |/   \\ o/  o   /
 '-------'     \\/____o_/

  """)

roll_number = 0
msg = "Press Enter to Roll (or) Type 'Exit' to Close.\n\n"
while True:
    if input(msg).lower() == 'exit':
        break

    roll_number += 1
    dice_value = random.randint(1, 6)
    print(f"{roll_number}&gt; You got a {dice_value}\n")

    msg = "Press Enter to Roll Again! \n"
</code></pre>
    </div>