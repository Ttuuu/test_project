<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could create a single private method and decide there what overload to call based on the presence of the arguments</p>

<pre><code>public static Texture2D DrawAnnulus(this Texture2D texture, 
            Func&lt;int, int, Color?&gt; predicate, 
            AnnulusConfig annulusConfig)
    =&gt; texture.DoDrawAnnulus(predicate, anulusConfig, null, null);

    public static Texture2D DrawAnnulus(this Texture2D texture
            ,SectorList list
            ,AnnulusConfig annulusConfig)
    =&gt; texture.DoDrawAnnulus(null, anulusConfig, list, null);    

    public static Texture2D DrawAnnulus(this Texture2D texture, 
            Color? color, 
            AnnulusConfig annulusConfig)
    =&gt; texture.DoDrawAnnulus(null, anulusConfig, null, color);

private static Texture2D DoDrawAnnulus(this Texture2D texture, 
                Func&lt;int, int, Color?&gt; predicate, 
                AnnulusConfig annulusConfig, 
                SectorList list, 
                Color? color)
    {
        InitTexture(ref texture, annulusConfig.offset.x + annulusConfig.radius * 2, annulusConfig.offset.y + annulusConfig.radius * 2);

        if (list != null)
        {
          Polar(texture, annulusConfig.offset.x, annulusConfig.offset.y, annulusConfig.radius, (xx, yy) =&gt; Annulus(annulusConfig.offset.x, annulusConfig.offset.y, xx, yy, annulusConfig.radius2, list));
        }
        else if (predicate != null)
        {
           Polar(texture, annulusConfig.offset.x, annulusConfig.offset.y, annulusConfig.radius, predicate);
        }
        else
        {
            Polar(texture, annulusConfig.offset.x, annulusConfig.offset.y, annulusConfig.radius, (xx, yy) =&gt; Annulus(annulusConfig.offset.x, annulusConfig.offset.y, xx, yy, annulusConfig.radius2, color));
        }

        if (annulusConfig.apply)
            texture.Apply();

        return texture;
    }
</code></pre>
    </div>