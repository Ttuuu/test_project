<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>What's the purpose of your multiples implements iteration?</h2>

<p>If it's for learning, the previous post was a better solution, since he only depend on C++ standard features (IMHO).</p>

<ul>
<li>If it's for using in real code, why not using <a href="https://howardhinnant.github.io/date/date.html" rel="nofollow noreferrer">this class</a> who led to the voted one into the C++20 working draft.</li>
</ul>

<h1>Now, about your code:</h1>

<p>Don't use <code>using namespace std;</code> until you don't understand it. Don't take bad habit from the beginning
- In C++ you don't have to prefix variable declaration with <code>struct</code>;
- You use a <code>int</code> to store the number of day from 1rst january (and all other count). Be care that this number of day can't be negative. Using an <code>unsigned int</code> would be more logic.
- When your constants never ever change (<code>secPerDay</code>), you can declare it <code>static const</code>.
- Don't use <code>std::endl</code> until you don't want to flush the stream. If you just want a <code>newline</code>, use <code>'\n'</code>.
- Don't declare local variable in <code>ALL_CAPS</code>
- You writed <code>date = gmtime(&amp;time);</code> twice, I guess it's a "typo". You an even delete the second and place it directly as an argument to <code>strftime</code>.
- Declare your variables in the closest scope possible
- Don't hardcode the counts of day from 1970. Use standard C++ (if possible) or C function.
- Here you presume that days must be counted until the current year. Putting a date in 2nd parameters would be a good idea.</p>

<hr>

<h1>Version without hard-coded calculations</h1>

<p>There is many other things we can say, but there is a way, in C++, using this C lib, to do what you want, using same header than you:</p>

<pre><code>std::string convertDayOfYear(unsigned int day_number, unsigned int year = 1900)
{
    auto t = time(nullptr);
    auto info = localtime(&amp;t);

    if (!year || year &lt; 1900) {
        year = info-&gt;tm_year + 1900;
    }
    info-&gt;tm_sec = 0;
    info-&gt;tm_min = 0;
    info-&gt;tm_hour = 0;
    info-&gt;tm_mday = day_number;
    info-&gt;tm_mon = 0;
    info-&gt;tm_wday = 0;
    info-&gt;tm_yday = 0;
    info-&gt;tm_year = year - 1900;
    info-&gt;tm_isdst = 0;

    mktime (info);

    char output[26];
    strftime(output, 26, "%B %d", info);
    return {output};
}  
</code></pre>
    </div>