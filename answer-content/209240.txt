<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This answer doesn't particularly address your questions, but it does talk about some generic C++ stuff. To make this clearer, I'm going to divide it between 'Feedback' and 'Opinion'.</p>

<h1>Feedback</h1>

<p>When passing <code>const QString interface</code>, pass it as a reference. Nearly all class instances should be passed as references.</p>

<pre><code>#include "mycanbus_socketcan.h"
#include &lt;QCoreApplication&gt;


bool result;
SocketCanState state;
// Shutting down, reconfiguring, bringing up, state check
result = interfaceDown(interface);

state = getState(interface);
</code></pre>

<p>should simply be</p>

<pre><code>bool result = interfaceDown(interface);
SocketCanState state = getState(interface);
</code></pre>

<p>It's not (old) C, so initialize and declare things where they're used, not at the beginning of the function.</p>

<pre><code>if (state == SocketCanState::RequestFailed){
    qCWarning(lcSocketCan) &lt;&lt; QCoreApplication::translate("","Could not get the current state of interface %1, aborting.").arg(interface);
    return false;
}else
{
    return true;
}
</code></pre>

<p>The <code>else</code> here is not needed. Simply return true, because the previous block will have already returned false. This happens elsewhere in your code as well.</p>

<h1>Opinion</h1>

<pre><code>#ifndef MYCANBUS_SOCKETCAN_H
</code></pre>

<p>All modern C++ compilers support <code>#pragma once</code>. I prefer to use it. You can weigh the pros and cons.</p>

<p>In my opinion, system header includes should be done before user includes. C++ is order-sensitive when it comes to includes.</p>
    </div>