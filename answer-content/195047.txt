<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Addressing Your Questions</h2>
<blockquote>
<p>Is my usage of fetch-API and Promises correct and done in a good way?</p>
</blockquote>
<p>Yes it seems fine. The <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch" rel="nofollow noreferrer">Fetch API</a> is supported by all major browsers but not IE<sup><a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Browser_compatibility" rel="nofollow noreferrer">1</a></sup> but some <a href="https://codereview.stackexchange.com/questions/178156/comment-list-using-reactjs/178158#comment338287_178158">argue that it doesn't really have a simple way to cancel requests</a>. If there arises a need to abort requests, then other libraries like <a href="https://github.com/visionmedia/superagent" rel="nofollow noreferrer">SuperAgent</a> or reqwest could be used.</p>
<blockquote>
<p>Is there are better solution then deleting the unnecessary sub-object?</p>
</blockquote>
<p>Obviously there are other ways to handle setting the values within the <em>emotion</em> property on <code>faceAttributes</code>, but those might likely require more lines. One could also conditionally display list items (e.g. add <code>if (typeof facesAttributes[key] !== "object") {</code> before the line that pushes strings into <code>listItems</code>). If there was a way to filter with a callback when calling <code>Object.extend()</code> that would be an advantage here but unfortunately it doesn't appear that is the case.</p>
<h1>Other review points</h1>
<h2>Feedback</h2>
<p>The code looks quite succint. There are two DOM lookups at the start but then one DOM lookup in the click handler so that could be cached in a variable.</p>
<h2>Suggestions</h2>
<h3><code>var</code> vs <code>let</code>/<code>const</code></h3>
<p>Perhaps you have already learned more about <code>let</code> and <code>const</code> since posting this question but many es-6 developers would prefer using <code>const</code> for values that don't change (e.g. <code>imgUrl</code>, <code>initObject</code>, etc.)</p>
<h3>Template</h3>
<p>One could also utilize a <a href="https://www.codereadability.com/constructing-html-with-templates/#movingthehtmloutofthejavascriptfile" rel="nofollow noreferrer">script template</a> to display the list items, though that may not be desirable here.</p>
<h3>Invalid HTML when Error occurs</h3>
<p>This line in the promise catch:</p>
<blockquote>
<pre><code>attributesList.innerHTML = 'Have you entered a valid image URL?';
</code></pre>
</blockquote>
<p>Sets the inner HTML of the unordered list tag to a text string. That is technically unpermitted content for <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul" rel="nofollow noreferrer">an unordered list</a>. Perhaps a better solution would be to have a separate element for the error message.</p>
<h3>P.S.</h3>
<p>Here is the output from that AJAX call using <a href="https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Tesla3.jpg/220px-Tesla3.jpg" rel="nofollow noreferrer">that image of Tesla</a>, so you could fake it now that the key is invalid:</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const output = [{"faceId":"950c26ae-70f0-4365-8279-fcd987f56e70","faceRectangle":{"top":75,"left":32,"width":117,"height":117},"faceAttributes":{"gender":"male","age":37.0,"emotion":{"anger":0.0,"contempt":0.0,"disgust":0.0,"fear":0.0,"happiness":0.007,"neutral":0.992,"sadness":0.0,"surprise":0.0}}}];
const p1 = new Promise(function(resolve, reject) {
  setTimeout(resolve, 100, output);
  });
p1.then(console.log);</code></pre>
</div>
</div>

    </div>