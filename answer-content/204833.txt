<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In my opinion, you should go for number 1 (with one small change). </p>

<p><strong>Reasons for choosing this one:</strong></p>

<ol>
<li>Easy to modify  - you can add new <code>FromX</code> method</li>
<li>Clear - it states exactly what do you calculate </li>
<li>Doesn't require explanation beforehand to do some checking by consumer (as in number 2)</li>
</ol>

<p><strong>Drawback:</strong></p>

<p>(big one) It might disrupt testing, mocking a static method is a nightmare (unless you can afford <a href="https://blogs.msdn.microsoft.com/kristol/2010/03/07/unit-testing-with-microsoft-moles/" rel="nofollow noreferrer">moles</a>). </p>

<p>Taking this all into account, I'd <s>do a little bit of overengeneering and</s> create a factory<s>(-ish)</s> class to build you a TaxedPrice object. For example:</p>

<pre><code>public class TaxedPriceFactory: ITaxedPriceFactory {
    public TaxedPrice CreateFromNet(decimal netAmount, decimal taxRate) { 
    //body
    }

    public TaxedPrice CreateFromGross(decimal grossAmount, decimal taxRate){ 
    // body
    }
}
</code></pre>

<p>This should have all three of advantages I mentioned earlier and it is easy to use in tests now.</p>

<p>Addendum:
Consider making your <code>TaxedPrice</code> a <a href="https://stackoverflow.com/a/6063546/3809977">immutable struct</a> instead of a class with two read-only properties.</p>

<p>EDIT: class and method names changed as suggested by @t3chb0t</p>
    </div>