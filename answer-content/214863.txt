<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In general, building a list using a loop of the form</p>

<blockquote>
<pre><code>some_list = []
for …:
    some_list.append(…)
</code></pre>
</blockquote>

<p>… would be better written using a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a>.</p>

<p>Each interval always has two elements: a start time and an end time.  These two-element lists would be better represented as <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="noreferrer">tuples</a> instead of lists.  (Tuples have a connotation that they have a fixed length, whereas lists can grow to arbitrary lengths.)</p>

<p>Finally, I'd package the code into a function.</p>

<pre><code>def intervals(parts, duration):
    part_duration = duration / parts
    return [(i * part_duration, (i + 1) * part_duration) for i in range(parts)]
</code></pre>
    </div>