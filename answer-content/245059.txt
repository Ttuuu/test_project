<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Avoid globals. <code>consecutivo</code> is particularly confusing. It is too easy to miss the fact that it is reset to 0 at each iteration. Always prefer returning a value:</p>
<pre><code>int suma_elementos(int elemento)
{
    int proporcion = n;
    int consecutivo = 0;
    while (proporcion &gt;= elemento)
    {
        proporcion--;
        consecutivo++;
    }
    return consecutivo;
}
</code></pre>
<p>and use it in your loop as</p>
<pre><code>    int consecutivo = suma_elementos(consecutivos[i]);
</code></pre>
</li>
<li><p>Now it is obvious that <code>suma_elementos</code> does not really need to loop. You have an invariant <code>proporcion + consecutivo == n</code>. At the end of the last iteration you also have <code>proporcion == elemento</code>, which means that <code>consecutivo = n - elemento</code>. In other words,</p>
<pre><code>int suma_elementos(int elemento)
{
    return n - elemento;
}
</code></pre>
</li>
<li><p>Now I would rather not bother to have <code>suma_elementos</code> at all (besides, with my poor Spanish I have an impression that the name is rather misleading). The loop would become</p>
<pre><code>    for (int j = 0; j &lt; n - consecutivos[i]; j++)
</code></pre>
<p>Honestly, it is much easier to understand.</p>
</li>
<li><p><code>final = 99999999;</code> is very fragile. Consider a ramp-up loop:</p>
<pre><code>  final = 0;
  for (int j = 0; j &lt; consecutivos[i]; j++) {
      total += elementos[j];
  }
</code></pre>
</li>
<li><p>Your code complexity is <span class="math-container">\$O(n*k)\$</span> (<code>k</code> being a width of the window). Notice that after the ramp-up you don't need to recompute the sums of <code>k</code> elements: as the window shifts, one element enters, another leaves:</p>
<pre><code>  final = total;
  for (int leave = 0, enter = base[i]; enter &lt; n; leave++, enter++) {
      total += elementos[enter] - elementos[leave];
      if (total &lt; final) {
          final = total;
      }
  }
</code></pre>
<p>obtaining <span class="math-container">\$O(n + k)\$</span> complexity.</p>
</li>
</ul>
    </div>