<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Global nomenclature</h2>
<p><code>urlHalf</code> should be <code>URL_HALF</code>. That said, a better name would be <code>DOMAIN</code>, since that's what that string actually is.</p>
<p>Further, after declaring this you don't use it correctly; these:</p>
<pre><code>base_url = "https://codingbat.com"
login_url = "https://codingbat.com/login"
java_url = "https://codingbat.com/java/"
</code></pre>
<p>could be</p>
<pre><code>BASE_URL = 'https://' + DOMAIN
LOGIN_URL = BASE_URL = '/login'
JAVA_URL = BASE_URL + '/java'
</code></pre>
<h2>Input</h2>
<pre><code>print("what is your email")
inputOne = input("&gt;")
print("password")
inputTwo = input("&gt;")
</code></pre>
<p>should not occur at global scope; it should occur in a function. Also, the use of <code>input</code> for passwords is insecure; use <code>getpass</code> instead.</p>
<h2>Return parens</h2>
<p>These parens:</p>
<pre><code>return(href_array)
</code></pre>
<p>are redundant.</p>
<h2>Generator</h2>
<pre><code>link_array = []
for directory in directories:
    # ...
    link_array.append(links)
return(link_array)
</code></pre>
<p>can simply be</p>
<pre><code>for directory in directories:
    # ...
    yield links
</code></pre>
<p>or, if you want a "flattened" output that does not have nested lists, use <code>yield from links</code>.</p>
<h2>File extensions</h2>
<p>Does this file:</p>
<pre><code>f = open('answers/answers.java', 'w')
</code></pre>
<p>actually receive Java code? It seems not, in which case - use just <code>.txt</code>.</p>
    </div>