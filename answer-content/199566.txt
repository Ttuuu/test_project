<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Firstly, Using <code>colorindex</code> might cause issues on different systems. Instead, use the <a href="http://answers.microsoft.com/en-us/office/forum/office_2007-customize/color-versus-colorindex/3e913d63-2832-402c-bbb9-c457e1ad1d17" rel="nofollow noreferrer">RGB()</a> method.</p>

<p><s>
I don't quite understand the use of <code>Union</code> - why do you need it? Just iterate from the bottom upwards and delete as you go -</s></p>

<pre><code>For rowNumber = lastRow To 2 Step -1
    If Sheet1.Cells(rowNumber, 1).Interior.Color = RGB(255, 255, 255) Then Sheet1.rowNumber.EntireRow.Delete Shift:=xlShiftUp
Next
</code></pre>

<h2></h2>

<p>It's good practice to indent <em>all of your code</em> that way <code>Labels</code> will stick out as obvious.</p>

<h3>Variables</h3>

<p>Always turn on <code>Option Explicit</code>. You can have it automatically by going to Tools -&gt; Options in the VBE and checking the <strong>Require Variable Declaration</strong> option. This way if you have any variables not defined, the compiler will let you know.</p>

<p>When you don't define your variable, VBA will declare it as a <em>Variant</em> type that can hold any type of data. While this may be more flexible, it adds processing time to your macro as VBA decides or tests for the type. Additionally, since a Variant can be any type of data, you may miss out on valuable troubleshooting information on <em>Type Mismatch</em>. You didn't declare <code>spath1</code> or <code>spath2</code>.</p>

<p><em>Variable names</em> - give your variables meaningful names and use <a href="https://msdn.microsoft.com/en-us/library/1s46s4ew(v=vs.140).aspx" rel="nofollow noreferrer">Standard VBA naming conventions</a> have <code>camelCase</code> for local variables and <code>PascalCase</code> for other variables and names.</p>

<p>So <code>DeleteRange</code> should be <code>deleteRange</code> and <code>lastrow1</code> would be <code>lastRow1</code>.</p>

<p>But you have numbers in your variables names - this is a clue that your names could be better. Ask yourself - what is lastrow1 and lastrow2? I mean <code>lastrow1</code> is the last row on <code>ws2</code> and <code>lastrow2</code> is the last row on <code>ws1</code> - that's incredibly confusing, don't you think? Why not <code>stockLastRow</code> and <code>orderLastRow</code> or something?</p>

<p>Worksheets have a <code>CodeName</code> property - View Properties window (<kbd>F4</kbd>) and the <code>(Name)</code> field (the one at the top) can be used as the worksheet name. This way you can avoid <code>Sheets("mySheet")</code> and instead just use <code>mySheet</code>.</p>

<p>You have two paths, those seem like they would not change, so you can make them constants:</p>

<pre><code>Const PATH_TO_REPLENISH As String = "PATH\TO\FILE"
</code></pre>

<p>You also have sheets set to different books, but no indication in the variables that that is the case.</p>

<hr>

<h3>Copy and paste?</h3>

<p>Be sure to avoid things like <code>.Select</code> - it just slows the code down by needing to fiddle with the spreadsheet while doing everything else behind the scenes. There's a good question on StackOverflow <a href="http://stackoverflow.com/questions/10714251/how-to-avoid-using-select-in-excel-vba-macros">addressing this</a>. You copy and paste because you need the formats, right? You can figure out a better way to do that, I think.</p>

<p>Maybe you look at the interior colors before you copy, only copying the values you need. But do you need the colors on the final product? You have an index you created and you can copy those back at the end, or you can create a second array of those values. Maybe the colors don't matter once you sort out what you need? Then that's an entire process you can eliminate!</p>
    </div>