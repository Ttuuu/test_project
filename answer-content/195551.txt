<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Do not</strong> use <code>public</code> fields. Public fields are direct way to unexpected behavior of your application. Use properties instead of them:</p>

<pre><code>    private readonly string name;
    public string Name
    {
        get { return name; }
    }
</code></pre>

<p><strong>Use</strong> <code>readonly</code> for fields. When a field declaration includes a readonly modifier, assignments to the fields introduced by the declaration can only occur as part of the declaration or in a constructor in the same class.</p>

<p><strong>Do not</strong> throw from System.ApplicationException. Jeffery Richter in Framework Design Guidelines said:</p>

<blockquote>
  <p>System.ApplicationException is a class that should not be part of the .NET Framework. The original idea was that classes derived from SystemException would indicate exceptions thrown from the CLR (or system) itself, whereas non-CLR exceptions would be derived from ApplicationException. However, a lot of exception classes didn't follow this pattern. For example, TargetInvocationException (which is thrown by the CLR) is derived from ApplicationException. So, the ApplicationException class lost all meaning. The reason to derive from this base class is to allow some code higher up the call stack to catch the base class. It was no longer possible to catch all application exceptions.</p>
</blockquote>

<p><strong>Use</strong> predefined .NET exception types, for example:</p>

<pre><code>    if(transferAmount &lt;= 0)
    {
        throw new ArgumentException("transfer amount must be positive");
    }
</code></pre>

<p>Best practices for exceptions is <a href="https://docs.microsoft.com/en-us/dotnet/standard/exceptions/best-practices-for-exceptions" rel="nofollow noreferrer">Here</a>.</p>

<p>Will never go through <code>else if</code> statement:</p>

<pre><code>    if(transferAmount &lt;= 0)
    {
        throw new ApplicationException("transfer amount must be positive");
    }
    else if (transferAmount == 0)
    {
        throw new ApplicationException("invalid transfer amount");
    }
</code></pre>
    </div>