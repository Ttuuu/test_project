<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd like to point out, that it's unnecessary to create a new instance of <code>EmptyStack</code> every time you need an empty stack. A single static instance can be used. Additionally <code>StackFactory</code> can be avoided by having a static factory method in <code>EmptyStack</code>.</p>

<pre><code>public class EmptyStack&lt;E&gt; implements Stack&lt;E&gt; {

    private static final Stack&lt;?&gt; INSTANCE = new EmptyStack&lt;&gt;();

    @SuppressWarnings("unchecked")
    public static &lt;X&gt; Stack&lt;X&gt; instance() {
        return (Stack&lt;X&gt;) INSTANCE;
    }

    private EmptyStack() {}

    // ...

}
</code></pre>

<p>For a nicer API, I'd add a static <code>empty()</code> method to the <code>Stack</code> interface:</p>

<pre><code>public interface Stack&lt;E&gt; {

    public static &lt;X&gt; Stack&lt;X&gt; empty() {
     return EmptyStack.instance();
    }

    // ...
}
</code></pre>
    </div>