<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>#define TEST_TYPE 3
</code></pre>

<p>It would be more informative to represent this as an <code>enum</code>, with meaningfully named entries for your four test types.</p>

<pre><code>/* Set to 1 to print all pre-sort permutations */
#define VERBOSE 0
</code></pre>

<p>No reason not to represent this as an actual boolean using <code>&lt;stdbool.h&gt;</code>.</p>

<p>Since it seems like this is the only translation unit in your project, you should set all of your functions to be <code>static</code>.</p>

<p>Don't pre-declare your variables at the beginning of a function; this hasn't been needed for about 20 years. e.g. rewrite your <code>main</code> loop as:</p>

<pre><code>for (size_t len = 0; len &lt;= MAXARRAY; len++)
</code></pre>

<p>This <em>especially</em> applies to functions like <code>run_tests</code>, with a big pile of variables at the beginning.</p>

<p>In <code>run_big_test</code>, you should be <code>free</code>ing <code>to_sort</code> and <code>sorted</code> after you're done with them.</p>

<p>This:</p>

<pre><code>i = n - 2;
while (i &gt;= 0 &amp;&amp; perm[i] &gt; perm[i+1])
    --i;
</code></pre>

<p>is better represented as a <code>for</code> loop:</p>

<pre><code>for (int i = n-2; i &gt;= 0; i--) 
    if (perm[i] &lt;= perm[i+1])
        break;
</code></pre>

<p>I suggest that you factor out your XOR swap into a function. The compiler will be smart enough to inline it.</p>
    </div>