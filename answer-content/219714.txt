<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The comment in <code>add_vertex</code> is confusing and at contradicts what the code does.  If <code>vertex</code> already exists in <code>_graph</code>, the existing vertex will be replaced with an empty one, then the size increased (causing the internal <code>_size</code> to be incorrect).  Depending on what behavior you want when adding a vertex that already exists, you can use <code>_graph.try_emplace</code>, <code>_graph.insert_or_assign</code>, or just <code>_graph[vertex]</code> (to add a new entry if it does not exist, and do nothing if it does).</p>

<p>There is no benefit to maintaining a distinct <code>_size</code> variable.  As shown above, it can get out of sync with the actual size.  It is better to just call <code>_graph.size()</code> whenever the user calls <code>Graph::size</code>.</p>

<p>In <code>remove_vertex</code>, you should check the return value from <code>_graph.erase</code> to see if something was actually removed.  If nothing was removed there's no benefit to running any of the other code in the function.  Also, the <code>if (it == v.second.end())</code> check should <em>not</em> return, as you avoid scanning the rest of the vertexes in <code>_graph</code> to remove edges that connect to the vertex that was just removed.  Alternatively, you can just replace that whole loop body with a call to either <code>v.second.remove</code> or <code>v.second.remove_if</code>.  (The same change can be made in <code>remove_edge</code>.)</p>
    </div>