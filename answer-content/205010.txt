<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I gave this a very quick review while still on my first cup of coffee.  The answer is not very detailed, but then there were a lot of things I caught even with a quick scan.</p>

<p>The public fields at the top of the <code>RockPaperScissor</code> class should either be <code>private fields</code> or <code>public properties</code>.  The one exception to public fields are constants. Note a static readonly value cannot be a constant, so if you have any of those they should be properties (be it public or private).</p>

<p>If you use public properties, the naming should be Pascal-cased, so <code>isPlaying</code> should be <code>IsPlaying</code> (if you think it should be exposed publicly).  Private fields or properties should begin with lowercase; public fields or properties should begin with uppercase.</p>

<p><code>isPlaying</code> is initialized to <code>true</code>.  It should be <code>false</code> and you should set it to <code>true</code> at the top of <code>PlayGame</code>.  You may want to put a check at the top to make sure a game is not already in progress.</p>

<p>I'd like to see a enum for { Rock, Paper, Scissors } instead of literals "ROCK", "PAPER", and "SCISSORS".  This requires better validation for the user input to map that input to the correct enum.  I would also recommend using a <code>switch</code> instead of cascading <code>if-else-if's</code>.</p>

<p><code>ShowResult(int flagNum)</code> could be improved.  I don't like flagNum as an integer and would prefer to see an enum of GameResult = { InProgress, ComputerWins, PlayerWins, Draw }.  There should be a class level public readonly property to hold the GameResult.  And <code>ShowResult</code> should not take any parameters but instead read that class level public readonly property.</p>
    </div>