<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's a potential bug here:</p>

<pre><code>public T pop() {
    if(isEmpty()) {
        throw new NullPointerException("Stack is empty");
    }
    return this.stackArray[top--];
}
</code></pre>

<p>The problem with this code is that a reference to the object stays in the array.  You've decremented the index, but the array still has the reference sitting there.  This could result in an object not being garbage collected when the user expects it to be.  While technically this doesn't affect how your stack works, hanging on to references you don't need is generally considered poor practice.</p>

<p>Consider something like this (not tested):</p>

<pre><code>public T pop() {
    if(isEmpty()) {
        throw new NullPointerException("Stack is empty");
    }
    T retVal = this.stackArray[top];
    this.stackArray[top--] = null;
    return retVal;
}
</code></pre>
    </div>