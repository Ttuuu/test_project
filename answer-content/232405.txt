<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can compute fibonacci numbers with both time and space complexity <code>O(1)</code>.</p>

<pre><code>(n) =&gt; ((Math.Pow(phi,n) - Math.Pow(1-phi, n)) / Math.Sqrt(5);
</code></pre>

<p>where <code>phi</code> is the golden ratio:</p>

<pre><code>(1 + Math.Sqrt(5)) / 2
</code></pre>

<p>But if you needed to iterate fibonacci numbers one after the other, I would use an "iterator", then every other number would also be generated in O(1) and it would be better then the double formula.</p>
    </div>