<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>There is nothing inherently wrong with if-else statements.</strong></p>

<p>Please do not use Optionals as replacement for if-else statements. They were not intended for that purpose. Optional was intended to convey the <em>possibility of null-values in public interfaces</em> in code, instead of just documentation, and only that. Even using optional in a private method is against it's intention (you're supposed to know what your own code does).</p>

<p>Please read this answer from one of the architects behind the Optional class: <a href="https://stackoverflow.com/questions/26327957/should-java-8-getters-return-optional-type/26328555#26328555">https://stackoverflow.com/questions/26327957/should-java-8-getters-return-optional-type/26328555#26328555</a></p>

<p><strong>Exercise</strong>: Calculate the number of object creations and method calls involved in a Optional-if-else compared to a regular if-else and evaluate what effect the difference, if there is one, has on the optimizations.</p>

<p><strong>Implementation</strong></p>

<p>The If-class is intended to replace if-else-statements, but it does not follow the same logic as it allows multiple then-statements. It also lacks support for else-if constructs. Regular if-else statements do not consume anything so the parameter type of <code>then</code> and <code>orElse</code> should be <code>Runnable</code> (the fact that you pass a <code>null</code> to the consumer is a tell tale about code smell).</p>
    </div>