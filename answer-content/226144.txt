<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Similar to what I mentioned in <a href="https://codereview.stackexchange.com/a/226006/120114">my review of your other Post: <em>Carousel in Vanilla JavaScript</em></a>, if there is only one element that has class <em>items</em> then it would be more appropriate to use an <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id" rel="nofollow noreferrer"><strong>id</strong></a> attribute and query the DOM using <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById" rel="nofollow noreferrer"><code>document.getElementById()</code></a>.</p>

<hr>

<p>As Ivan mentioned, when defining an arrow functions: 
"Parentheses are optional when there's only one parameter name"<sup><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Basic_syntax" rel="nofollow noreferrer">1</a></sup></p>

<p>so instead of:</p>

<blockquote>
<pre><code> querySnapshot.forEach((doc) =&gt; {
</code></pre>
</blockquote>

<p>The parentheses around <code>doc</code> can be removed: </p>

<pre><code>querySnapshot.forEach(doc =&gt; {
</code></pre>

<hr>

<p>The callback function that takes each element from the <code>querySnapshot</code> pushes the result from calling <code>.data()</code> into <code>items</code>. </p>

<blockquote>
<pre><code>querySnapshot.forEach((doc) =&gt; {
    var docData = doc.data();
    items.push(docData);
});
</code></pre>
</blockquote>

<p>This can be simplified using the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" rel="nofollow noreferrer"><code>Array.map()</code></a> method:</p>

<pre><code>items = querySnapshot.map(doc =&gt; doc.data());
</code></pre>

<p>If you do that, you could declare <code>items</code> as a <code>const</code> and pass it as an argument to <code>renderItems()</code> instead of declaring it at the top of the script. </p>
    </div>