<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What makes your code slow is the repeated calls to <code>unique</code>, and manually shunting all entries into lists repeatedly. Ideally you want to do it all in <code>pandas</code> for the most speed.</p>

<p>If I understand it correctly, you want to group by the subject ID, collect all hadm IDs and texts. In that case, you can just use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html" rel="nofollow noreferrer"><code>pandas.DataFrame.groupby</code></a> and <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.aggregate.html" rel="nofollow noreferrer"><code>pandas.DataFrame.aggregate</code></a> to achieve (almost) the same result:</p>

<pre><code>notes_1_df = notes_df.drop(columns=["ROW_ID"]) \
                     .groupby("SUBJECT_ID") \
                     .aggregate(list) \
                     .reset_index()
</code></pre>

<p>Which directly produces this output:</p>

<pre><code>   SUBJECT_ID                HADM_ID                                               TEXT
0           4                   [89]                                 [Here is the text]
1          23  [433, 112, 773, 1212]  [Here is the text,and so on, Here is the text,...
2          65           [1212, 1210]    [Here is the text,and, Here is the text,and so]
3         914                 [2212]                       [Here is the text,and so on]
</code></pre>

<p>Whereas your code produces:</p>

<pre><code>   SUBJECT_ID                        HADM_ID                       NOTES
0           4                         [89.0]            Here is the text
1          23  [433.0, 112.0, 773.0, 1212.0]  Here is the text,and so on
2          65               [1212.0, 1210.0]  Here is the text,and so on
3         914                       [2212.0]  Here is the text,and so on
</code></pre>

<p>This differs mainly in the notes. Here your code is a bit weird. Instead of doing what you did, let's just pick the first text from each subject for now.</p>

<p>I am assuming that having integers for the hadm ID is fine, otherwise you can be more specific and supply two different functions to <code>aggregate</code>, in which case you don't even need the <code>drop</code> anymore:</p>

<pre><code>notes_1_df = notes_df.groupby("SUBJECT_ID") \
                     .aggregate({"HADM_ID": lambda x: list(map(float, x)),
                                 "TEXT": "first"}) \
                     .rename(columns={"TEXT": "NOTES"}) \
                     .reset_index()
</code></pre>



<pre><code>   SUBJECT_ID                        HADM_ID                       NOTES
0           4                         [89.0]            Here is the text
1          23  [433.0, 112.0, 773.0, 1212.0]  Here is the text,and so on
2          65               [1212.0, 1210.0]        Here is the text,and
3         914                       [2212.0]  Here is the text,and so on
</code></pre>

<hr>

<p>To see why I think your code produces weird results, let's replace the text with unique texts:</p>

<pre><code>df["TEXT"] = "Text from subject " + df.SUBJECT_ID.astype(str) + ", hadm " + df.HADM_ID.astype(str)
</code></pre>

<p>Then my (last) code produces:</p>

<pre><code>   SUBJECT_ID                        HADM_ID                             NOTES
0           4                         [89.0]      Text from subject 4, hadm 89
1          23  [433.0, 112.0, 773.0, 1212.0]    Text from subject 23, hadm 433
2          65               [1212.0, 1210.0]   Text from subject 65, hadm 1212
3         914                       [2212.0]  Text from subject 914, hadm 2212
</code></pre>

<p>Where each text is the first text from that actual subject. In contrast, your code produces:</p>

<pre><code>   SUBJECT_ID                        HADM_ID                           NOTES
0           4                         [89.0]    Text from subject 4, hadm 89
1          23  [433.0, 112.0, 773.0, 1212.0]  Text from subject 23, hadm 433
2          65               [1212.0, 1210.0]  Text from subject 23, hadm 112
3         914                       [2212.0]  Text from subject 23, hadm 773
</code></pre>

<p>Note how the texts do not correspond to the same subjects anymore!</p>
    </div>