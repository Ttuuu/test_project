<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some quick remarks:</p>

<ul>
<li><p>Quite frankly, I see no point for <code>CreateNewWorkOrder</code> and its 30-something parameters (a maintenance nightmare). Simply create the <code>dto_WorkOrder</code> where you call <code>CreateNewWorkOrder</code> and then pass that dto on to a method that performs an insert or an update.</p></li>
<li><p>You also can't claim that something is part of the business layer when that method has calls to <code>MessageBox.Show</code> inside it. Let that method (for instance) return a custom class featuring a boolean (to indicate success or failure) and an optional error message.</p></li>
<li><p>Move away from DataTables etc. Instead use an ORM like <a href="https://github.com/StackExchange/Dapper" rel="nofollow noreferrer">Dapper</a>.</p></li>
<li><p>Class names and property names etc. should not contain underscores. Please <a href="https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/naming-guidelines" rel="nofollow noreferrer">follow Microsoft's guidelines</a>.</p></li>
<li><p>What are <code>String_NullValue</code> and <code>List_NullValue</code> and <code>Int_NullValue</code> etc.? Please do not pollute your constructors with needlessly complex default values.</p></li>
<li><p>Much of this code feels "ancient". You're not even using <code>String.Format</code>, and that is already usually replaced by <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated" rel="nofollow noreferrer"><code>$</code> - string interpolation</a>.</p></li>
<li><p>Take a look at the <a href="https://markheath.net/post/model-view-presenter-winforms" rel="nofollow noreferrer">Model View Presenter Pattern</a> to write cleaner WinForms code.</p></li>
</ul>
    </div>