<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd prefer the first method because it's making more efficient use of resources (provided the async methods you call are really async and not just wrappers around synchronous methods) and it also looks cleaner.</p>

<p>To quote from <a href="http://blogs.msdn.com/b/pfxteam/archive/2012/03/24/10287244.aspx">this MSDN blog</a>:</p>

<blockquote>
  <p>... the only asynchronous methods that should be exposed are those that have scalability benefits over their synchronous counterparts ...</p>
</blockquote>

<p>What you are doing in your second method is basically calling the async methods in a synchronous way just to then in turn wrap it into a task. This will have scalability issues because it's using up a dedicated thread (at least in the current implementation of the task library) while the async methods you call might have more efficient means of achieving their asynchronicity (like <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa365198%28v=vs.85%29.aspx">IO completion ports</a> or timer callbacks)</p>
    </div>