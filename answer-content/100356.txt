<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The one thing I find really wrong is that you're using a <code>HashTable</code>.<br>
It is not generic, which means it will box every <code>int</code> to an object.<br>
Use a <code>Dictionary&lt;int, int&gt;</code> instead.</p>

<p>And there is no reason to supply it as a parameter: it should be local to the method, so declare it there.</p>

<p>Last thing: you don't need the <code>if-else</code> to check if a <code>Key</code> is present.<br>
<code>Dictionary</code> has a method <code>TryGetValue</code> for that. It also has an indexer.</p>

<p>Also realize, this will only find <strong>one</strong> number. If two numbers appear an equal number of times, only the first one will be found.</p>

<pre><code>static void CommonOccurrence(int[] numbers) {
    var counts = new Dictionary&lt;int, int&gt;();
    foreach (int number in numbers) {
        int count;
        counts.TryGetValue(number, out count);
        count++;
        //Automatically replaces the entry if it exists;
        //no need to use 'Contains'
        counts[number] = count;
    }
    int mostCommonNumber = 0, occurrences = 0;
    foreach (var pair in counts) {
        if (pair.Value &gt; occurrences ) {
            occurrences = pair.Value;
            mostCommonNumber = pair.Key;
        }
    }
    Console.WriteLine ("The most common number is {0} and it appears {1} times",
        mostCommonNumber, occurrences);
}
</code></pre>
    </div>