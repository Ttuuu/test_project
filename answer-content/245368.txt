<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Good first go at C#, it looks good and seems like it could work.</p>
<p>Some quick observations:</p>
<p>1: When you are listing your variables at the top, instead of doing:</p>
<pre><code>string name = "";
double age = 0;
</code></pre>
<p>simply do</p>
<pre><code>string name;
double number;
</code></pre>
<p>This allows us to type a bit faster, as for the double, this allows the CLR to not do a cast because remember; a int is 0 while a double would be 0.0</p>
<p>2: I really liked that you used "Convert.ToInt32" this is a safe(r) way of casting because if the to-be casted value was not a number then we would get an exception. ToInt32 (and the like) will always try to cast the value, and if not will default to 0 (amazing). The alternative would be</p>
<pre><code>var myDouble = 5.73;
int myInt = (int)myDouble;
</code></pre>
<p>But if mydouble was something else (because of the var it easily could be - which isn't a bad thing and will make more sense in the future) then you will get an exception..</p>
<p>3: When you have user input you'll need to clean it. Get familiar with some of the string's built in methods as it will help you a lot down the road. An example would be</p>
<pre><code> if (Answer == "Yes" || Answer == "yes" || etc. . . 
</code></pre>
<p>before the if we would take the Answer and put a toLower() at the end of it.</p>
<pre><code>string cleanData = Answer.ToLower();
if(Answer == yes ) .. and so on
</code></pre>
<p>4: Remember Camel casing and ..whatever the other casing is called. I kept thinking I was trying to do a tolower to a class or method instead of a value or property SO know what needs what casing because it will help you look professional :)</p>
<p>5:</p>
<pre><code> while (NeverFalse);
</code></pre>
<p>could be rewritten as</p>
<pre><code>while(true)
</code></pre>
<p>because while cases will always run if true, and if it's just true then it will never ever ever stop working!</p>
<p>..but if for some strange reason you do want to end this forever while loop you can simply do a "break;" and you'll be good. Also won't need to set the NeverFalse variable again so that's always cool</p>
<pre><code>while(true)
{
//we do some really cool stuff

//..but oh wait, I need to do something else now
break;
}
</code></pre>
<p>6: I would definitely look into classes now. It will help you break all your code apart and make it a bit more readable!</p>
<p>Other than that, it looks good. You even did a try/catch block!</p>
    </div>