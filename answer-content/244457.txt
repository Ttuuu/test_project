<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Constants</h2>
<p>Use constants to make it easier to read and modify your code as names change.</p>
<pre><code>Public Const TblDataName = "tblData"
Public Const TblDataLoadColumn = "Load?"
Public Const TblDataMessageColumn = "Message"
Public Const TblDataNumURLColumn = "URL"
Public Const TblDataTimestampColumn = "Message Timestamp"


Public Sub LoadRecords()
    'some code ....
    Set tbl = ActiveSheet.ListObjects(TblDataName)
    colNumLoad = getColNum(TblDataLoadColumn)
    colNumMessage = getColNum(TblDataMessageColumn)
    colNumURL = getColNum(TblDataNumURLColumn)
    colNumTimestamp = getColNum(TblDataTimestampColumn)
</code></pre>
<p>This setup will allow you to easily update your string references without have to review every line of code.</p>
<h2>Avoid Using ActiveSheet</h2>
<blockquote>
<pre><code>Set tbl = ActiveSheet.ListObjects("tblData")
</code></pre>
</blockquote>
<p>Using ActiveSheet makes your code fragile, easy to break, and limits code reuse.  It is a best practice to change your Worksheet's CodeName and reference the Worksheets by their CodeNames.</p>
<p>I like to add references to my ListObjects as properties of their worksheets.</p>
<p><img src="https://i.stack.imgur.com/BKAbg.png" alt="Add ListObject as a Property of the Worksheet"></p>
<h2>Function getColNum can be removed</h2>
<p>Here is the correct way to retrieve the ListColumn Index:</p>
<p><img src="https://i.stack.imgur.com/G0kYi.png" alt="ListColumn Name to Index"></p>
<h2>Function CONCATVARS</h2>
<p>Functions names should be Pascal case. I alternate between <code>Pascal</code> and <code>camelCase</code> but never all uppercase. Only constants and Enums should be all upper case (although I have been converted to using Pascal case for them also).</p>
<p><code>varConcat</code> is very descriptive if you compare it to its context and figure out its meaning.  However, you can deduce the usage of text and str without knowing its context.  For such a short block of code I prefer using s.  Using shorter simpler names often make the code easier to read.</p>
<pre><code>Function ConcatVars(tbl As ListObject, RowNum As Integer) As String
    Dim Column As ListColumn
    Dim s As String
    
    For Each Column In tbl.ListColumns
        If Column.Name Like "v_*" Then
            s = s &amp; IIf(Len(s) &gt; 0, "&amp;", "") _
                &amp; Mid(Column.Name &amp; "=" &amp; Column.Range.Cells(RowNum).Value, 3)
        End If
    Next

    ConcatVars = s

End Function
</code></pre>
<p><img src="https://i.stack.imgur.com/Yj6nQ.png" alt="ConcatVars"></p>
<h2>Refactored Code</h2>
<pre><code>Option Explicit
Public Const TblDataName = "tblData"
Public Const TblDataLoadColumn = "Load?"
Public Const TblDataMessageColumn = "Message"
Public Const TblDataNumURLColumn = "URL"
Public Const TblDataTimestampColumn = "Message Timestamp"

Public Sub LoadRecords()
    Rem Refreshes the Concatenated Variables column
    Application.CalculateFull
    Dim message As String, response As String
    Dim n As Long
    
    With DataSheet.GetTblData
        .ListColumns(TblDataMessageColumn).Range.Interior.colorIndex = 0
        For n = 1 To .ListRows.Count
            If UCase(.ListColumns(TblDataLoadColumn).DataBodyRange(n).Value) = "Y" Then
                response = getHTTP(.ListColumns(TblDataNumURLColumn).DataBodyRange(n).Value) 'Send an HTTP request to Maximo using the value in the URL column
                .ListColumns(TblDataMessage).DataBodyRange(n) = response

                Rem Put the current date into the Message Timestamp column. Note: This is the Excel date, not a date from Maximo.
                .ListColumns(TblDataTimestampColumn).DataBodyRange(n) = Now()
            
                With .ListColumns(TblDataMessageColumn).DataBodyRange(n)
                    message = Left(response, 7) 'Return a message (created, updated, or error) and store it in the Message column.
                    .Interior.colorIndex = Switch(message = "Created", 43, message = "Updated", 37, True, 3)
                End With
            
            End If
        Next
    End With
End Sub
</code></pre>
<h2>Addendum</h2>
<p>I added a sample. It shows how I would setup the project and demonstrates a couple of different techniques for working with ListObjects.</p>
<p><a href="https://drive.google.com/file/d/1RLvyTpLrS-SfrO8PJ4II1PFSqkM-N6TY/view?usp=sharing" rel="nofollow noreferrer">Table Demo</a></p>
    </div>