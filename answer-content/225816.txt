<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think the major problem with this current system is this: Imagine you come back 6 month after having written these comments and have not used this commenting system elsewhere since then. What category does a comment like <code>(4) ...</code> belong to? Without looking it up! Now imagine someone else looks at your code and needs to figure out which comments are meant for them.</p>

<p><strong>In other words, the system is not self explanatory.</strong></p>

<p>(Ab)using multi-line strings as comments is also discouraged. You are not even using them as multi-line string anyway.</p>

<p>It would already help if you used words instead of numbers. Maybe this is already enough to cover all your cases:</p>

<ul>
<li><code># TODO NAME note to name</code> or <code># FIXME important bugfix</code></li>
<li><code># TODO TEAM note to team members</code>,</li>
<li><code># just plain comments for business rules</code></li>
<li><code># CONSTANT description</code></li>
<li><code># NOTE idea for improvement</code></li>
<li><code># just plain comments on the flow of the code</code></li>
</ul>

<p>At least in my editor, <code>TODO</code>, <code>FIXME</code> and <code>NOTE</code> all get the same special highlight.</p>

<hr>

<p>Your code itself you should re-organize a bit. Ideally you define all your classes and functions first and put code calling it afterwards. Don't intersperse the two.</p>

<p>The definition of <code>df</code> can also be simplified a bit using extended indexing of <code>pandas</code> dataframes and <code>pandas.DataFrame.rename</code>:</p>

<pre><code>df = SXRX_df[['Last Name', 'First Name', 'Student Id', 'School DBN', 'Cls', 'Section', 
 'Score.1']]
df = df.rename(columns={'Cls': 'Ofc Cls', 'Score.1': 'Final Score'})
df['Exam'] = 'SXRX'
df['Reason Incomplete'] = reason_incomplete(SXRX_df['Follow Up'],
                                            SXRX_df['Follow Up.1'],
                                            SXRX_df['Errors'])
</code></pre>

<p>Note that the columns are in the order in which they appeared in the list, so you might not even need the <code>reindex</code>.</p>

<p>The <code>np.vectorize</code> can also already be used as a decorator at the time of function definition and save some real estate in the block above:</p>

<pre><code>@np.vectorize
def reason_incomplete(school_follow_up, site_follow_up, errors):
    ...
</code></pre>
    </div>