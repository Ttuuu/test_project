<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It looks like you have implemented <a href="https://en.wikipedia.org/wiki/Topological_sorting#Kahn's_algorithm" rel="nofollow noreferrer">Kahn's algorithm for topological sorting</a>.</p>

<p>By PEP 8, the official Python style guide, <a href="https://www.python.org/dev/peps/pep-0008/#function-and-variable-names" rel="nofollow noreferrer">function names should be <code>lower_case_with_underscores</code></a>.  Also, since the code would work equally well with an n-tuples as inputs, I'd rename <code>triplets</code> to <code>subsequences</code>.</p>

<p>For building <code>secret_dict</code>, I suggest:</p>

<ul>
<li>using <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict(set)</code></a></li>
<li>iterating by index, so as to avoid calling <code>x.index(y)</code>.</li>
</ul>

<p>The <code>removeChar()</code> function does not actually return a <code>dict</code>, as claimed â€” there's no <code>return</code> statement!  For clarity, I'd avoid the bogus use of a set comprehension that actually surreptitiously mutates <code>secret_dict</code>'s values as a side-effect, and just write it as a loop.</p>

<p>I don't think that <code>removeChar()</code> and <code>findChar()</code> need to be defined as inner functions, especially since they are both short.  The functions don't really help with code clarity, since they act on <code>secret_dict</code> by closure.</p>

<pre><code>from collections import defaultdict

def recover_secret(subsequences):
    preceding_chars = defaultdict(set)
    for subseq in subsequences:
        for i in range(len(subseq)):
            preceding_chars[subseq[i]].update(subseq[i - 1] if i else '')

    secret = []
    while preceding_chars:
        c = next(k for k, v in preceding_chars.items() if not v)
        del preceding_chars[c]
        for prec in preceding_chars.values():
            if c in prec:
                prec.remove(c)
        secret.append(c)
    return ''.join(secret)
</code></pre>
    </div>