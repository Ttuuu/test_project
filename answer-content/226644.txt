<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I still don't undestand that framework but there are few minor things that I think could be improved anyway:</p>

<ul>
<li><code>AddBeforeHook</code> &amp; <code>AddAfterHook</code> could actually use the <code>BeforeDelegate</code> &amp; <code>AfterDelegate</code> respectively instead of <code>Func</code>s.</li>
<li>I would rename <code>handler</code> to <code>before</code> &amp; <code>after</code> since the third one is already called <code>next</code>. I find this way it would be clearer what they handle.</li>
<li><p>I think you should be able to rewrite the <code>while</code>s in the <code>Build</code> method with an <code>Aggregate</code> like:</p>

<pre><code>before = befores.Aggregate(before, (current, next) =&gt; next(current));
</code></pre>

<p>or even</p>

<pre><code>var before = befores.Aggregate(new BeforeDelegate(c =&gt; Task.FromResult(true)), (current, next) =&gt; next(current));
</code></pre>

<p>Elements are enumerated in the <code>Pop</code> order.</p></li>
</ul>
    </div>