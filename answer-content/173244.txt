<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What this is looking for is "Binding by Convention". Since Guice is intended to be as lightweight (and fast) as possible, it does <strong>not</strong> contain facilities to enable binding by convention.</p>
<p>Neither does Spring for that matter. I <em>think</em> you might be able to automate the bindings injected into the methods if you use <a href="https://codehaus-plexus.github.io/plexus-containers/dependency-management.html" rel="nofollow noreferrer">Plexus</a>.
Do note that none of this will alleviate you from the actual problem you're facing:</p>
<h3>Why?</h3>
<p>You write:</p>
<blockquote>
<p>Basically I want to inject fully configured FXMLLoaders into some
Controller classes, so that they can work with the root nodes returned
from the loaders without having to know anything about other
controllers.</p>
</blockquote>
<p>This makes  no sense: You're injecting <code>FXMLLoader</code>s into <code>Controller</code>s, specifically into a controller that's not the <code>Controller</code> you set on the <code>FXMLLoader</code> itself. To access the rootNode returned by the loader.</p>
<p>This violates the Law of Demeter. You're grabbing into the responsibilities of another controller.</p>
<p>The solution to this problem is to expose a method on the controller and inject a the controller instance you need, instead of the loader.</p>
<p>This whole module seems to me like it's solving the wrong problem in the first place ...</p>
    </div>