<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <code>"data"</code> property of the object returned from <code>.then()</code> chained to <code>fetch()</code> is not necessary as it is not used. Simply returning the object will suffice.</p>

<p>Use <code>.map()</code> instead of <code>.forEach()</code> to process array of <code>fetch()</code> calls made when <code>frameworks</code> is iterated.</p>

<p><code>Promise.all()</code> returns an array of resolved <code>Promise</code> objects in the same order as the elements within the iterable passed to the function, whether the element is a <code>Promise</code> or not. Note also, that a single error or rejected <code>Promise</code> stops <code>Promise.all()</code> from further iteration.  </p>

<p>Chain <code>.catch()</code> to both <code>Promise.all()</code> and <code>setup()</code> to include error handling for the asynchronous function calls, and <code>return</code> a value from <code>.then()</code> chained to <code>Promise.all()</code>.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;head&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;div id="row"&gt;&lt;/div&gt;
  &lt;script&gt;
    const frameworks = [{
      name: "angular",
      logo: "img/angular.png",
      url: "https://api.github.com/repos/angular/angular.js"
    }, {
      name: "ember",
      logo: "img/ember.png",
      url: "https://api.github.com/repos/emberjs/ember.js"
    }, {
      name: "react",
      logo: "img/react.png",
      url: "https://api.github.com/repos/facebook/react"
    }, {
      name: "vue",
      logo: "img/vue.png",
      url: "https://api.github.com/repos/vuejs/vue"
    }];

    const handleError = err =&gt; {throw err};

    const frameworkData = url =&gt;
      fetch(url)
      .then(resp =&gt; resp.json())
      .then(data =&gt; 
        ({
          name: data.name,
          forks: data.forks_count,
          stars: data.stargazers_count,
          issues: data.open_issues_count
        })
      ).catch(handleError);

    const setup = (
      row = document.getElementById("row")
    , now = new Date()
    ) =&gt; 
      Promise.all(
        frameworks.map(({url,logo,name:n}) =&gt; 
          frameworkData(url)
          .then(({forks,stars,issues}) =&gt; 
            row.innerHTML += `
              &lt;div class="col-lg-3"&gt;
                &lt;div class="card" style="width: 18rem;"&gt;
                  &lt;img src="${logo}" alt="Card image cap" height="180" width="200"&gt;
                  &lt;div class="card-body"&gt;
                    &lt;h5 class="card-title"&gt;${n}&lt;/h5&gt;
                  &lt;/div&gt;
                  &lt;ul class="list-group list-group-flush"&gt;
                    &lt;li class="list-group-item"&gt;Watchers: ${forks}&lt;/li&gt;
                    &lt;li class="list-group-item"&gt;Stars: ${stars}&lt;/li&gt;
                    &lt;li class="list-group-item"&gt;Commits: ${issues}&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/div&gt;
              &lt;/div&gt;`))
            ).catch(handleError);

    setup()
    .then(() =&gt; console.log("done fetching frameworks data"))
    .catch(err =&gt; console.error(err));
  &lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>

    </div>