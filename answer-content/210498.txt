<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Use regex to replace pattern in filename</h2>

<p>The structure of these <code>if else</code> all similar, you can use <code>re</code> to simplify it.</p>

<pre><code>if "IMG_" in filename:
    os.rename(filename, filename.replace('IMG_', ''))
    number_modified_files +=1
elif "PANO_" in filename:
    os.rename(filename, filename.replace('PANO_', ''))
    number_modified_files +=1
elif "VID_" in filename:
    os.rename(filename, filename.replace('VID_', ''))   
    number_modified_files +=1
</code></pre>

<p>So you are looking for <code>IMG_</code>, <code>PANO_</code> and <code>VID_</code> in filename and try to replace it delete this part. </p>

<p>Instead of using <code>os.rename</code> multiply times, we can use <code>re.sub(pattern, repl, string, count=0, flags=0)</code> to do this.</p>

<p>It will Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl.</p>

<pre><code>pattern = 'IMG_|PANO_|VID_'
renamed_filename = re.sub(pattern, '', filename)
</code></pre>

<p>The <code>pattern</code> meaning match one in three. I am not sure if your are familiar with regex, here is the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">doc</a>.</p>

<p>And if the renamed_filename not equal filename it is modified, so whole part will be</p>

<pre><code>pattern = 'IMG_|PANO_|VID_'
renamed_filename = re.sub(pattern, '', filename)
if renamed_filename != filename:
    number_modified_files +=1
    os.rename(filename, renamed_filename)
</code></pre>

<blockquote>
  <p>Edit: Incorrect to use re.sub with os.rename</p>
</blockquote>

<p>To fix this just remove the <code>os.chdir(folder)</code>, there is no point doing this</p>

<pre><code># os.chdir(folder)
...
pattern = 'IMG_|PANO_|VID_'
renamed_filename = re.sub(pattern, '', filename)
file_path = os.path.join(folder, filename)
if renamed_filename != filename:
    number_modified_files +=1
    renamed_file_path = os.path.join(folder, renamed_filename)
    os.rename(file_path, renamed_file_path)
</code></pre>

<h2>Regex side effect</h2>

<p>But the regex code will work differ from your original code, as in your code, the replace end if it match in one pattern, but regex solution will try to replace all patterns in <code>IMG_</code> <code>PANO_</code> and <code>VID_</code>.</p>

<h2>Store replace pattern in list</h2>

<p>I suggest you use a list to store the patterns(<code>IMG_</code> <code>PANO_</code> and <code>VID_</code>) </p>

<p>if you wanna stop replace in the first match, use a loop to check one by one, </p>

<pre><code>patterns = ["IMG_", "PANO_", "VID_"]
...
for pattern in patterns:
    if pattern in filename:
        os.rename(filename, filename.replace(pattern, ''))
        number_modified_files +=1
</code></pre>

<p>Or if you wanna replace all patterns, use regex</p>

<pre><code>re.compile("|".join(patterns))
</code></pre>

<p>It is easy for only 3 patterns now, but will drive you crazy if there are 30.</p>
    </div>