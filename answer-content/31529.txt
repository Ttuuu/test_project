<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have common code, which moreover has applications beyond this one, so should you not pull it out into a function? Then you can reduce <code>overlap</code> to</p>

<pre class="lang-py prettyprint-override"><code>def overlap(r1, r2):
    '''Overlapping rectangles overlap both horizontally &amp; vertically
    '''
    return range_overlap(r1.left, r1.right, r2.left, r2.right) and range_overlap(r1.bottom, r1.top, r2.bottom, r2.top)
</code></pre>

<p>Now, the key condition encapsulated by <code>range_overlap</code> is that neither range is completely greater than the other. A direct refactor of the way you've expressed this is</p>

<pre class="lang-py prettyprint-override"><code>def range_overlap(a_min, a_max, b_min, b_max):
    '''Neither range is completely greater than the other
    '''
    overlapping = True
    if (a_min &gt; b_max) or (a_max &lt; b_min):
        overlapping = False
    return overlapping
</code></pre>

<p>For such a simple condition I would prefer to use <code>not</code> rather than if-else assignment. I would also reorder the second condition to exhibit the symmetry more clearly:</p>

<pre><code>def range_overlap(a_min, a_max, b_min, b_max):
    '''Neither range is completely greater than the other
    '''
    return not ((a_min &gt; b_max) or (b_min &gt; a_max))
</code></pre>

<p>Of course, <a href="http://mathworld.wolfram.com/deMorgansLaws.html">de Morgan's laws</a> allow rewriting as</p>

<pre><code>def range_overlap(a_min, a_max, b_min, b_max):
    '''Neither range is completely greater than the other
    '''
    return (a_min &lt;= b_max) and (b_min &lt;= a_max)
</code></pre>

<p>I think that the last of these is the most transparent, but that's an issue of aesthetics and you may disagree.</p>

<p>Note that I've assumed throughout, as you do, that the rectangles are closed (i.e. that they contain their edges). To make them open, change <code>&gt;</code> to <code>&gt;=</code> and <code>&lt;=</code> to <code>&lt;</code>.</p>
    </div>