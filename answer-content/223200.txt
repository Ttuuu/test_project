<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is a big problem in your code. <code>sorted</code> sorts the input list. So you are sorting input list twice.
For finding out that your list is sorted, you only need to check did you make any swap in the last iteration or not. If you don't, your list is sorted. </p>

<pre><code>def get_input():
    input_str = input("Enter elements to be sorted: ")
    try:
        lst = list(map(int, input_str.split()))
    except:
        raise TypeError("Please enter a list of integers only, seperated by a space!!")
    return lst


def bubble_sort(the_list):
    if len(the_list) == 0:
        print("Empty list!!")

    elif len(the_list) == 1:
        print("Only one element!!")
    else:
        for i in range(len(the_list) - 1):
            swapped = False
            for j in range(len(the_list) - i - 1):
                if the_list[j] &gt; the_list[j + 1]:
                    swapped = True
                    the_list[j], the_list[j + 1] = the_list[j + 1], the_list[j]
            if not swapped:
                break


if __name__ == '__main__':
    input_list = get_input()
    bubble_sort(input_list)
    print(input_list, sep=", ")
</code></pre>

<p>If you should print the <code>List is already sorted!!</code> message, you can simply create a copy of input list (using for example: <code>input_list[::]</code>) and compare that with the result of <code>bubble_sort</code> function in the last part of your code.</p>

<p>Also, many times changing the value of the function parameter and using that like an <strong>in-out</strong> parameter is not a very good idea in the python. Because that could create many problems and misunderstandings in the future, especially when you are working with other people.</p>

<p>So It is better to think about using this method or returning a new sorted list from function.</p>

<p>But if you want to stick to the current method, don't forget to explain that in the documentation of your code clearly.</p>

<p>Also, for making your code more readable, maybe it is a good idea to split your <code>bubble_sort</code> function to two separate functions. One checks conditions and calls the second one that really sorts the list. But it is not a necessary thing and, depends on your team and project code style and decisions, maybe make things wors. That is a thing that you can consider in your mind and think about it.</p>
    </div>