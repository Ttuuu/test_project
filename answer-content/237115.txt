<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Updated code, thanks to <a href="https://codereview.stackexchange.com/a/237114/218227">Toby Speight</a>'s and <a href="https://codereview.stackexchange.com/a/237113/218227">Josiah</a>'s reviews.</p>

<pre><code>#define HASH_LENGTH 16
char *hash(const char *input){
    // Alphabet and length
    const static char alphabet[] = "abcdefghijklmnopqrstuvwxyz";
    const static int alphabetLen = sizeof(alphabet)/sizeof(char) - 1;

    // Randomization variables and length
    const static char vars[] = {
        0xA6,
        0xC1,
        0x5E,
        0x31,
        0xF5,
        0x88,
        0xA1,
        0xE2
    };
    const static int varsLen = sizeof(vars)/sizeof(char);

    // Digest (where the hash is made)
    char *digest = malloc(HASH_LENGTH + 1);

    // Input length calculation
    int const inputLen = strlen(input);

    // Digest cleaning
    memset(digest, 0, HASH_LENGTH);

    // Hashing process
    int i, j;
    for(i = 0; i &lt; HASH_LENGTH; i++){
        // XORs digest[i] with vars[input[j]]
        for(j = 0; j &lt; inputLen; j++){
            digest[i] ^= vars[input[j] % varsLen];
        }
        // XORs digest[i] with input[i] + vars[i]
        digest[i] ^= input[i % inputLen] + vars[i % varsLen];
    }

    // Translates digest to desired alphabet
    for(i = 0; i &lt; HASH_LENGTH; i++){
        digest[i] = alphabet[abs(digest[i]) % alphabetLen];
    }
    // Finalizes digest string
    digest[HASH_LENGTH] = '\0';

    return digest;
}
</code></pre>
    </div>