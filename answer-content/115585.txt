<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think using more LINQ will benefit both readability and conciseness.</p>

<p>The <code>Where</code> method <a href="https://msdn.microsoft.com/en-us/en-en/library/bb549418%28v=vs.100%29.aspx" rel="nofollow noreferrer">has an overload</a> where the predicate function gets fed the index too, the type is:</p>

<pre><code>public static IEnumerable&lt;TSource&gt; Where&lt;TSource&gt;( 
    this IEnumerable&lt;TSource&gt; source, 
    Func&lt;TSource, int, bool&gt; predicate 
)
</code></pre>

<p>So the code can become just:</p>

<pre><code>public static int Solve()
{
  return FibonacciNumbers()
           .TakeWhile(i =&gt; i &lt; upperLimit)
           .Where( (_, i) =&gt; i % 3 == 0)
           .Sum()
}
</code></pre>

<p>I also removed <code>Get</code> from the name of the function generating fibonacci numbers, as <code>get</code> <a href="https://stackoverflow.com/questions/1568091/why-use-getters-and-setters">has very precise meaning in OOP</a> and using it when you do not mean that is confusing.</p>
    </div>