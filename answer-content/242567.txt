<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are a few optimizations that seem obvious to me, but the algorithm seems fine for what is does.</p>

<pre><code>if n % 2 != 0:
    return False
if n % 2 == 0:
    # ...
</code></pre>

<p>There is no need for the second <code>if</code> statement, as you already know that <code>n % 2 == 0</code> is <code>True</code>, as you would have returned otherwise. </p>

<pre><code>if item % 2 == 0:      #even
    count_1 += 1
if item % 2 != 0:       #odd
    count_2 += 1
</code></pre>

<p>You should use an <code>if ... else</code> construct, if the number isn't even, then it is odd. This makes one less check for each item.</p>

<pre><code>if count_1 == count_2:
    return True
else:
    return False
</code></pre>

<p>You can simply <code>return count_1 == count_2</code>. This simplifies the code and saves a branch, making it slightly more efficient.</p>

<p>You could also use more meaningful variable names, and include a docstring documentating what the code does</p>

<p>Here is my take on your code:</p>

<pre><code>def balanced(lst):
    '''Checks if a list contains the same amount of even and odd numbers'''

    if len(lst) % 2 != 0:
        return False
    count_even = 0
    count_odd = 0
    for item in lst:
        if item % 2 == 0:
            count_even += 1
        else: 
            count_odd += 1
    return count_even == count_odd
</code></pre>

<p>You could probably trim the code even more, for example using only one variable for counting, adding <code>1</code> on even numbers and subtracting <code>1</code> on odd numbers, and returning whether that value is <code>0</code>, but I feel like it would affect negatively the readability.</p>
    </div>