<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The alternative is: </p>

<pre><code>public var isEditing: Bool {
    didSet {
        // do whatever you need when the property changes, e.g.
        updateView()
    }
}

// wrap the changing of `isEditing` in some animation

func setEditing(_ editing: Bool, animated: Bool) {
    if animated {
        someAnimation {
            isEditing = editing
        }
    } else {
        isEditing = editing
    }
}
</code></pre>

<p>This basically separates the “do what I need when <code>isEditing</code> changes” from the “by the way, animate that” and it eliminates a private backing stored property.</p>

<p>There are cases where you need to do the “exposed computed property with a private backing stored property” approach, but I generally avoid that pattern where I can.</p>
    </div>