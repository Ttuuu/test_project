<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1><code>Promise.catch</code> for errors</h1>
<p>Why use an <code>async function</code> at all?</p>
<p>You are using an interval that ignores the promise returned by the <code>async fetchData</code>, so you are not interested in whether or not the get and post succeed, you just want to report errors as they happen.</p>
<p>Promises have a <code>catch</code> callback that is called when there is an error. Simply redirect the error passed to the <code>catch</code> to your <code>handleError</code> function.</p>
<p>That way you can handle the errors in the functions who's role is appropriate rather than have <code>fetchData</code> handle both the get or post errors</p>
<pre><code>function postData(data) {
   const url = ????;
   const options = {
       method: "POST",
       body: JSON.stringify(data), 
       headers: {"Content-Type": "application/json"}
   };
   fetch(url, options).catch(handleError);
}

function getData() {
    fetch(endPoint)
        .then(data =&gt; { data.json().then(postData) }) //assumes JSON is reliably formated 
        .catch(handleError);      
}

setInterval(getData, config.newsapi.polling_interval);
</code></pre>
    </div>