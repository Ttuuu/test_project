<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your program is great in that it does the job, but there are some ways to improve the implementation significantly.</p>

<p>As a design decision, some programs need to process data as it is being captured from the inputs. This program is not one of those, so it makes sense to make the input and processing steps very discrete.</p>

<p>Then, using some of the more modern Java features (the ones that have been there since Java7), you should use a try-with-resources statement to manage the input exceptions.</p>

<p>I would also recommend creating a container and calling method to handle the two-part inputs (the key, and the encrypted text).</p>

<p>Sometimes it's easier to show, than to tell. Let's start with the core decode routine. The two methods should make sense:</p>

<pre><code>public static final String decode(final int key, final String encoded) {
    final int len = encoded.length();
    // prepare a space to store the decoded value
    final char[] decoded = new char[len];
    for (int i = 0; i &lt; len; i++) {
        // use i+1 here since the algorithm has the first char at position 1, not 0.
        decoded[i] = decodeChar(encoded.charAt(i), i + 1, key);
    }
    // convert the decoded chars back to a String.
    return new String(decoded);
}

private static char decodeChar(final char encoded, final int position, final int key) {
    // modulo 26 eliminates multiple wrap-arounds.
    int rotate = (3 * position + key) % 26;
    // apply the rotation shift to the input
    int decval = (encoded - 'A') + 26 - rotate;
    // use another % 26 to keep the letters in range.
    return (char)('A' + (decval % 26));
}
</code></pre>

<p>Note how using the function extraction makes the code simpler?</p>

<p>Now, how to get the input in to that function? That would be simple:</p>

<pre><code>public static void main(String[] args) {
    CypherText input = getEncoded();
    String decoded = decode(input.getKey(), input.getText());
    System.out.println("Decoded: " + decoded);
}
</code></pre>

<p>Note, that <code>CypherText</code> class is new.... but you can clearly see how the <code>decode(...)</code> would fit. Biw is the CypherText done?</p>

<pre><code>private static final class CypherText {
    private final int key;
    private final String text;

    public CypherText(int key, String text) {
        super();
        this.key = key;
        this.text = text;
    }

    public int getKey() {
        return key;
    }

    public String getText() {
        return text;
    }

}

public static CypherText getEncoded() {
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))){
        int k = Integer.parseInt(reader.readLine());
        String word = reader.readLine();
        return new CypherText(k, word);
    } catch (IOException e) {
        e.printStackTrace();
        return new CypherText(0, "");
    }
}
</code></pre>

<p>I put <a href="http://ideone.com/oQKZFe"><strong>this in an Ideone here</strong></a></p>
    </div>