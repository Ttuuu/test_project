<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Regex compilation</h2>

<p>If performance is a concern, this:</p>

<pre><code>arr = [re.sub(pattern, '', i) for i in arr]
</code></pre>

<p>is a problem. You're re-compiling your regex on every function call - and every loop iteration! Instead, move the regex to a <code>re.compile()</code>d symbol outside of the function.</p>

<p>The same applies to <code>re.match("&lt;P ID=(\d+)&gt;", para)</code>. In other words, you should be issuing something like</p>

<pre><code>group_para_re = re.compile(r"&lt;P ID=(\d+)&gt;")
</code></pre>

<p>outside of the loop, and then</p>

<pre><code>group_para_id = group_para_re.match(para)
</code></pre>

<p>inside the loop.</p>

<h2>Premature generator materialization</h2>

<p>That same line has another problem - you're forcing the return value to be a list. Looking at your <code>no_integers</code> usage, you just iterate over it again, so there's no value to holding onto the entire result in memory. Instead, keep it as a generator - replace your brackets with parentheses.</p>

<p>The same thing applies to <code>nopunctuation</code>.</p>

<h2>Set membership</h2>

<p><code>stop_words</code> should not be a <code>list</code> - it should be a <code>set</code>. Read about its performance <a href="https://wiki.python.org/moin/TimeComplexity" rel="noreferrer">here</a>. Lookup is average O(1), instead of O(n) for a list.</p>

<h2>Variable names</h2>

<p><code>nopunctuation</code> should be <code>no_punctuation</code>.</p>
    </div>