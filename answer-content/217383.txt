<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could also solve the problem by introducing an object <code>mo</code> (as a makeshift associative array) like shown in the following example</p>

<pre><code>const trav=[{from:"bos",to:"sfo"},{from:"jer",to:"jfk"},{from:"zur",to:"brm"},{from:"haj",to:"cdg"},{from:"pma",to:"mlg"},{from:"sfo",to:"zur"},
  {from:"cdg",to:"hav"},{from:"jfk",to:"haj"},{from:"man",to:"cdg"},
  {from:"mlg",to:"jer"},{from:"brm",to:"pma"},{from:"hav",to:"bos"}],
  mo={},srt=[];
var fr='jfk',v,n=20;
trav.forEach(v=&gt;mo[v.from]=v);
while (n--&amp;&amp;(v=mo[fr])){srt.push(v);fr=v.to;}
console.log(JSON.stringify(srt));
</code></pre>

<p>The <code>n</code> is a "safety switch<span class="math-container">`</span> that gets you out when the sequence turns out to be circular (as is the case in my example).</p>
    </div>