<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code appears to be correct, but I have a few comments.</p>

<p>First, using the <code>typing</code>, <code>re</code>, and <code>collections</code> modules is perhaps somewhat overkill for what you are trying to achieve. For small programs, it's best to make use of the <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">built-in functions</a>, and methods of <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">build-in types</a>, rather than to import modules, if possible. In particular, the <a href="https://docs.python.org/3/library/stdtypes.html#string-methods" rel="nofollow noreferrer">string methods</a> can be useful, and I've found the <code>max</code>, <code>map</code>, <code>all</code>, and <code>any</code> functions to be handy.</p>

<p>Second, while it wasn't specified what the function should do given an empty string, it would be prudent to handle this case. Currently, your code will throw an error; I think it would make sense to return the letter <code>'a'</code>.</p>

<p>Third, parts of your code are a bit difficult to read. In particular, this expression</p>

<pre class="lang-py prettyprint-override"><code>(sorted(letters[frecuencies.index(max(frecuencies))])[0])
</code></pre>

<p>required some concentration to understand. I'm not sure how this could be improved. I think the problem is that by this point I've lost track of what the data-structures look like.</p>

<hr>

<p>That's it for comments. To finish, here is an approach to the problem that I think would be considered quite Pythonic:</p>

<pre class="lang-py prettyprint-override"><code>def most_frequent_letter(text):
    """Return the first letter of the alphabet that occurs jointly most 
    often in the given string. Case is ignored."""
    alphabet = 'abcdefghijklmnopqrstuvwxyz'
    return max(alphabet, key=text.lower().count)
</code></pre>

<p>The <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> function will return the <em>first</em> maximal element in the list, where the value being maximised is the result of applying the function <code>key</code>. So in this case, it will return the alphabetically first letter with the (joint) highest count in the lowercased text.</p>

<p>You could import the latin alphabet from the <code>string</code> module, if you'd rather not type it out:</p>

<pre class="lang-py prettyprint-override"><code>from string import ascii_lowercase
</code></pre>

<hr>

<p>I would work on:</p>

<ul>
<li>becoming more familiar with the built-in methods and functions;</li>
<li>writing code with the human reader in mind: try to keep the state of variables simple and self-evident. Ideally a line of code should be somewhat comprehensible in isolation without having to use working memory to mentally build up the state of the variables from the previous lines of the program.</li>
</ul>
    </div>