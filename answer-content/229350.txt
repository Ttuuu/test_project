<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Python compilers for performance</h1>

<h2>Nuitka</h2>

<p><a href="https://nuitka.net" rel="nofollow noreferrer">Nuitka</a> compiles any and all Python code into faster architecture-specific C++ code. Nuitka's generated code is faster.</p>

<h2>Cython</h2>

<p>Cython can compiles any and all Python code into platform-indepndent C code. However, where it really shines is because you can annotate your Cython functions with C types and get a performance boost out of that.</p>

<h2>PyPy</h2>

<p>PyPy is a JIT that compiles pure Python code. Sometimes it can produce good code, but it has a slow startup time. Although PyPy probably won't give you C-like or FORTRAN-like speeds, it can sometimes double or triple the execution speed of performance-critical sections.</p>

<p>However, PyPy is low on developers, and as such, it does not yet support Python versions 3.7 or 3.8. Most libraries are still written with 3.6 compatibility.</p>

<h2>Numba</h2>

<p>Numba compiles a small subset of Python. It can achieve C-like or FORTRAN-like speeds with this subset-- when tuned properly, it can automatically parallelize and automatically use the GPU. However, you won't really be writing your code in Python, but in Numba.</p>

<h1>Alternatives</h1>

<p>You can write performance-critical code in another programming language. 
One to consider would be D, a modern programming language with excellent C compatibility.</p>

<p>Python integrates easily with languages C. In fact, you can load dynamic libraries written in C* into Python with no glue code.</p>

<p>*D should be able to do this with <code>extern(C):</code> and <code>-betterC</code>.</p>
    </div>