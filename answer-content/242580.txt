<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Do not call <code>printf</code> from the signal handler. It is not signal safe. <code>man sigaction</code> for details.</p></li>
<li><p><code>write_buf</code> is somewhat convoluted. <code>while (rlen &gt; 0)</code> seems more straightforward.</p>

<p>Also, it is forced to write the entire buffer. It means that your program only pays attention to the <code>Ctrl-C</code> in between of writes. You may get more crispy resolution by testing <code>wlen &lt; rlen</code> and inspecting <code>errno</code>; if <code>write</code> was interrupted, it would be <code>EINTR</code>.</p>

<p><code>void</code> function with an in-out parameter (<code>bytes</code> in your case) is strange to say the least. The <code>void</code> function is not supposed to return anything, and in-out parameters are generally unclean. Just return <code>bytes</code>.</p></li>
<li><p><code>error()</code> is a GNU extension and should not be used in programs intended to be portable. In any case, the pass <code>errno</code> as a second parameter. The user is very interested what exactly was wrong.</p></li>
<li><p>If the program was <em>not</em> interrupted, it doesn't print number of bytes copied. Looks like a bug (or a very dubious design decision) to me.</p></li>
</ul>
    </div>