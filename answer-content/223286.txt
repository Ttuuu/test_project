<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your second example doesn't compile; you're using too much <code>if</code>s.</p>

<p>If you would be looking what the compiler would make of it, there wouldn't be too much of a difference; the <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators#conditional-logical-and-operator-" rel="nofollow noreferrer"><code>&amp;&amp;</code> operator short-circuits</a>. Therefore, you can concentrate on what's more readable for the maintainers of the code (which could be a future you).</p>

<p>The shortest version would be</p>

<pre><code>public bool IsSomething()
{
    return MeetRequirementX() &amp;&amp; MeetRequirementY() &amp;&amp; MeetRequirementZ();
}
</code></pre>

<p>which is fine if it's kind of obvious how these requirements combine into the desired result for <code>IsSomething()</code>. If that's not obvious, you'd better explain why each requirement is necessary with a comment, and then I'd prefer the following:</p>

<pre><code>public bool IsSomething()
{
    // comment explaining why requirement X is necessary
    if (!MeetRequirementX()) return false;

    // comment explaining why requirement Y is necessary
    if (!MeetRequirementY()) return false;

    // comment explaining why requirement Z is necessary
    return MeetRequirementZ();
}
</code></pre>

<p>Or replace the last line with</p>

<pre><code>    if (!MeetRequirementZ()) return false;

    return true;
</code></pre>

<p>if you prefer the symmetry of that. </p>
    </div>