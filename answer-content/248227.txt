<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Use the let <a href="https://www.w3schools.com/js/js_es6.asp" rel="nofollow noreferrer">ES6</a> instead of var</h1>
<blockquote>
<pre><code>var numList = [];
</code></pre>
</blockquote>
<pre><code>let numList = [];
</code></pre>
<p>etc.</p>
<h1>Use the filter method</h1>
<blockquote>
<pre><code>numList.forEach(function(element){
    if (element % 2 === 0){ 
        evenNumbers.push(element);
    }
}) 
</code></pre>
</blockquote>
<p>As suggested by <a href="https://codereview.stackexchange.com/a/248221/229477">Lucas Wauke</a></p>
<pre><code>let evenNumbers = numList.filter(element =&gt; element % 2 === 0);
</code></pre>
<h1>Tell the user what to enter in the prompt</h1>
<blockquote>
<pre><code>numList.push(window.prompt());
</code></pre>
</blockquote>
<pre><code>numList.push(window.prompt("Please enter a whole number"));
</code></pre>
<h1>You should definitely work on your code style to make it better readable</h1>
<h3>Use indents</h3>
<blockquote>
<pre><code>while(numList.length &lt; 5){
numList.push(window.prompt());
}
</code></pre>
</blockquote>
<pre><code>while(numList.length &lt; 5){
    numList.push(window.prompt());
}
</code></pre>
<h3>Leave whitespaces before braces</h3>
<blockquote>
<pre><code>numList.forEach(function(element){
    if (element % 2 === 0){ 
        evenNumbers.push(element);
    }
})
</code></pre>
</blockquote>
<pre><code> numList.forEach(function(element) {
     if (element % 2 === 0) { 
         evenNumbers.push(element);
     }
 })
</code></pre>
<h3>In my opinion its way better readable if you leave a whitespace within parentheses.</h3>
<p>I personaly dont know many people doing this but try it out maybe it works for you</p>
<blockquote>
<pre><code>numList.forEach(function(element){
    if (element % 2 === 0){ 
        evenNumbers.push(element);
    }
})
</code></pre>
</blockquote>
<pre><code> numList.forEach( function( element ) {
     if ( element % 2 === 0 ) { 
         evenNumbers.push( element );
     }
 } )
</code></pre>
<p>This is especially helpful when working with <strong>many</strong> parentheses ( pseudo code ):</p>
<blockquote>
<pre><code>method(function(method(getter())).setSomething(getSomethingFromSomewhere(somewhere)))
</code></pre>
</blockquote>
<pre><code>method( function( method( getter() ) ).setSomething( getSomethingFromSomewhere( somewhere ) ) )
</code></pre>
<p>As you can see its pretty easy to see which parentheses belong together</p>
<h1>Conclusion</h1>
<p><strong>Before</strong></p>
<blockquote>
<pre><code>var numList = [];
while(numList.length &lt; 5){
numList.push(window.prompt());
}

var evenNumbers = [];

numList.forEach(function(element){
    if (element % 2 === 0){ 
        evenNumbers.push(element);
    }
})
document.write(evenNumbers); 
</code></pre>
</blockquote>
<p><strong>After</strong></p>
<pre><code>let numList = [];

while ( numList.length &lt; 5 ) {
    numList.push( window.prompt() );
}

let evenNumbers = numList.filter(element =&gt; element % 2 === 0);

document.write( evenNumbers ); 
</code></pre>
    </div>