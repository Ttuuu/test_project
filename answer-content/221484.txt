<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>You should not be using <code>mysql_</code> functions anymore as they are deprecated.</li>
<li>Whether you upgrade to <code>mysqli_</code> or <code>PDO</code> is up to you, but you should be using a prepared statement.</li>
<li>By declaring a lookup / translation array which stores database table column names as keys and output labels as values, you can control all of the variable bits of text from a single source.  This will make managing your script much easier and avoid many points where typos/inconsistencies may be difficult to locate.</li>
<li>If <code>GetEmpName()</code> is executing another query, then you should be using a JOIN in your posted query to avoid performing separate/iterated queries.</li>
</ol>

<p>My suggestion with some basic debugging check to make your transition to mysqli smoother:</p>

<p><strong>The lookup array:</strong></p>

<pre><code>$columnsLabels = [
    'ETPK'                                     =&gt; 'ID',
    'switch'                                   =&gt; 'Switch',
    'MemberNames'                              =&gt; 'MembersList',
    'selfCategoryList'                         =&gt; 'Self Category List',
    'AllowProjects'                            =&gt; 'Allow Projects',
    'VerifyAllowProjects'                      =&gt; 'Verify Proj',
    'WhiteBoard'                               =&gt; 'WhiteBoard',
    'ChkEmpProjDays'                           =&gt; 'Chk Emp Proj Days',
    'ChkProjDays'                              =&gt; 'Chk Proj Days',
    'permissionPage'                           =&gt; 'Permissions',
    'MainMenuTop'                              =&gt; 'Main Menu',
    'WhiteBoard_EmpDetail'                     =&gt; 'WhiteBoard_EmpDetail',
    'Entry_WhiteBoard'                         =&gt; 'Entry_WhiteBoard',
    'Proj_StatusEdit'                          =&gt; 'Proj_StatusEdit',
    'Ger_StatusReport'                         =&gt; 'Get_StatusReport',
    'RequestForSwitchEmployee'                 =&gt; 'Switch_request',
    'GetSwitchRequest'                         =&gt; 'Get Switch Request',
    'ProjectQuestionAnswer'                    =&gt; 'Project QuestionAnswer',
    'AllowAllTaskFinishedRequest'              =&gt; 'Allow All Task Finished Request Received',
    'AllowDeadLineInternalView'                =&gt; 'AllowDeadLineInternalView',
    'AllowDeadLineExternalView'                =&gt; 'AllowDeadLineExternalView',
    'AllowITComplainsNotInStockPanel'          =&gt; 'AllowITComplainsNotInStockPanel',
    'AllowITComplainsPendingOrInprogressPanel' =&gt; 'AllowITComplainsPendingOrInprogressPanel',
    'AllowAllITComplainsEdit'                  =&gt; 'AllowAllITComplainsEdit',
    'AllowEditViewOwnITComplains'              =&gt; 'AllowEditViewOwnITComplains'
];
</code></pre>

<p><strong>Processing:</strong></p>

<pre><code>$sql = "SELECT " . implode(',', array_keys($columnsLabels)) . " FROM permissionsinpage WHERE ETPK = ?";

if (!$stmt = $con-&gt;prepare($sql)) {
    echo "Prepare Syntax Error";
} elseif (!$stmt-&gt;bind_param("i", $id) || !$stmt-&gt;execute() || !$result = $stmt-&gt;get_result()) {
    echo "Statement Error";
} elseif (!$row = $result-&gt;fetch_assoc()) {
    echo "No data found for Id: {$id}";
} else {
    echo implode(',', $columnLabels) , "&lt;br&gt;";
    foreach ($row as $column =&gt; $value) {
        if ($column == 'ETPK') {
            $rowOutput[] = "----//------{$value}";
            $rowOutput[] = GetEmpName($value);
        } else {
            $rowOutput[] = "&lt;input type=\"checkbox\" id=\"{$column}\"" . ($value == 1 ? ' checked' : '') . '&gt;';
        }
    }
    echo implode(',', $rowOutput);
}
</code></pre>

<ul>
<li>I am assuming that <code>ETPK</code> is the table's primary key and is unique -- ergo there will either be zero or one row produced by the query.</li>
</ul>
    </div>