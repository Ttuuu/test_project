<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My answer will be similar to Mathias Ettinger, but I just want to explicitate that this is an example of <a href="https://en.wikipedia.org/wiki/Chebyshev_distance" rel="nofollow noreferrer">maximum/Chebyshev distance</a>, and this can simplify your explanation of the code.</p>

<p>Your numbers can be calculated by how far you are to the center, but the distance is measured as the maximum between the horizontal and vertical distances. So the code could be:</p>

<pre><code>def dist(P1, P2):
    x1, y1 = P1
    x2, y2 = P2
    return max(abs(x2-x1), abs(y2-y1))

def palindrome(n, center=(0,0)):
    assert n &lt;= 9

    return '\n'.join(
        ''.join(
            str(dist((x, y), center))
            for x in range(-n, n+1)
        )
        for y in range(-n, n+1)
    )
</code></pre>

<p>This reproduces your code, but if you change the center you can do nice things such as palindrome(3, center=(-2,-2))</p>

<pre><code>1112345
1012345
1112345
2222345
3333345
4444445
5555555
</code></pre>

<p>This code is more general than it needs to, for the sake of explaining the reasoning. You can simplify by saying P2 is always (0,0) and removing the <code>center</code> argument.</p>
    </div>