<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What you want to do is called <em>refactoring</em> - combining similar methods into a single function.</p>

<p>You have two loops-</p>

<pre><code> For softwareCol = 0 To 10
 Next softwareCol

 For softwareCol = 0 To 5
      If Not (softwareCol = 2 Or softwareCol = 4)
 Next softwareCol
</code></pre>

<p>I don't see an easy way to eliminate those loops. </p>

<hr>

<p>Let's focus on what you want to combine</p>

<pre><code>If targetSoftware = cell.Value &amp; " " &amp; cell.Offset(0, 1).Value Then
   cell.Rows.Hidden = False
End If
If targetSoftware = cell.Value &amp; " " Then
   cell.Rows.Hidden = False
End If
</code></pre>

<p>You can do this in a boolean function -</p>

<pre><code>Private Function NeedsToHide(ByVal targetSoftware As String, ByVal firstValue As String, Optional ByVal secondValue As String = vbNullString) As Boolean
    If targetSoftware = firstValue &amp; " " &amp; secondValue Then
        NeedsToHide = False
    Else
        NeedsToHide = True
    End If
End Function
</code></pre>

<p>So now it's just</p>

<pre><code> For softwareCol = 0 To 10
    'etc
    cell.Rows.Hidden = NeedsToHide(targetSoftware, cell.Value, cell.Offset(0, 1).Value)
 Next softwareCol

 For softwareCol = 0 To 5
    'etc
     cell.Rows.Hidden = NeedsToHide(targetSoftware, cell.Value)
 Next softwareCol
</code></pre>
    </div>