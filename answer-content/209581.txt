<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a very good attempt for the first Python venture!</p>

<hr>

<p>Here is what I would consider improving:</p>

<ul>
<li><p><strong>stylistic / <code>PEP8</code></strong></p>

<ul>
<li><em>naming</em>. In Python, it is recommended to use <a href="https://www.python.org/dev/peps/pep-0008/#id36" rel="nofollow noreferrer"><code>lower_case_with_underscores</code> notation</a>. Your function and variable names are inconsistent and there is a mix of styles - e.g. <code>cur_startDateString</code> follows both <code>camelCase</code> and <code>lower_case_with_underscores</code></li>
<li><em>the user of blank lines</em>. In Python, it is recommended to have <a href="https://www.python.org/dev/peps/pep-0008/#blank-lines" rel="nofollow noreferrer">2 blank lines between top-level blocks of the code</a> and have an extra new-line at the end of the script</li>
<li><p><em>the use of whitespaces</em>. Watch for whitespaces after commas in expressions, e.g.:</p>

<pre><code>for idx,entry in enumerate(gameEntries,start=1):
   ^                              ^
</code></pre></li>
<li><p><em>import grouping and order</em>. See <a href="https://www.python.org/dev/peps/pep-0008/#imports" rel="nofollow noreferrer">Imports section of the PEP8</a></p></li>
<li>parenthesis around the <code>return</code> value are redundant</li>
<li>consider adding docstrings explaining what your functions are about. For instance, <code>getLatestFilename</code> would benefit from a note about how does it define which file is the latest. And, <code>parseUrl</code> is not really easy to understand just by reading the code</li>
<li>if you are using Python 3.5+, consider adding <a href="https://stackoverflow.com/questions/32557920/what-are-type-hints-in-python-3-5">Type Hints</a></li>
</ul></li>
<li><p><strong>Design and modularity</strong></p>

<ul>
<li>it is a good thing that you tried to logically separate scraping from parsing</li>
<li>I would also separate parsing and dumping the results into a CSV file</li>
</ul></li>
<li><p><strong>HTML Parsing</strong></p>

<ul>
<li>if performance is a concern, consider switching from <code>html.parser</code> to <code>lxml</code> - see <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-a-parser" rel="nofollow noreferrer">"Installing a Parser"</a> section of the documentation</li>
<li><p>you could also improve performance of the parsing stage by using a <code>SoupStrainer</code> which allows you to parse the desired part of the HTML tree in the first place:</p>

<pre><code>from bs4 import BeautifulSoup, SoupStrainer

parse_only = SoupStrainer(class_='entry')
soup = BeautifulSoup(page.text, 'lxml', parse_only=parse_only)
</code></pre></li>
<li><p><code>.findNext()</code> is deprecated in favour of <code>.find_next()</code></p></li>
</ul></li>
<li><p><strong>Other</strong></p>

<ul>
<li><p><code>getUrl()</code> method feels a little bit overcomplicated and you can definitely improve its readability and simplify it at the same time. Plus, I would make it return the URL as a string and not as a list to avoid any extra external code needed to make it a string. If you are using Python 3.6+, f-strings would be handy:</p>

<pre><code>def get_url(filename: str) -&gt; str:
    """Constructs a complete URL based on the filename and current date."""
    current_interval = parse_url(filename)

    now = datetime.datetime.now()

    return f"https://gematsu.com/{now.year}/{now.month}/media-create-sales-{current_interval}"
</code></pre>

<p>Having the complete URL string with placeholders helps to see what the end result might look like.</p></li>
</ul></li>
</ul>

<p>Note that most of the PEP8 violations mentioned above could be caught by running a linter (like <a href="http://flake8.pycqa.org/en/latest/" rel="nofollow noreferrer"><code>flake8</code></a>, or <a href="https://www.pylint.org/" rel="nofollow noreferrer"><code>pylint</code></a>) against your code.</p>
    </div>