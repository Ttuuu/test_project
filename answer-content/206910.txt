<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Trying to explain @Snowhawk's answer in even simpler terms,
The solution can be handled using prefix sum.
Prefix sum calculates the summ of all integers before it and store the result in same or different array.</p>

<p>For the query a b k (a = left edge, b = right edge, k = no. to add)</p>

<p>Here, we'll add the 3rd no of query, k to the left boundary, a. Therefore when we calculate the prefix sum, all nos to its right will have k added to them.</p>

<p>However, k should be added only till the right edge, b, meaning the b+1th element onwards, it should not be be added. To make this happen, when we add k to the left edge, we'll also subtract it from the right edge + 1. Therefore, all no.s to the right will not have k when the prefix sum was calculated as the net effect will be +k (from the left edge) + -k (from the element next to the right edge).</p>

<p>For a 10 elemnt array with following query:<br>
1 5 3<br>
4 8 7<br>
6 9 1<br></p>

<pre><code>      | 1| 2| 3| 4| 5| 6| 7| 8| 9|10|
      -------------------------------
query | 0| 0| 0| 0| 0| 0| 0| 0| 0| 0|    // Initial Array
      -------------------------------
1 5 3 | 3| 0| 0| 0| 0|-3| 0| 0| 0| 0|    // Added 3 to 1 and -3 to 6 to neutrilize the net effect 6th element onwards when prefix sum is calculated
      -------------------------------
4 8 7 | 3| 0| 0| 7| 0|-3| 0| 0|-7| 0|
      -------------------------------
6 9 1 | 3| 0| 0| 7| 0|-2| 0| 0|-7|-1|   // Value of the 6th index was -3, added 1 to get -2 there
      -------------------------------
res:  | 3| 3| 3|10|10| 8| 8| 8| 1| 0|   // This is the prefix sum, 3+7 = 10, 10-2 = 8 and so on
</code></pre>
    </div>