<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Trim redundant <code>else</code></h2>

<p>...here:</p>

<pre><code>if len(self.main_deck) &gt; 60:
    return "You have to many cards in your deck (60)."
else:
</code></pre>

<p>The <code>else</code> isn't needed because you've already returned. This pattern happens in a few places.</p>

<h2>Lose some loops</h2>

<p>This:</p>

<pre><code>        card_counter = 0
        for card in self.main_deck:
            if card == card_to_add:
                card_counter += 1
</code></pre>

<p>can be</p>

<pre><code>card_counter = sum(1 for card in self.main_deck if card == card_to_add)
</code></pre>

<p>If this happens often, you may want to do some preprocessing in a different method to make this easier. As in the comments, it shouldn't replace the sequential-format deck, but it could supplement it:</p>

<pre><code>from collections import Counter
card_counts = Counter(main_deck)
# ...
card_counter = card_counts[card_to_add]
</code></pre>

<h2>Don't <code>eval</code></h2>

<p>Just don't. There's never a good reason. Make <code>effects</code> an iterable of functions, and simply call them.</p>
    </div>