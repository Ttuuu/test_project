<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think the initial calculation between the two dates looks cleaner using a generator expression + sum. The posterior correction is easier to understand if you do the intersection of hours by thinking in seconds of the day</p>

<pre><code>from datetime import datetime
from datetime import timedelta

START_HOUR = 8 * 60 * 60
STOP_HOUR = 17 * 60 * 60
KEEP = STOP_HOUR - START_HOUR

def seconds_between(a, b):
    days = (a + timedelta(x + 1) for x in xrange((b - a).days))
    total = sum(KEEP for day in days if day.weekday() &lt; 5)

    aseconds = (a - a.replace(hour=0, minute=0, second=0)).seconds
    bseconds = (b - b.replace(hour=0, minute=0, second=0)).seconds

    if aseconds &gt; START_HOUR:
        total -= min(KEEP, aseconds - START_HOUR)

    if bseconds &lt; STOP_HOUR:
        total -= min(KEEP, STOP_HOUR - bseconds)

    return total
</code></pre>
    </div>