<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>logical flaw</h1>

<p>If an exception happens, your key could remain locked.</p>

<p>You use</p>

<pre><code>def addToCart(filename, username):
    ableToLock = memcache.add(filename, username)
    if ableToLock:
        # ableToLock can happen if the file is still present
        # or if it was already processed.
        if os.file.ispath(filename):
            # I have a lock and file exists. Think of Cart as a
            # JS Object from where you can pick items to "process".
            return "Added To Cart"
        else:
            # I have a lock but looks like file was processed already.
            # So removing the residual "key" created.
            memcache.delete(filename)
            return "Processed by another user." 
    else:
        ...



def process(source):
    shutil.move(source, destination)
    # filename =&gt; source 
    memcache.delete(filename)
</code></pre>

<p>What if <code>shutil.move</code> throws an exception? Or <code>print</code>?</p>

<p>Better would be</p>

<pre><code>if ableToLock:
    try:
        # ableToLock can happen if the file is still present
        # or if it was already processed.
        if os.file.ispath(filename):
            # I have a lock and file exists. Think of Cart as a
            # JS Object from where you can pick items to "process".
            return "Added To Cart"
        else:
            return "Processed by another user." 
    finally:
        memcache.delete(filename)
</code></pre>
    </div>