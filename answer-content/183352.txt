<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Please add a docstring.</p>

<p><code>Simplify_by_avg_weighted</code> might be named <code>points_near_centroid</code> (or <code>_center</code> if you prefer).</p>

<p>Please initialize with <code>L = math.inf</code>, to clarify your intent.</p>

<p>Rather than a variable length list for <code>[x,y,1]</code>, please store it as a 3-tuple <code>(x, y, 1)</code>, or more naturally as a pair <code>((x, y), 1)</code>, where 1 is a count rather than a spatial coordinate.</p>

<pre><code>    for i in xrange(len(points)):
</code></pre>

<p>This would more naturally be expressed as <code>for pt in points:</code>.</p>

<p>Now we come to the heart of the matter. It's a little hard to evaluate the code in the loop, as it seems to differ from your English language description, and it's hard to declare a "violates spec" bug when there's no docstring offering a spec.</p>

<p>When you assign x, y, they might better have names like <code>x_centroid</code>. And since z is not a spatial coordinate, it would more appropriately be named <code>count</code>. It's fine that you don't take square root, but d should have a name like <code>dsq</code> for distance squared.</p>

<p>To "return those points that are within delta of the mean position", does the interpreter even need to loop? It should suffice to compute centroid of the whole cloud (numpy does the looping), then select on distance (more numpy looping).</p>
    </div>