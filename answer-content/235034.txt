<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Needless <code>for</code> loop usage</strong>     </p>

<p><code>for</code> loops in Python are heavy. Using <code>for</code> loops needlessly leads to performance loss. For instance, rather than doing this:</p>

<pre><code>for j in range(m):
    if mat[i[0]-1][j]=="0" and mat[i[1]-1][j]=="0":
</code></pre>

<p>You could just count the number of ones using <code>int()</code>, <code>bin()</code> and <code>|</code> as below:</p>

<pre><code>orResult = int(mat[i[0] - 1], 2) | int(mat[j[0] - 1], 2)
numberOfSubjects = bin(orResult).count("1")
</code></pre>

<p><strong>Confusing usage of <code>count</code></strong></p>

<p>Rather then counting the number of <code>0's</code> and then subtracting it from <code>m</code>, you could initialize <code>count</code> to <code>m</code> and then decrement it each time <code>0's</code> are encountered. Then, in the end, <code>count</code> would denote the number of <code>1's</code>.</p>

<p><strong>Variable naming</strong></p>

<p>Of course, I had to mention this. Variable names are not self-explanatory and it's difficult to understand what they represent exactly. For instance, <code>z</code> means nothing meaningless to me. Please come up with better names. For instance, change</p>

<pre><code>a = combinations(range(1,n+1),2)  
</code></pre>

<p>To</p>

<pre><code>indexPairs = combinations(range(1,n+1),2)  
</code></pre>

<p><strong>Optimised Code</strong></p>

<pre><code>from itertools import combinations

nm = input().split()
n = int(nm[0])
m = int(nm[1])

attendees=[]
for i in range(n):
    attendees.append(input()) 
indexPairs = combinations(range(1,n+1),2)  

maxNumberOfSubjects = 0
numberOfBestTeams = 0
for pair in indexPairs:
    orResult = int(attendees[pair[0] - 1], 2) | int(attendees[pair[1] - 1], 2)
    numberOfSubjects = bin(orResult).count("1")
    if maxNumberOfSubjects == numberOfSubjects:
        numberOfBestTeams += 1
    elif maxNumberOfSubjects &lt; numberOfSubjects:
        maxNumberOfSubjects = numberOfSubjects
        numberOfBestTeams = 1 

print (maxNumberOfSubjects)
print (numberOfBestTeams) 
</code></pre>

<p>I tested the code and it passed all the test cases.</p>
    </div>