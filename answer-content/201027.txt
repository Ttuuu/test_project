<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <code>paint</code> and <code>graphics</code> methods could use an upgrade. I reworked them and <em>eliminated 661 lines of code</em> to try to handle the DRY principle.</p>

<pre><code>private void paint() {
    int max = 8;
    for (int row = 0; row &lt; max; row++) {
        for (int i = 0; i &lt; flips; i++) {
            System.out.print(getCard(Integer.toString(set[i]), row) + "  ");
        }
        for (int j = flips; j &lt; max; j++) {
            System.out.print(getEmptyCard(row) + " ");
        }
        System.out.println();
    }
}

private String getEmptyCard(int row) {
    String horizontalBorder = " -------- ";
    String a = "|/\\/\\/\\/\\|";
    String b = "|\\//\\/\\/\\|";
    String c = "|        |";
    if (row == 0 || row == 7) return horizontalBorder;
    else if (row == 1 || row == 6) return c;
    else if (row == 2 || row == 4) return a;
    else return b;
}

private String getCard(String card, int row) {
    String horizontalBorder = " -------- ";
    String body = "|        |";
    String top = String.format("|%-8s|", card);
    String bottom = String.format("|%8s|", card);
    if (row == 0 || row == 7) return horizontalBorder;
    else if (row == 1) return top;
    else if (row == 6) return bottom;
    else return body;
}
</code></pre>

<p>I also worked out another example of your <code>Deck</code> class. Instead of hardcoding the values in an array you could loop it into an <code>ArrayList</code>. Also, Java has a built in function to shuffle collections.</p>

<pre><code>public class Deck {

    private List&lt;Integer&gt; deck;

    public Deck() {
        initDeck();
    }

    private void initDeck() {
        deck = new ArrayList&lt;&gt;();
        for (int i = 0; i &lt; 2; i++) {
            for (int j = 1; j &lt;= 13; j++) {
                deck.add(j);
            }
        }
        Collections.shuffle(deck);
    }

    public int draw() {
        int top = deck.get(deck.size() - 1);
        deck.remove(deck.size() - 1);
        return top;
    }

}
</code></pre>
    </div>