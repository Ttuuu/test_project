<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code is written in a hybrid C/C++ style. For instance your destructor has a <code>delete</code> (I can't find where the corresponding <code>new</code> is) and that is basically never needed. Use a <code>std::vector</code> to store array-like data.</p>

<p>Also you do a lot of parameter passing like <code>void Nbody::update_position(Particle *p)</code>. Use references instead, and use <code>const Particle &amp;p</code> if the particle is only read.</p>

<p>Otherwise it looks like an n-body code to me. It's quadratic rather than something more sophisticated/efficient, but that's probably ok.</p>

<p>Oh, I've found the <code>new</code>: you have
<code>Particle *p = new Particle[n];</code> 
in the class definition, but <code>n</code> is uninitialized. That is probably undefined behavior, definitely extremely dangerous, and most likely completely wrong.</p>

<p>Don't use <code>new</code> to allocate an array! Use <code>std::vector</code>, as follows:</p>

<pre><code>std::vector&lt;Particle&gt; the_particles;
public:
  Particles(int n) : the_particles(vector&lt;Particle&gt;(n)) {}
}```
</code></pre>
    </div>