<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The comments seem redundant, I'm assuming they're just for this review, if not, I would remove them.  The basically just duplicate what the code says.</p>

<p>Your function names seem misleading.  <code>filterBySize</code> seems to be filtering by data usage.  <code>filterByDate</code> seems to be filtering by the day of the week.  It would be better if they said what they did.</p>

<p>Your filtration functions contain two branches, both of which return.  Generally you  would only wrap the <code>if</code> side.  Everything that doesn't trigger the <code>if</code> would be the <code>else</code>... </p>

<pre><code>CustomerData customerData = new CustomerData(Customer);
if (customerData.getUsage() &gt; USAGE_THRESHOLD) {
    return true;
}
// The else is implicit... so just noise
return false;
</code></pre>

<p>For me, there's an awful lot of logging across these methods.  Maybe that's what's required by your processes, but it seems excessive.  We don't have the context for how the code is going to be called, however I would expect that 'USAGE_THRESHOLD' is the same for every invocation, do you really need to log it for each custom to say if they are above/below it?  The current day of the week is the same for each invocation, again do you really need to output it for every customer that's selected?   Each of your filters logs the specific reason that the customer has been rejected  do you need to log the generic message at the top level saying they are being skipped.  If you're looking for reuse, then maybe your <code>filterByDate</code> method shouldn't mention the <code>import</code>, that way it could be reused to filter other things (export perhaps) in the future...</p>

<p>As an aside, I'm not sure about this:</p>

<pre><code>CustomerData customerData = new CustomerData(Customer);
</code></pre>

<p>It makes me wonder what the constructor for <code>CustomerData</code> is doing... If the information needed for the filtration isn't in the <code>Customer</code>, then is it reading that extra data in the the constructor for <code>CustomerData</code>?  That seems wrong...</p>

<p>Another small issue is naming.... variables should start with lower case in java.... <code>CustomerUnit Customer</code> should be <code>CustomerUnit customer</code>, you can see it's confusing the code preview...</p>

<p>It would also be interesting to see how <code>invokeRequestByCustomer</code> is being called... It looks a lot like it could fit into a stream something like:</p>

<pre><code>allCustomers.stream()
    .filter(CustomerFilters::byUsage)
    .filter(CustomerFilters::byDay)
    .foreach(c-&gt;invoke(c));
</code></pre>
    </div>