<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My preferred way to solve the mutable immutable, is to just us a closure. This has the benefit that you don't have to pass <code>currentDepthContainer</code>, and you can return just the maximum at the end.</p>

<p>Note I have changed your variable names to be Pythonic too.</p>

<pre class="lang-py prettyprint-override"><code>def maximum_depth(root):
    def inner(node, depth):
        nonlocal max_depth

        depth += 1
        if depth &gt; max_depth:
            max_depth = depth

        for child in node.children:
            if child is not None:
                inner(child, depth)

    max_depth = 0
    inner(root, 0)
    return max_depth
</code></pre>

<p>But really, I don't think that your solution is that great readability wise. As you could just return the maximum depth so far and then just use <code>max</code>.</p>

<pre class="lang-py prettyprint-override"><code>def maximum_depth(node, depth=0):
    depth += 1
    return max(
        (
            maximum_depth(child, depth)
            for child in node.children
            if child is not None
        ),
        default=depth,
    )
</code></pre>
    </div>