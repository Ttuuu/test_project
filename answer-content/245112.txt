<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code you wrote works and satisfies the requirement of a quiz app. However, you can simplify and handle a few edge cases:</p>
<ul>
<li>For every new question, you need to duplicate 10 lines of question* method. You can create encapsulate the question, options and the correct answer's index in a class and create an array to write all the questions and answers. Think about the future requirement to read the list of question/answers from a input file or a database.</li>
</ul>
<pre><code>class QuestionAnswer {
    String question;
    String optA;
    String optB;
    String optC;
    String optD;
    String correctAns;
    //all args constructor
}

static QuestionAnswer[] questions = {
    new QuestionAnswer("What is the correct syntax..", "echo (hello world)", "console..", "sysout", "printf", "C"),
    new QuestionAnswer("What java is short for ...", "echo (hello world)", "console..", "sysout", "printf", "C"),
     //... all questions
    };
</code></pre>
<p>You can then create a single method to handle all question and answers</p>
<pre><code>// loop over questions array and call the displayAndCheckAnswer method 
        int correctResults = 0;
        for (int i = 0; i &lt; questions.length; i++) {
            if (displayAndCheckAnswer(questions[i], i, questions.length)) {
                correctResults++;
            }
        }


    public static boolean displayAndCheckAnswer(QuestionAnswer qna, int index, int total) {
        String answer = JOptionPane.showInputDialog(null, "Question" + (index + 1) + "of " + total + ":\n" +
                qna.question +
                "A. " + qna.optA + "\n" +
                "B. " + qna.optB + "\n" +
                "C. " + qna.optC + "\n" +
                "D. " + qna.optD);

        return answer.equalsIgnoreCase(qna.correctAns);
    }
</code></pre>
<ul>
<li>Handle edge cases like - what if user enters space at the end of the their result eg : "A  ".</li>
<li>Better UI: You can render the questions and answers in JPanel and display a running correct answer count.</li>
</ul>
    </div>