<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some answer to your explicit questions:</p>
<h3>1. <code>unsigned int</code></h3>
<ul>
<li>I personally do not like such typedefs purely for brevity; however they are fine for defining types like <code>distance</code> if you ever think of changing it to <code>double</code></li>
<li>Unsigned vs. signed and compiling warning-free - this is already spoiled by the libraries. Use unsigned only for bit fiddling.  Listen to the <a href="https://channel9.msdn.com/Events/GoingNative/2013/Interactive-Panel-Ask-Us-Anything" rel="nofollow noreferrer">C++ gurus discussing this</a> (minute 12:15, minute 42:40 and 1:02:50)</li>
</ul>
<h3>5. underscores or marking members</h3>
<ul>
<li>When reading code it is useful to have members marked as such. Especially constructors with params named like the members may be error-prone.</li>
<li><code>_[a-z]</code> is fine for members. but it is reserved in global namespace. Also  _[_A-Z] is reserved (see <a href="//stackoverflow.com/a/228797">answer to <em>"What are the rules about using an underscore in a C++ identifier?"</em></a>). So a leading underscore is safe here; it depends on your coding standards whether it is allowed.</li>
</ul>
<h3>4. <code>std::max_element</code></h3>
<p>This does for a range what <code>std::max</code> does for two values: delivering the biggest by making use of "less than" comparison. if your type is not comparable out of the box or if you want to override the default comparison you can provide a custom <code>Compare</code> which must be implemented as custom "less than". If you provide a "greater than" the sort order is reversed. Your <code>max_element</code> guarantees a maximum <code>y</code> not considering <code>x</code> values. If your data set contains coordinates with the same value for <code>y</code> but different <code>x</code> values those coordinates are equal from the point of view of the comparison function. The first of those equally max <code>y</code> coordinates is returned.</p>
    </div>