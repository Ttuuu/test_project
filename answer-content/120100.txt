<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It would be better to do this with a <a href="http://webdesign.about.com/od/userstylesheets/a/aa010906.htm" rel="nofollow noreferrer">user style</a>, e.g. using the <a href="https://github.com/openstyles/stylus" rel="nofollow noreferrer">Stylus</a> extension, like this:</p>

<pre class="lang-css prettyprint-override"><code>.rep, .reputation, .reputation-score {
    visibility: hidden;
}
</code></pre>

<p>One advantage of user styles over scripts is that they're applied as soon as the page starts to load, so you won't see the rep counts flicker briefly while the page is loading.  Also, user styles will automatically apply also to new dynamic content loaded e.g. via Ajax (such as new answers posted while you're viewing the page).</p>

<p>If you insist on using a user <em>script</em>, it's possibly to emulate user styles by using <a href="http://wiki.greasespot.net/Metadata_Block#.40run-at" rel="nofollow noreferrer"><code>@run-at document-start</code></a> and injecting a custom <code>style</code> element into the page early, like this:</p>

<pre class="lang-javascript prettyprint-override"><code>// ==UserScript==
// @name        Hide Stack Exchange reputation (demo)
// @namespace   http://vyznev.net/
// @description A demonstration of using style injection to emulate user styles
// @author      Ilmari Karonen
// @version     1.0
// @license     Public domain
// @match       *://*.stackexchange.com/*
// @match       *://*.stackoverflow.com/*
// @match       *://*.superuser.com/*
// @match       *://*.serverfault.com/*
// @match       *://*.stackapps.com/*
// @match       *://*.mathoverflow.net/*
// @match       *://*.askubuntu.com/*
// @homepageURL http://codereview.stackexchange.com/a/120100
// @grant       none
// @run-at      document-start
// ==/UserScript==

var css =
    ".rep, .reputation, .reputation-score {\n" +
    "    visibility: hidden;\n" +
    "}\n";

var style = document.createElement('style');
style.textContent = css;
(document.head || document.documentElement).appendChild(style);
</code></pre>

<p>I use this method in my <a href="https://stackapps.com/questions/4486/the-stack-overflow-unofficial-patch-soup">Stack Overflow Unofficial Patch (SOUP)</a> user script (which combines a bunch of more or less minor interface bugfixes and improvements together) to let me efficiently apply both CSS-only and JS-based tweaks from a single user script.</p>

<p>One detail worth noting is that styles injected this way will generally end up being included <em>before</em> any actual site style sheets on the page, which means that they will be overridden by site CSS selectors of equal specificity.  In some cases, you may need to use <code>!important</code> and/or various <a href="https://stackoverflow.com/questions/35062256/select-elements-with-randomly-generated-ids-with-css/35065825#35065825">specificity hacks</a> to make sure that your custom styles will take precedence.</p>
    </div>