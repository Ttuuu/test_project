<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>According to the Python documentation <a href="https://docs.python.org/3.6/library/random.html#alternative-generator" rel="nofollow noreferrer"><code>random.SystemRandom()</code></a> uses <a href="https://docs.python.org/3.6/library/os.html#os.urandom" rel="nofollow noreferrer"><code>os.urandom()</code></a> which</p>

<blockquote>
  <p>[...] returns random bytes from an OS-specific randomness source. The returned data should be unpredictable enough for cryptographic applications, though its exact quality depends on the OS implementation.</p>
</blockquote>

<p>Given that your <a href="https://en.wikipedia.org/wiki//dev/random" rel="nofollow noreferrer">system</a> does a good enough job, the output of <code>random.SystemRandom()</code> should be indistinguishable from true randomness, and thus be good enough for your purpose.</p>

<p>Also, if the randomness provided by your system is indistinguishable from true randomness, shuffling does not add anything to the randomness of your output (even if you had also used a cryprographically secure RNG for shuffling).</p>

<p>In this case your code could be reduced to</p>

<pre><code>import random

def randomWeightedSelection(choices, weights):
    rng = random.SystemRandom()

    indices = list(range(len(choices)))

    selected_index = rng.choices(indices, weights = weights, k = 1)[0]

    return [choices[selected_index], selected_index]
</code></pre>
    </div>