<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Performance</h2>

<p>You create a new <code>Scanner</code> for every guess. this is unnecessary. the same scanner can be used to read all user input. the scanner should be closed only at the end of the program. and if you adopt that, you can also use <a href="https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html" rel="nofollow noreferrer">Java 7 try-with-resources</a> feature. it is a safe(r) way to open and process external resources.</p>

<h2>JDK library features</h2>

<ol>
<li><p>in order to fill an array with the same character, you can use <a href="https://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#fill(char%5B%5D,%20char)" rel="nofollow noreferrer"><code>Arrays.fill()</code></a> method: <code>Arrays.fill(censoredWordArray, '_');</code> and you do not need to keep the String representation of the array, just print the string value to the user. However, FYI, Java 11 gives us <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#repeat(int)" rel="nofollow noreferrer"><code>String::repeat</code></a> to fill a String with one character: <code>String censoredWord = "_".repeat(word.length());</code></p></li>
<li><p>I assume this is CS course homework, so I do not know if this comment is applicable. However, Java 8 (which has been around for over 5 years) gave us stream processing of collections, which, compared to for loops, is a more expressive (and sometimes performant) way to iterate over collections and arrays. for example, the loop in <code>showProgress</code> can be re-written like this   </p>

<pre><code>IntStream.range(0, wordArray.length)
    .filter(i -&gt; wordArray[i] == letter)
    .findFirst()
    .ifPresent(i -&gt; censoredWordArray[i] = letter);
</code></pre></li>
</ol>

<h2>Best practices</h2>

<p>Avoid magic numbers and literals: 
<code>private static final String EMPTY_LETTER = "_";</code><br>
not only it makes the code more readable, it will eliminate typo bugs in case you need to specify the literal in multiple places in the code. </p>
    </div>