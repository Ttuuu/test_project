<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all you should use static methods and properties only
when there is good reason to do so. Generally you should default to non-static.</p>

<ol>
<li><code>$path</code> property can be <code>const</code> because <code>private static</code> doesn't say whether it is immutable or not.</li>
<li><p>I think you shouldn't order resource files at all. You already have resource name. All you should do is match something like <code>$resource.'.'</code> and include file if such exists. Also if you did <code>require_once</code> i don't see the need to check for <code>class_exists()</code> etc.</p></li>
<li><p>I have never written autoloader but my instinct tells me that if you failed to find resource file then you should throw exception.</p></li>
<li><p>Altering array inside foreach is murky and its good to avoid such practices.</p></li>
</ol>

<p>PS: Personally I haven't seen any php project/library utilizing hashtag comments. It might be my OCD but #...# draws all my focus so my suggestion is to use either: // for line comments and /*...*/ for block comments.</p>

<p><strong>Update:</strong>
What I had in mind when writing point 2 is something like this:</p>

<pre><code>    foreach(self::$resource_files as $file_key =&gt; $file)
    {
        // Check if resource matches file name
        if (strpos($file, $resource.'.') !== false ) {
            unset(self::$resource_files[$file_key]);

            require_once $file;
        }
    }
</code></pre>
    </div>