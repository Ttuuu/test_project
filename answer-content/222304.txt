<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can use <code>np.cumsum</code> and <code>np.minimum.accumulate</code> (which I <a href="https://stackoverflow.com/a/41526917">found from this post</a>).</p>

<p>Another way to look at what you want is you want the cumsum.</p>

<p>If the value goes below zero then you want to subtract a value to get it to zero, this value is itself. This means that you just need a running minimum. This is as you've subtracted the value from an earlier value so the effect propagates in your version but not in <code>np.cumsum</code>.</p>

<p>You also want to start this <code>minumum</code> from <code>0</code>.</p>

<pre><code>def pos_diff_cum_sum(flow_in, flow_out):
    delta = np.cumsum(flow_in - flow_out)
    return delta - np.minimum.accumulate(np.append([0], delta))[1:]
</code></pre>

<hr>

<p>For reference below.</p>

<pre><code>def fn(in_, out):
    delta = np.cumsum(np.array(in_) - np.array(out))
    print(delta)
    output = delta - np.minimum.accumulate(np.append([0], delta))[1:]
    print(np.minimum.accumulate(np.append([0], delta))[1:])
    print(output)
</code></pre>

<p>If you have an input that only increases then you can just use use <code>np.cumsum</code>:</p>

<pre><code>&gt;&gt;&gt; fn([1, 1, 1, 1, 1], [0, 0, 0, 0, 0])
[1 2 3 4 5]
[0 0 0 0 0]
[1 2 3 4 5]
</code></pre>

<p>However if the number goes negative you must subtract all values after it goes negative by that value. This is as the single <code>-=</code> affects the rest of the input in the OP:</p>

<pre><code>&gt;&gt;&gt; fn([1, 0, 0, 0, 0], [0, 1, 1, 0, 0])
[ 1  0 -1 -1 -1]
[ 0  0 -1 -1 -1]
[1 0 0 0 0]
</code></pre>

<p>This means you must subtract them even if the value becomes positive again:</p>

<pre><code>&gt;&gt;&gt; fn([1, 0, 0, 1, 1], [0, 1, 1, 0, 0])
[ 1  0 -1  0  1]
[ 0  0 -1 -1 -1]
[1 0 0 1 2]
</code></pre>

<p>If more numbers go negative then you have to decrease by these amounts too:</p>

<pre><code>&gt;&gt;&gt; fn([1, 0, 0, 0, 0], [0, 1, 1, 1, 1])
[ 1  0 -1 -2 -3]
[ 0  0 -1 -2 -3]
[1 0 0 0 0]
</code></pre>

<p>This allows the value to go positive again if it needs to:</p>

<pre><code>&gt;&gt;&gt; fn([1, 0, 0, 0, 1], [0, 1, 1, 1, 0])
[ 1  0 -1 -2 -1]
[ 0  0 -1 -2 -2]
[1 0 0 0 1]
</code></pre>
    </div>