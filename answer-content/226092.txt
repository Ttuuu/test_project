<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>    divisors = list(range(2,range_max+1,1)) #We ignore 1 because 1 is 
                                            #divisible by everything
</code></pre>
</blockquote>

<p>The comment is wrong. 0 is divisible by everything. 1 is divisible into everything.</p>

<hr>

<blockquote>
<pre><code>    x = 1
    while True:
        x += 1
        check = divisible(x, divisors)
        if check: return x
</code></pre>
</blockquote>

<p>I think it would be more Pythonic to use <code>itertools.count(2)</code>. In fact, I'd tend towards the one-liner</p>

<pre><code>    return next(iter(x for x in count(2) if divisible(x, divisors)))
</code></pre>

<hr>

<blockquote>
<pre><code>def divisible(n, lst):
    #Pass a number to compare to a list to see if the number 
    #is divisible by all elements in list
    return all(map(lambda y: n%y == 0, lst))
</code></pre>
</blockquote>

<p>Again, I think the more Pythonic approach is a comprehension:</p>

<pre><code>    return all(n%y == 0 for y in lst)
</code></pre>

<p>And I'd rename <code>lst</code> to <code>divisors</code>. The meaning of the value is more important than its type.</p>

<hr>

<blockquote>
  <p>I have seen multiple questions on this problem but none seem to answer my specific question.</p>
</blockquote>



<blockquote>
  <p>. I understand that iterating in increments of 1 is not the fastest, but I cant think of any other way.</p>
</blockquote>

<p>I've also seen multiple questions on this problem, and as I recall, all of them answered that question. So rather than repeat them all, what I'll offer is that if you list five questions which don't, I'll list five that do.</p>
    </div>