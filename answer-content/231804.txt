<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'll second what Gloweye said in this answer, namely that <code>assert</code> should not be used for control flow.</p>

<hr>

<p>This solution combines many of the other answers:</p>

<pre class="lang-py prettyprint-override"><code>def smallest_character(str_in: str) -&gt; str:
    min_ord = 128
    for curr_char_ord in (ord(c) for c in str_in):
        if curr_char_ord &gt; 127:
            raise ValueError(f'Character {chr(curr_char_ord)} in smallest_letter() arg has ord value {curr_char_ord} '
                             f'which is above the allowed maximum of 127')
        else:
            min_ord = min(min_ord, curr_char_ord)
    return chr(min_ord)
</code></pre>

<hr>

<p>This solution uses <code>min()</code> and <code>max()</code>:</p>

<pre class="lang-py prettyprint-override"><code>def smallest_character(str_in: str) -&gt; str:
    min_val = min(str_in)
    max_val = max(str_in)
    if ord(max_val) &gt; 127:
        raise ValueError(
            f'Character {max_val} in smallest_letter() arg has ord value {ord(max_val)} which is above the allowed '
            f'maximum of 127')
    else:
        return min_val
</code></pre>
    </div>