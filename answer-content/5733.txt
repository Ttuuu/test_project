<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>First the C++ code:</h3>
<pre><code>class elevator{
    liftbox box;

class liftbox{
    elevator ele;
</code></pre>
<p>This is not going to work as you expect it.<br>
Each class contains an object of the other type means that both will have completely different objects. If you want them to refer back to each other in some sort of parent child relationship then one of them needs to be a reference or pointer to the parent.</p>
<pre><code>const int LEVEL;
</code></pre>
<p>Traditional all caps is reserved for macros. Break the tradition at your own cost.</p>
<pre><code>int getCurrLevel();
int getDirection();
</code></pre>
<p>Methods that return information about the state of the object without actually changing the state should be marked const.</p>
<pre><code>public/private
</code></pre>
<p>I am not sure I agree with some of the decisions about making methods public. I think very few objects should get to interact with these systems sometimes friendship can help in limitting access. (Now friendship increases coupling with the friend, but if it decreases the external public interface it will decrease coupling with objects that have no rights to modify the object). Anyway I would expect to see a justification as to why methods are public. If anybody should be able to call them fine. If nobody but another object should call them you need to make a better case.</p>
<h3>Design</h3>
<p>Looking at it from a design perspective.</p>
<p>Not sure I see the distinction between an elevator/liftbox</p>
<p>In big buildings some lifts do not go to all floors.</p>
<p>One of the things about elevators is that they usually come in banks and do not operate independently. For really big building multiple banks will be combined but will work independently (unless there is some major emergency). How are you going to organize your code so that multiple lifts(sorry elevators) can work together. Also I want to see how you can decouple the elevator object from bank control logic. (ie I don't expect to see all the control logic in the bank, I would like to see control logic in the elevator but decision logic in bank). But if their are multiple banks to coordinate I want the logic for a higher level control.</p>
<p>The real meat of this problem is how to de-couple the objects from each other. What patterns do you think are being used here.</p>
<h2>Updated Code:</h2>
<p>Not sure you understand a bank of elevators work (based on the code).</p>
<blockquote>
<p>A bank is a group of 2 or more elevators that work together to serve a set of floors.</p>
</blockquote>
<p>I still do not see the pattern you are using to decouple the elevators from the Bank.</p>
    </div>