<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I can only agree with TheQuickBrownFox.</p>

<p>You can make even more dedicated functions and then compose them like:</p>

<pre><code>let computeHash (dataStream: Stream) (hasher: HashAlgorithm) = hasher.ComputeHash(dataStream)
let openFile (fileInfo: FileInfo) = fileInfo.Open(FileMode.Open, FileAccess.Read, FileShare.ReadWrite)

let getHash algorithmFactory fileInfo = 
    use hasher = algorithmFactory()
    use stream = openFile fileInfo
    computeHash stream hasher

let hexEncode hash = String.Join ("", hash |&gt; Array.map (sprintf "%02X"))

let fromAlgorithm algorithmFactory fileInfo = fileInfo |&gt; getHash algorithmFactory |&gt; hexEncode

let fromSHA256 = fromAlgorithm SHA256Managed.Create
let fromSHA512 = fromAlgorithm SHA512Managed.Create
let fromMD5 = fromAlgorithm MD5.Create
</code></pre>

<p>As shown, in this way it's easy to change the hash algorithm.</p>

<pre><code>let test () =
    let fi = new FileInfo(fileName)
    printfn "%A" (fromSHA256 fi)
    printfn "%A" (fromSHA512 fi)
    printfn "%A" (fromMD5 fi)
</code></pre>
    </div>