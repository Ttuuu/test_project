<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>We probably want to be able to move-construct, so as well as this constructor:</p>

<blockquote>
<pre><code>SafeVector(const SafeVector&amp; orig) : vec(orig.vec), mut(), cond() {}
</code></pre>
</blockquote>

<p>We probably want also:</p>

<pre><code>SafeVector(SafeVector&amp;&amp; orig)
  : vec{std::move(orig.vec)},
    mut{},
    cond{}
{}
</code></pre>

<p>I'd recommend being able to construct from a standard vector:</p>

<pre><code>SafeVector(std::vector vec)
  : vec{std::move(vec)},
    mut{},
    cond{}
{}
</code></pre>

<p>Since we always default-initialize <code>mut</code> and <code>cond</code>, we could declare their initializers in the class definition, removing the need to have them in the constructors' initializer lists.</p>

<p>There's no need to specify an empty destructor - just let the compiler generate it.</p>

<p>I think we probably want one or more assignment operators.</p>

<p>Big question: how can we safely use iterators we get from <code>begin()</code> and <code>end()</code>?  There's no way for client code to lock the mutex until it's finished using the iterators.</p>
    </div>