<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The name of <code>Disable</code> isn't really what it's doing. More you're turning off application properties. Same for <code>Enable</code>.</p>

<hr>

<blockquote>
<pre><code>    On Error Resume Next
    Sheet2.Unprotect "secret"
    ThisWorkbook.Unprotect "secret"
</code></pre>
</blockquote>

<p>Seems like maybe you'd check for protection instead of just eating errors up.</p>

<blockquote>
<pre><code>    On Error Resume Next
    Sheet2.Protect Password:="secret", AllowFormattingColumns:=True, _ 
    AllowFormattingRows:=True
    ThisWorkbook.Protect Password:="secret", Structure:=True, Windows:=False
</code></pre>
</blockquote>

<p>Here we're eating errors again, what could go wrong? And why wouldn't you want to know it went wrong?</p>

<hr>

<p>On these processes</p>

<blockquote>
<pre><code>Private Sub ConvertDebitsAndCreditsToUppercase(debitCreditRng As Range)
Private Sub NoNegativeAmounts(amountRng As Range)
</code></pre>
</blockquote>

<p>you're passing a range to alter the contents of the range at the range. It would be faster to take the values off the sheet change them and then put them back. You could also get rid of those <code>EVALUATE</code>s.</p>

<hr>

<p>In your LastRow function you've hardcoded it to <code>Sheet2</code>. Why not allow an argument and use that?</p>

<pre><code>Private Function LastRow(ByVal targetSheet As Worksheet) As Long
    LastRow = targetSheet.Cells(targetSheet.Rows.count, 4).End(xlUp).Row
End Function
</code></pre>

<hr>

<p>Speaking of arguments, you're pretty much sending all your arguments <code>ByRef</code>. You want to use <code>ByVal</code> whenever you can. Quoting <a href="http://rubberduckvba.com/" rel="nofollow noreferrer">RubberDuck</a> -</p>

<blockquote>
  <p>Parameters are passed by reference unless specified otherwise, which
  can be confusing and bug-prone. Prefer passing parameters by value and
  specify ByRef explicitly when passing parameters by reference.</p>
</blockquote>

<p>and</p>

<blockquote>
  <p>A parameter that is passed by reference and isn't assigned a new
  value/reference, could be passed by value instead.</p>
</blockquote>

<hr>

<p>Speaking of doing things explicitly, every single time you use <code>range</code> or <code>cell</code> without giving it a sheet, it's implicitly using <code>ActiveSheet</code>. Try to always be as explicit as possible.</p>

<hr>

<p>Variable names - give your variables meaningful names. What's a <code>rng</code> or a <code>glRng</code>? Is that <code>generalLedgerAccounts</code> instead? Also try to follow <a href="https://msdn.microsoft.com/en-us/library/1s46s4ew(v=vs.140).aspx" rel="nofollow noreferrer">standard VBA naming conventions</a> have <code>camelCase</code> for local variables and <code>PascalCase</code> for other variables and names.</p>

<hr>

<h3>Const</h3>

<p>I see a few strings being used</p>

<ul>
<li>"GL_Account_Number" - 3</li>
<li>"Profit_Center" - 2</li>
<li>"Amount_in_Doc_Currency" - 3</li>
<li>"DR_CR__Indicator" - 2</li>
<li>"Cost_Center" - 2</li>
</ul>

<p>With things like these, you might want to put them into a variable so that you only have to change the variable if the names ever change. And since they are static most of the time, you can make them constant variables:</p>

<pre><code>Const PCENTER As String = "Profit_Center"
Const CCENTER As String = "Cost Center"
Const GLAN As String = "GL_Account_Number"
</code></pre>

<p>Put these at the top of the module and all your functions have access to them.</p>
    </div>