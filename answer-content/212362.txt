<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It sounds like you want the fruits unique to the first list to go at the end of the final list, and the fruits in both the first and second list go at the beginning of the final list.</p>

<p>For a problem like this, it might be better to use a <code>LinkedList</code> instead of an <code>ArrayList</code>, at least for the final list. Usually you're better off with an <code>ArrayList</code>, but in this case you can benefit from inserting an element at the front of the list is an <span class="math-container">\$O(1)\$</span> operation instead of <span class="math-container">\$O(n)\$</span>.</p>

<p>You're on the right track with using a <code>Map</code> to speed this up with large data sets. Here is a potentially more efficient implementation:</p>

<ol>
<li><p>Loop over the first list, filling a map <code>firstMap</code> with key: <code>firstItem</code> value: false </p></li>
<li><p>Loop over the second list, and for each item, insert the result of 
<code>firstMap.containsKey(secondItem)</code> into <code>firstMap</code> with a key of <code>secondItem</code></p></li>
<li><p>Finally, loop over the first array, if <code>firstMap.get(firstItem)</code> is true, insert the item at the front of the final list (it was in both lists). Else add it to the end of the final list (it was only in the first list).</p></li>
</ol>
    </div>