<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You should be able to work inplace by utilizing the fact that std::complex has a predefined layout. Therefore you can actually cast between an array of double and an array of (half as many) complex numbers.</p>

<pre><code>std::vector&lt;std::complex&lt;double&gt;&gt; a(10);
double *b = reinterpret_cast&lt;double *&gt;(a.data());
</code></pre>

<p>EDIT:</p>

<p>To be more clear I would write</p>

<pre><code>span&lt;std::complex&lt;double&gt;&gt; x_p(reinterpret_cast&lt;std::complex&lt;double&gt;*&gt;(x.data()), x.size() / 2);
</code></pre>

<p>This works in both ways. To enable safe and modern features you should use a span object. Unfortunately <code>std::span</code> is only available in C++20 so you should either write your own (which is a nice exercise) or have a look at <code>abseil::span</code> or <code>gsl::span</code>.</p>

<p>The code to implement those is rather minimal. With that you can remove two copies from your code</p>
    </div>