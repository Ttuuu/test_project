<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your in- and output and the calculation of the column width can be simplified. The latter has already been shown in the <a href="https://codereview.stackexchange.com/a/241107/98493">other answer</a>, but the former can just use a loop and the fact that dictionaries are guaranteed to be ordered (Python 3.7+, use a <code>OrderedDict</code> otherwise).</p>

<pre><code>keys = ["Name", "Surname", "Age", "Occupation"]
person = {key: input(f"{key}: ") for key in keys}
width_keys = max(map(len, person.keys()))
width_values = max(map(len, person.values()))

for key, value in person.items():
    print(f"{key+':':&lt;{width_keys+1}} {value:&gt;{width_values}}")
</code></pre>

<p>Note that I also made the justification of the keys automatic. If you want to take this further, a nice exercise would be to write a function that takes a 2D nested list and a list of alignments and which outputs the correctly justified table (which is what this is in the end).</p>
    </div>