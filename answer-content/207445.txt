<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">


<p>Documentation for this flag reads:</p>

<blockquote>
  <p>If a software procedure can <strong>set and clear</strong> this flag, the processor executing the procedure supports the CPUID instruction</p>
</blockquote>

<p>This clearly means that the flag does not have a defined value. It could be OFF or ON at any time!</p>

<ul>
<li><p>Where your comment says that you "Toggle bit 21 (ID)", the instruction actually sets the bit. I don't think that would be too useful since you don't use the pre-existing value of this bit.</p></li>
<li><p>When you exclusive or <code>XOR</code> the registers <code>AL</code> and <code>DL</code>, you should prudently mask away the 7 remaining bits.</p></li>
</ul>

<p>All the forementioned boils down to the fact that the final test (notice the typo in the comment; should be bit 5)</p>

<pre class="lang-none prettyprint-override"><code>xor     al, dl          ; Bit 4 of AL &amp; DL is (ID)
jz      TstExt
</code></pre>

<p>will <strong>always</strong> check out fine.</p>

<hr>

<p>Although your method to get a <code>DS:BX</code> pointer is quite ingenious, I prefer using <code>[bp-2]</code> as you can see in below code.</p>

<pre class="lang-none prettyprint-override"><code>    mov     bp, sp
    pushfd
    mov     al, [bp-2]        ;Pre-existing value
    xor     byte [bp-2], ID   ;Toggle bit 21
    popfd
    pushfd
    mov     ah, [bp-2]        ;Hopefully changed value
    popfd
    and     ax, (ID&lt;&lt;8)+ID    ;Mask off unimportant bits
    cmp     al, ah
    jne     TstExt

FncErr:
</code></pre>

<p>I omitted preserving the ID bit as per definition this should not be necessary.</p>

<hr>

<blockquote>
<pre class="lang-none prettyprint-override"><code>FncErr: mov di, (22*80+39)*2 ; Point to center position of 21th row in video
</code></pre>
</blockquote>

<p>The address points to the 23rd row.</p>

<hr>

<blockquote>
<pre class="lang-none prettyprint-override"><code>cmp     eax, edx   &lt;&lt;&lt; EDX=0x80000000
jb      FncErr
</code></pre>
</blockquote>

<p>Are you sure the service can't report <code>EAX=0x80000000</code> ?<br>
Perhaps it could be better to bail out with:</p>

<pre class="lang-none prettyprint-override"><code>jbe     FncErr
</code></pre>

<p>Now you're certain that leaf 0x80000001 exists.</p>

<hr>

<p>Reaching leaf 0x80000001 through <code>mov al, 1</code> will continue to work for as long as the manufacturer doesn't create some high numbered leafs (0x80000100 and up). You have to ask yourself how future-proof that you want your program to be!</p>
    </div>