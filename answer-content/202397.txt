<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Like @BaileyParker pointed out quickly, using a <code>set</code> might also be a solution to improve your code. Although I didn't test to see if this approach or his might be the fastest, I want to explain a little bit why switching <code>headers</code> from an array to a set might make a great improvement without much code modification.</p>

<p>Each time you use the <code>in</code> operator on an array, a range of things could happen : The element could be at the first position, which would be nice, or it could be the last, which would be long. For the sake of the example, let's say the element is always at the middle (that makes an okay mean).</p>

<p>So, if your <code>headers</code> element has 1000 elements, then we could assume that every time you call <code>in</code> , you go through 500 elements to find the good one.</p>

<p>This is because the array isn't very good at the <code>contains</code> operation. It's strong to <code>Add/Remove/Get</code> at a specific index though, but it doesn't really fit our use case. For the <code>Contains</code> operator, the array operates in O(n) time complexity.</p>

<p>The set, however, is very good at <code>Contains</code>, because chances are you don't need to iterate through anything. When you add an element to the set, its hash is computed and then used as a key for an underlying array (it's a little more complicated than that but the idea's there), meaning you can always access a specific elements in one shot.</p>

<p>I think you should try converting your <code>headers</code> array into a <code>set</code>. To do so, all you need to do is change : </p>

<pre><code>headers = main.find_all("div", class_="header")
</code></pre>

<p>to</p>

<pre><code>headers = set(main.find_all("div", class_="header"))
</code></pre>

<p>You might be thinking : "Okay but this operation is going to take long". It's not wrong, but it'll still be much faster than using the array every time you want to use the <code>in</code> operator.</p>
    </div>