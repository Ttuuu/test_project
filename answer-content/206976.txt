<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I am not a pro Java programmer, so I will only talk about the algorithm</p>

<p>Your reasoning is good, a stack is the right container to use, but:</p>

<ul>
<li>You don't catch the case where backslash itself is escaped </li>
<li>You can avoid <code>SEPERATOR</code> in two way:

<ul>
<li>build your list like <code>"(){}[]&lt;&gt;"</code> and check if index is odd or not</li>
<li>make two list, one for openings, one for closures </li>
</ul></li>
<li>Try do don't call <code>str.length()</code> each time (not sure about overhead in java).</li>
<li>You maybe define too much function for nothing.</li>
<li>For your <code>checkBalance(...)</code>, it would be nice if you supplied what's the expected value as second parameter.</li>
</ul>

<p>So it would give something like this:</p>

<pre><code>private static final Stack&lt;Character&gt; STACK = new Stack&lt;&gt;();
private static final char BACKSLASH = '\\';
private static final String BRACELETS = "(){}[]&lt;&gt;";

public static boolean isBalanced(String str) {
    int index;
    char ch;
    int length = str.length();
    boolean escaped = false;
    STACK.clear();
    for (int pos = 0; pos &lt; length; pos++) {

      ch = str.charAt(pos);
      if (escaped || ch == BACKSLASH) {
        escaped = !escaped;
      }
      else {
        index = BRACELETS.indexOf(ch);
        if (index != -1) {
          if (index % 2 == 0) { STACK.push(ch); }
          else if (!STACK.empty() &amp;&amp; STACK.peek() == BRACELETS.charAt(index-1)) {
            STACK.pop();  
          }
          else return false; 
        }
      }
    }
    return STACK.empty();
}

public static void checkBalance(String str, boolean expected) {
    boolean result = isBalanced(str);
    System.out.print("[" + (result == expected ? "OK" : "ERROR") + "] ");
    System.out.print("'" + str + "' " + (result ? "is" : "is not") + " balanced\n");

}
public static void main(String[] args) {
    checkBalance("", true);
    checkBalance("\\", true);
    checkBalance("\\(", true);
    checkBalance("()", true);
    checkBalance("(({[&lt;&gt;]}))", true);
    checkBalance("))", false);
    checkBalance("(({[&lt;(&gt;]}))", false);
    checkBalance("(({[&lt;\\(&gt;]}))", true);
    checkBalance(")(", true); //oops
}
</code></pre>
    </div>