<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can make a separate method that decided which type the instruction is:</p>

<pre><code>def get_parser(instruction):
    if len(instruction) &lt; 2:
        return Timing
    if instruction[2] == 'MATCH':
        return Cars
    return Items
</code></pre>

<p>and then just use that:</p>

<pre><code>def assign_tuple_lists2(instructions):
    """Creates named tuple lists from instructions"""
    result  = defaultdict(list)
    for instruction in instructions:
        parser = get_parser(instruction)
        result[parser.__name__].append(parser(*instruction))

    return result
</code></pre>

<p>this uses a <code>collections.defaultdict</code> instead of separate lists per type</p>

<blockquote>
<pre><code>defaultdict(list,
            {'Timing': [Timing(timestamp='1')],
             'Cars': [Cars(timestamp='2', user='bob', reserve='MATCH')],
             'Items': [Items(timestamp='3', user='alice', action='55')]})
</code></pre>
</blockquote>
    </div>