<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A couple of things from a quick scan. I'm sure someone will do a much more thorough review "soon". (Remember, it can take quite a while to do a thorough code review, be patient!)</p>

<ol>
<li>Eliminate <code>Call</code>, it's obsolete and not needed for your purposes. </li>
<li><code>FormatColumnsAthruD</code> is very explicit - almost too explicit. What if you ever need to use column <code>E</code>? Will you rename your procedure? Also, in it you have hard coded <code>"A:C"</code>, yet you have a nice <code>Enum</code> defining handy names for those columns, which you ignore. </li>
<li>You actually ignore your <code>DataColumns</code> enum all over the place, instead using magic letters whose values could change in the future. </li>
<li>You late bind <code>IEbrowser</code> robbing you of Intellisense help while programming.</li>
<li>In <code>IndexMatchToGetAssociatedCarton</code>, you end the error handling with <code>Goto Continue</code>. That should be <code>Resume Continue</code>. A) with <code>Goto Continue</code>, VBA remains in "error handling" mode - new errors will get you a standard VBA error box that will bubble all the way up to your main procedure and abort all processing, and B) I think you'd be hard pressed to find any legitimate use for <code>GoTo</code> in "modern" (i.e. less than 30 years old) VBA code usage <em>other</em> than in an <code>On Error Goto x</code> statement.</li>
<li>You have <code>Const COLOR_GRANNY_APPLE As Long = 13561798</code> which is great since you're eliminating a magic number. However, what if your boss decides he wants that color to be "Kelly green" instead of "Granny Apple green"? Are you going to rename the <code>Const</code> as well as giving it a new value? Why not just call it <code>COLOR_SUCCESS</code> instead? #NamingIsHard (but #RenamingIsEasyWithRubberduck)</li>
<li>On the topic of Granny Apple green, I see it defined in at least 2 places. If you're going to use globals (and for <code>Const</code>, it's not horribly egregious though a settings class might not be a bad idea), this would be a good one to add there. Your output would look really funny with some "Granny Apple" green and some "Kelly" green because you didn't find both definitions of the <code>Const</code>.</li>
<li>Actually, I see <code>Const COLOR_GRANNY_APPLE As Long = 13561798  'Same as the Style "Good" fill color</code>. Since it's the <code>'Same as the Style "Good" fill color</code>,  why not just use the "Good" style fill color instead of defining your own <code>Const</code> for this?</li>
</ol>

<hr>

<pre><code>    If Err.Number = 1004 Then
        Err.Clear
        '// Win 7 32-bit, Excel 2010 32-bit VBA 6.5 gave this error until I changed the formula to this
        shStatus.Range("A2").Value = "=INDEX(tbl_trackingCarton,MATCH(tbl_FedEx[[#This Row],[Tracking No. or Nickname]],tbl_trackingCarton[Trimmed Tracking],0),2)"
    Else
</code></pre>

<p>Instead of letting this fail and retrying if you're on a 32-bit version of Office, why not:</p>

<pre><code>    With shStatus
        #If VBA7
          .Range("A2").Value = "=IFNA(INDEX(tbl_trackingCarton,MATCH([@[Tracking No. or Nickname]],tbl_trackingCarton[Trimmed Tracking],0),2)," &amp; EXPLANATION_IF_NA &amp; ")"
        #ELSE
          shStatus.Range("A2").Value = "=INDEX(tbl_trackingCarton,MATCH(tbl_FedEx[[#This Row],[Tracking No. or Nickname]],tbl_trackingCarton[Trimmed Tracking],0),2)"
        #ENDIF

</code></pre>

<p>Which will only execute the appropriate version of the code based on what version the host is running in.</p>

<hr>

<p>You have:</p>

<pre><code>'@Ignore LineLabelNotUsed
CleanExit:
    Exit Sub
</code></pre>

<p>The fact that Rubberduck is flagging <code>CleanExit:</code> as an unused line label is telling you something that you shouldn't be ignoring! </p>

<p><code>IndexMatchToGetAssociatedCarton</code> has <code>CleanExit:</code> followed immediately by <code>Exit Sub</code>, however, in your error handler, you also have an <code>Exit Sub</code>. You should replace that with <code>Resume CleanExit</code>. While having a single exit point from every procedure isn't critical, it does, generally make life easier, especially if you're not writing really contorted code to do so.</p>
    </div>