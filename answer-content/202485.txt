<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>notes:</h3>

<ol>
<li><p>Your coding style seems good. There is some inconsistent indentation,
but i am guessing that is a question formatting problem.</p></li>
<li><p>Having a static variable <code>word</code> means that <code>palindrome</code> is not 
threadsafe, and is confusing to call. either pass <code>word</code> to the
palindrome constructor, or make <code>checkPalindrome()</code> a static method
that takes a string.</p></li>
<li><p><code>checkPalindrome()</code> outputs it's result to standard output. What if
you wanted to make your palindrome checker graphical?. have
<code>checkPalindrome()</code> return a <code>boolean</code> indicating whether word is a
palindrome or not. This concept of seperating model and output code
is <em>extremly</em> important.</p></li>
<li><p>Instead of wasting time and memory copy over the string backwards then
checking for equality, you can compare pairs of characters starting at
both ends of the string.</p></li>
<li><p>When you reverse the string, you can write a for loop that goes
backwards:</p>

<pre><code>for (int i = word.length() - 1; i &gt;= 0; --i) {
    reversedChar = word.charAt(i);
    reversedWord.append(reversedChar);
}
</code></pre></li>
</ol>

<h3>example:</h3>

<pre><code>public boolean checkPalindrome(String word) {
    for (int i = 0; i &lt; word.length() / 2; ++i) {
        if (Character.toLowerCase(word.charAt(i)) !=
                Character.toLowerCase(word.charAt(word.length()-i-1))) {
            return false;
        }
        return true;
}
</code></pre>
    </div>