<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would use <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/FluentIterable.html" rel="nofollow"><code>FluentIterable</code></a> from <a href="https://code.google.com/p/guava-libraries/" rel="nofollow">Google's Guava</a> libraries to do away with a lot of boiler-plate, consider the following:</p>

<pre><code>public class TeamValidator {       

    public boolean isThereALeader(List&lt;Member&gt; team) {  
        return FluentIterable.from(team).anyMatch(new Predicate&lt;Member&gt;() {
            @Override
            public boolean apply(Member member) {
                return member.getRole().equals("Leader");
            }
        });
    }  

    public boolean areThereAtLeast2NewJoiners(List&lt;Member&gt; team) { 
        final DateTime aMonthAgo = DateTime.now().minusMonths(1);
        return FluentIterable.from(team).filter(new Predicate&lt;Member&gt;() {
            @Override
            public boolean apply(Member member) {
                return member.startingDate().isAfter(aMonthAgo);
            }
        }).size() &gt;= 2;           
    }
}
</code></pre>

<p>This can further be improved by extracting the <code>Predicate</code>s as classes, e.g.:</p>

<pre><code>...
public boolean isThereALeader(List&lt;Member&gt; team) {  
    return FluentIterable.from(team).anyMatch(new TeamLeaderExistsPredicate());
}
...
</code></pre>

<p>This allows the logic contained in the <code>Predicate</code> to be reused, if needs be, and is easier on the eye.</p>

<p><strong>EDIT:</strong></p>

<p>Java 8 equivalent:</p>

<pre><code>boolean leaderExists = team.stream().anyMatch(m -&gt; "Leader".equals(m.getRole()));

LocalDateTime aMonthAgo = LocalDateTime.now().minusMonths(1);
boolean atLeastTwoNewJoinersExist = team.stream()
    .filter(m -&gt; m.startingDate().isAfter(aMonthAgo))
    .count() &gt;= 2;
</code></pre>
    </div>