<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would use a relaxation on type matching. Since an entire type conversion API is available in the .NET Framework, why not take advantage of it?</p>

<blockquote>
<pre><code>if (testMethodParameter.ParameterType.IsAssignableFrom(itemProperty.PropertyType))
{
    dataItem[i] = itemProperty.GetValue(item);
}
else
{
    throw DynamicException.Create
    (
        $"ParameterTypeMismatch",                            
        $"Cannot assign value of type '{itemProperty.PropertyType.ToPrettyString()}' " +
        $"to the parameter '{testMethodParameter.Name}' of type '{testMethodParameter.ParameterType.ToPrettyString()}'."
    );
}
</code></pre>
</blockquote>

<p>You can still decide to wrap it with an exception handler and do some trickery with Nullable and Null-assignable type checks <a href="https://codereview.stackexchange.com/questions/221012/extending-identityuser-with-nullable-foreign-key-to-another-identityuser/221013#221013">like here</a>.</p>

<pre><code>dataItem[i] = Convert.ChangeType(itemProperty.GetValue(item), testMethodParameter.ParameterType);
</code></pre>
    </div>