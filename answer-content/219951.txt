<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Note, some of these require a build process</p>

<ul>
<li>the iife should be added in the build process, it's distracting</li>
<li>The code doesn't expose anything. It's untestable. </li>
<li>var should be let or const</li>
<li>You can use arrow functions to turn some of the functions into one liners</li>
<li>Inconsistent formatting - I recommend getting a linter</li>
<li>setApplicationView - Should probably be replaced with show/hide functions. The current name is not very descriptive to me.</li>
<li>//     hide game board - You can make this a function and get rid of the comment. Several other similar issues.</li>
<li>ifClicked - A function name should generally describe what the functions does, not what happened when it was called. You could also just inline it.</li>
<li>winnerFinder - It would be so much nicer if this was called findWinner, and returned the result instead of storing it globally. Then you could test it as well.
As it stands, it actually returns false when winnerFound is true. Even more confusing.</li>
<li>winnerFinder - You can use player.filter here to get rid of the index variable</li>
<li>playerData.arr - What is arr?</li>
<li>var player = playersData.arr; - How can a player be an array?</li>
<li>document.getElementById - You can run all these calls at the top to shorten the code and get rid of unnecessary dom queries.</li>
<li>innerHTML - It's quite hard to tell how this whole thing works with view logic and game logic all mixed in together.
In general I would recommend separating the view logic from the game logic as much as possible, and even better would be to make the view logic declarative.</li>
</ul>
    </div>