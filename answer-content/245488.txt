<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3><code>Counter</code> class from collections</h3>
<p>You are just re-implementing the <code>Counter</code> class from collections so you can just use:</p>
<pre><code>from collections import Counter
</code></pre>
<p>at the start, and then:</p>
<pre><code>def areMapEquals(m1, m2):
    return m1 == m2

getMapOfLetters = Counter
</code></pre>
<p>Of course you can just do this inline because these are just a few simple operations.</p>
<p>On my machine using the built-ins also nets an about 10% speed-up.</p>
<hr>
<p>A minor point is that the syntactic sugar <code>in</code> makes the code more readable so:</p>
<pre><code>m2.__contains__(k)
</code></pre>
<p>becomes</p>
<pre><code>k in m2
</code></pre>
<hr>
<p>Another usability point is that</p>
<pre><code>&gt;&gt;&gt; help(sherlockAndAnagrams)
Help on function sherlockAndAnagrams in module __main__:

sherlockAndAnagrams(s)
    # Complete the sherlockAndAnagrams function below.
</code></pre>
<p>is not very very useful, with the library <code>doctest</code> you can put your examples in a string under the function and they will both be run and be provided when you ask help on the function.</p>
<hr>
<p>As a last point I am not sure but I think that the library <code>itertools</code> has something that would  very much help with the <code>sherlockAndAnagrams</code> function.</p>
    </div>