<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For a beginner this is pretty good.
But, there are three glaring problems with it.</p>

<ol>
<li>You should use a 'main' function.</li>
<li>You should use a dictionary.</li>
<li><a href="https://docs.python.org/3.5/library/operator.html"><code>operators</code></a></li>
</ol>

<p>Starting with (2), a dictionary holds a key value pair.
If you've come across lists/arrays, it's like them,
apart from that you can use a lot of different types,
not just integers.</p>

<p>Defining one is pretty easy,
and using it will reduce your amount of code.</p>

<pre><code>operators = {
    "+": add,
    "-": sub,
    "*": mul,
    "/": div,
    "pow": pow
}
</code></pre>

<p>This will define an object to hold all the operators that you can use.
Now all we need to do is use it.
Using <a href="https://docs.python.org/3.5/library/stdtypes.html#dict.get"><code>operators.get</code></a> it's easy.</p>

<pre><code>func = operators.get(operator, None)
if func is None:
    print("Invalid operator!")
    continue
</code></pre>

<p>Lovely and simple.</p>

<p>The main function is simple, just move everything in <code>if __name__ == '__main__':</code>
into a function.
With the operator addition you shouldn't really need to make smaller functions,
but it may be a good idea, making a function to get user input, could be a good idea.
But it's up to you.
If you did want to do both of these, you'd do something like:</p>

<pre><code>def main():
    while True:
        number1, number2, operator = get_user_input()
        func = operators.get(operator, None)
        if func is None:
            print("Invalid operator!")
            continue

        print(func(number1, number2))

if __name__ == '__main__':
    main()
</code></pre>

<p>Just to note, you may not want to make <code>get_user_input</code>.</p>

<p>Something that you may not know is you can use the builtin operators library.
This will allow you to remove all your definitions of <code>add</code>, <code>sub</code>, etc.
And will allow you to change operators to:</p>

<pre><code>import operator

operators = {
    "+": operator.add,
    "-": operator.sub,
    "*": operator.mul,
    "/": operator.truediv,
    "pow": operator.pow
}
</code></pre>

<p>There's some history about Python's division, and that's why it's called <code>truediv</code>, but if you haven't and won't use Python2, then you don't really need to know.</p>
    </div>