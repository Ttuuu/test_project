<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>re.sub(r"\(","",data)</code> is not a very good use of regular expressions. You could have more easily achieved the same result with <code>data.replace("(", "")</code>.</p>

<p>But since you are already using regular expressions, why not use them to do more:</p>

<pre><code>&gt;&gt;&gt; re.findall(r'\d+,\d+', "(2,2),(6,2),(2,6)")
['2,2', '6,2', '2,6']
</code></pre>

<p>This regular expression finds all digits (<code>\d</code>) (allows also multiple digits using <code>+</code>), which are separated only by a comma. Since different pairs also have parenthesis around them, this just gives you a list of the pairs.</p>

<p>By adding parenthesis around the digits, this captures each of them and splits each pair:</p>

<pre><code>&gt;&gt;&gt; re.findall(r'(\d+),(\d+)', "(2,2),(6,2),(2,6)")
[('2', '2'), ('6', '2'), ('2', '6')]
</code></pre>

<p>Now all that is left to do is convert them to integers and put it in a function:</p>

<pre><code>def str_to_nbrs(data):
    return [list(map(int, p)) for p in re.findall(r'(\d+),(\d+)', data)]
</code></pre>
    </div>