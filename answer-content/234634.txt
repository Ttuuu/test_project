<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a good opportunity to learn two things, separation of concerns and the standard library module <code>itertools</code>. </p>

<p>You have three separate issues, each of which you can put into their own function:</p>

<ol>
<li>Take input from the user</li>
<li>Turn it into a sequence of <code>0</code> and <code>1</code>.</li>
<li>Find the longest run of <code>1</code>.</li>
</ol>

<p>For the user input it can be as simple as your one line, or slightly more sophisticated as this function:</p>

<pre><code>def ask_user(message="", type_=str):
    while True:
        try:
            return type_(input(message))
        except ValueError:
            print("wrong type, try again")
</code></pre>

<p>Later you might want to add things like validator functions, allowed ranges, etc, but this should suffice for now.</p>

<p>Turning the number into a binary sequence is easy:</p>

<pre><code>def to_binary(n):
    return bin(n)[2:]
</code></pre>

<p>Or even like this, as mentioned in the comments by Eric:</p>

<pre><code>def to_binary(x):
    return format(x, "b")
</code></pre>

<p>And for the last step you can use <code>itertools.groupby</code>:</p>

<pre><code>from itertools import groupby

def longest_run_of(it, value):
    return max(len(list(group))
               for c, group in groupby(it)
               if c == value)
</code></pre>

<p>Putting it all together, using some <code>f-string</code> for slightly easier string formatting:</p>

<pre><code>if __name__ == "__main__":
    n = ask_user("Enter a number: ", int)
    n_bin = to_binary(n)
    longest_run = longest_run_of(n_bin, "1")
    print(f"count is = {longest_run}")
</code></pre>

<p>Once you are this far it becomes a lot easier to try and test different implementations, as you can change (and test) each part individually. At this point it might make sense to start profiling to see which implementation is the fastest, depending on your needs.</p>
    </div>