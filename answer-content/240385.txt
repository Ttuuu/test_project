<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Rule of 3</strong></p>

<p>One of the main things to look for when refactoring code is the same few lines repeated. Some use the <a href="https://en.wikipedia.org/wiki/Rule_of_three_(computer_programming)" rel="nofollow noreferrer">rule of three</a> - if the same section is written more than three times the solution is inefficient. Looking at your code, the if-elif-else block seems like a good start to refactoring.</p>

<p><strong>Some changes I would make:</strong></p>

<ul>
<li>Move to a dictionary structure to make expansion easier</li>
<li>Use a <code>for</code> loop over key value pairs</li>
</ul>

<p><strong>Data Structures</strong></p>

<p>This re-structures your data to be in a key-value format using Python's <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionaries</a>. This would allow you have the word "type" as the key and lookup which words are in the entry for the key. The whole if-elif-else block can be cut down to one for loop. This allows you to expand to more word types without needing to write more if else statements. The for loop would not automatically pick up errors so you can use an <code>else</code> statement. This will run whenever the for loop does not reach a break - this means that no words satisfy the values of the keys.</p>

<p><strong>Reviewed code</strong></p>

<pre><code>def scan(sentence):
    rebuild = []
    word_types = {
    "directions": ['north', 'south', 'east'],
    "verbs": ['go', 'kill', 'eat']
    "stops": ['the', 'in', 'of'],
    "nouns": ['bear', 'princess']
    }

    split_line = sentence.split()

    for word in split_line[:]:
        try:
            if int(word):
                rebuild.append(("number", int(word)))
                split_line.remove(word)
        except ValueError:
            pass

    for word in split_line:
        for key, value in word_types.items():
            if word in value:
                rebuild.append(key,word)
                break
        else:
            rebuild.append(("error", word))
</code></pre>

<p>I also used <code>[:]</code> to express copying a list, but using <code>.copy()</code> is fine.</p>
    </div>