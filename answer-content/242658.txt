<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Factor out detailed code into subfunctions</h2>

<p>One relatively mechanical thing you could do is transform all of the commented blocks into functions. For a small section, something like this</p>

<pre><code>  // Kill all audio
  $('audio').each(function(){ this.pause(); this.currentTime = 0; });

  // Turn this switch off
  $('.switch01').removeClass('activated');

  // Kill all info cards showing the playback controls
  $('.audio-info-card').addClass('d-none');
</code></pre>

<p>becomes</p>

<pre><code>  killAllAudio();
  turnSwitchOff( '.switch01' );
  killAllInfoCards();

  //...

function killAllAudio(){
  $('audio').each(function(){ this.pause(); this.currentTime = 0; });
}

function turnSwitchOff( switch ){
  $(switch).removeClass('activated');
}

// Kill all info cards showing the playback controls
function killAllInfoCards(){
  $('.audio-info-card').addClass('d-none');
}
</code></pre>

<p>After this, your top-level algorithm should be much clearer. At the top level it should almost look like pseudocode, except the comments are all calls to subfunctions which do one small named task. </p>

<p>Factoring out code into subfunctions also helps you see "more code" by abstracting away small details. With shorter functions, you can see more of them on the screen at once.</p>
    </div>