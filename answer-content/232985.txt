<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Python has <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer"><code>docstring</code>s to document your functions properly</a>. Just move your comments there, as a first step.</p>

<p>In the <code>calculate_number</code> function (which I would rename to <code>from_base_neg_2</code> or something similar) you can use a <a href="https://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="nofollow noreferrer">list comprehension</a> (or even better, a <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generator expression</a>):</p>

<pre><code>def from_base_neg_2(A):
    """Calculate the value of a number in base -2,
       given as a list of coefficients, sorted from smallest exponent to largest.
    """
    return sum(a * (-2) ** i for i, a in enumerate(A))
</code></pre>

<p>Similarly, I would call the inverse function <code>to_base_neg_2</code> or something like it.</p>

<p>Your main calling code should be under a <a href="http://stackoverflow.com/questions/419163/what-does-if-name-main-do"><code>if __name__ == "__main__":</code> guard</a> to allow importing from this module. Arguably the <code>solution</code> function should be defined last, since it depends on all the other functions and that makes it slightly easier to read.</p>

<pre><code>def solution(A):
    """Main function.
    Divide A, a number in base -2, by 2.
    """
    return to_base_neg_2(math.ceil(from_base_neg_2(A) / 2))

if __name__ == "__main__":
    print(solution([1, 0, 0, 1, 1, 1]))
</code></pre>
    </div>