<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>You should use the directive <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode" rel="nofollow noreferrer"><code>"use strict"</code></a> that will place the JavaScript context into strict mode. This will throw errors for some common bad practices.</p>
</li>
<li><p>Always declare variables as <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" rel="nofollow noreferrer"><code>const</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/var" rel="nofollow noreferrer"><code>var</code></a>, or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let" rel="nofollow noreferrer"><code>let</code></a>. If you are in strict mode you will get an error if you don't.</p>
</li>
<li><p>Don't use alerts or prompts as there is no way to know if they are actually displayed (clients can turn them off) and they are very annoying.</p>
</li>
<li><p>The key event properties <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode" rel="nofollow noreferrer"><code>KeyboardEvent.keyCode</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/charCode" rel="nofollow noreferrer"><code>KeyboardEvent.charCode</code></a> have been depreciated and you should not use them. Use <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code" rel="nofollow noreferrer"><code>KeyboardEvent.code</code></a> or <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key" rel="nofollow noreferrer"><code>KeyboardEvent.key</code></a> instead</p>
</li>
<li><p>Rather than filter the input via the keybpoard events, listen to the input's <code>keyup</code> and <code>change</code> events, removing bad characters automatically. Use a CSS rule to unhide a warning and a JavaScript <a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout" rel="nofollow noreferrer">setTimeout</a> to hide it again</p>
<p>Filtering keyboard events means you need to check many keys that are valid (left, right, backspace, delete, etc...) which is just unneeded complexity.</p>
</li>
<li><p>Don't wait for the user to click "Convert to Decimal", display the output automatically. This makes it a lot friendlier to use.</p>
</li>
<li><p>JavaScript can convert binary strings to decimal for you using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt" rel="nofollow noreferrer"><code>parseInt</code></a>. The second argument is the radix (AKA base) of the number that is being parsed.</p>
</li>
<li><p>If you are just setting text (no HTML) use the elements <a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent" rel="nofollow noreferrer">textContent</a> rather than <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML" rel="nofollow noreferrer">innerHTML</a></p>
</li>
</ul>
<h2>Rewrite</h2>
<p>The rewrite is following the points you have set-out in your question. I have not implemented how your code differs from these points.</p>
<p>The rewrite uses</p>
<ul>
<li>a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp" rel="nofollow noreferrer">RegExp</a> to test and filter the input.</li>
<li>a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator" rel="nofollow noreferrer">ternary</a> expression to create the decimal value as <code>parseInt</code> will return <code>NaN</code> for empty strings. The ternary checks if the string is empty evaluating to <code>""</code> or if there is a number the ternary evaluates to the decimal value.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus" rel="nofollow noreferrer">HTMLInputElement.focus</a> (inherited from <code>HTMLElement</code>) to focus the input element when loaded.</li>
</ul>
<p>I have modified the HTML and CSS to fit the snippet window a little better.</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>"use strict";
const binaryInput = document.getElementById("binaryInput");
const decimalOutput = document.getElementById("decimalOutput");
const inputWarning = document.getElementById("inputWarning");
binaryInput.addEventListener('change', update);
binaryInput.addEventListener('keyup', update);
binaryInput.focus();

const WARNING_TIME = 2000; // in ms
var warningTimer;
function hidWarning() {
   inputWarning.classList.add("hideWarning");
}
function showWarning() {
    clearTimeout(warningTimer);
    warningTimer = setTimeout(hidWarning, WARNING_TIME);
    inputWarning.classList.remove("hideWarning");
}
function update() {
    var value = binaryInput.value;
    if (/[^01]/g.test(value)){
        binaryInput.value = value = value.replace(/[^01]/g, "");
        showWarning();
    }
    decimalOutput.textContent = value === "" ? "" : parseInt(value, 2);
}</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>body {
    background: #2e2e2e;
    color: #fff;
    font-family: Heebo, sans-serif;
}
.form-body {
    display: flex;
    flex-direction: column;
    text-align: center;
}
input {
    margin: 0 auto;
    width: 100%;
    max-width: 300px;
    border: 0.125rem solid rgba(255,255,255,0.25);
    background: rgba(255,255,255,0.05);
    color: #fff;
    font-size: 2rem;
    text-align: center;
    font-weight: 300;    
}

.inputWarning { color: #F88 }
.hideWarning { display: none }</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;div class="form-body"&gt;
  &lt;h2&gt;Binary to Decimal Calculator&lt;/h2&gt;
  &lt;label for="binaryInput"&gt;Enter a binary value&lt;span id="inputWarning" class="inputWarning hideWarning"&gt; [Only valid digits 0 and 1 permitted]&lt;/span&gt;&lt;/label&gt;
  &lt;input id="binaryInput" type="text" size="8" maxlength="8"&gt;
  &lt;h3&gt;Decimal Value: &lt;span id="decimalOutput"&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;</code></pre>
</div>
</div>

    </div>