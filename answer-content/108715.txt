<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your recommendation is to define <code>alias up=". <i>path/to/</i>up"</code> so that when you type <code>up 3</code>, it expands to <code>. up 3</code>.  However, since you want to take an optional argument and affect the state of the current shell, I think you would be better off defining a <strong>shell function</strong> instead.</p>

<p>As it turns out, the <code>[ -z "$1" ]</code> <strong>special case is not necessary</strong>, since <code>seq 1</code> just expands to <code>1</code>.</p>

<p>You end up executing <strong><em>n</em> separate <code>cd ..</code> commands</strong> for <code>up <i>n</i></code>.  This leads to a usability bug: <a href="https://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#index-cd"><code>cd -</code> or <code>cd $OLDPWD</code></a>, which normally take you back to the previous directory, don't work the way I expect.</p>

<p>Suggested solution:</p>

<pre><code>up() {
    cd $(for i in $(seq 1 $1) ; do echo -n ../ ; done)
}
</code></pre>
    </div>