<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>According to <a href="https://tanaikech.github.io/2018/10/12/benchmark-reading-and-writing-spreadsheet-using-google-apps-script/" rel="nofollow noreferrer">a benchmark report by Tanaike</a></p>
<blockquote>
<p>Methods of Sheets API can reduce the process costs from those of Spreadsheet Service by about 19 %.</p>
</blockquote>
<p>But in the case of this script the impact of replacing the Google Sheets Basic Service by the Google Sheets Advanced Service will be marginal as the number of read / write tasks are minimal.</p>
<p>If you are using the old new runtime (Mozilla Rhino), try the new one (Chrome V8)</p>
<p>Also you could try look for more efficient JavaScript techniques to join two "tables"</p>
<p>In any case it's very likely that the performance improvements will not be enough so you will have to find a way to do process your data by batches. Among other possibilities, you could add a "timer" to save the progress and stop the script before it fails then create a time drive trigger to call a new instance. Another possibility is to use client-side code to orchestrate parallel executions.</p>
<p>Related</p>
<ul>
<li><a href="https://codereview.stackexchange.com/q/101991/91556">Transforming an array of arrays into an array with joins</a></li>
<li><a href="https://codereview.stackexchange.com/q/175637/91556">SQL-style join on arrays using ECMA6</a></li>
</ul>
    </div>