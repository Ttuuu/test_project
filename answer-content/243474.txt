<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>IMO this kind of error prone, hard to maintain macros should be avoided at any price.</p>

<p>If I was doing it I would do something like this (assuming gcc):</p>

<pre><code>typedef struct
{
    size_t nelem;
    size_t elemsize;
    char arr[];
}DARR_t;


#define INLINE inline __attribute__((always_inline))
#define arr_init(nelem,type) _arr_init(nelem, sizeof(type))

static INLINE void *_arr_init(size_t numelements, size_t elemsize)
{
    DARR_t *p = malloc(numelements * elemsize + sizeof(*p));
    if(p)
    {
        p -&gt; nelem =  numelements;
        p -&gt; elemsize = elemsize;
    }
    return p ? p -&gt; arr : (void *)p;
}

#define arr_append(ptr, type, ...)  _arr_append(ptr, &amp;(type []){__VA_ARGS__}, sizeof((type []){__VA_ARGS__})/sizeof(type))

static INLINE void *_arr_append(void *arr, void *val, size_t size)
{
    DARR_t *p = arr - offsetof(DARR_t, arr), *tmp;

    tmp = realloc(p, (p -&gt; nelem + size) * p -&gt; elemsize + sizeof(*tmp));
    if(tmp) 
    {
        memcpy(&amp;tmp -&gt; arr[tmp -&gt; nelem * tmp -&gt; elemsize], val, tmp -&gt; elemsize * size);
        tmp -&gt; nelem++;

    }
    return tmp ? tmp -&gt; arr : (void *)tmp;
}
</code></pre>

<p>etc, etc</p>

<p>But if I want to use dynamic arrays I would rather use C++.</p>
    </div>