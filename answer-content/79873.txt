<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Flow Security</h2>
<ul>
<li>You should repeat the email validation in Server side too (js validation could be bypassed)</li>
<li>You don't check if the user is already inserted during sign up. There is no unique key in your <code>users</code> table. So I can signup with your admin email and (according with your code) I'm in. If somewhere in your code you don't check the users.id but email only, then you have a problem.</li>
<li>You should not login the client after the sign up, expecially if you don't force an email check (validation link). Generally this is a possible backdoor if you have some other bug somewhere (as first point, for example). Another point is to allow bots to entry in restricted area. That's not a great idea.</li>
</ul>
<h2>Structure security</h2>
<ul>
<li>use unique key on fields that must be unique (email in this case)</li>
</ul>
<h2>Language security</h2>
<ul>
<li><code>mysql_real_escape_string</code> <a href="http://php.net/manual/en/function.mysql-escape-string.php" rel="nofollow noreferrer">is deprecated</a> and it will be removed. You must use <a href="http://php.net/manual/en/class.pdo.php" rel="nofollow noreferrer">PDO::</a> and <a href="http://php.net/manual/en/pdo.prepare.php" rel="nofollow noreferrer">Prepared statement</a></li>
<li>md5 or sha-1 <a href="https://security.stackexchange.com/questions/19705/is-sha1-better-than-md5-only-because-it-generates-a-hash-of-160-bits">are not so great</a>. <a href="https://stackoverflow.com/questions/401656/secure-hash-and-salt-for-php-passwords">Use scrypt if you can; bcrypt if you cannot</a>.</li>
<li>If I use the character <code>&amp;</code> in my password, then I have the account exploitable. Because your javascript code is:</li>
</ul>
<p>--</p>
<pre><code>data : "email="+email+"&amp;password="+password,
</code></pre>
<p>With a real data will be:</p>
<pre><code>data : "email=my@email.it&amp;password=my&amp;!verystrong!!_#@[**password,
</code></pre>
<p>So my very strong password will be truncated at 2nd char. Both login and signup have the same issue. So my password will be valid and never I can suspect this issue. But a bruteforce attack will be more effective (my password will be simply "my")</p>
    </div>