<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a most elegant solution. I have two small improvements:</p>

<hr>

<pre><code>let neighboursCount (board: int[,]) x y =
    board.[y..y+2, x..x+2] 
    |&gt; flatten 
    |&gt; Array.indexed
    |&gt; Array.sumBy (fun (i, n) -&gt; if i &lt;&gt; 4 then n else 0)
</code></pre>

<hr>

<pre><code>let expandBoard board =
    let N = (Array2D.length1 board) - 1
    array2D [|
        yield                    [| yield board.[N, N]; yield! board.[N, *]; yield board.[N, 0] |]
        for i in [0..N] do yield [| yield board.[i, N]; yield! board.[i, *]; yield board.[i, 0] |]
        yield                    [| yield board.[0, N]; yield! board.[0, *]; yield board.[N, 0] |]
    |]
</code></pre>

<p>Here is <code>N</code> set to <code>(Array2D.length1 board) - 1</code> because that's the value you're using through out the function.</p>
    </div>