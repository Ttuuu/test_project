<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can adhere to the <a href="https://www.python.org/dev/peps/pep-0008/#comments" rel="nofollow noreferrer">Style Guide for Python Code</a> (Python Enhancement Proposal (PEP) 8) (there is tool support for this):  </p>

<p>Comment your code properly.<br>
Document your code properly.<br>
In the code, using <em>docstring</em>s, making the documentation accessible to IDEs and introspection.  </p>

<p>The first thing to document would be the interface of <code>merge_sort()</code>:<br>
it may be of interest that it does not return something useful, but modifies <code>thelist</code>.<br>
I think <code>start_idx</code> and <code>last_idx</code> should have default values. While I don't see how to specify something like <code>last_idx=len(thelist)</code> correctly, Python uses index -1 for <em>last element</em> - you'd need to document <code>last_idx</code> to be inclusive (as the name suggests, anyway). (Python commonly uses right index <em>exclusive</em>.) An alternative would be to use <code>None</code> for <em>to the end</em>.<br>
Better get rid of printing in a function of general use than document it does so for specific input.  </p>

<p>Having <code>merge()</code> work in-place, too, causes avoidable "copies" - allocate <em>one</em> buffer in ("top-level") merge_sort and "merge to and fro'".</p>

<p>Python has a built-in for <em>selecting a range of items in a sequence object</em>: <a href="https://docs.python.org/3/reference/expressions.html?highlight=slice#slicings" rel="nofollow noreferrer">slicing</a> - do not use loops for this.</p>

<p>You can denote <code>int(x / 2)</code> as <code>(x // 2)</code>.</p>
    </div>