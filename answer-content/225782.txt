<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think here a small class would help to keep track of all things related to a <code>Button</code>:</p>

<pre><code>class Button(DigitalInOut):
    def __init__(self, name, pin, direction=Direction.INPUT, pull=Pull.UP):
        self.name = name
        super().__init__(pin)
        self.direction = direction
        self.pull = pull

    def wait_for_press(self):
        while self.value:
            pass
</code></pre>

<p>(Untested, since I obviously don't have your hardware lying around.) </p>

<p>With your initialization code can be shortened a bit:</p>

<pre><code>names = ["A", "B", "C"]
pins = [board.D9, board.D6, board.D5]
buttons = {name: Button(name, pin) for name, pin in zip(names, pins)}
</code></pre>

<p>As for your printing to the oled, they always follow the same format, so just define a function for that:</p>

<pre><code>def print_page(oled, strings):
    oled.fill(0)
    for i, s in enumerate(strings):
        oled.text(s, 0, i * 8, 1)
    oled.show()
</code></pre>

<p>After which your main code becomes:</p>

<pre><code>messages = [
"""
Adafruit Feather
Program selector

Press A to continue
""",
"""
Instructions:
Use A and C to move
up and down
Press A to continue
""",
"""
Instructions (cont.):
Press B to select a
program.
Press A to continue
""",
...
]

for message in messages:
    print_page(oled, message.splitlines()[1:])
    buttons["A"].wait_for_press()
oled.fill(0)
oled.show()
</code></pre>

<p>Note that I used <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">triple-quoted strings</a> so you can just write your message in plaintext, line-breaks included. You might want to outsource that part to another file and just load / import from that.</p>
    </div>