<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Lists in Python are already stacks. It would be better if you used a raw <code>list</code> as people are more familiar with <code>list</code>s then a custom <code>Stack</code> class.</p>
<p>When using a plain Python list the <code>while</code> loop can take advantage of lists being truthy if they have items. This allows you to do <code>while stack:</code> instead.</p>
<p>I would prefer this to be a generator function as we likely won't need the entire DFS path. <code>path</code> can then be a <code>set</code> for <span class="math-container">\$O(1)\$</span> lookup rather than a list with <span class="math-container">\$O(n)\$</span> lookup. ("<code>if vertex in path:</code>")</p>
<pre class="lang-py prettyprint-override"><code>def depth_first_search(graph, start):
    stack = [start]
    visited = set()
    while stack:
        vertex = stack.pop()
        if vertex in visited:
            continue
        yield vertex
        visited.add(vertex)
        for neighbor in graph[vertex]:
            stack.append(neighbor)
</code></pre>
    </div>