<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1><code>(s)size_t</code></h1>
<p>Use <code>size_t</code> (It is in <code>&lt;stddef.h&gt;</code> in standard C) or <code>ssize_t</code> (<code>&lt;sys/types.h&gt;</code> in POSIX systems) for raw sizes in bytes.</p>
<h1><code>ptrdiff_t</code></h1>
<p>Use <code>ptrdiff_t</code> (<code>&lt;stddef.h&gt;</code>) for element counts such as <code>List.size</code> or array indices such as <code>[i]</code>.</p>
<h1>Data type</h1>
<p>Don't restrict the data to <code>int</code>.</p>
<p>Use <code>void *arr</code> instead so that the user can fill the array with any data.</p>
<p>If you do this, then many of the specific functions for sorting, summing, etc, should be removed, as the data will not be known.  The user should write its own loops for summing, use the standard <code>qsort()</code> with a custom comparison function for sorting, etc.</p>
<h1>Naming</h1>
<p>You are using very generic names for functions such as <code>clear()</code>.  If you want to have this as a library, you may want to prefix all functions with something like <code>arrlist_</code> to avoid name clashing.</p>
<h1>Implicit <code>(void)</code></h1>
<p>Empty parentheses in function definitions mean an implicit <code>(void)</code>, but in function prototypes mean an unspecified number of parameters, which if I remember correctly is a deprecated feature.  It's better to explicitly use <code>(void)</code> always and avoid any problems.</p>
    </div>