<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Unnecessary Check</h2>

<p>We don't have to check the first letter every iteration, let's treat this any other letter in the word until it matters, then check our index.
Once we find a vowel(if there is one) we then check if it was our first letter to determine if we use the vowel tail or not. Then break after the index condition checks.</p>

<pre><code>def pig_latin(word):
    word = word.strip().lower()
    const_tail = 'ay'
    vow_tail = 'way'
    pig_latin =''
    vowel = ['a','e','i','o','u']
    for i in range(len(word)):
        if word[i] in vowel:
            if i==0:
                pig_latin+=word+vow_tail
            else:
                pig_latin+=word[i:]+word[0:i]+const_tail
            break
    return pig_latin
</code></pre>

<h2>Additional Code Simplification</h2>

<p>By only adding the W to the end of a string starting with a vowel we can also eliminate the else case and apply it's code to every string that makes it there.</p>

<p>Also an option, but not shown below is removing the break and returning the restructured string from within the for.</p>

<pre><code>def pig_latin(word):
    word = word.strip().lower()
    pig_latin =''
    vowel = ['a','e','i','o','u']
    for i in range(len(word)):
        if word[i] in vowel:
            if i==0:
                word+="w"
            pig_latin+=word[i:]+word[0:i]+"ay"
            break
    return pig_latin
</code></pre>
    </div>