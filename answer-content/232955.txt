<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Never use <code>float</code> or <code>double</code> for money</h1>

<p>Floating point types (in C++, those include <code>float</code>, <code>double</code>, <code>long double</code>, etc.)  are inherently inaccurate due to how they are represented in memory. It's not a <em>huge</em> deal for most applications - but for a banking system (where rounding error is unacceptable) you should stay as far away as possible from this. A solution to this is to separate the whole and fractional amounts as integer types:</p>

<pre><code>struct Money {
    int dollars = 0, cents = 0;
}
</code></pre>

<p>Then, define some operators:</p>

<pre><code>Money operator+(const Money &amp;x, const Money &amp;y);
Money operator-(const Money &amp;x, const Money &amp;y);
...
</code></pre>
    </div>