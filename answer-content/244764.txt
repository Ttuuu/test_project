<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Many reviews, so some additional ideas.</p>
<p><strong>Programmable precision</strong></p>
<p>Rather than hard-code the 5, use a flexible variable.  Perhaps code later may want to allow the user to adjust the width.</p>
<pre><code>// printf("Here is your answer:\nLg(%f) = %.5f (to 5 decimal places)\n\n", Num1, ans);
int prec = 5;
printf("Here is your answer:\nLg(%.*f) = %.*f (to %d decimal places)\n\n", 
    prec, Num1, prec, ans, prec);
</code></pre>
<p>Also consider <code>"*.g"</code> instead, more informative with small and large values.</p>
<p><strong><code>float</code> v. <code>double</code></strong></p>
<p>Little reason to use <code>float</code>, especially since code calls so many <code>double</code> functions.  In C, <code>double</code> is the default floating-point type.  Save <code>float</code> for code needing restrictions in space or tight performance.</p>
<p><strong>Defensive coding</strong></p>
<p><code>if (Num1 &lt; 0){</code> is a good idea, yet deserves to be <em>before</em> <code>ans = log(Num1);</code></p>
<p>Consider a test before divide:</p>
<pre><code>if (Num2 == 0.0) Handle_div_by_zero();
else ans = (Num1 / Num2);
</code></pre>
<p><strong>Machine pi</strong></p>
<p>Although OP did well with at least 17 digits for <code>pi</code>,  more digits do not hurt.  Recommend for such popular constants, use twice the expected digit need or the common <code>define</code> when available.  When <code>FLT_VAL_METHOD == 2</code> (<code>double</code> math using <code>long double</code>), the greater precision is then employed.</p>
<pre><code>#ifdef M_PI
#define PI M_PI
#else
#define PI ‭3.1415926535897932384626433832795‬
#endif
</code></pre>
<p><strong>Trig functions and degrees</strong></p>
<p>Trig functions, especially with large degree angles, benefit with range reduction in degrees first.<br>
<a href="https://stackoverflow.com/a/32304207/2410359">Why this sin cos look up table inaccurate when radian is large?</a></p>
<pre><code>// ans = (cos ( Num1 * PI/180 ));
ans = (cos ( fmod(Num1,360) * PI/180 ));
</code></pre>
    </div>