<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1><code>hash</code></h1>

<p>Since tuples are hashable if their elements are hashable, you can just do</p>

<pre><code>def __hash__(self):
    return hash((self.latitude, self.longitude, self.year, self.month))
</code></pre>

<p>If you want to have locations that are near each other be set as the same, you might have to round the coordinates</p>

<h1><code>repr</code></h1>

<p>for debugging, adding a repr can be handy:</p>

<pre><code>def __repr__(self):
    return (
        "Position("
        f"lat: {self.latitude}, "
        f"lon: {self.longitude}, "
        f"year: {self.year}, "
        f"month: {self.month}, "
        ")"
    )
</code></pre>

<h1>Counting</h1>

<p>To count, you can use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>, and just feed it an iterable of Positions.</p>

<pre><code>counter = Counter(locations)
most_visited = counter.most_common(&lt;n&gt;)
</code></pre>

<p>You will need one Counter per year/month, but this can be done with a <code>defaultdict(Counter)</code></p>
    </div>