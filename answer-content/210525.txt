<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Try to avoid using so many globals. Your code would be better-structured if you made a <code>Game</code> class and captured most or all of that state as class member variables.</p>

<p>You made the same spelling mistake here as you did in your previous question. "exsiting" is spelled "existing".</p>

<p>In this code:</p>

<pre><code>s = open("scores.txt","r")
</code></pre>

<p>You open, but fail to close, <code>s</code>. Convert this to a <code>with</code> statement.</p>

<p>This:</p>

<pre><code>users_points = {i.split()[0]: int(i.split()[2]) for i in file_content}
</code></pre>

<p>relies on this format:</p>

<pre><code>file.write(username1 + " has " + str(total_score1) + " points" + "\n")
</code></pre>

<p>As such, you can convert your <code>users_points</code> initialization to:</p>

<pre><code>users_points = {}
for line in file_content:
    user, points = re.match('r(\w+) has (\d+) points').groups()
    users_points[user] = int(points)
</code></pre>

<p>However, that's not ideal. If <code>scores.txt</code> doesn't need to be human-readable, then you should store it in a different format - probably JSON. That way, your loading and store can be made much more simple.</p>

<p>Move your global code to a <code>main</code> method.</p>

<p>As I recommended in the previous incarnation of this question, and will recommend again, stop issuing blank <code>input</code> calls. This:</p>

<pre><code>print("Please enter 'n' if you are a new user and 'e' if you are a exsiting user and enter 's' to display scores")
ens=input("")
</code></pre>

<p>needs to be</p>

<pre><code>ens = input("Please enter 'n' if you are a new user, 'e' if you are an existing user, or 's' to display scores: ")
</code></pre>

<p>Try to convert some of your concatenated strings into f-strings:</p>

<pre><code>username1 + " has " + str(total_score1) + " points" + "\n")
</code></pre>

<p>should become</p>

<pre><code>f'{username1} has {total_score1} points\n'
</code></pre>

<p>This:</p>

<pre><code>counter = counter + 1
</code></pre>

<p>should be</p>

<pre><code>counter += 1
</code></pre>

<p>This:</p>

<pre><code>check_failed = False
check_failed = True
</code></pre>

<p>is quite strange; the first assignment will be overwritten so you should probably just delete it.</p>
    </div>