<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>isn't it better to write input as a macro ?</p>
</blockquote>

<p>No. At best it might work as a generic function.</p>

<blockquote>
  <p>how can i write to_binary as pure function ?</p>
</blockquote>

<p>It already is a pure function, it doesn't mutate or depend on external state</p>

<blockquote>
  <p>wouldn't be better to return binary type from to_binary instead i32</p>
</blockquote>

<p>You should return a <code>String</code>. Converting to i32 is pretty weird. The numbers inside i32 are already in binary. The point of a to_binary function is pretty much always because you for some reason want a textual representation in binary.</p>

<p>As a quick side note, Rust already has the ability to convert values to binary:</p>

<pre><code>format!("{:b}", value);
</code></pre>

<p>Your to_binary function would be a bit simpler if build a Vec or Vec  and then converted that instead of building a String.</p>
    </div>