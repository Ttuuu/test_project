<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My few problems: </p>

<ol>
<li>Instead <code>HashSet&lt;String&gt; tempDict = (HashSet&lt;String&gt;) this.dictionary.clone();</code> you could simply use <code>Set&lt;String&gt; tempDict = new HashSet&lt;&gt;( this.dictionary );</code>. You will avoid ugly <code>@SuppressWarnings("unchecked")</code>.</li>
<li>Parsing input could be performed in other method while this one would accept two strings: initial and final word. That way it's much more versatile like Sharon Ben Asher mentioned.</li>
<li>Code most likely works but you just can't see what is really doing. Either commenting or extracting vital parts of algorithm into named methods would most likely shed some light.</li>
</ol>

<p>I would really suggest trying to implement graph based algorithm where nodes are words and edges connect words with distance of 1. That way you could construct Graph once and use for example Dijkstra's algorithm to determine shortest path between two given nodes if it exists. Complexity would be O(n^2) where n is number of words. It could be a bit more intuitive with a bit of an explanation and possibly faster on multiple runs.</p>
    </div>