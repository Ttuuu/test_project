<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>The requirements for this game are unclear. Code is always produced to implement a set of well defined and understood requirements, even if you are defining these yourself.</li>
<li>The code is monolithic, break it down into functions, this is <a href="https://en.wikipedia.org/wiki/Functional_decomposition" rel="nofollow noreferrer">functional decomposition</a> and one of the first skills a programmer needs to learn, regardless of language or programming paradigm.</li>
<li>Use <code>unittests</code> to <a href="http://pythontesting.net/framework/unittest/unittest-introduction/" rel="nofollow noreferrer">automatically test</a> the functionality of those methods, learning to use <code>unittest</code> to engage in Test Driven development will increase your speed of learning at first and make you a far better developer in the long run.</li>
<li>The code has a very linear flow, programs should provide flexible flows, break it down into three parts, the setup, the game and the results, wrap these with a menu, to setup, play, see score or exit.  Once each part is complete return to the menu loop.</li>
<li>What is the point of requiring usernames then referring to Players 1 &amp; 2.</li>
<li>It include lots of pointless functionality such usernames and password from plain text files, capture the names, but do away with the password, security by obscurity offers no security at all.</li>
<li>It fails if you enter S when first starting, if the file does not exist use <a href="https://docs.python.org/3.7/reference/compound_stmts.html#the-try-statement" rel="nofollow noreferrer">Exception Handing</a> to catch this failure, create the blank file and continue.  Always attempt to recover from error conditions when possible, make this second nature.</li>
<li><a href="https://www.101computing.net/number-only/" rel="nofollow noreferrer">Always validate user input before proceeding</a>.</li>
<li>Learn to use the built in language features and libraries, this example plays a similar game with much better usage of Python's built in capabilities.  <a href="https://codereview.stackexchange.com/questions/33811/how-to-make-this-random-number-game-better">How to make this random number game better?</a></li>
</ul>
    </div>