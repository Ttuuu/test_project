<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Most answers address the majority of the issues. However, I don't see anyone addressing one important problem: testability.</p>

<p>If you want to write unit tests that will verify your MailManager is working as expected, you'll need to be able to mock your dependencies the class being tested relies upon. In other words, for example, you don't want to send a real email, so you'd need to mock or use a fake SMTP client.</p>

<p>In order to achieve this, you could do something like:</p>

<pre><code>public class MailManager
{
    private readonly IMailMessage _mailMessage;
    private readonly ISmtpClient _smtpClient;

    public MailManager(IMailMessage mailMessage, ISmtpClient smtpClient)
    {
        _mailMessage = mailMessage;
        _smtpClient = smtpClient;
    }
    ...
}
</code></pre>

<p>And then inject the implementation you want the <code>MailManager</code> to use.</p>
    </div>