<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Instead of Type Casting to 'object<code>or</code>object[]<code>or using</code>RouteValueDictionary`. A simple way to achieve the same is using “Newtonsoft.Json”</p>

<p><strong>If using .Net Core 3.0 or later;</strong></p>

<p>Default to using the built in <code>System.Text.Json</code> parser implementation.</p>

<pre><code>@using System.Text.Json;

…….

@Url.Action(“ActionName”, “ControllerName”, new {object = JsonConvert.SerializeObject(‘@ModalObject’)  }))

</code></pre>

<p><strong>If stuck using .Net Core 2.2 or earlier;</strong></p>

<p>Default to using Newtonsoft JSON.Net as your first choice JSON Parser.</p>

<pre><code>@using Newtonsoft.Json;

…..

@Url.Action(“ActionName”, “ControllerName”, new {object = JsonConvert.SerializeObject(‘@ModalObject’)  }))
</code></pre>

<p>you may need to install the package first.</p>

<pre><code>PM&gt; Install-Package Newtonsoft.Json
</code></pre>

<p>Then, </p>

<pre><code>public ActionResult ActionName(string modalObjectJSON)
{
    Modal modalObj = new Modal();
    modalObj = JsonConvert.DeserializeObject&lt;Modal&gt;(modalObjectJSON);

}
</code></pre>
    </div>