<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, you're off to a good start. You have some comments, but it's important to be rigorous and consistent with your documentation. Uisdean's points about <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a> styling are valid, but don't address the organization of your code. Additionally, stylistic changes can largely be fixed by automatic tools (e.g. <a href="https://github.com/ambv/black" rel="nofollow noreferrer">Black</a>).</p>

<p>From an OOP point of view, it's important to understand the semantics of your class structure. From what you have now, <code>Board</code> is a base class, and because <code>Tic_Tac_Toe</code> subclasses <code>Board</code>, semantically this says that <code>Tic_Tac_Toe</code> is a variety of <code>Board</code>. The functions in <code>Tic_Tac_Toe</code> allow it to manipulate itself with moves, and then you have a <code>main</code> loop to run the logic. This is a good start, but I think we can do better.</p>

<p>My understanding is that Tic Tac Toe is a type of game, not a type of board, but it does use a board as an internal state. Also, the game Tic Tac Toe doesn't manipulate itself. Instead, players manipulate the state of the game by making taking turns.</p>

<p>Therefore, my advice about how to organize this code from a object oriented point of view would be to create classes like (parenthesis indicate a class' superclass): Game, TicTacToe(Game), Board, Player, Human(Player), Computer(Player), Turn, and Move. Then, each Game would have a set of Turns, each with a corresponding Move and Player. Moves would affect the state of the Board within the Game instance. The kind of Moves that are allowed depend on the rules defined by the subclasses of Game (TicTacToe in this instance). Depending on the kind of Player, the Move for each Player's Turn could be generated automatically (for a Computer), or through keyboard/mouse input (for a Human).</p>
    </div>