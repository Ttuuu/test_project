<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code is mostly readable and clear:</p>

<ul>
<li>the variable names are descriptive (for the most part - <code>x</code> is a little unclear)</li>
<li>there is good use of <code>const</code> and <code>let</code> instead of <code>var</code></li>
</ul>

<p>Some of the lines are a little lengthy - the longest line appears to be 117 characters long (excluding indentation):</p>

<blockquote>
<pre><code>newIntervals[newIntervals.length - 1][1] = Math.max(newIntervals[newIntervals.length - 1][1], sortedIntervals[i][1]);
</code></pre>
</blockquote>

<p>I considered suggesting that a <code>for...of</code> loop be used to replace the <code>for</code> loop in the imperative solution after seeing the suggestion to use <code>arr.entries()</code> in <a href="https://codereview.stackexchange.com/a/229870/120114">this answer</a> which would allow the use of a variable like <code>interval</code> instead of <code>sortedIntervals[i]</code>, though when comparing in FF and chrome with <a href="https://jsperf.com/sorting-intervals" rel="nofollow noreferrer">this jsPerf test</a> it seems that would be slower and thus less optimal, perhaps because each iteration would have an added function call.</p>

<p>When <code>intervals.sort()</code> is called the array is sorted in-place so <code>intervals</code> could be used instead of <code>sortedIntervals</code>, however it does seem that using <code>sortedIntervals</code>. That would reduce the storage by <span class="math-container">\$O(n)\$</span>.</p>
    </div>