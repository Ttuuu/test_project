<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have a few comments on your OOP design.</p>

<p>Your <code>Tetromino</code> class is way too full of functionality, or in other words, bloated. On one hand, it stores the basic info of location, type etc, but at the same time it is responsible for events, drawing, and collision detection. That is a violation of the <a href="http://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow">Single Responsibility Principle</a> which states that each component should be responsible for 1 task. </p>

<p>Therefore, the <code>Tetromino</code> class should just have a list of the 4 coordinates, and a color. We then subclass <code>Tetromino</code> for all the types of tetrominoes: <code>SquareTetromino</code>, <code>LineTetromino</code>, and etc. which will have convenient initializers for generating the correct coordinates given a single coordinate (such as the upper left corner).  </p>

<p>Then, we add a <code>TetrominoController</code> which handles moving the Tetrominos as needed and so has a list of the tetrominos and the dimensions of the board. This class does the bound checking.</p>

<p>Lastly we should have a <code>TetrominoRenderer</code> that interfaces with the <code>TetrominoController</code> to draw the board (the controller will notify the renderer when positions change and so on).</p>

<p>The <code>Game</code> class should interact with the <code>TetrominoController</code> to dictate updates, and it should initialize the renderer (but not do anything else, as the renderer should get notifications from the controller). </p>
    </div>