<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><strong><code>int current_command;</code></strong></p>

<p>I strongly advise against it. It is not the property of <code>ComplexCommand</code>. It is a property of whoever deals with it. Consider instead</p>

<pre><code>for (int i = 0; i &lt; complex.n_single_args; i++) {
    ....
}
</code></pre></li>
<li><p><strong><code>realloc</code></strong></p>

<ul>
<li><p>A missing <code>* sizeof(SimpleCommand *)</code> in</p>

<pre><code>command-&gt;commands = realloc(command-&gt;commands, command-&gt;allocated);
</code></pre>

<p>is certainly a bug. You add that many <em>bytes</em>, rather than <code>SimpleCommand *</code>s.</p></li>
<li><p>As long as you immediately <code>exit</code> on failure, it is OK to do a simple assignment. In the real life a naive realloc may lead to memory leaks. You need to be more prudent, e.g.:</p>

<pre><code>temp = realloc(command-&gt;commands, command-&gt;allocated);
if (temp == NULL) {
    // Now you have a chance to do a cleanup
    ....
} else {
    command-&gt;commands = temp;
}
</code></pre></li>
</ul></li>
<li><p>An argument to <code>sizeof</code> is better expressed in terms of variables, rather than their types. It avoids the double maintenance problem it the type of variable ever changes. For example, prefer <code>sizeof(*command.commands)</code> to <code>sizeof(SimpleCommand*)</code>.</p></li>
</ul>
    </div>