<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Making a generator version of <code>random.sample()</code> seems to be a much better idea:</p>

<pre><code>from __future__ import division
from random import random
from math import ceil as _ceil, log as _log

def xsample(population, k):
    """A generator version of random.sample"""
    n = len(population)
    if not 0 &lt;= k &lt;= n:
        raise ValueError, "sample larger than population"
    _int = int
    setsize = 21        # size of a small set minus size of an empty list
    if k &gt; 5:
        setsize += 4 ** _ceil(_log(k * 3, 4)) # table size for big sets
    if n &lt;= setsize or hasattr(population, "keys"):
        # An n-length list is smaller than a k-length set, or this is a
        # mapping type so the other algorithm wouldn't work.
        pool = list(population)
        for i in xrange(k):         # invariant:  non-selected at [0,n-i)
            j = _int(random() * (n-i))
            yield pool[j]
            pool[j] = pool[n-i-1]   # move non-selected item into vacancy
    else:
        try:
            selected = set()
            selected_add = selected.add
            for i in xrange(k):
                j = _int(random() * n)
                while j in selected:
                    j = _int(random() * n)
                selected_add(j)
                yield population[j]
        except (TypeError, KeyError):   # handle (at least) sets
            if isinstance(population, list):
                raise
            for x in sample(tuple(population), k):
                yield x
</code></pre>

<p>Taking a sampling mean then becomes trivial:        </p>

<pre><code>def sampling_mean(population, k, times):
    for t in xrange(times):
        yield sum(xsample(population, k))/k
</code></pre>

<p>That said, as a code review, not much can be said about your code as it is more or less taking directly from the Python source, which can be said to be authoritative. ;) It does have a lot of silly speed-ups that make the code harder to read.</p>
    </div>