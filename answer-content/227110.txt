<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Python is actually well-known for having a unified style-guide. It is called <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a>. It has both general advice as well as specific advice (naming and such). <code>flake8</code> follows the recommendations of PEP8, AFAIK.</p>

<p>Currently your script only runs on UNIX system due to the way you manually handle file paths for the <code>directory</code> variable. If you were consistently using the <code>os.path</code> module instead, it would run also on Windows.</p>

<pre><code>import os

if args.repository is not None:
    directory = os.path.splitext(os.path.basename(args.repository))[0]
else:
    directory = 'repository-' + curr_date.strftime('%Y-%m-%d-%H-%M-%S')
</code></pre>

<p>I would add a <code>os.chdir(directory)</code> somewhere in the beginning. This way you don't need to pass the directory to every call of <code>perform</code>. I would leave it as an argument (in case you do need it), but make it optional. I would also call the function <code>run</code>.</p>

<pre><code>def run(commands, context_dir=None):
    if context_dir is None:
        context_dir = os.getcwd()
    Popen(commands, cwd=context_dir).wait()
</code></pre>

<p>Actually, that is already the default behaviour of <code>Popen</code>!. So you can just do:</p>

<pre><code>def run(commands, context_dir=None):
    Popen(commands, cwd=context_dir).wait()
</code></pre>

<hr>

<p>In your argument parsing a few things are superfluous. While "explicit is better than implicit", "simple is better than complex". All arguments that start with a <code>-</code> or <code>--</code> are automatically optional, so you don't need the <code>required=False</code>. In addition, with <code>action="store_true"</code>, <code>default=False</code> is implied.</p>

<p><code>type=str</code> is also redundant, since that is the default for all arguments.</p>

<p>The repository option should maybe have a <code>nargs=1</code> keyword to ensure an actual argument is passed.</p>

<p>I would pass an optional argument to the parsing, which let's you test the function with a list of strings:</p>

<pre><code>def arguments(args=None):
    ....
    return parser.parse_args(args)

print(arguments(["-r"]))
</code></pre>

<hr>

<p>If you were not concerned about Python 2 compatibility (it's <a href="https://pythonclock.org/" rel="nofollow noreferrer">time is finally coming to an end</a>, slowly), I would have recommended using the <a href="https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module" rel="nofollow noreferrer">new high-level API <code>subprocess.run</code></a> (Python 3.5+, 3.7+ for some features). With that your function would not even be needed anymore, a simple <code>from subprocess import run</code> would be enough.</p>

<p>In that vain, you could then also use <code>pathlib</code>, as recommended <a href="https://codereview.stackexchange.com/questions/227093/a-python-script-that-generates-git-commits-for-the-last-year/227110#comment441793_227110">in the comments</a> by <a href="https://codereview.stackexchange.com/users/104108/grooveplex">@grooveplex</a>:</p>

<pre><code>from pathlib import Path

if args.repository is not None:
    directory = Path(args.repository).stem
...
</code></pre>
    </div>