<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Single responsibility</strong></p>

<p>The account class is responsible for maintaining the account balance, generting account numbers and PIN codes. Instead of using primitive long and int types for account numbers and PIN codes, you should declare classes for both types and have those classes implement the validation.</p>

<p>Logically, the Account class contains information about the account. The account owner SSN should be a member of the class that holds account owner information.</p>

<p>Account number generation, as implmented, does not fulfill the specification. The unique 5 digit part is only a random number which most likely will violate the uniqueness restriction long before the address space is exhausted. Account number generation should be moved to a class that manages accounts so that the uniqueness restriction can be efficiently maintained. The account locking and unlocking should be implemeted in a similar class that implements access management.</p>

<p>The interest rate should be implemented as a reference to an instance of <code>AccountProduct</code>, which is a class that contains static information of a type of an account (e.g. account product name, interest rate, fees, etc).</p>

<p>The purpose of <code>AccountTransactions</code> is not very clear. There are a set of methods that print the parameters they receive without changing the program state. The plural in the class name suggests that it implements a collection of transactions but that doesn't seem to be the case.</p>

<p>And please, for the love of James Gosling, never use floating point types for representing money. They are not accurate.</p>
    </div>