<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A couple observations:</p>

<ol>
<li><p>Using different names for the playing grid (data, grid, l) makes it more difficult to follow the code.</p></li>
<li><p>For the top level call <code>getMove(data, 100)</code>, let's assume the 'up' is a possible move.  Then c(data, up) gets called 101 times. </p>

<p><code>getMove()</code> calls <code>getAvailableMoves()</code> which calls <code>c(data, i)</code> once for each direction (but the moves are discarded).</p>

<p><code>getMove()</code> then calls <code>rand_moves()</code> which calls <code>next_play(data1, first_move)</code> 100 times.  And <code>next_play()</code> calls c(data, move).</p></li>
<li><p>Move constant calculations outside of the loop.  In <code>random_moves()</code>:</p>

<pre><code>    for p in range(times):
        data1 = data.copy()
        data1 = next_play(data1, first_move)
        m = data.max()
</code></pre>

<p>should be:</p>

<pre><code>    data = next_play(data, first_move)
    m = data.max()
    for p in range(times):
        data1 = data.copy()
        ...
</code></pre></li>
<li><p>Extra copying.  For example:</p>

<p><code>getMove()</code> calls <code>rand_move()</code> with a copy of <code>data</code>:</p>

<pre><code>rand_moves(data.copy(),move,times)
</code></pre>

<p><code>rand_move()</code> then makes another copy:</p>

<pre><code>data1 = data.copy()
</code></pre></li>
<li><p><code>is_valid()</code> could use features of numpy array:</p>

<p>def isvalid(np.ndarray grid):
    return (    0 in grid
             or (grid[:3]==grid[1:]).any()
             or (grid[:,:3]==grid[:,1:]).any()
             )</p></li>
<li><p>It might be possible to cache some of the score calculations.  For example, there are many ways to arrive at a grid like:</p>

<pre><code>2 4 0 0
0 0 0 0
0 0 0 0
0 0 0 0
</code></pre>

<p>Figuring out a way to cache the score for that grid might save some duplicate calculations.</p></li>
</ol>
    </div>