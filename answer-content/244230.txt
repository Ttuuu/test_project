<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is some simplification to be done.</p>
<ol>
<li>The second if statement is superfluous. I'm assuming that if <code>.Count</code> is not 0, then you know it's going to be <code>&gt;=1</code>, so you don't need to write a second if-statement.</li>
<li>You don't need to save variables the values of which you only use once.</li>
</ol>
<pre><code>export const GetToken = async () =&gt; {
  const check = await new DB().GetItem();

  if (check.Count === 0) {
    return await GenerateToken();;
  }

  const db_token = check.Items[0];
  if (isTokenExpired(db_token)) {
    return await UpdateToken(db_token);
  }
  
  return db_token;
}
</code></pre>
<p>I'm not all too against having multiple return statements since this is a very short function. For longer functions, having multiple exit points can be confusing. If you do want to have fewer return statements (which is not a bad idea at all), then I agree with pacmaninbw's answer that you could have a single variable at the start of the function, populate that with the return value, and then just return that variable at the end of the function.</p>
<pre><code>export const GetToken = async () =&gt; {
  let retToken;
  const check = await new DB().GetItem();

  if (check.Count === 0) {
    retToken = await GenerateToken();;
  }

  const db_token = check.Items[0];
  if (isTokenExpired(db_token)) {
    retToken = await UpdateToken(db_token);
  } else {
    retToken = db_token;
  }
  
  return retToken;
}
</code></pre>
<p>(By the way, javascript typically uses <code>camelCase</code> for variable names and not <code>snake_case</code>)</p>
    </div>