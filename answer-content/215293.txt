<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>How can you know if a function is efficient if you use 3rd party code. Even if you check the source, it is subject to change without notice so you can never know if your code is running the best it can. That is the price you pay for using 3rd party code.</p>

<p>However I don't see the need to use <code>lodash/isEmpty</code> as you determine that when you get the object keys. If there are no keys the object is empty.</p>

<p>Not delimiting a statement block eg <code>if (isEmpty(firstObject) || isEmpty(secondObject)) return false;</code> is a bad habit. Always delimit all blocks with <code>{}</code>.</p>

<p>Your naming is way too verbose. Use the functions context to imply meaning. The function name implies (well sort of) you are handling objects.</p>

<p>One solutions is as follows.</p>

<pre><code>function compareObjKeys(A, B) {
    const keys = Object.keys(A);
    if (keys.length &gt; 0) {
        const keysB = Object.keys(B);
        if (keysB.length === keys.length) {
            const keysA = new Set(keys);
            return keysB.every(k =&gt; keysA.has(k));
        }
    }
    return false;
}
</code></pre>

<p>But I would not go as far and favor a smaller source size. The performance savings of the above are minor and only when one of the objects is empty which I would imagine would be rare</p>

<pre><code>function compareObjKeys(A, B) {
    const kA = new Set(Object.keys(A)), kB = Object.keys(B);
    return kB.length &gt; 0 &amp;&amp; kA.size === kB.length &amp;&amp; kB.every(k =&gt; kA.has(k));
}
</code></pre>
    </div>