<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Type Hinting</h1>

<p>You were halfway there! Good job having the type of values accepted and returned in the method docstring. Now, you can use type hints to show in the header of the method what values are accepted and returned, as follows</p>

<pre><code>from typing import List

def snakes_and_ladders(board: List[List[int]]) -&gt; int:
</code></pre>

<h1>Consistent Spacing</h1>

<p>This</p>

<pre><code>for i in range(1,7):
</code></pre>

<p>should be this</p>

<pre><code>for i in range(1, 7):
</code></pre>

<p>You have good spacing in the rest of your code, but you should stay consistent and apply this spacing everywhere.</p>

<p>The same for this line</p>

<pre><code>stack.append([1,0]) -&gt; stack.append([1, 0])
</code></pre>

<h1>Magic Numbers</h1>

<p>We're coming back to this line again</p>

<pre><code>for i in range(1, 7):
</code></pre>

<p>What is <code>7</code> supposed to represent? The max number of rows or columns? What if you have to change it later on to apply to smaller/bigger snakes and ladders boards? I would advise using a variable to hold this value, naming it accordingly.</p>

<h1>List Comprehension</h1>

<p>You use lots of loops with one line in them. Particularly when appending to lists. Luckily, you can add two lists together and it will merge them.</p>

<p>From this</p>

<pre><code>for col in range(cols):
    board_2.append(board[row][col])
</code></pre>

<p>to this</p>

<pre><code>board_2 += [board[row][col] for col in range(cols)]
</code></pre>

<p>You can do the same for the next loop a couple lines down</p>

<p>From this</p>

<pre><code>for col in range(cols - 1, -1, -1):
    board_2.append(board[row][col])
</code></pre>

<p>to this</p>

<pre><code>board_2 += [board[row][col] for col in range(cols - 1, -1, -1)]
</code></pre>
    </div>