<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In addition to @janos’s point about exception handling:</p>

<p>Don’t handle exceptions if there is nothing you can do about them.  <code>fetch_xml()</code> catches the <code>ConnectionError</code>, prints a message, and then ...? Does nothing!  The end of the function is reached without returning anything, so <code>None</code> is returned to the caller. </p>

<p><code>trends_retriever()</code> gets the <code>None</code> value, and doesn’t do anything special, so probably causes other exceptions by passing <code>None</code> to <code>BeautifulSoup()</code>!</p>

<p>If you didn’t catch the exception, the exception would have percolated right through <code>trends_retriever()</code> to its caller, without it having to do anything special or causing further issues.  If you want to print (or log) the exception, but can’t really handle it, consider re-raising it, or raising a different one, perhaps with the current one as a “cause”. </p>

<p>The main program is an exception.  It is allowed to catch and print a message for expected exceptions, to present a more professional looking output, instead of looking like an unexpected crash. </p>
    </div>