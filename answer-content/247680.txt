<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can remove the <code>toString()</code> bit from here:</p>
<pre><code>  let [int, dec] = inputNumber
    .toString()
    .split(".")
    .map((el) =&gt; parseInt(el));
</code></pre>
<p><code>toFixed</code> returns a string. So, there is no need to call <code>toString</code> again.</p>
<hr>
<p>The calculation part:</p>
<p>If the decimal part is <code>12</code>, your output is <code>3/25</code>. How do you get this? You get the <a href="https://en.wikipedia.org/wiki/Greatest_common_divisor" rel="noreferrer">greatest common divisor</a> between 12 and 100 and divide both of them with it. GCD of 12 and 100 is 4. So, (12/4) / (100/4)</p>
<p>There's already a simple recursive implementation of <a href="https://en.wikipedia.org/wiki/Euclidean_algorithm#Implementations" rel="noreferrer">euclidean algorithm</a> for that:</p>
<pre><code>function gcd(a, b)
    if b = 0
        return a
    else
        return gcd(b, a mod b)
</code></pre>
<p>You can get the <code>precision</code> required as an option parameter which defaults to a predefined <code>MAX_PRECISION</code>. Get the GCD between the <code>dec</code> and 10 <sup>precision</sup> (eg: 100 for precision = 2)</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const MAX_PRECISION = 5

function toFraction(inputNumber, precision = MAX_PRECISION) {
  let [int, dec] = inputNumber
                      .toFixed(precision)
                      .split(".")
                      .map(n =&gt; +n)
                      
  const powerOf10 = 10 ** precision,
        gcd = getGCD(dec, powerOf10),
        fraction = `${dec/gcd}/${powerOf10/gcd}`;
  
  return int ? `${int} ${fraction}` : fraction
};

function getGCD(a, b) {
  if (!b) return a;

  return getGCD(b, a % b);
};

console.log( toFraction(1.14)   );
console.log( toFraction(5.71)   );
console.log( toFraction(3.34)   );
console.log( toFraction(5.1044) );
console.log( toFraction(0.67)   );
console.log( toFraction(0.84)   );</code></pre>
</div>
</div>

    </div>