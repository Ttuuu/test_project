<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This answer builds upon the <a href="https://codereview.stackexchange.com/a/222875/92478">solution</a> presented by <a href="https://codereview.stackexchange.com/users/84718/">Mathias Ettinger</a></p>

<hr>

<p>If you want to get rid of the <code>try: ... except: ...</code> boilerplate you could implement some kind of custom loader for your engines.</p>

<p>This is something I wrote quickly, which is likely far from perfect, but it works.</p>

<p>in <code>__init__.py</code>:</p>

<pre><code>import importlib


def mock_missing(name, msg):
    def init(self, *args, **kwargs):
        raise ImportError(
            f'The class {name} you tried to call is not importable; '
            f'this is likely due to it not being installed. '
            f'Original reason: {msg}')
    return type(name, (), {'__init__': init})


def try_load(engine, module):
    """Try to load an engine, return a mock class if it was not found

    Inspired by https://stackoverflow.com/a/10675081
    """
    try:
        module = importlib.import_module(module, __name__)
        return getattr(module, engine)
    except (ModuleNotFoundError, AttributeError) as ex:
        return mock_missing(engine, msg=str(ex))
</code></pre>

<p>To test it:</p>

<pre><code>from engines import try_load

PSI4 = try_load("PSI4", ".psi4")
a = PSI4()

# module does not exist
try:
    PSI5 = try_load("PSI5", ".PSI5")
    b = PSI5()
    raise AssertionError("This should have failed!")
except ImportError as ex:
    print(str(ex))

# class does not exist in module
try:
    PSI6 = try_load("PSI6", ".psi4")
    c = PSI6()
    raise AssertionError("This should have failed!")
except ImportError as ex:
    print(str(ex))

</code></pre>

<p>This outputs:</p>

<pre class="lang-none prettyprint-override"><code>The class PSI5 you tried to call is not importable; this is likely due to it not being installed. Original reason: No module named 'engines.psi5'
The class PSI6 you tried to call is not importable; this is likely due to it not being installed. Original reason: module 'engines.psi4' has no attribute 'PSI6'
</code></pre>
    </div>