<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your first example looks much nicer, so I'll focus on that.</p>

<p>First, let's remove the tail recursion in the most obvious way possible:</p>

<pre><code>public static boolean isEven(int[] arr, int index, int leftSum, int rightSum) {
    while (true) {
        int i = index-1;
        int j = index+1;

        while(i &gt; -1) {
            leftSum += arr[i--];
        }

        while(j &lt; arr.length) {
            rightSum += arr[j++];
        }

        if (leftSum == rightSum) {
            return true;
        }
        if (index == arr.length-1) {
            return false
        }

        index += 1;
        leftSum = 0;
        rightSum = 0;
    }
}
</code></pre>

<p>Now let's clean it up:</p>

<pre><code>public static boolean isEven(int[] arr) {
    for (int index = 0; index &lt; arr.length; index++) {
        int leftSum = 0;
        for (int i = index -  1; i &gt; -1; i--) {
            leftSum += arr[i];
        }

        int rightSum = 0;
        for (int i = index+1; i &lt; arr.length; i++) {
            rightSum += arr[i];
        }

        if (leftSum == rightSum) {
            return true;
        }
    }

    return false;
}
</code></pre>

<p>We can combine the sum variables:</p>

<pre><code>public static boolean isEven(int[] arr) {
    for (int index = 0; index &lt; arr.length; index++) {
        int difference = 0;

        for (int i = index -  1; i &gt; -1; i--) {
            difference += arr[i];
        }
        for (int i = index+1; i &lt; arr.length; i++) {
            difference -= arr[i];
        }

        if (difference == 0) {
            return true;
        }
    }

    return false;
}
</code></pre>

<p>Now consider that we don't need to recalculate <code>difference</code> each time. If one iteration we have</p>

<pre><code>|-A-| * |--B--|
1 2 3 4 5 6 7 8
</code></pre>

<p>The next we have</p>

<pre><code>|-A-|++ --|-B--|
1 2 3 4 5 6 7 8
</code></pre>

<p>Namely, we add 4 to A and subtract 5 from B, which means we add 4 <em>and</em> 5 to the difference. We should also check for empty arrays.</p>

<pre><code>public static boolean isEven(int[] arr) {
    if (arr.length == 0) {
        // Alternatively, return false since there
        // is no element that satisfies the condition.
        throw new IllegalArgumentException();
    }

    int difference = arr[0] - Arrays.stream(arr).sum();
    if (difference == 0) {
        return true;
    }

    for (int i = 1; i &lt; arr.length; i++) {
        difference += arr[i-1];
        difference += arr[i];

        if (difference == 0) {
            return true;
        }
    }

    return false;
}
</code></pre>
    </div>