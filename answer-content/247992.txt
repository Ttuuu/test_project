<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I dont understand OP code goals, it floats in thin air.</p>
<p>But i would simply not abstract anything unless required.</p>
<pre><code>package main

import "fmt"

type GeneratorA struct {
}

func (g GeneratorA) Generate(data string) string {
    return "generator A"
}

type GeneratorB struct {
}

func (g GeneratorB) Generate(data string) string {
    return "generator B"
}

func main() {
    consumeGenerator(GeneratorA{})
    consumeGenerator(GeneratorB{})
}

func consumeGenerator(g interface{ Generate(string) string }) {
    fmt.Println(g.Generate("whatever"))
}

</code></pre>
<p>anyways, reproducing OOP in a language that promotes composition is just not going to work.</p>
    </div>