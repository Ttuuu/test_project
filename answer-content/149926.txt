<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>Function RgbToHex(color As Long) As String
    Dim r As Long, g As Long, b As Long
    r = color And &amp;HFF
    g = (color / &amp;H100) And &amp;HFF
    b = (color / &amp;H10000) And &amp;HFF
    RgbToHex = Right$(Hex$(&amp;H1000000 + &amp;H10000 * r + &amp;H100 * g + b), 6)
End Function
</code></pre>

<p>Assuming the VB6 compiler really doesn't inline constant expressions, this is probably one of the fastest ways to implement RgbToHex.</p>

<p>Instead of using a mixture of ColorConstants and magic numbers, I have restricted my code to magic numbers only. And these numbers are not really magic, since they are all powers of 2 or very close to them.</p>

<p>Instead of converting every color channel separately to a hex number, it is more efficient to first combine the color channels and then convert them once.</p>

<p>I renamed <code>l</code> to <code>color</code> since a lowercase ell is hard to distinguish from the digit 1 or a capital i.</p>

<p>The number <code>&amp;H1000000</code> makes sure that the output is always 6 digits long, by producing a 7-digit hex number first and then only keeping the last 6 hex digits of that number. If this number were not there, black would be output as <code>0</code> instead of <code>000000</code>.</p>
    </div>