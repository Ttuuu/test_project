<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>A typo</h1>

<p><code>elif len(args) == 2):</code> closes an unopened parenthesis.</p>

<h1>An unnecessary transpose</h1>

<p>In <code>__mul__</code>,  this seems strange:</p>

<blockquote>
  <p><code>for col in range(other.transpose().rows):</code></p>
</blockquote>

<p>This would transpose the <code>other</code> matrix lots of times, just to access the row count of the transposes. Why not:</p>

<pre><code>for col in range(other.cols):
</code></pre>

<h1>Slow inverse and determinant</h1>

<p>The cofactor expansion algorithm works well for small matrixes, but suffers <em>severe</em> performance degradation as the matrix grows. The time complexity of cofactor expansion is O(n!), that really limits the ability to work with matrixes beyond "tiny", the biggest I could go without running out of patience was 8x8. Both the determinant and the inverse (if it exists) can be found in O(nÂ³) time by LU-factoring the matrix.</p>
    </div>