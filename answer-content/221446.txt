<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>General Feedback</h2>

<p>The code appears to work acceptable. The HTML does have javascript calls inline (e.g. <code>onclick="pressYellow()"</code>). It would be better to separate the event handling logic out into the Javascript.</p>

<p>I see it caches DOM element references instead of querying for DOM elements each time they are needed. This is great.</p>

<h2>Suggestions</h2>

<p>There are a couple different usages of <code>setTimeout()</code> used. The first is okay:</p>

<blockquote>
<pre><code>setTimeout(function(){playGame()}, 1000);
</code></pre>
</blockquote>

<p>But the extra anonymous/lambda/closure function is unnecessary. A reference to the function can be passed instead:</p>

<pre><code>setTimeout(playGame, 1000);
</code></pre>

<p>Then there are places where a string literal is passed - e.g.</p>

<blockquote>
<pre><code>setTimeout("flash($yellow)", 500);
</code></pre>
</blockquote>

<p>but it is recommended not to use that format - see the MDN documentation for <a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout" rel="nofollow noreferrer"><code>setTimeout()</code></a></p>

<blockquote>
  <h3>code</h3>
  
  <p>An alternative syntax that allows you to include a string instead of a function, which is compiled and executed when the timer expires. This syntax is <strong>not recommended</strong> for the same reasons that make using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval" rel="nofollow noreferrer"><code>eval()</code></a> a security risk.<sup><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Parameters" rel="nofollow noreferrer">1</a></sup></p>
</blockquote>

<p>To specify parameters to be passed to the function when it is called, use a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Partially_applied_functions" rel="nofollow noreferrer">partially-applied function</a>:</p>

<pre><code>setTimeout(flash.bind(null, $yellow));
</code></pre>

<p>That should also allow you to use the <code>mute</code> function in <code>playSound()</code> as you originally wanted.</p>

<pre><code>setTimeout(mute.bind(null, muteColor), buttonTimeInterval - 300);
</code></pre>

<hr>

<p>Instead of four separate rulesets in the CSS for the opacity:</p>

<blockquote>
<pre><code>#yellow {
  opacity: 0.5;
}
#red {
  opacity: 0.5;
}
#green {
  opacity: 0.5;
}
#blue {
  opacity: 0.5;
}
</code></pre>
</blockquote>

<p>The CSS selectors can be combined into a single ruleset:</p>

<pre><code>#yellow,
#red , 
#green, 
#blue {
  opacity: 0.5;
}
</code></pre>

<p><sup>1</sup><sub><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Parameters" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Parameters</a></sub></p>
    </div>