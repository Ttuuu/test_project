<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I wonder if you even have tested this program:</p>

<p>This:</p>

<blockquote>
<pre><code>  while (!info.EndOfStream)
  {
    String tempstring = String.Empty;
    tempstring = reader.ReadLine();

    while (!reader.EndOfStream)
    {
</code></pre>
</blockquote>

<p>will run forever because <code>info</code> is never read from and will never reach EOS.</p>

<hr>

<p>In the context this:</p>

<blockquote>
<pre><code>   while (!info.EndOfStream)    {
     String tempstring = String.Empty;
     tempstring = reader.ReadLine();
</code></pre>
</blockquote>

<p>is not understandable. Do you have the <code>tempstring</code> that is going to be written instead of the placeholders in the top of the structure.txt-file?</p>

<p>You open the same file twice:</p>

<blockquote>
<pre><code>public static void WriteToFile(string filePath)
{
  //create a string array to gather our text file information.

  StreamReader reader = new StreamReader(filePath);
  StreamReader info = new StreamReader("Structure.txt");
</code></pre>
</blockquote>

<p>because the argument <code>filePath</code> is also <code>"Structure.txt"</code>. Why open the same file more than once for the same operation?</p>

<hr>

<p><code>StreamReader</code> and <code>StreamWriter</code> implement <code>IDisposable</code> and should be disposed off like:</p>

<pre><code>using (StreamReader reader = new StreamReader(filePath))
using (StreamWriter writer = new StreamWriter("helle.cs"))
{
   ...
}
</code></pre>

<hr>

<p>You shouldn't hardcode string literals in a method but provide them as arguments:</p>

<pre><code>public static void WriteToFile(string inputFile, string outputFile)
{
   ...
}
</code></pre>

<hr>

<p>Instead of:</p>

<blockquote>
<pre><code> while (!reader.EndOfStream)
 {

    temp = reader.ReadLine();
</code></pre>
</blockquote>

<p>it is better to do:</p>

<pre><code>string line = null;
while ((line = reader.ReadLine()) != null)
{
   ...
}
</code></pre>

<hr>

<blockquote>
  <p><code>StreamWriter writer = new StreamWriter("Hello.cs", true);</code></p>
</blockquote>

<p>you set the <code>append</code> argument to true, but I'm quite sure you mean to overwrite the existing file?</p>

<hr>
    </div>