<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First things first, you can remove the <code>if len(sortedlist) == 1</code>.
If we do a quick run through we should get:</p>

<pre><code>theList = [1]
conterofthelist = 1 / 2
medianpart = [sortedlist[0]]
median = 1
</code></pre>

<p>This removes the first if.<br>
You can remove most of the code in the else:</p>

<ul>
<li>The first <code>medianpart</code> is immediately overridden.</li>
<li>Median part could be just a number, not a list.</li>
<li>You don't need to loop through <code>medianpart</code>.</li>
<li>You can just <code>return sortedlist[centerofthelist]</code></li>
</ul>

<p>This means that the code you have at the moment is:</p>

<pre><code>def median(thelist):
    median = 0
    sortedlist = sorted(thelist)
    lengthofthelist = len(sortedlist)
    centerofthelist = lengthofthelist / 2
    if len(sortedlist) % 2 == 0:
        temp = 0.0
        medianparties = []
        medianparties = sortedlist[centerofthelist -1 : centerofthelist +1 ]
        for value in medianparties:
            temp += value
            median = temp / 2
        return median
    else:
        return sortedlist[centerofthelist]
</code></pre>

<p>If we go through the if now:</p>

<ul>
<li>You don't need the first <code>medianparties</code>.</li>
<li>You can use <code>sum</code> rather than your loop.</li>
<li>You should move the <code>temp / 2</code> out of the loop, to the <code>return</code>.</li>
</ul>

<p>This should result in something like:</p>

<pre><code>return sum(sortedlist[centerofthelist -1 : centerofthelist +1 ]) / 2.0
</code></pre>

<p>This should show you that you use <code>lengthofthelist</code> twice, and <code>median</code> never.
You could probably remove these.</p>

<hr>

<p>Python has a style guide called <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow">PEP8</a>, it's a fancy name I know.
It gives a few rules that you should probably follow:</p>

<ul>
<li><p>Variable names should be <code>lower_snake_case</code>.<br>
This means that <code>sortedlist</code> should be <code>sorted_list</code> and <code>theList</code> should be <code>the_list</code>.</p></li>
<li><p>Binary operators need a space either side of them. <code>centerofthelist - 1</code>.</p></li>
<li>List slices <code>:</code> have to have no spaces either side.</li>
<li>Use good variable names.</li>
</ul>

<p>This should result in something like:</p>

<pre><code>def median(numbers):
    numbers = sorted(numbers)
    center = len(numbers) / 2
    if len(numbers) % 2 == 0:
        return sum(numbers[center - 1:center + 1]) / 2.0
    else:
        return numbers[center]
</code></pre>
    </div>