<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My comments are not necessarily python specific but just questioning some modelling choices.</p>

<ol>
<li><p>Why does vertex take index as an argument? The array of vertices belongs to the graph, is maintained and manipulated by the graph. The question "what is the index of this vertex" should always be answered by the graph object.</p></li>
<li><p>In general, the index should be something internal to graph. You don't want to be passing around the index of vertices everywhere, but the vertices themselves.</p>

<pre><code>path = graph.get_shortest_path(v0, v1)
</code></pre></li>
<li><p>As you write bigger programs, keeping track of the index of each vertex at some higher level of abstraction (the thing that creates the graph object) is probably going to be cumbersome. Also, then you can never sort or reorder the list of vertice or remove a vertex from the list because you'll screw up the indexing. You might have a similar problem with the neighbor list in the vector class.</p></li>
<li><p>You could expose neighbors in the vector class. Makes looping simpler:</p>

<pre><code>for n in current_vertex.neighbors:
</code></pre></li>
</ol>
    </div>