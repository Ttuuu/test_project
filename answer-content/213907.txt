<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Quick skim simplifications:</p>

<ul>
<li><p>The way you return in <code>UtilityMethods</code> allows you to not use an explicit <code>else</code>-block. e.g. for <code>getInt8</code>:</p>

<pre><code>if (input == null || input.equals("")) {
    return 0;
}
return Byte.parseByte(input);
</code></pre></li>
<li><p>the return statement for <code>getBoolean</code> should make you stumble. Instead of a nested ternary, use a simple or:</p>

<pre><code>return input.equals("y") || input.equals("yes");
</code></pre>

<p>Note that you're currently assuming the value will always be lowers-case. That may not be true :)</p></li>
<li><p><code>getNodesByTagName</code> is a bit of a misnomer. You're only searching through the child nodes themselves. As such, this could be more easily expressed in a stream using <code>filter</code>, if only NodeList was <code>Iterable</code> (<em>~sigh</em>). As it stands, the only thing I would advise is to return a <code>List</code> instead of an <code>ArrayList</code> (program against interfaces), as well as a rename to something like <code>childrenWithTagName</code> or something like that.</p>

<p>If you wanted to search through the whole document tree below the root node, you may want to look into <code>XPath</code> instead.</p></li>
<li><p><code>getAttrValue</code> is a bit of a misnomer as well. Nodes in an xml-document have attributes which have values. Those attributes are only defined on <code>Element</code>s. The nodeValue is but one possible attribute of an element, in theory any element can contain any number of attributes.</p>

<p>As it stands this method is a thin wrapper over <code>getNodeValue</code> that allows you to avoid null pointers.</p></li>
<li><p>Generally speaking: use <code>List</code> over <code>ArrayList</code> in declarations,</p></li>
</ul>

<hr>

<p>I personally don't very much like the way you named the fields in your class, but I assume that this has some very good reason and at least you're being consistent about it :)<br>
I just wanted to get that off my chest and with that, I'm done.</p>
    </div>