<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As @indi <a href="https://codereview.stackexchange.com/questions/198393/remaking-stdto-string-in-c-with-udls-user-defined-literals#comment382786_198393">mentioned</a> you can use <code>(const char *)</code> parameter list. This allows <code>_cstr</code> to be <code>constexpr</code> and simplifies it:</p>

<pre><code>constexpr const char * operator"" _cstr(const char * cstr) {
    return cstr;
}
</code></pre>

<p><code>constexpr</code> here helps you to perform static checking:</p>

<pre><code>constexpr bool cstring_equal(const char * lhs, const char * rhs) {
    return lhs[0] == rhs[0]
        &amp;&amp; (lhs[0] == '\0' || cstring_equal(&amp;lhs[1], &amp;rhs[1]));
}

static_assert(cstring_equal(123_cstr, "123"), "123_cstr doesn't match expected value \"123\"");
</code></pre>

<p>Also <code>(const char *)</code> parameter list allows floating-point: <code>12.3_cstr</code>.</p>
    </div>