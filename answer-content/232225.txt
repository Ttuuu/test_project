<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You don't specify what <code>n</code> is, so I'm going to assume that <code>n</code> is the total combined length of the two strings <code>s1</code> and <code>s2</code> that are input.</p>

<p>Imagine you have a <a href="https://en.wikipedia.org/wiki/Hash_function" rel="nofollow noreferrer">hashing function</a> <code>h(s)</code> that computes a fixed-size hash value for a given string <code>s</code>. That is, given a string <code>s = "abc"</code> the function <code>h(s)</code> will return some number <code>X</code> that is computed from <code>s</code>, so that changing the contents of <code>s</code> will change the returned value <code>X</code>. </p>

<p>If you keep an array of hash values for the substrings of a given length <code>k</code> for each starting position <code>i</code>, you will have a total size of <code>sizeof(h(s1)) * (n - 2k + 2)</code> which is easily <span class="math-container">\$O(n)\$</span>.</p>

<p>So, start from the longest possible substring and work your way down, computing the hashes of all substrings then checking to see if the two strings share a common substring. If two hashes are equal you can compare the resulting substrings and return if you find a match. If you get to <code>k==1</code> and find no match, then there's no match to be had.</p>

<p>With that outline, I'll point out that python provides a built-in called <a href="https://docs.python.org/3/library/functions.html?highlight=hash#hash" rel="nofollow noreferrer"><code>hash()</code></a> that does what you want.</p>
    </div>