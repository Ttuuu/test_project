<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are bound to get different opinions on this one, but I personally do <em>not</em> like the use of <code>final</code> and <code>this</code> in various places:</p>

<pre><code>public final class LotteryConfiguration
</code></pre>

<p>Here, final means "you cannot subclass this". Why? Is there a specific reason to forbid subclassing for once and for all? (In real-life projects, 95% of all times it was a bad idea to make a class final, though it always "seemed a good idea at that time".)</p>

<p><code>final</code> in local variables:</p>

<pre><code>public LotteryConfiguration(final int maximumNumberValue,
                            final int lotteryRowLength) {
    ...
}

final int maximumNumber = this.lotteryConfiguration.getMaximumNumberValue();

for (final int number : numbers) {
     ...
}
</code></pre>

<p>Here, <code>final</code> is just noise. OK, you explicitly declare that you will no assign a new value to a local variable, but who cares? Nobody needs this information, and - as your code in general is very readable and understandable - every reader sees this in a single glance without you explicitly telling them.</p>

<p>There are some situations, where the compiler needs an explicit <code>final</code> variable (even though "effectively final" has been introduced in java 8 to reduce this), but apart from that, I'd never use final on a local.</p>

<p>And while we are at compilers: no, todays compilers do not need this information for "optimizing" anymore.</p>

<p><code>final</code> in class fields:</p>

<p><em>YES</em></p>

<p>Used correctly, this can make the class immutable (i.e. suitable for use as a hash-key), makes the intention clear, and is great information for the reader.</p>

<p><code>this</code>: I normally use it only where it is needed (i.e. mostly when assigning a value in a constructor.)</p>

<p>Here:</p>

<pre><code>public void appendNumber(int number) {
    checkNumber(number);
    checkHasSpaceForNewNumber();
    this.lotteryNumbers[this.size++] = number;
    Arrays.sort(this.lotteryNumbers, 0, size);
}
</code></pre>

<p>I would leave out the <code>this</code>. Again, it does not convey any additional information (there is no local <code>lotteryNumbers</code> which I could mistake it for) and adds noise. Apart from that, I use an IDE (this is not the 80s anymore) and see fields and local variables in different colors.</p>
    </div>