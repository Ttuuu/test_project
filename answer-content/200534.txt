<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I believe the best approach here is to just use an array of 256 integers, which correspond to a counter to the numeric value of a letter. </p>

<pre><code>std::array&lt;bool, std::numeric_limits&lt;unsigned char&gt;::max()&gt; seen = {}; //initialize to 0
for (char letter: str) {
    if (seen[letter]) {
        return false;
    }
    seen[letter] = true;
}

return true;
</code></pre>

<p>That way, algorithm will have constant space, and in general, be easy to understand and implement. If lowercase and uppercase letters are considered same, just take sum of the two.</p>

<p>Do note that the code requires adjustment to correctly handle signedness of char.</p>
    </div>