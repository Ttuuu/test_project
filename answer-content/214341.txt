<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>An event-based design might cause some problems:</p>

<ul>
<li>It allows for multiple event handlers, which all get access to the same list. Lists are mutable, so depending on what these event handlers do they could end up with shared mutable state.</li>
<li>It's possible to lose data by not registering an event handler, or by registering too late.</li>
</ul>

<p>A more robust approach would be to replace that event with a callback that must be passed via the buffer's constructor.</p>

<hr>

<p>Other issues:</p>

<ul>
<li>Raising an event while holding a lock is a bad idea. In this case, you end up blocking (wasting) threadpool threads if your event handlers take longer than the interval you specified.</li>
<li>The only use of <code>_buffer</code> that's not protected by a lock on <code>_bufferSyncRoot</code> is fenced in between two <code>lock</code> statements, so if I understand things correctly then there's no point in making <code>_buffer</code> <code>volatile</code>. I would move that assignment inside of the lock just to be sure, and remove that <code>volatile</code> marker.</li>
</ul>
    </div>