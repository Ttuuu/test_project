<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let's see this mathematically. I am assuming that <code>a</code> is an ascendingly sorted array. I start with indexes from 1, to get better readability (by avoiding <code>n-1</code> as often as possible).</p>

<p>We want the following sum:</p>

<p>$$\begin{array}{l@{}l@{}l@{}l}
\sum_{i=1}^{n-1} \sum_{j=i+1}^n (a_j - a_i) = (a_2 - a_1) &amp;+ (a_3 - a_1) &amp;+ (a_4 - a_1) + &amp; \dots + (a_n - a_1) +\\
                    &amp;+ (a_3 - a_2) &amp;+ (a_4 - a_2) + &amp; \dots + (a_n - a_2) +\\
                                &amp;&amp;+ (a_4 - a_3) + &amp; \dots + (a_n - a_3) +\\
                                            &amp;&amp;&amp; \dots
\end{array}$$</p>

<p>So, we:</p>

<ol>
<li>add <code>a1</code> zero times, <code>a2</code> once,... <code>ak</code> k-1 times, and</li>
<li>subtract <code>a1</code> n-1 times, <code>a2</code> n-2 times,... <code>ak</code> n-k times.</li>
</ol>

<p>I'd say that your sum is</p>

<p>$$
\sum_{k=1}^n (k-1)a_k - \sum_{k=1}^n (n-k)a_k = \sum_{k=1}^n (2k-n-1)a_k
$$</p>

<p>Given your example (1,2,3,4), we get:</p>

<p>$$
\sum_{k=1}^4 (2k-4-1)a_k = -3 \cdot 1 + (-1 \cdot 2) + 1 \cdot 3 + 3 \cdot 4 = -3 - 2 + 3 + 12 = 10.
$$</p>

<p>This has a linear complexity, which is optimal, because you need to "visit" each member of the array at least once (which is linear).</p>

<p>I believe you can write your code by yourself. Just set indexes to go from zero, but be careful about the formula: <code>2k - n - 1</code> becomes <code>2k - n + 1</code> when <code>k</code> starts from zero.</p>
    </div>