<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm adding a few points to what <a href="https://codereview.stackexchange.com/users/139640/coal">@Coal_</a> wrote in <a href="https://codereview.stackexchange.com/a/189818/157809">his excellent answer</a>.</p>

<ul>
<li><p>You can use <code>lxml</code> instead of <code>html.parser</code> as it is faster (<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-a-parser" rel="nofollow noreferrer">stated in the docs</a>). Change it everywhere where you've used <code>html.parser</code>.</p></li>
<li><p>The multiple <code>for</code> loops in the <code>grab_image_src_url</code> seem redundant. You can use the following:</p>

<pre><code>def grab_image_src_url(url):
    response = requests.get(url)
    soup = bs(response.text, "lxml")
    return soup.find("div", class_="post").find("img")["src"]
</code></pre></li>
<li><p>The <code>fetch_comics_from_archive()</code> function can be further optimized. Currently, it's using one list comprehension to find all the URLs and another to filter them using RegEx. It can be done in a single list comprehension, using CSS selector with partial match, without using RegEx. You can change the function to:</p>

<pre><code>def fetch_comics_from_archive():
    response = requests.get(ARCHIVE_URL)
    soup = bs(response.text, "lxml")
    return [url.get("href") for url in soup.select('a[href^="http://www.poorlydrawnlines.com/archive/"]')]
</code></pre>

<p>Or, the same can be done without the use of partial match (<code>^</code>). All the required links are located inside the <code>div</code> tag with <code>class="content page"</code>. So, the CSS selector would be <code>div[class="content page"] a</code>. Or, even a shorter selector like <code>".content.page a"</code> would work, as there are no other tags with <code>class="content page"</code>.</p>

<pre><code>def fetch_comics_from_archive():
    response = requests.get(ARCHIVE_URL)
    soup = bs(response.text, "lxml")
    return [url["href"] for url in soup.select(".content.page a")]
</code></pre></li>
</ul>
    </div>