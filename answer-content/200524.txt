<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here are some advices regarding the D3 part of the code:</p>

<h3>Use scales!</h3>

<p>Your <code>if... else</code> logic for filling the rectangles is cumbersome and luckily unnecessary: you can use a scale, in that case a threshold scale:</p>

<pre><code>var color = d3.scaleThreshold()
    .range(["#F8B195", "#F67280", "#C06C84", "#6C5B7B", "#355C7D"])
    .domain([0.5, 0.55, 0.59, 0.62]);
</code></pre>

<p>Then, you can do just this in the <code>attr</code> method:</p>

<pre><code>.attr("fill", function(d) {
    return d[1] === 0 ? "#2A363B" : color(d[1])
});
</code></pre>

<p>Do the same for the positions. Right now, you're using a lot of magic numbers everywhere: for translating the groups, positioning the rectangles and setting their width/height.</p>

<p>Instead of that, set up band scales:</p>

<pre><code>var horizontalGrid = d3.scaleBand()
    .range([100, 400])
    .domain(d3.range(cols))
    .padding(0.1);

var verticalGrid = d3.scaleBand()
    .range([0, 300])
    .domain(d3.range(rows))
    .padding(0.1);
</code></pre>

<p>Using them for translating the groups...</p>

<pre><code>.attr("transform", function(_, i) {
    return "translate(" + horizontalGrid(i) + ")"
})
</code></pre>

<p>...and positioning the rectangles, as well as setting the dimensions:</p>

<pre><code>.attr("y", function(d, i) {
    return verticalGrid(i);
})
.attr("width", horizontalGrid.bandwidth())
.attr("height", verticalGrid.bandwidth());
</code></pre>

<p>Finally, two important advices:</p>

<h3>Always name your selections</h3>

<p>That's very important when the visualisation becomes more and more complex. For instance, you should do:</p>

<pre><code>var groups = svg.selectAll("g")
    //etc...
</code></pre>

<h3>Break your selections</h3>

<p>By breaking your selections not only you can easily reference the correct selection, but you can also avoid things (silently) breaking. And it's way easy to maintain. For instance, in your code:</p>

<pre><code>var groups = svg.selectAll("g")
    //etc...

var rects = groups.selectAll("rect")
    //etc...
</code></pre>

<p>Now you have two selections, <code>groups</code> (which refers to the containing <code>&lt;g&gt;</code> elements) and rects (which refers to the rectangles).</p>

<h3>Select nothing</h3>

<p>You read it right. If you don't plan to have an update selection here, just select nothing in your enter selections, or for a cleaner code select <code>null</code>. So, since you're not selecting anything, you have an enter selection which <strong>always</strong> contains all the data points, and a way faster code.</p>

<p>So, the move snippet becomes:</p>

<pre><code>var groups = svg.selectAll(null)
    //etc...

var rects = groups.selectAll(null)
    //etc...
</code></pre>

<p>If you want to read more about <code>selectAll(null)</code> read my explanation here: <a href="https://stackoverflow.com/q/46147231/5768908">Selecting null: what is the reason behind 'selectAll(null)' in D3.js?</a>.</p>

<h3>Demo</h3>

<p>Here is your code with those changes:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var data = [
  [
    ["Arsenal", 0.0],
    ["Chelsea", 0.6014876082652767],
    ["Liverpool", 0.5204181171517794],
    ["ManchesterCity", 0.549210189254557],
    ["ManchesterUnited", 0.5440890632512689],
    ["Tottenham", 0.6304670189118691]
  ],
  [
    ["Arsenal", 0.6014876082652767],
    ["Chelsea", 0.0],
    ["Liverpool", 0.5507313736526684],
    ["ManchesterCity", 0.5559069243804156],
    ["MancheserUnited", 0.5231358671618266],
    ["Tottenham", 0.6508134781353688]
  ],
  [
    ["Arsenal", 0.5204181171517794],
    ["Chelsea", 0.5507313736526684],
    ["Liverpool", 0.0],
    ["ManchesterCity", 0.49759390310994533],
    ["MancheserUnited", 0.4787550034617063],
    ["Tottenham", 0.5749363562907429]
  ],
  [
    ["Arsenal", 0.549210189254557],
    ["Chelsea", 0.5559069243804156],
    ["Liverpool", 0.49759390310994533],
    ["ManchesterCity", 0.0, ],
    ["MancheserUnited", 0.50215325905151],
    ["Tottenham", 0.5802928689025063]
  ],
  [
    ["Arsenal", 0.5440890632512689],
    ["Chelsea", 0.5231358671618266],
    ["Liverpool", 0.4787550034617063],
    ["ManchesterCity", 0.50215325905151],
    ["MancheserUnited", 0.0],
    ["Tottenham", 0.5497016431211542]
  ],
  [
    ["Arsenal", 0.6304670189118691],
    ["Chelsea", 0.6508134781353688],
    ["Liverpool", 0.5749363562907429],
    ["ManchesterCity", 0.5802928689025063],
    ["MancheserUnited", 0.5497016431211542],
    ["Tottenham", 0.0]
  ]
];

var teams = ["ARS", "CHE", "LIV", "MCI", "MUN", "TOT"];

var width = 600,
  height = 500;

var cols = data.length;
var rows = data.length;
var cellSize = 55;

var horizontalGrid = d3.scaleBand()
  .range([100, 400])
  .domain(d3.range(cols))
  .padding(0.1);

var verticalGrid = d3.scaleBand()
  .range([0, 300])
  .domain(d3.range(rows))
  .padding(0.1);

var color = d3.scaleThreshold()
  .range(["#F8B195", "#F67280", "#C06C84", "#6C5B7B", "#355C7D"])
  .domain([0.5, 0.55, 0.59, 0.62])

var svg = d3.select("body")
  .append("svg")
  .attr("width", width)
  .attr("height", height)

var groups = svg.selectAll(null)
  .data(data)
  .enter()
  .append("g")
  .attr("transform", function(_, i) {
    return "translate(" + horizontalGrid(i) + ")"
  });
  
var rects = groups.selectAll(null)
  .data(function(d) {
    return d;
  })
  .enter()
  .append("rect")
  .attr("fill", function(d) {
    return d[1] === 0 ? "#2A363B" : color(d[1])
  })
  .attr("y", function(d, i) {
    return verticalGrid(i);
  })
  .attr("width", horizontalGrid.bandwidth())
  .attr("height", verticalGrid.bandwidth());</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://d3js.org/d3.v5.min.js"&gt;&lt;/script&gt;</code></pre>
</div>
</div>

    </div>