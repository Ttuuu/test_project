<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is not idiomatic writing style in Go, because the <code>value</code> variable is misleading:</p>

<blockquote>
<pre><code>if _, value := keys[entry]; !value {
</code></pre>
</blockquote>

<p>The first returned value is the value in the map, the second value indicates success or failure of the lookup.
So rename it to <code>ok</code> or <code>found</code>.</p>

<p>If the slice is very large,
then <code>list = append(list, entry)</code> may lead to repeated allocations.
In that case, you can optimize by preallocating <code>list</code> to the maximum possible capacity (<code>len(strSlice)</code>), and assign elements by index rather than using <code>append</code>.
But if you have no reason for this optimization then don't do it,
that would be premature optimization,
the current solution is fine.</p>
    </div>