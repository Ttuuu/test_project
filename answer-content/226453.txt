<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you go for modern C++ the static variables should be marked as <code>constexpr</code> instead of plain old <code>const</code>.</p>

<p>As was said in the other question, it should be beneficial to create an array of length <code>MAXLEGALVALUE - MINLEGALVALUE</code> and directly index into that array. That way there is probably less memory consumed and we count automatically. </p>

<p>Personally I would use <code>std::size_t</code> or a well specified integer type like <code>std::uint32_t</code> rather than <code>unsigned</code>, which depends on the implementation.</p>

<p>In range based for loops where the type is unambiguous I am not really a fan of auto. </p>

<pre><code>for (auto inputs : inputValues)
</code></pre>

<p>How do you know that copying it is cheap here? You have to check the type of the container. Also you should consider const correctness so rather use <code>const int</code> or <code>const auto</code> if you prefere that.</p>

<pre><code>for (const int inputs : inputValues)
</code></pre>

<p>Note that you have a truncation warning here as MINLEGALVALUE is of type <code>int</code>:</p>

<pre><code>unsigned rowLabel = MINLEGALVALUE;
</code></pre>
    </div>