<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To expand on <a href="https://codereview.stackexchange.com/a/210196/98493">the answer</a> by <a href="https://codereview.stackexchange.com/users/126348/aleksandrh">@AleksandrH</a>, this is how I would write it using <code>collections.Counter</code>:</p>

<pre><code>import io
from collections import Counter
import regex as re  # the normal re module does not support \p{P}...

def read_file(file_name):
    """Reads a file into a Counter object.

    File contains rows with counts and words.
    Words can be multiple words separated by punctuation or whitespace.
    If that is the case, separate them.
    """
    counter = Counter()
    with io.open(file_name, 'r', encoding = 'utf8') as infile:
        for line in infile:
            if not line:
                continue
            freq, words = line.strip().split('\t')  # need to omit '\t' when testing, because SO replaces tabs with whitespace
            # split on punctuation and whitespace
            words = re.split(r'\p{P}|\s', words)
            # update all words
            for word in filter(None, words):  # filter out empty strings
                counter[word] += int(freq)
    return counter

def write_file(file_name, counter):
    with io.open(file_name, 'w', encoding='utf8') as outfile:
        outfile.writelines(f'{word},{freq}\n' for word, freq in counter.most_common())  # use `items` if order does not matter


if __name__ == "__main__":
    num_batches = 54
    for i in range(1, num_batches + 1):
        counter = read_file(f"input_batch_{i}.txt")
        write_file(f"output_batch_{i}.txt", counter)
</code></pre>

<p>This also has (the start of) a <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer"><code>docstring</code></a> describing what the <code>read_file</code> function does, functions in the first place in order to separate concerns, and a <a href="http://stackoverflow.com/questions/419163/what-does-if-name-main-do"><code>if __name__ == "__main__":</code> guard</a> to allow importing from this script without the main code running.</p>
    </div>