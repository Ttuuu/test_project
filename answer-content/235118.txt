<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My first question has to be: Why Java 7? If this is production code, then your environment urgently needs to be upgraded since 7 hasn't beeen supported by Oracle for over 5 years. And if this is just practice code there is no reason not to use a more (preferably the most) current version.</p>

<hr>

<p>Is this production (or at least realistic) code? It doesn't seem so, since the method doesn't return (or use) the data extracted.</p>

<hr>

<p>You shouldn't be handling the database connection yourself (especially if the is supposed to be production code). At the very least you should not be opening and closing the connection for the two queries. Instead the (open) database connection (or a database connection pool) should be provided from the outside.</p>

<hr>

<p>Then my next question would be: Why have two queries? It seems that both queries are supposed to return the same records (or at least the second queries returns a subset of the records from the first query). That means the first query already contains all the information needed.</p>

<p>So the reading of the records can be:</p>

<pre><code>// Map no longer needed. Store the data in a list instead.
List&lt;Params&gt; gridData = new ArrayList&lt;&gt;();

// Get results here

while (resultSet.next()) {
    int paramId = resultSet.getInt("PARAM_ID"));
    String param1 = resultSet.getString("PARAM_1");
    // Further params omitted

    int currSetting = resultSet.getInt("curr_setting");
    String param8 = currSetting == 1 ? resultSet.getString("PARAM_8") : null;

    // Declare the paramsDO variable here, and not outsided the loop, 
    // because its the smallest needed scope.
    // Also you have the constructor so use it.
    Params paramsDO = new Params(paramId, param1, /* ..., */ param8);

    gridData.add(paramsDO);
}

// Actually do somethign with the data
return gridData;
</code></pre>

<hr>

<p>Finally especially in data classes such as <code>Params</code> make sure you actually need setters. Even if you keep the two queries you only need <code>setParam8</code> and not the others. In my example you don't need any setters at all. Immutable data objects have many advantages over mutable ones.</p>
    </div>