<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This exercise can be solved using the tools in the Python standard library, namely the <a href="https://docs.python.org/3/library/collections.html" rel="nofollow noreferrer"><code>collections</code></a> module and the <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code></a> module.</p>

<ul>
<li>First, you want to ensure that just because a name appears twice in the same list, it is not double-counted. Use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> and <a href="https://docs.python.org/3/library/functions.html#func-set" rel="nofollow noreferrer"><code>set</code></a> for that (or a comprehension).</li>
<li>Then you want to parse all names from all lists, use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain.from_iterable</code></a> for that.</li>
<li>Finally you need to count how often each name appeared, which you can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> for (just like in the <a href="https://codereview.stackexchange.com/a/220390/98493">other answer</a> by <a href="https://codereview.stackexchange.com/users/42401/peilonrayz">@Peilonrayz</a>).</li>
</ul>



<pre><code>from collections import Counter
from itertools import chain

lists = [list_1, list_2, list_3, list_4, list_5]

no_of_lists_per_name = Counter(chain.from_iterable(map(set, lists)))

for name, no_of_lists in no_of_lists_per_name.most_common():
    if no_of_lists == 1:
        break # since it is ordered by count, once we get this low we are done
    print(f"'{name}' is in {no_of_lists} lists")
# 'Terry Jones' is in 3 lists
# 'John Cleese' is in 2 lists
# 'Michael Palin' is in 2 lists
</code></pre>

<p>If you are learning Python now, don't learn Python 2, unless you <em>really</em> have to. <a href="https://pythonclock.org/" rel="nofollow noreferrer">It will become unsupported in less than a year</a>. And Python 3(.6+) has nice <a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer"><code>f-strings</code></a>, which make formatting a lot easier (I used them in the code above).</p>

<p>Note that you can mix string quotation marks. I.e. if you need single-quotes <code>'</code> inside your string, use double-quotes <code>""</code> to make the string (and vice-versa). This way you don't need to escape them.</p>
    </div>