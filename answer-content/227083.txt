<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would use <code>uint64_t</code> even if the API asks for an <code>unsigned long</code>.  It's far more precise about what it is, and you can always ensure that both are the same.</p>

<p>Assuming your C version is &gt;= GNU C11 you can use the following code just below your <code>#include</code>s (actually anywhere, but I like it on top):</p>

<pre><code>_Static_assert(__builtin_types_compatible_p(uint64_t, unsigned long),
                                           "uint64_t != unsigned long");
</code></pre>

<p>This code doesn't need to go inside a function.</p>

<p>If you just have C99 (Edit: GNU C99), you can do something similar:</p>

<pre><code>#if (sizeof(uint64_t) != sizeof(unsigned long))
#error "uint64_t != unsigned long"
#endif
</code></pre>

<p>You could even write your own wrapper around GMP functions that uses <code>&lt;stdint.h&gt;</code> types.</p>

<p>If for whatever reason <code>unsigned long</code> changed suddenly to <code>uint32_t</code> or <code>uint128_t</code>, you would notice, instead of having new bugs everywhere.</p>
    </div>