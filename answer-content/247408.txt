<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You properly protect against SQL injection, that's good.</p>
<p>I worry about the filtering on the password. If I choose <code>&lt;script&gt;' OR 1=1 "&gt;&gt;&gt;</code> as my password, the filtering should not reduce this to just <code>' OR 1=1 "</code>, just because some part of it looks like HTML tags. A password is not supposed to be displayed anywhere, it is not supposed to be stored in plain text anywhere, the only valid use is to feed it to <code>password_validate</code> and <code>password_hash</code>, and these can cope with arbitrary input (well, except that they stop processing at the first byte that is 0, that is, the byte value 0, not the digit <code>'0'</code>). When I enter a password, I expect this password to be used exactly, unmodified, unnormalized, just as I entered it.</p>
<p>I dimly remember that <code>uniqid</code> is not very unique at all. You should double-check the documentation whether that function provides enough randomness to protect against guessing attacks.</p>
<p>Your code is sending out a mail containing <code>&lt;a href="..."&gt;</code>, but nowhere in the code do I see a <code>Content-type: text/html; charset=UTF-8</code> header.</p>
<p>Your code is sending out malformed HTML. The URL contains a plain <code>&amp;</code>, which in HTML must be escaped as <code>&amp;amp;</code>. To do this, call <code>htmlspecialchars($url)</code>. Most browsers accept this malformed HTML, but it's better do know how to correctly convert between plain text and HTML. Just to avoid cross-site scripting from the beginning.</p>
<p>What if the <code>$fname</code> contains an ampersand? Some companies have that in their name. I don't know of actual people with these names, but who knows? An ampersand would make the generated <code>$activation_link</code> invalid.</p>
    </div>