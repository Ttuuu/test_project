<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can save the info in an array,then use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" rel="nofollow noreferrer">Array.forEach()</a> to execute.</p>

<pre><code>const timeoutPieces = [
    [".class-1", "class-x", 0],
    [".class-2", "class-z", 100],
    [".class-3", "class-y", 200],
];
timeoutPieces.forEach(p =&gt; {
    setTimeout(() =&gt; {
        document.querySelector(p[0]).classList.remove(p[1])
    }, p[2]);
});
</code></pre>

<p>If you want to use es6,and have clear name for vairables,use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Array_destructuring" rel="nofollow noreferrer">Array Destructing</a></p>

<pre><code>timeoutPieces.forEach(([selector, aClass, time]) =&gt; {
    setTimeout(() =&gt; {
        document.querySelector(selector).classList.remove(aClass)
    }, time);
});
</code></pre>

<p>It's using array,is because the selector,class and timer you used are not likely to have relation,if you are certain the time for timeout is incremental by 100,you can use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" rel="nofollow noreferrer">Array.map()</a></p>

<pre><code>const addTimer = (piece, index) =&gt; [...piece, index * 100];
const timeoutPieces = [
    [".class-1", "class-x"],
    [".class-2", "class-z"],
    [".class-3", "class-y"],
].map(addTimer);

timeoutPieces.forEach(([query, aClass, time]) =&gt; {
    setTimeout(() =&gt; {
        document.querySelector(query).classList.remove(aClass)
    }, time);
});
</code></pre>
    </div>