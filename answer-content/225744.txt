<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are several things that hinder the performance of your code:</p>

<ol>
<li>You are using a map to convert from hex digits to binary strings. However map lookups are slow, compared to simple array indexing or a switch statement . What you need to do, instead of using a map, just use a switch statement, when converting from hex to bin:</li>
</ol>

<pre><code>    switch (s.charAt(i))
    { 
      case '0':
        binaryString.append("0000");
        break;
      ...
      case 'F':
        binaryString.append("1111");
        break;
    }
</code></pre>

<p>However, this approach probably will not be as efficent when converting from bin to hex.</p>

<ol start="2">
<li><p>Because it is easy to calculate the length of a bin string from the length of a hex string, you can easily preallocate StringBuilder's with the calculated size. This will save you time, because the will be no memory reallocations.</p></li>
<li><p>If you code is not multithreaded, you could preallocate the StringBuilder's themselves and store them in some private fields of your class. This way you'd avoid spending time for unnecessary creation of the object, that would almost immediately be destroyed.</p></li>
</ol>
    </div>