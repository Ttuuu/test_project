<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since strings in Python are an immutable sequence type, building strings using <code>+=</code> is not good practice, because it can lead to poor performance.  Such concatenation may require the interpreter to allocate a new string and copy both the old and new parts into the new string (though <a href="https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange" rel="noreferrer">CPython tries to avoid that when possible</a>).</p>

<p>I'd think of this as a string substitution exercise.  String substitutions based on patterns can be done using regular expressions.  The solution could be greatly simplified using <a href="https://docs.python.org/2/library/re.html#re.sub" rel="noreferrer"><code>re.sub()</code></a>:</p>

<pre><code>import re

def decodeMorse(morse_code):
    return re.sub(
        '([.-]+)|(?&lt;=[.-])(   )(?=[.-])| *',
        lambda code: MORSE_CODE[code.group(1)] if code.group(1) else
                     ' ' if code.group(2) else '',
        morse_code
    )
</code></pre>

<p>The code above says:</p>

<ul>
<li><strong><code>([.-]+)</code></strong> — For any sequence of one or more dots and/or dashes, perform the <code>MORSE_CODE[…]</code> lookup on that group.</li>
<li><p><strong><code>(?&lt;=[.-])(   )(?=[.-])</code></strong> — For any sequence of three spaces that is…</p>

<ul>
<li><code>(?&lt;=[.-])</code> — preceded by a dot or dash (a "positive lookbehind assertion"), and</li>
<li><code>(?=[.-])</code> — followed by a dot or dash (a "positive lookahead assertion")</li>
</ul>

<p>… then replace that group with a single space.</p></li>
<li><strong><code> *</code></strong> — Any other spaces should be replaced with nothing.</li>
</ul>

<p>It's unfortunate that the lookbehind and lookahead assertions are necessary, because the online test cases expect you to discard leading and trailing spaces.  (An alternate technique you could use is to <a href="https://docs.python.org/2/library/stdtypes.html#str.strip" rel="noreferrer"><code>.strip()</code></a> the input or the output.)</p>
    </div>