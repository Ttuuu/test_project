<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>One of:</p>

<ul>
<li>Only take a string or a number.</li>
<li>Use <code>str</code> either way.</li>
<li>Work against a bespoke class.</li>
</ul></li>
<li><p>Yes. But I find it better to just use <code>Iterator[str]</code>, unless you're using the coroutine aspects of it.</p></li>
<li><p>Yeah that's fine. But:</p>

<ul>
<li>You can just use <code>in</code> rather than <code>any(...)</code>.</li>
<li>You don't need the function <code>get_ids</code> you can just use <code>any</code>, like you are now.</li>
</ul></li>
</ol>



<ul>
<li>Don't use <code>type(...) == int</code>, use <code>isinstance</code>.</li>
<li><p>Validating <code>user_id</code> should probably happen somewhere else.</p>

<p>I'll make a class as an example to show this.</p></li>
</ul>

<pre class="lang-py prettyprint-override"><code>class UserId:
    __slots__ = ('id',)
    id: int

    def __init__(self, id: int) -&gt; None:
        if not self.valid_id(id):
            raise ValueError("ID should be 9 characters long and all digits.")
        self.id = id

    @staticmethod
    def valid_id(id: int) -&gt; bool:
        if not isinstance(id, int):
            return False
        str_id = str(id)
        return (
            len(str_id) == 9
            and str_id.isdigit()
        )

    def exists(self) -&gt; bool:
        user_id = str(self.id)
        with open('ids.txt') as f:
            return any(user_id == line.strip() for line in f)


print(UserId(123456789).exists())
</code></pre>
    </div>