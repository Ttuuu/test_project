<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The design constraint of "<em>repeat (some action) without loops</em>" is nonsensical.  </p>

<p>Any solution that is not "<em>type every rename command yourself</em>" involves a loop.  The loop may be hidden inside <code>xargs</code> and <code>awk</code> or <code>rename</code>; it's still there.</p>

<p>Anyway, assuming the files are like you say (well-formed, no embedded whitespace, all printable characters), you can have <code>awk</code> generate a shell script and feed that to a shell:</p>

<pre><code>\ls | awk '/[A-Z]/ {print "mv",$1,tolower($1)}' | sh
</code></pre>

<p>If you need to deal with spaces and special characters, add quotes and use <code>$0</code> (whole line) instead of <code>$1</code> (first field):</p>

<pre><code>\ls | awk '/[A-Z]/ {printf "mv '\''%s'\'\ \''%s'\''\n",$0,tolower($0)}'
</code></pre>

<p>If the filenames contain <code>'</code> then this will fail and you need to work that out.  Your code has the same problem.  I won't get into the solution here because it involves a zillion backslashes and is <strong>the wrong way to solve this problem</strong>.</p>

<p>The right way to solve this problem is to use a tool built for the task (<code>rename</code>) or a shell loop.  And adding <code>-i</code> is a good idea, in case the new filename already exists.  This will work with any filename:</p>

<pre><code>for f in *[A-Z]* ; do mv -i -- "$f" "${f,,}"; done
</code></pre>
    </div>