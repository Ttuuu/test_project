<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>advice on ... code style</p>
</blockquote>

<p>Including docstrings would be good, e.g. to spell out that RMQ denotes Range Minimal Query.
But as a more pressing matter, your identifiers are much too ambiguous.
The names <code>rmq_index</code> or <code>node_index_map</code> are just not helpful as you never describe an index, and <code>result</code> and <code>raw_array</code> are even worse. At least stick to one or the other, don't use both of them to describe the same thing.
Not once did you refer to the literature (e.g. Schieber and Vishkin), nor comment on an invariant you were maintaining.</p>

<p>It would be helpful to include sample in/out values in the SO posting or, better, in the comments or docstrings. You regrettably ignored the advice to use <code>flake8</code>.</p>

<pre><code>    self.value = value
</code></pre>

<p>This appears to be more of a unique <code>id</code> than some continuous <code>value</code>.</p>

<pre><code>    for i,v in enumerate(raw_array):
</code></pre>

<p>This may have been clearer as <code>for i, depth_id</code>.</p>

<p>It's not clear how a <code>step</code> is different from a <code>depth</code>.</p>

<p>In <code>... self.rmq_index[(i+2**(step-1), step-1)][0] &lt; self.rmq_index[(i, step-1)][0]:</code> it would have been helpful to break out <code>depth_left</code> &amp; <code>depth_right</code> and compare <em>them</em>.</p>

<p>These look like they are useful tests:</p>

<pre><code>print rmq.rmq_query(node_index_map[4], node_index_map[5])
print rmq.rmq_query(node_index_map[4], node_index_map[7])
</code></pre>

<p>but they would be far more informative in the form of assertEqual statements in a unittest.TestCase.</p>
    </div>