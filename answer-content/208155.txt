<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If conditions are exclusive you could use enum:</p>

<pre><code>class PersonService {

    public Map&lt;PersonCategory, List&lt;Person&gt;&gt; getCategorizedPerson(List&lt;Person&gt; allPersonFromDb) {
        return allPersonFromDb.stream().collect(Collectors.groupingBy(PersonUtil::getCategory));
    }
}

enum PersonCategory {
    UNDERAGE,
    SENIOR,
    DEFAULT
}

class Person {

    private int age;
    private String name;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public int getAge() {
        return age;
    }

    public String getName() {
        return name;
    }
}

class PersonUtil {

    public static PersonCategory getCategory(Person person) {
        if (isUnderAged(person)) {
            return PersonCategory.UNDERAGE;
        }
        if (isSeniorCitizen(person)) {
            return PersonCategory.SENIOR;
        }
        return PersonCategory.DEFAULT;
    }

    public static boolean isUnderAged(Person person) {
        return person.getAge() &gt;= 0 &amp;&amp; person.getAge() &lt; 18;
    }

    public static boolean isSeniorCitizen(Person person) {
        return person.getAge() &gt;= 0 &amp;&amp; person.getAge() &lt; 18;
    }
}
</code></pre>
    </div>