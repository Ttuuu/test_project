<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>DRY</h1>
<p>This <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="noreferrer">repetitive</a> code is an anti-pattern:</p>
<pre><code>blueTotal = 0
greenTotal = 0
redTotal = 0
yellowTotal = 0
</code></pre>
<p>Please define</p>
<pre><code>houses = 'blue green red yellow'.split()
</code></pre>
<p>and then you can use array access to perform "the same action" across all houses:</p>
<pre><code>for house in houses:
    total[house] = 0
</code></pre>
<p>One could also assign <code>total = collections.defaultdict(int)</code>, but that would
be a horse of a different color.
(<a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="noreferrer">https://docs.python.org/3/library/collections.html#collections.defaultdict</a>)</p>
<h1>global</h1>
<p>The <code>global</code> keyword is usually not your friend,
it leads to unfortunate coupling.
Here, it is offering you a hint that you want to define a <code>class</code>,
set totals to zero in the <code>__init__()</code> constructor,
and then have <code>places()</code> access <code>self.total[]</code>.</p>
<h1>arg passing</h1>
<p>This is a bit crazy:</p>
<pre><code>    for competitors in competitorDetails:
        points()
</code></pre>
<p>Yes, you <em>can</em> treat <code>competitors</code> as an implicit argument
by making it global, but there is absolutely no reason to,
and the current code makes it extremely difficult for readers
to understand what is going on. Please, please make <code>competitors</code>
an explicit argument, passing it in with <code>points(competitors)</code>.</p>
<h1>formatting</h1>
<p>Clearly this works:</p>
<pre><code>print("blueTotal " + str(blueTotal))
</code></pre>
<p>but the explicit call to <code>str</code> is slightly verbose.
Consider re-phrasing such print statements in one of these ways:</p>
<pre><code>print("blueTotal", blueTotal)
print(f'blueTotal {blueTotal}')
</code></pre>
    </div>