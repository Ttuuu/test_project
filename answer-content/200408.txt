<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>newEmail = collectionItem as Outlook.MailItem;
if (newEmail != null)
{
}
</code></pre>
</blockquote>

<p>You can replace this with a nice filter-expression like:</p>

<pre><code>if (collectionItem is Outlook.MailItem newEmail)
{
    ...
}
</code></pre>

<p>This way the additional variable declaration</p>

<blockquote>
<pre><code>Outlook.MailItem newEmail = null;
</code></pre>
</blockquote>

<p>is no longer necessary.</p>

<hr>

<blockquote>
<pre><code>originalFileName.EndsWith(extension)
</code></pre>
</blockquote>

<p>Windows paths are case-insensitive so comparing extensions is better done with</p>

<pre><code>originalFileName.EndsWith(extension, StringComparison.OrdinalIgnoreCase)
</code></pre>

<hr>

<blockquote>
<pre><code>originalFileName.Remove(extloc, extension.Length)
</code></pre>
</blockquote>

<p>You don't have to extract file names and extensions manually. There is a simpler API for handling this. It's <em>hidden</em> in the static <code>Path</code> class:</p>

<pre><code>Path.GetFileNameWithoutExtension(..)
</code></pre>

<p>and</p>

<pre><code>Path.GetExtension(..)
</code></pre>
    </div>