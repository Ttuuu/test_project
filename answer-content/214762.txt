<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code looks good to me. I think <code>1000 * 60 * 60 * 24</code> would be more intuitive than the scientific notation, but either way gets the job done. </p>

<p>The script doesn't actually take localization into account because <code>Date</code>'s <code>getTime</code> method is not localized. To account for time zone, you'd want to get the "timezone offset" of the user's location. (Note that <code>getTimezoneOffset</code> returns a number of minutes, and that number isn't a property of the date object but just an indication of what timezone the code is running in.)</p>

<p>As for the other methods<br>
 - <code>getTime</code> returns the actual "timestamp", a big integer showing how many milliseconds have passed since the 60s ended in London<br>
 - <code>getUTCMilliseconds</code> is just the last three digits of that timestamp (ie how many milliseconds it's been since the last full second since the "epoch", as it's called.)<br>
 - Leaving out the <code>UTC</code> bit (as in <code>getMilliseconds</code>,  or in any of the similar <code>get</code> methods, excepting <code>getTime</code>) makes javascript calculate the local version for you (and in the case of milliseconds, I'd be pretty surprised if it were different from the universal version.)   </p>

<p>...You can see the whole buffet on MDN:
   <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#Date.prototype_Methods" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#Date.prototype_Methods</a></p>
    </div>