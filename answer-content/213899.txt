<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's a lot of things you can improve upon, but let me offer at least a reasonable start.</p>

<p>First, look into arrays (particularly, <code>std::vector</code>). If you have bunch of variables (like color_1 through color_4) that are intimately connected, they should be somehow logically connected. One natural way is to put them into a vector. </p>

<p>Also, does it make sense a color is represented as a string? The answer is no: you are expecting it to be something like "r" or "R" to designate red. So consider switching the type into something that conveys the correct meaning and protects the user from unintentional mistakes, so make it a <code>char</code> or your own color-enum.</p>

<p>Your transform and colorRandomizer should be implemented in terms of a data structure as well. For example, consider:</p>

<pre><code>const std::vector&lt;std::string&gt; cols = { "red", "blue", "yellow", "violet", "green", "orange" };

std::string colorsRandomizer()
{
    int x = rand() % 6;
    return cols.at(x);
}
</code></pre>

<p>For the above, you need to include <code>&lt;string&gt;</code> and <code>&lt;vector&gt;</code>. Notice how much more simpler this is for maintenance: you can easily change color names and/or add more colors.</p>

<p>A similar idea extends to transform:</p>

<pre><code>const std::map&lt;char, std::string&gt; col_map = 
{
    { 'j', "yellow" },
    { 'b', "blue" },
    { 'g', "green" },
    { 'r', "red" },
    { 'v', "violet" },
    { 'o', "orange" },
};

std::string transform(char couleur)
{
    return col_map[std::tolower(couleur)];
}
</code></pre>

<p>For this, you will need to include <code>&lt;map&gt;</code> and <code>&lt;cctype&gt;</code>. So again this approach decreases your maintenance burden and makes the code more readable. You could also ensure that the argument is actually in the map, and then fail gracefully in case it is not, but I'm skipping that you focus on the idea.</p>
    </div>