<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The Perl approach can be shorter and faster than it already is:</p>

<pre><code>perl -ple"BEGIN { @ARGV=glob shift } s,$,|$ARGV," *.csv &gt; Consolidated_Magic_File.not_an_input
ren *.not_an_input *.csv
</code></pre>

<p>The best PowerShell approach is not so different from the fast Perl approach.  Feed a list of filenames, use <code>Get-Content</code> (or <code>gc</code>) to read them, let PS figure out where the line breaks are, loop through those results and collect all the outputs in one place.</p>

<pre><code>ls \\unc\folder -Filter *.txt | %{ $fn=$_.Basename; gc $_.PSPath | %{ $_ + "|$fn" } } | sc out.csv
</code></pre>

<p><code>$_.Basename</code> is the name without path or extension.  You can use <code>$_.Name</code> to get the original name with extension, or <code>$_.Basename + ".csv"</code> to label the output with CSV-filenames even though your input was TXT files.</p>
    </div>