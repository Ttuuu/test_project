<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><code>delimiterFound + strlen(delimiter)</code> sounds like a bug. If the delimiter is longer than one character, <code>*newString</code> will point too far into the original, maybe even beyond the end. Correct me if I am wrong, <code>delimiterFound + 1</code> is what you are actually after.</p></li>
<li><p>Modern C allows, and strongly encourages, to declare variables as close to their use a possible. Consider</p>

<pre><code>char * delimiterFound = strstr(string, delimiter);
....
char * tok = malloc(tokLenght + 1);
</code></pre>

<p>etc.</p></li>
<li><p>Always test that <code>malloc</code> didn't fail.</p></li>
<li><p>More spaces - around keywords, braces, etc - definitely improve readability:</p>

<pre><code>    if (....) {
        ....
    } else {
        ....
    }
</code></pre></li>
</ul>
    </div>