<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Type hints</h2>
<pre><code>def create_signature(username, password):
</code></pre>
<p>can be</p>
<pre><code>def create_signature(username: str, password: str) -&gt; bytes:
</code></pre>
<h2>Quote style consistency</h2>
<p>Pick single or double:</p>
<pre><code>'Authorization'  : "Basic "
</code></pre>
<h2>Connection string security</h2>
<p>Please (please) do not store a password as a hard-coded source global:</p>
<pre><code>SERVER = 'localhost'
USER = 'root'
PASSWORD = ''
DATABASE = 'bets'
</code></pre>
<p>for so many reasons. At least the password - and often the entire connection string - are externalized and encrypted, one way or another. I had assumed that there are high-quality wallet libraries that can make this safe for you, but have struggled to find one, so I have <a href="https://security.stackexchange.com/questions/233825/encryption-not-hashing-of-credentials-in-a-python-connection-string">asked on Security</a>.</p>
<h2>A correct context manager!</h2>
<pre><code>@contextmanager
def get_connection():
</code></pre>
<p>Thank you! Too bad <code>pymysql</code> didn't bundle this...</p>
<h2>String continuation</h2>
<pre><code>        sql = "INSERT INTO fixture (event_id, league_id, match_date, \
                home_team, away_team) VALUES (%s, %s, %s, %s, %s)"
</code></pre>
<p>I find more legible as</p>
<pre><code>sql = (
    "INSERT INTO fixture (event_id, league_id, match_date, "
    "home_team, away_team) VALUES (%s, %s, %s, %s, %s)"
)
</code></pre>
<p>with a bonus being that there won't be stray whitespace from your indentation.</p>
<h2>Requests sugar</h2>
<p>This:</p>
<pre><code>url = "https://api.pinnacle.com/v1/fixtures?sportId=29&amp;leagueIds=" + ','.join(leagues)
</code></pre>
<p>should not bake in its query params. Pass those as a dict to requests like this:</p>
<p><a href="https://requests.readthedocs.io/en/master/user/quickstart/#passing-parameters-in-urls" rel="nofollow noreferrer">https://requests.readthedocs.io/en/master/user/quickstart/#passing-parameters-in-urls</a></p>
<p>Also, do not call <code>json.loads(response.text)</code>; just use <code>response.json()</code>.</p>
    </div>