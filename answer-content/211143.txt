<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It's really not a good idea to "simulate" a page change by messing with the history like is shown in the chosen answer. It might work for one case but as a general function it is a bad idea. I would however employ a helper function for generating DOM elements, and I would use fetch instead of xhr.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function post(url, params, redir = false, callback = null) {
  if (redir) {
    const mkele = (tag, props, parent) =&gt; {
      var ele = document.createElement(tag);
      for(prop in props) ele.setAttribute(prop, props[prop]);
      parent.appendChild(ele);
      return ele;
    };
    const form = mkele('form', {method:"POST", action:url}, document.body);
    for (let k in params) mkele('input', {name:k, value:params[k], type:'hidden'}, form);
    form.submit();
  } else {
    const fd = new FormData();
    for (let param in params) fd.append(param, params[param])
    fetch(url, {method:"POST", body:fd}).then(callback);
  }
}</code></pre>
</div>
</div>

    </div>