<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>OK, so what I understand, class <code>MassiveDTO</code> will be instantiated sometimes in your application, but those 3 lists can be static and won't change. So solution is create classes with static hard coded lists (3 classes) and just use static reference them in <code>MassiveDTO</code>:</p>

<pre><code>public class MassiveDTO {

private List&lt;String&gt; company = CompanyDataHolder.COMPANY_LIST;
private List&lt;String&gt; partners = PartnersDataHolder.PARTNERS_LIST;
private List&lt;String&gt; biodata = BiodataHolder.BIODATA_LIST;

// you probably dont even need setters
public List&lt;String&gt; getCompany() {
    return company == null ? Collections.emptyList() : company;
}

public void setCompany(List&lt;String&gt; company) {
    this.company = company;
}

public List&lt;String&gt; getPartners() {
    return partners == null ? Collections.emptyList() : partners;
}

public void setPartners(List&lt;String&gt; partners) {
    this.partners = partners;
}

public List&lt;String&gt; getBiodata() {
    return biodata == null ? Collections.emptyList() : biodata;
}

public void setBiodata(List&lt;String&gt; biodata) {
    this.biodata = biodata;
}
}
</code></pre>

<p>And static lists (that can be compiled and won't change)</p>

<pre><code>public final class BiodataHolder {

    public static final List&lt;String&gt; BIODATA_LIST;

    static {
        List&lt;String&gt; data = new ArrayList&lt;&gt;();
        data.add("Biodata 1");
        data.add("Biodata 2");
        // ...
        data.add("Biodata 100");
        BIODATA_LIST = Collections.unmodifiableList(data);
    }
}
</code></pre>

<pre><code>    public final class PartnersDataHolder {

    public static final List&lt;String&gt; PARTNERS_LIST;

    static {
        List&lt;String&gt; data = new ArrayList&lt;&gt;();
        data.add("Partner 1");
        data.add("Partner 2");
        // ...
        data.add("Partner 100");
        PARTNERS_LIST = Collections.unmodifiableList(data);
    }
}
</code></pre>

<pre><code>    public final class CompanyDataHolder {

    public static final List&lt;String&gt; COMPANY_LIST;

    static {
        List&lt;String&gt; data = new ArrayList&lt;&gt;();
        data.add("Company 1");
        data.add("Company 2");
        // ...
        data.add("Company 100");
        COMPANY_LIST = Collections.unmodifiableList(data);
    }
}
</code></pre>
    </div>