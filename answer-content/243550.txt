<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>At this point we can already see that CartPresenter (as others) needs to embed Model's data into HTML. As it violates the Single Responsibility Principle, do I need something like Decorators to take formatted data from Presenters and warp it inside HTML?</p>
</blockquote>

<p>No, HTML belongs in your views. If you need to share HTML, you should create a partial. The presenter pattern wraps methods used in your views in an object to not 'pollute' the presented object and to keep your views more readable. You should not put HTML in your presenter.</p>

<p>In your example, you could have a <code>CartRow</code> (or <code>CartRowPresenter</code>) class and then a <code>_cart_row.html.erb</code> partial. </p>

<blockquote>
  <p>Q: Also, I used to memoized :products and :cart_products inside instance variable, but it make no sens as function are called once and data they returns is used directly (right?).</p>
</blockquote>

<p>Correct, memoization is "optimization technique used primarily to speed up computer programs by storing the results of expensive function calls". If you don't use the computation result several times, there is no need to memoization. </p>

<blockquote>
  <p>Q: .html_safe adds injection vulnerabilities right? I could try to rigorously validate data, but is there a way not to open that breach?</p>
</blockquote>

<p>As mentioned in my first answer, you should avoid putting HTML in your Presenter (Model, PORO, etc). HTML belongs in your views (and helpers).</p>
    </div>