<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>    public static string RemoveStackStrace(string exceptionString)
    {
        // Stack-trace begins at the first 'at'
        return Regex.Split(exceptionString, @"^\s{3}at", RegexOptions.Multiline).First();
    }
</code></pre>
</blockquote>

<p>I assume the method name is a typo for <code>RemoveStackTrace</code>.</p>

<p>Regex seems overkill, as does <code>\s{3}</code> instead of simply <code>"   at"</code>. Is there any circumstance in which .Net would localise the spaces to something else but not the <code>at</code>?</p>

<p>(Also: yes, the <code>at</code> is localised. This library won't be so helpful for parsing error messages generated by computers running in a non-English locale).</p>

<hr>

<blockquote>
<pre><code>    public static IEnumerable&lt;ExceptionInfo&gt; ParseExceptions(string exceptionString)
    {
        // Exceptions start with 'xException:' string and end either with '$' or '---&gt;' if an inner exception follows.
</code></pre>
</blockquote>

<p>That's not necessarily true, particularly with legacy libraries. There's a tonne of weirdly named exceptions for compatibility with Visual Basic, not to mention <code>ExceptionCollection</code>. And who knows what third party libraries do, without checking? In your use case it might be true, but perhaps it would be worth logging a warning if there's no match.</p>

<hr>

<blockquote>
<pre><code>public static class EnumerableExtensions
{
    public static IEnumerable&lt;T&gt; Reverse&lt;T&gt;(this IEnumerable&lt;T&gt; source) =&gt; new Stack&lt;T&gt;(source);
}
</code></pre>
</blockquote>

<p>What's wrong with <code>System.Linq.Enumerable.Reverse</code>?</p>

<hr>

<p>Otherwise, looks good, and possibly worth <strike>stealing</strike> borrowing. I'm not sure: can it be packaged as a nuget in such a way that it's just necessary to add a reference to it and it installs itself automatically?</p>
    </div>