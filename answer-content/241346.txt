<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Control.java</strong></p>

<p>This is just my opinion, but interactive specialized command line interfaces are weird. Did you consider command line arguments with a ready made command line parser library (free software)?</p>

<p>Anyway, you have duplicated the code for handling a "1 or 2" input twice. You should refactor that into a reusable utility method or class.</p>

<p><strong>Triplet.java</strong></p>

<p>Java specifically does not have a generic class for a tuple or triple, for the sole reason that they would be abused as specific types everwhere making code less maintainable and readable. Same here, instead of defining a generic type for a specific purpose, you should define a specific <code>Rgb</code> class with fields "red", "green" and "blue". Or first, shuffle through the standard libraries to see if there is one already. <code>java.awt.Color</code> comes to mind but I don't remember if it fits your purpose.</p>

<p>I the color components have minimum and maximum values (0 to 255 for example) your class should document and enforce them.</p>

<p><strong>Picture.java</strong></p>

<pre><code>private Triplet[][] array;
</code></pre>

<p>Use descriptive field names. Array means just an array and that information already is in the field type (it's actually a two dimensional array, so the name is a bit misleading now). Maybe name it "rgbValues". When I do image processing, I like to store the image data in a one dimensional array and onvert x/y coordinates if needed. If it's not needed, the operations on the arrays become much simpler. This may come the fact that the image manipulation operations in the Java standard libraries also use one dimensional arrays so I adopted it from there.</p>

<p>It's also quite common to use a plain integer to represent an RGB value in the standard libraries with each component (and alpha) assigned 8 bits.</p>
    </div>