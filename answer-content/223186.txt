<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Review</h3>

<ul>
<li>You make a special branch to distinguish odd from even array lengths. <code>if (subject.Length % 2 != 0)</code> This is not required because getting the mid of an array can just be retrieved as <code>(end - start) / 2</code>. In case of an even array, you get the left index of the mid index pair. This is not a bad thing, we are not calculating a median here.</li>
<li>You write alot of comments <code>// if the array count is odd</code>. Because you are a beginner, this is ok. But try writing code in a way these obvious comments are not required. Pick good method and variable names.</li>
<li>You have taken the chopping part a bit literally. <code>Array.Copy(subject, chopped, mid);</code> is an expensive operation. Perhaps you could have worked on the source array, but played around with the start and end index instead.</li>
</ul>

<h3>Alternative</h3>

<p>Use an algorithm that keeps refining <code>start</code> and <code>end</code> index until a match is found. This way, you don't need to make new array segments. This works for both odd and even arrays.</p>

<pre><code>public static int Chop(int value, int[] subject)
{
    subject = subject ?? throw new ArgumentNullException(nameof(subject));
    if (subject.Length == 0) return -1;
    var start = 0;
    var end = subject.Length - 1;
    return Chop(value, subject, start, end);
}

private static int Chop(int value, int[] subject, int start, int end)
{
    var span = end - start;
    var mid = start + span / 2

    if (subject[mid] == value) return mid;
    if (span == 0)  return -1; 

    if (subject[mid] &gt; value)
    {
        return Chop(value, subject, start, mid);
    }

    return Chop(value, subject, mid + 1, end);
}
</code></pre>

<p>Test</p>

<pre><code>static void Main(string[] args)
{
    Console.WriteLine(Chop(3, new[] { 2 }));
    Console.WriteLine(Chop(3, new[] { 3 }));
    Console.WriteLine(Chop(3, new[] { 3, 4 }));
    Console.WriteLine(Chop(3, new[] { -1, 3, 4 }));
    Console.WriteLine(Chop(3, new[] { 1, 2, 3, 4 }));
    Console.WriteLine(Chop(3, new int[0]));
    Console.ReadKey();
}
</code></pre>
    </div>