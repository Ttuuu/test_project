<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't see the need to find a specific row number.  Simply work your way down until you reach the current week.</p>
<p>The key to reducing repeat code is to extract it to it's own method.</p>
<h2>Refactored Code</h2>
<pre><code>Sub UpdateWeeklyReports()
    Application.ScreenUpdating = False
    Const WorksheetName As String = "Sheet1"
    Const FirstWeekNumberRow As Long = 3
    Dim LastWeek As Range
    Dim What As String, Replacement As String
    With Worksheets(WorksheetName)
        Dim Row As Long
        For Row = FirstWeekNumberRow + 1 To  Format(Now, "WW") - 1
            If Not .Cells(Row, 3).HasFormula Then
                ' What = "sem " &amp; .Cells(Row - 1, 2).Value
                ' Replacement = "sem " &amp; .Cells(Row, 2).Value
                AddNewRow SourceRange:=.Rows(Row - 1).Range("C1:J1"), What:=What, Replacement:=Replacement
                AddNewRow SourceRange:=.Rows(Row - 1).Range("M1:T1"), What:=What, Replacement:=Replacement
                AddNewRow SourceRange:=.Rows(Row - 1).Range("W1:AD1"), What:=What, Replacement:=Replacement
            End If
        Next
    End With
End Sub

Private Sub AddNewRow(ByVal SourceRange As Range, ByVal What As String, ByVal Replacement As String)
    With SourceRange
        .Offset(1).Formula = .Formula
        .Offset(1).Replace What:=What, Replacement:=Replacement, LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
    End With
End Sub
</code></pre>
    </div>