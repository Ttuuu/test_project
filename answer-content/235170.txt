<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think I found a solution that seemed the most elegant:</p>

<pre><code>Sub Test()

'Get a 1D-array from columns of interest
Dim arr As Variant: arr = Application.Index(Range("A1:AA1").Value, 1, Array(1, 2, 3, 6, 11, 24, 27))

'Check if all elements in array match the first element
With Application
    If .Count(.Match(arr, Array(arr(1)), 0)) = 7 Then
        Debug.Print "All equal to first cell"
    Else
        Debug.Print "Not all equal to first cell"
    End If
End With

End Sub
</code></pre>

<p>So effectively; <code>Application.Count</code> and <code>Application.Match</code> work together to replace the <code>WorksheetFunction.CountIf</code> quite seamlessly on any irregular non-continuous range. And therefor we prevent any iteration.</p>

<p>This would however not take into consideration exact matches (not case-sensitive). For that I would revert back to my initial attempt.</p>
    </div>