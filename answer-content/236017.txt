<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code is pretty good.</p>

<ul>
<li><p>You have some Pythonic style problems like <code>on_press</code> should have two blank lines before it, mypy probably would complain about <code>exit_singal: bool = False</code> and un-Pythonic <code>if (...):</code> statements. And so I recommend that you run a linter or two on your code.</p></li>
<li><p>Personally I don't like <code>view.notify('Playing...')</code> and then <code>player.play()</code>. Personally I would prefer if <code>view</code> and <code>player</code> had the same interface for signals. This would mean that you would have:</p>

<pre class="lang-py prettyprint-override"><code>if key == 'p':
    view.play()
    player.play()
</code></pre></li>
<li><p>Personally I would prefer <code>raise SystemExit(0)</code> rather than <code>exit_signal</code>. This reduces the size of the global scope. You should be able to achieve the same results with a <code>try</code> <code>finally</code>.</p></li>
<li><p>If you utilize <code>SystemExit</code> and make <code>view</code> and <code>player</code> have the same interface. Then you could convert <code>on_press</code> to be super simple, by using a dictionary:</p>

<pre class="lang-py prettyprint-override"><code>INTERFACE = {
    'p': 'play',
    'a': 'pause',
    'n': 'skip_forward',
    'l': 'skip_back',
    'q': 'quit',
}

def on_press(key: keyboard.KeyCode, view: View, player: Player):
    key = str(key).strip("'")
    function = INTERFACE.get(key, None)
    if function is not None:
        getattr(view, function)()
        getattr(player, function)()
    view.update_ui(player.get_metadata())
</code></pre></li>
<li><p>I've found it to be very rare to need to use <code>del</code>, or ever define <code>__del__</code>. Maybe you <em>really</em> need it, maybe you don't?</p></li>
<li>You can use <code>f'{minutes}:{seconds:0&gt;2}'</code> so that the seconds are padded in <code>View._strfdelta</code>.</li>
</ul>
    </div>