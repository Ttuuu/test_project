<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You won't know for sure which is the fastest unless you test it. And you won't know if that portion of the code is what matters unless you profile its runtime execution. When you care about performance, testing in real time is the only way.</p>

<p>If you look at it from a more theoretical perspective, then filtering is a <code>O(n)</code> activity, and you won't be able to do much better than the simplest way:</p>

<pre><code>for (const auto&amp; name : results) {
    if (pred(name)) ...
}
</code></pre>

<p>You can do very fancy things, have <code>lambda</code>s with <code>this</code> capture, <code>Boost</code> ranges prefiguration, etc. and they are good things, perhaps more readable once you're used to those idioms, but you won't be more efficient.</p>

<p>That said, your second version should do better if <code>queryStrings</code> is able not to allocate memory for table records which don't satisfy the predicate.</p>
    </div>