<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I found a little inconsistency in the following part of the code:</p>

<pre class="lang-java prettyprint-override"><code>// Minuten berechnen
int minutes = seconds / 60;
seconds = seconds - minutes * 60;
System.out.println("Minuten: " + minutes);
</code></pre>

<p>In all the other paragraphs you use named constants. You should follow that pattern here as well. <code>MINUTE_IN_SECONDS</code> is a perfect name for the 60.</p>

<p>The following two statements are equivalent. The second is idiomatic Java, the first is unnecessarily verbose.</p>

<pre class="lang-java prettyprint-override"><code>seconds = seconds - minutes * 60;
seconds -= minutes * 60;
</code></pre>

<p>In the following declaration, I prefer the second variant since it is closer to the natural language "1 day is 24 hours" when being read aloud.</p>

<pre class="lang-java prettyprint-override"><code>int DAY_IN_SECONDS = HOUR_IN_SECONDS * 24;
int DAY_IN_SECONDS = 24 * HOUR_IN_SECONDS;
</code></pre>

<p>A completely different way of splitting the total seconds <code>x</code> into the different time units is:</p>

<pre class="lang-java prettyprint-override"><code>int seconds = x % 60;
x /= 60;

int minutes = x % 60;
x /= 60;

int hours = x % 24;
x /= 24;

int days = x % 365;
x /= 365;

int years = x;
</code></pre>

<p>This way you don't need the named constants since there are 60 seconds, 24 hours and 365 days, and all the numbers that are spelled out are written close to the name of their corresponding time unit.</p>

<p>Sure, the code looks like it has a lot of duplication, but there's no easy way around that since Java doesn't support multiple return values per method.</p>
    </div>