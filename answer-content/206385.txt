<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your loop uses 2 jumps (<code>je</code>/<code>jmp</code>) on every iteration!  Jumping is expensive, so a solution that needs only 1 jump (<code>jne</code>) will be more effective.</p>

<pre><code>strlen:
  xor rdx, rdx
  dec rdx          ; This compensates for the INC that is happening first.
.next:
  inc rdx
  cmp byte [rsi + rdx], 0
  jne .next
  ret
</code></pre>

<hr>

<p>Do keep things logically together. There's no point in setting <code>RAX</code> before the call to <em>strlen</em>.</p>

<pre><code>puts:
  ; string passed through rsi
  call strlen      ; Result is in RDX

  mov rax, 1
  syscall
</code></pre>
    </div>