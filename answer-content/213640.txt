<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are <a href="/search?q=600851475143+is%3Aquestion">many questions about Project Euler 3</a> on this site already.  The trick is to <a href="/a/48185/9357">pick an algorithm</a> thatâ€¦</p>

<ul>
<li>Reduces <code>n</code> whenever you find a factor, so that you don't need to consider factors anywhere near as large as 600851475143</li>
<li>Only finds prime factors, and never composite factors</li>
</ul>



<pre><code>from itertools import chain, count

def biggest_prime_factor(n):
    for f in chain([2], count(3, 2)):
        while n % f == 0:
            n //= f
            if f &gt;= n ** 0.5:
                return f if n == 1 else n

print(biggest_prime_factor(600851475143))
</code></pre>
    </div>