<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>1. About your question( validation operator is wrong):</h2>

<p>From your condition:</p>

<blockquote>
  <p>if(symbol != add || symbol != subtract || symbol != multiply || symbol
  != divide)</p>
</blockquote>

<p>you are checking if the symbol is not 1 of 4 operators then it will return false. Then the condition is always true because every symbol with differrence with 1 of 4 operators.
You should AND conditions instead of OR in this case:</p>

<pre><code>if (symbol != add &amp;&amp; symbol != subtract &amp;&amp; symbol != multiply &amp;&amp; symbol != divide)
</code></pre>

<h2>2. Code smell:</h2>

<ul>
<li>You are using too many magic values.</li>
<li>You should define enum/list orconstants for them, anh for operators also. </li>
<li>You should follow coding convention also. </li>
</ul>

<p>Example:</p>

<p>Bellow variable is redundant:</p>

<blockquote>
  <p>string operator1 = operandTextBox1.Text;</p>
</blockquote>

<p>Your variable name are not consistent:</p>

<blockquote>
<pre><code>    operand**2**TextBox
    operandTextBox**1**
</code></pre>
</blockquote>

<p>You should define some constant for your magic values. Ex: "Operand 1" is magic value.</p>

<p>You can define a list of operators instead of use many operator strings. Then next time, if you want more operators( % for an example). And your operator validation also become easier:</p>

<pre><code>readonly List&lt;string&gt; operators = new List&lt;string&gt; { "+", "-", "*", "/" };

public bool IsOperator(TextBox textBox, string name)
{
    string symbol = Convert.ToString(textBox.Text);
    if (!operators.Contains(symbol))
    {
        MessageBox.Show(name + " must be +, -, *, or /.", "Entry Error");
        textBox.Focus();
        return false;
    }
    return true;
}
</code></pre>

<p>P/S: This is just some ideas after a quickly review. You can look back your code based on my ideas and refactor it more.</p>
    </div>