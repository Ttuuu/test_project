<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>1) Real implementation of RSA use the <em>Chinese Remainder Theorem</em>, which greatly <a href="https://crypto.stackexchange.com/a/2580/38781">improves the performance</a>.</p>

<p>2) The big performance difference between encryption and decryption is a normal thing for RSA. It comes from the fact, that the performance of the modular exponentiation used depends on the number of <em>1</em> bits in the exponent. If you either chose the public exponent to be very small (like you are doing in your code, which is insecure btw) or large but with a lot of zeroes in its binary representation (usually e=655537=100...001 is used) public key operations (=encryption) will be fast. The private exponent can not be controlled and will have ~1/2 of its bit set to one, making the decryption a lot slower.</p>
    </div>