<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you use the <code>.str</code> attribute of the column, you get most of the standard Python string functions. In particular, with Python strings you can ask if a string contains another string with the <code>__contains__()</code> method (i.e. the <code>in</code> operator):</p>

<pre class="lang-py prettyprint-override"><code>&gt;&gt;&gt; "asdf" in "asdfqwerty"
True
&gt;&gt;&gt; "asdfqwerty".__contains__("asdf")  # equivalently
True
</code></pre>

<p>Pandas exposes this as the <code>.contains()</code> method on the <code>.str</code> attribute, as discussed in the <a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/text.html" rel="nofollow noreferrer">working with text data</a> section of the docs. Annoyingly, you cannot operate on two columns---but your code snippet specifically states:</p>

<blockquote>
  <p>Note: All rows have the same value for important_1.</p>
</blockquote>

<p>So, you actually just need to operate on <code>important_2</code> and check if the single string in <code>important_1</code> is contained in each row, and that you <em>can</em> do with the string methods. This one-liner would do what you want:</p>

<pre class="lang-py prettyprint-override"><code>reduced_df = df[df["important_2"].str.contains(df["important_1"][0]) == True]
</code></pre>

<p>Most of the work is done via </p>

<pre><code>df["important_2"].str.contains(df["important_1"][0])
</code></pre>

<p>which is checking if the strings in <code>important_2</code> have the string which is in the first row of <code>important_1</code>. Since your column has <code>NaN</code> in it¹, you will get <code>NaN</code> values on the comparison, so you have to specifically check if the value is equal to <code>True</code> (or otherwise cast to boolean) to get a boolean array you can index with. Then, using that boolean result you can index your dataframe to drop the irrelevant rows. So to fully explain the line in one sentence, it's "select the rows of my dataframe where the column <code>important_2</code> contains the string in the first row of <code>important_1</code>".</p>

<hr>

<p>¹ this is bad practice FWIW, as you're mixing datatypes--<code>NaN</code> is a floating point value and you have it in a column of strings. You <em>can</em> use empty strings for null-values <em>sometimes</em> with strings, but better practice altogether is to have another column which tells you whether or not a value is present; that way an empty string could still be a valid input.</p>
    </div>