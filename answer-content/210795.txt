<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Looking at just your <code>pairwiseSwap()</code> function… there are too many special cases.</p>

<p>Every iteration through the loop should verify that there are at least two more elements to process.  You shouldn't need a special case to check for <code>if(((*head_ref) == nullptr) || ((*head_ref)-&gt;next == nullptr)) return ;</code> to start.</p>

<p>On the other hand, the loop condition should make it clear that at least two nodes are required to proceed.  You've obfuscated the check for the second node as <code>if(temp2 == nullptr) { break ; }</code>.</p>

<p>You then have a special case for the first iteration (<code>//  if the current element is head, then previous one must be nullptr</code>).  That special case would be better handled by introducing a <code>preHead</code> object, whose <code>next</code> points to the original head node.</p>

<p>After eliminating the special cases as described above, and renaming <code>temp1</code> → <code>a</code> and <code>temp2</code> → <code>b</code> (because "temp" is nearly always meaningless in a variable name), we get this simple solution:</p>

<pre><code>void pairwiseSwap(Node **head) {
    Node preHead{0, *head};
    for (Node *prev = &amp;preHead, *a, *b; (a = prev-&gt;next) &amp;&amp; (b = a-&gt;next); prev = a) {
        a-&gt;next = b-&gt;next;
        b-&gt;next = a;
        prev-&gt;next = b;
    }
    *head = preHead.next;
}
</code></pre>
    </div>