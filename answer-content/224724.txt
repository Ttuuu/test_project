<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well. It's ugly because of the unnecessary <code>if</code> statement. And if you re-format your code, it's not as ugly anymore, and directly clear what it does:</p>

<pre><code>public static boolean validX(int nums[], int index, int startingPosition) {

    return (   get_bit(nums[index]     , startingPosition    ) == 1 &amp;&amp; 
               get_bit(nums[index]     , startingPosition + 1) == 0 &amp;&amp;
               get_bit(nums[index]     , startingPosition + 2) == 1 &amp;&amp;
               get_bit(nums[index + 1] , startingPosition    ) == 0 &amp;&amp; 
               get_bit(nums[index + 1] , startingPosition + 1) == 1 &amp;&amp;
               get_bit(nums[index + 1] , startingPosition + 2) == 0 &amp;&amp;
               get_bit(nums[index + 2] , startingPosition    ) == 1 &amp;&amp; 
               get_bit(nums[index + 2] , startingPosition + 1) == 0 &amp;&amp;
               get_bit(nums[index + 2] , startingPosition + 2) == 1) ;

}
</code></pre>

<p>This might not be as fast as needed, but (IMHO) much better readable. </p>

<p>If you need raw speed, you could generate a (8x32)=256 bit <code>BitSet</code> and a <code>BitSet</code> of the mask. You can then just linearly slide that mask over the input bitset and <code>and()</code> them. Check the bits that are left <code>true</code> with <code>BitSet#cardinality()</code>. </p>
    </div>