<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If your goal is to optimize efficiency, you can do a little better by only looking at each character in the string once. The first <code>remainder</code> characters of the string will occur <code>quotient + 1</code> times. The remaining characters will occur <code>quotient</code> times. So you can loop once from <code>0</code> to <code>remainder</code> and do some math, then loop from <code>remainder + 1</code> to <code>s.length()</code> and do some math, and you'll have your result. It's unclear without testing whether it's faster to do the multiplication outside or to add the correct amount in your loop. Also, your short-circuit for inputs of length one is not helpful unless you expect that most of the inputs will be a single-character. It's probably safe to pull it.</p>

<p>If your goal is to avoid overcomplicating things, websites like HackerRank may not be ideal. They tend to provide algorithmic challenges that reward hyper-optimized code. By their nature, those kinds of solutions will be complicated. It turns out it's hard to write an AI that will grade readable code, but easy to write one that will grade performant code. So even though readable code is much more desirable, performant code is what scores well.</p>
    </div>