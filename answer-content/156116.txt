<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I found two better alternatives.</p>

<p><strong>1. Change <code>$driver</code> from <code>protected</code> to <code>public</code></strong></p>

<p>Then you can pass the <code>$this</code> object directly to <code>initDriver</code>:</p>

<p><em>PortalController</em></p>

<pre><code>public $driver = null;  

public function main()
{
    //Before: $this-&gt;driver = Selenium::initDriver(array($this, "driver"));

    //After:
    Selenium::initDriver($this);
    ...
}
</code></pre>

<p><em>SeleniumUtility</em></p>

<pre><code>public static function initDriver($thisObj)
{    
    //Now I can do the if null check here

    if (thisObj-&gt;driver === NULL) {
       $thisObj-&gt;driver = RemoteWebDriver::create(self::SELENIUM_SERVER_ADDRESS, DesiredCapabilities::firefox(), self::DRIVER_TIMEOUT);
    }
}
</code></pre>

<hr>

<p><strong>2. Use getter and setter</strong></p>

<p><em>PortalController</em></p>

<pre><code>protected $driver = null;  

public function getDriver()
{
    return $this-&gt;driver;
}

public function setDriver($driver)
{
    $this-&gt;driver = $driver;
}

public function main()
{
    //Before: $this-&gt;driver = Selenium::initDriver(array($this, "driver"));

    //After:
    Selenium::initDriver($this);
    ...
}
</code></pre>

<p><em>SeleniumUtility</em></p>

<pre><code>public static function initDriver($thisObj)
{    
    //Now I can do the if null check here

    if (thisObj-&gt;getDriver() === NULL) {
        $thisObj-&gt;setDriver( RemoteWebDriver::create(self::SELENIUM_SERVER_ADDRESS, DesiredCapabilities::firefox(), self::DRIVER_TIMEOUT));
    }
}
</code></pre>

<p>But in my opinion it makes no sense to make the driver protected, so the first solution is faster and better. As long as we do not store any valuable information like passwords in the driver, keeping it public is perfectly OK.</p>
    </div>