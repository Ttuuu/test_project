<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Overall Feedback</h2>

<p>The UI looks good. I think the code is okay, but the number of DOM lookups is higher than it needs to be. Those could be reduced by storing the checkboxes in an array. While browsers have come a long way in terms of efficiency, DOM lookups are still not cheap. Since <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> features like template literals are used, a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes" rel="nofollow noreferrer">class</a> or else a simple object could be used to store references to the newly created elements, timers, etc. in arrays, rather than querying the DOM to access elements.</p>

<hr>

<h2>Targeted Feedback</h2>

<p>The ES-6 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax" rel="nofollow noreferrer">spread syntax</a> can be used instead of using <code>Array.from()</code> to put elements into an array. </p>

<p>Lines like this:</p>

<blockquote>
<pre><code>opts = Array.from(el.options)
</code></pre>
</blockquote>

<p>Can be simplified to just:</p>

<pre><code>opts = [...el.options]
</code></pre>

<p>This requires one less function call. </p>

<hr>

<p>When using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" rel="nofollow noreferrer"><code>Array.forEach()</code></a> there are <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Parameters" rel="nofollow noreferrer">more parameters</a> passed to the callback function than just the current element. Both occurrences of </p>

<blockquote>
<pre><code>opts.forEach(opt =&gt; {
    let i = opts.indexOf(opt);
</code></pre>
</blockquote>

<p>Could have the call to <code>opts.indexOf()</code> eliminated by utilizing the second parameter instead. </p>

<pre><code>opts.forEach((opt, i) =&gt; {
</code></pre>

<hr>

<p>The code uses <code>let</code> for most all variables. Many of those variables never get re-assigned. It is wise to use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" rel="nofollow noreferrer"><code>const</code></a> for any such variable, to avoid accidental re-assignment.</p>
    </div>