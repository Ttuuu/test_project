<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with everything Reinderien said!  I took a slightly different approach with the inputs to preserve your original strings/typing -- for example, there isn't any reason at all for the different animal subclasses once you move all the common functionality into the parent class, since 100% of the functionality is shared between all classes, but I'm preserving them under the assumption that you might have other code that wants them to be different Python types.  I definitely like the idea of representing the different attributes as enums; it'd just be a little bit more work to format the text the exact way your original code does.</p>

<pre><code>import os
from typing import List, Tuple


class Animal:
    def __init__(
        self,
        nutrition: str,
        respiratory: str,
        excretory: str,
        reproductive: str,
        climate: str,
        animal_type: str
    ):
        self.nutrition = nutrition
        self.respiratory = respiratory
        self.excretory = excretory
        self.reproductive = reproductive
        self.climate = climate
        self.animal_type = animal_type

    def __str__(self) -&gt; str:
        return (
            f"Animal Type: {self.animal_type}\n"
            f"Nutrition: {self.nutrition}\n"
            f"Respiratory: {self.respiratory}\n"
            f"Excretory: {self.excretory}\n"
            f"Reproductive: {self.reproductive}\n"
            f"Climate: {self.climate}\n"
        )


class LandAnimal(Animal):
    pass


class SeaAnimal(Animal):
    pass


class AirAnimal(Animal):
    pass


def get_input(type: str, options: List[Tuple[str, str]]) -&gt; str:
    while True:
        try:
            print(f"Please Enter {type} Type")
            for i, (opt, result) in enumerate(options):
                print(f"{i+1}. {result}".ljust(20) + f"--&gt; '{opt}'")
            user_opt = input()
            return [opt for opt in options if opt[0] == user_opt][0][1]
        except Exception:
            print("""!WARNING!
            ...Improper Input Detected...""")


def get_nutrition() -&gt; str:
    return get_input("Nutrition", [
        ("c", "Carnivorous"),
        ("h", "Herbivorous"),
        ("o", "Omnivorous"),
        ("n", "No Information")
    ])


def get_respiratory() -&gt; str:
    return get_input("Respiratory", [
        ("+o2", "with Oxygen"),
        ("-o2", "without Oxygen"),
        ("n", "No Information")
    ])


def get_excretory() -&gt; str:
    return get_input("Excretory", [
        ("a", "Ammonia"),
        ("u", "Urea"),
        ("ua", "Uric Acid"),
        ("n", "No Information")
    ])


def get_reproductive() -&gt; str:
    return get_input("Reproductive", [
        ("s", "Sexual"),
        ("a", "Asexual"),
        ("n", "No Information")
    ])


def get_climate() -&gt; str:
    return get_input("Climate", [
        ("d", "Desert"),
        ("f", "Forest"),
        ("t", "Tundra"),
        ("i", "Ice Field"),
        ("n", "No Information")
    ])


def get_animal_type():
    return get_input("Animal", [
        ("l", "Land"),
        ("s", "Sea"),
        ("a", "Air")
    ])


animal_type_class = {
    "Land": LandAnimal,
    "Sea": SeaAnimal,
    "Air": AirAnimal,
}

# input from user
nutrition = get_nutrition()
respiratory = get_respiratory()
excretory = get_excretory()
reproductive = get_reproductive()
climate = get_climate()
animal_type = get_animal_type()

animal = animal_type_class[animal_type](
    nutrition,
    respiratory,
    excretory,
    reproductive,
    climate,
    animal_type
)
print(animal)

exit()

path = "C:/Users/GÃ¶kberk/Desktop/Animal List.txt"
mode = "a" if os.path.isfile else "w"
with open(path, mode, encoding="utf-8") as file:
    file.write("##############################\n")
    file.write(str(animal))
if mode == "w":
    print(f"File has been created to {path}")

print("Program is Over")
</code></pre>
    </div>