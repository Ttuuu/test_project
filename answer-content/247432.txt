<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>While Martin explained problems with code there is, I'm gonna note about one that isn't. This is done out of suspicion about you not knowing and I hope you'll forgive me if I'm wrong.</p>
<h2>Currently you don't use virtuality of your virtual functions.</h2>
<p>In the main function you create objects of derived type and call <em>functions of derived type</em>. You never use the API of base class</p>
<p>The use mostly arrives when</p>
<h3>a) There's a container with base class pointers</h3>
<pre class="lang-cpp prettyprint-override"><code>std::vector&lt;unique_ptr&lt;Base&gt;&gt; vec;
vec.push_back(make_unique&lt;Derived1&gt;());
vec[0].do_something() //Derived1!!!
</code></pre>
<p>or</p>
<h3>b) There's a function taking base class pointer/reference</h3>
<pre><code>void foo(Base&amp; b)
{
   b.do_something();
}

int main()
{
  Derived1 d;
  foo(d); //Derived1!!!
}
</code></pre>
<p>Sometimes both:</p>
<pre><code>void foo(Base&amp; b)
{
   b.do_something();
}

int main()
{
  std::vector&lt;unique_ptr&lt;Base&gt;&gt; vec;
  vec.push_back(make_unique&lt;Derived2&gt;());
  foo(vec[0]); //Derived2!!!
} 
<span class="math-container">```</span>
</code></pre>
    </div>