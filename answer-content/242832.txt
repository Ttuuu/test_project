<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your move-ctor and move-assignment are badly implemented. You copy input data and then you swap it with source. You may as well delete move-ctor and move-assignment as they are worthless now.</p>

<p>Your copy assignment operator has an unnecessary check that cannot be true and it won't perform well for self-copying. As it will copy its data into another instance and then swap data with it. To fix this make input of type <code>const Test&amp;</code>. And make a data copy routine.</p>

<p>Destructor is unnecessary as <code>std::unique_ptr</code> automatically manages it.</p>

<p>You realize <code>strncpy</code> copies data till it reaches 0, right?</p>

<pre><code>   std::unique_ptr&lt;char[]&gt; m_buffer = nullptr;
</code></pre>

<p>This is unnecessary. No need for <code>= nullptr</code>. <code>std::unique_ptr</code> does it on its own.</p>

<p>Edit:
Also I believe declaring a private static <code>swap</code> is a problem. What will happen if user were to try to call <code>swap(tst1,tst2)</code> when <code>using namespace std</code> or <code>using std::swap</code>?</p>

<p>You could make it public, but IMHO it's better to implement move-ctor and move-assignment directly - without making a swap in between. Let swap rely on move and not the opposite. Note that <code>std::swap</code> utilizes move for its purposes.</p>
    </div>