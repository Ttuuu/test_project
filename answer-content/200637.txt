<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For the most part, looks pretty good to me!</p>

<h2>Format</h2>

<p>You didn't use underscores to separate the words in a lot of variable names, which kinda bothered me. Snake_case is recommended by PEP8, so I changed that.</p>

<p>You also added extra indentation in your first function (whether that was just the copy-paste of your code into the question messed up or not, I dunno) so I removed it.</p>

<h2>Algorithm</h2>

<p>Your <code>day_check</code> was the thing I changed the most. I basically just created a dictionary matching the month numbers with the day numbers and checked if the day inputted in the function was between 0 and the max defined by the dictionary. I felt that significantly shortened and clarified the function.</p>

<p>The other change I made was to change your <code>if</code> statement in main to <code>if month_validity and day_validity and year_validity:</code> which I personally felt was cleaner.</p>

<h2>If you're using <code>main()</code>...</h2>

<p>Might as well make sure you're in the right spot when calling <code>main()</code>, so I added the last <code>if</code> statement.</p>

<h2>Poor February</h2>

<p>Leap years aren't too bad to check for. Simply add the year as a parameter to <code>month_check</code> and do </p>

<pre><code>if int(year) % 4 == 0:
    if int(year) % 100 == 0:
        days_in_month[2] = 28
    else:
        days_in_month[2] = 29
else:
    days_in_month[2] = 28
</code></pre>

<h2>User input check</h2>

<p>As Gerrit0 pointed out</p>

<blockquote>
  <p>What happens if I input "test" when asked for a date? The program crashes. It's a good idea to validate that any input from the user is in the format you expect.</p>
</blockquote>

<p>This can be fixed with a simple try/except - try all the code in the <code>main()</code> function, except <code>ValueError</code> and print a reminder to the user of the proper format.</p>

<h2>Negative Dates</h2>

<p>Gerrit0 also points out that the function allows for negative numbers (<a href="https://xkcd.com/1245/" rel="nofollow noreferrer">reminds me of this XKCD</a>) in the year. While I didn't add this to the code, I'd change the year function to making sure the actual number is in the proper range, which then allows for the nicety that you can do all your type conversions on the inputs directly instead of before each function input. It also provides a nice way to make sure the date is in the Gregorian calendar.</p>

<h2>Final Code</h2>

<pre><code>def month_check(month):
    if month &gt; 0 and month &lt;= 12: ## If month is between 1 and 12, return True.
        return True
    else:
        return False



def day_check(month, day):
    days_in_month = {1:31, 2:28, 3:31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}
    if 0 &lt; day &lt;= days_in_month[month]:
        return True
    else:
        return False



def year_check(year):
    if len(year) &gt;= 1 and len(year) &lt;= 4: ## Check if year has between 1 to 4 numbers and return True.
        return True
    else:
        return False


def main():
    date = str(input("Enter the date in mm/dd/yyyy format: ")) ## Input date in the given format.

    try:
        month,day,year = date.split("/") ## split the date into 3 separate variables.

        month_validity = month_check(int(month)) 

        day_validity = day_check(int(month),int(day)) 

        year_validity = year_check(year)

        if month_validity and day_validity and year_validity: ## check if all 3 variables are valid or True
            print("The date {0} is valid.".format(date))

        else:
            print("The date {0} is invalid.".format(date))
    except ValueError:
        print('Your input was not valid. Please enter the date in a mm/dd/yyyy format.')

if __name__ == "__main__":
    main()
</code></pre>
    </div>