<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't think there's a lot you can improve here. I would use temporary variables to reduce the repetition in <code>i + j</code> and <code>w + h</code>, and extract the common transformation operation to a function:</p>

<pre><code>Uint8 transformColorField(Uint8 c1x, Uint8 c2x, int wh, int ij) {
    return c1x * (wh - ij) / wh + c2x * ij / wh;
}

SDL_Surface* DrawDescendingDiagonalGradient(SDL_Color&amp; c1, SDL_Color&amp; c2, int w, int h)    {
    SDL_Color c;
    SDL_Surface *s = SDL_CreateRGBSurface(0, w, h, 32, 0, 0, 0, 0);
    SDL_LockSurface(s);
    int wh = w + h;
    for (int j = 0; j &lt; h; j++) {
        for (int i = 0; i &lt; w; i++) {
            int ij = i + j;
            c.a = transformColorField(c1.a, c2.a, wh, ij);
            c.r = transformColorField(c1.r, c2.r, wh, ij);
            c.g = transformColorField(c1.g, c2.g, wh, ij);
            c.b = transformColorField(c1.b, c2.b, wh, ij);
            PutPixel32(s, i, j, SDL_MapRGBA(s-&gt;format, c.r, c.g, c.b, c.a));
        }
    }
    SDL_UnlockSurface(s);
    return s;
}
</code></pre>

<p>Of course, none of this will have any real effect on the speed. For that, you'd need a different algorithm. (And I don't know what, and how exactly.)</p>
    </div>