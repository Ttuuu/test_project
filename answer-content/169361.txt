<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Digits</h3>

<blockquote>
<pre><code>        anInterface.calculatorButtons.zero.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                String text = anInterface.calculatorScreen.results.getText();

                request += 0;

                anInterface.calculatorScreen.results.setText(text + 0);
            }
        });
</code></pre>
</blockquote>

<p>You could replace this whole thing with something like </p>

<pre><code>    class DigitButtonListener implements ActionListener {

        private final int DIGIT;

        public DigitButtonListener(int digit) {
            this.DIGIT = digit;
        }

        @Override
        public void actionPerformed(ActionEvent e)
        {
            String text = anInterface.calculatorScreen.results.getText();

            request += DIGIT;

            anInterface.calculatorScreen.results.setText(text + DIGIT);
        }

    }
</code></pre>

<p>which you'd use like </p>

<pre><code>        anInterface.calculatorButtons.zero.addActionListener(new DigitButtonListener(0);
</code></pre>

<p>Obviously the latter is a lot less code for the ten digits.  </p>

<p>Consider making <code>request</code> a <code>StringBuilder</code>.  </p>

<p>Or consider making <code>request</code> a collection type.  Currently you enter an entire string and then parse it.  But you know exactly what operation you are doing when the button is pressed.  Then you forget that to put it in a string.  You probably don't want it to be a standard collection.  A custom class is probably better, as you are adding either a digit, a decimal point, or an operation.  The digits and decimal points are parts of a number.  The operation is something different.  So you want to accumulate digits until the number is finished by selecting an operation.  </p>

<p>I haven't tried to run this.  It's possible that you'd have to pass <code>anInterface.calculatorScreen</code> and <code>request</code> as parameters to the constructor.  Note that that works better if <code>request</code> is mutable, e.g. a <code>StringBuilder</code> or collection.  </p>

<h3>Operations</h3>

<p>You can do something similar with the operations.  </p>

<pre><code>        anInterface.calculatorButtons.plus.addActionListener(new DigitButtonListener("+");
</code></pre>

<p>or </p>

<pre><code>        anInterface.calculatorButtons.plus.addActionListener(new DigitButtonListener(PLUS);
</code></pre>

<h3>Naming</h3>

<p>I find the name <code>ClearButton</code> confusing.  I would have expected that to be the AC button, but it's actually the equals sign.  And it doesn't clear; it replaces the formula with the answer.  </p>

<h3><code>Main</code></h3>

<p>I'm not crazy about <code>Main</code> extending the <code>JFrame</code>.  I'd rather have something like <code>Calculator</code> extend the <code>JFrame</code>.  Then you could reuse <code>Calculator</code> in other programs.  Perhaps that is over-engineering for this specific problem, but it seems easy enough to do.  And it's a good habit to develop.  </p>

<h3>Beginner</h3>

<p>More of a meta question, but you are welcome to call yourself a beginner as long as you want.  If you find that the responses are too beginner-oriented, you can always stop and leave the tag off your questions.  Some (not all) people will give different answers as a result.  </p>

<p>Here you are more than welcome to break your code into parts if it makes sense.  In fact, you are encouraged to do so.  Stack Overflow wants small simple questions with straightforward answers.  If your question is complex, they want you to simplify it to just the essentials.  So each question represents just a small, narrow problem.  </p>

<p>We do broad reviews of your code.  We want to see the actual code as it is in your IDE.  No simplifying or hiding.  Unless you have personal information in the code or code in a language other than English, you should be able to just copy and paste.  </p>
    </div>