<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The easiest way to make <code>mean()</code> more pythonic is to use the <code>sum()</code> built-in function.</p>

<pre><code>def mean(lst):
    return sum(lst) / len(lst)
</code></pre>

<p>Concerning your loops on lists, you don't need to use <code>range()</code>. This is enough:</p>

<pre><code>for e in lst:
   sum += e
</code></pre>

<p>Other comments:</p>

<ul>
<li>You don't need parentheses around the return value (check out <a href="http://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP 8</a> when you have a doubt about this).</li>
<li>Your docstrings are useless: it's obvious from the name that it calculates the mean. At least make them more informative ("returns the mean of lst"). </li>
<li>Why do you use "-1" in the return for stddev? Is that a bug?</li>
<li>You are computing the standard deviation using the variance: call that "variance", not sum!</li>
<li>You should type pow(e-mn,2), not pow((e-mn),2). Using parentheses inside a function call could make the reader think he's reading a tuple (eg. pow((e,mn),2) is valid syntax)</li>
<li>You shouldn't use pow() anyway, ** is enough.</li>
</ul>

<p>This would give:</p>

<pre><code>def stddev(lst):
    """returns the standard deviation of lst"""
    variance = 0
    mn = mean(lst)
    for e in lst:
        variance += (e-mn)**2
    variance /= len(lst)

    return sqrt(variance)
</code></pre>

<p>It's still way too verbose! Since we're handling lists, why not using list comprehensions?</p>

<pre><code>def stddev(lst):
    """returns the standard deviation of lst"""
    mn = mean(lst)
    variance = sum([(e-mn)**2 for e in lst]) / len(lst)
    return sqrt(variance)
</code></pre>

<p>This is not perfect. You could add tests using <a href="http://docs.python.org/library/doctest.html" rel="nofollow noreferrer">doctest</a>. Obviously, you should not code those functions yourself, except in a small project. Consider using Numpy for a bigger project.</p>
    </div>