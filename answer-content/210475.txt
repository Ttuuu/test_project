<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is good in general. The main point is that you confused a model and a mapper. Your mapper must be a model (or, to avoid a confusion, better to call it an <em>entity</em>) whereas your model is actually a mapper. </p>

<p>People often mistake  the term "model", so I had to write an <a href="https://phpdelusions.net/articles/mvc" rel="nofollow noreferrer">article to explain it</a>.</p>

<p>So</p>

<pre><code>src
   Controllers
      PostController.php
      CommentController.php
   Entities
      Post.php
      Comment.php
   Mappers
      PostMapper.php
      CommentMapper.php
   Dependencies.php
   Middleware.php
   Routes.php
   Settings.php
</code></pre>

<p>where Post.php would be</p>

<pre><code>namespace App\Entities;

class Post {

    protected $postId;
    protected $post;

    public function __construct(){}

    public function getPostId()
    {
        return $this-&gt;postId;
    }

    public function setPostId($postId)
    {
        $this-&gt;postId= $postId;
        return $this;
    }

    public function getPost()
    {
        return $this-&gt;post;
    }

    public function setPost($post)
    {
        $this-&gt;post= $post;
        return $this;
    }
}
</code></pre>

<p>and PostMapper would be</p>

<pre><code>namespace App\Mappers;

class PostMapper {

   public function getPostById($id){

      $sql = "SELECT `post_id`, `post` FROM `posts` WHERE `post_id` = :id";
      $stmt = $this-&gt;db-&gt;prepare($sql);
      $stmt-&gt;execute(['id' =&gt; $id]);
      return $stmt-&gt;fetchObject('\App\Entity\Post');
   }
}
</code></pre>

<p>Please note that a lot of code has been removed from PostMapper class. First, a harmful try .. catch has been removed. A try .. catch that silently returns false is as bad as any other error suppression operator, and shouldn't be used such casually. As a programmer, you crave to know what the error was, so you'll be able to fix it. So always let errors go, unless you have a certain handling scenario. See more in my article, <a href="https://phpdelusions.net/articles/error_reporting" rel="nofollow noreferrer">PHP error reporting basics</a>.</p>

<p>Also, rather useless condition is removed too, as <code>fetchObject()</code> already returns false if a row not found, so we can return its result right away. </p>

<p>Also, consider making your PHP code style to conform with the <a href="https://www.php-fig.org/psr/psr-2/" rel="nofollow noreferrer">standard</a></p>
    </div>