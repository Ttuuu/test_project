<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I took janos's answer and tried to improve on it, using a dictionary instead to look up the matching brackets, so we don't need all the switch cases anymore.</p>

<pre><code>function main() {
    var t = parseInt(readLine());
    for(var a0 = 0; a0 &lt; t; a0++){
        var expression = readLine();
        console.log(isBalanced(expression) ? 'YES' : 'NO')
    }
}

function isBalanced(expression) {

    chars = expression.split('');
    var stack = [];

    for (var i = 0;  i &lt; chars.length; i++) {

        var currentBracket = chars[i];

        if(currentBracket in BRACKETS_DICT) {
            // opening bracket
            // push closing bracket on stack
            stack.push(BRACKETS_DICT[currentBracket]);
        } else {
            // closing bracket
            // check if it matches the last on the stack
            if(stack.pop() !== currentBracket) {
                return false;
            }
        }
    }

    return stack.length === 0;
}

var BRACKETS_DICT = {
    '(': ')',
    '[': ']',
    '{': '}'
}
</code></pre>
    </div>