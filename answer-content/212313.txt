<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>welcome to Code Review!</p>

<p>I would write your code like this:</p>

<pre><code>def find_boundaries(lista):
    if not lista:
        return None

    int_list = [x for x in lista if type(x) == int]
    return (max(int_list), min(int_list))
</code></pre>

<p>Notice a few things:</p>

<ul>
<li><p>If you test your parameters for validity at the beginning of the function, it's perfectly fine not to use an <code>else</code> afterwards because the <code>return</code> statement exits the function (short-circuiting). This saves one level of nesting and makes the function more simple.</p></li>
<li><p>Python is designed to let you avoid writing loops as much as possible. Loops are a nuisance to write, take longer to read and increase cognitive load. You should get familiar with Python's list and dict comprehensions. Notice how much clearer the code for filtering out the values that aren't integers is.</p></li>
<li><p>Again, the <code>max</code> and <code>min</code> functions are built-in in Python and take any iterable (like a list) to return the largest and smallest element respectively. You don't need to deal with loop indices, the length of the list, etc. You just express what it is you want to return: a tuple that contains the largest and the smallest elements.</p></li>
</ul>
    </div>