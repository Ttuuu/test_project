<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since many people already proposed improvements to your code snippet, I will address only one issue: <strong><em>readability</em></strong>.</p>

<p>The point is that you can make your method easier to follow without compromising its time complexity:</p>

<pre><code>public static IntPairResult findLargestProduct(final int... array) {
    Objects.requireNonNull(array, "The input array is null.");

    if (array.length &lt; 2) {
        throw new IllegalArgumentException(
                "The input array is too small (" + array.length + "). " +
                "Must have a length at least 2.");
    }

    if (array.length == 2) {
        return new IntPairResult(array[0], array[1]);
    }

    // Find the minimum and maximum elements in the array:
    int min = array[0];
    int max = array[0];
    int minIndex = 0;
    int maxIndex = 0;

    for (int i = 1; i &lt; array.length; ++i) {
        final int current = array[i];

        if (min &gt; current) {
            min = current;
            minIndex = i;
        } else if (max &lt; current) {
            max = current;
            maxIndex = i;
        }
    }

    // Find the second largest and smallest elements in the array:
    int min2 = Integer.MAX_VALUE;
    int max2 = Integer.MIN_VALUE;

    for (int i = 0; i &lt; array.length; ++i) {
        if (i == minIndex || i == maxIndex) {
            // Omit the actual minimum and maximum elements:
            continue;
        }

        final int current = array[i];

        if (min2 &gt; current) {
            min2 = current;
        } else if (max2 &lt; current) {
            max2 = current;
        }
    }

    final IntPairResult result1 = new IntPairResult(max, max2);
    final IntPairResult result2 = new IntPairResult(min, min2);

    return result1.getProduct() &gt; result2.getProduct() ?
            result1 :
            result2;
}
</code></pre>

<p>where <strong><code>IntPairResult</code></strong> is as follows:</p>

<pre><code>public class IntPairResult {

    private final int int1;
    private final int int2;

    public IntPairResult(final int int1, final int int2) {
        this.int1 = int1;
        this.int2 = int2;
    }

    public int getProduct() {
        return int1 * int2;
    }

    @Override
    public String toString() {
        return "[" + int1 + " * " + int2 + " = " + getProduct() + "]";
    }
}
</code></pre>

<p>Hope that helps.</p>
    </div>