<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Portability</h2>
<p>There is no guarantee that this code will be using ASCII so it would be better to use <code>'0'</code> rather than <code>48</code> which is something of a magic number. Using <code>'0'</code> makes it more readable and easier to understand.</p>
<h2><code>lc_atof</code> Doesn't Handle String Termination or End Of Line Correctly</h2>
<p>This code doesn't handle a NULL terminated string or an end of line character. The function <code>isspace()</code> returns <code>true</code> for end of line so the code will walk right past it.</p>
<pre><code>    while (isspace(**str))
        (*str)++;
    if (**str == '+' || **str == '-')
    {
        if (**str == '-')
            sign = -1.0;
        (*str)++;
    }
    if (!isdigit(**str))
    {
        errno = EIO;
        return (-1);
    }
</code></pre>
<h2>Complexity</h2>
<p>I reaize that you didn't ask for this to be review, but the complexity of each <code>if</code> statement in the example call function is too much and caused me to make an error in my review previously:</p>
<pre><code>int a_parsing(char* str, t_pars* data)
{
    if (*(str++) == 'A')
    {
        if (((data-&gt;a_ratio = lc_atof(&amp;str)) &gt;= 0.0) &amp;&amp; data-&gt;a_ratio &lt;= 1.0 &amp;&amp; errno == 0)
            // 
            if (((data-&gt;a_R = lc_atoi(&amp;str)) &gt;= 0) &amp;&amp; data-&gt;a_R &lt;= 255 &amp;&amp; errno == 0)
                if (*(str++) = ',' &amp;&amp; ((data-&gt;a_G = lc_atoi(&amp;str)) &gt;= 0) &amp;&amp; data-&gt;a_G &lt;= 255 &amp;&amp; errno == 0)
                    if (*(str++) = ',' &amp;&amp; ((data-&gt;a_B = lc_atoi(&amp;str)) &gt;= 0) &amp;&amp; data-&gt;a_B &lt;= 255 &amp;&amp; errno == 0)
                        return (skip_space(&amp;str));
    }
    return (0);
}
</code></pre>
<p>I would rewrite the code as :</p>
<pre><code>#define MAX_COLOR   0xFF
int a_parsing_prime(char* str, t_pars* data)
{
    if (*(str++) == 'A')
    {
        data-&gt;a_ratio = lc_atof(&amp;str);
        if (!errno &amp;&amp; data-&gt;a_R &lt;= MAX_COLOR)
        {
            if (*(str++) = ',')
            {
                data-&gt;a_G = lc_atoi(&amp;str);
                if (!errno &amp;&amp; data-&gt;a_G &lt;= MAX_COLOR)
                {
                    if (*(str++) = ',')
                    {
                        data-&gt;a_B = lc_atoi(&amp;str);
                        if (!errno &amp;&amp; data-&gt;a_B &lt;= MAX_COLOR)
                        {
                            return (skip_space(&amp;str));
                        }
                    }
                }
            }
        }
    }
    return (0);
}
</code></pre>
<p>which truely shows the complexity of the function.</p>
    </div>