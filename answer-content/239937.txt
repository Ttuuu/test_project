<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Technical improvements</h3>

<ul>
<li>use <code>albumMap.values()</code> to get a <code>Collection&lt;Album&gt;</code> directly instantiated as list, which supports positional access <code>get(index)</code>. So no need for array and filling loop. See <em>Listing 1</em>.</li>
<li>use some of Android's <em>ListView</em> interfaces which usually provide a convenient method on their underlying <em>data model</em> like <code>getItemAtPosition(position)</code>. See <em>Listing 2</em>.</li>
</ul>

<p><em>Listing 1</em>: <a href="https://stackoverflow.com/questions/1026723/how-to-convert-a-map-to-list-in-java">Q: How to convert map to list</a></p>

<pre class="lang-java prettyprint-override"><code>List&lt;Album&gt; albums = new ArrayList&lt;Album&gt;(albumMap.values());
</code></pre>

<p><em>Listing 2</em>: <a href="https://www.vogella.com/tutorials/AndroidListView/article.html#listview_adapterlistener" rel="nofollow noreferrer">Vogella's Tutorial on Android's ListView</a></p>

<pre class="lang-java prettyprint-override"><code>ListView albumsView = (ListView) findViewById(R.id.listview);

// fill albums data to model (adapter implementation)
albumsView.setAdapter(adapter)

albumsView.setOnItemClickListener(new OnItemClickListener() {

  @Override
  public void onItemClick(AdapterView&lt;?&gt; parent, final View view, int position, long id) {
    final Album album = (Album) parent.getItemAtPosition(position);
    // your implementation
  }
}
</code></pre>

<h3>Design improvements</h3>

<ul>
<li><code>album.getAlbum()</code> gets the <em>title</em> of an album, so <strong>rename</strong> property|getter to <code>title</code>|<code>getTitle()</code></li>
<li>keep the event-handler short and <strong>extract</strong> all <em>action/intend creation</em> into separate method</li>
</ul>

<h3>References</h3>

<ul>
<li><a href="https://stackoverflow.com/a/40584425">Answer on using RecycleView with OnItemClickListener</a></li>
<li><a href="https://www.androidhive.info/2016/01/android-working-with-recycler-view/" rel="nofollow noreferrer">Tutorial: Android working with RecyclerView</a></li>
<li><a href="https://developer.android.com/guide/topics/ui/binding" rel="nofollow noreferrer">Android Official Guide on AdapterView</a></li>
</ul>
    </div>