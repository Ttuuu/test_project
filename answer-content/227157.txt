<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is called a doubly linked list. <code>List&lt;T&gt;</code> is basically a wrapper around an array. The only operations where you can hope to be faster are insertions and deletions from the middle of the list.</p>

<hr>

<p>Using <code>Marshal</code> unless you absolutely have to is a bad idea, if not a plain crazy one. This code has memory leaks (how is that destructor meant to release all of the memory allocated for the list? See also the next subsection). And because you're fighting the GC and the JIT, you can't expect high performance.</p>

<hr>

<blockquote>
<pre><code>    public void Clear()
    {
        SetNext(mStart, IntPtr.Zero);
        for (IntPtr item = mStart; (item = GetNext(item)) != IntPtr.Zero;)
            DeleteItem(item);
        Count = 0;
    }
</code></pre>
</blockquote>

<p>Expand that <code>for</code> as a <code>while</code> and see whether you can spot the problems:</p>

<pre><code>    SetNext(mStart, IntPtr.Zero);
    IntPtr item = mStart;
    while ((item = GetNext(item)) != IntPtr.Zero)
        DeleteItem(item);
</code></pre>

<blockquote class="spoiler">
  <p> 1. <code>SetNext(mStart, IntPtr.Zero)</code> guarantees that the loop body never executes.<br>
 2. <code>DeleteItem(item)</code> before <code>GetNext(item)</code> is a use-after-free bug.  </p>
</blockquote>

<hr>

<p>I can't figure out whether <code>mStart</code> is a sentinel or an actual element of the list. It seems to do both in different places. Comments!</p>

<hr>

<p>What happens if I modify the list while iterating through it with the enumerator? Is this desirable?</p>

<hr>

<p>I can't think of any good reason to implement <code>IList&lt;T&gt;</code> and not also implement <code>IReadOnlyList&lt;T&gt;</code>.</p>
    </div>