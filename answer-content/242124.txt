<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are several things worth considering when you are about to design an API, which should either return an <code>IAsyncEnumerable&lt;IAsyncEnumerable&lt;T&gt;&gt;</code> or return an <code>IAsyncEnumerable&lt;T&gt;</code></p>

<h2>IAsyncEnumerable &lt; IAsyncEnumerable &lt; T &gt; &gt;</h2>

<h3>Pros</h3>

<ul>
<li>It is flexible from the consumer point of view. It allows you to use a single or multiple consumer model</li>
<li>In case of multiple consumers the throughput can be higher, because the parallel processing potential</li>
<li>It allows to use different <code>Timeout</code>s for different providers</li>
<li>It allows custom code injection between two <code>yield return</code> statements</li>
</ul>

<h3>Cons</h3>

<ul>
<li>In case of single consumer the ingestion logic can be a bit more complicated (compared to the flatten version)</li>
<li>Nested async loops can complicate the exception handling logic (and also the debugging)</li>
</ul>

<h2>IAsyncEnumerable &lt; T &gt;</h2>

<h3>Pros</h3>

<ul>
<li>It is easier to use for a single consumer</li>
<li>If the multiple provider model is just an implementation detail then it can hide this information behind a good abstraction</li>
<li>It provides easier error handling capabilities</li>
</ul>

<h3>Cons</h3>

<ul>
<li>It is harder to support multiple consumers model</li>
<li>It is harder to inject custom code between <code>yield return</code>s</li>
<li>Spanning new processing based on different providers is impossible </li>
</ul>

<p>If you are considering to provide a flattened API then I would suggest to check that package, which is called <a href="https://www.nuget.org/packages/System.Interactive.Async/" rel="nofollow noreferrer">System.Interactive.Async</a>. Inside this package there is a class called <code>AsyncEnumerableEx</code> which defines a <a href="https://github.com/dotnet/reactive/blob/305d381dcc46c5966e7260e0959b3083846bf05f/Ix.NET/Source/System.Interactive.Async/System/Linq/Operators/Merge.cs#L13" rel="nofollow noreferrer">Merge</a> function.</p>
    </div>