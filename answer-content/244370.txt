<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>iterrows</h1>
<p>Of all the ways to iterate over a pandas DataFrame, <code>iterrows</code> is the worst. This creates a new series for each row. this series also has a single dtype, so it gets upcast to the least general type needed. This can lead to unexpected loss of information (large ints converted to floats), or loss in performance (object dtype).</p>
<p>Slightly better is <code>itertuples</code></p>
<h1>append</h1>
<p>Appending row per row can be very slow (<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.append.html" rel="noreferrer">link1</a><a href="https://stackoverflow.com/a/31675177/1562285">link2</a>)</p>
<p>Better would be to assembly them in a list, and make a new DataFrame in 1 go.</p>
<h1>vectorise</h1>
<p>One easy change you can make is not iterating over the database in 'Python' space, but using boolean indexing</p>
<pre><code>x = df["variable"] == "x"
y = df["variable"] == "y"

df2 = df.copy()
df2.loc[x, "value"] = df.loc[x, "value"] * a + b
df2.loc[y, "value"] = df.loc[y, "value"] * c + d
df2.loc[x, "variable"] = "x1"
df2.loc[y, "variable"] = "y1"
</code></pre>
<h1>wide vs long</h1>
<p>This can be made a lot easier by reforming your dataframe by making it a bit wider:</p>
<pre><code>df_reformed = (
    df.set_index(["id", "variable"]).unstack("variable").droplevel(0, axis=1)
)
</code></pre>
<blockquote>
<pre><code>variable  x   y
id        
1     5   5
2     7   7
</code></pre>
</blockquote>
<p>Then you can calculate x1 and y1 vectorised:</p>
<pre><code>df_reformed.assign(
    x1=df_reformed["x"] * a + b, 
    y1=df_reformed["y"] * c + d
)
</code></pre>
<p>and then convert this back to the long format:</p>
<pre><code>result = (
    df_reformed.assign(
        x1=df_reformed["x"] * a + b, 
        y1=df_reformed["y"] * c + d
    )
    .stack()
    .rename("value")
    .sort_index()
    .reset_index()
)
</code></pre>
    </div>