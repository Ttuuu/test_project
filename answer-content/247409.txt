<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code would run, but sampleList would be empty.</p>
<p>Take a look at PEP8 or run flake8 or black on your code to make the code style more in line with typical python code.  (Although it doesn't sound like anyone will ever see it).</p>
<p>I came up with two alternatives.  The first is similar to your code in that it looks at the hierarchy of the xml elements.  But it uses XPath expression to select the child nodes of interest.  I have a sample file with 100k samples, 1M locations, and about 1.7M foos.  On my Windows laptop, it takes about 22 seconds.</p>
<pre><code>samples = []

start_time = timeit.default_timer() 
    
tree = ET.parse('test.xml')
root = tree.getroot()

for sample in root.iterfind('./{MyNameSpace}Sample'):
    sample_id = sample.find('{MyNameSpace}SampleID').text
    
    for location in sample.iterfind('./{MyNameSpace}Location'):
        location_name = location.find('{MyNameSpace}LocationName').text
        
        data = [datum.text for datum in location.iterfind('./{MyNameSpace}Data/{MyNameSpace}Foo')]
        
        if len(data) &lt; 2:
            data.append(data[0])
            
        samples.append({sample_id:{location_name:data}})
       
print(timeit.default_timer() - start_time) 
</code></pre>
<p>The second version uses <code>iterparse()</code> to create the data structure as it is parsing the file. By default, <code>iterparse()</code> yield elements when it sees the end tag.  The code grabs the interesting values when is sees the interesting end tags.  When it sees the Location end tag, it also makes a new record and adds it to the list of samples. It runs in about 19 seconds.</p>
<pre><code>samples = []

start_time = timeit.default_timer() 

foos = []

for event, element in ET.iterparse('test.xml'):
    if element.tag == '{MyNameSpace}SampleID':
        sample_id = element.text

    elif element.tag == '{MyNameSpace}LocationName':
        location_name = element.text

    elif element.tag == '{MyNameSpace}Foo':
        foo = element.text
        foos.append(foo)
    
    elif element.tag == '{MyNameSpace}Location':
        if len(foo) == 1:
            foo.append(foo[0])
            
        samples.append({sample_id:{location_name:foos}})
        foos = []

       
print(timeit.default_timer() - start_time) 
</code></pre>
    </div>