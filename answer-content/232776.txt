<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>board_filler()</code> feels bloated, because it is trying to do 2 unrelated things: 1) building some of the graphics for displaying the board, and 2) getting input for the numbers in the board.  These should be split into separate functions.</p>

<p>Asking the user to enter 81 values or blank lines is a poor user experience.  It would be easy to loose their place and enter the wrong data.  Consider letting the user enter the data a row at a time, using a '-' for blank spaces in the game board (and ignore blanks in the input).  All of these would be valid:</p>

<pre><code>Enter row 1: --89-1---
Enter row 2: 19- 2-- ---
Enter row 3: - 5 -  - 7 - - - 8
etc.
</code></pre>

<p>The code would look something like:</p>

<pre><code>def get_board(nrows):
    print("Enter the grid one row at a time.  Use '-' for blank spaces.\n")

    rows = []
    for n in range(nrows):
        row = input(f"Enter row {n}: ")
        rows.append(row.replace(' ', '')

    return rows
</code></pre>

<p>A function like <code>board_filler()</code> could then take the list of strings returned by <code>get_board()</code> to fill up the sudoku grid.  This separation of concerns (one function to get input and another to fill the grid) makes it easy to make changes.  For example, <code>board_filler()</code> wouldn't care where the grid data came from as long as it was a list of strings.  It could easily be function that read a grid from a file or scraped it from a web site. </p>

<p>There isn't any reason to convert the numbers in the grid into int's.  They aren't be used for their numerical value (they aren't being added or anything).  They are just unique symbols.  That way everything in the grid is a character.</p>
    </div>