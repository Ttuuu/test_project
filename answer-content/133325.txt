<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This algorithm could pretty easily be converted to a one-liner.  Let's walk through the logic:</p>

<ol>
<li>You want to work over each element of a string.  You can just iterate over the string, rather than keeping track of an index.</li>
<li>You also need the index of that element, so you can use <code>enumerate</code> to get both.</li>
<li>You want to apply a mathematical operation if and only if the integer is not <code>0</code>.  This can be done using <code>int(val)</code>, which converts the value to the number it represents.</li>
<li>You want to add all the values at the end.  This can be done with <code>sum</code>.</li>
</ol>

<p>To get error checking, you can convert the string to a <code>set</code>, and make sure the <code>set</code> is equal to a set with only <code>0</code> and <code>1</code> in it.</p>

<p>Also, you probably want the <code>input</code> handling in a <code>while</code> loop to avoid the recursion, which will fill up your memory, and then have a separate function to handle the actual conversion.</p>

<p>Also, I would only run <code>main</code> if the code is run as a script.</p>

<p>And keep in mind python has a <a href="https://stackoverflow.com/a/8928256/3604159">built-in way</a> to do binary to decimal conversion: <code>int(binstr, 2)</code>, which can be used to test your implementation at the very least.</p>

<p>So here is how I would implement it:</p>

<pre><code>def bin2int(binstr):
    if set(binstr) != {'0', '1'}:
        raise ValueError('String is not binary: "%s"' % binstr)

    return sum(int(x)*2**i for i, x in enumerate(a[::-1]))


def main():
    while True:
        binary = input("Enter a line of binary, enter 'q' to quit: ")

        if binary.lower() == 'q':
            break

        try:
            print(bin2int(binary))
        except ValueError as err:
            print(err)


if __name__ == "__main__":
    main()
</code></pre>
    </div>