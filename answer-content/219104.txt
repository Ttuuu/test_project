<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Let the Compiler do the Optimization</strong><br>
C++ compilers have become very good at optimization, especially when they are compiled -O3. The compiler will handle optimizations such as inlining functions automatically, there is no need for the <code>inline</code> specification preceding functions in header files. See this <a href="https://stackoverflow.com/questions/1759300/when-should-i-write-the-keyword-inline-for-a-function-method">stack overflow question</a>.</p>

<p>It isn't apparent that the functions <code>cbegin()</code> and <code>cend()</code> are ever used in the code.</p>

<p><strong>Including Unnecessary Header Files</strong><br>
The code compiles properly without including <code>cstddef</code>. Including unnecessary header files may introduce symbol collisions, it also slows down compile times because the code in the include file needs to compiled as well.</p>

<p><strong>Over Commenting</strong><br>
It is obvious that commenting the solution is one of the main goals, and that is a good goal, however, there is such a thing as over commenting code. As code ages there will be changes to it to fix bugs or for optimization and comments require extra work to make sure they continue to represent the code. It is best to use variable and function names that are self documenting to make the code clearer. If the algorithm need commenting, it might be better to put a block comment at the top of the function.</p>
    </div>