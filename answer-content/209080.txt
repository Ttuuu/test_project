<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would seriously consider whether std::vector is the right data structure. Do you need the available table numbers to be in the order you got them, or can they be sorted? Do you need to allow duplicate table numbers? (I.e. if I add 42 twice, do I have one entry for 42 or two?)</p>

<p>If the data can be sorted and de-duplicated, then the most efficient way to find an entry is to store the data in a std::set. Storing the data takes a little longer (O(log n) for the set vs. amortized O(1) for the vector), but finding the data makes up for it (O(log n) for the set vs. O(n) for the vector). If you use a set, make sure to use set's find function (e.g. <code>mySet.find(tableNum)</code> rather than <code>std::find(mySet.begin(),mySet.end(),tableNum)</code>), or there's no benefit.</p>

<p>On a more general code-style note, since you're using C++ data structures anyway, you should probably use <code>std::string</code> and <code>std::cout</code> instead of <code>char *</code>/<code>char[]</code> and <code>printf</code>.</p>
    </div>