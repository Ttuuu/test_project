<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>what's the best method for such purpose to simplify below logic?</p>
</blockquote>

<p>With a helper function as there is  repetitive code.</p>

<pre><code>#include &lt;stdint.h&gt;

// Write 32-bit integer in little endian order to buf
unsigned char *u32tobuf(unsigned char *buf, uint32_t value) {
  buf[0] = value;
  buf[1] = value &gt;&gt; 8;
  buf[2] = value &gt;&gt; 16;
  buf[3] = value &gt;&gt; 24;
  return buf + 4;
}
</code></pre>

<p>I'd also 1) add some error checking, 2) drop the unneeded cast 3) prevent <code>int</code> overflow 4) use <code>const</code>.</p>

<pre><code>// Return error status
int send_packet(int connfd, const INFO* info, int len) {
    uint32_t buflen = len*8lu + 8;
    unsigned char* buf = malloc(buflen);
    if (buf == NULL) {
      return 1; // or perhaps some enum
    }
    unsigned char* p = u32tobuf(buf, 0x55555555);
    p = u32tobuf(p, buflen);
    for (int i=0; i&lt;len; i++) {
      p = u32tobuf(p, info[i].pid);
      p = u32tobuf(p, info[i].score);
    }
    ssize_t write_count = write(connfd, buf, buflen);
    free(buf);
    if (write_count != buflen) [
      return 1; // or perhaps some enum
    }
    return 0;
}
</code></pre>
    </div>