<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In addition:</p>

<ul>
<li>"<strong>Always</strong> specify a radix when using parseInt." -- <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt" rel="nofollow noreferrer">MDN parseInt documentation</a></li>
<li>When getValue() is given a malformed string, it ignores the malformed parts without letting anyone know something went wrong. For example, <code>2 h 500 m 600 s</code> returns <code>0</code>. It is better to throw an error when the input isn't valid (so the caller can more easily figure out why the values it got back are wrong).</li>
<li>If you expect requirements to change in the future, you should look into harnessing the power of a real parser (or parser generator). For example, what changes do you need to do to:

<ul>
<li>Add support for uppercase letters: <code>1H2D3M</code></li>
<li>Allow spaces: <code>30h 50 m 10s</code></li>
<li>Allow input to be in any order: <code>5s 10m</code></li>
<li>Allow multiple occurrences or no occurrences of a unit: <code>30h 10h</code> or <code>10s</code></li>
<li>Add new units: <code>d</code> (days) or <code>ms</code> (milliseconds), etc.</li>
</ul></li>
</ul>

<p>Here is what that looks like using a parser generator (PEG.js):</p>

<ul>
<li>Navigate to <a href="https://pegjs.org/online" rel="nofollow noreferrer">https://pegjs.org/online</a></li>
<li>Paste the following into the grammar text area:</li>
</ul>

<pre><code>// Duration to Seconds Grammar
// ==========================
//
// Accepts expressions like "4h53m12s" or "4H 33M 12S" 
// and computes the total number of seconds.

start
  = total

total
  = left:subtotal right:total { return left + right; }
  / subtotal

subtotal
  = left:integer right:day { return left * 86400; }
  / left:integer right:hour { return left * 3600; }
  / left:integer right:minute { return left * 60; }
  / left:integer right:second { return left; }
  / left:integer right:millisecond { return left * .001; }

day
  = whitespace [dD]

hour
  = whitespace [hH]

minute
  = whitespace [mM][^sS]

second
  = whitespace [sS]

millisecond
  = whitespace [mM][sS]

integer
  = whitespace [0-9]+ { return parseInt(text(), 10); }

whitespace
  = [ \t\n\r]*
</code></pre>

<ul>
<li>Test it out in the right-hand pane</li>
<li>Choose your options and click Download Parser </li>
</ul>
    </div>