<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In all your code was not too bad. You can groupby on 2 items:</p>

<pre><code>votes_per_state = df.groupby(["state", "party"])["votes"].sum().unstack(fill_value=0)
</code></pre>

<blockquote>
<pre><code>state Aam Aadmi Party All India Trinamool Congress    Bharatiya Janata Party  Communist Party of India (Marxist)  Indian National Congress    other
Andaman &amp; Nicobar Islands 3737    2283    90969   1777    83157   0
Andhra Pradesh    0   0   85  0   0   100
</code></pre>
</blockquote>

<p>Then you can define which party you're interested in, and manually assemble a DataFrame</p>

<pre><code>party_of_interest = "Bharatiya Janata Party"
result = pd.DataFrame(
    {
        party_of_interest: votes_per_state[party_of_interest],
        "total": votes_per_state.sum(axis=1),
    }
)
</code></pre>

<blockquote>
<pre><code>state Bharatiya Janata Party  total
Andaman &amp; Nicobar Islands 90969   181923
Andhra Pradesh    85  185
</code></pre>
</blockquote>

<p>If you want you can even add a percentage:</p>

<pre><code>result = pd.DataFrame(
    {
        party_of_interest: votes_per_state[party_of_interest],
        "total": votes_per_state.sum(axis=1),
        "pct": (
            votes_per_state[party_of_interest]
            / votes_per_state.sum(axis=1)
            * 100
        ).round(1),
    }
)
</code></pre>

<blockquote>
<pre><code>state Bharatiya Janata Party  total   pct
Andaman &amp; Nicobar Islands 90969   181923  50.0
Andhra Pradesh    85  185 45.9
</code></pre>
</blockquote>
    </div>