<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>1: <code>Add()</code> doesn't appear to access any class members, so it can be declared <code>static</code>. But then again, it looks like it wants to return the name, serial number, and free space. Make it do so - create a quick container type</p>

<pre><code>public sealed class DriveInfo
{
    public DriveInfo(string name, string serialNumber, ulong freeSpace)
    {
        this.Name = name;
        this.SerialNumber = serialNumber;
        this.FreeSpace = freeSpace;
    }

    public string Name { get; }

    public string SerialNumber { get; }

    public ulong FreeSpace { get; }
}
</code></pre>

<p>usage becomes:</p>

<pre><code>return new DriveInfo(
    (string)volume["Name"],
    (string)drive["SerialNumber"],
    (ulong)volume["FreeSpace"]);
</code></pre>

<p>2: The parameter <code>letter</code> is completely unused in the method and the comment is a lie. Remove the parameter and comment or use the parameter appropriately.</p>

<p>3: Invert your <code>if</code> blocks, to prevent so much indention as well as keeping the tests looking cleaner (equality vs. non-equality):</p>

<pre><code>if (partition == null) continue;
...
if (logical == null) continue;
</code></pre>

<p>4: Both <code>ManagementObject</code> and <code>ManagementObjectSearcher</code> descend from <code>Component</code>, which implements <code>IDisposable</code>. Their lifetime should therefore be wrapped in a <code>using</code> statement:</p>

<pre><code>using (var searcher = new ManagementObjectSearcher($"ASSOCIATORS OF {{Win32_DiskDrive.DeviceID='{drive["DeviceID"]}'}} WHERE AssocClass = Win32_DiskDriveToDiskPartition"))
using (var partition = searcher.First())
{
}
</code></pre>

<p>5: Your extension method's body can be replaced by a quick one-liner:</p>

<p><code>return searcher.Get().Cast&lt;ManagementObject&gt;().FirstOrDefault();</code></p>
    </div>