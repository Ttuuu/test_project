<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I see no problem, given your comment, to have a 'stretchy' crate, but in my example code below you can control whether the crate can be stretched or not.</p>

<pre><code>class Crate
{
    private $length, $width, $height;
    private $resizable = true;

    function __construct(float $length, float $width, float $height)
    {
        list($this-&gt;length, $this-&gt;width, $this-&gt;height) = [$length, $width, $height];
    }

    function getDimensions(): array
    {
        return [$this-&gt;length, $this-&gt;width, $this-&gt;height];
    }

    function isResizable()
    {
        return $this-&gt;resizable;
    }

    function fixateSize()
    {
        $this-&gt;resizable = false;
    }

    function addLength(float $extraLength): float 
    {
        return $this-&gt;length += $this-&gt;isResizable() ? $extraLength : 0;
    }
}
</code></pre>

<p>I've added three methods; <code>getDimensions()</code>, <code>isResizable()</code> and <code>fixateSize()</code>. Note that there's no function to undo the <code>fixateSize()</code>. That is intentional: What would be the point of fixating the size if you can undo it?</p>

<p>I've made the dimension and resize fields <code>private</code>. Only the <code>Crate</code> class should be responsible for manipulating these. Child classes should use the methods of <code>Crate</code> to change them, hence the <code>getDimensions()</code> method.</p>

<p>Note how <code>addLength()</code> now returns the new length, and how it doesn't add the <code>$extraLength</code> when the crate size is fixated. Instead of returning the new length you could return a boolean, indicating whether the extra length is accepted. Another reason for not accepting the extra length could be that the crate would become too long.</p>

<p>I wouldn't use the <code>CrateService</code> class, that just overly complicated, and the <code>addLength()</code> method that returns a new object is just weird. The name of the method doesn't suggest this at all. A better name would have been <code>cloneAndStretch()</code>.</p>
    </div>