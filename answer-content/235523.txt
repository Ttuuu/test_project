<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Like bhathiya-perera and yourself suggested this can be better implemented using a <code>HashMap</code> and simply count the characters.</p>

<p>However in my opinion your attempt isn't that bad. The problem is you are using the wrong methods and data structures and you are coping/creating strings too much.</p>

<p>First you don't need to create <code>charArray</code> which is an unnecessary copy of the string. You are only using for the length (with is identical to the length of the original string) and to get the character, which can be done with the <code>.charAt()</code> method of <code>String</code>.</p>

<p><code>String</code> is the wrong data structure for <code>uniqueRepeats</code>. The only thing you do with that is check if it contains a specific character. The optimized data structure for that would be a <code>HashSet&lt;Character&gt;</code>:</p>

<pre><code>Set&lt;Character&gt; uniqueRepeats = new HashSet&lt;&gt;();
</code></pre>

<p>Counting the duplicates yourself with <code>count</code> is also not necessary. You can just take the <code>size()</code> of <code>uniqueRepeats</code> at the end.</p>

<p>Creating <code>restOfString</code> is also not necessary, since <code>String</code> has a variant of <code>indexOf</code> that searches from a given index instead of from the start.</p>

<pre><code>textLower.indexOf(character, i + 1) != -1
</code></pre>

<p>When getting the character from the string, you don't need to convert it into a <code>String</code>. Generally anything that can be done with a <code>String</code>, usually can be done with a character:</p>

<pre><code>char character = textLower.charAt(i); 
</code></pre>

<p>Finally the two nested <code>if</code>s can be combined into one using <code>&amp;&amp;</code>. </p>

<p>Final code:</p>

<pre><code>public static int duplicateCount(String text) {
  String textLower = text.toLowerCase(); 
  Set&lt;Character&gt; uniqueRepeats = new HashSet&lt;&gt;();

  for (int i = 0; i &lt; textLower.length - 1; i ++) { 
    char character = textLower.charAt(i);

    if (!uniqueRepeats.contains(character) &amp;&amp; textLower.indexOf(character, i + 1) != -1) { 
       uniqueRepeats.add(character);
    }
  }

  return uniqueRepeats.size(); 
} 
</code></pre>
    </div>