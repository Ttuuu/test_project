<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Looks an interesting first project! Some thoughts:</p>

<ul>
<li><p>The URL! type does not need a <code>%</code> prefix (they would be interpreted as FILE! and would behave incorrectly were you to operate upon them).</p></li>
<li><p>In Red, you can use the WORD! type in place of strings. You can use a LIT-WORD! to get a word without evaluating it. Takes a little getting used to, but is more efficient and expressive:</p>

<pre><code>weapons: [rock paper scissors]
player-choices: [rock 0 scissors 0 paper 0]

player-wins: [
    [rock scissors] "breaks"
    [paper rock] "covers"
    [scissors paper] "cut"
]

select player-choices 'rock
</code></pre></li>
<li><p>Instead of VALID-CHOICE, you could use SWITCH to drive things:</p>

<pre><code>until [
    switch player-choice: ask "(r)ock, (s)cissors, (p)aper or (q)uit? " [
        "q" [true]
        "r" "s" "p" [
            play-round player-choice
            false
        ]
    ]
]
</code></pre></li>
<li><p>You can use CASE in place of nested EITHER statementsâ€”breaks the choices out a bit:</p>

<pre><code>make-computer-choice: func [
    /local tmp tally
][
    case [
        games-played &lt; 3 [
            random/only weapons
        ]

        (
            tmp: random games-played
            tmp &lt;= tally: select player-choices 'rock
        ) [
            'rock
        ]

        tmp &lt;= tally: tally + select player-choices 'scissors [
            'scissors
        ]

        true [ ; or else
            'paper
        ]
    ]
]
</code></pre></li>
<li><p>If you want to somewhat keep the game logic separate from the interface, I'd recommend a <code>play-round</code> function called in the same fashion as above. <code>play-round</code> could return <code>false</code> (continues) or <code>true</code> (ends loop when someone wins a certain amount of games).</p></li>
<li><p>I notice you define the function <code>make-computer-choice</code> but don't invoke it.</p></li>
</ul>
    </div>