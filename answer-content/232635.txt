<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, what you want is just a product of the alphabet, with increasing numbers of elements. You can use <a href="https://docs.python.org/3.8/library/itertools.html#itertools.product" rel="noreferrer"><code>itertools.product</code></a> for this:</p>

<pre><code>from itertools import product, count
from string import ascii_lowercase

def generate_labels():
    """Yields labels of the following form:
       a, b, ..., z, aa, ab, ..., zz, aaa, aab, ..., zzz, ...
    """
    for n in count(start=1):
        yield from map("".join, product(*[ascii_lowercase]*n))
</code></pre>

<p>Here is what it outputs:</p>

<pre><code>from itertools import islice

print(list(islice(generate_labels(), 1000)))
# ['a', 'b', ..., 'z', 'aa', 'ab', ..., 'az', 'ba', 'bb', ..., 'bz', ..., 'za', ..., 'zz', 'aaa', 'aab', ..., 'all']
</code></pre>

<p>This has the slight disadvantage that the list being passed to <code>product</code> gets larger every iteration. But already with <span class="math-container">\$n=5\$</span> you can generate <span class="math-container">\$\sum_{k=1}^n 26^k = 12,356,630\$</span> labels, and the list is only about <code>sys.getsizeof([ascii_lowercase]*5) + sys.getsizeof(ascii_lowercase) * 5</code> = 479 bytes large, so in practice this should not be a problem.</p>

<hr>

<p>I also made the name a bit longer (and clearer IMO) and added a <a href="https://www.python.org/dev/peps/pep-0257/" rel="noreferrer"><code>docstring</code></a> to briefly describe what the function is doing.</p>
    </div>