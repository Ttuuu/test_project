<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3><code>try</code>-with-resources</h3>

<p><code>BufferedReader</code> implements <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html" rel="nofollow noreferrer"><code>AutoCloseable</code></a>, so instead of </p>

<blockquote>
<pre><code>    try {
        BufferedReader br = new BufferedReader(new FileReader(filename));
        try {
</code></pre>
</blockquote>

<p>You can say </p>

<pre><code>    try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
</code></pre>

<p>and then get rid of your <code>finally</code> block.  </p>

<blockquote>
<pre><code>        } finally {
            br.close();
        }
</code></pre>
</blockquote>

<p>Also, this should allow you to merge the two <code>try</code> statements into one, as the resource declaration is inside the scope of the <code>try</code> if it throws an exception.  </p>

<h3>Odd behavior</h3>

<blockquote>
<pre><code>            String line = br.readLine();
            int lineNumber = 0;
</code></pre>
</blockquote>

<p>So you read the first line of the file.  Then, if a Boolean is true, you skip all the other lines of the file without counting them (even though you just declared a variable to count them).  Then you process the first line of the file.  Why not </p>

<pre><code>        if (goToEnd) {
            while (br.readLine() != null) {}
        }

        // we only want to count lines past the current end of file
        int lineNumber = 0;
        while (true) {
            String line = br.readline();
            while (line == null) {
                Thread.sleep(1);
                line = br.readLine();
            }

            readCallback.onRead(lineNumber++, line);
        }
</code></pre>

<p>Now it's clearer that <code>lineNumber</code> has nothing to do with the part before the end of the current file.  And we don't process the first line of the file and then a much later line.  Each <code>line</code> lasts only one iteration of the loop.  </p>

<p>If the condition is false, a <code>while</code> acts just like an <code>if</code>.  But if the condition is true, we can stay in the loop.  </p>

<p>If this is not the behavior that you want, please add comments to your code explaining why.  E.g. "We always need to read the first line of the file as line number 0, even if we skip the rest of the existing lines.  This is because the first line has the column headers."  </p>
    </div>