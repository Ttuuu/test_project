<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Combine division and modulus</h2>

<p>Use <a href="https://docs.python.org/3/library/functions.html#divmod" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#divmod</a></p>

<p>rather than this:</p>

<pre><code>    digits.append(int(n % b))
    n //= b
</code></pre>

<h2>Replace loop with <code>sum</code></h2>

<p>This</p>

<pre><code>res = 0
for index, i in enumerate(reversed(n)):
    res += int(i) * b ** index
return res
</code></pre>

<p>is a good candidate for conversion to a generator, i.e.</p>

<pre><code>return sum(int(i) * b**index for index, i in enumerate(reversed(n)))
</code></pre>

<p>However, you can get rid of that <code>reversed</code> if you change the power <code>index</code> to be <code>len(n) - index</code>.</p>

<h2>Imports at the top</h2>

<p>Move this:</p>

<pre><code>from math import log2, ceil, log10, floor
</code></pre>

<p>to the top of your file.</p>

<h2>Don't compare types</h2>

<p>Rather than this:</p>

<pre><code>if type(num) == list:
</code></pre>

<p>use <code>isinstance</code>.</p>

<h2>Member mutability</h2>

<p>You shouldn't care that <code>num</code> is coming in as a list; you should only check that it's iterable. And store it as a tuple, not a list, because you don't (and shouldn't) mutate it in your class code.</p>

<h2>Call <code>reversed</code> once</h2>

<p>This:</p>

<pre><code>zip(reversed(self.digits), reversed(o.digits))
</code></pre>

<p>should be</p>

<pre><code>reversed(tuple(zip(self.digits, o.digits)))
</code></pre>

<p>The inner <code>tuple</code> is required because <code>reversed</code> does not accept an iterator.</p>

<h2>Don't use strings for math</h2>

<p>Just don't. This:</p>

<pre><code>a.digits, b.digits = ['0']
</code></pre>

<p>is not a good idea. Use actual digits whenever possible, and it is possible here.</p>
    </div>