<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is not a bad question. Fundamentally, your line of thought is a perfect example of <a href="https://en.wikipedia.org/wiki/Program_optimization#When_to_optimize" rel="nofollow noreferrer">premature optimization</a>. Optimization on its own is not a bad thing, but</p>

<ol>
<li>you should know that this line of code is the line of code that slows the program down;</li>
<li>since the line is so complex, you should know which part of this line is the slowest;</li>
<li>you should be somewhat confident that making this single-line pile of code is worth the performance gain given the significant drop in legibility and maintainability.</li>
</ol>

<p>It's very important to profile - to measure the performance of your code, and to find bottlenecks. Without this, we as programmers are entirely blind to the actual performance characteristics of our code. Your usual priorities should be strongly biased toward making it legible and correct well before making it fast, and when you do make it fast, you need to already know where the speedups are needed to a fairly good degree of accuracy.</p>

<p>In short, the code that you showed is unmaintainable. It needs to be spread over many more lines than it is now, and if you think it's worth profiling - great! Measure the before and after!</p>
    </div>