<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome on Code Review!</p>

<hr>

<h3>Don't use <code>using namespace std;</code></h3>

<p>Putting <code>using namespace std</code> at the top of every program is a <a href="https://stackoverflow.com/a/1453605/5416291">bad practice</a> that can cause a lot of problems that are easy to avoid, most people are used to the prefix, and three letters aren't that hard to type.</p>

<ul>
<li>Although it's "safe" to use it in some place (e.g. implementation files), as long as you aren't familiar with the features of c ++, <a href="https://isocpp.org/wiki/faq/coding-standards#using-namespace-std" rel="nofollow noreferrer">try to avoid it</a>.</li>
<li>It led to a world of name collisions. (best case)</li>
<li>It's source of silent errors and weird bugs. (worst case)</li>
<li>If typing <code>std::</code> is so tedious for you, try to import only <em>truncated namespaces</em>. ( e.g. individual identifiers like <code>using std::string;</code> or nested names like <code>using namespace std::literals</code>).</li>
<li>If importing nested namespaces still too awful for you, try to do it <a href="https://en.cppreference.com/w/cpp/language/namespace#Using-declarations" rel="nofollow noreferrer">inside a restricted scope</a> (e.g. a functions) and not in global scope.</li>
</ul>

<hr>

<h3>Ensure validity of parameters</h3>

<p>In your <code>add()</code>,  <code>substract()</code>,  <code>multiply()</code> and <code>divide()</code> function, you don't check the validity of given inputs. You could surely use assertions to ensure that the operation don't lead to integer overflow/underflow or division by zero.</p>

<p>You <em>could</em> use assertions to check preconditions, postconditions and invariants. It make your code more explicit and you avoid possibly broke you code when modifying.</p>

<ul>
<li><a href="https://ptolemy.berkeley.edu/~johnr/tutorials/assertions.html" rel="nofollow noreferrer">How to use assertions in C</a> (for C, but still applicable here)</li>
<li><a href="https://barrgroup.com/Embedded-Systems/How-To/Use-Assert-Macro" rel="nofollow noreferrer">How and When to Use C's assert() Macro</a> (same, also valid)</li>
<li><a href="https://stackoverflow.com/questions/1081409/why-should-i-use-asserts">Why should I use asserts?</a> </li>
</ul>

<hr>

<h3>Inputs / Outputs</h3>

<ul>
<li>When you read values from user input, <a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#slio2-when-reading-always-consider-ill-formed-input" rel="nofollow noreferrer">consider it ill-formed</a>, so <a href="https://isocpp.org/wiki/faq/input-output#istream-and-ignore" rel="nofollow noreferrer">check for validity</a> and sanitize input. Never trust user, They all try to broke your program.</li>
<li>Using <code>std::endl</code> sending a <code>'\n'</code> and then flushes the output buffer. So <code>std::endl</code> is more expensive in performance. So, use '\n' <code>'\n'</code> and then, if you want to manually flush the stream, explicitly call <a href="https://en.cppreference.com/w/cpp/io/manip/flush" rel="nofollow noreferrer"><code>std::flush</code></a>.</li>
</ul>

<hr>

<h3>Use your functions</h3>

<p>If you don't know how to use your function, I think you really have to learn to basics. Their are a lot of resources on the net. Once you get basics, dive into the <a href="https://isocpp.org/wiki/faq" rel="nofollow noreferrer">C++ FAQ</a> and the <a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines.html" rel="nofollow noreferrer">C++ Core Guideline</a> to get some good practices.</p>

<p>Also, it's Christmas soon, a good opportunity to ask for <a href="https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list">a good book about C++</a></p>

<hr>

<h3>Misc</h3>

<ul>
<li>When it's possible, try to <a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines.html#Res-goto" rel="nofollow noreferrer">avoid using <code>goto</code></a>. </li>
<li><a href="https://stackoverflow.com/questions/18402853/must-the-int-main-function-return-a-value-in-all-compilers">Don't <code>return 0</code> from <code>main()</code></a>.</li>
<li>You should also fix indentation. </li>
</ul>
    </div>