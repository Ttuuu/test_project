<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One different approach could be to have the filtering be just toggling a CSS class so you can build the DOM once, and then just selectively show (/hide) rows. Speaking of CSS, all those inline style definitions should definitely go to a stylesheet.</p>

<p>Multiple filters on the other hand are just <code>AND</code>ing them together.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>// a couple of helpers to shorten code
const elem = (type, attrs = {}) =&gt;
  Object.assign(document.createElement.bind(document)(type), attrs)
const append = (parent, child) =&gt; (parent.appendChild(child), parent)

// NOTE adapt to your date format
const yearPart = date =&gt; date.slice(0, 4)
const monthPart = date =&gt; date.slice(5, 7)

document.addEventListener('DOMContentLoaded', () =&gt; {
  const incidents = document.getElementById('incidents')
  const filters = document.forms.filters

  // reduce the data into &lt;select&gt; &lt;option&gt;s and &lt;tbody&gt;
  const {options, tbody} = data.reduce((acc, ary) =&gt; {
    let [system, date] = ary
    let year = yearPart(date)
    let month = monthPart(date)

    append(acc.tbody, ary.reduce((tr, datum) =&gt;
      append(tr, elem('td', {textContent: datum}))
    , elem('tr')))

    acc.options.system.add(system)
    acc.options.year.add(year)
    acc.options.month.add(month)

    return acc
  }, {
    options: { system: new Set(), year: new Set(), month: new Set() }
    , tbody: elem('tbody')
  })

  // populate the &lt;select&gt;s
  Object.entries(options).forEach(([key, values]) =&gt;
    Array.from(values).sort().reduce((select, option) =&gt;
      append(select, elem('option', {textContent: option}))
    , filters[key]))

  // populate the &lt;table&gt;
  append(incidents, tbody)

  // or just disregard the above if the &lt;table&gt; and &lt;select&gt;s are
  // pre-populated.
  // actual filtering
  filters.addEventListener('change', evt =&gt; {
    const rows = incidents.querySelectorAll('tbody tr')

    rows.forEach(row =&gt; row.classList.remove('hidden'))

    // NOTE that this expects the order of the &lt;select&gt;s to match
    // the order of the fields (with the exception of date)
    Array.prototype.filter.call(rows, ({cells}) =&gt;
      !Array.from(document.forms.filters).reduce((bool, {value}, i) =&gt; {
        if(!value)
          return bool &amp;&amp; true

        switch(i) {
          case 1: return bool &amp;&amp; value == yearPart(cells[1].textContent)
          case 2: return bool &amp;&amp; value == monthPart(cells[1].textContent)
          default: return bool &amp;&amp; value == cells[i].textContent
        }
      }, true)
    ).forEach(row =&gt; row.classList.add('hidden'))
  })
})</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>table { width: 100%; border-collapse: collapse; table-layout: fixed }
td:nth-child(5) { width: 20%; overflow: hidden; white-space: nowrap }
th { text-align: left }
th, td { padding: .5ex; vertical-align: baseline }
.hidden { display: none }</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;form id="filters"&gt;
      &lt;label&gt;&lt;span&gt;system&lt;/span&gt;
        &lt;select id="system"&gt;
          &lt;option&gt;
        &lt;/select&gt;
      &lt;/label&gt;

      &lt;label&gt;&lt;span&gt;year&lt;/span&gt;
        &lt;select id="year"&gt;
          &lt;option&gt;
        &lt;/select&gt;
      &lt;/label&gt;

      &lt;label&gt;&lt;span&gt;month&lt;/span&gt;
        &lt;select id="month"&gt;
          &lt;option&gt;
        &lt;/select&gt;
      &lt;/label&gt;

    &lt;/form&gt;

    &lt;table id="incidents"&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;Systems affected&lt;/td&gt;
          &lt;th&gt;Incident date&lt;/td&gt;
          &lt;th&gt;Incident number&lt;/th&gt;
          &lt;th&gt;Root cause&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
          &lt;th&gt;Attachments&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;

    &lt;/table&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>

    </div>