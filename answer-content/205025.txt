<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>1. If you are implementing this pattern for learning, then it is OK.</h2>

<p>Otherwise, you can use built-in <a href="https://docs.microsoft.com/en-us/dotnet/standard/events/how-to-implement-an-observer" rel="nofollow noreferrer">Observer Pattern of C#.</a></p>

<h2>2. Think about readable:</h2>

<blockquote>
<pre><code>    public void UnRegister(IObserver o)
    {
         int idx = observers.IndexOf(o);

         observers.RemoveAt(idx);

     }


 }
</code></pre>
</blockquote>

<p>There are some redundant empty lines in your code. Inaddition, <strong>"o"</strong> is not a good variable name. I think you can change it to "observer".</p>

<h2>3.You don't need to retrieve index of an object and then you remove it via the index. It will reduce the performance:</h2>

<blockquote>
<pre><code>      public void UnRegister(IObserver o)
      {
          int idx = observers.IndexOf(o);

          observers.RemoveAt(idx);

       }
</code></pre>
</blockquote>

<p>You can use Remove() method to remove an object from the list directly:</p>

<pre><code>    public void UnRegister(IObserver o)
    {
        observers.Remove(o);
    }
</code></pre>
    </div>