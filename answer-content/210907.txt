<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Combine imports</h2>

<pre><code>from colorama import Fore, Back
from colorama import init
</code></pre>

<p>should be</p>

<pre><code>from colorama import Fore, Back, init
</code></pre>

<h2>Trim unnecessary local functions</h2>

<pre><code>def clear_screen():
    def clear(): return os.system('cls')
    clear()
</code></pre>

<p>should be</p>

<pre><code>def clear_screen():
    os.system('cls')
</code></pre>

<h2>Follow standard format for docstrings</h2>

<p>This comment:</p>

<pre><code># Returns Time of the trip
</code></pre>

<p>should land here:</p>

<pre><code>def get_time():
"""
Returns time of the trip
"""
</code></pre>

<p>Similar for your other functions.</p>

<h2>Drop unneeded parens</h2>

<p>This:</p>

<pre><code>while (True):
</code></pre>

<p>doesn't need parens. Similar for</p>

<pre><code>if (destination_choice == 1):
</code></pre>

<h2>Don't write <code>\n</code> in a multi-line heredoc</h2>

<p>This:</p>

<pre><code>"""Enter time of departure (24-hour):
    1. 10:00
    2. 11:00
    3. 12:00
    4. 13:00
    5. 14:00
    6. 15:00
    7. 16:00
    8. 17:00\n\nEnter selection: """
</code></pre>

<p>should simply be</p>

<pre><code>"""Enter time of departure (24-hour):
    1. 10:00
    2. 11:00
    3. 12:00
    4. 13:00
    5. 14:00
    6. 15:00
    7. 16:00
    8. 17:00

    Enter selection: """
</code></pre>

<h2>Use math instead of <code>if</code></h2>

<p>These statements:</p>

<pre><code>        if (time == 1):
            return 10
        elif (time == 2):
            return 11
        elif (time == 3):
            return 12
        elif (time == 4):
            return 13
        elif (time == 5):
            return 14
        elif (time == 6):
            return 15
        elif (time == 7):
            return 16
        elif (time == 8):
            return 17
</code></pre>

<p>can be simplified to:</p>

<pre><code>return time + 9
</code></pre>

<h2>Use f-strings</h2>

<p>This:</p>

<pre><code>'FERRY' + " " + str(item + 1)
</code></pre>

<p>can be</p>

<pre><code>f'FERRY {item + 1}'
</code></pre>

<h2>Drop ineffectual logic blocks</h2>

<p>This:</p>

<pre><code>            if availability == 0:
                return False
            elif availability == 1:
                continue
</code></pre>

<p>has an <code>elif</code> that doesn't do anything. This might be a bug (if you intended for that to continue through the outer loop, which it won't). If it's working correctly, the <code>elif</code> can simply be deleted.</p>

<h2>Don't <code>else</code> after a <code>return</code></h2>

<p>This:</p>

<pre><code>    return False
else:
</code></pre>

<p>doesn't need an <code>else</code>, because the previous block already returned. De-indent the code in the <code>else</code> block and delete the <code>else</code>.</p>
    </div>