<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have some nitpicks to talk about before getting in a bigger thing :</p>

<ul>
<li><p><code>distance</code> should be named <code>distanceTo</code>, <code>equal</code> should be <code>areEqual</code>.</p></li>
<li><p>OOP wise, the function <code>pointsFormsQuadrangle</code> shouldn't be in the class <code>Point</code>, because it breaks single responsibility principle, you could extract it to someplace else. </p></li>
</ul>

<p>Nitpicks are over.</p>

<p>In <code>pointsFormsSquare</code>, you call <code>pointsFormsQuadrangle</code>. The verifications that you do, to assert that you have a square, are the following :</p>

<ul>
<li>No points are the same.</li>
<li>All the distances to the center of your points are equal.</li>
<li>You check if two sides of the quadrangle are equal (I believe).</li>
</ul>

<p>The two last parts are the important one and they seem to work pretty well. But is it the most efficient way to figure out if something is a square? Probably not. Computing the euclidean distance is kind of expensive. There a lots of solution on internet that don't rely on computing distances 7 times.</p>

<p>Finally, the function <code>formSquaresFromPoints</code> probably iterates over way more points than it should. At the moment you have 3 points, you can start excluding the possibility that they form a square. If you know for sure that the 3 points can't possibly form a square, you'll try combinations with every other points with no reason, because it's already impossible for them to make a square. You don't test with many points right now, so maybe it doesn't matter. I'm not sure I explained myself correctly on this point, but don't hesitate to ask questions if you didn't understand.</p>

<p>I can't comment much on the "Javascriptness" of your code because I'm not good enough with this language, but it looks clean.</p>
    </div>