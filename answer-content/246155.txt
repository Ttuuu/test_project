<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your approach works well but it doesn't consider punctuation, for example:</p>
<pre><code>@Test
public void testWordCount(){
    String str = "Hey — how are you?";

    assertEquals(4, wc.countWords(str)); // Fail
    assertEquals(4, wc.countWordsTokenizer(str)); // Fail
}
</code></pre>
<p>Also <code>StringTokenizer</code> is discouraged for new code. From the Javadoc:</p>
<blockquote>
<p>StringTokenizer is a legacy class that is retained for compatibility
reasons although its use is discouraged in new code. It is recommended
that anyone seeking this functionality use the <code>split</code> method of
<code>String</code> or the java.util.regex package instead.</p>
</blockquote>
<p>The <code>split</code> method accepts a regex as input. This is to split by non-words characters:</p>
<pre class="lang-java prettyprint-override"><code>public int countWordsSplit(String str) {
    if (str == null || str.isEmpty()) {
        return 0;
    }
    return str.split("\\W+").length;
}
</code></pre>
<p>Test:</p>
<pre><code>@Test
public void testWordCount(){
    String str = "Hey — how are you?\t\n";

    assertEquals(4, wc.countWords(str)); // Fail
    assertEquals(4, wc.countWordsTokenizer(str)); // Fail
    assertEquals(4, wc.countWordsSplit(str)); // Pass
}
</code></pre>
<h2>Edge cases</h2>
<pre><code>wc.countWordsSplit("Bill's house"); // returns 3

wc.countWordsSplit("1 2"); // returns 2
wc.countWords("1 2"); // returns 2
wc.countWordsTokenizer("1 2"); // returns 2

// Letters with accents, umlaut etc.
// Other edge cases...
</code></pre>
<h2>Considerations</h2>
<p>It all depends on how you define what a "word" is in the context of your program.</p>
<p>Define what a word is by making some assumptions. Then find a solution that satisfies your requirements. This approach prevents you from having an over-complicated solution that your program doesn't need.</p>
<p>More info <a href="https://www.baeldung.com/java-word-counting" rel="nofollow noreferrer">here</a></p>
<p>Many thanks to @RolandIllig for the helpful comments.</p>
    </div>