<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The problem with Dijkstraâ€™s Algorithm here is that there is no guarantee that the target node is connected to the graph, and the code does not appear to handle unreachable goals in an informative way, e.g.</p>

<pre><code>  jug1, jug2 = 0, 0
  jug1_size, jug2_size = 4, 3
  jug2_result, jug1_result = 5, 7
</code></pre>

<p>It looks like it will just return the nearest value when Dijkstra runs out of nodes.</p>

<p>Ideally validation should be done in the <code>Pouring Water</code> code, even if it is via an external library call to a connected component module. </p>

<p>This suggests that modularity would be improved if the general purpose Dijkstra's Algorithm lived in its own module. This would simplify and reduce the size of the <code>Pouring Water</code> code while abstracting away implementation details.</p>
    </div>