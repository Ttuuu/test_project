<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Computation of <code>logsum</code> and <code>logsum1</code> in <code>gamma()</code> are suboptimal. You do costly operations of raising to power, and recompute factorial on each iteration (the latter invokes the quadratic time complexity BTW). Notice that in the <span class="math-container">\$\sum \dfrac{(-1)^{r-1} k^{r+1}}{(r+1)(r-1)!}\$</span> a consecutive term can be expressed via the previous one, as<span class="math-container">\$T_{r+1} = -k\dfrac{r+1}{(r+2)r} T_n\$</span>. Instead of computing each term from scratch, use this recurrence, and enjoy a significant performance boost.</p>

<p>Converting the summation into a <a href="https://en.wikipedia.org/wiki/Horner%27s_method" rel="noreferrer">Horner schema</a> would likely improve the accuracy, that is to achieve the desired number of digits you'd need less number of terms.</p></li>
<li><p>Tree loops in <code>lntwo</code> cry to become a function.</p></li>
</ul>
    </div>