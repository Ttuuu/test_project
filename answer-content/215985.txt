<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>First some stylistic points</h2>

<ul>
<li><p><code>nums_d.setdefault(nums[i], []).append(i)</code></p>

<p>The <code>setdefault</code> is unnecessary here, you can assign a list normally</p>

<pre><code>nums_d[nums[i]] = [i]
</code></pre></li>
<li><p>When you need both the <code>index</code> and the <code>element</code> use enumerate <a href="https://www.python.org/dev/peps/pep-0279/" rel="noreferrer">see PEP279</a></p>

<blockquote>
<pre><code>nums_d = {}
for i in range(len(nums)):
    nums_d.setdefault(nums[i], []).append(i)
</code></pre>
</blockquote>

<pre><code>nums_d = {}
for i, e  in enumerate(nums):
    nums_d[e] = [i]
</code></pre></li>
<li><p>Use comprehension when possible (They use the C style looping and is considered to be faster)</p>

<pre><code>nums_d = { e: [i] for i, e  in enumerate(nums) }
</code></pre></li>
</ul>

<h2>Hint</h2>

<p>You loop over nums twice, but this can be done in one loop! <em>To make it O(n)</em></p>

<p>Whenever you visit a new element in nums -&gt;</p>

<p>Check if it's sum complement is in <code>nums_d</code>, else add the <code>target - element</code> to the dictionary with the index as value <code>t - e : i</code></p>

<blockquote class="spoiler">
  <p> </p><pre><code>nums_d = {}
for i, e in enumerate(nums):
    if e in nums_d:
        return [nums_d[e], i]
    nums_d[target - e] = i</code> </pre>
</blockquote>
    </div>