<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In addition to the other remarks:</p>

<p><code>reset_program</code> does exactly the same as <code>__init__</code>, so you could either call that directly:</p>

<pre><code>    if another == 'y':
        self.__init__()
</code></pre>

<p>or by creating a new instance altogether:</p>

<pre><code>    if another == 'y':
        Application()
</code></pre>

<p><s>The latter is nice because you are certain you won't have any attributes from the last run leftover, messing with your methods, the former is nice because you don't have a multitude of instances (I am not sure what happens with the first application when you create another one, since it isn't stored anywhere).</s></p>

<p>Not exactly knowing which way was the cleanest to do this, <a href="https://stackoverflow.com/questions/45798899/preferred-way-of-resetting-a-class-in-python">I asked a question on SO about resetting classes</a>.</p>

<p>It seems that calling <code>__init__()</code> or any <code>__something__</code>-methods directly is bad form. We could however move the definition of the class attributes to <code>reset_program</code> and do the following:</p>

<pre><code>def __init__():
    self.reset_program()
</code></pre>

<p>The second option above only works because you run the entire functionality of the class from within the <code>__init__()</code> method (which may or may not be bad form). When the new instance is created, the back and forth prompt is executed right away, so the moment it would go out of scope and get deleted (because it isn't assigned anywhere), is only after you are done with your input and output (and possibly been given anyother option to reset).</p>
    </div>