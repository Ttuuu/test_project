<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Even after using <a href="http://www.cplusplus.com/reference/vector/vector/reserve/" rel="nofollow noreferrer"><code>reserve</code></a>, as suggested by <a href="https://codereview.stackexchange.com/users/188857/l-f">@L.F.</a> and <a href="https://codereview.stackexchange.com/users/100620/ajneufeld">@AJNeufeld</a>, there was no considerable speedup and it was still timing out. So I decided to use dynamically allocated <strong>arrays</strong> instead. I also removed <code>using namespace std</code>, and instead only imported those <code>std</code> functions which are required in the program. </p>

<pre><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;
#include &lt;iterator&gt;

using std::cout;
using std::cin;
using std::endl;
using std::sort;

long long int triangles (int arr[], int N);

int main () {
    int T;
    cin &gt;&gt; T;
    for (int i = 0; i &lt; T; i++)
    {
        int N;
        cin &gt;&gt; N;
        int *arr = new int[N];
        for (int j = 0; j &lt; N; j++)
        {
        cin &gt;&gt; arr[j];
        }
        cout &lt;&lt; triangles (arr, N) &lt;&lt; endl;
        delete arr;
    }
    return 0;
}

long long int triangles (int arr[], int N)
{
    long long int sum = 0;
    sort(arr, arr+N);
    for (int i = 0; i &lt;= N-3; i++)
    {   
        int k = i + 2;
        for (int j = i + 1; j &lt;= N-2; j++)
        {
            while (k &lt; N &amp;&amp; arr[k] &lt; (arr[i] + arr[j]))
                k++;
            sum += k-j-1;
        }
    }
    return sum;
}
</code></pre>

<p>Note that the data type of the <code>sum</code> which is returned by the <code>triangles()</code> function must be <em>at least</em> <code>long long int</code>, as it otherwise <a href="https://en.cppreference.com/w/cpp/language/types" rel="nofollow noreferrer">exceeds the range</a> of regular <code>int</code>.</p>
    </div>