<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Single Responsibility</h1>
<p>Your function do 2 things:</p>
<ol>
<li>Filter the map to contain only numbers</li>
<li>Fill template string with relevant values</li>
</ol>
<p>I suggest to separate to 2 functions.</p>
<h1>Filter the map</h1>
<p>Will be more readable with Java Streams <code>filter</code> and <code>map</code>.</p>
<p>The result should be a map from string to int.</p>
<h1>Fill template</h1>
<p>Can be done with Java streams <code>reduce</code> or <code>collect</code>.</p>
<p>StringBuilder could be usufull here but it doesn't contains a function <code>replaceAll</code>.</p>
<h1>Code review</h1>
<ul>
<li><p>Don't reassign input parameters. It will make it harder for you to debug and it is confusing because the name don't fit the purpose of the variable. Do this instead</p>
<p><code>string res =initialText</code>
and keep changing res.</p>
</li>
<li><p>I like to name maps in following format: keyName2valueName. In your case placeholder2number.</p>
</li>
<li><p>The following code can be removed and the function still works.</p>
</li>
</ul>
<pre><code>if(StringUtils.isBlank(initialText) || MapUtils.isEmpty(productMap)){
        return initialText;
            }
</code></pre>
<p>I don't think it helps very much to the performance either.</p>
    </div>