<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>The only thing I know now is <code>grep -P</code> and everything seems like a nail if you have a hammer.</p>
</blockquote>

<p>I hope that's an exaggeration. Otherwise, I don't know how you will understand a review ;-)</p>

<h3>Use more here-strings</h3>

<p>The script uses here-strings in only one place,
when there are more places where it would be good to use.
For example, instead of this:</p>

<blockquote>
<pre><code>LATEST_KERNEL=$(echo "$AVAILABLE_KERNELS" | grep -oPz 'Available Kernels.*?\n=+\n\Kv.+?(?=\s.*?\n)')
</code></pre>
</blockquote>

<p>This would be better, and eliminate an unnecessary <code>echo</code> call:</p>

<pre><code>LATEST_KERNEL=$(grep -oPz 'Available Kernels.*?\n=+\n\Kv.+?(?=\s.*?\n)' &lt;&lt;&lt; "$AVAILABLE_KERNELS")
</code></pre>

<h3>Eliminate unnecessary condition</h3>

<p>The inner <code>if</code> here can be eliminated:</p>

<blockquote>
<pre><code>if ! containsElement "$INSTALLED_KERNEL" "${FALLBACK_KERNELS[@]}"
then
    if ! echo "$INSTALLED_KERNEL" | grep -q "$LATEST_KERNEL"
    then
        echo "${INSTALLED_KERNEL} is not fallback, nor latest. Removing it..."
        ukuu --remove "$INSTALLED_KERNEL"
    fi
fi
</code></pre>
</blockquote>

<p>You could add <code>"$INSTALLED_KERNEL"</code> to the parameter list of the call to <code>containsElement</code>. Not only the code will be simpler, but it will also eliminate a <code>grep</code> call. (And the <code>echo</code> with the <code>grep</code>, which should have been a here-string anyway, as explained earlier.)</p>

<h3>Understand the flags of commands</h3>

<p>This call looks strange: <code>grep -oPzq ...</code>.
Because of the <code>-q</code>.
Thanks to the <code>-q</code>, the command will produce no output.
Which makes the <code>-o</code> flag unnecessary.
I suggest to review in <code>man grep</code> all the flags you're using,
understand what they do,
and consistently eliminate unnecessary flags.</p>

<h3>Naming variables</h3>

<p><code>I</code> and <code>e</code> are too short, they don't help understanding their purpose, and therefore the code.</p>

<p>All capital letters are traditionally used for system variables.
For all local variables in shell scripts,
it's better to use lowercase names to avoid any confusion.</p>

<h3>Appending to an array</h3>

<p>This statement appends a value to the <code>INSTALLED_KERNELS</code> array:</p>

<blockquote>
<pre><code>INSTALLED_KERNELS=( "${INSTALLED_KERNELS[@]}" "$I" )
</code></pre>
</blockquote>

<p>A simpler way to achieve the same:</p>

<pre><code>INSTALLED_KERNELS+=("$I")
</code></pre>

<h3>Declare important global variables and constants at the top</h3>

<p>Some of the variables are crucial for the behavior of the script,
for example <code>FALLBACK_KERNELS</code>.
What if later you want to change the fallback kernels?
You have to read through the script to find the declaration in the middle.
It would be a lot easier if this was declared at the top,
so you would not need to re-read and re-understand what's going on just to make a simple change.</p>
    </div>