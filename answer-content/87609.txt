<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is how I would do it. First, we need a function to convert a UTC string to a DateTime since one doesn't already exist, as you already found out. The function that you found looks a bit complicated to me. I did a search for ".net utc to local time", and I found this: <a href="https://stackoverflow.com/questions/179940/convert-utc-gmt-time-to-local-time">https://stackoverflow.com/questions/179940/convert-utc-gmt-time-to-local-time</a></p>

<p>Don't forget that .NET code, such as C#, can be translated easily into PowerShell. This is what I came up with, based on the top-rated answer:</p>

<pre><code>function UtcToDateTime($dateStr)
{
    $date = [DateTime]::Parse($dateStr)
    [DateTime]::SpecifyKind($date, [DateTimeKind]::Utc)
}
</code></pre>

<p>The result is returned in the last line of that function because <code>SpecifyKind</code> returns a result.</p>

<p>Now we can use that function to transform our UTC date strings into DateTime objects:</p>

<pre><code>$utcTimes = gc C:\Scripts\UTC.txt

$dates = $utcTimes | % { UtcToDateTime $_ }
</code></pre>

<p>The <code>%</code> is short for <code>foreach</code>. In English: "for each date in $dates, convert it to a DateTime using our function."</p>

<p>Since you want a two-column output, an easy way to do that is to make a custom objects with two the desired two fields:</p>

<pre><code>$results = $dates | 
    % { [pscustomobject]@{UTCTime = $_.ToString(); LocalTime = $_.ToLocalTime().ToString() } }
</code></pre>

<p>The <code>@{...}</code> is a hash table. So what that code says is that for each date, convert it to a hash table, and then convert that hash table into a pscustomobject. (That's just an easy way to make custom objects.)</p>

<p>And now we return our results:</p>

<pre><code>$results
</code></pre>

<p>Which looks like the following (note that days and months are switched in my country):</p>

<pre><code>UTCTime                  LocalTime            
-------                  ---------            
19/04/2015 4:10:03 AM    19/04/2015 2:10:03 PM
19/03/2015 9:10:03 AM    19/03/2015 7:10:03 PM
</code></pre>

<p>Here's the full script:</p>

<pre><code>function UtcToDateTime($dateStr)
{
    $date = [DateTime]::Parse($dateStr)
    [DateTime]::SpecifyKind($date, [DateTimeKind]::Utc)
}

$utcTimes = gc C:\Scripts\UTC.txt

$dates = $utcTimes | % { UtcToDateTime $_ }

$results = $dates | 
    % { [pscustomobject]@{UTCTime = $_.ToString(); LocalTime = $_.ToLocalTime().ToString() } }

$results
</code></pre>
    </div>