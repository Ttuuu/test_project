<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One helpful function is <a href="http://hackage.haskell.org/packages/archive/base/4.6.0.0/doc/html/Data-Ord.html" rel="nofollow"><code>Data.Ord.comparing</code></a>:</p>

<pre><code>comparing :: (Ord a) =&gt; (b -&gt; a) -&gt; b -&gt; b -&gt; Ordering
comparing p x y = compare (p x) (p y)
</code></pre>

<p>With this and using function composition you can write:</p>

<pre><code>getMostCommon :: (Eq a) =&gt; [a] -&gt; a
getMostCommon = head . maximumBy (comparing length) . groupBy (==)
</code></pre>

<p>Similar changes apply to several places.  Another small simplification could be changing <code>(\x -&gt; (fst x) == (snd x))</code> to <code>uncurry (==)</code>.</p>
    </div>