<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I attempted to reduce redundancy by simulating a do-while loop so that the first condition initializes the sequence and then the code can be factored out.</p>

<p>Instead of having a temporary list, it returns a generator which can be appended to the list.</p>

<p>I couldn't test this so I don't know if it works:</p>

<pre><code>def get_object_list_for_user(user_service_token): 
    endpoint = f"{HOSTNAME}/me/library/objects/"
    params = {"limit": 100}
    offset = 0

    lists_of_objects_to_append = []

    while True:
      json_resp = _call_service_api(endpoint, params=params).json()
      lists_of_objects_to_append.extend(extract_items(json_resp))

      offset += 100
      params.update({"offset": offset})

      if not json_resp.get("next"):
          return lists_of_objects_to_append

def extract_items(json_resp):
    for item in json_resp.get("data"):
        yield({"library_id": item["id"], "name": item["attributes"]["name"]})
</code></pre>
    </div>