<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As others have said, this is reasonable beginner's code.  And @Sacho's answer gives good suggestions for improving it.</p>

<p>Below is a solution using some slightly more advanced techniques, if you're interested:</p>

<pre><code>var mode = function mode(arr) {
    return arr.reduce(function(current, item) {
        var val = current.numMapping[item] = (current.numMapping[item] || 0) + 1;
        if (val &gt; current.greatestFreq) {
            current.greatestFreq = val;
            current.mode = item;
        }
        return current;
    }, {mode: null, greatestFreq: -Infinity, numMapping: {}}).mode;
};

console.log(mode([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8, 9, 7, 9, 3, 2, 3, 8, 4, 6]));
//=&gt; 3
</code></pre>

<p>To see how it works, if you drop off the <code>.mode</code> at the very end of the return, you will get this object instead:</p>

<pre><code>{
    "mode": 3,
    "greatestFreq": 4,
    "numMapping": {"1": 2, "2": 2, "3": 4, "4": 2,
                   "5": 3, "6": 2, "7": 1, "8": 2, "9": 3}
}
</code></pre>

<p>This object is built up a piece at a time by the <code>reduce</code> call running over each element of the array, updating the <code>numMapping</code> each time and the <code>greatestFreq</code> and <code>mode</code> when appropriate. </p>
    </div>