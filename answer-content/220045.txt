<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A fairly simple alternative. Take the <code>maxLength</code> String plus one letter and cut it at the last space. If the <code>maxLength</code> was at the end of a word, the "plus one letter" will take care of that.</p>

<p>The &gt; signs in the tests are there to make any trailing spaces visible. </p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const crop = (message, maxLength) =&gt; {
  const part = message.substring(0, maxLength + 1);
  return part.substring(0, part.lastIndexOf(" ")).trimEnd();
}

console.log(crop("The quick brown fox jumped over the fence", 11)+"&gt;");
console.log(crop("The quick brown fox jumped over the fence", 9)+"&gt;");
console.log(crop("The quick brown fox jumped over the fence", 8)+"&gt;");
console.log(crop("The              ", 6)+"&gt;");
console.log(crop("The quick ", 20)+"&gt;");</code></pre>
</div>
</div>


<p>The other answers have very good explanations. I just felt a really simple solution was missing.</p>
    </div>