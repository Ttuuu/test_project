<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>After taking the input I added <code>srand()</code> with the <code>time.h</code> header to prevent getting the same pattern of letters every time starting the program.
I also removed the <code>windows.h</code> header and used <code>_sleep</code> (which now works, still have no idea why) and removed the <code>system("pause")</code>.
Also a possible way to add a table</p>

<p>The new code:</p>

<pre><code>/* To do list:
   *Convert to arduino
   *Make timer work in background of of table
   *Check if words in the table (for differant players) are the same and give points accordingly
   *Check if words are actual words (connect an online dictonary?)
   *Make interface? (if possible and I have time to learn how)
   *Think of what to do with Hardwear
   *Comment rest of the code
*/


// A program to keep track of points and time and to give a random letter for the game scattergories
#include "stdafx.h"
#include&lt;iostream&gt;
#include&lt;time.h&gt;
#include&lt;string&gt;
using std::cout;
using std::cin;
using std::string;
using std::getline;

void ltr()    //gives a random letter
{
    srand(time(NULL));    //gives a differant pattern every time
    char letter;
    letter = rand() % 27 + 64;         //assigns a random letter in ascii code to a char (resulting in a random letter)
    cout &lt;&lt; "The letter is " &lt;&lt; letter &lt;&lt; "\n";
}

void timer()
{
    cout &lt;&lt; "You got 1.5 minutes to finish\n";
    for (int i = 90; i &gt; 0; i--)
    {
        if (i % 5 == 0)
            cout &lt;&lt; i &lt;&lt; "\n";
        _sleep(1000);
    }
    cout &lt;&lt; "DING DONG!!! DING DONG!!! Time's up!!!\n";
}

void table()
{
    int plr, ctr;
    string lst[5][20];           //first dimantion: how many players. second dimantion: how many catagories, third dimantion(if added) will be the round
    cin&gt;&gt;plr&gt;&gt;ctr;       //parameters for later
    cin.ignore();                  //To avoid the "getline" reading the last input
    for(int x=0;x&lt;plr;x++)       //the player changes only after the previus player finishes
    {
        timer();
        for(int i=0;i&lt;ctr;i++)        //changing catagory
        {
            getline(cin,lst[x][i]);
        }
        system("cls");
        cout&lt;&lt;"Next player\n";
    }
    for(int x=0;x&lt;plr;x++)                   //this part (the whole "for" loop) is for confirming
    {
        cout&lt;&lt;"Player number "&lt;&lt;x+1&lt;&lt;": ";
        for(int i=0;i&lt;ctr;i++)
        {
            cout&lt;&lt;lst[x][i]&lt;&lt;"    ";
        }
        cout&lt;&lt;"\n";
    }
    _sleep(5000);
}

int points()        //points per round
{
    int a, b, c, sum;
    cout &lt;&lt; "How many sections only you got?\n";          //worth 15 points
    cin &gt;&gt; a;
    cout &lt;&lt; "How many words only you got?\n";       //worth 10 points
    cin &gt;&gt; b;
    cout &lt;&lt; "How many words you and another person got?\n";    //worth 5 points
    cin &gt;&gt; c;
    sum = a * 15 + b * 10 + c * 5;
    return sum;           //Note: It doesn't matter how many sections there are.
}

int act()
{
    int Points;
    ltr();
    table();
    Points = points();
    cout &lt;&lt; "You have earned " &lt;&lt; Points &lt;&lt; " this round\n\n";
    return Points;
}

int main()
{
    int Points;
    cout &lt;&lt; "Starting in five seconds\n";
    _sleep(5000);
    Points = act();
    for (;;)          //inf loop
    {
        int ph;
        cout &lt;&lt; "Press 1 to continue or anything else to stop\n";
        cin &gt;&gt; ph;
        if (ph == 1)
        {
            Points += act();
        }
        else
        {
            break;
        }
    }
    cout &lt;&lt; "You have earned a total of " &lt;&lt; Points &lt;&lt; " great job!";
    _sleep(5000);       //time to read the last text
    return 0;
}
</code></pre>
    </div>