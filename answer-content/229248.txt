<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is only a minor observation on top of what <a href="https://codereview.stackexchange.com/users/25834/">@Reinderien</a> already wrote about your code.</p>

<p>Writing function documentation like you did with </p>

<pre class="lang-py prettyprint-override"><code>def span_orthogonal(vec):
    '''vec represents n-dimensional vector'''
    '''Function spans an arbitrary vector that is orthogonal to vec'''
</code></pre>

<p>does not work as expected.</p>

<p>If you were to use <code>help(span_orthogonal)</code> you'd see</p>

<pre class="lang-none prettyprint-override"><code>Help on function span_orthogonal in module __main__:

span_orthogonal(vec)
    vec represents n-dimensional vector
</code></pre>

<p>The reason is that only the first block of text is interpreted as documentation. Also the usual convention is to write documentation "the other way round", by which I mean first give a short summary on what your function does, than go on to provide details such as the expected input. Both aspects can also be found in the infamous official <a href="https://www.python.org/dev/peps/pep-0008/" rel="noreferrer">Style Guide for Python Code</a> (aka PEP 8) in the section on <a href="https://www.python.org/dev/peps/pep-0008/#documentation-strings" rel="noreferrer">documentation strings</a>.</p>

<p>With</p>

<pre><code>def span_orthogonal(vec):
    '''Function spans an arbitrary vector that is orthogonal to vec

    vec represents n-dimensional vector
    '''
</code></pre>

<p>calling <code>help(...)</code> gives you</p>

<pre class="lang-none prettyprint-override"><code>Help on function span_orthogonal in module __main__:

span_orthogonal(vec)
    Function spans an arbitrary vector that is orthogonal to vec

    vec represents n-dimensional vector
</code></pre>

<p>Also since @Reinderien also hinted you towards numpy, just let me tell you that there is also "special" documentation convention (aka <a href="https://numpydoc.readthedocs.io/en/latest/format.html" rel="noreferrer">numpydoc</a>) often used in the scientific Python stack.</p>

<p>An example:</p>

<pre><code>def span_orthogonal(vec):
    '''Function spans an arbitrary vector that is orthogonal to vec

    Parameters
    ----------
    vec : array_like
        represents n-dimensional vector
    '''
</code></pre>

<p>This style is closer to what's possible with type hints in current versions of Python, as in that it's more structured. The idea behind numpydoc is to facilitate automated documentation generation using tools like <a href="http://www.sphinx-doc.org/en/master/" rel="noreferrer">Sphinx</a>, but this goes a little bit beyond what I was trying to convey here.</p>
    </div>