<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think the best approach instead of storing the raw values in a dictionary would be to create DbParameters (assuming you are using ADO.Net).  </p>

<p>You would need to change the sql insert statement to be parameterized - which you should as inserting raw values into a sql statement has been a bad practice for a long time.   With SSBRecvdTim being a string the code is open for a sql injection.</p>

<p>Even with your implementation you would need to change the sql insert statement to use the dictionary since updating the dictionary isn't going to update the variables or you need to map back the dictionary to the variable.  </p>

<p>While making it use parameters will be a tad bit more work it will be better even if the code is on the way out.  </p>

<p>as example you could make a method like - just an example not sure what would work best in your code base.</p>

<pre><code>static SqlParameter CreateParameter(string name, string value, TypeCode typeCode, int line)
{
    try
    {
        return new SqlParameter(name, Convert.ChangeType(value, typeCode));
    }
    catch (FormatException fe)
    {
        string errorMsg =
                    $"FormatException thrown while trying to parse Line #{line}, Token #{name}.";
        throw new FormatException(errorMsg, fe);
    }
}
</code></pre>
    </div>