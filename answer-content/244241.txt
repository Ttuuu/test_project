<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Obsolete Keywords</strong><br>
The C++ keyword inline is a <a href="https://stackoverflow.com/questions/29796264/is-there-still-a-use-for-inline">recommendation to the compiler</a> and it won't necessarily do anything. It has been basically obsolete since C++03. When the optimization flags are used during compilation, the compiler will decide what can be inlined and take care of it.</p>
<p><strong>Division by Zero</strong><br>
This program should either throw a <code>division by zero</code> exception or the compiler should complain on the following line (my compiler complained and wouldn't build the code).</p>
<pre><code>double maxerror = 1.0/0.0;
</code></pre>
<p><strong>Inconsistent Usage of Symbolic Constants</strong><br>
This code in main is inconsistent:</p>
<pre><code>int main(){
    const uint64_t amountofcolors = 216;
    uint32_t palette[amountofcolors];
    for(uint64_t i=0; i&lt;216; i++){
        palette[i] = i%6*0x000033 + i/6%6*0x003300 + i/36%6*0x330000;
    } // sample palette
</code></pre>
<p>The use of the numeric constant 216 in the for loop should be changed to use <code>amountofcolors</code>. That way if the value of <code>amountofcolors</code> changes the for loop will use the correct value.</p>
<p><strong>The use of uint64_t</strong><br>
Rather than specify uint32_t or uint64_t just use <code>unsigned</code>, <code>unsigned int</code>, <code>unsigned long</code> or <code>size_t</code>. This will automatically choose the size of the value based on the word size of the computer and that will provide the fastest code.</p>
<p><strong>More Symbolic Constants Are Better</strong><br>
The numeric constants <code>0x000033</code>, <code>0x003300</code> and <code>0x330000</code> are apparently some versions of RED, GREEN and BLUE. It might help others that need to modify the code if they had a better idea of what the values were so use symbolic constants, it won't hurt the performance.</p>
<p>The numeric constant <code>12.92</code> is used in 3 inline functions, if it has the same meaning for all 3 functions then a symbolic constant is called for so that all 3 functions can be changed at the same time</p>
<p><strong>Use of the <code>rand()</code> Function Without Seeding</strong><br>
There is nothing random about this code since rand was never seeded.</p>
<pre><code>        color = (rand()%4096)+(rand()%4096*4096);
</code></pre>
<p><strong>Using C Include Headers in C++</strong><br>
In C++ standard C include headers can be included by adding a <code>c</code> to the front of the name and removing the <code>.h</code>.</p>
<pre><code>#include &lt;cstdint&gt;
#include &lt;cmath&gt;
</code></pre>
<p>I'm going to stop here because there is enough to fix without addressing any more, post a follow up question when you've taken care of this.</p>
    </div>