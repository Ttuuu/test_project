<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I did more tests on the function today and found another Bug (shame on me), and <a href="https://codereview.stackexchange.com/help/what-to-do-instead-of-deleting-question">AFAIK on code review I can't change the original code</a> in the question since it got reviews.</p>

<p>if there are bytes have values more than 127 it will be all displayed as <code>FF</code> by the function. To reproduce</p>

<pre><code>char str[] = {127,0};
char * hex = strToHex(str);
printf("%s\n",hex); //pritnts 7F (NORMAL)

//now try with this
char str[] = {128,0};
char * hex = strToHex(str);
printf("%s\n",hex); //pritnts FF (BUG)
</code></pre>

<p>It appears if the function is used with non English characters because they are stored with the most significant bit is set <code>1</code> in UTF-8</p>

<h2>The Fix</h2>

<p>To Fix it, replace this line</p>

<pre><code>sprintf ( newStr + x * 2, "%02X", y );
</code></pre>

<p>with this</p>

<pre><code>sprintf ( newStr + x * 2, "%02hhX", y ); // added hh
</code></pre>

<p>This is because <code>y</code> is of type <code>char</code> or <code>signed char</code> and the <code>X</code> specifier expects the argument to be <code>unsigned int</code> if no length is provided, so we provided length <code>hh</code> to tell the function that <code>X</code> is <code>unsigned char</code> . Check the <a href="http://www.cplusplus.com/reference/cstdio/printf/" rel="nofollow noreferrer">length table of printf</a>.</p>

<p>If we didn't provided <code>hh</code>, the <code>sprintf</code> function is going to promote <code>Y</code> from <code>signed char</code> to <code>unsigned int</code> and this promotion will go like this</p>

<p>when we defined the <code>str</code> as char and assigned the value 128 to it, it's represented as</p>

<pre><code>1000 0000
</code></pre>

<p>The compiler thought it is -128 because it's type is <em>signed</em> char, now function <code>sprintf</code> wants to promote it to unsigned int, so to represent -128 in size of int, it will be like</p>

<pre><code>1111 1111  1111 1111  1111 1111  1000 0000
^^^^ ^^^^  ^^^^ ^^^^
</code></pre>

<p>and because we chose to show only 2 digits then we see the last 2 bytes <code>FF</code>.</p>

<p>more info are <a href="https://stackoverflow.com/a/30464068/5407848">here</a> , and <a href="https://github.com/LambdaSchool/CS-Wiki/wiki/Casting-Signed-to-Unsigned-in-C" rel="nofollow noreferrer">here</a></p>
    </div>