<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In the <code>itertools</code> module there is the <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>groupby</code></a> function that groups together runs of the same values.</p>

<p>You can use it like this here:</p>

<pre><code>from itertools import groupby

def compress(s):
    out = []
    for name, group in groupby(s):
        length_of_run = len(list(group))
        if length_of_run == 1:
            out.append(name)
        else:
            out.append(f"{name}{length_of_run}")
    return "".join(out)
</code></pre>

<p>This also uses the more modern <a href="https://www.geeksforgeeks.org/formatted-string-literals-f-strings-python/" rel="nofollow noreferrer">f-strings</a> instead of manually building the string with <code>str</code> calls and <code>+</code> and puts everything into a function that you can reuse.</p>

<p>It also has the advantage that it directly iterates over the input, instead of over its indices (have a look at <a href="https://nedbatchelder.com/text/iter.html" rel="nofollow noreferrer">Loop like a Native!</a>). This makes it work also for a generator, which does not have a length:</p>

<pre><code>from itertools import islice, cycle

compress(islice(cycle('a'), 10))
# 'a10'
</code></pre>
    </div>