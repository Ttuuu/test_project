<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Because you're comparing your performance with that of the WriteableBitmapEx project, you might like to compare your algorithm with theirs, which is here on github: <a href="http://writeablebitmapex.codeplex.com/SourceControl/latest#trunk/Source/WriteableBitmapEx/WriteableBitmapShapeExtensions.cs" rel="noreferrer">WriteableBitmapShapeExtensions.cs</a></p>

<p>You say your performance isn't much slower than theirs (100 versus 170 MPixels/second).</p>

<p>A difference between yours and there's might be that yours is using <code>float</code> or <code>double</code> arithmetic, whereas theirs is using <code>int</code> arithmetic.</p>

<p>Their code is much longer (more lines of code) than yours, but their inner loop is something like this:</p>

<pre><code>        for (int x = x1; x &lt;= x2; ++x)
        {
           pixels[index] = color;
           ys += incy;
           y = ys &gt;&gt; PRECISION_SHIFT;
           if (y != previousY)
           {
              previousY = y;
              index += k;
           }
           else
           {
              ++index;
           }
        }
</code></pre>

<p>Note:</p>

<ul>
<li>Only <code>int</code> (not <code>double</code>)</li>
<li>Few branches</li>
<li>Every write is to a significant pixels (in your algorithm if you write a line at 45 degrees then you do 1.414 writes per pixels).</li>
</ul>
    </div>