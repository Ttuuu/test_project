<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Strictly speaking, the list of vertices is not neccessary because the adjacency list already contains all (connected) vertices and disconnected ones can be represented as <code>[x, null]</code>. If you prefer to keep <code>vertices</code>, you'll have to synchronize them with edges:</p>

<ul>
<li>in <code>removeVertex</code> you not only remove the vertex but also all edges connected to it</li>
<li>in <code>addEdge</code> you add input labels to the vertices list, if not already there (which makes one think that <code>vertices</code> should be a <code>Set</code>)</li>
</ul>

<p>Minor notes:</p>

<p>In general, as of 2018, it's cleaner to use the <code>class</code> syntax to define classes.</p>

<p>In <code>removeEdge</code> you'd probably want <code>&amp;&amp;</code>, not <code>||</code>: <code>return startLabel === inputStartLabel &amp;&amp; endLabel === inputEndLabel</code>. If the graph is undirected, you also have to check for reversed edges (<code>start == inputEnd &amp;&amp; end == inputStart</code>)</p>

<p>You didn't share the input data format and <code>formatDataToAdjacencyList</code>, but anyways, it would look better as a class member, not as an extra function.</p>
    </div>