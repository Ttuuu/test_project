<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To avoid having to compile the regular expressions again and again, you can create a little helper class:</p>

<pre class="lang-java prettyprint-override"><code>public class Patterns {
    private final Map&lt;String, Matcher&gt; matchers = new HashMap&lt;&gt;();

    public Matcher compile(String pattern) {
        return matchers.computeIfAbsent(pattern, any -&gt; Pattern.compile(pattern).matcher(""));
    }

    public String replaceAll(String s, String pattern, String replacement) {
        Matcher m = compile(pattern);
        m.reset(s);
        return m.replaceAll(replacement);
    }
}
</code></pre>

<p>This class compiles the regular expressions once. It allows you to use them many times in a convenient way:</p>

<pre class="lang-java prettyprint-override"><code>Patterns pats = new Patterns();
String replaced = pats.replaceAll("text", "..", "two letters");
</code></pre>

<p>If that's still not enough, you can use <code>replace</code> instead of <code>replaceAll</code>, which (despite its name) also replaces <em>all</em> occurrences, it just operates on simple strings and since Java 9 is implemented efficiently.</p>
    </div>