<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>When do we initialize the value of a float to be negative or positive?</p>
</blockquote>

<p>That's entirely use case dependent!</p>

<p>In your <em>concrete</em> example, initialisation is entirely irrelevant, as you overwrite the initialisation value anyway!</p>

<pre><code>float input;
{
    input = get_float();
}
</code></pre>

<p>Still initialising the variable might, though, prevent undefined behaviour if you later modify the code in a way the (re-)assignment might get skipped under some circumstances (you might forget to add the <em>then</em> necessary initialisation during modification...).</p>

<p>Back to the use cases: Even with same exponent and magnitude (i. e. with same absolute value) positive and negative are totally different values, consider <code>pow(7.0, 10.12)</code> and <code>pow(7.0, -10.12)</code> (whatever the values would mean) yielding totally different results (positive both times!), or consider results of sine and cosine.</p>

<p>Perhaps a bit more concrete: negative values in a banking application might mean you have some debts (although for such a scenario, I'd prefer integers with fixed point semantics, where number 1 would mean e. g. 1/100 or 1/1000 of a cent, whichever precision you might need).</p>

<p>If sign of numbers is irrelevant, prefer (well, there's no unsigned float/double...) positive ones, most people would consider them more natural â€“ or would you prefer negative speed limit signs, meaning don't drive slower (i. e. smaller value -&gt; higher absolute value) backwards?</p>
    </div>