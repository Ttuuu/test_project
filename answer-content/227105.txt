<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Review</h3>

<ul>
<li>Don't use underscores in enum values <code>NotSupported</code></li>
<li>The enum value with integer value 0 represents its default value; I would make this <code>NotSupported</code> in order to avoid some bias</li>
<li><code>GetPlatform</code> is a method name; prefer <code>Platform</code> as property name</li>
<li>Since the platform won't change while your program is running, consider using a <code>Lazy</code> to retrieve the platform once.</li>
</ul>

<h3>Don't like if-statements?</h3>

<p>Let's first refactor the enum to match aforementioned conventions:</p>

<pre><code>public enum OSPlatform
{
    NotSupported,
    Windows,
    OSX,
    Linux,
}
</code></pre>

<p>We could then use a <code>Lazy</code>:</p>

<pre><code> static readonly Lazy&lt;OSPlatform&gt; platform = new Lazy&lt;OSPlatform&gt;(GetPlatform, true);
 public static OSPlatform Platform =&gt; platform.Value;
</code></pre>

<p>And refactor the intitial method using a helper generator using a simple <code>ValueTuple</code> to avoid the boiler-plate if-statements. </p>

<pre><code>private static IEnumerable
    &lt;(OSPlatform Platform, RuntimeOSPlatform RuntimePlatform)?&gt; EnumeratePlatforms() 
{
    yield return (OSPlatform.Windows, RuntimeOSPlatform.Windows);
    yield return (OSPlatform.OSX, RuntimeOSPlatform.OSX);
    yield return (OSPlatform.Linux, RuntimeOSPlatform.Linux);
}

private static OSPlatform GetPlatform()
{
    return EnumeratePlatforms().FirstOrDefault(p 
       =&gt; RuntimeInformation.IsOSPlatform(p.Value.RuntimePlatform))?.Platform ?? default;
}
</code></pre>

<p>I've created an alias to avoid redundant namespace code:</p>

<pre><code>using RuntimeOSPlatform = System.Runtime.InteropServices.OSPlatform;
</code></pre>

<p>If you want to have some fun, you could refactor this solution to use <code>Expression</code> and some reflection to avoid creating hard-coded tuples.</p>
    </div>