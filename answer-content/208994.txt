<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>As others have mentioned, your code could be more efficient with set lookup.</li>
<li>It should return <code>False</code> with <code>[5]</code> and <code>10</code> as input parameters.</li>
<li>Python method names are written in <code>snake_case</code>.</li>
<li>Python is a dynamic language, which means method names and parameter names are very important. They make it easier to read your code and understand it again 6 months after having written it. <code>x</code> sounds like an unknown object or a float, not like a list of integers.</li>
</ul>

<p>Here's a possible way to write the method:</p>

<pre><code>def contains_pair_with_given_sum(numbers, desired_sum):
    unique_numbers = set()
    for number in numbers:
        if (desired_sum - number) in unique_numbers:
            return True
        unique_numbers.add(number)
    return False
</code></pre>

<p>It outputs:</p>

<pre><code>contains_pair_with_given_sum([5, 10, 7], 12)
# True
contains_pair_with_given_sum([5], 10)
# False
</code></pre>

<p>You could also use the fact that a pair of integers is truthy in Python and return the pair when found:</p>

<pre><code>def find_pair_with_given_sum(numbers, desired_sum):
    unique_numbers = set()
    for number in numbers:
        if (desired_sum - number) in unique_numbers:
            return (number, desired_sum - number)
        unique_numbers.add(number)
</code></pre>

<p>It outputs:</p>

<pre><code>find_pair_with_given_sum([5, 10, 7], 12)
# (7, 5)
find_pair_with_given_sum([5], 10)
# None
</code></pre>
    </div>