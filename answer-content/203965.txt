<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>1) Create PrimaryStage class that will include state of the stage:</p>

<pre><code>    public class PrimaryStage {
        private Stage stage;
        private List&lt;ToggleButton&gt; buttons;
        private ToggleGroup tools;
        private ColorPicker cpLine;
        private ColorPicker cpFill;
        private Label lineColor;
        private Label fillColor;
        private Slider slider;
        private Button saveAsBtn;
        private Button openBtn;
        private VBox buttons;
        private Canvas canvas;
        private GraphicsContext gc;
        private Line line = new Line();
        private Rectangle rec = new Rectangle();
        private Circle circ = new Circle();
        private BorderPane pane;
        private Scene scene;

        public PrimaryStage(Stage stage) {
            super();
            this.stage = stage;
            //initialization code here
            //Create menu buttons
            ToggleButton drawbtn = new ToggleButton("Draw");
            // ... initialize other components
            // don't call stage.show() yet.

            //initialize button handlers
            initOpenButton();
            // ... continue for other buttons
        }

        private void initOpenButton() {
        // ... init button handlers here ...
            openBtn.setOnAction((e)-&gt;{
                FileChooser openFile = new FileChooser();
                openFile.setTitle("Open File");
                File file = openFile.showOpenDialog(primaryStage);
                if (file != null) {
                    try {
                        InputStream io = new FileInputStream(file);
                        Image img = new Image(io);
                        gc.drawImage(img, 0, 0);
                    } catch (IOException ex) {
                        System.out.println("Error!");
                    }
                }
            });
        }

        public void show() {
            this.stage.show();
        } 
    } 
</code></pre>

<p>Then </p>

<pre><code>public class Paint extends Application {
    @Override
    public void start(Stage stage) {
         PrimaryStage primaryStage = new PrimaryStage(stage);
         primaryStage.show();
    }
    public static void main(String[] args) {
         launch(args);
    }
}
</code></pre>

<p>At least it will add some readability to your code without breaking it. Buttons can be extracted in separate classes but there is no big reason to do this as handlers are highly coupled with other components of primary stage.</p>
    </div>