<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Lots of people have already given great input, so I'll focus on one small aspect.</p>
<h1><code>runAgain()</code></h1>
<ol>
<li><p><code>runAgain()</code> is a poorly chosen name, since it isn't actually running again. Consider something like <code>promptToRunAgain()</code> or better yet <code>shouldRunAgain()</code>. In general, your function name should describe what it does or what it checks for.</p>
</li>
<li><p>Even if you don't want to change that name, it is bad practice to name a variable the same as a function. If that variable is used solely to hold the value of the function, consider whether it's necessary at all. Avoid stuff like <code>runAgain = runAgain();</code> as it will only become more confusing if you choose to delve into languages with variable functions / function expressions.</p>
</li>
<li><p><code>runAgain()</code> only ever makes sense in the context of a console. Since you probably won't create another <code>Scanner</code> instance, you could possibly move your <code>Scanner</code> to class-level. Then you'd be able to remove the parameter from <code>runAgain()</code>:</p>
<pre><code>public class Yahtzee {
    private static Scanner keyboard = new Scanner(System.in);
    public static void main(String[] args) {
    [...]
    public static boolean runAgain() {
</code></pre>
</li>
<li><p>You seem to be using <code>while</code> loops when in fact <code>do..while</code> loops may be clearer. Consider changing the following:</p>
<pre><code>boolean runAgain = true;
while (runAgain) {
    boolean rolledYahtzee = false;
    [...]
    while (!rolledYahtzee) {
        [...]
        rolledYahtzee = checkForYahtzee(dieArray, numRolls);
    }
    [...]
    runAgain = runAgain(keyboard);
}
</code></pre>
<p>to:</p>
<pre><code>do {
    [...]
    do {
        [...]
    } while (!checkForYahtzee(dieArray, numRolls))
    [...]
} while (shouldRunAgain());
</code></pre>
</li>
</ol>
    </div>