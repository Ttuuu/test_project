<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is also not something I deal with on a daily basis, but I have used it in the past, so I know what it's about.</p>

<p>Let me start with the biggest thing that immediately jumps out at me: You've put a lot of statistical methods in one class. Why? What do they have in common, apart from the fact that they are statistical methods? If I read your class the answer seems to be: Nothing. This would have worked fine if the methods were just independent function.</p>

<p>The point about statistical methods is that they deal with numbers; lots of them. Very often you don't only want to know the <em>mean</em> of a set, but also the <em>median</em>, the <em>mode</em>, etc. So, it would make sense to feed your statistical class an array of numbers and have methods to get information about that array. Like this:</p>

<pre><code>class StatisticsOneDim // one dimensional statistics
{
    private $count;
    private $data;
    private $sum;
    private $mean;

    public function __construct($data)
    {
        $this-&gt;count = count($data);
        $this-&gt;data = $data;
    }

    public function getCount()
    {
        return $this-&gt;count;
    }

    public function getSum()
    {
        if (!isset($this-&gt;sum)) {
            $this-&gt;sum = array_sum($this-&gt;data);
        }
        return $this-&gt;sum;
    }

    public function getMean()
    {
        if (!isset($this-&gt;mean)) {
            $count = $this-&gt;getCount();
            if ($count == 0) $this-&gt;mean = false; // or generate an exception
                        else $this-&gt;mean = $this-&gt;getSum()/$count;
        }
        return $this-&gt;mean;
    }
}
</code></pre>

<p>Well, and so on. You can see what I am getting at. The data you want statistical information about is given to the class when it is created. After that you can interrogate the data. Once something like a <em>sum</em> or a <em>mean</em> has been computed it is stored in the class for quick retrieval later on. The <em>count</em> is used so often that I created it in the constructor.</p>

<p>OK, there might be methods that cannot be applied to the data in the class. For instance <code>getCorrelation()</code>. That method needs two data sets. So, it shouldn't be part of this class. I would create a separate class that can take two arrays, or even two <code>StatisticsOneDim</code>, and call it <code>StatisticsTwoDims</code>.</p>

<p>Does this help you further?</p>

<p>PS: I saw you have a <code>getMean()</code>, but also a <code>average()</code> method. These methods do the same, except the latter doesn't have 'division by zero' protection.</p>
    </div>