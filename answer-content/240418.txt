<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code is pretty good, but there are some parts of it that aren't intuitive enough to be readed cleverly.</p>
<p>Don't misunderstand me, your design is good, but it is quite complex to be seen through properly. Have in account:</p>
<blockquote>
<p>Our main goal is to be meaningful building the simplest.</p>
</blockquote>
<p>Think of it as a martial artist, be efficient with the minimum movement. Emphatically, this allow us to make better systems and extend them.</p>
<h3>The Good:</h3>
<ul>
<li>Modern features added to the implementation, which brings optimization.</li>
<li>Non use of macros (it is better to avoid them)</li>
<li>Non use of <code>using namespace</code></li>
<li>Use of exceptions when needed (essential when working with data structures)</li>
</ul>
<h3>Code Review:</h3>
<ul>
<li>If you are writing a data structures project, you will find that dynamic data structures needs common linking components. In example a queue or a stack will use a Singly Linked Node or if you want a Doubly Linked Node. So, you could define list_node in other file. Commonly you will want to have classes and structures separated in distinct files.</li>
<li>Struct properties are public by default you really don't need to make your <code>linked_list</code> a friend class of <code>list_node</code></li>
<li>Do not use typedef so frecuently, it makes the code quite messy. when you do this you hide the type and if the new typedef isn't descriptive enough it will cause trouble both reading and debuggin the code.</li>
<li>Be consistent with naming, I saw a field called ptr_ so you should use the _ suffix.</li>
<li>The best of a struct is to easily handle its members because they are public think of it, the implementation normally hide the nodes (should).</li>
<li>Your implementations of data structures should not return node objects.</li>
</ul>
<h3>Some comments:</h3>
<p>It is interesting the way you are reinventing the wheel, normally some people says things like "we do not need to reinvent the wheel, since it is done why..." and so, but think of it, what tire manufacturers are doing in this moment. Well passing the discussion, the answer is simple, <em>you always need something better.</em></p>
<p>I recommend you the following <a href="https://google.github.io/styleguide/cppguide.html" rel="nofollow noreferrer">Google C++ Style Guide</a> which is something good to familiarize with. This is an standard for coding C++ elaborated by Google (if you don't have a standard you already follow)</p>
<p>Finally. Hope that my answer were of you like and helped you.</p>
    </div>