<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Interesting question;</p>

<p>your quicksort is far slower than the regular sort, and is harder to read.
You can find details here: <a href="https://jsperf.com/codereview-js-quicksort/15" rel="nofollow noreferrer">https://jsperf.com/codereview-js-quicksort/15</a></p>

<p>But in essence this implementation is 90% slower than a regular sort. Using CPU profiling I can tell that most of the time is spent in <code>_.partition</code> which makes sense. Plus you keep creating functions like <code>arr =&gt; quicksort(arr, compareFn)</code> in every call of <code>quicksort</code> which adds up. Finally, that name should really be <code>quickSort</code>; JavaScript functions follow the lowerCamelCase convention.</p>

<p>My counter proposal would simply be:</p>

<pre><code>console.log(
  Array.from('the quick brown fox jumps over the lazy dog').sort(
    (a, b) =&gt; a.charCodeAt(0) - b.charCodeAt(0)
  ).join('')
);
</code></pre>

<p>Historically, I have never heard of folks beating the native sort.</p>
    </div>