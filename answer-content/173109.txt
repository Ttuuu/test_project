<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>var ageFunc =
    from x in getPerson
    from y in Validate(x)
    select GetAge(y);
</code></pre>
</blockquote>

<p>While making this work by implementing <code>SelectMany</code> extensions for the <code>Func</code> and <code>Select</code> for the second <code>from</code> is a nice trick the usage is very confusing. I don't know, maybe it's the example or maybe I don't get it but wrapping a <code>Person</code> with a <code>Func</code> only to be able to use it with a query doesn't sound very useful.</p>

<p>The expression <code>from x in aCollectionOfXes</code> means that I evaluate each element of a collection but what does <code>from x in getPerson</code> mean? What am I evaluating? Its properties? Its fields? Its constructors? No idea.</p>

<p>The second line is even more confusing. What does <code>from y in Validate(x)</code> mean? Am I looping over validation results? No! I'm looping over a person again! This is not just confusing, this is super confusing. No the biggest surprise, <code>GetAge</code> does not retrieve any <code>age</code> but another <code>Func</code>. It's a <em>func-ception</em> :-]</p>

<p>Nice work making it work but based on this example I don't see any practival uses of this pattern.</p>
    </div>