<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Use early exit: reverse the null-checking conditional and return.</p>

<pre><code>if(is_null($clientFilename))
    return;
</code></pre>

<p>If your code isn’t in a function, <em>change that</em>.</p>

<p>Next, use consistent indentation for the <code>else</code>: it belongs on the same level as the <code>if</code>, <em>not</em> as the content of the <code>if</code>.</p>

<p>I’d also encourage you to follow general usage in PHP, i.e. to use the braced <code>if</code> style even though I agree with you that the other style is fundamentally more readable.</p>

<p>I’d also get rid of unnecessary variables such as <code>$clientFilenameLength</code>, and of magic constants (<code>255</code>). And as a small clean-up, use string interpolation instead of concatenation where it makes sense.</p>

<p>That leaves us with:</p>

<pre><code>define('MAX_LENGTH', 255);
$clientFilename  = $this-&gt;file-&gt;getClientOriginalName();
$clientExtension = $this-&gt;file-&gt;guessExtension();

// Assume a failure in reading client filename
$defFilename = $defRandFilename = uniqid('fid_', true);

if(is_null($clientFilename))
    return;

// Remove strlen($clientExtension) + 1 chars from the end
$hasClientExtension = !is_null($clientExtension);
$removeFromEnd = $hasClientExtension ? 1 + strlen($clientExtension) : 0;
$appendAtEnd = $hasClientExtension ? ".$clientExtension" : '';

if(strlen($clientFilename) &gt; MAX_LENGTH)
    $defFilename = substr($clientFilename, 0, -$removeFromEnd) . $appendAtEnd;
else
    // User original upload name
    $defFilename  = $clientFilename;

if(strlen($defRandFilename) + $removeFromEnd &gt; MAX_LENGTH) 
    $defRandFilename = substr($defRandFilename, 0, -$removeFromEnd) . $appendAtEnd;
else
    // Use random file name plus .ext
    $defRandFilename .= $appendAtEnd;
</code></pre>

<p>But this code probably doesn’t do what you want: the whole check for <code>strlen($clientFilename)</code> is a red herring because the result will <em>not</em> be truncated. It will remove (a string of the length of) the client extension, and subsequently replace it. Is that really what you intended?</p>
    </div>