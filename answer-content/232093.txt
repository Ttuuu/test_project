<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Whew, first, let's breathe.</li>
</ul>

<p>Don't you think everything's a bit congested? Let's put in a few newlines in between and add spaces between arithmetic operators.</p>

<p>You have repeated <code>float(input())</code> exactly 22 times! How about we write a function that takes the input for you?</p>

<pre class="lang-py prettyprint-override"><code>def float_input():
    return float(input())
</code></pre>

<p>Now, you can call this function instead of using <code>float(input())</code>!</p>

<ul>
<li>How about defining some constants next? Even though you can't declare constants in python, we can treat it as such!  </li>
</ul>

<p>For example, we can define <code>PI = math.pi</code> and using it instead of <code>math.pi</code>? The code would look shorter and sweeter.  </p>

<ul>
<li>Next step is to use formatting!  </li>
</ul>

<p><code>"The area of your Triangle is {}" + str((TRIBase * TRIHeight) / 2)+(".")</code>  </p>

<p>Could be changed to  </p>

<p><code>f"The area of your Triangle is {(TRIBase * TRIHeight) / 2}."</code></p>

<ul>
<li>Write functions instead of lengthy formulas to make your code neater  </li>
</ul>

<p>Here's the final code after applying all the points above and making a few more negligible changes!</p>

<pre class="lang-py prettyprint-override"><code># Imports and constants
import sys
from math import sqrt, pi

PI = pi

float_input = lambda: float(input())


# 2d functions
def area_of_triangle(height, base):
    return height * base / 2


def area_of_oval(majoraxis, minoraxis):
    return PI * (minoraxis / 2) * (majoraxis / 2)


def area_of_quadrilateral(side_length_list, ang1, ang2):
    s = sum(side_length_list)
    prod = mult = 1

    for i in side_length_list:
        prod *= i
        mult *= s - i

    return sqrt(mult - (pow(math.cos(prod), 2) * ((ang1 + ang2) / 2)))


def area_of_pentagon(side_length):
    return 0.25 * sqrt(5 * (5 + (2 * sqrt(5)))) * pow(side_length, 2)


def area_of_hexagon(side_length):
    return (3 * sqrt(3)) * (pow(side_length, 2)) / 2


def area_of_polygon(n, s):
    return n * pow(s, 2) * (1 / math.tan(PI / n)) / 4


# 3d functions
def area_of_sphere(radius):
    return 4 * PI * (radius ** 2)


def area_of_tetrahedron(side_length):
    return pow(side_length, 2) * sqrt(3)


def area_of_cuboid(height, breadth, length):
    return 2 * (height * breadth + height * length + length * breadth)


def area_of_octahedron(side_length):
    return 2 * pow(side_length, 2) * sqrt(3)


def area_of_dodecahedron(side_length):
    return 3 * pow(side_length, 2) * sqrt(5 * (5 + 2 * sqrt(5)))


def area_of_icosahedron(side_length):
    return 5 * pow(side_length, 2) * sqrt(3)


# The main function
def main():
    while True:
        print("This is an area (or surface area) calculator for selected 2D and 3D shapes, press 0 to start.")
        start = input()

        if start == "0":
            print("Input 1 to navigate to 2D shapes, 2 to navigate to 3D shapes and q to terminate the program.")

        elif start == "q":
            sys.exit()

        else:
            print("Error! Command invalid.")
            continue

        while True:
            oink = input()

            if oink == "1":
                print(
                    "Enter 2 for any Oval/Circle, 3 for any Triangle, 4 for any convex Quadrilateral, 5 for regular Pentagon, 6 for regular Hexagon and 7 for any other regular 2D polygon.")
                spoink = input()

                if spoink == "2":
                    print(
                        "You have selected, Oval/Circle, input length of major axis (axes will be equal for a circle.)")
                    majoraxis = float_input()

                    print("Now, input length of minor axis.")
                    minoraxis = float_input()

                    print(f"The area of your Oval/Circle is {area_of_oval(majoraxis, minoraxis)}")

                elif spoink == "3":
                    print("You have selected, Triangle, input height.")
                    height = float_input()

                    print("Input base")
                    base = float_input()

                    print(f"The area of your Triangle is {area_of_triangle(height, base)}.")

                elif spoink == "4":
                    print("You have selected quadrilateral, input length of each of the four sides in A-B-C-D order.")
                    side_length_list = [float_input() for _ in range(4)]

                    print("Now, input 2 opposite angles.")

                    ang1 = float_input()
                    ang2 = float_input()

                    print(f"The area of your Quadrilateral is {area_of_quadrilateral(side_length_list, ang1, ang2)}")

                elif spoink == "5":
                    print("You have selected, Pentagon, input side length.")
                    side_length = float_input()
                    print(f"The area of your Pentagon is {area_of_pentagon(side_length)}")

                elif spoink == "6":
                    print("You have selected, Hexagon, input side length.")
                    side_length = float_input()
                    print(f"The area of your Hexagon is {area_of_hexagon(side_length)}")

                elif spoink == "7":
                    print("You have selected, regular Polygon, input numer of sides.")
                    n = float_input()

                    print("Now, input side length")
                    s = float_input()

                    print(f"The area of your regular Polygon is {area_of_polygon(n, s)}.")

                elif spoink == "q":
                    sys.exit()

                else:
                    print("Error! Input invalid, reenter.")

            elif oink == "2":
                print(
                    "Enter 8 for Sphere, 9 for Tetrahedron, 10 for Cube/Cuboid, 11 for Octahedron, 12 for Dodecahedron and 13 for Icosahedron.")
                boink = input()

                if boink == "8":
                    print("You have selected, Sphere, input radius.")
                    radius = float_input()
                    print(f"The surface area of your Sphere is {area_of_sphere(radius)}.")

                elif boink == "9":
                    print("You have selected, Tetrahedron, input the edge length.")
                    side_length = float_input()
                    print(f"The surface area of your Tetrahedron is {area_of_tetrahedron(side_length)}.")

                elif boink == "10":
                    print("You have selected, Cube/Cuboid, input the height.")
                    height = float_input()

                    print("Now, input the breadth")
                    breadth = float_input()

                    print("Finally, input the length")
                    length = float_input()

                    print(f"The surface area of your Cube/Cuboid is {area_of_cuboid(height, breadth, length)}.")

                elif boink == "11":
                    print("You have selected Octahedron, input side length.")
                    side_length = float_input()
                    print(f"The surface area of your Octahedron is {area_of_octahedron(side_length)}.")

                elif boink == "12":
                    print("You have selected Dodecahedron, input side length.")
                    side_length = float_input()
                    print(f"The surface area of your Dodecahedron is {area_of_dodecahedron(side_length)}")

                elif boink == "13":
                    print("You have selected Icosahedron, input side length.")
                    side_length = float_input()
                    print(f"The surface area of your Icosahedron is {area_of_icosahedron(side_length)}")

                elif boink == "q":
                    sys.exit()

                else:
                    print("Error! Input invalid, reenter.")

            elif oink == "q":
                sys.exit()

            else:
                print("Error! Input invalid, re-enter.")
</code></pre>

<p><strong>EDIT:</strong>
I kept the names <code>onik</code>, <code>spoink</code>, and <code>boink</code> as it is, because I think the pronunciation is so cute!</p>
    </div>