<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you want to use <code>Array.prototype.map</code> you can write something like this:</p>

<pre><code>const paintings = [
  { painting: "Mona Lisa" },
  { painting: "The Starry Night" },
  { painting: "The Last Supper" },
  { painting: "Girl with a Pearl Earring" },
  { painting: "American Gothic" },
  { painting: "The Night Watch" }
];

const paintingsNew = {
  artworks: []
};

paintings.map(x =&gt; {
  paintingsNew.artworks.push(x);
});
</code></pre>

<p>When you use <code>map</code> it practically iterates over every item of the array. We have to pass a callback function accepting the <code>currentValue</code> (here the <code>x</code> argument), and optionally the <code>index</code> and the <code>array</code>.</p>

<p>You can (and normally should) return some calculated value in the callback function. Since here everything you want is to create a new object containing the array, you push each item to the array inside the object <code>paintingsNew</code>. You don't even need <code>map</code> for this, you can just write:</p>

<pre><code>const paintingsNew = {
  artworks: paintings // paintings is defined before
};
</code></pre>

<p>However I suppose you'd have some further requirements, which you could work out inside the callback function of the <code>map</code>. As suggested by @Joop Eggen, you could check if the key <code>painting</code> is present in the object:</p>

<pre><code>paintings.map(x =&gt; {
  if ('painting' in x) {
    paintingsNew.artworks.push(x);
  }
});
</code></pre>

<p>Now this would make more sense when using <code>map</code>. You could certainly apply some more advanced logic if your initial array is more diverse  and you'd like to create an output object with more complex structure.</p>

<p>EDIT: Immediatelly after posting I saw you want to get only the value for the key <code>painting</code>. This means in the <code>map</code> callback you push <code>x.painting</code> instead of just <code>x</code>.</p>

<pre><code>paintings.map(x =&gt; {
  if ('painting' in x) {
    paintingsNew.artworks.push(x.painting);
  }
});
</code></pre>
    </div>