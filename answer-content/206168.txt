<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You were given some points already, check each pair only once and keep the sorted list of short distanced pairs of the required length. This keeps complexity low.</p>

<p>When done with complexity you have a look at the measure itself. You did not show the imlementation or import of <code>cosine</code>. As you need comparability only you may optimize the measure, e. g. skip calculation of costly square roots.</p>

<p>Next you make use of dynamic programming. Inside <code>cosine</code> most probably there are expressions that are constant for a certain <code>i</code>. Cache those intermediate results.</p>

<p>Finally you try to have cache locality regarding processor, memory and harddisk. Partition your problem to chunks that fit to memory and to make ideal use of dynamic programming.</p>
    </div>