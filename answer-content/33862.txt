<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not a Python programmer but I would take this approach, as if I understand the problem correctly, it seems like an easy solution. Along side that I believe it makes us of the language features also.</p>

<pre><code>#!/usr/bin/env python3

# open word files
wordlist = open("wordlist.txt", "r").read().split()
words = open("words.txt", "r").read().split() 

s = list()

# loop through scrambled words
for word in words:
    # break scrambled word into characters
    chars = sorted(list(word))
    # loop through comparison list
    for compare in wordlist:
        if sorted(list(compare)) == chars:
            s.append(compare)

# create comma separated list of words
print(",".join(s))
</code></pre>

<p>This works on the bases that we do not care for order, so an ordered list of each will be a good check.</p>

<p>I have not broken out of the inner loop, as it is unclear weather multiple words could match and all of those words should be returned or not.</p>

<p>This is untested, as stated, I'm not a Python programmer.</p>
    </div>