<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Consider adding type hint for the <code>$serviceManager</code> parameter passed to constructor.  This is obviously a concrete object being passed, so having typeint here and make this class less fragile and prevent the needs to validate the passed parameter (something you are not currently doing).</p>

<hr>

<p>Why is <code>$config</code> defined in constructor?</p>

<p>Your code is actually improper in that you are overriding the <code>parent</code> constructor inappropriately, with PHP not failing here only because you are not type hinting your parameters.  If the parent class gets passed a config as first argument to its constructor, this inheriting class should as well.</p>

<p>You might also consider making a config class that you can pass around.</p>

<p>Ideally your constructor should look like:</p>

<pre><code>public function __construct(Config $config, ServiceManager $serviceManager) {
    $this-&gt;serviceManager = $serviceManager;
    parent::__construct($config);
}
</code></pre>

<hr>

<p>You are doing <strong>nothing</strong> to validate that the parameters passed to your public function are valid for working with.  This leads to fragile code that is hard to debug.</p>

<p>Before you do things like make (relatively) expensive database or service calls, you should at least make sure you have viable data passed to work with.  Fail early and fail loudly.</p>

<hr>

<p>Why are you passing <code>$rootValue</code> to your methods when the variable is not even used within the method?</p>
    </div>