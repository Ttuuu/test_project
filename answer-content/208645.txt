<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here's how I refactored your code: </p>

<pre><code>$(document).ready(function () {

    $(".canvas_btn").on("click", function () {

        var idOfClickedElem = $(this).attr('id');
        $.each($('.canvas_btn'), function () {
            if (idOfClickedElem === $(this).attr('id')) {
                $(this).attr('class', getFilledClassName($(this).attr('class')))
            }
            else {
                $(this).attr('class', getOutlineClassName($(this).attr('class')))
            }
        });

    });

    function getOutlineClassName(currentClasses) {
        return currentClasses.replace("btn-outline-", "btn-").replace("btn-", "btn-outline-")
    }

    function getFilledClassName(currentClasses) {
        return currentClasses.replace("btn-outline", "btn")
    }


});
</code></pre>

<p>Instead of mixing jQuery and regular JavaScript selectors, I just used jQuery. I'm not a huge fan of the contents of <code>getOutlineClassName(currentClasses)</code> and <code>getFilledClassName(currentClasses)</code>, but it's certainly less code than the way I probably would have written it if I had done so from scratch -- which would be to make a <code>switch</code> on the element's id and return the correct classes as a string accordingly.</p>
    </div>