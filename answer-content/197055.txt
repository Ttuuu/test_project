<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>wheel = (e) -&gt;
    e = e or window.event
    # the code follows
</code></pre>

<p>Here you want to set argument <code>e</code> to some default value if <code>e</code> is missing.
CoffeeScript allows you to set default value of an argument right
<a href="https://coffeescript.org/#functions" rel="nofollow noreferrer">in the function signature</a>:</p>

<pre><code>wheel = (e = window.event) -&gt;
    # the code follows
</code></pre>

<p>Also there are some alternative solutions (perhaps more favorable in CoffeeScript):</p>

<pre><code>e ||= window.event
# sets e to window.event if e evaluates to false
# null, unefined, 0, "", NaN and false values will be replaced
# same as `e || (e = window.event)`
</code></pre>

<p>and</p>

<pre><code>e ?= window.event
# sets e to window.event only if e is null or undefined
# 0, "" and other falsy friends are allowed
# same as `if (e == null) { e = window.event }`
</code></pre>

<p>The operator <code>?</code> in the latter form is special.
It is called
<a href="https://coffeescript.org/#existential-operator" rel="nofollow noreferrer">The Existential Operator</a>. I guess it is the prefered way to set a variable to default value or test for it existence.</p>

<hr>

<p>You can omit <code>()</code> from <code>() -&gt;</code> function signature
since there are no arguments.
The possible shortest function signature in CoffeeScript
is <code>-&gt;</code>, same as <code>function() {}</code> in JavaScript.</p>

<hr>

<pre><code>if e.preventDefault then e.preventDefault()
</code></pre>

<p>may be written as</p>

<pre><code>e.preventDefault?()
</code></pre>

<p>Notice the <code>?</code> operator before <code>()</code>.
It will test if <code>e.preventDefault</code> exists
and is actually a function before running it.</p>

<hr>

<pre><code>if delta then handle(e, delta)
</code></pre>

<p>may be</p>

<pre><code>handle(e, delta) if delta
</code></pre>
    </div>