<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Simpler method to detect int overflow...</p>
</blockquote>

<p>The two simplest methods I know are:</p>

<ul>
<li>Use the <a href="https://safeint.codeplex.com/" rel="nofollow noreferrer">SafeInt</a> library in C++</li>
<li>Use the <a href="https://android.googlesource.com/platform/external/safe-iop/" rel="nofollow noreferrer">safe_iop</a> library in C</li>
</ul>

<p><code>SafeInt</code> was written by David LeBlanc, and Microsoft uses it. <code>safe_iop</code> was written by ???, and Android uses it.</p>

<hr>

<p>The next simplest method is to use a compiler intrinsic. Unfortunately, I have not seen many of them. I believe I saw some for GCC recently.</p>

<p>The neat thing about intrinsics are (1) they provide a familiar C function call and (2) they are not bound by the Undefined Behavior you are trying to avoid. That means an instrinsic <strong><em>can</em></strong> perform the addition and the program will still be well defined, even it it overflows.</p>

<p>(In C/C++, if you perform the addition and it overflows, then the program is illegal. You are not allowed to perform the operation and then check the result).</p>

<hr>

<p>The next simplest method is assembly and inline assembly. Again, its not bound by the Undefined Behavior you are trying to avoid in C/C++.</p>

<p>Assembly and inline assembly routines are the method I use. I work on mobile platforms and I have a library for i686, x86_64, ARM and MIPS.</p>

<p>I learned a long time ago its a pain in the butt to try and do this cross-platform in a well defined, portable and efficient manner from C, especially for some operations.</p>

<p>I was constantly checking results of compilations and starring at disassembled code to make sure the code generation was good. So I abandoned portable in the name of simplicity and efficiency.</p>

<hr>

<p>Also see <a href="https://stackoverflow.com/q/199333">How to detect integer overflow in C/C++?</a> on Stack Overflow.</p>
    </div>