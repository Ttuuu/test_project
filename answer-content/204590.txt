<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>There's no reason to make a reversed copy. Just index from the back.</p></li>
<li><p>Nor to delay comparing the differences. It just means you have to save them.</p></li>
<li><p>Following the above two points ensures the function never throws. So, in C++ mark it <code>noexcept</code>.</p></li>
<li><p>Next, there's no need to go over the string from beginning to end <em>and</em> from end to beginning. Just stop in the middle.</p></li>
<li><p>In line with that, you should use C++17's <code>std::string_view</code> so even the caller need not make a copy.</p></li>
<li><p>Also, return a boolean. Leave it to the caller to Interpret it as he likes, not necessarily by choosing some English words.</p></li>
<li><p>I have no idea why you are bringing floating-point into it with <code>fabs()</code>, instead of staying with integers using <code>std::abs()</code>. At least I'm reasonably sure the compiler will fix that inefficiency. Or will it?</p></li>
</ol>

<p>Modified C++ code:</p>

<pre><code>constexpr bool isFunnyString(std::string_view s) noexcept {
    std::size_t a = 0, b = size(s);
    if (b &gt; 2)
        for (b -= 2; a &lt; b; ++a, --b)
            if (std::abs(s[a] - s[a + 1]) != std::abs(s[b] - s[b + 1]))
                return false;
    return true;
}
</code></pre>
    </div>