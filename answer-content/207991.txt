<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Whereas your code might work now, I strongly recommend using <code>requests</code> instead of <code>urlopen</code>. Requests is awesome, and makes a lot of complicated stuff simple, especially for web scrapers.</li>
<li>I believe <code>BeautifulSoup</code> will complain unless you pass another parameter to its constructor, <code>'html.parser'</code>.</li>
<li>You have everything in one function. This is very difficult to read, understand and debug. I recommend subdividing this into smaller functions called from your top-level function.</li>
<li>You have a bunch of repeated code - for instance, your <code>if isfile</code> logic. Again, factor this out into functions where possible.</li>
<li>You do not need to call <code>str</code> on <code>file_path</code>. It's already a str.</li>
<li>Rather than calling <code>file.close()</code>, you can put this in a <code>with</code> block. Read about them here - <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer">https://docs.python.org/3/reference/compound_stmts.html#with</a></li>
<li>There's a better way to do your printing. This:</li>
</ul>

<p><code>print("File Path: " + str(file_path), "\n" + "Directory Path: " + str(dir_path))</code></p>

<p>Is better written as:</p>

<pre><code>print('File Path: %s' % file_path)
print('Directory Path: %s' % dir_path)
</code></pre>

<p>You get the idea. It's easier to read if you have one <code>print</code> statement per line. Also,</p>

<p><code>title + "_" + linkBreak[2]</code></p>

<p>is more easily read as</p>

<p><code>'%s_%s' % (title, linkBreak[2])</code></p>

<p>With that expression in particular, you reuse it many times throughout the code, so it should be assigned to a variable.</p>

<p>Here:</p>

<pre><code>linkBreak[3] = linkBreak[3].split("?",1)[0]
</code></pre>

<p>You're dropping the query parameters from the URL. You probably shouldn't be doing this parsing yourself. You should be calling <code>urlparse</code>.</p>

<ul>
<li><code>downloadDirectory</code>, pythonically, should use snake_case, i.e. <code>download_dir</code>. Same with other identifiers like <code>archDownloadDirectory</code></li>
</ul>
    </div>