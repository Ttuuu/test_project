<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Here is the revised SQL I came up with</h3>

<p>Below this code is a list of tips for writing better SQL. </p>

<hr>

<pre><code>ALTER PROCEDURE [dbo].[Stats] 
      @network VARCHAR(9) = NULL
    , @name VARCHAR(100) = NULL
    , @version VARCHAR(15) = NULL
    , @year INT = NULL
    , @month INT = NULL
    , @day INT = NULL
    , @from DATE = NULL
    , @to DATE = NULL
AS

BEGIN

    BEGIN TRY

        SET NOCOUNT ON;

        WITH
        contract_address_list
        AS
        (
            SELECT DISTINCT
                [contractaddress]
            FROM 
                [dbo].[game]
            WHERE 
                1=1
                AND [name] = @name
                AND [version] = @version
                AND [network] = @network
        )
        SELECT 
              GS.[contractaddress]
            , GS.[network]
            , GS.[rounds]
            , GS.[sessions]
            , GS.[handle]
            , GS.[hold]
            , GS.[year]
            , GS.[month]
            , GS.[day]
            , G.[name]
            , G.[version]
            , [Date] = DATEFROMPARTS(GS.[Year], GS.[Month], GS.[Day])
        FROM 
            [dbo].[gamestatsdaily] AS GS
            INNER JOIN [dbo].[game] AS G ON GS.[contractaddress] = G.[contractaddress]
            LEFT JOIN contract_address_list AS CAL ON CAL.[contractaddress] = GS.[contractaddress]
        WHERE 
            1=1
            AND (@name IS NULL OR CAL.[name] IS NOT NULL)
            AND (@network IS NULL OR (GS.network = UPPER(@network)) )
            AND (@year IS NULL OR GS.[Year] = @year )
            AND (@month IS NULL OR GS.[Month] = @month )
            AND (@day IS NULL OR GS.[Day] = @day )
            AND (
                @from IS NULL
                OR (
                        GS.[Year] &gt;= DATEPART(year, @from)
                    AND GS.[Year] &lt;= COALESCE(DATEPART(year, @to), DATEPART(year, @from))
                    AND GS.[Month] &gt;= DATEPART(month, @from)
                    AND GS.[Month] &lt;= COALESCE(DATEPART(month, @to), DATEPART(month, @from))
                    AND GS.[Day] &gt;= DATEPART(day, @from)
                    AND GS.[Day] &lt;= DATEPART(day, @to)
                    )
                )
        ORDER BY 
              GS.[year] ASC
            , GS.[month] ASC
            , GS.[day] ASC

    END TRY
    BEGIN CATCH
        SELECT 
                [ErrorNumber] = ERROR_NUMBER()
            , [ErrorSeverity] = ERROR_SEVERITY()
            , [ErrorState] = ERROR_STATE()
            , [ErrorProcedure] = ERROR_PROCEDURE()
            , [ErrorLine] = ERROR_LINE()
            , [ErrorMessage] = ERROR_MESSAGE();
    END CATCH

END
</code></pre>

<hr>

<h3>Tips for your SQL</h3>

<ol>
<li>For formatting, I would download the following tool, <a href="https://marketplace.visualstudio.com/items?itemName=TaoKlerks.PoorMansT-SqlFormatterSSMSVSExtension" rel="nofollow noreferrer">Poor Man's T-Sql Formatter</a> and on <a href="https://github.com/TaoK/PoorMansTSqlFormatter" rel="nofollow noreferrer">GitHub</a>. I use it when I have to edit other developer's code. </li>
</ol>

<blockquote>
  <p>Here are the settings I used</p>
</blockquote>

<p><a href="https://i.stack.imgur.com/i0NLI.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/i0NLI.png" alt="screenshot"></a></p>

<ol start="2">
<li><p>I would put the commas in front to clearly define new columns. Versus code wrapped in multiple lines. It also makes trouble-shooting code easier. </p></li>
<li><p>If you put <code>1=1</code> at the top of a <code>WHERE</code> condition, it enables you to freely change the rest of the conditions when debugging a query. The SQL query engine will end up ignoring the <code>1=1</code> so it should have no performance impact. <a href="https://stackoverflow.com/q/242822/9059424">Reference</a></p></li>
<li><p>If you use <a href="https://docs.microsoft.com/en-us/sql/t-sql/queries/with-common-table-expression-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">common table expressions (CTE)</a> in your SQL it helps with documentation. The expression name can then let other developers know why you used that expression e.g. <code>contract_address_list</code> or <code>active_projects</code>.</p></li>
<li><p>Use the <a href="https://docs.microsoft.com/en-us/sql/t-sql/language-elements/coalesce-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">COALESCE</a> function to evaluate the expression in the WHERE clause for the <code>DATEPARTS</code>.</p></li>
<li><p>I find it more convenient to see column alias's referenced from the left side e.g. <code>, [Date] = DATEFROMPARTS(GS.[Year], GS.[Month], GS.[Day])</code> </p></li>
<li><p>Avoid using keywords as object names. <a href="https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">Microsoft Reference</a></p></li>
<li><p>Check the <a href="https://docs.microsoft.com/en-us/sql/relational-databases/performance/display-the-estimated-execution-plan?view=sql-server-2017" rel="nofollow noreferrer">Estimated Execution Plan</a> <kbd>Ctrl</kbd> + <kbd>L</kbd> in Microsoft SQL Server Management Studio (SSMS) to check the performance of the query by pasting both SQL statements in a query window. </p></li>
</ol>

<p>Here's an example.</p>

<p><a href="https://i.stack.imgur.com/6ImLg.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/6ImLg.png" alt="screenshot"></a></p>
    </div>