<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could use <code>range</code> (or <code>xrange</code> for Python 2) to make the code shorter and clearer.</p>

<p>So instead of</p>

<blockquote>
<pre><code>i = 0
while i &lt; master_count:
    j = 0
    while j &lt; master_count:
        print str(master[i][j]) +" "+str(master[j][i])
        if master[i][j] != master[j][i]:
            return False
        j = j + 1 # close the loop
    i = i + 1 # close the loop
</code></pre>
</blockquote>

<p>We have</p>

<pre><code>for i in range(master_count):
    for j in range(master_count):
        if master[i][j] != master[j][i]:
            return False
</code></pre>

<p>Actually we're doing twice the amount of work we need to. If <code>master[i][j] == master[j][i]</code>, we don't need to check the opposite:</p>

<pre><code>for i in range(master_count):
    for j in range(i + 1, master_count):
        if master[i][j] != master[j][i]:
            return False
</code></pre>

<p>Alternatively, you could use <code>all</code> and a generator expression:</p>

<pre><code>return all(master[i][j] == master[j][i]
           for i in range(master_count)
           for j in range(i + 1, master_count))
</code></pre>

<p>I would also reconsider the variable names, e.g. <code>matrix</code> instead of <code>master</code>, <code>dim</code> or <code>n</code> instead of <code>master_count</code>.</p>
    </div>