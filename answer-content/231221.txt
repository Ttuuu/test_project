<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let's start refactoring/optimizations:</p>

<ul>
<li><code>urllib</code> should be replaced with <a href="https://realpython.com/python-requests/" rel="nofollow noreferrer"><code>requests</code></a> library which is the de facto standard for making HTTP requests in Python and has reach and flexible interface.</li>
<li>instead of moving from intermediate location (<code>shutil.move('junar.zip','/tmp')</code>) we can just save the downloaded zip file to a destination path <code>with open('/tmp/junar.zip', 'wb') as out</code></li>
<li>decompose the initial function into 2 separate routines: one for downloading zipfile from specified location/url and the other - for reading a specified (passed as an argument) zipfile's <em>member/inner file</em></li>
<li>reading from <code>zipfile.ZipFile.open</code> directly to avoid intermediate extraction. Otherwise zipfile contents should be extracted at once, then - just reading a regular files being extracted (with adjusting the "reading" function)</li>
</ul>

<hr>

<p>From theory to practice:</p>

<pre><code>import os.path
import requests
import zipfile
import warnings


def download_zipfile(url):
    if not os.path.isfile('/tmp/junar.zip'):
        with open('/tmp/junar.zip', 'wb') as out:
            out.write(requests.get(url).content)


def read_zipfile_item(filename):
    with zipfile.ZipFile('/tmp/junar.zip') as zip_file:
        with zip_file.open(filename) as f:
            return f.read().decode('utf8')

# Testing
url = 'https://www.ohjelmointiputka.net/tiedostot/junar.zip'
download_zipfile(url=url)
print(read_zipfile_item('junar1.in'))
</code></pre>

<p>The actual output (until the input url is accessible):</p>

<pre><code>10
6
1
4
10
7
2
3
9
5
8
</code></pre>
    </div>