<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The following are a few suggestions on how I'd write the SQL statement.</p>

<p><strong>Source Control</strong> </p>

<p>If you don't already have a <a href="https://docs.microsoft.com/en-us/previous-versions/sql/sql-server-data-tools/hh272677(v=vs.103)" rel="nofollow noreferrer">database project</a>, create one in <a href="https://visualstudio.microsoft.com/" rel="nofollow noreferrer">Visual Studio</a>. Then check it in to source control. <a href="https://azure.microsoft.com/en-au/services/devops/" rel="nofollow noreferrer">Microsoft Azure DevOps Services</a> is free &amp; private for teams of 5 or less (this is per project, so 5 developers per project). Then you'll be able to track changes you make to your stored procedures, views, tables, etc.</p>

<p><strong>Formatting</strong></p>

<p>I would download the following tool for SSMS and Visual Studio, <a href="https://www.apexsql.com/sql-tools-refactor.aspx" rel="nofollow noreferrer">SQL formatter from ApexSQL</a>. I use it when I have to edit other developer's code. It's a great way to standardize your SQL. I find it does most of the formatting for me, but I'll still make a few changes after.</p>

<p><strong>Copy &amp; Paste</strong></p>

<p>If you find yourself copying and pasting the same string or number over and over in your query, then you should define it as a variable or create a table. <a href="https://en.wikipedia.org/wiki/David_Parnas" rel="nofollow noreferrer"><em>Copy and paste is a design error ~ David Parnas</em></a></p>

<p><strong>Commas</strong></p>

<p>I would put the commas in front to clearly define new columns. Versus code wrapped in multiple lines. It also makes trouble-shooting code easier. </p>

<p><strong>Where Clause</strong></p>

<p>If you put <code>1=1</code> at the top of a <code>WHERE</code> condition, it enables you to freely change the rest of the conditions when debugging a query. The SQL query engine will end up ignoring the <code>1=1</code> so it should have no performance impact. <a href="https://stackoverflow.com/q/242822/9059424">Reference</a></p>

<p><strong>Common Table Expressions (CTE)</strong></p>

<p><a href="https://docs.microsoft.com/en-us/sql/t-sql/queries/with-common-table-expression-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">CTE's</a> in your SQL, help with documentation. The expression name can then let other developers know why you used that expression e.g. <code>post_body_filter</code>.</p>

<p><strong>Schema Names</strong></p>

<p>Always reference the schema when selecting an object e.g. <code>[dbo].[Posts]</code>.</p>

<p><strong>Keywords</strong></p>

<p>Avoid using keywords as object names. <a href="https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">Microsoft Reference</a></p>

<ul>
<li>Also check out the book <a href="https://rads.stackoverflow.com/amzn/click/0132350882" rel="nofollow noreferrer"><em>Clean Code</em></a>. It will change the way you think about naming conventions.</li>
</ul>

<hr>

<p><strong>Revised SQL</strong></p>

<p>Without table definitions and sample records I was unable to test this, but it should give you a good start.</p>

<pre><code>WITH
Posts
AS
(
   SELECT tbl.* FROM (VALUES
    ( 1, '01-Jan-2020', 85, 'depend on context', 2)
   , ( 2, '02-Jan-2020', 86, 'base on Context', 2)
   , ( 3, '03-Jan-2020', 87, 'rely on context', 2)
   , ( 4, '04-Jan-2020', 88, 'Count on Context', 2)
   , ( 5, '05-Jan-2020', 89, 'lean on context', 2)
   , ( 6, '06-Jan-2020', 90, 'Take on Context', 2)
   , ( 7, '07-Jan-2020', 91, '... on context', 2)
   , ( 8, '08-Jan-2020', 92, ' on context ...', 2)
   , ( 9, '09-Jan-2020', 93, '... on context ...', 2)
   , ( 10, '10-Jan-2020', 94, '... on ... context ...', 2)
   , ( 11, '11-Jan-2020', 95, '...', 2)
   , ( 12, '12-Jan-2020', 96, '... on context ...', 1)
   ) tbl ([Id], [CreationDate], [Score], [Body], [PostTypeId]) 
)
,
post_body_filter --here it would be good to name the table expression so others will know why you're filtering them out.
AS
(
   SELECT tbl.* FROM (VALUES
    ( '%depend%')
   , ( '%base%')
   , ( '%rely%')
   , ( '%count%')
   , ( '%lean%')
   , ( '%take%')
   ) tbl ([Body]) 
)
SELECT 
     [po].[Id]
    , [po].[CreationDate]
    , [po].[Score]
    , [po].[Body]
FROM
    [Posts] AS [po]
    LEFT JOIN [post_body_filter] AS [pf] ON [po].[Body] LIKE [pf].[Body] COLLATE SQL_Latin1_General_CP1_CI_AS
WHERE
  1 = 1
  AND [pf].[Body] IS NULL
  AND [po].[Body] LIKE '% on context%'
  AND [po].[PostTypeId] = 2
  ;
</code></pre>

<h2>Results</h2>

<p><a href="https://i.stack.imgur.com/hGuXM.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/hGuXM.png" alt="screenshot"></a></p>
    </div>