<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>The main culprit here is your progress indicator</strong>.</p>

<p>You're continuously refreshing a line in <code>stdout</code> every time <code>write</code> is called, and <code>write</code> is called a <em>very large</em> number of times. If you reduce the frequency of console writes, you'll make your script a whole lot faster. One option is to write to the console only every 0.5 seconds or so:</p>

<pre><code>// Performance checker:
setTimeout(() =&gt; {
    console.log('Process after 10 seconds: ', Math.floor(total_bytes / target_bytes * 10000)/100);
}, 10000);
// Actual code:
let timeoutId;
const write = str =&gt; new Promise(resolve=&gt;{
    total_bytes += Buffer.byteLength(str, 'utf8');
    writerStream.write(str, resolve);
    if (!timeoutId) {
        timeoutId = setTimeout(() =&gt; {
            process.stdout.clearLine();
            process.stdout.cursorTo(0);
            const pct = Math.min(100, Math.floor(total_bytes / target_bytes * 10000)/100);
            process.stdout.write(pct+"% complete");
            timeoutId = null;
        }, 500);
    }
});
</code></pre>

<p>On my machine, this results in a speed improvement from around 0.25% in 10 seconds, to around 2.03% in 10 seconds - an improvement of a whole order of magnitude.</p>

<p>Another thing: if you're going to use ES2015+ syntax - which you are, and should - then always declare variables with <code>const</code> when possible. Never use <code>var</code>, it has too many gotchas to be worth using (such as function scope instead of block scope, the ability to accidentally re-declare it, automatically putting properties on the global object when on the top level in a browser, etc).</p>
    </div>