<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think this is what you're looking for</p>

<pre class="lang-js prettyprint-override"><code>const uuidGenerator = () =&gt; Math.random();

const message = {
  message: 'hello',
  recipients: ['John', 'Susie', 'Christian'],
};

function split(obj) {
  const { message, recipients, ...remaining } = obj;
  return recipients.map((recipient) =&gt; {
    return { id: uuidGenerator(), message, ...remaining, recipient: recipient };
  });
}

const arrOfMessages = split(message);
console.log(arrOfMessages);
</code></pre>

<p>if there are too many values that you want to copy from the actual <code>obj</code>, then you can use the spread operator i.e., <code>remaining</code> in this case. </p>

<p>However, I am not sure about how efficient this is. These are possible approaches: 
- <code>Object.assign</code>
- <code>Spread Operator</code>
- manually adding keys to base Object
Because, I have seen instances where each of these perform differently based on the sample size.</p>

<p>I remember that last approach is faster if your sample size is huge.</p>
    </div>