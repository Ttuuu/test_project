<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not a code reviewer, but I'd like to comment on the design of your network, which you certainly seem to be doing just fine.</p>

<ul>
<li><p>It might be rather difficult to make any judgment, given that the application is undefined, while it seems you are designing a neural-network based detector. </p></li>
<li><p>Numerically speaking, you might focus on your validation performance, by constantly redesigning your <em>network architecture</em> (e.g., number of hidden layers, number of hidden neurons, reducing and increasing batch sizes, training functions/methods as you mentioned, etc.), <em>input preprocessing</em> (e.g., smoothing, input interpolation or extrapolation in case possible, artifact removal, etc.). </p></li>
<li><p>Not knowing what your datasets might be and how sophisticated that may be, you may focus on <code>10^-3</code> to <code>10^-6</code> convergence range. It might increase the performance (e.g., confusion matrices) of your network.</p></li>
</ul>

<p>Overall, it seems your input is pretty stochastic. Input preprocessing may be worth looking into.</p>
    </div>