<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Firstly: congratulations on listing this in pypi. That's pretty cool.</p>

<h2>Documentation</h2>

<p>Particularly since this is a publicly-consumable library, it's very important that you add docstrings to all of your exposed functions. You know the routine: triple-quoted comments at the top of each function describing the return value and the parameters.</p>

<h2>Type hints</h2>

<p>For the same reason as above, it's important to have type hints on your methods. At a guess,</p>

<pre><code>def rotate_point(x, y, degrees):
</code></pre>

<p>would become</p>

<pre><code>def rotate_point(x: float, y: float, degrees: float) -&gt; float:
</code></pre>

<h2>Lambdas</h2>

<p>... are great, to a point. However, these:</p>

<pre><code>max_x_unrotated = max(unrotated, key=lambda point: point[0])[0]
max_y_unrotated = max(unrotated, key=lambda point: point[1])[1]

max_x_rotated = max(rotated, key=lambda point: point[0])[0]
max_y_rotated = max(rotated, key=lambda point: point[1])[1]
min_x_rotated = min(rotated, key=lambda point: point[0])[0]
min_y_rotated = min(rotated, key=lambda point: point[1])[1]
</code></pre>

<p>are better-represented as reusable functions, perhaps</p>

<pre><code>def _first_coord(point: Sequence[float]) -&gt; float:
    return point[0]
def _second_coord(point: Sequence[float]) -&gt; float:
    return point[1]
</code></pre>

<h2>Python version</h2>

<p>Which one are you supporting? Because <code>super(Element, self)</code> indicates Python 2.</p>

<h2>Naming convention</h2>

<p><code>placeat</code> would be <code>place_at</code>.</p>
    </div>