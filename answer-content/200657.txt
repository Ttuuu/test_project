<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From an OOP design perspective, you've duplicated the sales items. Data is the products, and Products are the products too (hope that makes sense?).</p>

<p>Think back for a second regarding what entities are at work here, and their specific functions. We have:</p>

<ul>
<li>a manager,  </li>
<li>a cashier,  </li>
<li>a terminal (which the cashier and manager can both use),</li>
<li>and all the products on the store shelves.</li>
</ul>

<p>Now, both managers and cashiers are of type Person, however Manager can override the Person class with an Edit function (for the products), whereas Cashier would just inherit Person with the in-built View function, correct? (are you with me so far?)<br>
Now, we can be cheeky and assume that the Terminal has Loading and Saving functions - in lieu of the mainframe in the manager's office (typically terminals are just dumb devices and the price editing is handled by the manager with a list of products sent by head office).<br>
Given that the Manager and the Cashier both need to use the Terminal, you would need to have a Logon and Logoff function, correct? That <a href="https://sourcemaking.com/design_patterns/state" rel="nofollow noreferrer">implies a state pattern</a>, which I'll leave you to research.</p>

<p>Now, your question listed the desired functionality:</p>

<ul>
<li>read/write CSV</li>
<li>Cashiers have view functionality</li>
<li>Managers have view and edit functionality.</li>
<li>Authentication </li>
<li>Potentially having salaries on managers and cashiers</li>
</ul>

<p>All these can be achieved in the OOP layout I wrote above. The Authentication component of course would be tied into the Type of which (inherited) Person is logged onto the Terminal (that implies you either need to do some reflection on the logged on user or have an attribute which gives the answer to the terminal).<br>
You also ask: </p>

<blockquote>
  <p>Will the code load many Data objects?</p>
</blockquote>

<p>That's hard to say, but it sounds like if you stick with a simple approach, it should keep them to a minimum. Also you ask:</p>

<blockquote>
  <p>Should I use a singleton for the Data object?</p>
</blockquote>

<p>Given the Terminal is responsible for the product data, if the Terminal loads and saves the product data, I don't think you need to worry about that.</p>

<p>Hope this helps!</p>
    </div>