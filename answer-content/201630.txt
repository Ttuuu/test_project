<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The instance variables</p>

<pre><code>var userText : String = " "
var randomNumber : Int = 0
</code></pre>

<p>are not needed: <code>userText</code> is only used within <code>func appendText()</code>,
and <code>randomNumber</code> is only used within <code>func makeDecision()</code>.
Both instance variables can be replaced by local variables in the
respective function.</p>

<pre><code>override func didReceiveMemoryWarning()
</code></pre>

<p>can be removed if it does nothing but calling <code>super</code>.</p>

<p>Instead of displaying an alert if the “Decide” button is pressed while
the list is still empty, better <em>disable</em> that button as long as the
list is empty. A disabled button is a clear indication to the user
that the action is currently not possible.</p>

<p>Similarly, you can enable the “Add” button only if the text field
is non-empty, otherwise empty strings could be added to the list.
This can be done with an “editingChanged” action for the text field:</p>

<pre><code>@IBAction func editingChanged(_ sender: UITextField) {
    self.addButton.isEnabled = textInput.text?.trimmingCharacters(in: .whitespaces).isEmpty == false
}
</code></pre>

<p>Making the keyboard disappear (i.e. resigning the first responder status)
if the user touches <em>somewhere</em> outside of the input field seems a bit
unusual to me. On the other hand, I would expect the keyboard to disappear if the “Add” button is pressed (which does currently not happen).</p>

<p>Generally, I would always use the concrete sender type in action methods,
e.g.</p>

<pre><code>@IBAction func decideButton(_ sender: UIButton)
</code></pre>

<p>instead of</p>

<pre><code>@IBAction func decideButton(_ sender: Any)
</code></pre>

<p>It makes no difference in your program, but can be useful to access
properties of the sending UI control without the need to cast it
to the concrete type. </p>
    </div>