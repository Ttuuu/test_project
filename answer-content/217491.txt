<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have a lot of characters being loaded into <code>$html</code> string.  Try to find repeated string sequences and try to cache them in a fashion that allow you to quickly reference and potentially loop the data.</p>

<p>Using DRY techniques, will make your code more concise, easier to maintain, less susceptible to typos, and generally  makes proper use of a language that offers variables.</p>

<p>For instance, have a look at the repetition of:</p>

<pre><code>$html .= '&lt;b id="b-0' . $i . '" class="s16 a118 a218 a318 a418 a518 a618 a718 r18' . $r . ' mv-1 tx-0 di-1"&gt; ' . $p["l" . $i] . ' &lt;/b&gt;';
$html .= '&lt;b id="b-1' . $i . '" class="s16 a118 a218 a318 a418 a518 a618 a718 r10' . $r . ' mv-1 tx-1 di-1"&gt; ' . $p["e" . $i] . ' &lt;/b&gt;';
$html .= '&lt;b id="b-2' . $i . '" class="s16 a118 a218 a318 a418 a518 a618 a718 r14' . $r . ' mv-1 tx-2 di-1"&gt; ' . $p["h" . $i] . ' &lt;/b&gt;';
</code></pre>

<p>The class values could very sensibly be stored as a lookup array like this:</p>

<pre><code>$classLookup = [
    's16 a118 a218 a318 a418 a518 a618 a718 r18',
    's16 a118 a218 a318 a418 a518 a618 a718 r10',
    's16 a118 a218 a318 a418 a518 a618 a718 r14'
];
</code></pre>

<p>Then you could write short loops to cut down on the hardcoded parts of your script.  Something like:</p>

<pre><code>foreach($classLookup as $x =&gt; $classes) {
    $html .= '&lt;b id="b-' . $x . $i . '" class="' . $classes . $r . ' mv-1 tx-{$x} di-1"&gt; ' . $p["l" . $i] . ' &lt;/b&gt;';
}
</code></pre>

<p>You might not take this advice literally.  Have a think about what is going to be the way to set up the variables and try not to repeat yourself.</p>

<p>When writing your <code>foreach()</code> loops, if you don't use the key variable, then don't bother declaring it.</p>

<p>I see a few places inside of loops where you ask php to repeatedly calculate <code>(sizeof($p) / 4) - 1</code>.  While it is not a very taxing calculation, good coding practices dictate that you should calculate and declare this value as a variable, once, outside your loop. Then simply reference it when needed.</p>

<p>Cast your eyes to the design of your if-elseif-else block.  Find any similarities/duplications and try to redesign your script to reduce much of the hardcoded strings.</p>
    </div>