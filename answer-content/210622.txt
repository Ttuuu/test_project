<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd definitely look into using an API directly <a href="https://codereview.stackexchange.com/a/210615/24208">as @200_success suggested</a> to avoid any web-scraping or HTML parsing, but here are some additional suggestions to improve your current code focused mostly around HTML parsing:</p>

<ul>
<li><p>you could get some speed and memory improvements if you would use a <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#parsing-only-part-of-a-document" rel="noreferrer"><code>SoupStrainer</code></a> to allow <code>BeautifulSoup</code> parse out only the desired elements from the HTML:</p>

<blockquote>
  <p>The <code>SoupStrainer</code> class allows you to choose which parts of an incoming document are parsed. </p>
</blockquote>

<pre><code>from bs4 import BeautifulSoup, SoupStrainer

trending_containers = SoupStrainer(class_="yt-lockup-content")
soup = BeautifulSoup(source, 'lxml', parse_only=trending_containers)
</code></pre></li>
<li><p>instead of <code>.find_all()</code> and <code>.find()</code> you could have used more concise <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#css-selectors" rel="noreferrer">CSS selectors</a>. You would have:</p>

<pre><code>soup.select('.yt-lockup-content')
</code></pre>

<p>instead of:</p>

<pre><code>soup.find_all('div', class_= "yt-lockup-content")
</code></pre>

<p>and:</p>

<pre><code>content.select_one('.yt-lockup-description.yt-ui-ellipsis.yt-ui-ellipsis-2')
</code></pre>

<p>instead of:</p>

<pre><code>content.find('div', class_="yt-lockup-description yt-ui-ellipsis yt-ui-ellipsis-2")
</code></pre></li>
<li><p>note how I've omitted <code>div</code> tag names above - I think they are irrelevant as the class values actually define the type of an element in this case</p></li>
<li><a href="https://www.python.org/dev/peps/pep-0008/#imports" rel="noreferrer">organize imports as per PEP8</a></li>
</ul>
    </div>