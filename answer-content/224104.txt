<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>OOP considerations:</p>

<p>Dog and Cat are both animals; You should have <code>Dog</code> and <code>Cat</code> classes which extend <code>Animal</code>.
You have basically three concerns (business logic) in your application: </p>

<p>(1) Get input from command line, </p>

<p>(2) Validate inputs and translate inputs to entity, </p>

<p>(3) Apply CRUD operations to perform on entities.
You can create one interface for each of these.</p>

<pre><code>interface CommandHandler {
    handleCommand(AddAnimalCommand command);
    handleCommand(UpdateAnimalCommand command);
    //...
}
</code></pre>

<p>Validator (this keeps all your validation logic in one place):</p>

<pre><code>//Return error message if not valid else return EMPTY_STRING (Don't ever return null!)
interface Validator {
   String validateId(int id);
   String validateDate(String date);
}
</code></pre>

<p>DataStore (this provides flexibility of moving from file storage to other storage systems e.g. DB, Excel etc), you just create one more implementation class and use that:</p>

<pre><code>interface DataStore {
  void save(Animal animal);
  Animal get(int id);
  void update(Animal animal);
  void delete(int id);
}
</code></pre>

<p>There are few observations in your coding:</p>

<p><code>readID()</code> could be simplified.</p>

<pre><code> int readId(){
    while(true){
        int id = readInt();
        String err = validator.validate(id);
        if(validator.isEmpty()) return id;
        System.out.println(err);
    }
 }
</code></pre>

<p>Could you not take dateOfBirth in a specific format from user? Like '<em>Enter date of birth in year-month-day (for example 1990-03-10) format.</em>'?</p>

<p>Remember to break the code into interfaces with clear functionality (one responsibility), implementing classes, helper classes, and methods which are not long and have meaningful names.
<code>AnimalHandler</code> does not look a good name.
I will advise to install SONAR in your IDE (better if you are using IntelliJ), it highlights bad coding practices, can sometimes report possibility of NullPointerException too.</p>
    </div>