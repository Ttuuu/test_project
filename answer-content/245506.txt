<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Splitting lines</h2>
<p>Don't call <code>splitlines()</code> here:</p>
<pre><code>org_file = open('config/organisation.txt', 'r')
return org_file.read().splitlines()
</code></pre>
<p>The file object itself is an iterator over its lines. Also, use a context manager to ensure file closure:</p>
<pre><code>with open('config/organisation.txt', 'r') as f:
    return {line.rstrip() for line in f}
</code></pre>
<p>This is a set comprehension. You want a set because you're only ever checking for membership, and this will be more efficient.</p>
<h2>Generator simplification</h2>
<p>You don't really need to <code>yield</code> here:</p>
<pre><code>for url in start_urls:
    yield scrapy.Request(url=url, callback=self.parse)
</code></pre>
<p>Instead,</p>
<pre><code>return (
    scrapy.Request(url=url, callback=self.parse)
    for url in start_urls
)
</code></pre>
<h2>Strongly-typed results</h2>
<p>Since you're more experienced in .NET, consider how you would traditionally represent this:</p>
<pre><code>yield {
    'product_id': product_highlight.css('[data-id="ProductId"] span::text').get(),
    'title': product_highlight.css('[data-title="ProductTitle"] h1::text').get(),
    'price': response.css('[data-price="ProductPrice"] span span::text').get(),
    'organisation': organisation,
}
            
</code></pre>
<p>Hint: it's not a dictionary. You would do better to make a class (perhaps a <code>@dataclass</code>) with well-defined members, and set your return type hint for this method to <code> -&gt; Iterable[ResultType]</code>.</p>
    </div>