<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Critical error</strong></p>

<pre><code>private static String username = "";
private static String password = "";
private static String queryString = "";
</code></pre>

<p>You should never keep request-scoped data in a field in a servlet. Servlet is created only once during application startup, and shared among all requests. So if several clients connect to your servlet at the same time, they might not reach the protected page, even if they provide correct password. It will also lead to setting wrong username attribute in the session object. If you had customized pages for each user, this could also lead to people seeing protected pages of other people. </p>

<p>Solution - extract the sensitive request-scoped data in doGet method only. Also, simply removing the <code>static</code> keyword <strong>will not</strong> resolve the issue. </p>

<p><strong>Code style</strong></p>

<ol>
<li>Get rid of empty JavaDoc that only makes the code harder to read</li>
<li>Get rid of obvious comments that only make the code harder to read, like <code>// Get username and password</code></li>
<li>Do not introduce redunant code (constructor that only calls <code>super()</code>)</li>
<li>Improve method ordering. When you call <code>validUsername()</code> in <code>login()</code>, then <code>validUsername()</code> should be below <code>login()</code> in the class. this improves readability. </li>
<li>Get rid of redundant logic. For example, the <code>validUsername()</code> method body can be elegantly expressed in one line - <code>return username.length() &gt;= 3</code>.  By the way, I think this method should be named <code>isUsernameValid()</code> in my opinion. </li>
<li>Do not pass unnecessary arguments to methods. For example, <code>validUsername()</code> does not need <code>request</code> and <code>response</code>.</li>
</ol>

<p><strong>Other</strong></p>

<p>The browser shows <code>http://localhost:8080/jspractice02/FrontController</code> because you've annotated the class with <code>@WebServlet("/FrontController")</code>. Please read the documentation on how that works.</p>

<p>I'm not sure if calling <code>doGet()</code> from <code>doPost()</code> is necessary (and I'm not sure if it's best practice). Your <code>doPost()</code> should just login the user and redirect them if the credentials provided are valid. </p>
    </div>