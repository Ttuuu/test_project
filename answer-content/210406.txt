<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As suggested by @Caridorc I tried implementing a more functional version of the solution.  I do feel that this code can be made more elegant and some checks may be redundant.</p>

<pre><code>def getRow(row: Int, m: Array[Array[Int]]): Seq[Int] = m(row)
  def getCol(col: Int, m: Array[Array[Int]]): Seq[Int] = (0 until m.length).map(i =&gt; m(i)(col)).toSeq
  def printNonEmpty(s: Seq[Int]) : Unit = if (s.isEmpty) print("") else print(s.mkString(","))

  def dropOuter(m: Array[Array[Int]]): Array[Array[Int]] = {
    val rows = m.length -1
    val cols = m(0).length -1
    (1 until rows).map { r =&gt;
      (1 until cols).map { c =&gt;
        m(r)(c)
      }.toArray
    }.toArray
  }

  def printSpiral(m: Array[Array[Int]]) : Unit  ={
    m.size match {
      case 0 =&gt; print("")
      case _=&gt;
        printNonEmpty(getRow(0, m));print(",")
        if (m(0).length &gt; 0 ) {
          printNonEmpty(getCol(m(0).length -1, m).tail);print(",")
        }
        val bottom = getRow(m.length - 1, m)
        if (m.length &gt; 0 &amp;&amp; bottom.nonEmpty) {
          printNonEmpty(bottom.init.reverse);print(",")
        }
        if (m(0).size &gt; 1) {
          val left = getCol(0, m).init
          if (left.tail.nonEmpty) {
            printNonEmpty(left.tail.reverse);
            print(",")
          }
        }
        printSpiral(dropOuter(m))
    }
  }

  println("==================")
  printSpiral(matrix)
</code></pre>
    </div>