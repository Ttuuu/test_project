<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My observations:</p>

<ol>
<li>Use <code>let</code> instead of <code>var</code>. You are already using <code>let</code> in some places, but a few need to be converted. For those that do not know the difference, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let" rel="nofollow noreferrer"><code>let</code></a> is one of the new features in ES2015 (ES6) and it respects block scopes in the same way as other programming languages.</li>
<li>~~</li>
<li>I would use file scope constants for the strings "passenger" and "vehicle". Makes it easier in the future to do refactors. For example, at the top of the file <code>const PASSENGER = 'passenger'</code></li>
<li>Change this <code>if (!(nearest === undefined))</code> to <code>if (!!nearest)</code>, what you care about is if its a truthy value. The specificity of "not undefined" would allow other falsy values like <code>0</code>, <code>null</code>, <code>NaN</code>, <code>''</code>, <code>""</code>, ````</li>
<li>If file scope constant were to be used and all the possible values are known, you could test for those specifically. Instead of <code>if (!!nearest)</code> you could <code>if ([PASSENGER, VEHICLE].includes(nearest))</code></li>
</ol>
    </div>