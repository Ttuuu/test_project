<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some suggestions:</p>

<ol>
<li>You strip out spaces, then on the next line check if each character is a space.  The second part is redundant.</li>
<li>The only possible values for <code>freq % 2</code> are <code>0</code> and <code>1</code>, so <code>num_odd = sum(1 for char, freq in Counter(data).items() if char != ' ' and freq % 2 == 1)</code> can be simplified as <code>num_odd = sum(freq % 2 for Counter(data).values())</code></li>
<li>If <code>num_odd</code> is <code>0</code>, then there must be an even number of elements. If <code>num_odd</code> is <code>1</code>, then there must be an odd number of elements.  So really all you care about is if there is more than 1 odd count.</li>
<li>You can return the results of expressions directly.  So something like <code>return x &lt; y</code> is simpler than using an <code>if</code> test and manually returning <code>True</code> or <code>False</code> depending on the outcome.</li>
<li>I would put the <code>replace</code> first since that reduces the number of characters that <code>lower</code> has to operate over (although this is probably a silly negligible micro optimization).</li>
</ol>

<p>So the code can be simplified to:</p>

<pre><code>from collections import Counter


def is_palindrome_permutation(data: str) -&gt; bool:
    """Given a string, check if it is a permutation of a palindrome."""
    data = data.replace(' ', '').lower()
    return sum(freq%2 for freq in Counter(data).values()) &lt; 2
</code></pre>

<p>One more thing you could do is put the <code>Counter</code> on the first line.  I think this hurts readability a bit, but does mean that your modified <code>data</code> can be garbage collected right away.  There is no point doing this with <code>.values()</code>, though, since this is just a view into the <code>Counter</code> object, so the <code>Counter</code> object has to be kept in memory.</p>

<pre><code>from collections import Counter


def is_palindrome_permutation(data: str) -&gt; bool:
    """Given a string, check if it is a permutation of a palindrome."""
    data = Counter(data.replace(' ', '').lower())
    return sum(freq%2 for freq in data.values()) &lt; 2
</code></pre>
    </div>