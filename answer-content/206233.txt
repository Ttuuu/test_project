<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few years later, but I just found this so I hope my answer will help others.</p>

<p>From my understanding of SRP, which can be explained simply by saying, "A class should have only one reason to change." For this reason I feel that the example Thomas Junk provided, while good, isn't exactly following the SRP as it states the options internally and also prints the information directly from the class methods. Here is what I think would be more appropriate in 2018:</p>

<pre><code>Option = namedtuple('Option', ['label', 'callback'])

class Menu:

    SEPARATOR = '-'

    _title = ''
    _options = []

    def __init__(self, title, options):
        self._title = title

        for option in options:
            self._options.append(Option(option[0], option[1]))

    def header(self, text):
        line = self.SEPARATOR * (len(text) + 2)
        return f"{line}\n {text}\n{line}\n"

    def display(self):
        string = self.header(self._title)

        for i, option in enumerate(self._options):
            string += f"{i + 1} {option.label}\n"

        return string

    def callback(self, i):
        if i &lt;= len(self._options):
            return self._options[i - 1].callback
</code></pre>

<p>Which could then be implemented with the following:</p>

<pre><code>game_is_running = True

main_menu = Menu(
    "Main Menu - Please Select an Option", [
    ('New Game', new_game),
    ('Load Game', load_game),
    ('Options', display_options),
    ('Exit', exit_game)])

print(main_menu.display())

while game_is_running:
    option = int(input('&gt;&gt; '))
    main_menu.callback(option)()
</code></pre>

<p>The added benefits of this are that you can create a menu without having to change the class directly, unless you want to change how the menu itself is displayed.</p>
    </div>