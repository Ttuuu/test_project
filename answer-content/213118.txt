<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Are my methods correct?</p>
</blockquote>

<p>That depends on what you want to accomplish. Since you are "learning python and image processing with python", it seems you picked some related methods to explore, which is good. But since your project is called "Classification of breast cancer images with deep learning", and you're not using deep learning, maybe you didn't pick the right methods...</p>

<p>See below for some more concepts.</p>

<blockquote>
  <p>Are the outputs correct? Do I find the right areas?</p>
</blockquote>

<p>Again, that depends on what your goal is. Do you know what these images represent? If no, then you need to start there. Understand what the image represents, what is relevant in it, and understand what the output of your algorithms will be used for. Then you will be able to answer your question yourself.</p>

<p>It looks like you found mostly the nuclei, the results are quite OK if that is what you're after.</p>

<blockquote>
  <p>Did I use the K-Means algorithm correctly?</p>
</blockquote>

<p>You've copy-pasted this from the OpenCV tutorial, so it's correct. But it also is a bit redundant, since the values of <code>center</code> are not useful to you in this case. The output <code>label</code> is an image with values 0 and 1, representing background and foreground. You should be able to directly display that (maybe multiply by 255 first).</p>

<p>Also the line where you convert BGR to RGB is redundant, the k-means result will be the same regardless, and you don't need the colors after that.</p>

<hr>

<p>When dealing with brightfield microscopy, as you are, you might want to consider separating the stains instead of directly using the RGB values. These images are all H&amp;E stain (Hematoxylin and Eosin). These are purple and pink, respectively. Because we're dealing with transmitted light, and the dyes absorb light of specific wavelengths, we see darker pixels of specific colors. The absorption is characterized by the <a href="https://en.wikipedia.org/wiki/Beer%E2%80%93Lambert_law" rel="nofollow noreferrer">Beer-Lambert law</a>. This law states that the amount of light transmitted (and thus seen by the camera) is given by <span class="math-container">\$10^{-A}\$</span>, with <span class="math-container">\$A\$</span> proportional to the amount of dye. Thus, given a pixel value <span class="math-container">\$v\$</span> and the illumination intensity <span class="math-container">\$v_\text{max}\$</span> (the whitest area in the image), you can compute <span class="math-container">\$-log(v/v_\text{max})\$</span>, which is proportional to the amount of dye. You can do this separately for each of the channels R, G and B. Each dye has a different absorption coefficient for each channel. If you know these (you can compute them from the image data), you can now do a linear unmixing (solve a linear set of equations) to derive, for each pixel, the relative amount of Hematoxylin and the relative amount of Eosin at that location on the slide. These two values is what you should be working with.</p>
    </div>