<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Explanation:</h2>

<p>It's true that using objects can become messy after a while. That's why <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" rel="nofollow noreferrer">Template Literals</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML" rel="nofollow noreferrer">innerHTML</a> are so powerful in this situation.</p>

<p>I would highly advise to avoid using <code>parentNode</code> when attempting to remove HTML, you may unintentionally remove something in the future if you decide to make your alert HTML more complex.</p>

<p>To solve this, create a container element that is accessible by your onclose method.</p>

<p>Also, I would also advise to not overwrite existing objects. Why not name alert to something else?</p>

<p>Don't add onclick events directly in the HTML, it's messy. </p>

<h2>Solution:</h2>

<pre><code>function message(text) {

  const container = document.createElement("div");

  const onClose = ()=&gt;container.remove();

  container.innerHTML = `
   &lt;div class="shadow"&gt;
      &lt;div class="alert-text"&gt;
        &lt;i id="close-alert" class="material-icons"&gt;close&lt;/i&gt;
        ${text}
      &lt;/div&gt;
   &lt;/div&gt;
  `;

  document.body.appendChild(container);

  document
    .querySelector('i#close-alert')
    .addEventListener("click", onClose);
}
</code></pre>

<h2>Working Example:</h2>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function message(text) {

  const container = document.createElement("div");

  const onClose = ()=&gt;container.remove();

  container.innerHTML = `
   &lt;div class="shadow"&gt;
      &lt;div class="alert-text"&gt;
        &lt;i id="close-alert" class="material-icons"&gt;close&lt;/i&gt;
        ${text}
      &lt;/div&gt;
   &lt;/div&gt;
  `;
  
  document.body.appendChild(container);
  
  document
    .querySelector('i#close-alert')
    .addEventListener("click", onClose);
}

const button = document.querySelector('button');
button.addEventListener('click', function() {
  message('Button clicked');
});</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>* {
  box-sizing: border-box;
}

.shadow {
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, .5);
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 98;
}

.alert-text {
  border: 1px solid #aaa;
  padding: 2.5em;
  min-height: 10%;
  width: auto;
  max-width: 80%;
  background: #fff;
  z-index: 99;
  position: relative;
  text-align: center;
}

.alert-text i {
  position: absolute;
  top: 0;
  right: 0;
  color: #777;
  cursor: pointer;
  padding: .5rem;
}

.alert-text i:hover {
  color: #444
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;head&gt;
  &lt;title&gt;&lt;/title&gt;

  &lt;link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/icon?family=Material+Icons"&gt;

&lt;/head&gt;

&lt;body&gt;

  &lt;h3&gt;Page content&lt;/h3&gt;
  &lt;button&gt;alert&lt;/button&gt;


&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>

    </div>