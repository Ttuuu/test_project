<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As per <a href="https://stackoverflow.com/a/19522559/3312">this answer</a>, it would be wiser to use a tuple in this case. I use lowercase "t"uple as I highly recommend the built-in language support for tuples <code>(char, int)</code> over the explicit <code>Tuple&lt;T1, T2&gt;</code> declaration, etc. Few more points:</p>
<ul>
<li>What should happen in a tie? Which gets returned? If any is acceptable, it's fine as-is. To be more of a determinate function, secondarily order by the character itself.</li>
<li>Don't need to convert it to a character array as a string already <em>is</em> a character array.</li>
<li>Re-order the <code>OrderByDescending</code> and the <code>Select</code> so that <code>Count</code> only has to be called once.</li>
<li>It can be made <code>static</code> since it doesn't access class instance data.</li>
<li>It can be made an extension method if in a <code>static</code> class.</li>
<li>It can be made into an expression-bodied method.</li>
<li>Maybe consider a better name; one that confers what it does rather than how it does it.</li>
</ul>
<p>All that said, here's my take:</p>
<pre><code>    public static (char, int) MaxCharacterFrequency(this string s) =&gt;
        s.GroupBy(x =&gt; x)
         .Select(x =&gt; (x.Key, x.Count()))
         .OrderByDescending(x =&gt; x.Item2)
         .ThenBy(x =&gt; x.Item1)
         .FirstOrDefault();
</code></pre>
    </div>