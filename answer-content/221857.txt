<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Its very much hard coded for that single domain type, SalesmanLocation. I would instead use some kind of event aggregation pattern. The domain fires off these events and the singalr hub listenes to these events. </p>

<p>I have made a singalr library that seamlessly forwards events to signalr. Maybe it can give you some ideas</p>

<p><a href="https://github.com/AndersMalmgren/SignalR.EventAggregatorProxy/wiki" rel="nofollow noreferrer">https://github.com/AndersMalmgren/SignalR.EventAggregatorProxy/wiki</a></p>

<p>Bascily with my design you would do</p>

<pre><code>private void Save(SalesmanLocationDto dto) 
{
    repository.Save(dto);
    eventAggregator.Publish(new SalesmanLocationSavedEvent{ /* map data from dto */ }); 
}
</code></pre>

<p>Its completely decoupled and nor the domain or the signalr parts know about each other</p>
    </div>