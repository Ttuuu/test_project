<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The Custom implementation is good.</p>

<p>Improvement/Suggestions-</p>

<ol>
<li><p>Integer Overflow is not handled for the size</p>

<pre><code>private static final int HUGE_CAPACITY = Integer.MAX_VALUE - 3;

private void ensureCapacity() {
  // Here newIncreasedCapacity can be negative value
  int newIncreasedCapacity = elementData.length &gt; 0 ? elementData.length * 2 : INITIAL_CAPACITY;
  // Handles the capacity never goes out of bounds
  if(newIncreasedCapacity &lt; 0) {
      newIncreasedCapacity = HUGE_CAPACITY;

      // To handle overflows with the index
      if(size == HUGE_CAPACITY) {
         // throw the exception - or replace the last element
      }
  }
  // Copy the elements
  elementData = Arrays.copyOf(elementData, newIncreasedCapacity);
}
</code></pre></li>
<li><p>Duplicate code for check range in get/remove function</p>

<pre><code>private boolean checkCapacity() {
    if (index &lt; 0 || index &gt;= size) {
          throw new IndexOutOfBoundsException("Index: " + index + ", Size " + 
         index);

    }
}
</code></pre></li>
<li><p>Even if no element is inserted, a first initialization will hold memory</p>

<pre><code>private static final Object[] DEFAULT_EMPTY_ELEMENT_STORE = {};
// New data store initialized with EMPTY store i.e. DEFAULT_EMPTY_ELEMENT_STORE
public SimpleArrayList() {
    super();
    elementData = DEFAULT_EMPTY_ELEMENT_STORE;
}
</code></pre></li>
<li><p>Optimized remove method</p>

<blockquote>
<pre><code>for (int i = index; i &lt; size - 1; i++) {
        elementData[i] = elementData[i + 1];
}
size--;   //reduce size of ArrayListCustom after removal of element.
</code></pre>
</blockquote>

<p>to be replaced with</p>

<pre><code>int copyLength = size - index - 1;
if (copyLength &gt; 0) {
    System.arraycopy(elementData, index + 1, elementData, index, copyLength);
}
elementData[--size] = null;
</code></pre></li>
</ol>

<p>For more details and ideas, you may also refer to <a href="https://github.com/Jatish-Khanna/javaapi/blob/master/SimpleArrayList.java" rel="nofollow noreferrer">SimpleArrayList</a>.</p>
    </div>