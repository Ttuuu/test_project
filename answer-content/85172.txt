<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>int divides9 (int number)
{
    int num;

    for(num = number; num &gt; 0; num -= 9);

    return (num == 0);
}
</code></pre>

<p>Facing your restrictions, I could come up with this that appears to be different than your current approach. And smaller indeed.</p>

<hr>

<p>Not only unnecessary, but also very confusing:
The names you use are very long. Camel case is not very readable with long names.</p>

<ul>
<li><p><code>PreferCamelCaseOverSnakeCaseForLongNames</code></p></li>
<li><p><code>prefer_snake_case_over_camel_case_for_long_names</code></p></li>
</ul>

<p>Which one looks easier for reading? Right.</p>

<p>So you can replace <code>isDivby9</code> with <code>is_divisible_by9</code> or if you want to stick with abbreviated names - <code>isdivsbl</code> and specify the number that has to be check as a function argument.</p>

<p>What is <code>orgx</code> supposed to do? At the time I read it, I could not get any idea.</p>

<p><code>olddivby8</code> is even worse. That stands for all the names. Stick with a style and try to come up with a short name that makes perfect sense and is pretty much self-explaining.</p>

<hr>

<p>Use spaces. Especially between declaration and an <code>if</code> statement.</p>

<hr>

<p>Using bit operations for such arithmetic is a rare case, and not always that pretty. Especially if they are not needed. Exactly because it is a rare case you should not use them unless they are your only choice. They are harder for debugging.</p>
    </div>