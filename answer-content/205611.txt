<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>There are multiple occurences of each person in the spreadsheet, so I want to just have each unique instance of a different 'People ID' using set().</p>
</blockquote>

<p><code>df.groupby('Name').apply(set)</code></p>

<blockquote>
  <p>Now I create a second dict, namead, which is a "filtered" version of nameid where we've removed all reviewer names with just one ID value associated (those are fine as they are).</p>
</blockquote>

<p><code>df.groupby('Name').apply(set).loc[df.groupby('Name').count&gt;1]</code></p>

<blockquote>
  <p>I then pass that through df2 to add the 'People ID' to those names and ensure there is no confusion.</p>
</blockquote>

<p>I think that just doing <code>df['Name'] =  df['Name']+(' '+'df['People ID'])*(df.groupby('Name').count&gt;1)</code> will do everything you want, but I recommend just doing <code>df['Name'] =  df['Name']+' '+'df['People ID']</code>. That is, you should just add <code>People ID</code> to all of the <code>Name</code> column, regardless of whether the name is unique. Consistency is generally better than parsimony.</p>
    </div>