<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You never use the <code>shiftcounter</code> variable, so feel free to remove it.</p>

<p>You don't care about the keys in the object you're iterating over, you only care about the objects at each key - so, it would be more appropriate to iterate just over the values, rather than the keys. Use <code>Object.values</code> instead of <code>for..in</code>.</p>

<p>The <code>.group</code> property is already an integer in the dataset, so there's no need to call <code>parseInt</code> with it. Since you want to extract the <code>group</code> property into a variable named <code>group</code>, you can do this more concisely with destructuring.</p>

<p>Rather than hard-coding the action to take when the group is 1 (the first), you can initialize <code>lastGroup</code> to <code>1</code> so that the <code>//fill rest of array with repeated count and match length</code> section will take care of the logic you need - it'll be more DRY.</p>

<pre><code>const shiftCount = [];
let lastgroup = 1, // initial group
  lastcount = 0; // initial count
for (const { group } of Object.values(slides)) {
  if (group !== lastgroup) {
    lastcount = shiftCount.length;
    lastgroup = group;
    shiftCount.push(lastcount);
  } else { //fill rest of array with repeated count and match length.
    shiftCount.push(lastcount);
  }
}
</code></pre>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const slides = {
  1: {
    content: "",
    group: 1
  },
  2: {
    group: 1
  },
  3: {
    content: "",
    group: 1
  },
  4: {
    content: "",
    group: 2
  },
  5: {
    content: "",
    group: 3
  },
  6: {
    content: "",
    group: 3
  },
  7: {
    content: "",
    group: 3
  },
  8: {
    content: "",
    group: 4
  },
  9: {
    content: "",
    group: 4
  },
  10: {
    content: "",
    group: 4
  },
  11: {
    content: "",
    group: 5
  },
  12: {
    content: "",
    group: 5
  }
};

const shiftCount = [];
let lastgroup = 1,
  lastcount = 0;
for (const { group } of Object.values(slides)) {
  if (group !== lastgroup) {
    lastcount = shiftCount.length;
    lastgroup = group;
    shiftCount.push(lastcount);
  } else { //fill rest of array with repeated count and match length.
    shiftCount.push(lastcount);
  }
}
console.log(shiftCount);</code></pre>
</div>
</div>

    </div>