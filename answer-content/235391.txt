<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>array_replace()</code> is the perfect call here -- it can be used to overwrite the master array with the array containing actual integer values.</p>

<p>Code: (<a href="https://3v4l.org/lF1P7" rel="nofollow noreferrer">Demo</a>)</p>

<pre><code>var_export(array_replace(array_map('intval', $all_states), $country_states));
</code></pre>

<p>To streamline the process futher, you should declare your master list with <code>0</code> values instead of <code>null</code> values, then you can omit the <code>array_map()</code> call like this:</p>

<p>Code: (<a href="https://3v4l.org/9HvSn" rel="nofollow noreferrer">Demo</a>)</p>

<pre><code>var_export(array_replace($all_states, $country_states));
</code></pre>

<p>Additional suggestions, caveats, and considerations:</p>

<ul>
<li>You might reconsider your variable names, as they don't seem to do a great job of describing the data that they contain.  <code>$all_states</code> might be <code>$statesLookup</code> or <code>$statesDefault</code>.  I don't know what is being counted in the second array, but <code>$country_states</code> might be better declared as <code>$state_counts</code> or something.</li>
<li>If <code>$country_states</code> has any elements with keys that are not represented in <code>$all_states</code>, then these new elements WILL be appended to the end of the output array.  If this is a legitimate concern, you can call <code>array_intersect_key($country_states, $all_states)</code> to filter out any expected elements.</li>
<li>The order of the elements in the output array will be ordered by <code>$all_states</code>.  No matter what order the <code>country_states</code> are in.</li>
</ul>
    </div>