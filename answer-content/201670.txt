<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It's super fine to use globals (like <code>log</code>) in a small one-file program you've written. To make them more visible declare them at the very top of your file right after your types.</p>

<p>The global <code>read_chunk</code> doesn't follow Go naming convention. <code>readChunk</code> or <code>readChunkSize</code> will do it better.</p>

<p><code>SetupLog</code> is used only once in the main function and it does unnecessarily job. Could be replaced with a single function call:</p>

<pre><code>logging.SetLevel(logging.INFO, "")
</code></pre>

<p>I see how you've used <code>MaybeWarn</code>, <code>MaybeExitErr</code> and understand that <em>it can be tedious</em> to write <code>if err != nil</code> after most standard library functions. But it is just how it is. I suggest you to get used to it, handle possible errors in the right place and remove <code>Maybe*</code> functions.</p>

<p><code>ConsumeAllNonBlocking</code> has several pitfalls:</p>

<ul>
<li><code>flag</code> variable is useless. You can use <code>break</code> directly in switch body to break the for loop.</li>
<li>The <code>for</code> loop is not used, it can be omited.</li>
<li><a href="https://golang.org/ref/spec#Receive_operator" rel="nofollow noreferrer">receive operator</a> has second parameter you might want to use</li>
</ul>

<p>The function is used only once so I suggest you to write the select statement directly in place where you need it:</p>

<pre><code>select {
case ret, ok := &lt;- c:
default:
    // will block
}
</code></pre>

<p>There is no a single comment line across all your code. This can be perfectly valid for a simple program like FizzBuzz, but some complex one like concurrent HTTP downloader deserves some explanation. Same stands for user experience: it's wise to provide a usage string and command line arguments like quiet, read links from stdin and so on.</p>

<p>There is several places were the code is not formatted properly. <code>go fmt</code> is on the rescue.</p>
    </div>