<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Security</h1>

<h2>Command injection</h2>

<blockquote>
  <p>I made a small patch by disabling the characters " " (space), "&amp;", and "|".</p>
</blockquote>

<p>This can easily be bypassed. Example:</p>

<pre><code>url=http://example.com/;id;?%26x=y;
</code></pre>

<p>Other relevant characters include - but are not limited to - <code>$</code>, ```, etc.</p>

<p>As mentioned in the comments, you should use <code>escapeshellarg</code> instead (input filtering is quite difficult).</p>

<h2>XSS</h2>

<p>This is vulnerable to XSS:</p>

<pre><code>echo("Illegal video format '".$_GET['format']."'!");
</code></pre>

<p>An attacker can exploit this to run arbitrary JavaScript on the domain the script is hosted on. If there are other applications hosted there, this might have a significant impact. XSS also allows bypass of CSRF protection (see next point).</p>

<p>You should apply <code>htmlentities</code> to any user-supplied value you output.</p>

<h2>CSRF / Missing authentication</h2>

<p>As-is, anyone could get you to download a video by including an <code>img</code> tag to the PHP script in a website, an email, etc.</p>

<p>This also allows remote attackers who are not in your home network to execute arbitrary code on your computer via the command injection issue.</p>

<p>I would suggest to add <em>some</em> form of authentication here, and if it's only a hardcoded key you pass in the URL.</p>
    </div>