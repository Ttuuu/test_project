<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code almost works.</p>
<p>To make it work in all cases, test the program with Valgrind, which detects undefined behavior because of invalid memory access. This will prove that the buffer needs to be 11 bytes long, not only 10.</p>
<p>What about platforms where int has 64 bits instead of just 32? For these you need a larger buffer. Until then, you should use a <em>compile-time assertion</em> (static_assert) to ensure this implicit assumption.</p>
<p>What about negative numbers? -6 is a valid integer as well, and it should be converted appropriately.</p>
<p>If this function is the bottleneck of your whole program because it is too slow, have a look at how the Go programming language <a href="https://golang.org/src/strconv/itoa.go" rel="nofollow noreferrer">converts integers to strings</a>. It's in the <code>strconv</code> package and uses lots of nice tricks to cut down the number of integer divisions, since that's the most expensive machine instruction in your code.</p>
<p>You can get rid of the <code>get_digits</code> function if you have the end of the string at a fixed address. Start with:</p>
<pre><code>char *p = buf + sizeof buf - 1;
*p = '\0';
</code></pre>
<p>and then continue to fill the buffer from right to left by doing <code>*(--p) = '0' + digit</code>. At the end just <code>return p</code>, which will point to the first digit.</p>
<p>The return type should be <code>const char *</code> instead of <code>char *</code> since the caller is not supposed to do anything to the buffer.</p>
    </div>