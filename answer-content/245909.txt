<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Now that you've allowed the users to add custom providers, how about hiding the <code>providerMethods</code> object itself, and only providing a function which allows them to add to it. This would allow you to also validate if the users' want to override behaviour for predefined providers.</p>
<p>You have a <code>process.exit(1)</code> inside the call to <code>usage()</code>. Butm when used from cli, you catch all exceptions, then call the <code>usage</code> function, and against have another <code>process.exit(1)</code>.</p>
<p>The call to usage should not be exiting from the program entirely. It is already handled in case of errors. You can then have a <code>--help</code> commandline parameter, which spits out the usage string (without raising an error for the shell).</p>
<hr>
<p>Most of your <code>if-</code> conditions use the negated equality check, which is somewhat harder to follow for a developer (at least in my experience). When checking for <code>args.length</code>, you have double negation checks. It took me almost a minute to figure out what it is supposed to do. How about applying <a href="https://en.wikipedia.org/wiki/De_Morgan%27s_laws" rel="nofollow noreferrer">de Morgan's laws</a>:</p>
<pre><code>if (!(args.length === 3 || args.length === 4))
</code></pre>
<p>Or, maybe simply adding a comment?</p>
<p>Also consider:</p>
<pre><code>console.log((result.length === 1) ? result[0] : result)
</code></pre>
    </div>