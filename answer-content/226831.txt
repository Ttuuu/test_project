<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It's not that great of an optimization but if you're new to programming it can be interesting to consider something along the line of :</p>

<pre><code>hangman_part = ['O','|','/','\\','/','\\']
hangman_base ='''
  +---+
  |   |
  0   |
 213  |
 4 5  |
      |
========='''
</code></pre>

<p>and</p>

<pre><code>def get_current_figure():
    """Print current state of Hangman."""
    hangman_pic = hangman_base
    for i in range(6) :
        if 5-attempts &gt;= i:
            hangman_pic = hangman_pic.replace(i, hangman_part[i])
        else:
            hangman_pic = hangman_pic.replace(i, ' ')
    print(hangman_pic)
</code></pre>

<p>(I don't use Python so I may have missed something, it's more for the idea anyway)</p>

<p>This code sacrifice some perfs (usually negligible) for an improved maintainability. Let's say you want to change the design of your gallows (or your man), now you only need to do it once !</p>

<p>Sure, in your specific case, there's not that much possible changes, nor that many gallows to change. But you're doing it to practice and in practice, it's nearly always a good idea to go for maintainability.</p>

<p>I'd like to argue that it also improved readability, since you now have way less lines, but it's not granted since we added a bit of complexity. I guess it may vary depending on the reader.</p>
    </div>