<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>These comments:</p>

<pre><code>//directs you based on what you are trying to do;
</code></pre>

<p>don't need to end in semicolons. You're speaking English rather than C++ inside of them.</p>

<blockquote>
  <p>astericks</p>
</blockquote>

<p>is spelled asterisks.</p>

<p>This code:</p>

<pre><code>int number = 0;
string strnumber = to_string(number);
</code></pre>

<p>seems out-of-place. If it's just test code, delete it.</p>

<pre><code>struct student
</code></pre>

<p>First, you'll probably want to capitalize Student. Your <code>writeto</code> method should be declared as</p>

<pre><code>void writeto(ostream &amp;datastore) const {
</code></pre>

<p>In particular, it shouldn't accept <code>a</code>, rather using <code>this</code> to identify the student; and it shouldn't open the file itself. It should be able to write to any stream (including <code>cout</code>).</p>

<p>For code like this:</p>

<pre><code>char ch; cin &gt;&gt; ch;
</code></pre>

<p>Try to avoid adding multiple statements on one line, for legibility's sake.</p>

<p>A large section of your <code>addrecord</code> method should be moved to a method on <code>Student</code>. Specifically, this:</p>

<pre><code>strnumber.number = entrynumb();//grabs the proper student number;

string strcontainer;//to store string responses such as firstname/lastname;
int intcontainer;//to store int responses such as age, dob, etc;

cout &lt;&lt; "First name? " &lt;&lt; '\n';
cin  &gt;&gt; strcontainer; strnumber.firstname = strcontainer;
spacer(1);
cout &lt;&lt; "last name ? " &lt;&lt; '\n';
cin  &gt;&gt; strcontainer; strnumber.lastname = strcontainer;
spacer(1);
cout &lt;&lt; "birthday ? " &lt;&lt;  '\n';   
cin  &gt;&gt; strcontainer; strnumber.birthday = strcontainer;
spacer(1);
cout &lt;&lt; "age ? "      &lt;&lt;  '\n';
cin  &gt;&gt; intcontainer; strnumber.age      = intcontainer;
spacer(1);
cout &lt;&lt; "grade ? "    &lt;&lt;  '\n';
cin  &gt;&gt; intcontainer; strnumber.grade    = intcontainer;
spacer(1);
</code></pre>

<p>can be made into a method perhaps called <code>initFromPrompt</code> that initializes the current <code>Student</code> instance. Also, your "container" input pattern doesn't need to exist. For instance, for <code>grade</code>, simply</p>

<pre><code>cin &gt;&gt; strnumber.grade;
</code></pre>

<p>This:</p>

<pre><code>main();//restarts the process;
</code></pre>

<p>is misdesigned. You definitely don't want to be calling <code>main</code> yourself, for many reasons - including recursion. If you want to "restart the process", you should make some kind of top-level loop.</p>

<p>This:</p>

<pre><code>ifstream myfile ("datastore.txt");//opens the file;
if (myfile.is_open())
</code></pre>

<p>is somewhat of an anti-pattern. This kind of code is going to lead to silent errors. Instead, read about how to enable <code>std::ios::failbit</code> so that you get exceptions from bad stream calls.</p>
    </div>