<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One thing I'd change is to not use <code>args</code> everywhere. You use the name "n" in the problem description, so I'd use that in the program as well. Reading <code>args</code> only once, to store the value in <code>n</code>.</p>
<p>Your <code>getones</code> function is rather lengthy and inefficient, taking O(n<sup>2</sup>) time to build the string. Although the rest of the program can't handle large n anyway, so efficiency doesn't really matter here. (And maybe the conversion to <code>int</code> takes quadratic time, not sure.)</p>
<p>Here's a shorter solution:</p>
<pre><code>e = sum(map(log10, range(int('1' * n), 0, -n)))
print('%.2fe%d' % (10**(e % 1), e // 1))
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; n = 9
&gt;&gt;&gt; from math import log10
&gt;&gt;&gt; e = sum(map(log10, range(int('1' * n), 0, -n)))
&gt;&gt;&gt; print('%.2fe%d' % (10**(e % 1), e // 1))
9.22e93968682
</code></pre>
<p>Comparison with yours (<a href="https://repl.it/repls/JealousWornKeyboardmapping#main.py" rel="nofollow noreferrer">at repl.it</a>) for n=9, same result and mine's about three times as fast:</p>
<pre><code>n = 9
yours:
9.22e93968682
0:00:11.911943
mine:
9.22e93968682
0:00:03.964518
</code></pre>
<p>We have a different result for example for n=2:</p>
<pre><code>n = 2
yours:
1.03e4
0:00:00.011884
mine:
1.04e4
0:00:00.000085
</code></pre>
<p>The exact result is:</p>
<pre><code>&gt;&gt;&gt; math.prod(range(11, 0, -2))
10395
</code></pre>
<p>So I'd say yours isn't rounding correctly.</p>
    </div>