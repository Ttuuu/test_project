<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Simulate only the result</h2>
<p>A common problem in learning to program is over complicating the code. Complicated code is longer, harder to understand, and more prone to bugs. When the app is large even tiny over complications can lead to thousands of unneeded lines that must be tested and debugged.</p>
<p>All that matters is what comes out the other end of a function, how that is done does not matter.</p>
<p>Your code is way too complicated for what it needs to do. At its most simplest Rock paper scissors can be one line...</p>
<p><code>(["Tie ","P1 WINS with ","P2 WINS with "])[Math.random()*3|0]+ ((["Rock","Paper","Scissors"])[Math.random()*3|0])</code></p>
<h2>Rewrite</h2>
<p>The object <code>rps</code> is equivalent to yours. Calling <code>rps.play()</code> returns the same results, and is statistically identical to your results</p>
<pre><code>const rps = (() =&gt; {
    const rand3 = () =&gt; Math.random() * 3 | 0;
    const plays = [
        () =&gt; "rematch", 
        () =&gt; ({"1": rand3() + 1}), 
        () =&gt; ({"2": rand3() + 1})
    ];
    return { play() { return plays[rand3()]() } };
})();
</code></pre>
<p>You do not need to simulate the game mechanics, just the game results.</p>
<p>There are 9 possible results.</p>
<ul>
<li>1/3rd are draws,</li>
<li>1/3rd player 1 wins and</li>
<li>1/3rd player 2 wins.</li>
</ul>
<p>When a player wins there is a 1 in 3 chance for any move type.</p>
<p>Thus a result first picks a random winner or draw, if there is a winner assign that player a random hand. There is no need calculate the hand the winner beats as that is inferred by the result.</p>
<h2>Example 2</h2>
<p>The following example produces a more readable result as an Example</p>
<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const rps = (() =&gt; {
    const moves = ["Rock", "Paper", "Scissors"];
    const rand = (range = 3) =&gt; Math.random() * range | 0;
    const win = (m = rand()) =&gt; `Player ${rand(2) + 1} ${moves[m]} beats ${moves[(m + 2) % 3]}`;
    const plays = [win, win, (m = moves[rand()]) =&gt; `${m} draws with ${m}`];
    return { play() { return plays[rand()]() } };
})();

var games = 20;
while (games --) { log(rps.play()) }



function log(textContent) {
    info.appendChild(Object.assign(document.createElement("div"),{textContent}));
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;code id="info"&gt;&lt;/code&gt;</code></pre>
</div>
</div>

    </div>