<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is an <a href="https://stackoverflow.com/a/62426116/15472">answer that I posted</a> to the original question on StackOverflow. It does away with regular expressions entirely, and uses a similar case-statement to the one suggested in <a href="https://codereview.stackexchange.com/a/244021/140466">@Henrik's answer</a></p>
<p>The original code performs 6 regular expression substitutions (which require 1 pass each), and fails on strings that contain the text <code>tempBracket</code> (as noted by @Kaiido in comments to the StackOverflow question).</p>
<p>This should be quicker because it makes a single pass, and requires no regular expressions at all. If all characters are ASCII, the <code>flip</code> function could be rewritten to use a look-up table, which would make it branch-free and potentially even faster.</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function flipBracketsDirection(str) {
  function flip(c) {
    switch (c) {
      case '(': return ')';
      case ')': return '(';
      case '[': return ']';
      case ']': return '[';
      case '{': return '}';
      case '}': return '{';
      default: return c;
    }
  }
  return Array.from(str).map(c =&gt; flip(c)).join('');
}    

// testcases
let test = (x) =&gt; console.log(flipBracketsDirection(x));
test('flip (it) anyway');
test(')hello(');
test('this has ]some text[');
test('flip }any{ brackets');
test('even with )))]multiple[((( brackets');</code></pre>
</div>
</div>

    </div>