<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, if you don't want recursion, you have to <a href="//en.cppreference.com/w/cpp/language/fold" rel="nofollow noreferrer">fold</a> instead.</p>

<pre><code>template &lt;class... Ts&gt;
constexpr auto coalesce(std::optional&lt;Ts&gt;&amp;... xs) {
    std::optional&lt;std::common_type_t&lt;Ts...&gt;&gt; r;
    ((xs &amp;&amp; (r = xs, true)) || ...);
    return r;
}
</code></pre>

<p>If you want to avoid even the single copy to the result, you need to change the result-type by using an optional <a href="https://en.cppreference.com/w/cpp/utility/functional/reference_wrapper" rel="nofollow noreferrer"><code>std::reference_wrapper</code></a> or going with a potentially null pointer.</p>

<pre><code>template &lt;class... Ts&gt;
constexpr auto coalesce(std::optional&lt;Ts&gt;&amp;... xs) noexcept {
    std::common_type_t&lt;Ts...&gt;* r = nullptr;
    ((xs &amp;&amp; (r = &amp;*xs, true)) || ...);
    if (r)
        return std::optional(std::ref(*r));
    return {};
}
</code></pre>
    </div>