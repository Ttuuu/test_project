<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I know this question has already been answered. But what I am showing here is just response to mickmackusa's answer, which OP called a "bonus". And so let OP and everyone wandering here in future can see one possible way to avoid spoiling global scope with constants as shown in mickmackusa's answer. The code below is his solution encapsulated in a static class:</p>

<pre><code>final class ErrorMessagesConverter
{
  private static $lookupTable = [
    'invalid' =&gt; '%s is not a valid %s',
    'missing' =&gt; '%s is a required %s - other functions have dependencies on it',
  ];

  private function __construct() {};

  public static function convert(iterable $input): array
  {
    $errors = [];
    foreach ($input as $type =&gt; $subtypes) {
        if (!\array_key_exists($type, self::lookupTable)) {
            continue;
        }
        foreach ($subtypes as $subtype =&gt; $entry) {               
            foreach ($entry as $string) {
                $errors[] = sprintf(self::lookupTable[$type], $subtype, $string);
            }
        }
    }
    return $errors;
  }
}
</code></pre>

<p>Shall I add that every <code>$subtypes</code> and <code>$entry</code> should be checked for being iterable before actualy iterating them...</p>
    </div>