<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Laravel coupling</h1>

<p>What a shame that you decided to tie this to laravel. You can decouple the entire library from laravel framework and only provide a bundle for laravel.</p>

<p><code>routeFromModel</code> accepts <code>Model</code>, but it can actually work for any object.</p>

<pre><code>$route = $router-&gt;getRoutes()-&gt;getByName($routeName);
if (!$route) {
  throw new RouteNotFoundException("Route $routeName not found");
}
$params = $route-&gt;parameterNames();
</code></pre>

<p>This means you really don't need the router, you just need something that gives you an "array of prameter names" based on a "name".</p>

<pre><code>return rtrim($urlGen-&gt;route($routeName, $data), '?');
</code></pre>

<p>Returning just the data here would make it more flexible.</p>

<h1>IoC</h1>

<p>You are pulling the RouteBuilder from DI container, why not have the container inject those deps. The way it is now, it could just be a static class with only static methods...</p>
    </div>