<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One more review, where I'd like to point out two Java pitfalls you should avoid in professional code.</p>

<h2>byte[] array to represent text</h2>

<p>Your <code>public static String toMorse(byte[] bytes) { ... }</code> method signature gets the input as byte array and only internally creates a <code>String</code> out of that array. </p>

<p>That's dangerous, as that <code>String(byte[] bytes)</code> constructor is documented as (emphasis mine):</p>

<blockquote>
  <p><code>public String(byte[] bytes)</code></p>
  
  <p>Constructs a new String by decoding the specified array of bytes <strong>using
  the platform's default charset</strong>. [...]</p>
</blockquote>

<p>That means that the same byte array will produce different results when running under different operating systems, as even nowadays there are still many different character encodings in use all over the world and all over the various operating systems.</p>

<p>A computational method like your morse converter should have a <code>String</code> argument instead of a <code>byte[]</code> array, then it's run-anywhere reproducible. If necessary, have your file I/O methods handle character encodings.</p>

<p>Rule of thumb: to pass around things that represent text, use <code>String</code>.</p>

<h2>Repeated String appending</h2>

<p>In your loop, you build the output string by repeatedly doing lines like</p>

<pre><code>morseText = morseText + morseChar[text.charAt(i) - 'a'];
</code></pre>

<p>That's ok if you know the text is rather short, but it will become quite slow for strings with thousands of characters.</p>

<p>Why? Every time the machine executes such a line, it creates a completely new <code>morseText</code> string, copying all the characters from the old morseText, plus the additional morse snippet. So, the first morse snippets get copied over and over and over again. To avoid that, use a single <code>StringBuilder</code>, and in every loop iteration, <code>append()</code> the morse snippet to that <code>StringBuilder</code>, and only after the loop, convert the <code>StringBuilder</code> to the <code>String</code> you want to return.</p>
    </div>