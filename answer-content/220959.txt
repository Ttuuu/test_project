<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Considering that you have four concrete test cases, it would be a good idea to put them in a docstring as <a href="https://docs.python.org/3/library/doctest.html" rel="nofollow noreferrer">doctests</a>.</p>

<p>Your iteration is awkward.  First of all, you never use <code>i</code>, so there is no need to call <code>enumerate()</code>.  A better way to conditionally skip ahead is to call <code>next()</code> on an <a href="https://docs.python.org/3/tutorial/classes.html#iterators" rel="nofollow noreferrer">iterator</a> over the phrase.</p>

<pre><code>def translate(phrase):
    """
    Translate the phrase from bird language.

    &gt;&gt;&gt; translate('hieeelalaooo')
    'hello'
    &gt;&gt;&gt; translate('hoooowe yyyooouuu duoooiiine')
    'how you doin'
    &gt;&gt;&gt; translate('aaa bo cy da eee fe')
    'a b c d e f'
    &gt;&gt;&gt; translate('sooooso aaaaaaaaa')
    'sos aaa'
    """
    phrase = iter(phrase)
    result = ""
    for letter in phrase:
        result += letter
        if letter in VOWELS:   # Vowel. Skip the next two characters.
            next(phrase)
            next(phrase)
        elif letter.isalpha(): # Consonant. Skip the next character.
            next(phrase)
    return result
</code></pre>

<p>A much more compact solution, though, would be to perform a <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expression</a> substitution.</p>

<pre><code>import re

def translate(phrase):
    return re.sub(r'([aeiouy])\1\1|([a-z])[aeiouy]', r'\1\2', phrase, flags=re.I)
</code></pre>
    </div>