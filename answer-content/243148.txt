<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I ended up choosing the use-query-params library and writing a class which has several useEffects to sync state.  One of the useEffects fires once at load, to update the redux state with the query params in the URL, and the others each hang off one aspect of the state and update the query params when that item changes.  It works on the general rule that if the state element is not the default state, it should not add (or remove) the related query param, but if it is not default, then add the query param.</p>

<p>I couldn't just replace the relevant redux state with state in the query params for various reasons: 1) It's useful to keep state elements using the same pattern throughout, for modularity, and so that they benefit from redux dev tools; 2) the query params don't remember the state when the url changes; 3) the state does not care whether or not the item is default - it will always write it.</p>

<p>For those interested, my implementation is here: <a href="https://github.com/adybaby/taskmaster/blob/master/src/HistoryWriter.js" rel="nofollow noreferrer">https://github.com/adybaby/taskmaster/blob/master/src/HistoryWriter.js</a> and a demo here: <a href="https://master.d29jyoh6h48gjm.amplifyapp.com/" rel="nofollow noreferrer">https://master.d29jyoh6h48gjm.amplifyapp.com/</a></p>
    </div>