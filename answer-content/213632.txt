<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code looks clean and is fairly readable. Good job!</p>

<p>Now here are some things you might want to consider:</p>

<ol>
<li><p>You use <code>_EXIT_WORDS</code> only to check membership. Instead of a list, use a set:</p>

<pre><code>_EXIT_WORDS = { 'leave', 'stop', 'quit' }
</code></pre>

<p>Set membership is <em>O(1)</em> whereas list membership is <em>O(n),</em> so it's just a good habit to be in.</p></li>
<li><p>You spent some time writing the function <code>_TruncateAtMax</code> but python ships with the <a href="https://docs.python.org/3.5/library/textwrap.html" rel="nofollow noreferrer"><code>textwrap</code></a> module that does pretty much what you want. The best code is code you don't have to write yourself...</p></li>
<li><p>Instead of a long explanatory comment after this line:</p>

<pre><code>PAD = len(OPTION_TEMPLATE) - 6 
</code></pre>

<p>why not just make it explicit:</p>

<pre><code>PAD = len(OPTION_TEMPLATE) - len('{0}{1}')
</code></pre>

<p>or use @belkka's excellent suggestion:</p>

<pre><code>PAD = len(OPTION_TEMPLATE.format('', ''))
</code></pre>

<p>And instead of calling it PAD, which <em>is</em> nicely short, see if you can name it something a bit more clear.</p></li>
<li><p>Instead of calling <code>key.ljust(space)</code> for each key, try just using the <code>space</code> as a parameter to the format string. You can do something like: <code>'{0:{1}}'.format(str, width)</code></p></li>
<li><p>Instead of re-computing the strings each time, why not compute the strings outside the loop and print them inside as needed?</p></li>
<li><p>Instead of raising <code>SystemExit</code> why not just <code>raise</code> again? You do it for <code>TypeError</code>...</p></li>
</ol>
    </div>