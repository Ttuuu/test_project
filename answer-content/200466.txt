<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>200_success had some great tips for how to make your solution better, however I'd suggest that you use the power of python for your solution. Sure, it won't be as fast as it could be, but if you are looking for speed you can use other languages.</p>

<p>Since we're dealing with permutations of numbers, we can use <code>itertools</code> to generate all permutations. And since we're dealing with times, we can use <code>datetime.datetime</code> and <code>datetime.time</code>. </p>

<p>The idea is simple: let <code>itertools</code> generate all permutations of length 6,  and let <code>datetime</code> check if they are valid time strings.</p>

<pre><code>import itertools
from datetime import datetime

inp = [0,9,5,5,5,5,5,5,5]

form = "%H:%M:%S"
possible = False
max_time = datetime.strptime("00:00:00", form).time()
for perm in itertools.permutations(inp, 6):
    time_string = "%d%d:%d%d:%d%d" % perm
    try:
        time_object = datetime.strptime(time_string, form).time()
        possible = True
        max_time = max(time_object, max_time)
    except: pass

if possible:
    print(max_time)
else:
    print("Impossible")
</code></pre>

<p>This should pass all test cases since it was literally designed to handle all cases. If it's an interview question they might want you to implement something of your own, but this is the most pythonic way I can think of. </p>
    </div>