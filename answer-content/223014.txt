<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I see some things that may help you improve your program.</p>

<h2>Use all of the required <code>#include</code>s</h2>

<p>The function <code>std::strchr</code> is used but its declaration is in <code>#include &lt;cstring&gt;</code> which is not actually in the list of includes.</p>

<h2>Be careful with signed and unsigned</h2>

<p>In the <code>interpret</code> routine, the code compares an <code>int i</code> to a <code>size_t</code> (because that's what is returned from <code>source.size()</code>) but <code>size_t</code> is unsigned and <code>int</code> is signed.  Instead, declare <code>i</code> as <code>size_t</code>.</p>

<h2>Copy and filter in one step</h2>

<p>It's not wrong, by any means, but I'd be inclined to copy and filter all at once rather than as two separate steps.  Here's one way to do that:</p>

<pre><code>std::vector&lt;char&gt; source; 
std::copy_if(std::istream_iterator&lt;char&gt;(std::cin), std::istream_iterator&lt;char&gt;(), 
             std::back_inserter(source), 
             [](char c) { return std::strchr("&lt;&gt;+-[],.", c); }
            );
</code></pre>

<p>It's not critical, of course, but this way it minimizes the number of times the vector is resized.  Also note that I've altered the program to read from <code>std::cin</code> instead of a file.  This way, it's possible to take input from a unnamed pipe, for example, adding to the flexibility of the program.</p>

<h2>Fix the bugs</h2>

<p>The current implementation doesn't check to see if it runs off the end of the <code>vector</code> while processing a brace and it doesn't check to see that <code>h</code> doesn't go out of bounds.</p>
    </div>