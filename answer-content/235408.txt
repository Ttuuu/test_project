<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Don't think your question belongs to this code review section. You would have gotten help much faster if had posted in stackoverflow instead. Anyway there are couple points you need to check.</p>

<ol>
<li><p>The <strong>CreateComments</strong> migration must have been updated (or at least there was another migration that changed the table) because the migration does not say anything about <code>user_id</code> column but the your model has that.</p></li>
<li><p><strong><em>Since comment is a polymorphic association, I'm not sure if it should be connected to user via a belongs_to to user</em></strong>. You are confused between the polymorphic association relation and the user's relation of a comment. They are different, a comment belongs to a Question (or Post, Thread... that why you have polymorphic here) and also belongs to a user who created the comment. Even better, you can have another polymorphic association for commenter (I will skip it to avoid adding noise to your question)</p></li>
<li><p><strong><em>Does this mean, I should create a foreign_key in the comments migration to a user?</em></strong> NO</p></li>
<li><strong><em>How can I go about getting the creator of the comment from the comment itself? Something like @comment.creator or @comment.user?</em></strong> They are just methods rails generated for you after you setup the association, so yeah you can have whatever you want</li>
</ol>

<p>Here is what I would do to get <code>comment.commenter</code> and <code>comment.commenter=</code> to work:</p>

<pre><code>class Comment &lt; ApplicationRecord
  belongs_to :commentable, polymorphic: true
  belongs_to :commenter, class_name: 'User', foreign_key: 'user_id'
end
</code></pre>
    </div>