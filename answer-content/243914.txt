<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If your series has many more rows than you have names to check (which should be the case), you should use the vectorized string functions in <code>pandas</code>.</p>
<pre><code>names = ["Mary", "Alan"]
names_re = "|".join(names)

df = pd.DataFrame({"A": ["Mary herself","Mary is mine","John himself","John is mine","Alan himself","Alan is mine"],
                   "B": [1,2,3,4,5,6]})
df[df["A"].str.contains(names_re)]

#               A  B
# 0  Mary herself  1
# 1  Mary is mine  2
# 4  Alan himself  5
# 5  Alan is mine  6
</code></pre>
<p>This is because iterating over a series using Python is much slower than these vectorized functions which are run in C. Note that the combined search string is a regex looking for any of the names. Don't do this if you a hundred names or more.</p>
    </div>