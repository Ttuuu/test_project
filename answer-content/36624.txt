<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You may want to consider writing to a CSV instead. It's a lot simpler and doesn't rely on the MS office interop. On the other hand you don't get an XLS file and you can't do formatting... Here is a standard chunk of code I wrote for DataTable to CSV conversion. Hope it helps!</p>

<pre><code>public static void SaveToCSV(string filePath, DataTable table)
{
    StringBuilder builderFile = new StringBuilder();
    StringBuilder builderRow = new StringBuilder();

    //First build the column headers
    for (int colIndex = 0; colIndex &lt; table.Columns.Count; colIndex++)
    {
        builderRow.Append(string.Format("\"{0}\"", table.Columns[colIndex].ColumnName.Replace("\"", "\"\"")));

        //Add a comma delimiter if it is not the last column
        if (colIndex &lt; table.Columns.Count - 1)
            builderRow.Append(",");
    }

    //Append the column headers to the main file
    builderFile.AppendLine(builderRow.ToString());

    for (int rowIndex = 0; rowIndex &lt; table.Rows.Count; rowIndex++)
    {
        builderRow.Clear();

        //Add all the items of the row
        for (int colIndex = 0; colIndex &lt; table.Columns.Count; colIndex++)
        {
            builderRow.Append(string.Format("\"{0}\"", table.Rows[rowIndex][colIndex].ToString().Replace("\"", "\"\"")));

            //Add a comma delimiter if it is not the last column
            if (colIndex &lt; table.Columns.Count - 1)
                builderRow.Append(",");
        }

        //Append this row to the main file
        builderFile.AppendLine(builderRow.ToString());
    }

    //Write the file
    File.WriteAllText(filePath, builderFile.ToString());
}
</code></pre>
    </div>