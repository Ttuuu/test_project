<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your algorithm seems to rely on randomness more than necessary.</p>

<p>One intuitively obvious conclusion is that the polygon with the largest area should be a simple polygon (i.e., no self-intersecting edges).  You have implemented that, which is a good start.</p>

<p>It it easy to calculate the area of any simple polygon exactly using the <a href="https://en.wikipedia.org/wiki/Shoelace_formula" rel="nofollow">shoelace formula</a>.  The algorithm is \$O(\left|V\right|)\$.  No Monte-Carlo simulation is needed.</p>

<p>The <a href="https://en.wikipedia.org/wiki/Convex_hull" rel="nofollow">convex hull</a> of the points should provide a skeleton of the solution.  The question is, what to do with the interior points?  Intuitively, I think that the solution should involve computing the convex hull of the remaining interior points, then interspersing the traversal of the outer polygon with the traversal of the inner polygon in such a way that the area is maximized.  Then, recurse as necessary if the inner polygon also has interior points.</p>
    </div>