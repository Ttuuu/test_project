<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Many of the things done are for showing alternatives. There are many ways to do things, each with pros and cons. I have also removed the parts that were not necessary so that there are less distractions.</p>

<p>Used a <code>&lt;div&gt;</code> with <code>style='display: none'</code> to provide a template of a todo task that I clone when adding a new task.</p>

<p>Instead of redoing the whole list each time you do anything, it now handles the changes that need to be made as they are needed.</p>

<p>Event delegation used so that the whole thing only needs 2 total event handlers as opposed to 1 + 2 times number of tasks.</p>

<p>I added <code>const done</code> and <code>todo</code> for clarifying the classes used to indicate those states.</p>

<p>Hopefully this is helpful in your learning journey, good luck.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const divTodo = document.getElementById('tasks');
const addBtn = document.getElementById('addTask');
const addInput = document.getElementById('addTaskText');
const taskTemplate = document.getElementById('taskTemplate').children[0];
const done = 'bg-success';
const todo = 'bg-warning';
let newIndex = 0;

const taskList = {};

// event delegation
divTodo.addEventListener('click', function(e) {
  const target = e.target;
  const row = target.parentNode.parentNode;
  if (target.type === 'checkbox') {
    const task = taskList[target.dataset.key];
    task.isDone = !task.isDone;
    target.checked = task.isDone;
    row.classList.toggle(done);
    row.classList.toggle(todo);
  } else if (target.type === 'submit') {
    delete taskList[target.dataset.key];
    divTodo.removeChild(row);
  }
});

const addTask = function(task, initial) {
  const newTask = {
    task: task,
    isDone: initial || false,
  };

  addElement(newTask);
  taskList[newIndex] = newTask;
  newIndex++;
};

const addElement = function(el) {
  const index = newIndex;
  const newRow = taskTemplate.cloneNode(true);
  const newCheckbox = newRow.querySelector('input[type=checkbox]');
  const newTask = newRow.children[1];
  const newButton = newRow.querySelector('button');

  newRow.classList.add(el.isDone == true ? done : todo);

  newCheckbox.checked = el.isDone;
  newCheckbox.dataset.key = `${index}`;

  newTask.textContent = el.task;

  newButton.dataset.key = `${index}`;

  divTodo.appendChild(newRow);
};

addTask("Make a dinner.", true);

addBtn.addEventListener('click', () =&gt; {
  if (addInput.value == "")
    return;
  addTask(addInput.value);
  addInput.value = "";
});</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
  &lt;title&gt;ToDo list&lt;/title&gt;

  &lt;!-- Bootstrap CSS --&gt;
  &lt;link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous"&gt;

&lt;/head&gt;

&lt;body class="bg-info"&gt;

  &lt;div class="row"&gt;
    &lt;div class="col-12 col-md-8 mt-2"&gt;
      &lt;input type="text" class="form-control" placeholder="Add task..." id="addTaskText"&gt;
    &lt;/div&gt;
    &lt;div class="col-12 col-md-4 mt-2"&gt;
      &lt;button class="btn btn-success btn-block" id="addTask"&gt;Add Task!&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div id="tasks"&gt;&lt;/div&gt;

  &lt;div id="taskTemplate" style="display : none"&gt;
    &lt;div class="row m-2 d-flex align-items-center rounded"&gt;
      &lt;div class="col-2 col-md-1"&gt;
        &lt;input class="form-control form-control-lg" type="checkbox"&gt;
      &lt;/div&gt;
      &lt;div class="col-7 col-md-8 text-justify"&gt;&lt;/div&gt;
      &lt;div class="col-3"&gt;
        &lt;button class="btn btn-danger btn-block p-1 p-md-2"&gt;Delete&lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>

    </div>