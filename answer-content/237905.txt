<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Using the head of larkey. I did some optimizations. Don't do the word loop if there are less than word_bits to shift and don't recalculate the values.</p>

<pre><code>void shr(uint64_t *const b, const uint16_t bits, const uint_fast8_t n)
{
    const uint8_t word_bits = sizeof (b[0]) * CHAR_BIT;
    const uint8_t word_shift = n / word_bits;
    const uint8_t bit_shift = n % word_bits;
    const uint8_t bit_rest = word_bits-bit_shift;
    const uint8_t num_words = bits/word_bits;
    assert(bits % word_bits == 0);

    if (n == 0) { return; }

    uint64_t *dst, *src;

    if(word_shift&gt;0) {
        for(dst = b+num_words-1, src = dst-word_shift; src&gt;=b; dst--, src--)
            *dst = *src;
        for(; dst&gt;=b; dst--)
            *dst = 0;
    }
    for(dst = b+num_words-1; dst&gt;b; dst--)
        *dst = (*dst&gt;&gt;bit_shift) | (dst[-1]&lt;&lt;bit_rest);
    *dst &gt;&gt;= bit_shift;
}
</code></pre>
    </div>