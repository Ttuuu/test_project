<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Concise Function Body</h1>

<p>The <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Function_body" rel="nofollow noreferrer">function body of an arrow function</a> can be concise.</p>

<p>For instance can <code>getMatrixColumns</code> shorten to</p>

<pre class="lang-js prettyprint-override"><code>export const getMatrixColumns = (a: number[][]) =&gt; a[0].length;
</code></pre>

<hr>

<h1>Method Name</h1>

<p>The method names <code>getMatrixColumns</code> and <code>getMatrixRows</code> let me expect that the the methods return a <code>number[]</code> instead of a <code>number</code>. </p>

<p>A better fit are <code>getMatrixColumnLength</code> and <code>getMatrixRowLength</code>.</p>

<hr>

<h1>Redundant Method Names</h1>

<p>Each method name expect <code>dotProduct</code> contains some how the word <em>matrix</em>.</p>

<p>It is sufficient if the methods are grouped in a <code>Matrix</code> module and have names like:</p>

<pre class="lang-js prettyprint-override"><code>// in matrix.js

export const columnLenghtOf = (a: number[][]) =&gt; 
    a[0].length;

export const rowLengthOf = (a: number[][]) =&gt; 
    a.length;

export const areValid = (a: number[][], b: number[][]) =&gt;
    columnLenghtOf(a) === columnLenghtOf(b);

/* ... */
</code></pre>

<hr>

<h1>Type Alias</h1>

<p><code>Matrix</code> could be a <a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-aliases" rel="nofollow noreferrer">type alias</a> for <code>number[][]</code>:</p>

<pre class="lang-js prettyprint-override"><code>// in matrix.js

type Matrix = number[][]

export const columnLenghtOf = (a: Matrix) =&gt; 
    a[0].length;
<span class="math-container">```</span>
</code></pre>
    </div>