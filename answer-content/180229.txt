<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a pretty literal translation of the algorithm. Let's first review the code itself and then check how we could reimagine it in python:</p>

<ul>
<li><p>I'm not sure why there is a declaration for <code>is_prime</code> or <code>isPrime</code> respectively. It can be inlined, making the code look as follows:</p>

<pre><code>for i in range(2, (number - 1)):
    if (number % i) == 0:
        return False
return True
</code></pre>

<p>This uses some minor formatting simplifications, like dropping extraneous parentheses.</p></li>
<li><p>The next step is then to actually optimize the program.<br>
In this instance, using <a href="https://docs.python.org/2.7/library/functions.html#xrange" rel="nofollow noreferrer"><code>xrange</code></a> over <code>range</code> is preferred, since you don't need to store the whole list of numbers before iterating over it, which is what <code>range</code> does. Note that this only applies for python 2.x, since <code>xrange</code> is not available for python 3.x</p></li>
<li><p>Mathematically it's proven, that the first prime divisor of a non-prime number appears before (or at<sub>hat tip to jwodder</sub>) the square root of said number. This can vastly reduce your searchspace:</p>

<pre><code>for i in xrange(2, math.sqrt(number) + 1):
</code></pre></li>
<li><p>Peilonrayz correctly added in a comment that the full code can be reformulated as a generator-comprehension using <code>all</code>, which is basically the "most python-y" implementation I've seen yet:</p>

<pre><code>all(number % i for i in range(2, int(number ** 0.5) + 1))
</code></pre></li>
</ul>

<p>Overall the code is stylistically fine. The Docstring could use a bit of love and the algorithm chosen doesn't lend itself well to python's idea of <strong>generators</strong> (research this concept, it's key to writing idiomatic and fast python).</p>

<p>Finally: Your java code looks messy to me, since it doesn't conform to the standard egyptian bracing style and is very spacious vertically. 
In the end this seems to boil down to personal preference of vertical space in code. </p>
    </div>