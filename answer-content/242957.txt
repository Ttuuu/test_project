<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Globals</h2>

<p>Generally speaking it's not a good idea to use globals like this. It harms re-entrance. What if you want to support two stopwatches at once, either in one UI or as a web server? Having globals like this will prevent that.</p>

<p>It also harms testability. It is more difficult to test methods that rely on global state than it is to test methods that are self-contained, having state passed to them either in an object context (<code>self</code>) or as method parameters.</p>

<p>One way to get around this is make a class with attributes <code>number_of_seconds</code> and <code>is_counting</code> (which I find would be more intuitive than <code>stop_counting</code>).</p>

<h2>Booleans</h2>

<p>This block:</p>

<pre><code>if stopCounting == False:
    numberOfSeconds += 1
    seconds.config(text=str(numberOfSeconds))
    seconds.after(1000, counting)
elif stopCounting == True:
    stopCounting = False
    numberOfSeconds = 0
    seconds.config(text=str(numberOfSeconds))
</code></pre>

<p>is more easily expressed as</p>

<pre><code>if stopCounting:
    stopCounting = False
    numberOfSeconds = 0
    seconds.config(text=str(numberOfSeconds))
else:
    numberOfSeconds += 1
    seconds.config(text=str(numberOfSeconds))
    seconds.after(1000, counting)
</code></pre>

<h2>Variable names</h2>

<p>They should be lower_snake_case, i.e. <code>start_button</code>.</p>
    </div>