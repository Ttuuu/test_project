<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strike>To me, that's exactly <a href="https://en.wikipedia.org/wiki/Bubble_sort" rel="nofollow noreferrer">Bubblesort</a>: it takes care the largest element moves to the end of the array, and then operates on <code>length-1</code> elements.</strike></p>

<p>Edit: this does look quite similar to Bubblesort, but - as a diligent reader noticed - is <strong>not</strong> <em>quite</em> Bubblesort, as the algorithm does <em>not</em> compare (and swap) <em>adjacent</em> elements (which indeed is the main characteristic of Bubblesort). If you replace <code>array[j] &gt; array[i]</code> with <code>array[j] &gt; array[j+1]</code>, you will get Bubblesort.</p>

<p>This implementation will fail if less than two input elements are given (0 or 1) - hint: the array is already sorted in these cases (just add an <code>if</code>).</p>

<p>A small improvement would be to add a flag in the <code>i</code> loop which records if any swapping happened at all - the outer <code>for</code> loop may terminate if the inner loop didn't perform any swaps. (Time) performance of Bubblesort is considered to be awful in comparison to other algorithms, but it must be noted it's the fastest algorithm on an already sorted array - if you add that flag ;) </p>
    </div>