<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>review</h1>

<h2>comparison</h2>

<p>no need to compare against True or False. <code>(begin == True)</code> can be easier expressed as <code>begin</code> and <code>(end == False)</code> as <code>not end</code>. and comparison chaining is done with <code>and</code>, not <code>&amp;</code>(bitwise and)</p>

<h1>iteration</h1>

<p>In python, it is very seldomly needed to iterate over the indices. Instead of <code>for y in range(len(array)):</code> and <code>for x in range(len(array[0]))</code>, you can do</p>

<pre><code>for row in array:
    ...
    for x, element in enumerate(row):
        if element == 0 and begin and not end:
</code></pre>

<h1>alternative solution</h1>

<p>try to vectorise as much as possible. The easiest thing to do is count the zeroes in front and at the back:</p>

<pre><code>def count_zeroes(array):
    return (array.cumsum(axis=1) == 0).sum(axis=1)

zeroes_front = count_zeroes(array)
</code></pre>

<p>and then the same for the reverse:</p>

<pre><code>zeroes_back = count_zeroes(test_data[:,::-1])
</code></pre>

<p>The amount each row needs to roll is:</p>

<pre><code>roll = (zeroes_front + zeroes_back) //2 - zeroes_front
</code></pre>

<blockquote>
<pre><code>array([ 0, -1, -2, -2])
</code></pre>
</blockquote>

<p>and then you apply this roll over each row:</p>

<pre><code>np.array([np.roll(row, r) for row, r in zip(test_data, roll)])
</code></pre>

<blockquote>
<pre><code>array([[0.   , 0.149, 0.064, 0.736, 0.   ],
       [0.   , 0.258, 0.979, 0.618, 0.   ],
       [0.   , 0.786, 0.666, 0.   , 0.   ],
       [0.   , 0.782, 0.954, 0.   , 0.   ]])
</code></pre>
</blockquote>

<p>in total:</p>

<pre><code>def centre(array):
    zeroes_front = count_zeroes(array)
    zeroes_back = count_zeroes(array[:,::-1])
    roll = (zeroes_front + zeroes_back) //2 - zeroes_front
    return np.array([np.roll(row, r) for row, r in zip(array, roll)])
</code></pre>
    </div>