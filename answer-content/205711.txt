<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'll try to help you on how you could improve your code here.
Keep in mind that I have no idea what is your current level in programming in general. You state that you started learning ruby, but you don't tell us about other languages.</p>

<h1>Random number generator</h1>

<p>This method is fine, but what you want is to avoid having to comment every line. Comments are usually needed when the code is not clear. We'll try to make its meaning more obvious.</p>

<p>Let's try first to find better names here. It can seem like a little detail, but it is pretty important if you want to be able to read it in the future.</p>

<p>Names are very hard to find, you want names that give the meaning of what you are doing, and not how you are doing it.</p>

<p>For instance <code>first_num</code> is not as good as <code>season</code>, or <code>season_number</code>, because it gives less information.</p>

<p>This is true for functions names too. The result of your <code>random_number_generator</code> is a string that you will use as a file name. Based on the function's name, you would expect to get an object that generates numbers.</p>

<p>Let's rename it to <code>random_file_name</code> for instance.</p>

<p>This would make us write this function</p>

<pre><code>def random_file_name
  season = rand(2..9)
  episode = rand(1..25)
  "#{two_chars(season)}#{two_chars(episode)}"
end
</code></pre>

<p>Did I mention it would be good to extract the logic of turning a number into a 2 characters string?</p>

<p>Let's create this <code>two_chars</code> function</p>

<pre><code>def two_chars(number)
  number.to_s.rjust(2, '0')
end
</code></pre>

<p>Calling <code>two_chars(1)</code> will take <code>1</code>, convert it to a string with <code>to_s</code> and fill the string with <code>0</code>s until the string's size is 2. This way we won't need this test <code>second_num &lt; 10</code>.</p>

<h1>Episode Picker</h1>

<p>In this function you are looping through all files in your folder; there is a more efficient way of doing it.</p>

<p>Plus you are calling <code>random_num_generator</code> several times in the same loop, and it will generate different filenames. This is probably not what you want: it could not find any file, or find several different files.</p>

<p>What you want is something looking like</p>

<pre><code>def pick_episode
  file = file_with_name(random_file_name)
  puts "You are watching Season: #{filename[0..1]} Episode: #{filename[2..3]}!"

  system %{open "/GitHub/videos/#{file}"}
end
</code></pre>

<p>I changed the function's name to <code>pick_episode</code> since that what it does.
What we do is find a random file, display that we are watching it, and open it.</p>

<p>Since you ask what is in this <code>file_with_name</code> function, here is how you could write it</p>

<pre><code>def file_with_name(filename)
  files = Dir["/GitHub/videos/#{filename}.{mkv,mp4,avi}"]
  raise "No file named #{filename}" if files.empty?
  raise "Several files: #{files}" if files.size &gt; 1

  files.first
end
</code></pre>

<p>Instead of looping through all files in the folder, we try to find a file that starts with the right name, and that has an extension amongst <code>mkv</code>, <code>mp4</code> and <code>avi</code>.</p>

<p>Then if no file is found, we raise an error.
If several files share the same prefix, we raise an error.</p>

<p>In the case we found exactly one file, we return its name.</p>

<p>If you find good names for your variables and functions, and you try to break your code in smaller pieces (functions), you will be able to look at it in 2 months and understand it clearly.</p>

<p>You could even go further and use some classes to have be even more explicit with the season and the episode numbers: for now, we compute them, turn them into a string, and extract them from a string later on when displaying it. But I think it would be a bit out of scope here. Tell me if you want me to go further this path.</p>

<p>Well, that is it. Asking questions here is a good way to improve your coding skills, the rest is just practice!</p>
    </div>