<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>GetList()</code>  </p>

<ul>
<li><p><code>SqlConnection</code>, <code>SqlCommand</code> and <code>SqlDataReader</code> are all implementing the <code>IDisposable</code> interface hence you should either call <code>Dispose()</code>  on that objects or enclosing them in a <code>using</code> block.  </p></li>
<li><p>You should use <code>var</code> instead of the concrete type if the right-hand-side of an assignment makes the concrete type obvious.<br>
E.g the line <code>SqlConnection con = new SqlConnection(ConStr);</code> we can see at first glance that the concrete type   is <code>SqlConnection</code> and therfor we should use <code>var con = new SqlConnection(ConStr);</code> instead.</p></li>
<li><p>Using abbreviations for naming things shouldn't be done because it makes reading and maintaining the code so much harder.  </p></li>
<li>Underscore-prefixed variablenames are usually used for class-level variables. Method-scoped variables should be named using <code>camelCase</code> casing hence <code>list</code> would be better than <code>_list</code> because Sam the maintainer wouldn't wonder about it.  </li>
<li>You return an <code>IList&lt;&gt;</code> which is good because coding against interfaces is the way to go.</li>
</ul>
    </div>