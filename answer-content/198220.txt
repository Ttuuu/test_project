<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't know Vue.js then I won't comment about that part.</p>

<p>Overall structure seems OK but maybe few things may be improved. The most obvious one is usage of CSS classes to apply styling without conveying any extra <em>semantic</em>. In your code <code>bright</code> class is applied to text to make it visually distinguishable but:</p>

<ul>
<li>Name describes the applied style instead of its meaning. If you later decide to use dimmed text then you also need to change class name (or to keep them out-of-sync).</li>
<li>It does not help screen readers to understand what its content is: effectively just a <em>sub-title</em>.</li>
<li>It's applied both to <code>&lt;p&gt;</code>, <code>&lt;span&gt;</code> and...<code>&lt;h3&gt;</code> reinforcing its usage as mere styling instead of carrying any semantic value.</li>
</ul>

<p>For the tagline I'd use a subheader or a specific class:</p>

<pre><code>&lt;h2&gt;{{ beer.name }}&lt;/h2&gt;
&lt;h2 class="subheader"&gt;{{ beer.tagline }}&lt;/h2&gt;
</code></pre>

<p>Alternatively:</p>

<pre><code>&lt;h2&gt;{{ beer.name }}&lt;/h2&gt;
&lt;p class="tagline"&gt;{{ beer.tagline }}&lt;/p&gt;
</code></pre>

<p>Note that you can use mixins to avoid CSS duplication then there is no reason to re-use the same class multiple times. Note that you're using <code>&lt;section&gt;</code> for the outer container and there it has little meaning, you may refactor your HTML code to be more <em>HTML5ish</em>:</p>

<pre><code>&lt;div id="app"&gt;
  &lt;header&gt;...&lt;/header&gt;
  &lt;main&gt;
    &lt;div v-if="beers.length === 0" class="loading"&gt;Loading...&lt;/div&gt;
    &lt;article v-for="beer in beers"&gt;
      &lt;aside&gt;
        &lt;img :src="beer.img" height="350" /&gt;
      &lt;/aside&gt;
      &lt;hgroup&gt;
        &lt;h2&gt;{{ beer.name }}&lt;/h2&gt;
        &lt;h2 class="subheader"&gt;{{ beer.tagline }}&lt;/h2&gt;
      &lt;/hgroup&gt;
</code></pre>

<p>Note that I'm using <code>&lt;main&gt;</code> as outer container and <code>&lt;article&gt;</code> with its own <code>&lt;hgroup&gt;</code>. What's for? Screen readers (and search engines) now know what each item is, the element conveys a semantic value and you can, also, directly use it in your CSS. Image is actually a <em>side content</em> of the <code>&lt;article&gt;</code> then you can use <code>&lt;aside&gt;</code>.</p>

<p>Refactored this we should look at the other <code>bright</code> elements. Your paragraphs are some text with a title. Exactly what <code>&lt;dl&gt;</code> is for:</p>

<pre><code>&lt;dl&gt;
    &lt;dt&gt;Description:&lt;dt&gt;
    &lt;dd&gt;{{ beer.desc }}&lt;/dd&gt;

    &lt;dt&gt;Tips from the brewer:&lt;dt&gt;
    &lt;dd&gt;...&lt;/dd&gt;
&lt;/dl&gt;
</code></pre>

<p>We finally arrived to the <code>&lt;blockquote&gt;</code>. In this case you're quoting a small inline tweet, also note that usually <code>&lt;blockquote&gt;</code> does not contain any extraneous content (besides a <code>&lt;footer&gt;</code> with the <code>&lt;cite&gt;</code> element). What I think is more appropriate for this citations (which are not a separate standalone <em>block</em> of text) is the <code>&lt;q&gt;</code> element:</p>

<pre><code>&lt;dd&gt;
    &lt;q cite="..."&gt;{{ beer.tips }}&lt;/q&gt;
&lt;/dd&gt;
</code></pre>

<p>Few important things here: quotation marks should not be part of your HTML, browser already does it (using the appropriate symbols for the current language - which BTW you should add to your HTML). Also note the <code>cite</code> attribute to reference the source (if it's a twitter than you have an URL to link). <code>&lt;cite&gt;</code> element can follow inside <code>&lt;dd&gt;</code>.</p>

<p>You can (and probably should) style <code>&lt;h3&gt;</code> directly without using <code>bright</code>. You may also like (if required by your CSS) to wrap each section with <code>&lt;section&gt;</code> (in this case you may have <code>&lt;hgroup&gt;</code> instead of the <code>&lt;dl&gt;</code> list).</p>

<p>You may consider to use microdata for some of your content (beer name and author of the tweet).</p>

<p>JS local variables in <code>addBeer()</code> can be <code>const</code> instead of <code>let</code>.</p>

<hr>

<p>I see absolutely no reason (for this kind of content) to do not support accessibility. It's more complex than one paragraph in this questionthen just to refer to official W3C documentation.</p>
    </div>