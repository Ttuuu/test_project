<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The main thing I notice is that <code>pair_braces</code> looks clumsy. For every left brace, it goes off to find the matching right brace, tracking nested braces along the way. This is very inefficient (N^2 if your input consists only of perfectly nested braces, e.g. <code>[[[[[[]]]]]]</code>). It also simply doesn't feel right.</p>

<p>A better way is to keep a stack of left brace positions. As you go through the tokens, you push the position for each left brace on the stack. For each right brace, you pop the most recent position off the stack and add it, together with the current position, to the pair vector. If the stack is empty when you try to pop, you have an unmatched right brace. If the stack is not empty when you're done, you have an unmatched left brace.</p>

<p>For code organization, my personal preference would be to not have an errors module, but instead put the errors with the module they belong to: TapeError goes into tape.rs, BraceError goes into parser.rs (where you also put the other tokenizer/parser functions).</p>

<p>Another thing: if you're just going to discard comment tokens, why have them in the first place? You could just skip them in the initial step.</p>

<p>I really like that you're using the <code>Wrapping</code> wrapper.</p>
    </div>