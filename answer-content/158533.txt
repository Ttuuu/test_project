<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Clearly non-working code, to be used as a guide.</p>
</blockquote>

<p>Basically when working with arrays, you copy the data from your <code>Worksheet.Range</code> to a memory-based array in your VBA. Make all changes and calculations to the data within that memory array. Then transfer the finished array data back to the worksheet.</p>

<p>Here is a VERY quick and VERY dirty conversion of your main loop to use an array. Obviously, I can't test the code against any data. The important parts of the array are at the top:</p>



<pre><code>Dim lastRow As Long
Dim lastCol As Long
lastRow = 500000                             'make this a calculation
lastCol = 15                                 'make this a calculation or fixed

'--- capture the data to a memory array
Dim mainData As Variant
Dim mainDataArea As Range
Set mainDataArea = wsMain.Range("A1").Resize(lastRow, lastCol)
mainData = mainDataArea
</code></pre>

<p>(You know better how to determine the <code>lastRow</code> and <code>lastCol</code>)</p>

<p>Then after you run your loop, you put it back:</p>



<pre><code>'--- copy the finished array back to the worksheet
mainDataArea = mainData
</code></pre>

<p>I did a quick global search and replace to at least get a start on your main loop for you to check out as a guide for what kinds of things you'd have to change.</p>



<pre><code>Const FIRSTNAME = 1   'column constants will make it far easier to debug
Const LASTNAME = 2
Const ADDRESS = 3
Const CITY = 4
Const STATE = 21
' . . .

Dim lastRow As Long
Dim lastCol As Long
lastRow = 500000                             'make this a calculation
lastCol = 15                                 'make this a calculation or fixed

'--- capture the data to a memory array
Dim mainData As Variant
Dim mainDataArea As Range
Set mainDataArea = wsMain.Range("A1").Resize(lastRow, lastCol)
mainData = mainDataArea

For i = 2 To lrMain
    Dim conUD As String                      'con=concatenate
    conUD = mainData(i, 21) &amp; mainData(i, 4) &amp; calcWeek
    '---should be mainData(i, STATE) &amp; mainData(i, CITY) &amp; calcWeek

    mainData(i, 21) = mainData(i, 5) &amp; mainData(i, 3)

    If mainData(i, 8) &lt;&gt; 0 Then
        mainData(i, 9) = mainData(i, 6) / mainData(i, 8)
    End If

    Dim velocityRow As Long
    If velocityLookup.Exists(conUD) Then
        velocityRow = velocityLookup.Item(conUD)
        tempLookup = wsVelocitymainData(velocityRow, 11)
    End If
    mainData(i, 10) = tempLookup

    tempLookup = wsVelocitymainData(velocityRow, 14)
    mainData(i, 11) = tempLookup

    If mainData(i, 9) &gt; mainData(i, 11) Then
        mainData(i, 12) = Round((mainData(i, 6) / mainData(i, 11)) / mainData(i, 10), 0.1)
    End If

    If mainData(i, 6) &gt; 0 Then
        If mainData(i, 12) &lt;&gt; "" Then
            mainData(i, 13) = mainData(i, 12) - mainData(i, 8)
        End If
    End If

    Dim conECD As String
    conECD = mainData(i, 5) &amp; mainData(i, 3) &amp; mainData(i, 4) &amp; calcWeek
    If velocityLookup.Exists(conECD) Then
        velocityRow = velocityLookup.Item(conECD)
        tempLookup = wsVelocitymainData(velocityRow, 12)
    End If

    If mainData(i, 13) &lt;&gt; "" Then
        If tempLookup &lt;&gt; 0 Then
            mainData(i, 14) = Int(mainData(i, 13) / tempLookup)
        End If
    End If

    If velocityLookup.Exists(conECD) Then
        velocityRow = velocityLookup.Item(conECD)
        tempLookup = wsVelocitymainData(velocityRow, 13)
    End If
    If mainData(i, 14) &gt; tempLookup Then
        If mainData(i, 14) &lt;&gt; "" Then
            mainData(i, 15) = tempLookup
        End If
    Else
        mainData(i, 15) = mainData(i, 14)
    End If

    If mainData(i, 14) = "" Then
        If mainData(i, 11) = "" Then
            mainData(i, 26) = ""
        Else
            mainData(i, 26) = Round(mainData(i, 14) * mainData(i, 11), 0)
        End If
    End If

    tempLookup = Application.Index(indexQuantity, Application.Match((mainData(i, 21) &amp; "LIBERTY") _
                                                                    , matchQuantity, False))
    mainData(i, 24) = tempLookup

    mainData(i, 18) = mainData(i, 24) - Application.SumIf(.Range(mainData(1, 21), mainData(i, 21)), _
                                                          mainData(i, 21), .Range(mainData(1, 26), mainData(i, 26)))

    If velocityLookup.Exists(conUD) Then
        velocityRow = velocityLookup.Item(conUD)
        tempLookup = wsVelocitymainData(velocityRow, 13)
    End If
    If mainData(i, 26) &gt; tempLookup Then
        mainData(i, 28) = tempLookup
    Else
        mainData(i, 28) = mainData(i, 26)
    End If

    If mainData(i, 18) &lt; 0 Then
        mainData(i, 29) = "C"
        mainData(i, 27) = ""
    Else
        mainData(i, 27) = mainData(i, 28)
    End If

    mainData(i, 31) = Application.SumIf(.Range(mainData(2, 1), mainData(lrMain, 1)), _
                                        mainData(i, 1), .Range(mainData(2, 27), mainData(lrMain, 27)))

    If mainData(i, 5) = "" Then
        mainData(i, 35) = ""
    Else
        mainData(i, 35) = Application.Index(indexVelocity1, _
                                            Application.Match(mainData(i, 5), matchVelocity1, False))
    End If

    If mainData(i, 6) = 0 Then
        mainData(i, 44) = 0
    Else
        mainData(i, 44) = Round(((((mainData(i, 6) / mainData(i, 11)) _
                                   / mainData(i, 10)) - mainData(i, 8)) / mainData(i, 35)), 0.1)
    End If

    If mainData(i, 6) = 0 Then
        mainData(i, 34) = 0
        mainData(i, 33) = 0
    Else
        mainData(i, 34) = Round(((((mainData(i, 6) / mainData(i, 11)) / _
                                   mainData(i, 10)) - mainData(i, 8)) / mainData(i, 35)) * mainData(i, 11), 0.1)
        If mainData(i, 34) &gt; 0 Then
            mainData(i, 33) = mainData(i, 34)
        Else
            mainData(i, 33) = 0
        End If
    End If

    mainData(i, 37) = 1 + calcWeek
    mainData(i, 38) = mainData(i, 5) &amp; mainData(i, 37)
    mainData(i, 39) = Application.Index(indexVelocity2, _
                                        Application.Match(mainData(i, 38), matchVelocity2, False))
    mainData(i, 40) = Round(((((mainData(i, 6) / mainData(i, 11)) * mainData(i, 39)) _
                              - mainData(i, 6)) - (mainData(i, 8) - mainData(i, 6))) / mainData(i, 35), 0.1)

    If mainData(i, 40) &lt; 0 Then
        mainData(i, 41) = 0
    Else
        mainData(i, 41) = mainData(i, 40)
    End If

    mainData(i, 42) = mainData(i, 41) - mainData(i, 33)

    If mainData(i, 11) &lt; mainData(1, 44) Then
        mainData(i, 45) = 0
        mainData(i, 32) = mainData(i, 45)
    Else
        mainData(i, 32) = Application.Max(mainData(i, 33), mainData(i, 41))
        If mainData(i, 44) &lt; 0 Then
            mainData(i, 45) = ""
        Else
            mainData(i, 45) = mainData(i, 44)
        End If
    End If

    If mainData(i, 31) &lt; ShipMin Then
        mainData(i, 47) = 0
    Else
        mainData(i, 47) = mainData(i, 27)
    End If

    mainData(i, 46) = mainData(i, 1) &amp; mainData(i, 22) &amp; mainData(i, 47)

    If (i Mod 100) = 0 Then
        Debug.Print "Got to row "; i; " in "; Timer - MainTimer; " seconds."
    End If
Next i

'--- copy the finished array back to the worksheet
mainDataArea = mainData
</code></pre>
    </div>