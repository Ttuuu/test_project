<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just a little improvement of in the code extending from JvR's answer: I think it's possible to get rid of the else if since you're throwing exceptions for invalid inputs. I do agree with JvR in using a specific subtypes for exceptions. But I think it's best if you create your own exception extending from IllegalArgumentException like so:</p>

<pre><code>public class InvalidCalculatorInputException extends IllegalArgumentException{
    public InvalidCalculatorInputException(String message){
        super(message);         
    }
}
</code></pre>

<p>Also, I think it's best if you separate the logic for handling the exceptions from the power method. This is to make the power method more readable.
Applying all the things I've mentioned, this is my refactored version of your MyCalculator class:</p>

<pre><code>class MyCalculator {
    long power(int base, int exponent) {
        checkIfInputsAreValid(base, exponent);
        return (long) Math.pow(base, exponent);
    }

    private void checkIfInputsAreValid(int base, int exponent){
        if(base ==  0 &amp;&amp; exponent == 0)
            throw new InvalidCalculatorInputException("The base and the exponent should not be both 0.");
        if(base &lt; 0 || exponent &lt; 0)
            throw new InvalidCalculatorInputException("Either base or exponent should not be negative. Base is " + base + "; exponent is " + exponent);
    }
}
</code></pre>
    </div>