<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Stylistically, I think you have gone overboard in your use of ternaries.  It leads to long lines of code that are hard to read and jamed full of logic steps.</p>

<p>You also have a lot of variable assignement going on that simple doesn't need to happen.</p>

<p>You could REALLY simplify your code to something like:</p>

<pre><code>$valHelper = new validation();

if(empty($params['message'])) {
   // input error condition
   // fail out
}

if(false === $valHelper-&gt;validateMessageTextLength($params['message'])) {
   // input error condition
   // fail out
}

// Actually populate $message now
// Use whatever you logic is around transforming $params['message'] to $message
// which seem a bit unclear without more context to this code.
$message = ...; 

if(empty($params['subject'])) {
    // fail
}

// etc. for you other conditions
</code></pre>

<p>Or, if you build the right logic into your validation class, you could ideally get to something like</p>

<pre><code>$fields = $valHelper-&gt;getValidatedFields($params);

if(false === $fields) {
    // error in input
    // fail out with message to user
}

// work with $fields data
</code></pre>

<p>Where you can pass the parameters to a single method and get returned either a false (or structured error return information) or an array of fields that have all been validated (or perhaps even cleaned/sanitized if you want further extend the functionality of the class).</p>
    </div>