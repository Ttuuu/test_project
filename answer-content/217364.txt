<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The solution 1 is still a repeated multiplication. The only difference is that the multiplication is implemented as a repeated addition:</p>

<pre><code>    for (let j = 1; j &lt; x; j++) {
        tmp += res;
    }
</code></pre>

<p>is a very long way to say</p>

<pre><code>    tmp = res * x;
</code></pre>

<p>and obviously it doesn't make the code any faster.</p>

<hr>

<p>The second solution is <em>almost</em> correct. It fails for negative <code>y</code> (negative is still integer!), and the handling of <code>pow2(0, 0)</code> is questionable.</p>

<p>Besides that, try to avoid the recursion; recursive calls are expensive, and the goal of the exercise is to achieve the maximal speed. There does exist a true honest-to-goodness iterative algorithm.</p>
    </div>