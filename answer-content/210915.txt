<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>There is a bug</h1>

<p>You need to run the script several times to remove all empty elements.</p>

<h2>Two points</h2>

<ol>
<li><p>You say remove empty tags that contain <code>""</code> or a single space <code>"&amp;nbsp;"</code>. Does that include <code>" "</code> or <code>"  "</code> two or more spaces. What about other white space characters?</p></li>
<li><p>Your element removal is order dependent because you use <code>getElementsByTagName</code> which returns a live list.</p>

<p>Consider the html <code>&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</code>  You first check all the <code>p</code> tags which fail the empty test, then you test the <code>span</code> tags which passes and you get <code>&lt;p&gt;&lt;/p&gt;</code> which is, by your definition, empty and should have been removed.</p>

<p>On the other hand the html <code>&lt;span&gt;&lt;p&gt;&lt;/p&gt;&lt;/span&gt;</code> will first remove the <code>p</code> then remove the <code>span</code>. </p>

<p>The removal process is order dependent. Not what your question indicates.</p></li>
</ol>

<h2>Changes</h2>

<p>For the first point you could use <code>element.textContent</code> to check for empty elements. It will ignore the HTML and convert the <code>&amp;nbsp;</code> to a space for you. You could even use <code>element.textContent.trim()</code> and thus get all blank elements (like the pseudo-class <code>:blank</code> (Which has very limited support FF only))</p>

<p>This also covers the second point.</p>

<h3>Example Mark and remove</h3>

<p>To reduce the DOM calls you can mark and remove deleting the marked elements only.</p>

<pre><code>const isNotMarked = el =&gt; {
    while (el &amp;&amp; el.parentNode &amp;&amp; !el.parentNode.marked) {
       el = el.parentNode;
       if (el.marked) { return false }
    }
    return true;
}
[...document.querySelectorAll("span, p, strong")]
    .filter(el =&gt; el.textContent.trim() === "" &amp;&amp; isNotMarked(el) ? el.marked = true : false)
    .forEach(el =&gt; el.parentNode.removeChild(el));
</code></pre>

<h3>Example simple brute force</h3>

<p>Mark and remove saves you attempting to delete already deleted elements but you may not care, as the shorter form, is a two liner, and thus could be argued to be the better solution.</p>

<pre><code>document.querySelectorAll("span, p, strong")
    .forEach(el =&gt; el.textContent.trim() === "" &amp;&amp; el.parentNode.removeChild(el))
</code></pre>

<p>The following snippet shows the HTML after using your function and then the two example functions </p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>   /*================================================================================= 
OP ver modified for example
 =================================================================================*/

var ps = cleaned.getElementsByTagName('p'),
    spans = cleaned.getElementsByTagName('span'),
    strongs = cleaned.getElementsByTagName('strong');

    for (let el of ps) { cleaner(el); }
    for (let el of spans) {  cleaner(el); }
    for (let el of strongs) { cleaner(el);  }

    function cleaner(el) {
        if (el.innerHTML == '&amp;nbsp;' || el.innerHTML == '') {
            el.parentNode.removeChild(el);
        }
    }
    content.textContent = cleaned.innerHTML;




/*================================================================================= 
 Mark and remove
 =================================================================================*/
const isNotMarked = el =&gt; {
    while (el &amp;&amp; el.parentNode &amp;&amp; !el.parentNode.marked) {
       el = el.parentNode;
       if (el.marked) { return false }
    }
    return true;
}
[...cleanerClean.querySelectorAll("span, p, strong")]
    .filter(el =&gt;  el.textContent.trim() === "" &amp;&amp; isNotMarked(el) ? el.marked = true : false)
    .forEach(el =&gt; el.parentNode.removeChild(el));

contentA.textContent = cleanerClean.innerHTML;



/*================================================================================= 
 Brute force remove
 =================================================================================*/
simplerClean.querySelectorAll("span, p, strong")
    .forEach(el =&gt; el.textContent.trim() === "" &amp;&amp; el.parentNode.removeChild(el))

contentB.textContent = simplerClean.innerHTML;</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>#content {
   display: block;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;div id="cleaned" style="display:none;"&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;text&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/p&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;text&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
&lt;/div&gt;  
&lt;fieldset&gt;
&lt;legend&gt;Original OPs script &amp; Resulting HTML&lt;/legend&gt;
&lt;code id = "content"&gt;&lt;/code&gt;
&lt;/fieldset&gt;


&lt;div id="cleanerClean"  style="display:none;"&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;text&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/p&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;text&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
&lt;/div&gt;  

&lt;fieldset&gt;
&lt;legend&gt;Mark and remove&lt;/legend&gt;
&lt;code id = "contentA"&gt;&lt;/code&gt;
&lt;/fieldset&gt;

&lt;div id="simplerClean"  style="display:none;"&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;text&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/p&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;text&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;p&gt;text&lt;/p&gt;
&lt;/div&gt;  

&lt;fieldset&gt;
&lt;legend&gt;Brute force remove&lt;/legend&gt;
&lt;code id = "contentB"&gt;&lt;/code&gt;
&lt;/fieldset&gt;</code></pre>
</div>
</div>

    </div>