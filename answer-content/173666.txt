<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First look -</p>

<p><code>generateID()</code> should also <code>addID()</code> automatically. This will make c-tor much more simple.</p>

<hr>

<p>One note for this:</p>

<pre><code>  static unsigned long generateID() // Generate a valid ID
  {
    static unsigned long id = 0;

     while (Foo::isIDUsed(id)) // If all ID are taken, create an infinite loop!
        ++id;

     return id;
  }
</code></pre>

<p><code>id</code> variable is static. This means it it accessed using lock + semaphore or probably is atomic.</p>

<p>Why not move the <code>id</code> inside the class?</p>

<hr>

<p>About this:</p>

<pre><code>  static bool isIDUsed(unsigned long id)
  {
    return s_usedID.count(id) == 1 ? true:false;
  }
</code></pre>

<p>you do not need "? true : false", this is just fine:</p>

<pre><code>  static bool isIDUsed(unsigned long id)
  {
    return s_usedID.count(id) == 1;
  }
</code></pre>

<p>I am not <code>std::set</code> expert, but I think if you need to find if value is in set you can use:</p>

<pre><code>  static bool isIDUsed(unsigned long id)
  {
    return s_usedID.find(id) != s_usedID.end();
  }
</code></pre>

<hr>

<p>Finally, if you have C++11, you can clean up things some more, including you might remove constructor and use default generated constructor.</p>

<hr>

<p>And really final notes - why not move this ID thing a separate class, then you include it in "user" class via inheritance or via static member. Then the user class will not need to have user destructor at all.</p>

<hr>

<p>If you have questions, I can give you examples.</p>
    </div>