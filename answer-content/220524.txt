<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>I recommend that you not store <code>htmlspecialchars()</code> values as a general practice.  Of course you can if you wish, but I prefer to keep raw values in the db as a base representation of the data and then only manipulate the value when needed and in the manner required for the given task.</p></li>
<li><p>You are (conditionally) calling <code>slugify()</code> twice on the <code>$_GET["title"]</code> value; this is in breach of DRY coding practices.  You should calling it once at most.  If this were my project, I don't think that I would allow the call of <code>slugify()</code> (or the trip the database for that matter) at all if the <code>title</code> is empty.  I don't know if the identical title-slug check is necessary to perform -- it looks like extra work.  If you want to validate the title and check if it is a slug... rather than running the multiple <code>preg_replace()</code> calls in that custom function and comparing the return value to the input, just make a single <code>preg_match()</code> call to make sure it contains only valid letters and complies with your length requirements.</p></li>
<li><p>Because I believe you can rely on the existence of <code>$_POST["title"]</code>, <code>empty(trim($title)</code> can be written as <code>!trim($title)</code> for the same effect with one less function call.</p></li>
<li><p>Again, to espouse DRY coding practices, don't call <code>strlen($title)</code> twice, cache the value and check the variable.</p></li>
<li><p>All string validations should pass before making any trips to the db for best performance.  You are check the body length too late.  You should write it before the SELECT query.</p></li>
</ul>
    </div>