<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First, <code>run</code> should be a Boolean value (<code>True</code> or <code>False</code>). <code>1</code> and <code>0</code> work, but they're far less clear. Note how much more sense this makes:</p>

<pre><code>. . .
run = True

while (run):
   text = input('Enter the next Fibonacci number &gt;')
   if (text.isdigit()):
      t = int(text)
      if t == prev_2 + prev_1:
         if t &lt;= 50:
            prev_2 = prev_1
            prev_1 = t
         else:
            print('Well done')
            run = False
      else:
         print('Try again')
         run = False
   else:
      print('Try again')
      run = False
</code></pre>

<hr>

<p>Instead of using a <code>run</code> flag though to exit the loop, I think it would be a lot cleaner to just <code>break</code> when you want to leave:</p>

<pre><code>while (True):
   text = input('Enter the next Fibonacci number &gt;')
   if (text.isdigit()):
      t = int(text)
      if t == prev_2 + prev_1:
         if t &lt;= 50:
            prev_2 = prev_1
            prev_1 = t
         else:
            print('Well done')
            break
      else:
         print('Try again')
         break
   else:
      print('Try again')
      break
</code></pre>

<hr>

<p>Instead of doing a <code>isdigit</code> check, you can just catch the <code>ValueError</code> that <code>int</code> raises:</p>

<pre><code>while (True):
    text = input('Enter the next Fibonacci number &gt;')
    try:
        t = int(text)
    except ValueError:
        print('Try again')
        break

    if t == prev_2 + prev_1:
        if t &lt;= 50:
            prev_2 = prev_1
            prev_1 = t
        else:
            print('Well done')
            break
    else:
        print('Try again')
        break
</code></pre>

<p>This goes with Python's "It's better to ask for forgiveness than permission" philosophy.</p>

<hr>

<p>Some other things:</p>

<ul>
<li><p>Don't put parenthesis around the condition of <code>while</code> and <code>if</code> statements unless you <em>really</em> feel that they help readability in a particular case.</p></li>
<li><p>You don't need to have <code>t</code> assigned outside of the loop. I'd also give <code>t</code> a better name like <code>user_input</code>:</p>

<pre><code>prev_2 = 1
prev_1 = 0

# Run while loop to prompt user enter Fibonacci number
while True:
    text = input('Enter the next Fibonacci number &gt;')
    try:
        user_input = int(text)
    except ValueError:
        print('Try again')
        break

    if user_input == prev_2 + prev_1:
        if user_input &lt;= 50:
            prev_2 = prev_1
            prev_1 = user_input
        else:
            print('Well done')
            break
    else:
        print('Try again')
        break
</code></pre></li>
</ul>
    </div>