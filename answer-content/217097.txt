<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There’s no real harm in displaying an empty string when there is no airport code. Write the Jsx once and the line where you try to display the location.airport_code, just check if it exists and display it in that case only. With React, ternary operator is your friend: </p>

<p>I believe you can do this like:</p>

<pre><code>renderLocation() {
    const filteredLocations = this.props.locations.filter(location =&gt; {
      return !location.name.match(/[A-Z0-9]+$/);
    });

    return filteredLocations.map(location =&gt; {
        return (
          &lt;div key={location.id}&gt;
            &lt;div className="location"&gt;
              &lt;h1&gt;
                {location.name} {location.airport_code ? location.airport_code : ''}
              &lt;/h1&gt;
              &lt;div className="location-secondary-info"&gt;
                &lt;span&gt;
                  {location.airport_code ? 
                    &lt;i className="material-icons"&gt;airplanemode_active&lt;/i&gt; :
                    &lt;i className="material-icons"&gt;location_city&lt;/i&gt;
                  }  
                  {location.description}
                &lt;/span&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        );
</code></pre>

<p>and remove the if statement entirely. That will remove your duplication. My only critique of the sass is that you didn’t really utilize any nesting which could have made your code a bit cleaner, but some people are against heavy nesting anyways. An example of utilizing nesting would be like </p>

<pre><code>.location {
    &amp;:hover {
      ....
    },
     h1 { 
      ...
    }
 }
</code></pre>
    </div>