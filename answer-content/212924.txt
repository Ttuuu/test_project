<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Review points</h2>
<p>This code makes good use of the <code>const</code> keyword for values that are not re-assigned. That is refreshing to see.</p>
<p>Is the empty <code>country</code> property necessary?</p>
<h2>Addressing your question</h2>
<blockquote>
<p>Is there a better way</p>
</blockquote>
<p>I’d question what “better” in this case means to you- shorter, simpler, more performant?</p>
<p>Because you mentioned you are using lodash, the <a href="https://lodash.com/docs/4.17.5#meanBy" rel="nofollow noreferrer"><code>_.meanBy()</code></a> method could be used, along with <code>_.map()</code>.</p>
<p>One way would be to group items by year and continent by concatenating those values.</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const array = [
  {continent: 'Africa', country:'Algeria', year:'2018', value:10},
  {continent: 'Africa', country:'Algeria', year:'2017', value:15},
  {continent: 'Africa', country:'Algeria', year:'2016', value:2},
  {continent: 'Africa', country:'Egypt', year:'2018', value:20},
  {continent: 'Africa', country:'Egypt', year:'2017', value:1},
  {continent: 'Africa', country:'Egypt', year:'2016', value:20},
];
const groupedItems = _.groupBy(array, record =&gt; record.continent + '_' +  record.year);
const means = _.map(groupedItems, (group, key) =&gt; {
  return {
    continent: group[0].continent,
    country: '',
    year: group[0].year,
    value: _.meanBy(group, 'value')
  };
});

console.log('output: ', means);</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdn.jsdelivr.net/lodash/4/lodash.min.js"&gt;&lt;/script&gt;</code></pre>
</div>
</div>

<p>The <code>key</code> property could also be used to fetch the values for the <em>continent</em> and <em>year</em> of each group - perhaps using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" rel="nofollow noreferrer">array destructuringSection</a> and .</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const array = [
  {continent: 'Africa', country:'Algeria', year:'2018', value:10},
  {continent: 'Africa', country:'Algeria', year:'2017', value:15},
  {continent: 'Africa', country:'Algeria', year:'2016', value:2},
  {continent: 'Africa', country:'Egypt', year:'2018', value:20},
  {continent: 'Africa', country:'Egypt', year:'2017', value:1},
  {continent: 'Africa', country:'Egypt', year:'2016', value:20},
];
const groupedItems = _.groupBy(array, record =&gt; record.continent + '_' + record.year);
const means = _.map(groupedItems, (group, key) =&gt; {
  [continent, year] = key.split('_');
  return {
    continent,
    country: '',
    year,
    value: _.meanBy(group, 'value')
  };
});

console.log('output: ', means);</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdn.jsdelivr.net/lodash/4/lodash.min.js"&gt;&lt;/script&gt;</code></pre>
</div>
</div>

    </div>