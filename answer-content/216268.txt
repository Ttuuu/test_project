<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I am neither a C# nor Unity coder. With that in mind, here goes:</p>

<p>You don't seem to be following Microsoft's C# coding conventions, and it's not obvious to me what you are following. In the absence of some documented reason, I'd suggest going with the <a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions" rel="nofollow noreferrer">industry standard</a>.</p>

<p>I don't understand the logic of keeping <code>rend</code> as a "global" variable. </p>

<pre><code>private Renderer rend;

// ...

void Start()
{
    rend = gameObject.GetComponent&lt;Renderer&gt;();
    previousColor = rend.material.color;
    GameController = Controller.GetComponent&lt;GameController&gt;();
}
</code></pre>

<p>Why not just make <code>rend</code> a local var:</p>

<pre><code>void Start()
{
    var rend = gameObject...
}
</code></pre>

<p>Since the events being handled are "human scale" events, you can afford to repeat the call to <code>GetComponent</code> at the top.</p>

<p>I would suggest that you break your <code>RoundResultCoroutine</code> into smaller pieces: the rule of thumb about subroutines fitting on a single 25-line screen still applies. Certainly it seems like there is a part that makes the opponent's move, which could be a separate function, and a part that determines the outcome of play, which could be a separate function. So that area seems ripe for improvement.</p>

<p>In my opinion (which is worthless, since I'm not involved in your hiring decision) the "mathematical" approach to determining the result of play is quite nice. I would definitely suggest that you not change that part! You might want to include a better explanation of how/why it works, and maybe some notes about its efficiency...</p>

<p>There seems to be some other stuff missing. I don't see the declarations of the top-level objects, for instance. That makes it hard to suggest how you could be more OO. But you don't define any classes yourself, so that may be why you got dinged for not OO enough. Perhaps creating some kind of <code>GameResult</code> class would help? I really don't feel like it's needed. Try just cleaning up your non-OO code first.</p>
    </div>