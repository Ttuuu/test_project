<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Nice.</p>

<p>Here are some observations:</p>

<h2>consider using an <code>IntEnum</code>:</h2>

<p>This helps remove "magic" numbers from the source code.  (A year from now, will you remember that <code>if self.selected_type == 3</code> is a check to see if the mode is 'File'?)</p>

<pre><code>from enum import auto, IntEnum

class SoundType(IntEnum):
    NOTE = auto()
    DESIGN = auto()
    FILE = auto()
</code></pre>

<p>Then later use:</p>

<pre><code>for column, mode in enumerate(SoundType):
    Radiobutton(type_outer_frame,
                text=mode.name.lower(),
                width=6,
                variable=self.r_type,
                value=mode.value,
                command=self.select_type
                ).grid(
                    row=1, column=column, stick='w', pady=PADY_INNER_2)
</code></pre>

<p>or:</p>

<pre><code>if self.selected_type in (SoundType.NOTE, SoundType.DESIGNS):
    self.display_sampling_options()
</code></pre>

<h2>Use <code>pathlib</code> to get the filename</h2>

<pre><code>from pathlib import Path


sound_file = filedialog.askopenfile(
    title='Select sound file',
    filetypes=(('wav files', '*.wav'), ('all files', '*')))

file_name = Path(sound_file.name).name
</code></pre>

<h2>document</h2>

<p>I would document why you are ignoring an exception</p>

<pre><code>def stop(self):
    try:
        self.visualisation.event_source.stop()

    except AttributeError:
        # this exception can be ignored because ...
        pass

    self.stopped = True
</code></pre>

<h2>assert False, f'..message..'</h2>

<p>I've not seen this used before, and it seems odd to me.  I guess it makes sure you don't forget to add an <code>elif</code> block if you add a new mode, but let's you turn off the assertion.  I think I'd just raise RuntimeError or maybe NotImplementedError.</p>
    </div>