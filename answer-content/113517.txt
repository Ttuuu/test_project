<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Named tuples</strong></p>

<p><code>Business</code> is nothing short of a tuple where each attribute is named. Rather than going through the verbosity of writing everything out, you can just make it a <a href="https://docs.python.org/2/library/collections.html#collections.namedtuple" rel="nofollow"><code>namedtuple</code></a>:</p>

<pre><code>Business = namedtuple('Business', 'name address rating rating_count checkin_count')
</code></pre>

<p><strong>Managing resources</strong></p>

<p>For <code>make_request</code>, the preferred way to handle resources in Python is to use a context manager. For <code>urlopen</code>, we have <a href="https://docs.python.org/2/library/contextlib.html#contextlib.closing" rel="nofollow"><code>contextlib.closing</code></a>:</p>

<pre><code>def make_request(url):
    with closing(urlopen(url)) as response:
        return json.loads(response.read())
</code></pre>

<p>Do you need to wrap it in <code>Request</code>? Not sure that gives you anything.</p>

<p><strong>String formatting</strong></p>

<p>Prefer the <code>format()</code> syntax to the <code>%</code> syntax. That is:</p>

<pre><code>'Hello, {}'.format(name)
</code></pre>

<p>is better than:</p>

<pre><code>'Hello, %s' % name
</code></pre>
    </div>