<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Line iteration</h2>
<pre><code>    gb = f.readlines()
    locus = re.search('NC_\d+\.\d+', gb[3]).group()
    region = re.search('(\d+)?\.+(\d+)', gb[2])
    definition = re.search('\w.+', gb[1][10:]).group()

    for line in (gb):
        # ...
    end_pattern = re.search('[a,t,g,c]{1,9}', gb[-3])
</code></pre>
<p>can be</p>
<pre><code>next(f)
definition = re.search('\w.+', next(f)[10:]).group()
region = re.search('(\d+)?\.+(\d+)', next(f))
locus = re.search('NC_\d+\.\d+', next(f)).group()

gb = tuple(f)

for line in gb:
</code></pre>
<p>Since you need <code>gb[-3]</code>, you can't get away with a purely "streamed" iteration. You could be clever and keep a small queue of the last few entries you've read, if you're deeply worried about memory consumption.</p>
<h2>Debugging statements</h2>
<p>Remove this:</p>
<pre><code>    print(len(sequence))
</code></pre>
<p>or convert it to a logging call at the debug level.</p>
<h2>Compilation</h2>
<p>Do not do this:</p>
<pre><code>        pattern = re.compile('[a,t,g,c]{10}')
</code></pre>
<p>in an inner loop. The whole point of <code>compile</code> is that it can be done once to save the cost of re-compilation; so a safe option is to do this at the global level instead.</p>
    </div>