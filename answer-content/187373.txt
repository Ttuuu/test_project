<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Construction</h2>

<p>The construction of a <code>MyStream</code> object will proceed like this:</p>

<ol>
<li>Construct <code>std::ostream</code> part with pointer to not-yet-constructed <code>std::streambuf</code> part.</li>
<li>Construct <code>std::streambuf</code> part.</li>
<li>Construct <code>MyStream</code> part.</li>
</ol>

<p>Thus, suggestion: Reorder inheritance list like this:</p>

<p><code>struct MyStream : std::streambuf, std::ostream</code></p>

<h2><code>override</code> specifier</h2>

<p>Nitpick: Add <code>override</code> specifier for <code>overflow()</code> function:</p>

<p><code>std::streambuf::int_type overflow(std::streambuf::int_type c) override</code></p>

<h2><code>struct</code> vs <code>class</code></h2>

<p>Another nitpick. I'm noticing that you are using <code>struct</code> instead of <code>class</code>. It is subjective, but I like to distinguish between <code>struct</code> and <code>class</code> like this:</p>

<ul>
<li>If the resulting object will <em>mostly</em> be used by calling its methods - it's a <code>class</code>.</li>
<li>If the resulting object will <em>mostly</em> be used by accessing its fields - it's a <code>struct</code>.</li>
</ul>

<p>Thus, for <code>MyStream</code> I would use <code>class</code> instead of <code>struct</code>. But, as I said, it is subjective.</p>
    </div>