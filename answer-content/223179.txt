<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Pedantically, <code>if (snprintf(buff, sizeof(buff), format, ...) &gt;= SSIZEOF(buff)) goto err;</code> is an insufficient test.  Test for <code>&lt; 0</code> is also needed.</p>

<blockquote>
  <p>The <code>snprintf</code> function returns the number of characters that would have been written
  had <code>n</code> been sufficiently large, not counting the terminating null character, or a negative value if an encoding error occurred....
  C111 ยง7.21.6.5 3</p>
</blockquote>

<hr>

<p>Note that <code>ssize_t</code> itself is not in standard C. </p>

<hr>

<p>To cope with both issues, perform 2 sided test and drop using <code>ssize_t</code>.</p>

<pre><code>int i = snprintf(buff, sizeof(buff), format, ...);
if (i &lt; 0 || (unsigned) i &gt;= sizeof(buff)) goto err;
</code></pre>

<p>... or if <code>INT_MAX &lt;= UINT_MAX/2</code> (a <strong>very</strong> common implementation), code can cheat with a one sided test as <code>i&lt;0</code> coverts to a large <code>unsigned</code>.  Again no need for <code>ssize_t</code>.</p>

<pre><code>int i = snprintf(buff, sizeof(buff), format, ...);
if ((unsigned) i &gt;= sizeof(buff)) goto err;
</code></pre>
    </div>