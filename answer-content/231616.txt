<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Compiler Options and Warning Checking</h2>
<p>It might be a good idea to use the -wall compiler switch. It will provide warning messages that may indicate possible logic errors in some cases. When compiled with -wall this program yields the following warning messages:</p>
<blockquote>
<p>D:\ProjectsNfwsi\CodeReview\tictactoev1\main.c(89) : warning C4716: 'printBoard': must return a value<br>
D:\ProjectsNfwsi\CodeReview\tictactoev1\main.c(104) : warning C4716: 'clear': must return a value<br>
D:\ProjectsNfwsi\CodeReview\tictactoev1\main.c(115) : warning C4715: 'freeSpace': not all control paths return a value<br>
D:\ProjectsNfwsi\CodeReview\tictactoev1\main.c(133) : warning C4716: 'player': must return a value<br>
D:\ProjectsNfwsi\CodeReview\tictactoev1\main.c(142) : warning C4715: 'checkLine': not all control paths return a value<br>
D:\ProjectsNfwsi\CodeReview\tictactoev1\main.c(161) : warning C4716: 'winner': must return a value</p>
</blockquote>
<p>In some cases the functions should be declared <code>void</code> rather than int, in other cases there might be a bug when not all control paths return a value, this is certainly true in <code>freeSpace</code>.</p>
<h2>Global Variables</h2>
<p>Global variables make programs very, very difficult to write, read, debug and maintain. In the C programming language they can cause modules (other .c files) not link if the global variable is declared in multiple modules. Due to the nature of global variables, it is sometimes very difficult to find where they are changed in order to remove a bug.</p>
<p>There is a discussion about global variables in this <a href="https://stackoverflow.com/questions/484635/are-global-variables-bad">stackoverflow question</a></p>
<p>It is much better to pass a variables into functions where they are needed.</p>
<h2>Avoid Using <code>exit()</code></h2>
<p>For a number of reasons the use of the <code>exit()</code> function should be avoided. The <code>exit()</code> function should be used when there is a non-recoverable error in a program. Since it is not being used for this purpose in this program it should definitely be avoided. It would be much better if the functions <code>checkLine()</code> and <code>winner()</code> returned values that indicated status.</p>
    </div>