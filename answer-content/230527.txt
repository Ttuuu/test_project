<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are a few ways to programmatically get the docs, and one that I find cool to use is <a href="https://docs.python.org/3.5/library/inspect.html" rel="noreferrer"><code>inspect</code></a>.</p>

<p><code>inspect</code> allows you, among other things, to check what's in your file (module):</p>

<pre class="lang-py prettyprint-override"><code>import inspect
import sys

docs = {}  # a dictionary
module = sys.modules[__name__]  # Gets us a reference to the current module

for name, object in inspect.getmembers(module):
    # getmembers returns the name of the object, then the object itself.
    if inspect.isfunction(func):  # Filter the functions
        docs[name] = object.__doc__
</code></pre>

<p>This can be rewritten as a dictionary <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a>:</p>

<pre class="lang-py prettyprint-override"><code>module = sys.modules[__name__]
docs = {name: func.__doc__ for name, obj in inspect.getmembers(module) 
        if inspect.isfunction(obj)}
</code></pre>

<p>Then, this could be defined as a constant:</p>

<pre class="lang-py prettyprint-override"><code>module = sys.modules[__name__]
DOCS = {name: func.__doc__ for name, obj in inspect.getmembers(module) 
        if inspect.isfunction(obj)}

def whatis(command: str) -&gt; None:
    print(DOCS.get(command, "Not a valid command!"))
</code></pre>

<p><code>dict.get</code> allows to specify a default value if the key is not in the dict (here, the error message).</p>

<p>This shows an alternative to your implementation, but I would not use it myself, for it's not so clear at first glance. What I like about it, though, is to have a constant dictionary, for this module is concise enough:</p>

<pre class="lang-py prettyprint-override"><code>DOCS = {
    'ls' = ls.__doc__,
    'cd' = cd.__doc__,
    'tree' = tree.__doc__,
    'clear' = clear.__doc__,
    'whatis' = whatis.__doc__,
    'cat' = cat.__doc__,
}
</code></pre>
    </div>