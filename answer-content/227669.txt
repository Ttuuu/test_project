<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The naming seems consistent, that's great.  Also overall I don't have
much to complain about, for Java it reads pretty well.</p>

<hr>

<p><code>MerlinSource</code>:  I'd be a little bit concerned with the very hardcoded
and very specific selectors, especially since something like
<code>grid__col--20-80-80</code> seems like it could <em>very easily</em> change without
notice!  Maybe some safeguards would make sense, like first checking if
the requested element even existed (or by all means, checking for empty
strings)?</p>

<p>The builder pattern looks good.  For the whole <code>IntStream</code> mapping, of
course it's good that the document is only loaded once and is then
queried multiple times.  Is there a benefit of going from index to
<code>li:nth-child</code>, instead of e.g. finding all elements at that level and
returning an iterator?  Either way, checking that the book exists first
would probably be good?</p>

<p>Ah, also the URLs are configuration, but to change the selectors the
code will have to be recompiled - that could easily be abstracted out
though and also made configuration ... but I guess that happens rarely
enough.</p>

<p>Same for the constants, perhaps it would be easy enough to make them
configuration values too?</p>

<hr>

<p><code>BookService</code>:  Why's the <code>ActionType</code> passed as a <code>String</code>?  I'd
consider being more type safe and passing in objects directly, then
calling <code>toString</code> if the database layer can't do that itself.</p>

<p>Apart from that the three methods are largely the same, if they're more
coming, I'd consider some shared method here.</p>

<hr>

<p><code>CategorizedBookRankingService</code>:  The name
<code>bookstoreWith15CategorizedBooks</code> seems like it could easily be 14 or 16
books too?</p>

<p>I'm torn on <code>getSortedLinkedHashMapByValue</code>:  The name is basically
exactly what the implementation does.  But it also tells me <em>nothing</em>
what the purpose here is.  Also, it looks like <code>getTitleWithOccurrences</code>
already creates a map - maybe they could just be fused and
<code>getTitleWithOccurrences</code> explicitly returns a sorted map result
directly?</p>

<hr>

<p><code>AccountService</code>:  Only nitpick is that <code>encryptedAccount</code> should at
most be <code>hashedAccount</code>, it's not <em>encrypting</em> the password.  But good
that it does indeed hash it.
<a href="https://latacora.micro.blog/2018/04/03/cryptographic-right-answers.html#password-handling" rel="nofollow noreferrer">Consider scrypt too</a>
while you're at it.</p>

<hr>

<p><code>JSoupConnector</code>:  Is the wrapping into an <code>IllegalArgumentException</code>
useful?  It's not like the URL argument was necessarily invalid, there
might have been a number of network problems instead that can prevent
getting the document.</p>

<hr>

<p>The tests look good to me, especially since they're not actually
accessing the network.</p>
    </div>