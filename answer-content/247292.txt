<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Stop allocating memory:</p>
<ul>
<li>Don't copy vectors around, pass by const ref instead</li>
<li>Don't make new strings when a string_view will do</li>
<li>Don't make new vectors when you can reuse the old one</li>
<li>Don't make a string from a char*, just to turn it back into a char* (this one is very minor since you only do it once)</li>
<li>Output directly to avoid creating a temporary string in makeCSVLine</li>
</ul>
<p>With all that, here's what I came up with:</p>
<pre><code>#include &lt;fstream&gt;
#include &lt;string&gt;
#include &lt;string_view&gt;
#include &lt;vector&gt;

using std::string;
using std::string_view;
using std::vector;

void splitStr(string_view line, const char delimiter, vector&lt;string_view&gt;&amp; splitLine)
{
    splitLine.clear();
    for(;;) {
        std::size_t pos = line.find(delimiter);
        if (pos == string_view::npos) {
            splitLine.push_back(line);
            return;
        }

        splitLine.push_back(line.substr(0, pos));
        line = line.substr(pos+1, string_view::npos);
    }
}

template&lt;typename T&gt;
void makeCSVLine(T&amp; out, const vector&lt;string_view&gt;&amp; splitLine)
{
    out &lt;&lt;
        splitLine[0] &lt;&lt; ',' &lt;&lt;
        splitLine[1] &lt;&lt; ',' &lt;&lt;
        splitLine[3] &lt;&lt; ',' &lt;&lt;
        splitLine[4] &lt;&lt; ',' &lt;&lt;
        splitLine[5] &lt;&lt; ',' &lt;&lt;
        splitLine[6] &lt;&lt; ',' &lt;&lt;
        splitLine[10] &lt;&lt; ',' &lt;&lt;
        splitLine[9] &lt;&lt; ',' &lt;&lt;
        splitLine[11] &lt;&lt; ',' &lt;&lt;
        splitLine[7] &lt;&lt; ',' &lt;&lt;
        splitLine[32] &lt;&lt; '\n';
}

int main(int argc, char* argv[])
{
    if(argc &lt; 3)
    {
        exit(EXIT_SUCCESS);
    }

    const char* inPath = argv[1];
    const char* outPath = argv[2];

    std::ifstream inFile;
    std::ofstream outFile;

    inFile.open(inPath);
    outFile.open(outPath);

    vector&lt;string_view&gt; split;
    string line;
    while(std::getline(inFile, line))
    {
        splitStr(line, ';', split);
        if(split[3][0] == 'E' || split[3][0] == 'T')
        {
            makeCSVLine(outFile, split);
        }
    }
    inFile.close();
    outFile.close();
}
</code></pre>
    </div>