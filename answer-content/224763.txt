<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's at least one problem with this approach.</p>

<p>What happens if <code>Math.random()</code> generates a number that can be represented with just a few digits, like <code>0.25</code>? You've got only one random character in that case, not five. Instead of using the fractional part of a number, maybe it would make more sense to generate integers in the range 36^4 to 36^5-1, to ensure that you have exactly 5 base-36 digits. Or use zero for the lower end of the range and pad the result with zeros, if it's important that the first character can be 0.</p>

<p>Also, should these be uniform? A <code>z</code> is only half as likely to be generated as a <code>9</code>, due to only letters being transformed by uppercasing.</p>

<p>Aside from that, converting a string to an array and then back to a string feels a bit convoluted. You could write something like this to get the same result:</p>

<pre><code>Math.random().toString(36).substr(2, 5).replace(/./g,
        m =&gt; Math.random() &gt; 0.5 ? m.toUpperCase() : m)
</code></pre>
    </div>