<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2><a href="https://en.wikipedia.org/wiki/Separation_of_concerns" rel="nofollow noreferrer">Separation of concerns</a></h2>

<p>As you stated, the major edit in this iteration was adding a graphical presentation.The principle of Separation of concerns dictates (among other things) the <a href="https://en.wikipedia.org/wiki/Separation_of_content_and_presentation" rel="nofollow noreferrer">Separation of content and presentation</a>. So the proper design for this game would be to create a "game engine" that is responsible for the logic of the game and publishes an API. another API, the presentation API, would allow the same game engine to be plugged with different UI implementations. the <code>main()</code> method is usually the place where you construct the implementations (based on run time args, config files or the like) and make the necessary connections between the layers. </p>

<p>However, this is not the case here.  <code>ConnectFour</code> class initializes an instance of <code>GUI</code> and cannot work with any other UI. Furthermore, there are presentation aspects coded into the class. For example, the players' characters ('X' and 'O'), error messages (<code>columnInfo</code>)</p>

<h2>Naming conventions</h2>

<p><code>public void label_That_Tells_Player_What_Columns_They_Can_Pick_Or_Tells_Them_Who_Won_Function(int did_Someone_Win_One_For_Yes_Two_For_No_Other_For_Draw, int width, char symbol)</code></p>

<p>not only this name violates Java's <a href="https://en.wikipedia.org/wiki/Camel_case" rel="nofollow noreferrer">camelCase naming convention</a>. it is simply a bad name for a function/method in any programming language. first of all, the method name describes a label but doesn't say <em>what is being done</em> to the label (is it reading or writing to/from the label?). second, a rule of thumb states that method (and variable and class) name should not exceed 20+ characters. longer names do not add clarity. that's for documentation in comments. </p>

<p>regarding <code>did_Someone_Win_One_For_Yes_Two_For_No_Other_For_Draw</code> - you don't document the valid values of a variable in it's name. there are two better places to do that: 1) in comments, and 2) create an enum that restricts valid values and also gives meaningful names to each valid value.</p>
    </div>