<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>DB Design</h3>

<p>Your tables are not correctly normalized:</p>

<ul>
<li><code>codes.description</code> depends on <code>codes.code</code> â†’ requires a table with <code>codes.code</code> as primary key</li>
</ul>

<p>You are also missing constraints:</p>

<ul>
<li><code>ISIN.id</code> primary key</li>
<li><code>ISIN.name</code> unique key</li>
<li><code>additionalCredit.id, additionalCredit.code</code> primary key</li>
<li><code>codes.codeId, codes.code</code> primary key</li>
</ul>

<h3>Query Optimization</h3>

<p>mysql does not come with a <em>pivot</em>, so we need to use an <em>aggregate function</em> - in this case <code>min(..)</code> - instead. This way we can avoid the <em>union</em> of redundant <em>quasi</em> code duplication.</p>

<p><a href="https://dbfiddle.uk/?rdbms=mysql_5.7&amp;fiddle=0ace357464829a6bd81403900ab35936" rel="nofollow noreferrer">Fiddle</a></p>

<p>query..</p>

<pre><code>select isin
    , min(if(codeId = 8, description, null)) Type8
    , min(if(codeId = 9, description, null)) Type9
from (
    select codeId, code, description, ifnull(name1, name2) isin from (
        select codes.codeId, codes.code, codes.description, ISIN1.isin name1, ISIN2.isin name2
        from codes
        left join ISIN ISIN1 on ISIN1.code = codes.code
        left join additionalCredit on additionalCredit.code = codes.code
        left join ISIN ISIN2 on ISIN2.id = additionalCredit.id
    ) q1
) p1
group by isin
order by isin
;
</code></pre>

<p>yielding..</p>



<blockquote>
<pre class="lang-none prettyprint-override"><code>name              Type8                 Type9
AU0000XVGZA3      No Redemption         ETM - Waiting Close
GB0002634946      Partial Prerefunded 
US0378331005                            ETM - Principal Only
</code></pre>
</blockquote>
    </div>