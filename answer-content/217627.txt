<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Overall this code looks fine, except I don't see much for error handling. I see a <code>catch</code> block in the <code>putItemsFromIndexeddbOnMap()</code> function but it either outputs the stack or else the error. What happens if the server responses from the calls to <code>fetch()</code> yield client side errors (e.g. 403, 404, etc) or server-side errors (e.g. 500)? Should the user see a "friendly" message, informing him/her as to what happened?</p>

<p>There are a few simplifications mentioned below. You could also consider using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function" rel="nofollow noreferrer">asynchronous functions</a> along with the <code>await</code> operator on promises to remove the <code>.then()</code> blocks.</p>

<hr>

<p>This code makes decent use of arrow functions, but some of them can be simplified - for instance, after the <code>fetch()</code> call to get activity ids there is this line:</p>

<blockquote>
<pre><code>).then(response =&gt; { return response.json() }
</code></pre>
</blockquote>

<p>An arrow function with a single statement doesn't need curly brackets or a <code>return</code> statement - it can simply be:</p>

<pre><code>).then(response =&gt; response.json()
</code></pre>

<p>And similarly, there is an identical line after the call to <code>fetch()</code> for encoded polylines - that can also be simplified.</p>

<p>There is also an anonymous function that could be simplified using an arrow function:</p>

<blockquote>
<pre><code>.and(function(item) { return item.user_id === &lt;%= @user.id %&gt; })
</code></pre>
</blockquote>

<hr>

<p>There are a few anonymous functions that could be simplified to function references</p>

<p>For example:</p>

<blockquote>
<pre><code>.then(removeActivityIds =&gt; {
  db.activities.bulkDelete(removeActivityIds);
});
</code></pre>
</blockquote>

<p>Should be simplifiable to </p>

<pre><code>.then(db.activities.bulkDelete)
</code></pre>

<p>Though you might have to make a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Creating_a_bound_function" rel="nofollow noreferrer">bound function</a> with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind" rel="nofollow noreferrer"><code>.bind()</code></a></p>

<p>And this block: </p>

<blockquote>
<pre><code>db.activities.bulkPut(newEncodedPolylinesJson).then(_unused =&gt; {
      // pull all encoded_polylines out of IndexedDB
      putItemsFromIndexeddbOnMap();
    });
</code></pre>
</blockquote>

<p>Can be simplified to </p>

<pre><code>db.activities.bulkPut(newEncodedPolylinesJson)
    .then(putItemsFromIndexeddbOnMap); // pull all encoded_polylines out of IndexedDB
</code></pre>

<hr>

<p>On the line below, <code>Array.isArray()</code> seems to be the wrong place to check for an array:</p>

<blockquote>
<pre><code> if(Array.isArray(neededIds) &amp;&amp; neededIds.length === 0) {
</code></pre>
</blockquote>

<p>Given that it is returned from: </p>

<blockquote>
<pre><code>var neededIds = activityIdsJson.filter((id) =&gt; !primaryKeys.includes(id));
</code></pre>
</blockquote>

<p>And <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" rel="nofollow noreferrer"><code>Array.filter()</code></a> returns "<em>A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.</em>"<sup><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Return_value" rel="nofollow noreferrer">1</a></sup></p>

<p>So perhaps the check should really be on <code>activityIdsJson</code> to see if that is an array.</p>

<p><sup>1</sup><sub><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Return_value" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Return_value</a></sub></p>
    </div>