<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Redundant bytes</h3>
<p>What's confusing about your implementation is that you are using two extra bytes for each element enqueued, but those bytes are redundant.  You are adding a <code>size</code> byte both before and after each element, but only the "before" byte is ever used.  You should remove the "after" byte because it serves no purpose.</p>
<h3>Size byte is not large enough</h3>
<p>You only reserve room for a single byte to indicate the size of the element.  However, your <code>enqueue()</code> function takes <code>unsigned int size</code> as its argument.  Therefore, if <code>size</code> is greater than 255, your program will encode the incorrect value in the size byte and things will fail after that.  Either you should leave room for <code>sizeof(unsigned int)</code> bytes to encode the size, or you should limit the <code>size</code> argument to an <code>unsigned char</code> if you expect to only enqueue data smaller than 256 bytes.</p>
<h3>Miscellaneous</h3>
<ul>
<li><p>The field <code>occuSpace</code> is set but never used.  You should remove that field, because you can always compute the value as <code>bufSize - freeSpace</code> anyways.</p>
</li>
<li><p>The field <code>initialized</code> is set but never used.  It should either be removed, or you should check it in all your functions and return an error if the queue is not initialized.</p>
</li>
<li><p>Instead of returning <code>-5</code>, <code>-8</code>, and <code>-7</code> as error codes, you should define some error codes in your header and return them instead of hardcoded numbers.</p>
</li>
<li><p>Some functions such as <code>queue_init()</code> and <code>moveTail()</code> can't fail and always return 0.  You should either make those functions return <code>void</code> since they can't fail, or modify them to check for error conditions and possibly return an error code.  For example, in <code>queue_init()</code>, you could check for these errors:</p>
<ul>
<li><code>q == NULL</code></li>
<li><code>buf == NULL</code></li>
<li><code>bufSize == 0</code></li>
</ul>
</li>
<li><p>Instead of:</p>
</li>
</ul>
<blockquote>
<pre><code>#if !defined bool
typedef unsigned char bool;
#endif
</code></pre>
</blockquote>
<p>just do</p>
<pre><code>#include &lt;stdbool.h&gt;
</code></pre>
<p>You should also use <code>false</code> and <code>true</code> instead of <code>0</code> and <code>1</code>, for the functions that return <code>bool</code>.</p>
    </div>