<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In this type of problem (money handling), I would zealously focus on exceptional cases first and then ensure that the code is well structured and easy to understand.</p>

<p>First thing that hit me was that you have no check for negative number input.</p>

<p>If you go with the ATM class with amount in constructor, I would suggest to add a input checking in the constructor - for starters testing that input is positive and is multiple of ten. If input is invalid then IllegalArgumentException (or your own subclass of it) flies.</p>

<p>Furthermore, I would make the amount field private final - and then change the rest of the code (use a method variable to keep track of the amount left to dispose) and eventually design to accommodate this change. The reasoning being that I prefer to be extra paranoid with a sensitive data like this.</p>
    </div>