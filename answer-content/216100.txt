<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>1.</h1>  

<p>In the function <code>int menu()</code><br>
you can reduce the switch with this statement</p>

<pre><code>return ((state&gt;0 &amp;&amp; state&lt;5)?state:printf("There was an error. Please try again."),0);  
</code></pre>

<p>With this your <code>menu()</code> will return 0 whenever illegal input is received and hence you can put the <code>menu()</code> call inside main in a loop and <strong>handle wrong input better way.</strong>  </p>

<p>This piece of code  </p>

<pre><code>int main(void) {
    int play_again = 1; //set up the loop
    if(menu() == 1){ //calling the menu  
</code></pre>

<p>can be written like this  </p>

<pre><code>int main(void) {
    int choice;
    while(!(choice = menu()));
    int play_again = 1; //set up the loop
    if(choice == 1){ //calling the menu  
</code></pre>

<h1>2.</h1>  

<p>in the function <code>int update_board(char ttt[3][3], const int *move, int turn)</code>  </p>

<p><code>move</code> variable provides with enough information to find out the coordinate of the character in the 2D-array <code>ttt</code> which needs to be changed  </p>

<pre><code>int update_board(char ttt[3][3], const int *move, int turn){
    char ch = (turn==1)?'X':'O';
    int x = (*move-1)/3, y=(*move-1)-(x*3);
    ttt[x][y]=ch;
    return 0; // return statement does not make any sense right now
}  
</code></pre>

<p>The overall code can become slightly simpler and shorter if you treat <code>turn</code> variable as a bool and use 0 and 1 to know which players are having turns.</p>
    </div>