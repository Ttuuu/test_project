<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Refactored Code</h2>

<p>This is a possible way to refactor the code to meet the style guidelines of <a href="https://rubystyle.guide/" rel="nofollow noreferrer">Ruby</a> using <a href="https://github.com/rubocop-hq/rubocop" rel="nofollow noreferrer">Rubocop</a>.</p>

<pre><code># frozen_string_literal: true

# A simple table with rows and cols
class Table
  attr_reader :grid

  def initialize(rows:, columns:)
    @grid = construct(rows, columns)
  end

  def construct(rows, columns)
    unless rows.is_a?(Array) &amp;&amp; columns.is_a?(Array)
      raise 'arguments must be arrays'
    end

    table = []
    rows = [] if rows.nil?
    rows.each do |_row|
      table &lt;&lt; columns.map { |c| c }
    end
    table
  end
end
</code></pre>

<hr>

<h2>Style Considerations</h2>

<p>A guard clause should be appended wih an empty line. Also, since the line is over 80 characters, split it up in multi-line.</p>

<blockquote>
<pre><code>raise 'arguments must be arrays' unless rows.is_a?(Array) &amp;&amp; columns.is_a?(Array)
table = []
</code></pre>
</blockquote>

<pre><code>unless rows.is_a?(Array) &amp;&amp; columns.is_a?(Array)
  raise 'arguments must be arrays'
end

table = []
</code></pre>

<p>You have an unused block argument <code>row</code> and the map should be rewritten using <code>{..}</code>.</p>

<blockquote>
<pre><code>rows.each do |row|
  table &lt;&lt; columns.map do |c| c end
end
</code></pre>
</blockquote>

<pre><code>rows.each do |_row|
  table &lt;&lt; columns.map { |c| c }
end
</code></pre>

<hr>

<h2>General Guidelines and Conventions</h2>

<p>The tool also complained about the following guidelines.</p>

<ul>
<li>use 2 instead of 4 white spaces for indentation</li>
<li>remove any trailing white space</li>
<li>remove space before comma</li>
<li>add a frozen string literal comment <a href="https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FrozenStringLiteralComment" rel="nofollow noreferrer">justification</a></li>
<li>add top level class documentation comment</li>
</ul>
    </div>