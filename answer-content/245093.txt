<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Literal initialization of vector</h2>
<pre><code>static const vector&lt;face_val&lt;face_val_type&gt;&gt; init = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54};
</code></pre>
<p>seems like something a computer should be able to do. Indeed, <a href="https://en.cppreference.com/w/cpp/algorithm/iota" rel="nofollow noreferrer"><code>iota</code></a> seems capable.</p>
<h2>Return values</h2>
<p>In a language with exception handling, this:</p>
<pre><code>auto result = check_parameter(args, "-c", cubestring);
if (result &lt; 0) return result;

result = check_parameter(args, "-slice", slice);
if (result &lt; 0) return result;

result = check_parameter(args, "-f", filename);
if (result &lt; 0) return result;

result = check_parameter(args, "-depth", maxdepth);
if (result &lt; 0) return result;
</code></pre>
<p>seems like it should not use return codes, and should use exceptions instead.</p>
<h2><code>// This is a comment</code></h2>
<pre><code>// Method:    parse_args
// FullName:  parse_args
// Access:    public 
// Returns:   int
// Qualifier:
// Parameter: const int argc
// Parameter: char * * argv
</code></pre>
<p>is worse than having no comment at all. You should document what the <code>int</code> actually means.</p>
<h2>stderr</h2>
<pre><code>    cout &lt;&lt; "Unknown argument(s) ";
</code></pre>
<p>seems like it should use <code>cerr</code>.</p>
<h2>Returning strings</h2>
<p>Currently, something like <code>cubestring</code>:</p>
<ul>
<li>Is constructed once, with an empty value, in <code>parse_args</code> <code>string cubestring;</code></li>
<li>Is constructed a second time with an actual value, in <code>args.emplace_back</code></li>
<li>Is copy-constructed a <em>third</em> time, on <code>var = args[argindex];</code></li>
</ul>
<p>This is not great. I think you can reduce it by:</p>
<ul>
<li>Not pre-declaring <code>string cubestring;</code></li>
<li>Not accepting a mutable reference in <code>check_parameter</code></li>
<li>Not returning an integer from <code>check_parameter</code></li>
<li>Returning a <code>const string &amp;</code> from <code>check_parameter</code></li>
<li>Immediately assigning that returned reference to <code>const string &amp;cubestring = check_parameter(...</code></li>
</ul>
<p>Also note that you should be able to pass <code>argv</code> directly to the <code>vector</code> constructor <a href="https://www.cplusplus.com/reference/vector/vector/vector/" rel="nofollow noreferrer">without a loop</a>.</p>
    </div>