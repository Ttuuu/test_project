<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Based on the answers provided by @Oh My Goodness and @AJNeufeld, I would say that you should use <code>rename</code>.</p>

<p>The most important issue is that your script is difficult to understand or hard to read. I recommend you read the chapter "<a href="http://www.gnu.org/software/coreutils/manual/html_node/Opening-the-software-toolbox.html#Opening-the-software-toolbox" rel="nofollow noreferrer">Opening the Software Toolbox</a>" which exposes the right approach to use the shell.</p>

<blockquote>
  <p>(An important additional point was that, if necessary, take a detour and build any software tools you may need first, if you donâ€™t already have something appropriate in the toolbox.)</p>
</blockquote>

<p>The best way to rename your filenames is to use <code>rename</code> because it is the right tool and the resulting command invocation is easy to read. </p>

<pre><code>rename 'y/A-Z/a-z/' *
</code></pre>

<p>Note that the following command redirects the standard error of the command to a temporary file which has a "random" name. Therefore, you may know which files were not renamed. It may be useful if the information send to the standard error cannot be viewed on the screen (e.g. too much information displayed).</p>

<pre><code>fn=$(mktemp -u); rename 'y/A-Z/a-z/' * 2&gt;"$fn" &amp;&amp; less -FX "$fn"
</code></pre>

<p>Eventually, you may test the command invocation before renaming files.</p>

<pre><code>rename -n 'y/A-Z/a-z/' * &gt;/dev/null
</code></pre>

<p>In conclusion, if you have the wrong tools you will do a bad job.</p>

<p>See also: <a href="https://mywiki.wooledge.org/ParsingLs" rel="nofollow noreferrer">Why you shouldn't parse the output of ls</a></p>
    </div>