<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Laravel scopes are not a way to create static methods, they should be used to add parts to a database query. <a href="https://laravel.com/docs/7.x/eloquent#local-scopes" rel="nofollow noreferrer">They should always return a query builder</a>.</p>
<p>Aim to make your scopes as small as possible so you can then combine them together to make more complex queries.</p>
<p>It doesn't matter if you use the <code>Request</code> passed in to the controller or the <code>request()</code> helper, use whichever you prefer.</p>
<p>If you aren't going to reuse the <code>getSelect2()</code> method you don't need to add it to the model, just do the query in the controller. If you do need to repeat the query elsewhere you can make a new class that can build the options (<code>$formatted_tags</code>).</p>
<pre class="lang-php prettyprint-override"><code>class Customer extends Model
{
    // ...

    public function scopeNameLike($query, $name): void
    {
        $query-&gt;orderBy('name','asc')-&gt;where("name", "like", "%{$name}%");
    }

    // ...
}
</code></pre>
<pre class="lang-php prettyprint-override"><code>class Controller
{
    public function selectJson(Request $request)
    {
        return Customer::nameLike($request-&gt;q)
            -&gt;when($request-&gt;city_id, function ($query, $value) {
                $query-&gt;where('city_id', $value);
            })
            -&gt;limit(5)
            -&gt;get(['name', 'id'])
            -&gt;map(function ($item) {
                return ['id' =&gt; $item-&gt;id, 'text' =&gt; $item-&gt;name];
            });
    }
}
</code></pre>
<hr>
<blockquote>
<p>Is return something in scope really bad practice? What about the normal method in the model? I have so many tables/models that I need to format to select2 format. Am I need to format it in every controller? â€“ Muhammad Dyas Yaskur</p>
</blockquote>
<p>I was mistaken that scopes shouldn't return a value, as per the Laravel documentation they <a href="https://laravel.com/docs/7.x/eloquent#local-scopes" rel="nofollow noreferrer">should return a query builder instance</a>. It would be bad practice to return any other value from a scope.</p>
<p>If you need many of these types of queries for different models you can create a helper class that can then be reused.</p>
<pre class="lang-php prettyprint-override"><code>class Select2
{
    public static function customer(Request $request)
    {
        // Query moved from controller
    }
}
</code></pre>
<pre class="lang-php prettyprint-override"><code>class Controller
{
    public function selectJson(Request $request)
    {
        return Select2::customer($request);
    }
}
</code></pre>
    </div>