<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I haven't tested this but you should be able to use <a href="https://docs.microsoft.com/en-us/sql/t-sql/language-elements/case-transact-sql?view=sql-server-2017" rel="nofollow noreferrer"><code>CASE</code></a> statements to conditionally update column values, with fallback values of the existing column values:</p>

<pre><code>UPDATE dbo.Roles SET 
    DisplayName = CASE WHEN DisplayName LIKE `` THEN Name ELSE DisplayName END, 
    Name = CASE WHEN Name NOT LIKE ('%' + Convert(varchar(200), Tenant) + '%') THEN CONCAT(Tenant, '_', DisplayName) ELSE Name END,    
    NormalizedName = CASE WHEN DisplayName LIKE '' THEN CONCAT(Tenant, '_', UPPER(DisplayName)) ELSE DisplayName END
WHERE DisplayName LIKE '' 
    OR Name NOT LIKE ('%' + Convert(varchar(200), Tenant) + '%') 
    OR NormalizedName NOT LIKE ('%' + Convert(varchar(200), Tenant) + '%');
</code></pre>

<p>Note that this may be slightly more challenging to read and there may be more updates per column because it would update any row that needs any column updated, but it would be two fewer <code>UPDATE</code> statements.</p>

<p>Your mileage may vary- especially depending on how many rows exist in the table. It would be wise to compare not only the execution times but also the execution plans. </p>
    </div>