<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Use the <strong>builder pattern</strong>. The builder object can remain unmentioned, and City (maybe) without public constructor:</p>

<pre><code>City varna = City.create()
    .withStartingPos(0)
    .withCitySize(10_000)
    .build();
</code></pre>

<p>Where <code>City.create()</code> returns a <code>CityBuilder</code>.
Checks can be done in the final <code>CityBuilder.build</code> method raising an ' <code>IllegalStateException("Missing mapLength and groundBlock")</code>.</p>

<p>This also allows some fields to be final (immutable).</p>

<p>Such data classes - when stored in a database table - might also profit from a <em>record format version</em>, indicator of which fields were defined, as one might expect some changes in the fields.</p>

<p>If those data have no calculatory use, you were right to store them is a map / CitySettings.</p>
    </div>