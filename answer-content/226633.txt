<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Potential Issues</h3>

<ul>
<li>a naive string replacement could change more than just the placeholders; for instance, when another part of the script uses the same string as a literal</li>
<li>the replacement can introduce a value with the same format <code>{%}</code>; your sql has no way of knowing that this is a replacement value, and since the format matches that of a place holder, it will be ignored and the default value will be taken</li>
<li>make sure the sql user of your unit test project has limited rights, because you don't know the exact sql that is going to run at runtime</li>
</ul>

<p>If you insist on using a string replacement, try to manage escape characters and try to avoid false positives/negatives, both from sql and C# injection.</p>
    </div>