<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>A warning</h2>

<p>As a toy this is fine, but please do not use it (or encourage others to use it) for real cryptographic application. It is fun as an exercise, but will not be sufficiently strong to protect you against certain common attacks.</p>

<h2>Strings as sequences</h2>

<p>In Python, a string is a sequence of one-character strings. So you don't need to represent it as a list of strings, because for your purposes that's what a string already is:</p>

<pre><code>alphabets = 'abcdefghijklmnopqrstuvwxyz'
</code></pre>

<p>That said, you can replace the entire thing with <a href="https://docs.python.org/3/library/string.html#string.ascii_lowercase" rel="nofollow noreferrer"><code>string.ascii_lowercase</code></a>:</p>

<pre><code>from string import ascii_lowercase
alphabets = ascii_lowercase
</code></pre>

<h2>Position</h2>

<p>This whole function can be replaced with:</p>

<pre><code>source.index(to_find)
</code></pre>

<h2>Parens</h2>

<p>We aren't in C/Java, so this:</p>

<pre><code>if (z&gt;26):
</code></pre>

<p>does not need parentheses.</p>

<h2>Magic numbers</h2>

<p>Do not hard-code 26 here:</p>

<pre><code>z = z % 26
</code></pre>

<p>Instead, use <code>len(alphabets)</code>. Also, use in-place modulus:</p>

<pre><code>z %= len(alphabets)
</code></pre>
    </div>