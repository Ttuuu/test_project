<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Caption vs. thead</h3>

<blockquote>
<pre><code>    &lt;thead&gt;&lt;h3&gt;Lets go!&lt;/h3&gt;&lt;/thead&gt;
</code></pre>
</blockquote>

<p>There are several problems with this.  The <code>&lt;thead&gt;</code> element should contain column headers, so something like </p>

<pre><code>  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Column name&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
</code></pre>

<p>Replace "Column name" with appropriate content.  </p>

<p>You may want </p>

<pre><code>  &lt;table&gt;
    &lt;caption&gt;Let's go!&lt;/caption&gt;
</code></pre>

<p>You can put an <code>&lt;h3&gt;</code> inside a caption, but you probably shouldn't, particularly not as the only content.  Instead, use CSS to make the <code>caption</code> style match the <code>h3</code> style.  </p>

<p>Or semantically, what you may want is </p>

<pre><code>  &lt;table&gt;
    &lt;tr&gt;
      &lt;td&gt;Let's go!&lt;/td&gt;
    &lt;/tr&gt;
</code></pre>

<p>That puts this statement at the beginning of the table content rather than making it a heading or caption.  That may better reflect the purpose.  </p>

<h3>Semantic headings</h3>

<p>Another problem is that you are using headings incorrectly.  Each page should have one <code>h1</code> element.  In your case, it should probably be before the table and say </p>

<pre><code>  &lt;h1&gt;Random dice game&lt;/h1&gt;
</code></pre>

<p>to match the title.  They don't have to be the same, but often are.  The title appears in things like the tab's header or a bookmark.  The <code>h1</code> heading appears in the content and is intended to say what is in the content.  </p>

<p>Below the <code>h1</code>, you can have one or more subheadings, which are <code>h2</code> elements.  An <code>h3</code> element would appear below an <code>h2</code>, creating a semantic hierarchy.  </p>

<p>Presumably you see the problem now.  Not only do you not have any <code>h2</code> elements, you don't have an <code>h1</code>.  So you should not have any <code>h3</code> elements.  </p>

<p>As I alluded previously, "Let's go!" (incidentally, this is the proper spelling; "let's" is a contraction of "let us" in this context) is not really a proper semantic heading or caption.  It does not describe the table or that section of content.  </p>

<p>Consider using a <code>&lt;span&gt;</code> with appropriate CSS or a simple <code>&lt;strong&gt;</code> to surround "Let's go" instead of something with more semantic meaning that you don't want.  </p>

<h3>Table vs. list</h3>

<p>I also notice that your table isn't very tabular.  It's basically a bunch of rows.  Rather than using a table, consider using a list.  </p>

<blockquote>
<pre><code>                echo "&lt;tr&gt;&lt;td&gt;Spieler 1 hat $dice1 gewürfelt. Summe: &lt;b&gt;$sum1&lt;/b&gt;&lt;br&gt;Das Spiel ist beendet.&lt;/td&gt;&lt;/tr&gt;";
</code></pre>
</blockquote>

<p>could be </p>

<pre><code>                echo "&lt;li&gt;Spieler 1 hat $dice1 gewürfelt. Summe: &lt;strong&gt;$sum1&lt;/strong&gt;&lt;br/&gt;Das Spiel ist beendet.&lt;/li&gt;";
</code></pre>

<p>I also replaced the non-semantic <code>&lt;b&gt;</code> with <code>&lt;strong&gt;</code> and changed the SGML <code>&lt;br&gt;</code> to an XML <code>&lt;br/&gt;</code>.  Screen readers and other alternate browsers may find it easier to parse this way.  </p>

<p>The list can be either ordered (<code>&lt;ol&gt;</code>) or unordered (<code>&lt;ul&gt;</code>), whichever works better for you.  </p>

<h3>Comments</h3>

<p>Comments should be used to explain why you are coding things a certain way, not what you are doing.  Code like </p>

<blockquote>
<pre><code>        $sum1 = 0;
        $sum2 = 0;
</code></pre>
</blockquote>

<p>should be self-explanatory.  You don't have to say that you are initializing variables.  You might consider changing the names though.  Consider </p>

<pre><code>        $score1 = 0;
        $score2 = 0;
</code></pre>

<p>Or even (old way of declaring PHP arrays) </p>

<pre><code>        $player_scores = array(0, 0);
</code></pre>

<p>Or as <a href="https://codereview.stackexchange.com/a/210556/71574">previously suggested</a>, make an array of players where each player object tracks its score.  </p>

<p>Back to comments.  </p>

<blockquote>
<pre><code>        // while loop running until $sum1 or $sum2 &gt;= 21
        while($sum1 &lt; 21 &amp;&amp; $sum2 &lt; 21) {
</code></pre>
</blockquote>

<p>Both the comment and the code say the same thing.  So why have the comment?  We can just read the code.  Consider instead </p>

<pre><code>        // first player to $WINNING_SCORE or more wins
        while ($scores[0] &lt; $WINNING_SCORE &amp;&amp; $scores[1] &lt; $WINNING_SCORE) {
</code></pre>

<p>Now the comment tells my why we are comparing these two variables.  Also, I replaced the magic number 21 with a constant.  This makes the comment less likely to fall out of synch with the code.  E.g. </p>

<pre><code>        // first player to 21 or more wins
        while ($scores[0] &lt; 21 &amp;&amp; $scores[1] &lt; 15) {
</code></pre>

<p>Here, I actually made the code fall out of synch as well.  The idea was to make the winning condition lower for both, but the code edit only changed it for one.  A constant would not have had that problem.  </p>

<p>The only time to use verbose comments like you are is as part of a lecture to students who don't know what the code says, so you are explaining it to them.  Unfortunately, this often gives students the wrong idea about how to use comments.  So if you are using comments didactically this way, I would suggest on the next slide or figure, showing the code with the comments used more as they would in production code.  </p>

<p>It's also worth noting that function names can be used to comment code as well.  For example, if you put your random statement inside a <code>roll_die</code> function, then it is obvious that you are using it to simulate a die roll.  Or </p>

<pre><code>while (!has_any_won($players)) {
</code></pre>
    </div>