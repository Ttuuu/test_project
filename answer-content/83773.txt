<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I am generally impressed with the consistency of the implementations, neatness, etc.</p>

<p>I have a comment about the basic premise. The <code>Shape</code> should not be an abstract class, but an interface. It has no concrete implementations for any methods, and making it an abstract class makes it hard to inherit from other places too. Consider this instead:</p>

<pre><code>public interface Shape {
    public double area();
    public double perimeter();
}
</code></pre>

<p>In addition to that concern, the following are also things you should consider:</p>

<ul>
<li><p>The <code>pi</code> field on your <code>Circle</code> class should be private. There's no need to re-expose an already public constant in another way.</p></li>
<li><p>I would avoid the 'unit' default constructors. They don't help with anything. When would someone want to call <code>new Triangle()</code> and not want to have the dimensions?</p></li>
<li><p>Your classes are missing a <code>toString()</code> method. These are useful for many reasons, especially debugging.</p></li>
<li><p>You don't have a plan for out-of-bound dimensions. What will you do with negative, NaN, or infinite input?</p></li>
</ul>
    </div>