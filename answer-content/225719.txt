<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Shell programs should start with a shebang, so that when executed, the OS can select the correct interpreter:</p>

<pre><code>#!/bin/bash
</code></pre>

<p>With Bash, we can read prompted input using <code>read -p</code>:</p>

<pre><code>read -p "Enter the mininum number of stars: " min
</code></pre>

<p>We should check that we have a valid positive integer before using <code>$min</code>.</p>

<p>The same comments also apply to <code>$max</code>.  For both variables, consider accepting arguments instead of prompting for interactive input.</p>

<p>Prefer <code>printf</code> to <code>echo -n</code> - that's a good practice for portable scripting.</p>

<p>Most of those <code>for</code> loops can be eliminated with suitable <code>printf</code> formatting.  We can produce <code>n</code> stars with <code>printf '%.${n}s' '' | tr ' ' '*'</code>, and we can put that into a space that's <code>m</code> wide, with <code>printf '%${m}s' "$(printf '%.$ns' '' | tr ' ' '*')"</code>.  If we did keep the loops, we don't need <code>$</code> for variable expansion within the arithmetic context <code>(( ))</code>.</p>

<p>It seems strange to use arithmetic evaluation but also to invoke <code>expr</code> to increment <code>$sum</code> - it's more consistent to simply write <code>((++sum))</code>.</p>

<p>The <code>echo</code> command with a single empty argument is equivalent to <code>echo</code> with no arguments, so no need to write <code>""</code> there.</p>
    </div>