<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code is very neat and clean, there is only one thing that I would change:</p>

<pre><code>private static Map&lt;String, String&gt; mMap;
</code></pre>

<p>to</p>

<pre><code>private static final Map&lt;String, String&gt; mMap = Collections.unmodifiableMap(initializeMapping());
</code></pre>

<p>The reasons:</p>

<ol>
<li><p>By not declaring it final and not using a call to <code>unmodifiableMap</code> it is mutable, and it would be possible to modify the reference using reflection or to use <code>.remove("ABC")</code> on the map. Declaring it as final makes sure that the referenced map cannot change and unmodifiableMap makes sure that no changes can be done to the map itself.</p></li>
<li><p>Multi-threading issues. As it currently stands, if two threads would call the <code>getDescriptionByCode</code> method at the same time you would initialize the mapping twice, which is not needed.</p></li>
</ol>

<p>This also of course requires a slight change in your <code>initializeMapping()</code>:</p>

<pre><code>private static Map&lt;String, String&gt; initializeMapping() {
    Map&lt;String, String&gt; mMap = new HashMap&lt;String, String&gt;();
    for (Maps s : Maps.values()) {
        mMap.put(s.code, s.description);
    }
    return mMap;
}
</code></pre>

<p>Besides this, it all looks good. Well done!</p>
    </div>