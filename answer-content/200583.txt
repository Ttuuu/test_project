<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This method does too much:</p>

<ul>
<li>creates <code>EventoParticipante</code></li>
<li>creates <code>Persona</code> for the <code>companion</code> if necessary</li>
<li>creates <code>EventoParticipante</code> for the <code>companion</code> if necessary</li>
<li><code>CreateInvoice</code></li>
<li><code>SendMail</code></li>
</ul>

<p>Each of the first three should be a method or even a class of their own (especially considering each process seems to be fairly complicated), and then this <code>RegisterParticipant</code> method should perhaps be a class of its own to combine the individual parts as a process.</p>

<p>This one method is 60+ lines. That is already hard to keep an overview of, and it makes me wonder what other methods this class contains. Focus on making your methods simpler, apply SOLID,...</p>

<hr>

<p>The mix of English and Spanish(?) as class names and method names and variable names is IMHO a bad idea.</p>

<hr>

<p>Why do you do this: <code>decimal.Parse((100.00).ToString());</code>?</p>

<p>Ditto: <code>short.Parse(CreateInstitution(participant).ToString());</code>: why not simply have <code>CreateInstitution</code> return a <code>short</code>?</p>

<p>In the same vein: <code>decimal.Parse(participant.Ammount);</code>. Why isn't <code>Ammount</code> a decimal? (BTW this is spelled incorrectly, the correct word is "Amount".)</p>

<p>Such odd castings are all over your code, see also: <code>(int)participant.InvoiceCountryId</code>.</p>

<hr>

<p>This will throw an exception if <code>_attendeeTypeRepository</code> cannot find anything:</p>

<pre><code>_attendeeTypeRepository.SingleOrDefault(x =&gt; x.Nombre == participant.TypeParticipant).Id; 
</code></pre>

<p>Is that something you want?</p>

<hr>

<p>Don't do this:</p>

<pre><code>MailHelper.SendMail(MailAction.EventRegisterSuccessWithInvoice, 
   eventParticipant, 
   participant, 
   _countryRepository.Get(participant.AttendeeCountryId).Nombre, 
   _countryRepository.Get((int)participant.InvoiceCountryId).Nombre);
</code></pre>

<p>Even though it's only five parameters (which is already an amount that is bordering on my upper limit before I'd replace this with a custom class), at least two of these are the result of returns from other methods, and now you have a single line that is 250+ characters. This makes your code hard to read and follow.</p>

<p>Considering that you already pass <code>participant</code>, you could easily make a method that only accepts <code>MailAction</code> and <code>participant</code>, gets the other data itself, and then calls <code>MailHelper.SendMail</code>.</p>

<hr>

<p>What does "4" mean in this context: <code>companionParticipant.TipoParticipanteId = 4;</code>? Avoid unexplained magic numbers: give them proper names or at least add a comment.</p>
    </div>