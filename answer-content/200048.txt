<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Pretty nice script, I have mostly minor suggestions.</p>

<h3>Always double-quote variables used in command arguments</h3>

<p>The parameters in these command should be double-quoted to protect from word splitting and globbing:</p>

<blockquote>
<pre><code>rsync -ah --progress $firefox_path /opt/$firefox_file
...
rm $firefox_link
...
tar -jxvf $firefox_file
...
rm $firefox_file
</code></pre>
</blockquote>

<h3>Avoid changing the working directory in scripts</h3>

<p>Changing working directories is usually error-prone and confusing,
look for ways to do what you need without changing the working directory.</p>

<blockquote>
<pre><code>if cd /opt; then
    tar -jxvf $firefox_file
else
    error_exit "Could not change directory! Aborting."
fi
</code></pre>
</blockquote>

<p>Another way to write this without changing the directory (and correct quoting):</p>

<pre><code>tar -jxvf "/opt/$firefox_file" -C /opt
</code></pre>

<p>It's very good that you check the exit codes of commands,
and this writing style will actually help you do that,
by simplifying near the end:</p>

<pre><code>if ! tar -jxvf "/opt/$firefox_file" -C /opt; then
    error_exit "Could not extract file! Aborting."
fi

chmod 755 /opt/firefox
ln -s /opt/firefox/firefox /usr/bin/firefox-quantum
rm "/opt/$firefox_file"
</code></pre>

<h3>Declare constants at the top of the file</h3>

<p>There are some constant values that are very important for the program's behavior, but they are buried within the code.
It would be better to move these to somewhere near the top of the file,
where they are easy to see and to change.</p>

<blockquote>
<pre><code>firefox_bin="/opt/firefox"
firefox_link="/usr/bin/firefox-quantum"
</code></pre>
</blockquote>

<p>There are some other values that are not in variables,
and it would be good to define variables for them,
for example the ones in this command:</p>

<blockquote>
<pre><code>ln -s /opt/firefox/firefox /usr/bin/firefox-quantum
</code></pre>
</blockquote>

<h3>Technique</h3>

<p>Here, the <code>else</code> branch is not necessary,
because if the condition is true,
the script will exit anyway.
I suggest to just drop the <code>else</code>,
simply move its body after the conditional (just like you did in other places).</p>

<blockquote>
<pre><code>if [ $# -ne 1 ]; then
    error_exit "usage: $0 firefox_quantum_path"
else
    firefox_path="$1"
    firefox_file="${firefox_path##*/}"
fi
</code></pre>
</blockquote>

<hr>

<p>To set a variable empty, you can simply write like this:</p>

<pre><code>firefox_path=
firefox_file=
</code></pre>

<hr>

<p>It's usually not a good idea to <code>exit 0</code> at the end of a script.
This forces exit code 0 (success).
The exit code of a script is the exit code of the last command.
By forcing it to 0,
the failure of the last command will get incorrectly covered up.</p>
    </div>