<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is in addition to the answer provided by @1201ProgramAlarm, everything in their review is correct.</p>

<blockquote>
  <p>I have made a console game using c++ without using OOP. The game works perfectly, but is it good that way or should I have used OOP?</p>
</blockquote>

<p><strong>Bug</strong><br>
The program doesn't work perfectly, the snake is supposed to die if it hits a wall. In this implementation the snake re-enters on the opposite side of the screen.</p>

<p><strong>Opinion</strong><br>
The second part of the question, if it should be Object Oriented or not is off-topic for Code Review because it is primarily opinion based. The code is also not completely free of objects, the std::vector&lt;&gt; container class is used, and iterators are used.</p>

<p><strong>Global Variable</strong><br>
Generally global variables are considered a bad practice. In larger programs with multiple source files it is very difficult to write correct code, debug and maintain code using global variables. Finding where a variable value is altered becomes a huge task. A second problem with global variables in a multi-file program is that global variables are global in scope and can lead to duplicate definitions at link time. In an object oriented program all of these variables could have been global within the object but the scope would still be limited to the object itself.</p>

<p>In non-object oriented programming it might be better to declare the variables in functions or procedures and pass the values into sub functions.</p>

<p>The variables <code>xtail</code> and <code>ytail</code> should be declared in the function <code>void eatFruit()</code> since they are not used anywhere else in the program.</p>

<p><strong>Variable Declarations and Performance</strong><br>
The code is primarily using <code>unsigned short</code> variables and this will affect performance because it is not the default word size. The default word size in C++ is int or unsigned int. Generally the computer instructions that are generated by the code will be using the default word size. The short type is generally used within objects to save space, which does not seem to be necessary in this case.</p>

<p><strong>Use Vertical Spacing to Make the Code more Readable</strong><br>
To make code easier to maintain it would be better to have one variable declared per statement and each declaration on it's own line. Rather than saving vertical space, use vertical space to make the code easier to read and update:</p>

<pre><code>const unsigned short width = 50;
const unsigned short height = 20;

unsigned short xFruit;
unsigned short yFruit;
unsigned short score = 0;

void ClearScreen()
{
    // Function which cleans the screen without flickering
    COORD cursorPosition;

    cursorPosition.X = 0;   
    cursorPosition.Y = 0;

    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), cursorPosition);
}
</code></pre>
    </div>