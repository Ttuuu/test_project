<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is some fantastic first Go code!</p>

<p>Great use of anonymous structs for test fixtures. I disagree with @sineemore, these are incredibly idiomatic. Nice job writing tests, as well!</p>

<p>There isn't much to be said for the code itself. It's simple and reads clearly. Perhaps you'd want to document it (<a href="https://blog.golang.org/godoc-documenting-go-code" rel="nofollow noreferrer"><code>go doc</code> is fantastic</a>).</p>

<p>I guess <a href="https://beta.golang.org/pkg/strings/#Builder" rel="nofollow noreferrer"><code>strings.Builder</code></a> is the idiomatic way to do string concatentation in Go &gt;=1.10. However, this is largely for performance reasons.</p>

<pre><code>var roman strings.Builder
for _, conversion := range conversions {
    for number &gt;= conversion.value {
        roman.WriteString(conversion.digit)
        number -= conversion.value
    }
}
return roman.String()
</code></pre>

<p>Your next steps are learning about packaing and naming. I'd suggest that instead of calling the field <code>digit</code> you call it something more descriptive like <code>numeral</code> (<code>conversion.numeral</code> reads better than <code>conversion.digit</code> to me). Perhaps you can also come up with better names for <code>roman</code> and <code>number</code>?</p>

<p>I'd also give the function a better name. And to do so, I'd place it in a package called <code>roman</code>. Then call it <code>FromInt</code>. In this way, you use it like <code>roman.FromInt(42)</code>, which reads much better. Package naming is really important in Go and you'll find a lot of the standard libraries follow this pattern of making the package name part of the "sentence" instead of just some extra stuff you have to prepend.</p>

<p>In doing this, I'd also recommend putting your tests in <code>package roman_test</code> so they can't access any private functions or variables. This is convention.</p>
    </div>