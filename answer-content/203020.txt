<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I know nothing of react.js, so please forgive me if I missed something, but in a JS way I'd do it that way :</p>

<pre><code>onSubmit = event =&gt; {
        event.preventDefault();
        //start with a dedicated part for testing values
        let fieldError="";
        if(!eventNameRegex.test(this.state.event_name))fieldError.="Name not correct.";
        if(!eventDescriptionRegex.test(this.state.event_description))fieldError.="Description not correct.";
        if(!priceRegex.test(this.state.ticket_price))fieldError.="Price not correct.";
        if(!eventDateRegex.test(this.state.event_date))fieldError.="Date not correct.";
        if(fieldError!=""){
          this.setState({
            error: 400,
            errorMessage:
              fieldError."Please fill in all required fields with correct data. Please try again."
          });
          return false;
        }
        // check if image changed or not then continue
        this.props.handleLoading(true);

        if (this.state.file != null) {
          startUploadImage(this.state.file).then(response =&gt; {
            this.setState({ event_image: response.data });
            return myUpdateEvent(this);
          });
        }
        else return myUpdateEvent(this);
      };

//when in doubt use a function ! here's hoping react.js can deal with it
function myUpdateEvent(myEvent){
  return myEvent.props.startUpdateEvent(myEvent.props.event.id, myEvent.state)
    .then(() =&gt; {
      myEvent.props.handleLoading(false);
      myEvent.props.history.push("/events");
    })
    .catch(error =&gt; {
      console.log("error");
      myEvent.props.handleLoading(false);
      myEvent.setState({
        error: error.status,
        errorMessage: error.data
      });
    });
}
</code></pre>

<p>Not tested but you get the gist.</p>
    </div>