<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>in your <code>UnsubscribeUser</code> Method, I wouldn't worry about checking to see whether or not the user is actually subscribed or not, if this method is called I would simply just set that value to false, it shouldn't hurt anything if the user is already unsubscribed, and it may even keep track of the unsubscription for you if you keep a field that says last updated.</p>

<p>and then I would probably want to double check that the value is actually false by returning the opposite of the value in <code>IsSubscribedToEmails</code></p>

<pre><code>return !user.IsSubscribedToEmails;
</code></pre>

<p>like this</p>

<pre><code>public async Task&lt;bool&gt; UnsubscribeUser(string userId)
{
    if (string.IsNullOrEmpty(userId) || string.IsNullOrWhiteSpace(userId))
    {
        throw new ArgumentNullException(nameof(userId));
    }

    using (var db = new DatabaseContext())
    {
        var user = db.Users.Find(userId);

        if (user == null)
        {
            throw new InvalidOperationException("Could not find user");
        }

        user.IsSubscribedToEmails = false;
        await db.SaveChangesAsync();

        // Fires UserUnsubscribedFromEmails event 
        OnUserUnsubscribedFromEmails(new UserUnsubscribedFromEmailsEventArgs(user.Email, "Unsubscribed via portal"));

        return !user.IsSubscribedToEmails;
    }
}
</code></pre>

<p>This way you can tell if the task actually performed the task or if there was an issue changing the value in the DB Context.   if you just return true, you may not have actually changed the value but still received a true value from the method. </p>

<hr>

<p>I am not certain that you could decouple these events, my thinking is that the mail sender should not care about the maintenance of the <code>UnsubscribedFromEmails</code> list/collection,  it should only be worried about sending emails, if it is not sending emails to that list, then it shouldn't worry about them. </p>

<p>In the case where you want to send an email to let the user know that they have unsubscribed, it should be a "Mail" object sent to the mail sender.  the mail sender should only be worried about sending mail and nothing more.</p>
    </div>