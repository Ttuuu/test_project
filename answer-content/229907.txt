<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could try something like the following in The Animal Class:</p>

<pre><code> @Override
   public boolean equals(Object obj) {
      Animal animal = null;
      if(obj == null || this ==null) {
         return false;
      }
      if(obj instanceof Animal) {
         animal = (Animal) obj;
      }
      if(this.name.equals(animal.getName())) {
         return true;
      }

      return super.equals(obj);
   }
</code></pre>

<p>Now if you have a Cat and a Dog which extend Animal
and you check</p>

<pre><code>private Cat cat = new Cat("Pipsy");
private Dog dog = new Dog("Pupsy");
</code></pre>

<p><code>if(cat.equals(dog))</code> will return false because you check the name, and they have a different one.</p>

<p>I do not think you have to use Generics, Object is generic enough :). Hope this helped</p>
    </div>