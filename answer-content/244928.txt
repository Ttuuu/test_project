<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Neither of your solutions handles the type of the replacement correctly. For instance <code>"bar.baz.foo:111222"</code> replaces <code>foo:333444</code> with <code>foo:"111222"</code> where I would expect it to result in <code>foo:111222</code>.</p>
<p>Further they can handle if the replacement is an array, but not if it is an object due to the use of <code>split(':')</code>. You should use <code>str.indexOf(':')</code> together with <code>str.substr()</code> instead:</p>
<pre><code>function replaceInObj(obj, str) {
  let splitIndex = str.indexOf(':');
  let [path, replacement] = [str.substr(0, splitIndex), str.substr(splitIndex + 1)];
  let sections = path.split('.');
  let sub = obj;
  for (var i = 0; i &lt; sections.length - 1; i++) {
    sub = sub[sections[i]];
  }

  sub[sections[i]] = JSON.parse(replacement);
  return obj;
}
</code></pre>
<p>Here <code>JSON.parse()</code> is used to interpret the value to the correct type. I don't know if the <code>JSON</code> api is considered as "third-party" in this context.</p>
<hr>
<p>There is a more "quick and dirty" approach using <code>eval</code>:</p>
<pre><code>function replaceInObj(obj, str) {
  let splitIndex = str.indexOf(':');
  let [path, replacement] = [str.substr(0, splitIndex), str.substr(splitIndex + 1)];
  eval("obj." + path + "=" + replacement);
  return obj;
}
</code></pre>
<hr>
<p>Some test cases:</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>  let testObj = {
    bar: {
      baz: {
        foo: 333444,
        foo2: 674654
      },
      boo: {
        faa: 11
      }
    },
    fee: 333
  };

    let replacements = [
      "bar.baz.foo:111222",
      "bar.baz.foo:\"05-31-2020\"",
      "bar.baz.foo:false",
      "bar.baz.foo:\"abcdefg\"",
      "bar.baz.foo:[111222, 21341234, 234243]",
      "bar.baz.foo:{ \"aaa\": 1234, \"bbb\": \"hello world\" }"
    ];

    for (let replacement of replacements) {
      let result = replaceInObj(testObj, replacement);
      console.log(result.bar.baz.foo);
    }


function replaceInObj(obj, str) {
  let splitIndex = str.indexOf(':');
  let [path, replacement] = [str.substr(0, splitIndex), str.substr(splitIndex + 1)];
  eval("obj." + path + "=" + replacement);
  return obj;
}</code></pre>
</div>
</div>

    </div>