<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here's a solution using dictionaries and mapping (and no additional imports):</p>

<pre class="lang-py prettyprint-override"><code>def solve(a, b, c):
  l = [a, b, c]
  c = lambda x: l.count(x) &gt; 1
  z = [c(v) for v in l] # Replacing the import of Counter

  {
      (True, True): 1, 
      (False, False): l[0]*l[1]*l[2]
  }.get(map(lambda b: b(z), [all, any]), l[z.index(False)])
</code></pre>

<p>So, if <code>all</code> elements are equal, the resulting map will be <code>True</code> for <code>all</code> and <code>True</code> for <code>any</code>, if none are equal, it will be <code>False</code> for both. If the <code>get()</code> fails, return the one that has the <code>False</code> index in <code>z</code> list (the list that states, for every element, if there is more than one element of that).</p>
    </div>