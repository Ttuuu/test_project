<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I was wondering if the compiler would more easily be able to vectorize it without the <code>union</code>-within-<code>struct</code> and the potential type punning of the <code>e</code> member (which doesn't seem to be used).</p>

<p>How about this?</p>

<pre><code>typedef float v4sf __attribute__ ((vector_size (16)));
typedef struct {
  v4sf x;
  v4sf y;
} complex4;

static inline v4sf complex4_mul_r(v4sf a_r, v4sf a_i, v4sf b_r, v4sf b_i) {
  return a_r*b_r -a_i*b_i;
}
static inline v4sf complex4_mul_i(v4sf a_r, v4sf a_i, v4sf b_r, v4sf b_i) {
  return a_r*b_i + a_i*b_r;
}

complex4 f4(v4sf x_r[], v4sf x_i[], int n) {
  v4sf one = {1,1,1,1};
  v4sf p_r = one;
  v4sf p_i = one;
  v4sf p_r_temp;
  for (int i = 0; i &lt; n; i++)
  {
     p_r_temp = complex4_mul_r(p_r, p_i, x_r[i], x_i[i]);
     p_i = complex4_mul_i(p_r, p_i, x_r[i], x_i[i]);
     p_r = p_r_temp;
  }
  return (complex4){p_r, p_i};
}
</code></pre>

<p>Looking at the assembly on <a href="https://godbolt.org/" rel="nofollow noreferrer">https://godbolt.org/</a> it seems it gets fully vectorized. I can't get the godbolt sharing links to work.</p>

<p>I'm thinking about whether it might be possible to stick both the real and imaginary parts in the same vector, and use <code>__builtin_shuffle()</code> to permute them as necessary. Can't quite work it out.</p>
    </div>