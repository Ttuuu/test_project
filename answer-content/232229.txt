<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>some minor issues</p>

<h2>dry - dont repeat yourself</h2>

<p><code>Area.moveADirection</code>is full of redundant code - try to create a method for all that is in common - may i suggest a method <code>void move (int dx, int dy)</code> that is applyable for <strong>any</strong> direction?</p>

<p>another repetation is your code to iterate through cells in the <code>Area</code> class</p>

<pre><code>for(int y = 0; y &lt; area.length; y++) {
    for(int x = 0; x &lt; area[0].length; x++) {
                ...
    }
}
</code></pre>

<p>you could instead provide a method for that <code>List&lt;Cell&gt; getCells()</code>and use the java8 stream api for example:</p>

<pre><code>private int getAmountOfEmptyCells() {
    //written straight out of my head without any compiler verification
    return getCells().stream().mapToInt(c -&gt; c.isEmpty?0:1).sum();
}
</code></pre>

<h2>segregation of concerns</h2>

<p>your cell should be able to draw itself. if it would do so, you could simplify your draw code in <code>Component</code>:</p>

<pre><code>void printArea(Graphics gr) {
    area.getCells().forEach(c -&gt; c.draw(gr, XPos,YPos);
}
</code></pre>

<p>and the cell would know how to draw itself, new code for <code>Cell</code> class:</p>

<p><code>public void draw(Graphics grm int xpos, int ypos){...};</code></p>

<h2>naming convention</h2>

<p><code>public class myKey implements KeyListener</code> should be uppercase</p>

<p><code>for(int y = 0, YPos; y &lt; area.length; y++) {</code> YPos should be <code>yPos</code> at least... where do you define <code>YPos??</code>, same for XPos</p>

<h2>complexity</h2>

<p>create a configuration object for your constructor to hanlde all those arguments - you can then even provide default parameters</p>

<pre><code>class Configuration {
    final int windowXPos = 100;
    final int windowYPos = 100;
    final int windowWidthAndHeight = 800;
    final int spacesBetweenCells = 4;
    final int widthOfFrame = 4;
    final int inARow = 4;
    final int valueOfCellToWin = 11;
}
</code></pre>

<p>that results into</p>

<pre><code>Configuration defaultConfig = new Configuration();
defaultConfig.windowXPos = 123; //example to override default values
GameWindow2048 window = new GameWindow2048(defaultConfig);
</code></pre>

<h2>input handling</h2>

<p>instead of directly listening to keyevent you should use keybinding, see the <a href="https://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html" rel="nofollow noreferrer">javaDoc tutorial page</a> </p>
    </div>