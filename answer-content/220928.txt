<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would use more <a href="https://en.wikipedia.org/wiki/Musical_note" rel="nofollow noreferrer">standardized</a> names.</p>

<p>The <code>length</code> is known as the <code>duration</code>. It can be a <code>float</code>. This way you also allow for non-powers of 2 (like triplets, dotted notes, fractional time signatures, etc.)</p>

<blockquote>
<pre><code> public float getLength() {

     return length;
 }
</code></pre>
</blockquote>

<pre><code>public float getDuration() {

       return duration;
 }
</code></pre>

<hr>

<p>The name of the note is generally either in <em>roman numeral</em> or <em>scientific pitch notation</em>. Your name is actually the latter. You could also add a helper <code>getPitchClass</code>. Note that the modular arithmic congruent operation is <code>(value % size + size) % size</code>. This allows for negative pitches. I noticed <code>C5</code> is pitch 0. So <code>B4</code> would be -1.</p>

<blockquote>
<pre><code>public Note.Names getNameOfNote() {

      return Names.get(this.getPitch() % 12);
}
</code></pre>
</blockquote>

<pre><code>public int getPitchClass() {

      return (this.getPitch() % 12 + 12) % 12;
}

public Note.Names getScientificPitchClassName() {

      return Names.get(this.getPitchClass());
}
</code></pre>

<hr>

<p>The octave should get floored to allow also negative octaves. Since octave 5 is the zero point, octave 4 would be -1.</p>

<blockquote>
<pre><code>public int getOctave() {
    return (pitch / 12) - 5;
}
</code></pre>
</blockquote>

<pre><code>public int getOctave() {

     return Math.Floor(pitch / 12) - 5;
}
</code></pre>
    </div>