<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Queues are not designed to be used like this.  Your <code>iterable_queue</code> clearly shows that you are not using queues the way they are supposed to be used.  And the <code>checkValidity</code> function should be simplified with <code>std::is_sorted</code> from the standard library.  In <code>q.empty() || q.size() &lt;= 1</code>, the first condition is subsumed by the second.  The <code>while(q.size()){</code> loop also seems to have no significance.  <code>++q.end()</code> is also undefined behavior.  The <code>bool_cast</code> functionality is already provided by <code>std::boolalpha</code>.</p>

<p>Overall, I think you are seriously over-complicating everything:</p>

<pre><code>#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;vector&gt;

int main()
{
    std::vector&lt;int&gt; numbers;
    for (int num; std::cin &gt;&gt; num &amp;&amp; num &gt;= 0;) {
        numbers.push_back(num);
    }

    bool valid = numbers.size() &gt; 1 &amp;&amp; std::is_sorted(numbers.begin(), numbers.end());
    std::cout &lt;&lt; "Valid? " &lt;&lt; std::boolalpha &lt;&lt; valid &lt;&lt; '\n';

    std::cout &lt;&lt; "{ ";
    for (int num : numbers) {
        std::cout &lt;&lt; num &lt;&lt; ' ';
    }
    std::cout &lt;&lt; "}\n";
}
</code></pre>

<p>(<a href="https://wandbox.org/permlink/KEb99eFup8AxQLgt" rel="nofollow noreferrer">live demo</a>)</p>
    </div>