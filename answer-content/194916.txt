<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't know how useful this review will be as a <em>review</em>, but I want to write it up anyway.</p>

<hr>

<p>Re:</p>

<blockquote>
  <ul>
  <li>How about Laps, do they make sense?</li>
  <li>I could have auto-closed all labels like I did with laps, would this have been cleaner? It would give less control over precisely which
  portions of code are measured.</li>
  </ul>
</blockquote>

<p>The way you handle the <code>Lap</code> appears to make it impossible for a <code>Lap</code> node to have a child node. If you put any labels inside a <code>Lap</code>, the stopwatch doesn't add a node to the <code>Lap</code> node, it just adds another node to the <code>Start</code> node.</p>

<p>I haven't quite figured out <em>exactly</em> what is happening, I just know at a certain point in setTimeStamps (recursed down) the <code>startKey</code> that it's looking for to set <code>startTimes</code> doesn't exist. I think I'm in over my head, I'll try some pictures -</p>

<p>Here it looks for <code>1Lap_2</code></p>

<p><a href="https://i.stack.imgur.com/76EGS.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/76EGS.png" alt="enter image description here"></a></p>

<p>But here you'll see that doesn't exist, it went from Lap1 to Lap3</p>

<p><a href="https://i.stack.imgur.com/XpGKl.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/XpGKl.png" alt="enter image description here"></a></p>

<hr>

<p>The code that did this is</p>

<pre><code>Option Explicit

Sub test()
    Dim clock As New Stopwatch
    clock.Start
    Dim i As Long
    For i = 1 To 10
        clock.Lap
        testMe clock, "label " &amp; i
    Next
    clock.Finish
    clock.Results.ToImmediateWindow
End Sub

Sub testMe(ByRef clock As Stopwatch, ByVal label As String)
    clock.OpenLabel label
    'clock.Lap
    SaySomething label
    clock.CloseLabel
End Sub

Sub SaySomething(ByVal label As String)
    MsgBox label
End Sub
</code></pre>

<p>If you remove the <code>Clock.Lap</code> in the <code>For</code> loop and un-comment the <code>Clock.Lap</code> in <code>TestMe</code> it works fine.</p>

<p>I was just passing the clock around some procedures, but this will occur in a very simple setup as well -</p>

<pre><code>Sub Test2()
    Dim clock As New Stopwatch
    clock.Start
    Dim i As Long
    For i = 1 To 3
        clock.Lap
        clock.OpenLabel i
        MsgBox i
        clock.CloseLabel
    Next
    clock.Finish
End Sub
</code></pre>

<p>And the error occurs on the <code>Clock.Finish</code>.</p>

<p><strong><em>Oh, and that extract method is nearly the coolest thing I've seen in VBA.</em></strong></p>
    </div>