<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I like that your code (read functions) follows <a href="https://en.wikipedia.org/wiki/Single-responsibility_principle" rel="nofollow noreferrer">Single Responsibility Principle</a>.</p>
<p>And also that you've put the number comparison code in a separate function unlike</p>
<ul>
<li><a href="https://codereview.stackexchange.com/q/247749/205955">User guesses the number generated by computer</a></li>
<li><a href="https://codereview.stackexchange.com/q/247383/205955">Computer tries to guess your inputted number</a></li>
</ul>
<p>And also that you use <code>static_cast</code>. All are good coding practices!</p>
<hr>
<p>I'd prefer if you do the text printing in the <code>placement</code> function itself and call it something like <code>compare_with_guess</code>. That way, you don't have to return values and use another if-else block in the caller. Also, the output messages can also be controlled all at one place.</p>
<p>Another way is to use struct like:</p>
<pre><code>struct InputNum{
private:
    const int input;
public:
    InputNum(const int num):input(num){};

    int get() const{
        return input;
    }
    bool greater_than(const int target) const {
        return input &gt; target;
    }
    bool less_than(const int target) const {
        return input &lt; target;
    }
    bool equals(const int target) const {
        return input == target;
    }
}
</code></pre>
<hr>
<p>Use <code>const</code> whenever possible.</p>
<pre><code>const int winning_num{ generateRandomNumber() };// +1 for {} initialiser syntax. 
</code></pre>
<pre><code>void compare_with_guess(const int input, const int guess){ // After making the changes I suggested above.
</code></pre>
<pre><code>bool validateInput(const int input){

</code></pre>
<hr>
<p>Avoid  <code>using namespace std;</code> completely, let alone using it multiple times in the code.</p>
<p><a href="https://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice">https://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice</a></p>
<hr>
    </div>