<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would use a <a href="https://javascript.info/closure" rel="nofollow noreferrer">Closure</a> to avoid excessive memory usage and allow for reusability of the method. Try also to adhere to <a href="https://www.w3schools.com/js/js_conventions.asp" rel="nofollow noreferrer">styling and naming conventions</a>. I don't mind variable names <code>a, i, j, ..</code>. Make sure you document them well. Replace <code>var</code> with respectively <code>let</code> and <code>const</code>.</p>

<p><a href="https://jsfiddle.net/3egc2p4z/" rel="nofollow noreferrer">Fiddle</a></p>

<pre><code>(function() {
    "use strict";

    function toLongNumber() {

      return function() {

        const ones = ["", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"];
        const tens = ["", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"];
        const scale = ["", "Thousand", "Million", "Billion", "Trillion", "Quadrillion", "Quintillion", "Sextillion", "Septillion", "Octillion", "Nonillion", "Decillion"];

        return function(n) {

          let n1, n2, s, i, h, triplet, j = 0, tns = "", m = "";
          n += "";
          n = "0".repeat(n.length * 2 % 3) + n;

          for (i = n.length / 3 - 1; i &gt;= 0; i--) {
            triplet = n.substring(j, j + 3);
            if (triplet != "000") {
              h = "";
              triplet[2] != "0" ? s = " -" : s = " ";
              n1 = Number(triplet[0]);
              n2 = Number(triplet.substr(1));
              n2 &gt; 19 ? tns = tens[Number(triplet[1])] +
                s + ones[Number(triplet[2])] : tns = ones[n2]
              if (n1 &gt; 0) h = ones[n1] + " Hundred"
              triplet = (h + " " + tns).trim() + " " + scale[i];
              m = m + triplet + " ";
            }
            j += 3;
          }
          return m.trim();
        }
      }();
    }

    window.toLongNumber = toLongNumber();
})();
</code></pre>

<p>and usage..</p>

<pre><code>word.innerHTML=toLongNumber(this.value)
</code></pre>
    </div>