<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>IMHO your function is correct and readable as it is.
If I see something like <code>x != x</code> in any language my mind jumps immediately to NaN,
regardless of the type.
So if you have something like a missing string or date or whatever, this test still makes sense.</p>

<p>Regarding the report from sonarsource. It is always helpful to read the rationale behind a rule. If you look <a href="https://rules.sonarsource.com/cpp/RSPEC-1764" rel="nofollow noreferrer">here</a>
there are nice examples why this rule generally makes sense. I don't think this applies in your case and you can ignore it.</p>

<p>Some nitpicks:</p>

<ol>
<li>I would directly return without creating a temporary. The same is true for printing.</li>
<li>There are two spaces after is_nan =</li>
<li>Your functions are not in a class and are really functions. Even if they were methods it would be very redundant to add it. Why don't you just call it <code>is_nan</code>?</li>
</ol>

<pre><code>import math
import numpy as np

v1 = float('nan')
v2 = math.nan
v3 = np.nan

def is_nan(value) -&gt; bool:
    return value != value

print(is_nan(v1))
print(is_nan(v2))
print(is_nan(v3))
<span class="math-container">```</span>
</code></pre>
    </div>