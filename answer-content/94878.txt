<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Performance</h1>

<p>A very cache friendly representation of a directed graph is the <a href="http://web.archive.org/web/20150927090755/http://www.ncgia.ucsb.edu/giscc/units/u064/u064.html" rel="nofollow noreferrer">forward star representation</a>. Basically it's a single vector containing all edges sorted by their head node, with another index vector mapping a node to its first outgoing edge.</p>

<h1>Correctness</h1>

<p>Your definition of a "cycle" is somewhat non-standard? Usually, a cycle in a directed graph means that you can get back to a particular vertex. In your example, adding a vertex from 9 -&gt; 8 -&gt; 7 would make it cyclic. But I guess, it depends on what you're after.</p>

<p>Likewise, your sort order is reversed to the standard definition as given in Cormen:</p>

<blockquote>
  <p>If there is an edge <code>(u,v)</code> then <code>u</code> appears before <code>v</code> in the ordering.</p>
</blockquote>

<h1>Code style</h1>

<pre><code>class Vertex
{
public:
    virtual ~Vertex() = default;
}
</code></pre>

<p>No need to <code>default</code> the destructor here.</p>

<p>Consider making <code>colour</code>an attribute at <code>CVertex</code> instead of a separate vector. You're only shifting around pointers to it anyway so no need to have it separate.</p>

<p>Make <code>indegrees</code> a member of <code>Graph</code>. At the moment, every call to <code>Graph::indegree</code> iterates the whole vertex list.</p>

<p>In <code>Graph::topoSort</code>:</p>

<pre><code>    if (colour == White)
</code></pre>

<p>I think that could be <code>assert (colour == White)</code>. It doesn't have an indegree so it shouldn't have been visited before.</p>
    </div>