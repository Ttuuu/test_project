<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm continueing on <a href="https://codereview.stackexchange.com/a/155914/75854">the answer by Dan</a> as this might still be buggy on lower powered devices.</p>

<p>I suggest you use a <a href="http://benalman.com/projects/jquery-throttle-debounce-plugin/" rel="nofollow noreferrer">dethrottle/debounce</a> technique. In some browsers, <strong>the scroll event is fired <em>each scrolled pixel</em>!</strong> This might kill performance. The before mentioned technique limits the event to every x milliseconds, dropping the need for performance:</p>

<pre><code>// This example will trigger the event every 25ms.
$(document).scroll( $.throttle( 25, function(){
    header.toggleClass('filled', $(this).scrollTop() - 10 &gt; threshold);
}))
</code></pre>

<hr>

<p>In these cases I also like to add a small extra check to avoid the bigger functions. The <code>toggleClass()</code> functions isn't very heavy, but I thought it might be worth to demo:</p>

<pre><code>var hasPassedThreshold = false;
$(document).scroll( $.throttle( 25, function(){
    var scrolledPastThreshold = $(this).scrollTop() - 10 &gt; threshold;

    if( !hasPassedThreshold &amp;&amp; scrolledPastThreshold ){
        header.addClass('filled');
    }else if( hasPassedThreshold &amp;&amp; !scrolledPastThreshold ){
        header.removeClass('filled');
    }
    hasPassedThreshold = scrolledPastThreshold ;
}));
</code></pre>

<p>In this example it <em>might</em> give a small performance boost, but in case you start adding more functionallity on the if/else, this will lighten the load.</p>
    </div>