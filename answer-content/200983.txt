<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Don't go about <a href="/questions/tagged/reinventing-the-wheel" class="post-tag" title="show questions tagged 'reinventing-the-wheel'" rel="tag">reinventing-the-wheel</a>.  <strong>PHP already has a <a href="http://php.net/manual/en/function.uniqid.php" rel="nofollow noreferrer"><code>uniqid()</code></a> function</strong> that does that.  Like your function, <code>uniqid()</code> is just a way of encoding the time, with <strong>no randomness involved</strong>: the results will look dissimilar, but they are not cryptographically unguessable.  It would probably be a good idea to call it with a server-specific prefix, if you are running the application across multiple servers, otherwise collisions would be possible.  You might also want to incorporate the process ID somewhere, if you have multiple instances of the application that can run simultaneously on one server.</p>

<p>If you <em>truly</em> want the string to be unique, then follow the wisdom of the standards-makers, and use a <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier" rel="nofollow noreferrer">UUID</a>.  PHP does not have a UUID function, but Andrew Moore has written a <a href="http://php.net/manual/en/function.uniqid.php#94959" rel="nofollow noreferrer">recipe for generating standard UUIDs</a> in the comments.  (Unfortunately, standard UUIDs would be 36 characters long.)</p>
    </div>