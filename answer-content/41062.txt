<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have been facing the same issue for a few months, even though I didn't write that much functional code before switching. Please take my comments with a grain of salt even if I say "do <strong>this</strong>" instead of "<strong>this</strong> might help but I'm not sure".</p>

<ul>
<li><p>Use dictionaries instead of tuples:</p>

<pre><code>def create_member(genes):
    return {'sum': sum(genes), 'genes': genes}
</code></pre></li>
<li><p>Use generators instead of list-expressions:</p>

<pre><code>def mutate_pool(pool, rate=1):
    for member in pool:
        yield mutate_member(member, rate)
</code></pre>

<p>Yay, lazy lists! (kind of...)</p></li>
<li><p>Write code for the next person which will be reading it. You shouldn't put comments only where you had some trouble ("[::2] selects one gene out of two") but try to make any function easy to understand and modify in isolation.</p></li>
<li><p>Prefer longer functions and document them using docstrings. A nice function name is usually <strong>not</strong> enough for documentation:</p>

<pre><code>def mutate_genes(genes, rate):
    """
    Given a list of genes, flip some of them according to rate.
    """
    for gene in genes:
        yield 1 - gene if random.random() &lt;= rate else gene

def mutate_pool(pool, rate=1):
    """
    Returns a new pool of member where every bit in every gene could have been
    flipped according to rate.
    """
    for member in pool:
        yield member[0], mutate_genes(member[1], rate)
</code></pre>

<p>Of course those examples are a bit artificial but they do feel more pythonic. You don't have to document every function, just think about your readers. :)</p></li>
<li><p>Read nice Python code. I'd recommend <a href="https://github.com/django/django/blob/master/django/core/cache/backends/memcached.py" rel="nofollow">Django</a> and <a href="https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/cross_decomposition/pls_.py" rel="nofollow">scikit-learn</a> (Those are links to specific files that I chose randomly.)</p></li>
</ul>

<p>I think it's worthwhile to try to force yourself to write pythonic code for some time so that you can tell what's nice in "the Python way" and what's actually better in a functional style.</p>
    </div>