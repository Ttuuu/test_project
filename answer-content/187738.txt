<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Hopefully the response by James is sufficient for your concern about best practices. I did notice some redundancy in that snippet of Javascript.</p>
<p>Specifically, the line that handles adding the nonce attribute to the <em>script</em> and <em>style</em> tags could be simplified:</p>
<blockquote>
<pre><code>let newHTML = html.replace(/&lt;script/g, '&lt;script nonce="'+nonce1+'"').replace(/&lt;style/g, '&lt;style nonce="'+nonce1+'"');
</code></pre>
</blockquote>
<p>Since it already uses regular expressions (e.g. <code>/&lt;script/g</code>), a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-capturing-parentheses" rel="nofollow noreferrer">capturing group</a> could be added with the two cases for tag names: (i.e. <code>script</code> or <code>style</code>): <code>(script|style)</code> combined with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#special-or" rel="nofollow noreferrer">OR operator</a> (i.e. <code>|</code>), and refer to that value using a <a href="http://webreference.com/js/column5/values.html" rel="nofollow noreferrer">back-reference</a> (i.e. <code>$1</code> for the first captured group) when adding the nonce attribute (in the replacement string parameter).</p>
<p>See a demonstration of this in the snippet below (should be portable to NodeJS).</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const html = document.head.innerHTML;
const nonce1 = 'blablabla12125125';
const newHTML = html.replace(/&lt;(script|style)/g, '&lt;$1 nonce="' + nonce1 + '"');
console.log(newHTML);</code></pre>
</div>
</div>

<p>That way there is only one call to <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace" rel="nofollow noreferrer">String.replace()</a>. While it might not save much processing time or power, it can at least make the line shorter and hopefully easier to read. In addition, if there was a need to add the attribute to additional tags, that tag name could easily be added to the expression in the capturing group.</p>
<p>Also notice that <code>newHTML</code> is declared with the <code>const</code> keyword instead of <code>let</code> because there is no need for reassignment. It is a good habit to use <code>const</code> by default and switch to <code>let</code> when re-assignment is deemed necessary.</p>
    </div>