<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's nothing wrong with the other answers, but if you'd prefer a solution more portable than <code>asprinf()</code> and slightly more straightforward than Jerry Coffin's vsnprintf() helper function <a href="https://codereview.stackexchange.com/a/223101/51483">solution</a>, consider this variable length macro solution:</p>

<pre><code>#define FOO_ASPRINTF(_str, ...) /* replace FOO with your codebase's prefix */ \
do { \
    int byte_c = snprintf(NULL, 0, __VA_ARGS__); \
    (_str) = malloc(byte_c + 1); \
    if (!(_str)) { \
        FOO_MALLOC_ERR; /* should depend on your codebase's malloc() policy */ \
    } \
    sprintf(_str, __VA_ARGS__); \
} while (0)
</code></pre>

<p>Which in OP's case might be invoked as:</p>

<pre><code>char * buff = NULL;
CG_ASPRINTF(buff,
    "%lld %f %f %f %f %f %f %f %f %f %f",
    state-&gt;last_update_time,
    p-&gt;health,
    p-&gt;max_health,
    p-&gt;satiation,
    p-&gt;max_satiation,
    s-&gt;milliseconds_per_tick,
    s-&gt;hunger_pain_per_tick,
    s-&gt;hunger_per_tick,
    s-&gt;satiated_heal_per_tick,
    s-&gt;pain_per_wrong_answer,
    s-&gt;satiation_per_right_answer
);
</code></pre>

<p>Some people might be allergic to macros, but in this case it allows easy implementation, avoids any overhead, and is perfectly portable.</p>
    </div>