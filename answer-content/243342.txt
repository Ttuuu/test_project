<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<p>How could I do better using basic SIMD and SSE?</p>
</blockquote>
<p>The most important things are:</p>
<h1>Delay horizontal addition as long as possible</h1>
<p><code>haddps</code> costs two shuffles and a normal addition. It is used twice, plus a shift and scalar-add. That's a lot of cost, and none of it is necessary: the main loop can just use <code>addps</code>. When the main loop is done, then you still need horizontal addition, but that cost is only paid once so it's not bad.</p>
<p>By the way, you can horizontally sum <code>xmm1</code> like this:</p>
<pre><code>haddps  xmm1, xmm1
haddps  xmm1, xmm1
</code></pre>
<p>No pre-zeroed register required, and no shift. It wastes a lot of work that <code>haddps</code> does, but it's short and simple.</p>
<h1>Use multiple accumulators</h1>
<p>When accumulating via <code>addps</code>, its latency becomes a bottleneck. <code>mulps</code> can be executed once or twice per cycle depending on the architecture, while <code>addps</code> has a latency of 3 to 4. Two <code>mulps</code> per cycles is not a reachable goal for a dot product (too much data needs to be loaded), but one per cycle is. Using a single accumulator means the loop is (eventually) limited to 1 iteration every 3 (or 4) cycles, it can get started quicker but a backlog of dependent <code>addps</code> builds up until it start to block progress.</p>
<p>Using multiple accumulators fixes that issue by spreading the work across some independent <code>addps</code>, so progress can be made faster.</p>
<p>As a bonus, the <code>haddps</code> after the loop has more useful work to do.</p>
<h1>Use a 1-jump loop</h1>
<pre><code>start:
    cmp rax, 4
    jl end
    ...
    jmp start
</code></pre>
<p>Is a 2-jump loop, but you can make it a 1-jump loop like this:</p>
<pre><code>    jmp loopentry
start:
    ...
loopentry:
    cmp rax, 4
    jnl start
</code></pre>
<p>There are still two jumps, but one of them is not in the loop anymore.</p>
    </div>