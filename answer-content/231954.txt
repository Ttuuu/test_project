<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your implementation is good. I would suggest following points to improve:</p>

<ul>
<li><p>Use <code>@GetMapping</code>, <code>@PostMapping</code> and the others instead of <code>@RequestMapping</code>. It gives the other developers clear description of what method is used.</p></li>
<li><p>It would be nice to add media types (<code>consumes="..."</code>, <code>produces="..."</code>)</p></li>
<li><p>I would make <code>AccountController.accountService</code> field <code>final</code> and add as constructor param. It shows that <code>AccountController</code> can't exists without <code>AccountService</code>. In other words you don't have a way create a inconsistent instance of AccountService (in application context or tests). </p></li>
<li><p>Do not return all accounts on account creation (<code>AccountController</code>). Usually we return new account with filled ID.</p></li>
<li><p>Use generics in Response&lt;...&gt;</p></li>
<li><p>I think you could use <code>org.springframework.http.ResponseEntity</code> instead of your <code>Response</code></p></li>
<li><p>If <code>AccountStatementRequest</code> can't exists without <code>accountNumber</code> make the field final. (the same for <code>TransferBalanceRequest</code> and <code>AccountStatement</code>)</p></li>
<li><p>It would be nice to annotate <code>AccountServiceImpl</code> (or it<code>s methods at leaset</code>sendMoney<code>)</code>@Transactional`. It should be done in single transaction I guess.</p></li>
<li><p>I would move <code>dto.response</code> classes to <code>controller.response</code> and <code>dto.model</code> to <code>dto</code></p></li>
</ul>
    </div>