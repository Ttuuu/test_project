<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think the menu is effective but a bit awkward. Reading the string directly might be a nice bit of user friendliness. The code below only multiplies two numbers, but I think it could probably go to many more.</p>

<p>Hopefully this code will show you about regex and such. Findall is quite useful.</p>

<pre><code>    import re
    while True:
        my_operation = input("Enter a simple arithmetic operation (-+*/), no parentheses:")
        if not my_operation:
            print("Goodbye!")
            break
        numstrings = re.split("[\*\+/\-]", my_operation) #x*y, for instance
        if len(numstrings) == 1:
            print("I need an operation.")
            continue
        if len(numstrings) != 2: #2*3*4 bails
            print("I can only do a single operation right now.")
            continue
        for my_num in numstrings:
            if not my_num.isdigit(): #e.g. if you try z * 12
                print(my_num, "is not a digit.")
                continue
        numbers = [int(x) for x in numstrings] # convert strings to integers
        my_operator = re.findall("[\*\+/\-]", my_operation)[0] #this finds the first incidence of the operators
        out_string = my_operation + " = "
        if my_operator == '-': out_string += str(numbers[0] - numbers[1])
        elif my_operator == '+': out_string += str(numbers[0] + numbers[1])
        elif my_operator == '*': out_string += str(numbers[0] * numbers[1])
        elif my_operator == '/': out_string += str(numbers[0] / numbers[1])
        else: print("unknown")
        print(out_string)
</code></pre>

<p>Possible improvements would be to create a string r'[-+/*]' so it would be easy to add, say, 3^3 or 5%3 or even 5&amp;3 (bitwise and) or 5|3(bitwise or).</p>
    </div>