<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Difficult to fix this kind of thing without being able to run the code.  That said, having a look at your comments above, and what you've got there, I would suggest a few things. </p>

<p>First off, when things start to lag, the UI is freezing up, or you're r experiencing render thrashing that can also make things lag, usually I would start with:</p>

<ul>
<li>It looks like you're seting the value from the store, as you type, which is an unneccessary bit of heavy lifting. Use local state and move away from controlled components for form fields.</li>
<li>Change PureComponent for Component and use ShouldComponentUpdate along with a deep equality check (lodash, underscore, both have _.equal or roll your own).  PureComponent only does a shallow comparison, so you may still see all sorts of thrashing in your react dev tools.  I've seen this often on lists, and list Items.</li>
<li>use <code>throttle</code> rather than debounce (debounce takes the last event after a given time, where throttle will take it at a set interval but avoid hammering your API on every request) - again assuming your onFilter function triggers an API call.</li>
<li>Maybe you're doing do much at once

<ul>
<li>if the above is triggering multiple API calls, are you cancelling, and then calling again?</li>
<li>Are you using selectors to filter the list client side, to ensure you're not triggering additional renders unneccessarily?</li>
<li>marshal the events in your application, so that you show a loading indicator, and then only filter your list once the results are available.</li>
</ul></li>
<li>Look at the libs/deps

<ul>
<li>I'm not experienced with Downshift, though it may be interacting with the DOM directly, try removing this.</li>
<li>I've had no issues with the material-ui inputs, so I wouldn't look there</li>
<li>have you got anything else going on at the same time? Logging in redux, bugsnag or similar, rendering images?, animations?  If you watch the react tree in dev tools is anything else rendering unnecessarily?  Try disabling these one by one if you can, to find the culprit.</li>
<li>Something I have had issues with is the material-ui spinner, if you're using that anywhere in the same view, try removing that as well.</li>
</ul></li>
<li>Look outside the scope of your current component</li>
</ul>

<p>Thats a really hard one without being able to fiddle with the code, Hope this is helpful.</p>
    </div>