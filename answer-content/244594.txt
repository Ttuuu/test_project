<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<p><em>If my form grows .. I'd have to add state ... and add state ... and [add] another case to my switch statement</em></p>
</blockquote>
<p>This is a code smell, and not unique to Javascript. This is design problem and the fix has to be at the core of the design - <strong>a JS data structure will fix it</strong>.</p>
<p><strong>An array of field objects</strong> (in the proper order) will eliminate code proliferation. You will <code>new field()</code> for each actual UI field. Pass constructor parameters for field-specific values.</p>
<blockquote>
<p><em>I'm unhappy with how fields are being cleared</em></p>
</blockquote>
<p>"change", "set", "clear" are all the same thing. A field cleared in the course of validating - setting state - is the same as setting any value. It is trivial to iterate the collection and set child fields with no regard to field names. NO <code>switch</code> STATEMENT REQUIRED.</p>
<blockquote>
<p>Any suggested improvements for my design structure would be much appreciated!</p>
</blockquote>
<ul>
<li><p>Creating data structures significantly cleans up and simplifies code. <em><strong>The data structure is the UI state</strong></em></p>
</li>
<li><p>A collection (e.g. array) of same-type objects, scales very well. The more dependencies among UI entries, the more bang for the buck. Hear me now and believe me later!</p>
</li>
<li><p>How it works</p>
<ul>
<li><p>Populate the data structure from the UI. Include all UI entry values and properties needed for setting visual state, like graying out or hiding.</p>
</li>
<li><p>Validate data structure setting its object properties to a valid state.</p>
</li>
<li><p>Replace all UI fields/properites from the data structure.</p>
</li>
<li><p>Pass all values/properties every time. Never this: "field x was not changed so don't pass it" - irrelevant because the data structure is always evaluated top to bottom and always ends up in a valid state.</p>
</li>
</ul>
</li>
</ul>
    </div>