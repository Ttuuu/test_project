<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your layout is all over the place. Sometimes, you indent by 8 spaces, sometimes by 4. Sometimes, you have whitespace around <code>else</code> on both sides, sometimes only on the right. Sometimes, you have whitespace around <code>,</code> on both sides, sometimes only on the right. Sometimes, you have one space before and after an operator, sometimes none, sometimes, you have two spaces after an operator. Be consistent!</p>

<p>Consistency is important, because if you express the same thing in two different ways, a reader of the code will think that you wanted to express two different things, and they will waste time wondering what the difference is.</p>

<p>You have empty lines to break your code up into logical units, but they are in weird places, such as before an <code>else</code> or before a closing curly brace.</p>

<p>Sometimes, you use semicolon, sometimes you don't.</p>

<p>You should be consistent and follow a fixed set of rules. Ideally, you should use an automated tool to format your code, so that you don't have to make those decisions at all.</p>

<p>For example, <code>jslint</code> with default settings detects 3 errors and then stops and doesn't even parse the whole file, <code>jshint</code> with the default settings detects 6 errors, and <code>eslint</code> with some reasonable settings detects a whopping 63 errors and 14 warnings. With <em>my</em> settings, the numbers are even worse: 20 errors for <code>jshint</code> and 155(!!!) for <code>eslint</code>. You should always use a linter and make sure that your code is lint-clean.</p>
    </div>