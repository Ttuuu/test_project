<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You should learn about <a href="http://www.diveintopython3.net/special-method-names.html" rel="nofollow noreferrer">Python's magic (or dunder) methods</a>. They allow your custom class to interact with the built-in functions (by e.g. defining what <code>a + b</code> means for objects of your class, or, which is relevant here, what <code>print(team)</code> or <code>print(player)</code> mean.</p>

<p>For this I would add two methods, first the <code>__iter__</code> method, which allows you to iterate over your team and get each player, and the <code>__str__</code> method, which defines how your class prints:</p>

<pre><code>class Player:
    def __init__(self, name, age, skills, style=None):
        self.name = name
        self.age = age
        self.skills = skills
        self.style = style

    def __str__(self):
        return f"{self.name} {self.age} {self.skills} {self.style or ''}"


class Team:
    def __init__(self, name, players=None):
        self.name = name
        if players is not None:
            self._players = list(players)
        else:
            self._players = []

    def add_player(self, obj):
        if isinstance(obj, Player):
            self._players.append(obj)
        else:
            print("Please provide player object")

    def __iter__(self):
        return iter(self._players)

    def __str__(self):
        out = [f"Team name: {self.name}", "Players:"]
        out.extend(str(player) for player in self)
        return "\n".join(out)


if __name__ == "__main__":

    players = [Player("Mahendra", 46, "Wicket Kipper", "Right-Hand Batsman"),
               Player("Sachin", 35, "Batsman", "Right-Hand Batsman"),
               Player("Saurabh", 44, "Batsman", "Left-Hand Batsman"),
               Player("Zahir", 38, "Bauwller", "Medium Pace Bauwller"),
               Player("Yuvraj", 43, "All rounder")]

    india = Team("India", players)
    print(india)

    # equivalent:
    print("Team name:", india.name)
    print("Players:")
    for player in india:
        print(player)
</code></pre>

<p>I also added an optional keyword argument to the <code>Team</code> constructor to allow passing in a list of players right away.</p>

<p>I also removed the explicit inheritance from <code>object</code>, which is not needed anymore in Python 3 (only for backwards compatibility with Python 2), as all classes are new-style classes.</p>
    </div>