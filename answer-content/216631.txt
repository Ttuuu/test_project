<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>field-based vs constructor-based dependency injection<br>
Placing the <code>@AutoWired</code> annotation on the instance variables means the Spring container will use field-based injection. It will <strong>NOT</strong> use the constructor to populate the dependencies. If you want to signal to the container to use constructor-based injection, you need to place the annotation on the method. and why the constructor is initializing only two dependencies when there are three?</p></li>
<li><p>ping return<br>
returning hard-coded json String is not best practice. in the future, you may want to extend the functionality for example to return detailed status of external resources (like Database, storage, etc). either use a Map or a user defined POJO.</p></li>
<li><p>Method names<br>
<code>playerPOST</code>, <code>playerDELETE</code> is both uninformative as well as doesn't follow naming convention. why no use the names of the service methods? and why return an empty String? just don't return any body at all.</p></li>
<li><p>producing json<br>
Spring has an enumerated set of values for <code>produces</code> attribute. class name: <code>org.springframework.http.MediaType</code>  </p></li>
</ol>
    </div>