<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For input "fooo", the implementation returns "f1o3",
which is the same length, and violates one of the requirements:</p>

<blockquote>
  <p>If the "compressed" string would not become smaller than the original string, your method should return the original string.</p>
</blockquote>

<p>The fix is in the <code>return</code> statement: change <code>&lt;=</code> to <code>&lt;</code>.</p>

<hr>

<p>Another corner case is when the input is empty, the statement <code>char prevChar = input.charAt(0);</code> will throw <code>StringIndexOutOfBoundsException</code>.</p>

<hr>

<p>Lastly, a performance pitfall in the return statement,
<code>output.toString()</code> creates a new string,
therefore the following may result in double computation:</p>

<blockquote>
<pre><code>return output.toString().length() &lt; input.length() ? output.toString() : input;
</code></pre>
</blockquote>

<p>You could instead benefit from the <code>length()</code> method of <code>StringBuilder</code>:</p>

<pre><code>return output.length() &lt; input.length() ? output.toString() : input;
</code></pre>
    </div>