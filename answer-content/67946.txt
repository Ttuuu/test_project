<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A number of answers have pointed out some algorithmic changes, and some logic steps you can take, to calculate the result, but there's a simpler way to do it, which is not necessarily the fastest way, but it is still blazingly fast, and still very simple.</p>

<p>The algorithm you have by testing every number is obviously overkill, but, what about going through the basics of the process, and implementing it in code. What is the question actually asking? It's asking for the lowest common multiple of all the numbers 1 through 20.</p>

<p>Mathematically, 1 is a multiple of 1. so, we start there...</p>

<p>Then, find the multiple of 1 that is also a multiple of 2... to do that, we add the 1 to itself repeatedly, until we get a multiple of 2. This is easy, it is just once....</p>

<p>Now we have 2, which is a multiple of both 1, and 2. We want to find the multiple of both 1 and 2 (which is 2), that is also a multiple of 3, so, we check whether 2 is a multiple (it's not), so we add 2 to itself, which is 4. Is 4 a multiple? No, so we add 2 again, to get 6. Is 6 a multiple of 3? Yes. So, 6 is the lowest multiple of 1, 2, and 3. Now, we just repeat this process to 20.</p>

<p>Let's introduce some names here, <code>lcm</code> is the lowest common multiple, and <code>sum</code> is some value that is a multiple of <code>lcm</code>. If <code>sum</code> is a multiple of <code>lcm</code>, then it is also a multiple of everything that <code>lcm</code> is a multiple of.</p>

<p>The rest is actually easier to understand with code....., and it can be generalized very easily with a method like:</p>

<pre><code>public static int GetLCM(int from, int to) {
    // lcm is the Lowest Common Multiple, which starts as just 'from'
    var lcm = from;
    for (int i = from; i &lt;= to; i++) {
        var sum = lcm;
        while (sum % i != 0) {
            sum += lcm;
        }
        // sum is now the first multiple of lcm that is also a multiple of i
        lcm = sum;
    }
    return lcm;
}
</code></pre>

<p>Now, I have taken that concept <a href="http://ideone.com/mYcr6M">and implemented it on Ideone</a>, and you can see that it arrives at the right solution, using a simple algorithm, in almost no time.</p>
    </div>