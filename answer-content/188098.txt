<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Upper bound for p_n</h1>

<p>There is a <a href="https://math.stackexchange.com/questions/1270814/bounds-for-n-th-prime">known upper bound for the n-th prime</a>.</p>

<p>It means that you don't need to guess how large it could be. <code>upper_bound_for_p_n(10001)</code> tells us in less than a micro-second that the desired number cannot be larger than <code>114320</code>.</p>

<p>You just need to apply the <a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes" rel="nofollow noreferrer">Sieve of Erathosthenes</a> up to 114320 and you're done:</p>

<pre><code>from math import log, ceil

def find_primes(limit):
    nums = [True] * (limit + 1)
    nums[0] = nums[1] = False

    for (i, is_prime) in enumerate(nums):
        if is_prime:
            yield i
            for n in range(i * i, limit + 1, i):
                nums[n] = False

def upper_bound_for_p_n(n):
    if n &lt; 6:
        return 100
    return ceil(n * (log(n) + log(log(n))))

def find_n_prime(n):
    primes = list(find_primes(upper_bound_for_p_n(n)))
    return primes[n - 1]
</code></pre>

<p>It calculates the <em>10001th</em> prime in 15ms on my computer, compared to 35s for your code.</p>
    </div>