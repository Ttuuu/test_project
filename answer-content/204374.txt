<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The other answers are great, but I'll address something more fundamental: Regex is not the right tool for URL parsing. Python has terrific built-in modules. Take advantage of them. <code>urlparse</code> is great!</p>

<pre><code>acceptable_hostname_regex = re.compile("(i.(stack.)?)?imgur.com")

def parse_imgur_url(url):
    parsed = urlparse(url)

    if not acceptable_hostname_regex.match(parsed.hostname):
        raise ValueError(f"The string {url} is not a valid imgur link")

    path_components = [c for c in parsed.path.split("/") if c]

    if len(path_components) == 1:
        image_name = path_components[0]
        id = image_name[:image_name.index(".")]
        type = "image"

    elif len(path_components) == 2:
        type = path_components[0]
        id = path_components[1]

        type_overwrite_table = { "a": "album" }

        type = type_overwrite_table.get(type, type)

    else:
        raise ValueError(f"The imgur link {url} has too many path components.")

    return { 'id': id, 'type': type }
</code></pre>

<p>Another issue: your <code>gallery_regex</code>, <code>album_regex</code>, etc. local variables don't actually store regex objects (of type <code>re.Pattern</code>) like their name would imply, rather, they're storing <code>re.Match</code> objects.</p>
    </div>