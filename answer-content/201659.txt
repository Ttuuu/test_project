<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just reviewing <code>DFA</code>.</p>

<ol>
<li><p>There are no docstrings. What does an object belonging to this class represent? What arguments do I pass to the constructor? What does the <code>match</code> method do?</p></li>
<li><p>In Python 3, all classes inherit from <code>object</code> so there is no need to specify this explicitly, unless you need to code to be portable to Python 2.7 (but the use of type annotations means that this can't be the case).</p></li>
<li><p>The initial state has to be the number 0. This seems arbitrary. Why not allow the caller to supply any Python object for the initial state?</p></li>
<li><p>The name <code>table</code> is vague: what kind of data is in this table? I would use a name like <code>transition</code>.</p></li>
<li><p><code>table</code> needs to be a mapping from states to mappings from Unicode code points to states. Why not use characters instead of their Unicode code points? This would avoid the need for the call to <code>ord</code>, and would also make the tables easier to understand since the keys would be strings like <code>'a'</code> and <code>'b'</code> instead of mysterious numbers like 97 and 98.</p></li>
<li><p>The name <code>pattern</code> for the argument to the <code>match</code> method is misleading: normally this name is used for the pattern that needs to be matched, not the string that gets matched against the pattern. See for example <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a>.</p></li>
<li><p>The <code>match</code> method returns the printable characters in the longest initial substring of the argument that matches, or the empty string if no initial substring matches. This means that if <code>match</code> returns the empty string, it's not clear whether the longest match consisted entirely of non-printing characters, or whether there was no match at all. Compare with <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a>, which returns the distinguished value <code>None</code> when there is no match.</p></li>
<li><p>I don't understand the purpose of only returning the printable characters in the longest initial matching substring. This seems arbitrary — surely removing non-printing characters from the match is something that can be left to the caller (in the rare case that the caller needs this feature).</p></li>
<li><p>There are two mechanisms for the table to specify that a character is not matched — it can omit a transition for the Unicode code point for that character, or it can specify a transition to the special state <code>-1</code>. Having two mechanisms for the same feature is a bad idea because there could be a bug in one of the mechanisms that would be easy to miss because you only exercised the other mechanism. It is best to have only one way to do something.</p></li>
</ol>
    </div>