<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think you have the optimized solution, I haven't tested the performance factor of this solution, please see whether this solution will work for you.</p>

<pre><code>function findCommonElements(arr) {

    // an array to hold the count of each elements in the input elements
    var lookupArray = [];

    // an array to hold the common elements in all the array
    var commonElementArray = [];

    // iterates through each elements in the array to find the common elements
    for (var arrayIndex = 0; arrayIndex &lt; arr.length; arrayIndex++) {
        for (var childArrayIndex = 0; childArrayIndex &lt; arr[arrayIndex].length; childArrayIndex++) {

            // check whether we have already find the current element
            if (lookupArray[arr[arrayIndex][childArrayIndex]]) {

                // we have already seen this element, so increment count by one
                lookupArray[arr[arrayIndex][childArrayIndex]]++;
            } else {
                // this is a new element so set the count to 1
                lookupArray[arr[arrayIndex][childArrayIndex]] = 1;
            }

            // check the updated count of the current element in the look up table, if the 
            // count is same as the number of input arrays, then its a common element
            if (lookupArray[arr[arrayIndex][childArrayIndex]] == arr.length) {

                // this is a common element, push it to the array
                commonElementArray.push(arr[arrayIndex][childArrayIndex]);
            }
        }
    }

  //  console.log(commonElementArray);
    return commonElementArray;
}
</code></pre>

<p><strong>Explainer</strong></p>

<p>Basically we will maintain look up array which is an array of counters. When ever we find a element in the input array we will increment the counter value by 1 which is identified by the index corresponds to the value of element we got from the array.</p>

<p>For ex if you have an array like this <code>[1,5,6]</code> after the iteration the look array would look like this</p>

<pre><code>lookUpArray[0] = undefined;
lookUpArray[1] = 1;
lookUpArray[2] = undefined;
lookUpArray[3] = undefined;
lookUpArray[4] = undefined;
lookUpArray[5] = 1;
lookUpArray[6] = 1;
</code></pre>

<p>Subsequent iterations will add or increment the counter values, and we have a common element whenever we have a counter value identified by index corresponds to the element has same value as that of number of input array.  </p>

<p>Hope I have made myself clear. Please let me know of your comments </p>
    </div>