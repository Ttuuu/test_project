<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have the right idea, and your function <em>almost</em> works, but your code is only checking that ( is balanced with ), and [ is balanced with ]. So it will handle cases like <code>aaa(bbb[ccc]ddd)eee</code> correctly. But it will also accept <code>aaa(bbb[ccc)ddd]eee</code>, and that is wrong.</p>

<p>You should only have a <em>single</em> stack, and you should push all the opening brackets onto it. When you get a closing bracket, pop off the most recent opening bracket and make sure it matches.</p>

<p>Here I've taken your code and replaced the two stacks with one, which I've given a more meaningful name.</p>

<pre><code>def checkBalancedBrackets(str) {
    var bracketStack = [];
    for (var i=0; i &lt; str.length; i++) {
        var ch = str.charAt(i);
        // For opening brackets, we push the character that will match them
        if      (ch == "(") bracketStack.push(")");
        else if (ch == "[") bracketStack.push("]");
        else if (ch == ")" || ch == "]") {
            if (bracketStack.length &lt; 1) {
                return false;
            } else {
                match = bracketStack.pop();
                if (ch != match) {
                    return false
                }
            }
        }
    }
    return bracketStack.length == 0;
}
</code></pre>
    </div>