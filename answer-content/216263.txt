<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In your first two solutions you compare with <code>is True</code> in <code>if get_attr(user_agent, prop) is True</code> / <code>if get_attr(user_agent, f'is_{type}') is True</code>. Explicitly comparing to <code>True</code>/<code>False</code> is usually frowned upon in Python (contrary to "Explicit is better than implicit"), you want to accept any truthy or falsey value. So just do <code>if get_attr(user_agent, f'is_{type}')</code>.</p>

<p>As to which is better, that is indeed a tough call. None of them are really nice, all of them have some disadvantages:</p>

<ol>
<li><p>I would only choose the first one if the mapping from attribute name to types was less regular.</p></li>
<li><p>I would personally prefer number two. It is succinct and readable. All three implementations depend on the implementation of the <code>user_name</code> class, anyway, by hardcoding the names, so none of them is more robust in that regard. It also scales more easily with the number of cases, since you only need to add it to the tuple (maybe eventually pulling it out into a separate variable if there are too many).</p></li>
<li><p>If there were less possibilities, the third one is definitely the most readable version. It is also the one where adding more types is the most tedious, since you copy&amp;paste code around.</p></li>
</ol>
    </div>