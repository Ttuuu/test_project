<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>positionInitCaseNom1enY</code> and <code>positionCaseNomEnX</code> should be declared as <code>Const</code> or in an <code>Enum</code> because they are default values that never change.</p>
<pre><code>Const positionInitCaseNom1enY As Long = 5
Const positionCaseNomEnX As Long = 3
</code></pre>
<p>Do to implicit conversion <code>no</code> does not need to be cast to a String.  The compiler automatically does it for you.</p>
<pre><code>Dim nos As String  
nos = CStr(no)     ' no to string (now nos)
</code></pre>
<p>Use dynamic ranges whenever possible.</p>
<pre><code>Set valeurnorm = Sheets("Liste Employé").Range("A2:A200").Find(nos)
</code></pre>
<p>Assuming the name list is the only thing in column A, you should dynamically size you range to fit the data like this:</p>
<blockquote>
<pre><code>With Sheets("Liste Employé")
    Set valeurnorm = .Range("A2", .Cells(.Rows.Count, "A").End(xlUp)).Find(nos)
End With
</code></pre>
</blockquote>
<p><img src="https://i.stack.imgur.com/Rsgdw.png" alt="Employee Names"></p>
<p>Using <strong>Dynamic Named Ranges</strong> helps to give your code identity.  And that is what we want to do as developers.  If you have to comeback a year from now, you may not know what <code>StandarValues</code> represent but you will immediately understand what <code>EmployeeNames</code> are.</p>
<blockquote>
<p>Set employeeNames= Sheets("Liste Employé").Range("EmployeeNames").Find(nos)</p>
</blockquote>
<p>Alerts are necessary but having to click a <code>MsgBox()</code> can get irritating.  I would prefer that:</p>
<blockquote>
<p>If .Find("Another Solution") is Not Nothing Then Call
Use(.Find("Another Solution"))</p>
</blockquote>
<h2>Solution 1: Use Conditional Formatting</h2>
<p><a href="https://www.extendoffice.com/documents/excel/3499-excel-highlight-cells-not-in-list.html" rel="nofollow noreferrer">How To Highlight Cells If Not In Another Column In Excel?</a></p>
<h2>Solution 2: Use an ActiveX Combobox</h2>
<p>Setup
• Insert a hidden ComboBox on each Worksheet that needs the name validation
• Give it a meaning full name
• Set it's ListFillRange a <strong>Dynamic Named Range</strong> of employee names</p>
<p><img src="https://i.stack.imgur.com/L2t2S.png" alt="ComboBox ListFillRange"></p>
<p>When a cell in the validation range is selected use the <code>Workbook_SheetSelectionChange()</code>
• Move the ComboBox over the Activecell
• REsize the ComboBox to fit the ActiveCell
• Set the <code>ComboBox.LinkedCell = ActiveCell</code>
• Set focus to the ComboBox</p>
<p>When the user selects a cell in the
• Hide the ComboBox
• Set the <code>ComboBox.LinkedCell = Nothing</code></p>
<p><img src="https://i.stack.imgur.com/oCHPu.gif" alt="Combo ValidationList"></p>
<blockquote>
<pre><code>Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Range)
    AdjustEmployeeNameComboBox Sh, Target
End Sub

Private Sub AdjustEmployeeNameComboBox(ByVal Sh As Object, ByVal Target As Range)
    Dim hasEmployeeRange As Boolean
    On Error Resume Next
    
    Dim EmployeeNameComboBox As OLEObject
    Set EmployeeNameComboBox = Sh.OLEObjects("EmployeeNameComboBox")
    hasEmployeeRange = Err.Number = 0
    On Error GoTo 0

    If Not hasEmployeeRange Then Exit Sub
    
    Dim isEmployeeRangeSelected As Boolean
    isEmployeeRangeSelected = Not Intersect(Target, Sh.Range("C5:C8")) Is Nothing
    
    With EmployeeNameComboBox
        .LinkedCell = ""
        .Visible = isEmployeeRangeSelected
    End With
    
    If Target.Cells.Count &gt; 1 Then Exit Sub
    
    If isEmployeeRangeSelected Then
        With EmployeeNameComboBox
            .LinkedCell = Target.Address
            .Top = Target.Top
            .Left = Target.Left
            .Height = Target.Height
            .Width = Target.Width
            .Activate
        End With
    End If
End Sub
</code></pre>
</blockquote>
<p>Ugh..kinda nasty but it works.</p>
<p>Solution 3: Almost the Same as 2</p>
<p>Use the same setup as Solution2 but use a Cell Style to indicate that it is an Employee Name Validation Range.  The advantage of this is that you could have the validation anywhere on the Worksheet without having to update your code.</p>
<p>For this solution you will need to change</p>
<blockquote>
<p>isEmployeeRangeSelected = Not Intersect(Target, Sh.Range("C5:C8")) Is Nothing</p>
</blockquote>
<p>to this</p>
<blockquote>
<p>isEmployeeRangeSelected = Target.Style = "Cell Style Name goes Here"</p>
</blockquote>
    </div>