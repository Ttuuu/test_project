<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Going further from <a href="https://codereview.stackexchange.com/a/209625/9452">alecxe's answer</a>:</p>

<ul>
<li>you could use the Counter collections instead of performing the counting yourself - I didn't see that this was avoided on purpose.</li>
<li>you can ensure <code>lower</code> is called only once</li>
</ul>

<p>You'd get something like:</p>

<pre><code>from collections import Counter

def non_repeat(input_string):
    lower = input_string.lower()
    count = Counter(lower)
    for c, l in zip(input_string, lower):
        if count[l] == 1:
            return c
    return ''
</code></pre>

<p>or, for a Counter-less solution:</p>

<pre><code>def non_repeat(input_string):
    lower = input_string.lower()
    count = defaultdict(int)
    for c in lower:
        count[c] += 1
    for c, l in zip(input_string, lower):
        if count[l] == 1:
            return c
    return ''
</code></pre>

<p>Also, here's a quick test suite I wrote:</p>

<pre><code>tests = [
    ('', ''),
    ('AA', ''),
    ('AAABBB', ''),
    ('AAABBBc', 'c'),
    ('azerty', 'a'),
    ('aazzeerty', 'r'),
    ('azerAZERty', 't'),
]

for inp, out in tests:
    assert non_repeat(inp) == out
</code></pre>
    </div>