<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The swapping</p>

<pre><code>if (bigger &lt; smaller) {
    std::swap(smaller, bigger);
}
</code></pre>

<p>if two rooms are merged seems to be unnecessary. The absolute tracker
values are not important, only that they are identical for connected
fields. Also</p>

<ul>
<li>Your test suite still succeeds with that code removed. </li>
<li>Tests with random 100x100 maps resulted in the same room count
with and without the swapping.</li>
</ul>

<p>(I also ran the same random maps through my <a href="https://codereview.stackexchange.com/q/200066/35991">Swift version</a> and got identical results.)</p>

<p>There is a small error in the setup of the testing threads:</p>

<pre><code>for (auto i{n} ; i; --i) {
    chunks.push_back(std::async(testing, height, width, bits, n-1));
}
</code></pre>

<p>The same argument <code>n-1</code> is passed to all threads, which means that they
all test the same floor plan. It should be <code>i-1</code> instead. And <code>bits</code>
must be <code>bits-1</code> in order to preset the last “bits” of a floor plan: </p>

<pre><code>for (auto i{n} ; i; --i) {
    chunks.push_back(std::async(testing, height, width, bits-1, i-1));
}
</code></pre>

<p>Your method to iterate over all possible floor plans (with some
pre-set bits at the end)</p>

<pre><code>for (TestHouse t{height, width, bits, chunk}; t; ++t) {
    t.test();
}
</code></pre>

<p>is a bit too obscure in my opinion. To understand that loop one has
to look-up the <code>operator bool()</code> and understand that it returns
<code>false</code> if the last increment had an overflow.</p>
    </div>