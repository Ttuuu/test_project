<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>There is a curious asymmetry between <code>Memory::store_*</code> and <code>Memory::read_*</code>. The former uses <code>mem_ptr_</code>, while the latter does not.</p></li>
<li><p>I understand that <code>mem_ptr_</code> is intended to model the <code>I</code> register. Please realize that it belongs to the <code>CPU</code> class, rather than <code>Memory</code>.</p></li>
<li><p><code>read_bulk</code> returning a vector (and <code>store_bulk</code> taking a vector) does not look correct in this context. It seems that their purpose is emulating <code>Fx65</code> (and <code>Fx55</code> respectively) family of instructions. Yet again, these methods will only be called by CPU, which already knows where the data shall be read into (or written from). Just pass the pointer to the CPU regfile.</p></li>
</ul>
    </div>