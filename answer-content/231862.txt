<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I see you have already applied <code>using</code> to the transaction.</p>

<p>But given that a new <code>SqlConnection</code> is created for each command, I would suggest wrapping it in a <code>using</code> statement as well. </p>

<pre><code>private async Task&lt;T&gt; CommandAsync&lt;T&gt;(Func&lt;IDbConnection, IDbTransaction, int, Task&lt;T&gt;&gt; command)
{
    using(var connection = new SqlConnection(_connectionStrings.CurrentValue.MainDatabase))
    {
        await connection.OpenAsync().ConfigureAwait(false);
        await using var transaction = await connection.BeginTransactionAsync();
        try
        {
            T result = await command(connection, transaction, 300).ConfigureAwait(false);

            await transaction.CommitAsync().ConfigureAwait(false);

            return result;
        }
        catch (Exception ex)
        {
            await transaction.RollbackAsync().ConfigureAwait(false);
            _logger.LogError(ex, "Rolled back transaction");
            throw;
        }
    }
}
</code></pre>
    </div>