<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can simplify the checks that find the smallest image. If you assume that if the image is smaller in one dimension, it will be smaller in both (which you seem to be already), you can find the smallest image using <code>min</code>'s <code>key</code> parameter:</p>
<pre><code>small_image = min(image1, image2, key=lambda image: image.size[0])
large_image = image1 if image2 == small_image else image2

canvas = large_image.load()
insert = small_image.load()
</code></pre>
<p>The <code>key</code> function is applied to each image before they're compared. In this case, I'm comparing each of the image's <code>size[0]</code> values. To get the larger image, you could get creative with sets if images are hashable, but I think a conditional expression is probably easiest.</p>
<p>This also reduces your check at the bottom to just</p>
<pre><code>large_image.show()
</code></pre>
<hr>
<p>This part:</p>
<pre><code>r, g, b = insert[col, row]

if r &lt; 250 and g&lt; 250 and b&lt; 250:
        canvas[col, row + 130] = r, g, b
</code></pre>
<p>Can be simplified a bit if you use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a> with a generator expression:</p>
<pre><code>color = insert[col, row]

if all(c &lt; 250 for c in color):
    canvas[col, row + 130] = color
</code></pre>
<p>This frees you up from needing to create, compare, then recombine three separate variables.</p>
<hr>
<p>Final code:</p>
<pre><code>from PIL import Image

image1 = Image.open("lady_tiny.jpg")
image2 = Image.open("eiffel.jpg")

small_image = min(image1, image2, key=lambda image: image.size[0])
large_image = image1 if image2 == small_image else image2

canvas = large_image.load()
insert = small_image.load()

for col in range(width):
    for row in range(length):
        color = insert[col, row]

        if all(c &lt; 250 for c in color):
            canvas[col, row + 130] = color
            
large_image.show()
</code></pre>
    </div>