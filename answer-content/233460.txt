<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Nested ifs are something I've come to knee-jerk refactor into similar below. Writing functions that state what they're doing reduces the burden to understand. When future-Iven comes along and evaluates the logic I won't be asking myself 'What's this doing?' as I'll already know.</p>

<pre><code>Public Function IsDistinct(leftValue As Variant, rightValue As Variant) As Boolean
    If AreBothValuesNull(leftValue, rightValue) Then
        IsDistinct = False
        Exit Function
    End If

    If IsOnlyOneValueNull(leftValue, rightValue) Then
        IsDistinct = True
        Exit Function
    End If

    IsDistinct = Not (leftValue = rightValue)
End Function

Private Function AreBothValuesNull(ByVal leftValue As Variant, ByVal rightValue As Variant) As Boolean
    AreBothValuesNull = IsNull(leftValue) And IsNull(rightValue)
End Function

Private Function IsOnlyOneValueNull(ByVal leftValue As Variant, ByVal rightValue As Variant) As Boolean
    IsOnlyOneValueNull = (IsNull(leftValue) And Not IsNull(rightValue) _
                        Or Not IsNull(leftValue) And IsNull(rightValue))
End Function
</code></pre>

<p>What about the same value but with different types? <code>IsDistinct(1, "1")</code> comes to mind as a test case.</p>
    </div>