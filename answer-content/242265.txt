<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For Python object names, a single leading underscore denotes <em>private</em> status, like you said.
Unlike other languages, this is not enforced however.
It is only a (strong) suggestion for users of your code not to use these objects.</p>

<p>This could be internal variables, like your <code>self._discount_coefficient</code>.
For example, maybe you implement a <code>@property</code> that secrectly stores something in <code>self._discount_coefficient</code>, but for the calling code, you need to enforce an invariant (in this case, maybe <code>0 &lt;= self._discount_coefficient &lt;= 1</code>).
This way, users can only set the <code>discount_coefficient</code> instance attribute (notice no underscore) to be within <code>0</code> and <code>1</code>, otherwise an error is thrown.
Nothing keeps people from directly mingling with <code>self._discount_coefficient</code>, however.
Therefore, the convention of underscores; basically a contract where all guarantees you make about your code are void if private objects are modified directly.</p>

<p>Having said all that (which you probably heard of already), it becomes clear that users of your <code>House</code> class can never directly access the variables inside your method anyway.
They either access <code>get_total_charges</code> as a whole, or nothing.
The decision is therefore to either hide <code>get_total_charges</code> as a whole, if it is private, or leave it like in your case.</p>

<p><code>water_price</code>, <code>electricity_price</code> and <code>total_charges</code> are only temporary variables and tossed the moment the function returns.
They are never relevant to the entire private/public debate because they are never seen from calling code.
If you assigned any of them as instance attributes via <code>self</code>, you would have to decide for or against a leading underscore.</p>

<p>As it is, Version 2 looks fine.
As for remaining style, <code>House()</code> can just be <code>House</code> and the equal signs before <code>json_from_communal_company</code> should not be aligned (looks fine now but is a maintenance nightmare).</p>
    </div>