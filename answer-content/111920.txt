<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your search function is terribly unclear. <code>search</code> is a vague name, and <code>a</code>, <code>b</code>, <code>d</code> and <code>m</code> don't communicate anything. Looking at the usage I can see you're testing if a number is in the list, but Python can already do that for you much more readably.</p>

<pre><code>if number in list
</code></pre>

<p>The <code>in</code> keyword tests if a value exists in a list, returning either <code>True</code> or <code>False</code>. So you can forget about <code>search</code> and just directly test for <code>pair</code>'s existence in the main loop:</p>

<pre><code>x = [1,4,5,7,9,6,2]
target = int(raw_input("Enter the number:"))
for i in x:
    if i &lt; target:
        pair = int(target) - int(i)
        if pair in x:
            print "the first number= %d the second number %d"%(i,pair)
            break
</code></pre>

<p>Back to the naming, <code>x</code> is not clear, at least using <code>numbers</code> indicates what it contains. <code>x</code> implies a single value which makes using <code>for i in x</code> extra confusing. <code>pair</code> also sounds like it's multiple items, when really it's the <code>difference</code> you want.</p>

<p>You also don't need to call <code>int</code> on <code>i</code> when the list is populated with integers already.</p>

<p>Lastly, you're using the old form of string formatting. You should instead use <code>str.format</code>, like so:</p>

<pre><code>            print("the first number= {} the second number {}".format(i,pair))
</code></pre>

<p>It works very similarly, except that it's type agnostic. It will just do it's best to get a string representation of the two values and insert them. There's lots of other uses for this approach so it's good to get used to.</p>
    </div>