<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>After looking at the code again I was able to discover some issues.</p>

<blockquote>
  <p><code>def do_brackets_match(chain):</code></p>
</blockquote>

<p>Actually a nice function to check if the input is a valid chain notation ... I was really surprised when I didn't find any call to it. <code>resolve_pure()</code> doesn't accept chains with parenthesis, so <code>do_brackets_match()</code> would be used in <code>resolve()</code></p>

<blockquote>
  <p><code>def split_by_inner_brackets(chain):</code></p>
</blockquote>

<p>It looks a bit ugly to slice the result of <code>str.partition()</code> in order to discard the separator. Today I would prefer <code>str.split()</code> with <code>maxsplit=1</code>.</p>

<blockquote>
  <p><code>def resolve_pure(chain)</code></p>
</blockquote>

<p>First of all, I consider renaming this function to <code>expand_chain</code> or similar. I would also rename the variable <code>resolved_chain</code> to <code>expanded_chain</code> in that case.
Secondly, this loop is a bit confusing:</p>

<pre><code>for i, s in enumerate(str_values):
    if str_values[i] == '1':
</code></pre>

<p>I should definitly rewrite the second line to <code>if s == '1'</code>. I mean, that's the whole point of using <code>enumerate()</code>, isn't it?</p>

<p>As you might have noticed from the examples, a chain which starts with <code>'2-&gt;2-&gt;'</code> always results in <code>'4'</code>. I could handle that special case.</p>

<blockquote>
  <p><code>def resolve(chain, show_progress=False, depth=0):</code></p>
</blockquote>

<p>As mentioned before, this function should call <code>do_brackets_match()</code>, probably right at the start. If it fails, it should raise an exception or at least print a message and return <code>''</code>. When evaluating the inner bracket, it might be useful to call <code>eval</code> in order to evaluate common arithmetic expressions like <code>(2*5+3)</code>.</p>

<p>Neither <code>resolve_pure()</code> nor <code>resolve</code> check for negative values which should be avoided as they can cause an error</p>
    </div>