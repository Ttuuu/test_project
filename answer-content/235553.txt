<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A cardinal rule of good programming is to process return values appropriately.</p>

<p>Specifically, <code>getchar()</code> returns an <code>int</code>, not a success true/false boolean. Not processing the return value properly (here: <code>while(!getchar())</code>) leads to various undesirable effects, including the problem with the endless loop when fed an empty file.</p>

<p>Additionally, as numerous others have already pointed out,
<code>while( !(1 &lt;= number &amp;&amp; number &lt; sizeof(alphabet)) )</code> is begging to be rewritten (not just for clarity, but for efficiency as well!) as <code>while ((letter &lt; 1) || (letter &gt; sizeof(alphabet)))</code></p>

<p>And since you do not need to validate 'number' until after the number has been read.
having two <code>while</code> loops is unnecessary. </p>

<p>If you combine (a) check return values, (b) validate inputs properly, you get something like this:</p>

<pre><code>int number = 0;
while (1) {
     int c = getchar(); /* get something from stdin */
     if (c == EOF || c == '\r' || c == '\n') 
        break;  /* input completed */
     if (c &lt; '0' || c &gt; '9') 
        break; /* invalid input - treat as input completed */
     number = (number * 10) + (c - '0');
     if (number &gt; 99) /* overflow? (more than two digits?) */ 
         number = 100; /* limit the overflow, but remember it */
}
if (number &gt;= 1 &amp;&amp; number &lt; sizeof(alphabet))
    printf("The number %i corresponds to the letter '%c'\n", 
          number, alphabet[number-1]);
</code></pre>
    </div>