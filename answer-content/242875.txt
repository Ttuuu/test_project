<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are some interesting ideas raised by this problem, guard clauses (or perhaps we should say short circuits) being one of them, we can extend</p>

<pre><code>if len(lst) % 2 != 0: return False
</code></pre>

<p>with </p>

<pre><code>if len(lst) == 0: return True
</code></pre>

<p>This raises the question (from the point of view of efficiency) which order should they go in?  The answer depends on the expected data.  If empty arrays are very common, we should test for that first, if they are never (or extremely rarely) going to occur we don't need the test.</p>

<p>Since we can't do a good design without some knowledge of the domain, suppose we have to test only ISBN 13s?  In that case we can just write </p>

<pre><code>return False
</code></pre>

<p>Another thing we can do is add a short circuit in the loop, something like:</p>

<pre><code>length = len(list) 
for index, item in enumerate(list)
    if (length - index &lt; abs(count) ) return False 
    count += ...
</code></pre>

<p>Again in most circumstances this is not worth the candle, but if we have billion digit ternary numbers the potential time saving would be considerable!  (We might even decide to sort such an array with the smaller, and hence shorter numbers first.)</p>
    </div>