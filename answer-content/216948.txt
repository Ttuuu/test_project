<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd suggest adding a comment mentioning how the order of values in the arrays <code>morseChar</code> and <code>morseNumber</code> are important for the conversion.</p>

<p>At first glance I was confused how the conversion was being done.</p>

<p>You should declare <code>morseChar</code> and <code>morseNumber</code> as final class variables so they are easily visible &amp; can be used in other methods.</p>

<p>If you may add symbols to the code, a class or enum containing the MorseCode and english character can be added. This also makes the opposite conversion very easy.</p>

<pre><code> // Note: Simply add numbers and symbols to this enum. 
 // The Order does not matters.
 public enum MorseCharacter
 {
     A(".-", 'a'),
     B("-...", 'b'),
     C("-.-.", 'c'),
     D("-..", 'd'),
     E(".", 'e'),
     F("..-.", 'f'),
     G("--.", 'g'),
     H("....", 'h'),
     I("..", 'i'),
     J(".---", 'j'),
     K("-.-", 'k'),
     L(".-..", 'l'),
     M("--", 'm'),
     N("-.", 'n'),
     O("---", 'o'),
     P(".--.", 'p'),
     Q("--.-", 'q'),
     R(".-.", 'r'),
     S("...", 's'),
     T("-", 't'),
     U("..-", 'u'),
     V("...-", 'v'),
     W(".--", 'w'),
     X("-..-", 'x'),
     Y("-.--", 'y'),
     Z("--..", 'z');

     private final String morseCode;
     private final char character;
     private static final MorseCharacter[] ALL_VALUES = values();

     MorseCharacter(String morseCode, char character)
     {
         this.morseCode = morseCode;
         this.character = character;
     }

     public String getMorseCode()
     {
         return morseCode;
     }

     public char getCharacter()
     {
         return character;
     }

     public static MorseCharacter valueOf(char character)
     {
         for (MorseCharacter morseChar : ALL_VALUES)
         {
             if (morseChar.getCharacter() == character)
             {
                 return morseChar;
             }
         }

         throw new RuntimeException("Morse character not found: " + character);
     }
 }

 public static String toMorse(String text) 
 {
     String morseText = "";
     text = text.toLowerCase();

     for (int i = 0; i &lt; text.length(); i++) 
     {
         morseText += MorseCharacter.valueOf(text.charAt(i)).getMorseCode();
     }
     return morseText;
 }
</code></pre>
    </div>