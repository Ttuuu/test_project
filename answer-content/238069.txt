<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <ol>
  <li>the naming of the methods in ObserverManager. The methods "Do" and "While" use capitalization in their names (because these words are java keywords) but in my opinion these names are the "perfect" fit for their purposes.</li>
  </ol>
</blockquote>

<p>Synonyms. What about <code>perform</code> instead of <code>Do</code> and <code>whilst</code> or <code>asLongAs</code> (for the non-Brits) for <code>while</code>?</p>

<blockquote>
  <ol start="2">
  <li>feature completeness. Will I be able to use this throughout my application or will this become a huge investment for little return because it lacks the features I will need.</li>
  </ol>
</blockquote>

<p>I'm always very wary of generic functionality like this. You have to make sure that it is reasonably well behaved because if it needs redesign or if it had bugs, you may end up having to update all the applications and libraries that use it. Furthermore, you'll be the only person that fully understands what's going on.</p>

<blockquote>
  <ol start="3">
  <li>I consider the ObserverManagerImpl class a rather "dirty" implementation. On the other hand, I also think that this may be okay in a situation like this where it is part of a closed system that is not supposed to be touched after it has been finished once.</li>
  </ol>
</blockquote>

<p>Sure, it won't harm here, but if it is deployed elsewhere then you need to test it, document it and make sure it is flexible enough.</p>

<hr>

<p>I'm slightly worried about the number of suppressed warnings - especially those for the generics. That's OK for some libraries if they are well designed, but it's a bit tricky for me to evaluate that.</p>

<hr>

<p>All in all, it looks well designed, but it is rather complex for what it tries to accomplish as well.</p>
    </div>