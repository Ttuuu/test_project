<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You should forget about factorial when it comes to Combinations (n, k). Instead you can use the formula: <code>n(n-1)(n-2)...(n-k+1)/(1*2*3*...*k)</code>. You start with <code>n</code> and then iterate over <code>x = 1 .. k - 1</code> and successively multiply with <code>(n-x)</code> and at the same time reduce by dividing with <code>x</code>. All in all it ends up like this:</p>

<pre><code>public ulong Combinations(ulong n, ulong k)
{
  ulong count = n;

  for (ulong x = 1; x &lt;= k - 1; x++)
  {
    count = count * (n - x) / x;
  }

  return count / k;
}
</code></pre>

<p>In this way you prevent overflow from intermediate factorial calculations.</p>
    </div>