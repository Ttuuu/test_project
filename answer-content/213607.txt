<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few things I'd add to @greybeard's answer (though I'll first emphasize: <strong>Add Docstrings</strong>):</p>

<ul>
<li><p>It's a Linked<em>List</em>, I'd expect to be able to iterate over it. There should be an <a href="https://docs.python.org/3/reference/datamodel.html#object.__iter__" rel="nofollow noreferrer"><code>__iter__</code></a> function here.</p></li>
<li><p>You rely heavily on knowing what your values are (<code>head</code> and <code>tail</code>), so you should hide them as private variables (<code>_head</code> and <code>_tail</code>) to indicate that external code should not access or modify them.</p></li>
<li><p>You keep a <code>length</code> attribute, but when <code>__len__</code> is called, you go through the expensive task of re-computing this anyway. If you trust this value, return it; if not, then don't bother keeping it.</p></li>
<li><p>You have functions to detect and manage cycles in your linked list, but many of your other functions (including <code>__len__</code>) don't check if they're trapped in one. This creates a ripe field for getting code locked in an infinite loop.</p></li>
<li><p><code>print_reverse</code> relies on recursion, which won't work for lists of more than a few thousand items.</p></li>
<li><p><code>do_reverse</code> is really vague, but seems to reverse the list; in Python, this is usually defined as <a href="https://docs.python.org/3/reference/datamodel.html#object.__reversed__" rel="nofollow noreferrer"><code>__reversed__</code></a></p></li>
<li><p><code>delete_a_node_pointer</code>... does nothing, throws no errors, and takes no argument. Delete this, or at least <code>raise NotImplementedError()</code></p></li>
<li><p><code>create_a_cycle</code> goes to element 4... for no explicable reason. This should be an argument.</p></li>
<li><p>You support creating a cycle mid-list (that is, tail points to somewhere in the middle of the list), but then elsewhere in your code treat <code>tail.next</code> as properly pointing to <code>head</code> (particularly in <code>insert</code>... and it should be used in <code>delete</code>, that's probably a bug that it's not there). Either keep your linked list as a single ring or support middle-cycles, you can't really do both.</p></li>
</ul>
    </div>