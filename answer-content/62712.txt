<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, there are a few things to go through here.</p>

<h2>Node</h2>

<p>Starting with the Node class. This should not be public. There is no reason for you to expose the logic to anything other than the LinkedList class. It is common to include the Node class as a static inner class of the data structure. Something like:</p>

<pre><code>public class LinkList {

    private static class Node {

        int data;
        Node next;

        Node(int data) {
            this.data = data;
        }

        void displayNode() {
            System.out.print(data);
            System.out.print("  ");

        }

    }

    private Node first = null;

    ...
</code></pre>

<h2>Complexity</h2>

<p>You assert that the complexities for the push and pop are \$O(n)\$, but this is not true. Both of these operations affect only the head of the list, e.g.:</p>

<blockquote>
<pre><code>public void insertFirst(int data) {
    Node n = new Node(data);
    n.next = first;
    first = n;
}
</code></pre>
</blockquote>

<p>As a consequence, they are \$O(1)\$ operations, and that is what I would expect for a linked list insert-at-the-head.</p>

<h2>LinkedList</h2>

<p>The deleteFirst method should not return a Node value. It should be the 'mirror image' of the insert method. The insert method inserts an <code>int</code>, and the delete method should return an <code>int</code> as well.</p>

<h2>LinkedListStack</h2>

<p><code>pop()</code> methods should return the popped value. Yours returns nothing, it's void. It is not normal.</p>

<p><strong><em>Note:</em></strong> <strong>it has been pointed out that your pop method removes all values from the list because of the <code>while (!isEmpty())</code> loop. This loop was added <a href="https://codereview.stackexchange.com/posts/62710/revisions">after I wrote this part of the answer</a> (but before I pressed 'submit'). The sentence I have above is accurate for a classic 'pop' method, which removes the first value from the stack (and in Java, and many other languages, returns that value too).</strong></p>

<p><strong>What you have now is worse, you have a method called 'pop' which does nothing of the sort, it is a 'clear' method, it empties the stack. As a result, you do not have a stack at all, you have a class called a Stack that is not a Stack. Additionally, it is in many cases WOM (Write Only Memory), you can write values to the Stack, but never read them.</strong></p>

<h2>Summary</h2>

<p>Your indentation is off. I presume this is because you are not familiar with Code Review's markdown system. You should paste your code in to the edit box, then select it all, and then press <kbd>ctrl</kbd>-<kbd>k</kbd>.</p>
    </div>