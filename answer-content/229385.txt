<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your testcases are far too simple to be certain your algorithm works. This might be an issue on the challenge's side. Both these testcases have symmetrical solutions. For these testcases, it's best to always rob every second layer. No test cases cover instances where the left side of the tree might follow a different pattern to the right side. Take for example the testcase:</p>

<pre><code>{ 3, 8, 5, 1, 3, 10, 1 }
</code></pre>

<p>On the left branch, you'd expect the 8 to be robbed on the second layer, while the right side is more beneficial to rob the third layer, foregoing the first layer altogether. </p>

<p>That said, your algorithm appears to handle this correctly. That, along with the caching you do, appears to be working quite well.</p>
    </div>