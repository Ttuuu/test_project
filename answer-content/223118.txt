<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can speed this up a bit in a at least 3 ways, first you can start at a better number. </p>

<p>At minimum, the number will be the product of all the prime factors below 20, 2*3*5*7*11*13*17*19 = 9699690
This number however is not divisible by 20, so we can add 10 more and make it 9699700 which is the next number divisible by 20. </p>

<p>Because of this instead of checking each number you can check every 20th number. (number +=20) You may be able to iterate by 19*20 by picking a better starting number but I am not entirely sure. :)</p>

<p>Thirdly, because the number 1-10 are factors of the number 11-20, you only need to check 11-19 for 0 remainder. 4 and 8 are factors of 16, so if it is divisible for 16 is is also divisible by 4 and 8. We can also skip 20 because we are iterating by it. </p>

<pre><code>function isDivisible(number) {
    for (let d = 11; d &lt; 20; d++) {
        if (number % d !== 0) {return false;}
    }
    return true;
}

let number = 9699700;
do {
    number+=20;
} while (! isDivisible(number));

console.log(number);
</code></pre>
    </div>