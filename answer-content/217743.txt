<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to Code Review!  This is actually pretty good code for a beginner, but here are some things that may help you improve your program.  </p>

<h2>Simplify the code</h2>

<p>The <code>gcd</code> routine looks like this:</p>

<pre><code>long gcd(long a, long b)
{
    long t;

    if (b == 0) return a;

    while (b != 0) {
        t = b;
        b = a % b;
        a = t;
    }
    return a;
}
</code></pre>

<p>It can be simplified in three ways.  First, we can declare <code>t</code> within the loop.  Second, we can eliminate the <code>if</code> statement entirely.  Third, we can simplify the while loop condition to simply <code>while (b)</code> which is the same as <code>while (b != 0)</code>:</p>

<pre><code>long gcd(long a, long b)
{
    while (b) {
        long t = b;
        b = a % b;
        a = t;
    }
    return a;
}
</code></pre>

<h2>Use <code>const</code> where appropriate</h2>

<p>The value of <code>n</code> is constant, so it would make sense to declare it either <code>const</code> or even better <code>constexpr</code>.  </p>

<h2>Consider signed versus unsigned</h2>

<p>It's always worth thinking about the <em>domain</em> of the numbers in a calculation.  In this case, it seems that all of the numbers are probably intended to be unsigned, but they're declared <code>long</code> which gives signed numbers.  </p>

<h2>Think of alternative algorithms and implementations</h2>

<p>I think your algorithm is fast enough, but an alternative approach would instead be to calculate all of the <em>unique</em> prime factors of all of the numbers &lt; 20 and simply multiply them together.  With the judicious use of <code>constexpr</code>, one could even calculate everything at compile-time which would make for a very fast calculation.  For inspiration, see <a href="https://codereview.stackexchange.com/questions/93775/compile-time-sieve-of-eratosthenes">Compile-time sieve of Eratosthenes</a></p>
    </div>