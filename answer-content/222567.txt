<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If the parameters are required then they need to be checked and their invalidity must be reported to the caller. There is a HTTP status code for it: <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400" rel="nofollow noreferrer">400/BAD REQUEST</a>.</p>

<p>The file transfer is done one byte at a time. This is very inefficient. This kind of transer is usually done in 4096 byte blocks. There are libraries for this task too. For example <a href="https://commons.apache.org/proper/commons-io/" rel="nofollow noreferrer">Apache Commons IO</a> <code>IOUtil.copy(InputStream, OutputStream)</code>.</p>

<p>The content type mappings are inefficient. A Map would be a natural fit for the use case instead of a 2D array. But this is something you don't need to do yourself: <a href="https://stackoverflow.com/questions/51438/getting-a-files-mime-type-in-java">https://stackoverflow.com/questions/51438/getting-a-files-mime-type-in-java</a></p>

<p>Calling the servlet repeatedly is called polling. A polling service should be quick and lightweight to not cause excessive load. The client should implement waiting between the polling. The servlet doesn't really need to know about the polling interval. If the servlet should implement throttling of "too eager clients", then you need to implement authentication to identify clients. Depending on the infrastructure you have, you might want to use a firewall or an API gateway for throttling.</p>

<p>By creating the file path by concatenating input from a URL parameter to a path constant you allow the caller to add directories to the path name. E.g. a file name <code>"../../some/sensitive/file.txt"</code> might reveal data you want to keep hidden. It is safer to get a file list from the directory with <code>File.list(FileNameFilter)</code> and use the filter find the file that matches the requested file. Other approach is to sanitize the input, but in mny opinion this is a much more robust solution. If there are a lot of files in the directory and there are a lot of requiests, you might want to cache the file list for a few seconds.</p>

<p>Closing the servlet output stream may have <a href="https://stackoverflow.com/questions/1159168/should-one-call-close-on-httpservletresponse-getoutputstream-getwriter">unwanted side effects</a>, so you should just leave it to the servlet container.</p>
    </div>