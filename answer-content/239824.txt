<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with the advice in <a href="https://codereview.stackexchange.com/q/239789/120114">slepic's answer</a>.</p>

<p>If you want to merely ensure that the file is an image, then you could ensure that the return value of <code>exif_imagetype</code> is not <code>FALSE</code>:</p>

<pre><code>return exif_imagetype($file-&gt;getRealPath()) !== FALSE;
</code></pre>

<p>That way if more constants are ever added to the list of <code>IMAGETYPE_*</code> constants you would not need to update the conditionals in this method.</p>

<hr>

<p>Curiosity got the better of me and I did a quick search online, finding <a href="https://stackoverflow.com/q/15408125/1575353">this SO post</a>. The <a href="https://stackoverflow.com/a/15408176/1575353">accepted answer</a> suggests using <a href="http://php.net/manual/en/function.mime-content-type.php" rel="nofollow noreferrer"><code>mime_content_type()</code></a> or <a href="https://www.php.net/manual/en/function.finfo-file.php" rel="nofollow noreferrer"><code>finfo_open()</code></a> depending on the PHP version used, though with those approaches you would likely need to utilize a string function to check that the mime type contains <code>'image'</code>, which seems to be slower than just calling the <code>exif_imagetype()</code> function in my local testing. </p>

<p>It also mentions that <code>exif_imagetype</code> is an alternative but relies on having the appropriate libraries enabled (which you presumably do) and only returns image mimetypes. </p>
    </div>