<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is by no means a full review, but I figured I'd mention some of the things I noticed real quick.</p>

<p><strong>Naming &amp; Consistency</strong></p>

<p>What is a <code>deckCard</code>? Oh, you mean a <code>DeckOfCards</code>? Why not just name it what it is?
Secondly, we PascalCase names of classes in C#. See <a href="https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/capitalization-conventions" rel="noreferrer">Microsoft Casing Guidelines</a>. Also, looking at your github the Filenames should match the class names (e.g. <code>card.cs</code> should be <code>Card.cs</code>) and you should generally try to restrict each class to its own file. Helps you stay organized when projects get larger.</p>

<p><strong>Modularity &amp; Intent</strong></p>

<p>You could separate your console code into smaller functions with representative names of what they do.</p>

<p>Examples:</p>

<pre><code>bool IsPlayerBust(Player player);
bool HasPlayerWon(Player player);
void Hit(Player player, DeckOfCards deck);
bool CanPlayerStand(Player player);
void Stand(Player player);
</code></pre>

<p>This would have two benefits.</p>

<ol>
<li>Your code will be broken up into smaller more manageable pieces.</li>
<li>You'll be able to give meaningful names to those smaller pieces of code. For example, <code>currentPlayer.GetHandValue() &gt; 21</code> could be named <code>IsPlayerBust()</code> or added to player as a function <code>currentPlayer.IsBust()</code>. Doing it this way shows intent and gives meaning to your lines of code so they may be more easily read.</li>
</ol>

<p>Humans read C#; Computers don't.</p>

<p>You seem to take this advice into account in some places and not in others. Try to be consistent in your coding habits. Hope these tips help.</p>
    </div>