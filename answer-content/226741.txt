<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let me address a possible <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow noreferrer">DRY</a> issue in the query in exchange for possible poorer performance.</p>

<p>I'm in particular talking about this bit:</p>

<pre class="lang-sql prettyprint-override"><code> /* Generic title */
  AND (
    Posts.Title LIKE '%please%' OR
    Posts.Title LIKE '%review%' OR
    Posts.Title LIKE '%improve%' OR
    Posts.Title LIKE '%better%' OR
    Posts.Title LIKE '%how to%'OR
    Posts.Title LIKE '%how can i%' OR
    Posts.Title LIKE '%how do i%'
  )
</code></pre>

<p>At compatibility level 130 SQL Server offers a <a href="https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">String_Split</a> function. It allows you to feed it a string and split it on a single character into a table. For example:</p>

<pre class="lang-sql prettyprint-override"><code>STRING_SPLIT('please|review|improve|better|how to|how can i|how do i','|') 
</code></pre>

<p>would give us a Table with a column Value containing rows with each word that is separated by a <code>|</code>. </p>

<p>We can use that table then to do a <code>CROSS APPLY</code> with the Posts table because that allows us to reduce the LIKE sizzle to:</p>

<pre class="lang-sql prettyprint-override"><code>  /* Generic title */
  AND CHARINDEX(
          Phrases.Value
        , Posts.Title COLLATE Latin1_General_CI_AI
      ) &gt; 0 
</code></pre>

<p>Notice that I replaced the LIKE with a <a href="https://docs.microsoft.com/en-us/sql/t-sql/functions/charindex-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">CHARINDEX</a>. That by itself shouldn't matter much as none of those constructs  would benefit from an index.</p>

<p>I also added a <code>COLLATE</code> instruction with <a href="https://dba.stackexchange.com/questions/21445/why-not-use-sql-latin1-general-ci-as-for-a-global-system/133172">a case and accent insensitive collation</a> so it won't miss cases where capitals are used.  </p>

<p>Further more I suggest to remove the CASE/WHEN/END statement for the PostType. You can join with the PostTypes table and then use the <code>Name</code>column in the projection.</p>

<p>Applying all that your query makes this as the <a href="https://data.stackexchange.com/codereview/query/1095907/qpaystaxes-bad-questions-query" rel="nofollow noreferrer">end result</a>:</p>

<pre class="lang-sql prettyprint-override"><code>DECLARE @Question INT = (SELECT Id FROM PostTypes WHERE Name = 'Question');
DECLARE @Answer INT = (SELECT Id FROM PostTypes WHERE Name = 'Answer');

DECLARE @Phrases NVARCHAR(200) ='please|review|improve|better|how to|how can i|how do i';

SELECT DISTINCT -- the distinct is a bit bogus here if you keep the Phrase column
/* Uncomment below if you want to limit the results */
  TOP 1000 
    Posts.Id AS [Post Link]
  , PostTypes.Name AS [Post Type]
  , Posts.Score
  , Posts.CreationDate
  , Users.Id AS [User Link]
  , Users.Reputation
  , Phrases.Value
FROM Posts 
INNER JOIN PostTypes 
  ON PostTypes.Id = Posts.PostTypeId
CROSS APPLY 
  STRING_SPLIT(@Phrases, '|') Phrases
LEFT OUTER JOIN Users
  ON Posts.OwnerUserId = Users.Id
WHERE
  /* Filter out non-question posts */
  Posts.PostTypeId = @Question

  /* Generic title */
  AND CHARINDEX(
          Phrases.Value
        , Posts.Title COLLATE Latin1_General_CI_AI
      ) &gt; 0 

  /* Post not closed yet */
  AND Posts.ClosedDate IS NULL

  /* Question doesn't have positive score */
  /* AND Posts.Score &lt;= 0 */

  /* User has low reputation - Un-comment to limit query further */
  AND (Users.Id is NULL OR Users.Reputation &lt;= 500)

ORDER BY

  /* Lowest scores first - Change to DESC if you want Highest first */
  Posts.Score ASC

  /* Newest first - Change to ASC if you want oldest first */
  , Posts.CreationDate DESC
</code></pre>

<p>Notice how it does show the extra column Phrase to indicate what phrase qualified for the title to be included.</p>

<p><a href="https://i.stack.imgur.com/s7kN5.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/s7kN5.png" alt="results with phrase columns at the end"></a></p>
    </div>