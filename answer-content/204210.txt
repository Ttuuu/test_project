<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is a programmer inside joke that says "no self respecting ethical programmer would ever consent to write a bomb Baghdad function. They would write a bomb city function to which Baghdad could be passed as a parameter."</p>

<p>This is the biggest issue with the code here: the divisibility functions could all be rolled together into one with the number you want to check passed as a parameter. That also addresses the concern you rightly raise about the abs thing.</p>

<p>Note in particular that the way computers store numbers is different from how we write them, so although it is easier and quicker for us to have shortcuts like check the last digit for evenness, it is actually slower for the computer to find what the last digit is than just check the whole thing against two! Therefore, it is quite ok to use the same style for all of them as you use for seven. And that means there is nothing in the way with merging them. (Technically, there are slightly faster options for 2, 4, and 8 but having the code be the same in each case is more important than using them.)</p>

<p>Lastly, I like the fact that you have some test cases written down. I suggest that there is room for doing that a bit more systematically. Ensure that you cover some yeses, some noes, and any special cases that could cause trouble. (negatives, zero, the number itself, etc) for each function you write separate code for. For example, I think the 9 function could do with a bit more of a prod. Try throwing 6 at it for example. ;)  (Not to labour the point, but simplifying the testing needed to be sure everything is right is a key reason to use common functions. )</p>
    </div>