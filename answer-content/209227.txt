<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <ol>
  <li>What if there ware 10 or 100 times as many posts, would the application have a performance (page load) problem?</li>
  </ol>
</blockquote>

<p>Try it with <a href="http://phpfiddle.org/main/code/2dmb-2574" rel="nofollow noreferrer">10 times as many posts</a>. I know that just duplicates each post 10 times without modifying the unique values like <em>id</em> but it should demonstrate the performance. I can see the page links but unless I make the window full screen and zoom out (on my 24" monitor) I can't see the all the page links - e.g. the link for Page 1 is cut off, as well as anything beyond page 42.</p>

<blockquote>
  <ol start="2">
  <li>Is there a better way to paginate the application; one that would load as many items from posts.json as there are displayed on one page (24 items), instead of the entire JSON file?</li>
  </ol>
</blockquote>

<p>Unless the API endpoint accepts a parameter for the page size, you would likely need to utilize a server-side scripting language like Python, Ruby on Rails, PHP, C#, VB.NET, ASP, etc. which could return the specified pagesize.</p>

<blockquote>
  <ol start="3">
  <li>How would you optimize this application, on the front end?</li>
  </ol>
</blockquote>

<p>I don't see much that stands out as an obvious place to optimize, though I do notice that the promise callback to <code>$http.get(url)</code> has two calls to <code>filterList()</code> separated by three assignment lines:</p>

<pre><code>$http.get(url)
    .then(function(data) {
      // posts arary
      $scope.posts = data.data;
      $scope.filterList();

      // Paginate
      $scope.pageNum = 1;
      $scope.perPage = 24;
      $scope.startAt = 0;
      $scope.filterList();
</code></pre>

<p>Is there any way to reduce the two calls to a single call there? Perhaps the first call is not needed?</p>

<p>Then looking at that promise callback, I see the three methods set on <code>$scope</code> there: <code>currentPage</code>, <code>prevPage</code> and <code>nextPage</code>. I would recommend moving those methods out of the callback handler, so that all it does is set the post data on <code>$scope</code> and related paging variables.</p>

<p>Also, I see a flaw with the jQuery code used for scrolling to the top (<strong><em>which doesn't appear to be working</em></strong> because there are no elements matching the selector <code>.pagination &gt; li &gt; a</code> when the DOM is loaded). I tried finding an equivalent in AngularJS but found little... There is a solution I found from <a href="https://forums.asp.net/t/2094946.aspx?AngularJS+How+to+do+Animated+Scroll+To+Top+with+directives" rel="nofollow noreferrer">this post</a> that uses vanillaJS. I had to alter the <code>href</code> attributes on the anchors to use it.</p>

<pre><code>$scope.scrollToTop = function() {
    var scrollDuration = 500;
    var scrollStep = -window.scrollY / (scrollDuration / 10);

    var scrollInterval = setInterval(function() {
      if (window.scrollY != 0) {
        window.scrollBy(0, scrollStep);
      } else {
        clearInterval(scrollInterval);
      }
    }, 15);
  };
</code></pre>

<p>Then that can be used in the click handler methods:</p>

<pre><code>  $scope.currentPage = function(index) {
    $scope.pageNum = index + 1;
    $scope.startAt = index * $scope.perPage;
    $scope.scrollToTop();
  };
</code></pre>

<p>Though in order to stop the anchor navigation, the default event handling will need to be prevented: </p>

<pre><code>&lt;a href="#" ng-click="currentPage($index); $event.preventDefault();"&gt;{{$index+1}}&lt;/a&gt;
</code></pre>

<h3>Updated code</h3>

<p>See modified code below.</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="false" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var root = 'https://jsonplaceholder.typicode.com';

// Create an Angular module named "postsApp"
var app = angular.module("postsApp", []);

// Create controller for the "postsApp" module
app.controller("postsCtrl", ["$scope", "$http", "$filter", function($scope, $http, $filter) {
  var url = root + "/posts";
  $scope.postList = [];
  $scope.search = "";
  $scope.filterList = function() {
    var oldList = $scope.postList || [];
    $scope.postList = $filter('filter')($scope.posts, $scope.search);
    if (oldList.length != $scope.postList.length) {
      $scope.pageNum = 1;
      $scope.startAt = 0;
    };
    $scope.itemsCount = $scope.postList.length;
    $scope.pageMax = Math.ceil($scope.itemsCount / $scope.perPage);
  };


  $scope.currentPage = function(index) {
    $scope.pageNum = index + 1;
    $scope.startAt = index * $scope.perPage;
    $scope.scrollToTop();
  };

  $scope.prevPage = function() {
    if ($scope.pageNum &gt; 1) {
      $scope.pageNum = $scope.pageNum - 1;
      $scope.startAt = ($scope.pageNum - 1) * $scope.perPage;
      $scope.scrollToTop();
    }
  };

  $scope.nextPage = function() {
    if ($scope.pageNum &lt; $scope.pageMax) {
      $scope.pageNum = $scope.pageNum + 1;
      $scope.startAt = ($scope.pageNum - 1) * $scope.perPage;
      $scope.scrollToTop();
    }
  };
  $scope.scrollToTop = function() {
    var scrollDuration = 500;
    var scrollStep = -window.scrollY / (scrollDuration / 10);

    var scrollInterval = setInterval(function() {
      if (window.scrollY != 0) {
        window.scrollBy(0, scrollStep);
      } else {
        clearInterval(scrollInterval);
      }
    }, 15);
  };
  $http.get(url)
    .then(function(data) {
      // posts arary
      $scope.posts = data.data;
      $scope.filterList();

      // Paginate
      $scope.pageNum = 1;
      $scope.perPage = 24;
      $scope.startAt = 0;
      $scope.filterList();
    });
}]);</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>.posts-grid {
  margin-top: 25px;
  display: flex;
  flex-wrap: wrap;
}

.posts-grid&gt;[class*='col-'] {
  display: flex;
  flex-direction: column;
  margin-bottom: 25px;
}

.posts-grid .post {
  background: #fff;
  border-top: 1px solid #d5d5d5;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.11);
}

.posts-grid .text {
  padding: 8px;
}

.posts-grid .card-title {
  font-size: 1.25rem;
  margin-bottom: 8px;
  text-transform: capitalize;
}

.posts-grid .read-more {
  padding: 0 8px 8px 8px;
}

.posts-grid .text-muted {
  margin-bottom: 8px;
}

.posts-grid .thumbnail img {
  display: block;
  width: 100%;
  height: auto;
}

.posts-grid p {
  text-align: justify;
}

.posts-grid .post {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.posts-grid .read-more {
  margin-top: auto;
}

.pagination&gt;li&gt;a,
.pagination&gt;li&gt;a:hover,
.pagination&gt;li&gt;span {
  color: #585858;
  line-height: 1;
  padding: 6px 12px;
  text-decoration: none;
}

.pagination&gt;.active&gt;a,
.pagination&gt;.active&gt;span,
.pagination&gt;.active&gt;a:hover,
.pagination&gt;.active&gt;span:hover,
.pagination&gt;.active&gt;a:focus,
.pagination&gt;.active&gt;span:focus {
  background-color: #007bff;
  border-color: #2b7c2b;
  color: #fff;
}

@media (max-width: 767px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 575px) {
  .container {
    max-width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
  .posts-grid&gt;[class*='col-'] {
    padding-left: 5px;
    padding-right: 5px;
  }
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" /&gt;
&lt;link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" rel="stylesheet" /&gt;
&lt;script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.js"&gt;&lt;/script&gt;
&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"&gt;&lt;/script&gt;


&lt;nav class="navbar navbar-expand-md bg-dark navbar-dark sticky-top"&gt;
  &lt;!-- Brand --&gt;
  &lt;a class="navbar-brand" href="#"&gt;My Blog&lt;/a&gt;
  &lt;!-- Toggler/collapsibe Button --&gt;
  &lt;button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar"&gt;
			&lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
  &lt;/button&gt;

  &lt;!-- Navbar links --&gt;
  &lt;div class="collapse navbar-collapse" id="collapsibleNavbar"&gt;
    &lt;ul class="navbar-nav ml-auto"&gt;
      &lt;li class="nav-item"&gt;
        &lt;a class="nav-link active" href="#"&gt;Contacts&lt;/a&gt;
      &lt;/li&gt;
      &lt;li class="nav-item"&gt;
        &lt;a class="nav-link" href="#"&gt;About us&lt;/a&gt;
      &lt;/li&gt;
      &lt;li class="nav-item"&gt;
        &lt;a class="nav-link btn btn-outline-primary" href="#"&gt;Login&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
&lt;/nav&gt;

&lt;div data-ng-app="postsApp"&gt;
  &lt;div class="container" data-ng-controller="postsCtrl"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-sm-9 mx-auto"&gt;
        &lt;div class="form-group search-box mt-3 px-3"&gt;
          &lt;input type="text" class="form-control" id="search" placeholder="Search post" data-ng-model="search" ng-change="filterList()"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="posts-grid" ng-if="postList.length &gt; 0"&gt;
      &lt;div class="col-xs-12 col-sm-6 col-lg-4 col-xl-3" data-ng-repeat="post in postList | limitTo : perPage : startAt"&gt;
        &lt;div class="post"&gt;
          &lt;div class="thumbnail"&gt;
            &lt;img src="//lorempixel.com/450/300" /&gt;
          &lt;/div&gt;
          &lt;div class="text"&gt;
            &lt;h3 class="card-title"&gt;{{post.title}}&lt;/h3&gt;
            &lt;p class="text-muted"&gt;{{post.body}}&lt;/p&gt;
          &lt;/div&gt;
          &lt;div class="read-more"&gt;
            &lt;a class="btn btn-block btn-sm btn-primary" href="#"&gt;Read more&lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;p ng-if="postList.length &lt;= 0" class="text-center"&gt;There are no posts&lt;/p&gt;
    &lt;div ng-if="pageMax &gt; 1"&gt;
      &lt;ul class="pagination pagination-sm justify-content-center"&gt;
        &lt;li class="page-item"&gt;&lt;a href="#" ng-click="prevPage(); $event.preventDefault();"&gt;&lt;i class="fa fa-chevron-left"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li ng-repeat="n in [].constructor(pageMax) track by $index" ng-class="{true: 'active'}[$index == pageNum - 1]"&gt;
          &lt;a href="#" ng-click="currentPage($index); $event.preventDefault();"&gt;{{$index+1}}&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href="#" ng-click="nextPage(); $event.preventDefault();"&gt;&lt;i class="fa fa-chevron-right"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>

    </div>