<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think there is this code organization issue - you have a class named <code>Customer</code>, but it, aside from the <code>.name</code> attribute, consists of credit-card related logic only. </p>

<p>I would also pass the obtained attributes to the class constructor instead of asking for them inside it:</p>

<pre><code>def __init__(self, name, post_code, card_date, card_code):
    self.name = name
    self.post_code = post_code
    self.card_date = card_date
    self.card_code = card_code
</code></pre>

<p>It is a little bit cleaner to do this way since now our class is more generic, it is agnostic of where the attributes are coming from.</p>

<p>Some other <em>code-style related notes</em>:</p>

<ul>
<li>consistent naming: rename <code>postcode</code> to <code>post_code</code> </li>
<li>revise the quality and necessity of comments: there is probably not much sense in having a comment <code># Constructor</code> </li>
<li><p>you can simplify the way you return a boolean result from your methods. For instance, you can replace:</p>

<pre><code>if datetime.date.today() &lt; card:
    return True
else:
    return False
</code></pre>

<p>with:</p>

<pre><code>return datetime.date.today() &lt; card
</code></pre></li>
</ul>

<p>And, it's worth mentioning that, generally speaking, if you doing this for production, you should not be reinventing the wheel and switch to a more mature, well-used and tested package like <a href="https://github.com/orokusaki/pycard" rel="noreferrer"><code>pycard</code></a>.</p>
    </div>