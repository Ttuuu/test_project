<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm on my phone, so I can't write anything too elaborate. I'll just make some notes:</p>

<hr>

<p>I don't think you're making good use of functions here. For the most part, you have everything tucked inside of <code>update</code>. I think that function is far too large, and doing too much explicitly. I would, for example, create a function called <code>should_live</code> or something similar that is passed the cell's current state and number of neighbors, and returns if the cell should be alive the next tick or not.</p>

<p>You do break some of that functionality off into a local function <code>neighbors</code>, but I don't think it's ideal the way you've done it. I would make that an external function, and I would call it <code>n_neighbors</code> or <code>count_neighbors</code> or something similar to make it clearer that it's a function that counts neighbors, not a collection of neighbors. You could also clean up that long list comprehension guard by creating a <code>is_inbounds</code> function that checks if a point is i bounds or not. </p>

<p>I'd also rename <code>update</code>, as is isn't actually updating anything. It's gathering information then returning a decision. </p>

<hr>

<p>I would not have code top-level like you have it here. Having the code run just because you loaded it will get annoying if you ever change your workflow to involve a REPL. I would tuck the routine into a <code>main</code> function, then maybe call that function from a <code>if __name__ == "__main__"</code> block.</p>

<hr>

<p>In short, I'd break your code up more and be more cautious when it comes to naming. </p>
    </div>