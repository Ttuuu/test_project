<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My 2 cents</p>

<ul>
<li>Please do not abbreviate words, choose short words or acronyms ( Len -&gt; Length )</li>
<li>Please lower camel case ( normal_val -&gt; normalValue )</li>
<li>Consider using spartan conventions ( s -&gt; generic string )</li>
<li><code>new Array()</code> is considered old skool, consider <code>var byte_pieces = []</code></li>
<li>You are using <code>byte_pieces</code> to track the bytes just to get the length, you could have just kept track of the length, this would be more efficient</li>
<li>I am not sure what <code>abnormal pieces</code> would be here: </li>
</ul>

<p><code>if(normal_pieces[i] &amp;&amp; normal_pieces[i] != '')</code></p>

<ul>
<li>You check again for these here, probably not needed:</li>
</ul>

<p><code>if(encoded_pieces[i] &amp;&amp; encoded_pieces[i] != '')</code></p>

<ul>
<li>You could just do <code>return byte_pieces.length</code> instead of</li>
</ul>

<blockquote>
<pre><code>// Array length is the number of bytes in string
var byte_length = byte_pieces.length;

return byte_length;
</code></pre>
</blockquote>

<p>All that together, I would counter propose something like this:</p>

<pre><code>function getByteCount( s )
{
  var count = 0, stringLength = s.length, i;
  s = String( s || "" );
  for( i = 0 ; i &lt; stringLength ; i++ )
  {
    var partCount = encodeURI( s[i] ).split("%").length;
    count += partCount==1?1:partCount-1;
  }
  return count;
}
getByteCount("i â™¥ js");
getByteCount("abc def");
</code></pre>

<p>You could get the sum by using <code>.reduce()</code>, I leave that as an exercise to the reader.</p>

<p>Finally, if you are truly concerned about performance, there are some very fancy performant js libraries <a href="http://mothereff.in/byte-counter#i%20%E2%99%A5%20js">out there</a>.</p>
    </div>