<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Type hints and the truth</h2>

<pre><code>def recursive_sort(input_list: List[T], temp_output_list: List[T], first_index: int, last_index: int) -&gt; List[T]:
</code></pre>

<p>This function actually returns <code>None</code>. Same with <code>merge_sublists</code> and <code>copy_list</code>.</p>

<h2>Loop like a native</h2>

<pre><code>while i &lt;= first_end_index:
    temp_output_list[k] = input_list[i]
    i += 1
    k += 1
</code></pre>

<p>should at least be using <code>enumerate</code> on <code>input_list</code>, which will give you both <code>i</code> and the item from <code>input_list</code>. If you use the index from <code>enumerate</code> as an offset, you can avoid using <code>k</code> as well.</p>

<p>All of that aside, you don't need to loop. Just do slice assignment; something like</p>

<pre><code>temp_output_list[k: k+first_end_index-i] = input_list[i: i+first_end_index]
</code></pre>

<p>Many of your loops can use slices like that.</p>

<h2>Variable names</h2>

<p>No need to capitalize <code>INTEGER_FLOAT_INPUT</code> and similar lists. They aren't constants.</p>
    </div>