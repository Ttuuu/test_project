<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Looking at your code, it's indeed obvious that you are still learning C++. Actually, I call it C with some sparkles of C++, as I recognize several constructs that one tries to avoid in C++ in favor of better encapsulated constructs. I'll point them out later.</p>

<p>First of all, I like to congratulate you for your naming. I barely see beginners that take the time to choose good names for the variables. All companies have IDEs that can help you type these, so keep up the good work and use good names.</p>

<p>That said, there were a few things that I wouldn't consider good C++: <code>char recipes[][50]</code> to name one. From what I can deduce, this should be <code>std::vector&lt;std::string&gt;</code>. This can prevent a lot of confusion, has a dynamic size (you can prealloc) and the <code>std::string</code> part of it allows you to simply a lot of string operations.</p>

<p>Secondly, I'm noticing that you have several variables that go hand-in-hand. <code>itemName</code>, <code>nutriIngred</code> ... Even in C, one would recommend putting this in structs. In C++, we use classes/structs. (They are almost the same, however, C++ allows you to put methods to both structs and classes).</p>

<p>For example:</p>

<pre><code>class Ingredient
{
    std::string name;
    std::string metric;
    double measurement;
    int dailyPercent;
};
class Recipe
{
    std::string name;
    std::vector&lt;Ingredient&gt; ingredients;
};
</code></pre>

<p>I suggest you already start by trying to incorporate these classes, so the data is more structured. Once we have that, you can post a second iteration, in which we can look at splitting the functions into smaller logical blocks.</p>
    </div>