<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to CR community.</p>
<ol>
<li><p>Keep constant declarations at the top. Although you follow the PEP8 naming conventions throughout (almost) the whole code base, I'll point out a few key things:</p>
<ul>
<li>variables, functions and methods should be named using <code>snake_case</code>. So, the <code>addTopping</code> would be renamed to <code>add_topping</code>.</li>
<li>constant (or globals) are named as <code>UPPER_SNAKE_CASE</code>. So, the <code>size_mappings</code> would become <code>SIZE_MAPPINGS</code>.</li>
<li>classes are named as <code>CamelCase</code>. You're already following this convention.</li>
</ul>
</li>
<li><p>Use triple-quoted strings in python for multiline content. Your print statements would look a lot cleaner (no need for <code>\n\n\n...</code> chains. The following prints the same list/table:</p>
<pre><code> print("""
 What size pizza would you like?

     _____________________________________________________________
     | 1: Small  |  2: Large  |  3: Extra Large  |  4: Party Size |
     |    $6     |     $10    |        $12       |       $24      |
     |___________|____________|__________________|________________|

 - Press 't' to choose your toppings
 """)
</code></pre>
</li>
<li><p>Put the execution flow of your code inside <a href="https://stackoverflow.com/questions/419163/what-does-if-name-main-do">the <code>if __name__ == "__main__"</code></a> block.</p>
</li>
<li><p>When ordering a pizza, usually I am asked toppings for each pizza separately, instead of me listing down the different sizes of pizzas, and then choosing toppings for those in bulk. This would also change how your program execution goes.</p>
</li>
<li><p>If following the above, <code>Toppings</code> elements would be a list of elements inside the <code>Pizza</code> class.</p>
</li>
<li><p>You do not need a separate <code>ToppingsOrder</code> class.</p>
</li>
<li><p>Instead of maintaining 2 different variables for mapping pizza choice &lt;-&gt; size &lt;-&gt; price (and similarly for toppings), you can use <a href="https://devdocs.io/python%7E3.7/library/collections#collections.namedtuple" rel="nofollow noreferrer">a namedtuple</a> (or <a href="https://devdocs.io/python%7E3.7/library/dataclasses#dataclasses.dataclass" rel="nofollow noreferrer">dataclass</a>, as per your needs):</p>
<pre><code> from collections import namedtuple

 Pizza = namedtuple("Pizza", ["name", "price"])
 SIZE_MAPPINGS = {
     1: Pizza("Small", 6),
     .
     .
 }
</code></pre>
<p>Now, you can <code>add_pizza</code> to an order as simply as:</p>
<pre><code> order.add_pizza(SIZE_MAPPINGS[size_wanted])
</code></pre>
<p>and when fetching price (or name) of pizza, it would be <code>pizza.price</code> (or <code>pizza.name</code>).</p>
</li>
</ol>
    </div>