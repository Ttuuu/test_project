<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have two comments:</p>

<ol>
<li><p>regarding DRYness: this is how I would do it: I see that rotation involves assigning values to 8 cells in the 3d array. I would have <code>rotate()</code> calculate the source and target indices of the rotation based on args. then the actual assignment can be performed in one place. now, when you put all index-calculations in one place, you start noticing recurring patterns in all the various rotations so you can further reduce code duplication</p></li>
<li><p>there are two problems with the overall design: first, I don't like the static rotation methods. I mean, it seems right to me that a cube class should be able to rotate itself.   this relates to the 2nd point - IIUC, the <code>RubiksCubeNode</code> is intended to be node in graph. but it is also a <code>RubiksCube</code> that does all the cube's operations. this violates the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">single responsibility principle</a>. a <code>GraphNode</code> is the buliding block of the graph and I would expect it to perform graph related operations, like traversal etc. the data of the <code>GraphNode</code> is an instance of <code>RubiKCube</code> that holds a snapshot of the cube and can perform cube related operations</p></li>
</ol>
    </div>