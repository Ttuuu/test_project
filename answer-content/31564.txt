<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would simply apply a logic transformation.  Here's your original, verbatim:</p>

<pre><code>def overlap(r1,r2):
    '''Overlapping rectangles overlap both horizontally &amp; vertically
    '''
    hoverlaps = True
    voverlaps = True
    if (r1.left &gt; r2.right) or (r1.right &lt; r2.left):
        hoverlaps = False
    if (r1.top &lt; r2.bottom) or (r1.bottom &gt; r2.top):
        voverlaps = False
    return hoverlaps and voverlaps
</code></pre>

<p>Each of the variables is True unless you set it to False, so you could just negate each condition.</p>

<pre><code>def overlap(r1,r2):
    hoverlaps = not((r1.left &gt; r2.right) or (r1.right &lt; r2.left))
    voverlaps = not((r1.top &lt; r2.bottom) or (r1.bottom &gt; r2.top))
    return hoverlaps and voverlaps
</code></pre>

<p>Applying <a href="http://en.wikipedia.org/wiki/De_Morgan%27s_laws">De Morgan's Laws</a>â€¦</p>

<pre><code>def overlap(r1,r2):
    hoverlaps = not(r1.left &gt; r2.right) and not(r1.right &lt; r2.left)
    voverlaps = not(r1.top &lt; r2.bottom) and not(r1.bottom &gt; r2.top)
    return hoverlaps and voverlaps
</code></pre>

<p>You can eliminate the "not"s by reversing the inequalities.</p>

<pre><code>def overlap(r1,r2):
    hoverlaps = (r1.left &lt;= r2.right) and (r1.right &gt;= r2.left)
    voverlaps = (r1.top &gt;= r2.bottom) and (r1.bottom &lt;= r2.top)
    return hoverlaps and voverlaps
</code></pre>

<p>Personally, I would prefer to rearrange my inequalities for parallelism.  Also, I would move the function into the <code>Rect</code> class.  Final answer:</p>

<pre><code>class Rect(object):
    def __init__(p1, p2):
        ...

    @staticmethod
    def overlap(r1, r2):
        '''Overlapping rectangles overlap both horizontally &amp; vertically
        '''
        h_overlaps = (r1.left &lt;= r2.right) and (r1.right &gt;= r2.left)
        v_overlaps = (r1.bottom &lt;= r2.top) and (r1.top &gt;= r2.bottom)
        return h_overlaps and v_overlaps
</code></pre>

<p>I'd resist the urge to do anything more than that, because I think you would be running into diminishing returns.</p>
    </div>