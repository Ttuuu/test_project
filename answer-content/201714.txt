<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Variables</h1>

<p>Go has two ways of declaring new variables: a <a href="https://golang.org/ref/spec#Variable_declarations" rel="nofollow noreferrer">var notation</a> and a <a href="https://golang.org/ref/spec#Short_variable_declarations" rel="nofollow noreferrer">short one</a>. It's preferable to use the short one:</p>

<pre><code>wg := sync.WaitGroup{}
countHmLmFiles := -1
countHmFiles := 0
countLmFiles := 0
</code></pre>

<p>Also when declaring lots of global variables in the package block you may use block notation:</p>

<pre><code>var (
    a int = 1
    b string = "foo"
)
</code></pre>

<p>You can declare variables directly in the <code>for</code> loop:</p>

<pre><code>for countHmLmFiles, file := range f {
    // countHmLmFiles and file will be visible only here
}
</code></pre>

<p>This way their scope will be limited to <code>for</code> body.</p>

<h1>Maps in Go</h1>

<p>You've created a map with make:</p>

<pre><code>names := make(nameMap, 1)
</code></pre>

<p>I don't see a point in creating a map for a single element. Also when you don't need the size argument in <code>make</code> you may simply write <code>names := nameMap{}</code>.</p>

<p>No need pass maps with pointer. Maps and slices are already a reference type and may be passed directly by value. It won't issue a full copy.</p>

<h1>Error handling</h1>

<p>You've missed lots of error checks. Ideally every error must be handled in place. Otherwise use <code>_</code> to ignore it and make a comment to be specific on this as it looks like a broken code.</p>

<p>The <code>switch</code> lacks the default case. It worth adding it to catch other possible values of <code>filename.Name[:2]</code>.</p>

<p>Also don't forget to add terminating <code>\n</code> to <code>fmt.Printf</code> to separate log messages.</p>
    </div>