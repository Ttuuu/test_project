<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Thanks for sharing your code.</p>

<h3>OOP</h3>

<p>OOP doesn't mean to "split up" code into random classes.</p>

<p>The ultimate goal of OOP is to reduce code duplication, improve readability and support reuse as well as extending the code.</p>

<p>Doing OOP means that you follow certain principles which are (among others):</p>

<ul>
<li>information hiding / encapsulation</li>
<li>single responsibility</li>
<li>separation of concerns</li>
<li>KISS (Keep it simple (and) stupid.)</li>
<li>DRY (Don't repeat yourself.)</li>
<li>"Tell! Don't ask."</li>
<li>Law of demeter ("Don't talk to strangers!")</li>
</ul>

<p>One basic rule of thumb is: create a new class if there is a difference in <em>behavior</em>. your classes <code>Light</code> and <code>AirConditioner</code> only differ in <em>configuration</em> (the number they return for power consumption when on).</p>

<h1>Naming</h1>

<p>Finding good names is the hardest part in programming, so always take your time to think about the names of your identifiers.</p>

<h3>Naming Conventions</h3>

<p>Please read (and follow) the
<a href="http://www.oracle.com/technetwork/java/codeconventions-135099.html" rel="nofollow noreferrer">Java Naming Conventions</a></p>

<p>E.g.: your methods and variables have names like <code>switchOFF</code> and <code>isON</code> which should better be <code>switchOff</code> and <code>isOn</code>.</p>

<h3>misleading naming</h3>

<p>Some of your methods have somewhat misleading names.</p>

<p>E.g.: <code>getMaxPower()</code> implies the access to an objects property while it in deed calculates the max power. Therefore it should better be named <code>calculatePowerConsuption()</code>.</p>
    </div>