<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not familiar with either Haskell or Python, but I'd like to challenge the way you're tackling this problem.</p>

<p>First of all, seven 9s will give you a sum of 7 * 9<sup>5</sup> = 413343. That's six digits, so searching up to one million (instead of ten million) would already be enough.</p>

<p>But we can do better. Instead of analyzing all million numbers, you can reduce that number by realizing that 123456 will give the same sum as 654321. The order of the digits doesn't matter. The sums you <em>actually</em> need to compute are the <a href="https://en.wikipedia.org/wiki/Combination#Number_of_combinations_with_repetition" rel="noreferrer">combinations with repetition</a>; there are 'only' <a href="https://www.wolframalpha.com/input/?i=10+multichoose+6" rel="noreferrer">5005</a> of them. Python has a standard function to list them in the <a href="https://docs.python.org/3.4/library/itertools.html#itertools.combinations_with_replacement" rel="noreferrer">itertools</a> package, e.g. <code>combinations_with_replacement('0123456789', 6)</code>.</p>

<p>When you have computed the sum of the combination, you need to sort its digits and check if they match the combination. If so, the sum is a true positive and can be added to the list.</p>
    </div>