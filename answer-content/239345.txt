<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>After getting detailed feedback from the company, below given is the solution which company expected. This also matched with all the points which <code>nik</code> has explained (the accepted answer above).</p>

<ul>
<li><p>Create a class with 2 different methods. One to update the average (setAverage here) used by company X and other to get the average (getAverage here) which can be used by companies such as Y.</p></li>
<li><p>By this approach, separations of concerns is there. Similarly if another company Z wants no of values, a new method can be added without modifying the existing functionalities</p></li>
</ul>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>class Analytics {
  constructor() {
    this.average = 0
    this.noOfValues = 0
  }
  setAverage(value){
    const total = value + this.average*this.noOfValues
    const average = total/(this.noOfValues + 1)
    this.average = average
    this.noOfValues = this.noOfValues + 1
    return average
  }
  getAverage(){
    return this.average
  }
}

const analytics = new Analytics()

console.log("setAverage, no 1: ", analytics.setAverage(1))
console.log("average is", analytics.getAverage())
console.log("setAverage, no 3: ", analytics.setAverage(3))
console.log("average is", analytics.getAverage())
console.log("setAverage, no 5: ", analytics.setAverage(5))
console.log("setAverage, no 7: ", analytics.setAverage(7))
console.log("average is", analytics.getAverage())
console.log("average is", analytics.getAverage())
console.log("setAverage, no 10: ", analytics.setAverage(10))
console.log("average is", analytics.getAverage())</code></pre>
</div>
</div>

    </div>