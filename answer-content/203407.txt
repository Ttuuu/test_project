<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Instead of: </p>

<pre><code>    private string KeepStyle(int s)
    {
        if (s &lt;= 9)
            return "0" + s.ToString();
        return s.ToString();
    }
</code></pre>

<p>you can do:</p>

<pre><code>s.ToString("00");
</code></pre>

<p>See <a href="https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings" rel="nofollow noreferrer">here</a></p>

<hr>

<p>Instead of:</p>

<pre><code>    private void StartStopButton_Click(object sender, EventArgs e)
    {
        timer.Enabled = !timer.Enabled;
        if (!timer.Enabled)
            StartStopButton.Text = "Start";
        else if (timer.Enabled)
            StartStopButton.Text = "Stop";
    }
</code></pre>

<p>You can do:</p>

<pre><code>    private void StartStopButton_Click(object sender, EventArgs e)
    {
        start = DateTime.Now; // See below
        timer.Enabled = !timer.Enabled;
        StartStopButton.Text = timer.Enabled ? "Stop" : "Start";
    }
</code></pre>

<hr>

<p>Consider to use a <code>DateTime</code> object instead of your <code>hours, minutes, seconds</code> fields:</p>

<pre><code>private DateTime start;
</code></pre>

<p>You can then skip the <code>IncrementStopwatch()</code> method and in <code>UpdateLabels()</code> do something like this:</p>

<pre><code>    private void UpdateLabels()
    {
        TimeSpan duration = DateTime.Now - start;
        Seconds.Text = duration.Seconds.ToString("00");
        Minutes.Text = duration.Minutes.ToString("00");
        Hours.Text = duration.Hours.ToString("00");
    }
</code></pre>

<hr>

<p>Remember to dispose the <code>Timer</code> object, when disposing the <code>Form</code></p>

<pre><code>protected override void Dispose(bool disposing)
    {
      if (disposing &amp;&amp; (components != null))
      {
        components.Dispose();
      }
      if (disposing)
      {
        if (timer != null) timer.Dispose();
        timer = null;
      }
      base.Dispose(disposing);
    }
</code></pre>

<p>(<code>Dispose(bool disposing)</code> can be found in Form1.Designer.cs)</p>
    </div>