<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Specification</strong></p>

<p>In the HTML specifications you can find the following:</p>

<blockquote>
  <p>The <strong>HTML table model allows</strong> authors to arrange data -- text, preformatted text, images, links, <strong>forms</strong>, <strong>form fields</strong>, other tables, etc. -- into rows and columns of cells.</p>
</blockquote>

<p><sup>From w3.org "<a href="http://www.w3.org/TR/html401/struct/tables.html#h-11.1" rel="nofollow noreferrer">11.1 Introduction to tables</a>"</sup></p>

<p>So, technically it's fine to have <em>form elements</em> within a table.</p>

<p><strong>Layout</strong></p>

<p>Your layout definitely looks tabular. As mentioned in the comments, you even have a heading for each columns. So from that point it's fine, too.</p>

<p><strong>Markup</strong></p>

<p>Two things that can be improved in your markup:</p>

<p><em>Form element</em></p>

<p>You don't have a <code>&lt;form&gt;</code>-element currently. You can wrap the whole <code>table</code> into a form:</p>

<pre><code>&lt;form&gt;
    &lt;table&gt;&lt;/table&gt;
&lt;/form&gt;
</code></pre>

<p>Or you can make use of the HTML5 option, to link elements to a form, even if they aren't children of the form:</p>

<pre><code>&lt;form id="my-form"&gt;&lt;/form&gt;

&lt;table&gt;
    &lt;tbody&gt;&lt;tr&gt;&lt;td&gt;
        &lt;input form="my-form"&gt;
    &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;
</code></pre>

<p><sup>See w3.org: <a href="http://www.w3.org/TR/html5/forms.html#association-of-controls-and-forms" rel="nofollow noreferrer">4.10.18.3 Association of controls and forms</a></sup></p>

<p><em>Link between label and form-element</em></p>

<p>Currently there's no connection between your labels and the actual input. Use a <code>&lt;label&gt;</code> element to create a link between those two. The advantage is also, that if somebody clicks the label the input will be focussed:</p>

<pre><code>&lt;td&gt;
    &lt;label for="email"&gt;E-Mail Address&lt;/label&gt;
&lt;/td&gt;
&lt;td&gt;
    &lt;input type="text" id="email" name="email" value="" required maxlength="254"&gt;
&lt;/td&gt;
</code></pre>

<p><strong>Screenreader</strong></p>

<p>Using form elements in a table is fine for screenreader as well. However, you should keep those things in mind:</p>

<blockquote>
  <p>Forms should be clear and intuitive. They should be organized in a logical manner. Instructions, cues, required form fields, field formatting requirements, etc. should be clearly identified to users. Provide clear instructions about what information is desired. If any form elements are required, be sure to indicate so. Make sure that the order in which form elements are accessed is logical and easy. <strong>This can sometimes be problematic if tables are used to control layout of form items.</strong></p>
</blockquote>

<p><sup>From webaim.org "<a href="http://webaim.org/techniques/forms/#ensure" rel="nofollow noreferrer">Creating Accessible Forms: Ensure Forms are Logical and Easy to Use</a>"</sup></p>

<p>As your form is very simple, this shouldn't be a problem. If your form grows or becomes more complex, e.g you use labels to address multiple inputs, here's a good read, where tables are used for the layout: <a href="http://webaim.org/techniques/forms/advanced#multiple" rel="nofollow noreferrer">Advanced Form Labeling: Handling Multiple Labels</a></p>

<hr>

<p>To sum it up, you're approach is fine, and it's even better than the other one, where "<em>Info Needed</em>" and "<em>Enter It Here</em>" aren't associated with the columns in any way.</p>
    </div>