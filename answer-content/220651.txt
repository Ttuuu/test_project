<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p><em>Am I doing the transitions right with SetState(state)? (I feel like I
  can just handle the transitions inside each States update method.
  Maybe there's a better way but I'm not sure.)</em></p>
</blockquote>

<p>You allow a state to change the state of its parent state machine. For instance:</p>

<blockquote>
<pre><code>newZombie.attackState.Update = function()
    ..
        if distanceToTarget &gt;= MAX_ATTACK_RADIUS then     
            newZombie.stateMachine:SetState(newZombie.chaseState)
        end
    ..
end
</code></pre>
</blockquote>

<p>Because of this, there is a potential problem with your state transition flow. Nothing prevents a state to change the state of the machine while in Init/Enter/Exit.</p>

<blockquote>
<pre><code>function StateMachine:SetState(state)
    assert(state ~= nil, "Cannot set a nil state.")
    self.currentState:Exit()
    self.currentState = state
    self.currentState.Init()
    self.currentState.Enter()
end
</code></pre>
</blockquote>

<p>For example, if <code>stateB</code> starts a state transition to <code>stateC</code> while in <code>stateA</code> in <code>Enter</code>, the following could happen:</p>

<ul>
<li>stateA.Exit (ok)</li>
<li>stateB.Init (ok)</li>
<li>stateB.Enter (ok)</li>
<li>stateB.Exit (fishy because in transition, but consistent)</li>
<li>stateC.Init (fishy because in transition, but consistent)</li>
<li>stateC.Enter (fishy because in transition, but consistent)</li>
<li>stateB.Exit (<strong>wrong</strong>, the previous active state gets exited after the current state is activacted)</li>
</ul>

<p>You can fix this by either: </p>

<ol>
<li>blocking new state transitions while transitioning</li>
<li>allowing states to immediately transition to other states while in transition, but then you need to make sure the order of Exit/Init/Enter remains consistent</li>
</ol>
    </div>