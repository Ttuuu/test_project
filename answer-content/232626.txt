<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some minor notes.</p>

<h3>I love the ternary operator and <code>f</code> strings, but...</h3>

<p>Here are three ways to express the same thing.  There is the original way, a DRY version of the original way, and a more traditional if/else.  Which is easier to read and understand what is going on?</p>

<pre><code># variant 1
build_type = f"go build -buildmode=c-shared" if kwargs["buildtype"].lower() == "dll" else "go build -tags exe"

# variant 2
build_type = f"go build {'-buildmode=c-shared' if kwargs['buildtype'].lower() == 'dll' else '-tags exe'}"

# variant 3
if kwargs["buildtype"].lower() == "dll":
    build_type = "go build -buildmode=c-shared"
else:
    build_type = "go build -tags exe"
</code></pre>

<p>In this case I would argue that the third variant is <strong>MUCH</strong> easier to understand what the distinction is between the two build types.  EG: What question is being asked (buildtype) and what is the difference in the result based on the answer.</p>

<h3>Environment has a "n" after the "o"</h3>

<p>This:</p>

<pre><code>enviroment["CGO_ENABLED"] = "1"
</code></pre>

<p>should likely be:</p>

<pre><code>environment["CGO_ENABLED"] = "1"    
</code></pre>

<h3><a href="https://click.palletsprojects.com" rel="nofollow noreferrer">Click</a> is the thing.</h3>

<p>Not sure this is immediately relevant as a code review, but...</p>

<p>I much prefer <a href="https://click.palletsprojects.com" rel="nofollow noreferrer">click</a> to argparse.  In this simple case there is not likely a huge advantage for Click, but there is little downside.  And if you get comfortable with click and the size of your project increases, I think Click can be quite advantageous.</p>
    </div>