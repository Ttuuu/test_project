<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, thank you for using my Bouncy Castle additions:</p>

<blockquote>
  <p>Maarten Bodewes  initial implementation of HKDF and NIST SP 800-108 MAC based KDF functions.</p>
</blockquote>

<h2>Design review:</h2>

<p>You are trying to emulate Java's Cipher class. However, I don't think this is such a good idea if your <code>encrypt</code> methods and is so much different. The <code>Cipher</code> class in Java is reusable for the same key (and, unfortunately, same IV) and this one is clearly not. I would not try this hard. Better make this class more specific to the use case and <em>avoid generic wrapper classes</em>.</p>

<p>In itself, you may wonder if combining the key derivation and cipher is a good idea. You're removing the <code>update</code> functionality, for instance. This is less of a problem if this is for a specific use case.</p>

<h2>Code review:</h2>

<pre><code>public class AesGcmSymmetricCipher {
</code></pre>

<p>Better made final.</p>

<p>The name doesn't fully capture what the class is about. <code>Symmetric</code> is already captured by <code>Aes</code>. The key derivation part is missing on the other hand.</p>

<pre><code>public static final int KEY_BYTES = 32; // AES-256
</code></pre>

<p>I generally use <code>256 / Byte.SIZE</code> so it is clear where the 32 comes from, that way you don't need the comment.</p>

<pre><code>public byte[] encrypt(byte[] key, byte[] clearData) throws InvalidAlgorithmParameterException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException {
</code></pre>

<p><code>clearData</code> is generally called <code>plaintext</code> or simply <code>message</code> within the crypto community.</p>

<p>Other users will probably wonder what happened with the IV or nonce and where to insert it.</p>

<pre><code>Arrays.clear(iv);
Arrays.clear(key);
</code></pre>

<p>Beware that Oracle made a huge mistakes by making the actual <strong>keys</strong> in software impossible to destroy. You can do this and fool yourself. It's great that you thought of this though - you're not in the wrong here.</p>

<pre><code>return "AES-256/GCM/NoPadding using HKDF";
</code></pre>

<p>Nice but it doesn't capture all the little details - how is the IV calculated, for instance - so it doesn't seem to be of much use. You cannot specify it to anybody and they will know how to implement it.</p>

<hr>

<p>Otherwise the class and design seems spot on to me, so well done.</p>
    </div>