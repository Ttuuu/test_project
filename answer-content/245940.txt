<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Scraping?</h2>
<p>Scraping should be the last resort for getting data from a service that does not have an <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/Welcome.html" rel="nofollow noreferrer">API</a>. Thankfully, not only does ECS have a full API, you're using it via Boto - which means that you are not scraping. Scraping is hacking together unstructured content into structured data, which is not what you're doing.</p>
<h2>Comprehensions</h2>
<pre><code>ecs_clusters = []
paginator1 = ecs.get_paginator('list_clusters')
for page in paginator1.paginate():
    for cluster in page['clusterArns']:
        ecs_clusters.append(cluster)
</code></pre>
<p>can be</p>
<pre><code>ecs_clusters = [
    cluster
    for page in paginator1.paginate()
    for cluster in page['clusterArns']
]
</code></pre>
<h2>Temporary variables</h2>
<pre><code>cluster_details['clusters'][0]
</code></pre>
<p>should receive a variable since it's used multiple times.</p>
<h2>Logging</h2>
<p>I want to call out that you're using logging properly, and that's not nothing. Good job; keep it up.</p>
<h2>Interpolation</h2>
<pre><code>"%s:%s/%s" % (host, port, prefix)
</code></pre>
<p>can be</p>
<pre><code>f"{host}:{port}/{prefix}"
</code></pre>
<h2>Successive string concatenation</h2>
<p>As these things go, <code>"".join(result_txt)</code> is not the worst way to do concatenation. It's generally guaranteed to be more performant than <code>+=</code>. That said, I consider the <code>StringIO</code> interface to be simpler to use than having to manage and then aggregate a sequence, and it has the added advantage that you can more readily swap this out with an actual file object (including, maybe, an HTTP stream) if that's useful.</p>
<h2>Maxima</h2>
<pre><code>        naptime = 600 - duration
        if naptime &lt; 0:
            naptime = 0
</code></pre>
<p>can be</p>
<pre><code>naptime = max(0, 600 - duration)
</code></pre>
    </div>