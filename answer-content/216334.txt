<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are some conceptual misunderstanding, from the code that I see, so let me try to elaborate them: </p>

<h3>Pre-requisite: The react formula</h3>

<p>I have seen react philosophy described by one of their core team members as: </p>

<pre><code>v = f(d)
</code></pre>

<p>or UI/view is a function of data. </p>

<p>Data in react can be stored in <code>state</code> or <code>prop</code>, the function is <code>render</code>, the result or view is the resulting <code>dom</code>. </p>

<h2>Your <code>render</code> method is giving separate output for same state and props</h2>

<p>Many people initially think that whenever <code>render</code> method is called, the <code>dom</code> is manipulated or that react calls render whenever it is ready to repaint the <code>dom</code>. I answered this in details on <a href="https://stackoverflow.com/a/55157980/1695393">stackoverflow</a>.</p>

<p>If you look at your code, it is breaking the react formula. The same <em>function</em> is returning different <em>view</em> for the same <em>data</em>. This may not seem important for your example now, but will cause problems any time you have a hierarchy of components. </p>

<p>From the official react <a href="https://reactjs.org/docs/react-component.html#render" rel="nofollow noreferrer">docs</a>:</p>

<blockquote>
  <p>The render() function should be pure, meaning that it does not modify component state, it returns the same result each time itâ€™s invoked, and it does not directly interact with the browser.</p>
</blockquote>

<p>I will leave out why react wants it to be that way, but leave a comment if you want me to elaborate on that.</p>

<h3>Is your data complete &amp; at one place?</h3>

<p>You are using variables at different places, state to store your data. It can work, but again think of the formula. What <strong>data</strong> does your <em>function</em> require to produce the <em>view</em> that you want to see?</p>

<p>If I take your code and replace function calls with variables that they produce: </p>

<pre><code>&lt;div
  className="background"
  style={someBgColor}
  onClick={this.changeColor.bind(this)}
&gt;
  &lt;div className="cat_container"&gt;
    &lt;img alt="cat_img" className="cat_img" src={someCatImage} /&gt;
    &lt;h2 className="cat_name" style={someFontColor}&gt;
      {someCatName}
    &lt;/h2&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>I see you need bgColor, fontColor, catImage, catName. These should stay in your <code>state</code>. </p>

<p>I will stop here to keep the answer brief, I will edit to add more points a bit later.</p>
    </div>