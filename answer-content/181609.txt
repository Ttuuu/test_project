<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I've finished what I believe to be the final solution. It's both pretty and efficient:</p>

<pre><code>static inline uint64_t delta_swap( uint64_t b, int delta, uint64_t mask )
{
    uint64_t t = ( b ^ ( b &lt;&lt; delta ) ) &amp; mask;
    return b ^ t ^ ( t &gt;&gt; delta );
}
uint64_t rotate_left_around_y_axis( uint64_t b ) // Right
{
    b = delta_swap( b, 34, 0xcccccccc00000000 );
    b = delta_swap( b, 17, 0xaaaa0000aaaa0000 );
    b = delta_swap( b, 16, 0xffff0000ffff0000 );
    return ( b &gt;&gt; 32 ) | ( b &lt;&lt; 32 );
}
uint64_t rotate_right_around_y_axis( uint64_t b ) // Left
{
    b = delta_swap( b, 30, 0x3333333300000000 );
    b = delta_swap( b, 15, 0x5555000055550000 );
    b = delta_swap( b, 16, 0xffff0000ffff0000 );
    return ( b &gt;&gt; 32 ) | ( b &lt;&lt; 32 );
}
uint64_t rotate_right_around_x_axis( uint64_t b ) // Up
{
    b = delta_swap( b, 24, 0x00ff00ff00000000 );
    b = delta_swap( b, 12, 0x0f0f00000f0f0000 );
    b = delta_swap( b, 16, 0xffff0000ffff0000 );
    return ( b &gt;&gt; 32 ) | ( b &lt;&lt; 32 );
}
uint64_t rotate_left_around_x_axis( uint64_t b ) // Down
{
    b = delta_swap( b, 40, 0xff00ff0000000000 );
    b = delta_swap( b, 20, 0xf0f00000f0f00000 );
    b = delta_swap( b, 16, 0xffff0000ffff0000 );
    return ( b &gt;&gt; 32 ) | ( b &lt;&lt; 32 );
}
</code></pre>

<p>Rotating around the Z axis is left as an exercise, as it's actually the easiest to do and I don't need it. Beware though that the ladder 2 lines of code in the functions for Z will have to be changed slightly and that they will be slightly less efficient than the functions for X and Y.</p>

<p>To understand the code you'll need of course to understand the basics of working with bitwise operator and bitboards, but more importantly you'll need to understand Delta Swaps.
A couple of resources are:
<a href="https://reflectionsonsecurity.wordpress.com/2014/05/11/efficient-bit-permutation-using-delta-swaps/" rel="nofollow noreferrer">https://reflectionsonsecurity.wordpress.com/2014/05/11/efficient-bit-permutation-using-delta-swaps/</a>
<a href="https://chessprogramming.wikispaces.com/General+Setwise+Operations#DeltaSwap" rel="nofollow noreferrer">https://chessprogramming.wikispaces.com/General+Setwise+Operations#DeltaSwap</a></p>

<p>The comment section of Quuxplusone's answer should also prove enlightening.</p>

<p>I'm going to accept my own answer, for the sake of documentation you might say, but no small amount of credit should go to Quuxplusone.</p>

<p>Best regards.</p>
    </div>