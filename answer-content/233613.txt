<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Piggy-backing off of Edward's answer around leaking memory, I would advocate the use of <em>smart pointers</em> here (if you're using C++11 or higher). You then wouldn't have to write the deconstructor and memory would be deallocated when the object loses scope.</p>

<p>For instance, your code</p>

<pre class="lang-cpp prettyprint-override"><code>QAction* mGuessWumpusAction = new QAction{tr("Has &amp;Wumpus")};
</code></pre>

<p>would become</p>

<pre class="lang-cpp prettyprint-override"><code>#include &lt;memory&gt;

std::shared_ptr&lt;QAction&gt; mGuessWumpusAction = std::shared_ptr&lt;QAction&gt;(
    new QAction{tr("Has &amp;Wumpus")}
);
</code></pre>

<p>and <code>shared_ptr</code> is super nice because it overloads <code>-&gt;</code> so that <code>mGuessWumpusAction-&gt;doStuff()</code> still "dereferences" in the way you'd think.</p>
    </div>