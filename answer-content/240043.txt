<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A Map would have a roughly constant time lookup on keys but if there only going to be 4 entries then checking each item in an array will probably be quicker anyway.</p>

<p>I think a much bigger issue is the repetition in the code and use of a <code>ResizeArray</code> to write in an imperative style when that can be easily avoided. Both of those issues are covered in this refactor (note that the names I used are quite arbitrary and you can probably come up with better ones):</p>

<pre><code>member this.CabinetNetworkStateAsValues : (CabinetNetworkStateHosts * uint8) array =
    let makeStatePair state stateType =
        let networkState = (this.CabinetNetworkState &gt;&gt;&gt; state) &amp;&amp;&amp; 2uy
        if Enum.IsDefined(typeof&lt;CabinetNetworkState&gt;, networkState)
        then stateType, networkState
        else stateType, 0uy
    [|
        makeStatePair 0 CabinetNetworkStateHosts.EXT 
        makeStatePair 3 CabinetNetworkStateHosts.CAN
        makeStatePair 5 CabinetNetworkStateHosts.NET1
        makeStatePair 7 CabinetNetworkStateHosts.CAN
    |]
</code></pre>
    </div>