<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Another alternative: use <code>RLE</code> (run-length-encoding; with thanks to the comments for the correct naming), borrowed originally from a very simple data compressor of the same name. </p>

<p>Here's the code, albeit in the <code>R</code> language.  (For non-users,  <code>1L</code> just forces integer-class, <code>x[-k]</code> means all of vector <code>x</code> <em>except</em> index 'k'  )  </p>

<p>Here's the base package code for the function <code>rle(x)</code> :<br>
First line: generate logical vector of "is x[j] == x[j-1] ? " </p>

<pre><code>  y &lt;- x[-1L] != x[-n] ;
</code></pre>

<p><code>which</code> returns index values when argument is TRUE, and <code>c</code> concatenates vectors (is.na just catches N/A values in case the input was skeevy) </p>

<pre><code> i &lt;- c(which(y | is.na(y)), n) ; 
</code></pre>

<p>finally, create a structure. First element calculates run lengths by comparing sequential index values in <code>i</code> ; second element returns the value of the input vector every time that run terminates </p>

<pre><code>  structure(list(lengths = diff(c(0L, i)), values = x[i]), class = "rle")
</code></pre>

<p>then add a line to find <code>max(lengths[values==0])</code>.</p>
    </div>