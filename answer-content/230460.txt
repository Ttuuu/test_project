<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm mostly concerned with this line:</p>

<pre><code>if("SAMPLE".equals(type.typeDesc())){
</code></pre>

<p>Comparison to a type string is a strong clue that there's an anti-pattern in this code. If the types are constrained to certain known values, then at the very least this should be tracked with an enumeration.</p>

<p>More likely, though, is that you should do the traditional OOP thing: instead of writing polymorphism-by-<code>if</code>-statement, write polymorphism-by-class-derivation. In other words, this <code>get</code> method would be implemented in a base class, and then overridden in child classes where appropriate. No type check would take place except for the implicit type check done in the JVM when a base class method is invoked. Even if there is only one parent class and one <code>Sample</code> child class, that would be a better-structured and more maintainable solution than what I suspect is happening in your code right now.</p>

<p>All of that said: it's difficult to know exactly what to do, what's feasible or even preferable without seeing more of your code. If you show more of the <code>Type</code> code I can expand on this. </p>
    </div>