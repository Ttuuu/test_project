<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Since the function is hardwired to 3x3 matrices, it would make sense to pass a 3x3 matrix as an argument:</p>

<pre><code>int formingMagicSquare(const int s[3][3])
</code></pre>

<p>This way you will not worry about what to do if <code>s_rows != 3</code>.</p></li>
<li><p><code>stdlib</code> provides <code>int abs(int)</code>.</p></li>
<li><p>The line</p>

<pre><code>    if(cost4_this_operation &lt; cost)cost = cost4_this_operation;
</code></pre>

<p>better be split into</p>

<pre><code>    if(cost4_this_operation &lt; cost) {
        cost = cost4_this_operation;
    }
</code></pre>

<p>Even better, make a <code>static inline int min(int, int)</code> function.</p></li>
<li><p>I see nothing wrong with the loops.</p></li>
<li><p>Of course, the solution is not scalable for larger dimensions. </p></li>
</ul>
    </div>