<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would slightly change this code:</p>

<pre><code>use std::error::Error;

fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {
    // Args arrangement
    let mut args = std::env::args().skip(1);
    assert_eq!(args.len(), 3, "Arguments must be: file_location width height");

    // Reading args
    let file_location = args.next().unwrap();
    let width = args.next().unwrap().parse()?;
    let height = args.next().unwrap().parse()?;

    // Do the job
    let img = image::open(&amp;file_location)?;
    img.thumbnail(width, height);

    // All was ok
    Ok(())
}
</code></pre>

<ol>
<li><p>You can take advantage of the try operator <code>?</code> to make the error handling easier.</p></li>
<li><p>Similarly, you can add a bit of error handling with the <code>assert_eq</code> line. You can use the <code>len</code> method because this iterator knows exactly how much elements it has.</p></li>
<li><p>You can use <code>skip</code> to discard the first element of the <code>Args</code> iterator.</p></li>
</ol>
    </div>