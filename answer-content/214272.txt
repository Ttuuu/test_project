<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Response to your question</h2>

<blockquote>
  <p>If there is any other language than Jquery that I can use to get json files from api, please let me know because i find Jquery quite confusing :-).</p>
</blockquote>

<p>As was mentioned in <a href="https://codereview.stackexchange.com/questions/214121/use-weather-api-to-get-information-in-javascript-jquery/214124#comment414066_214121">a comment</a> (as well as a link-only answer that has since been deleted), there are alternatives, including but not limited to:</p>

<ul>
<li>vanilla JavaScipt: 

<ul>
<li>with <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest" rel="nofollow noreferrer"><code>XMLHttpRequest</code></a> - refer to <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest" rel="nofollow noreferrer"><em>Using <code>XMLHttpRequest</code></em> on MDN</a></li>
<li>with the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API" rel="nofollow noreferrer">fetch API</a></li>
</ul></li>
<li>other libraries, some of which are listed on <a href="http://youmightnotneedjquery.com/" rel="nofollow noreferrer">youmightnotneedjquery.com/</a>:

<ul>
<li><a href="https://github.com/ded/Reqwest" rel="nofollow noreferrer">reqwest</a></li>
<li><a href="https://github.com/then/request" rel="nofollow noreferrer">then-request</a></li>
<li><a href="https://github.com/visionmedia/superagent" rel="nofollow noreferrer">superagent</a></li>
</ul></li>
</ul>

<h2>General review</h2>

<h3>User experience</h3>

<p>You didn't state whether the specification was part of an assignment/task or just something you came up with, but the UX might be improved by having the prompt and Ajax request triggered by an event like a mouse click instead of page load.</p>

<p>If such a change was implemented, then it would be wise to cache the DOM references in variables instead of querying the DOM each time- e.g. </p>

<pre><code>var weatherEl = document.getElementById('weather');
var descEl = document.getElementById('desc');
var tempEl = document.getElementById('temp');

//function to prompt

//AJAX response callback
function ajaxResponse(data) {
    //parse data
    //...
    weatherEl.innerHTML = data.weather[0].description;
    descEl = data.weather[0].description;
    tempEl.innerHTML = data.main.temp + "Â°C";
}
</code></pre>

<p>That way, the lines can be shorter, the DOM won't get queried each time, and you can likely eliminate those variables that are assigned and then only used once. </p>

<p>Perhaps a template system would help improve the process of updating the DOM elements instead of having to update each item individually.</p>

<h3>Handling other responses and errors</h3>

<p>The code above doesn't appear to (gracefully) handle any response other than a successful call to the API endpoint. When the user types in a city that the API doesn't recognize, then a 404 response is returned. If you continue to use the jQuery library, then a <code>.fail()</code> callback could be specified (see the <a href="https://api.jquery.com/jQuery.getJSON/#jqxhr-object" rel="nofollow noreferrer"><code>$.getJSON()</code> documentation for an example</a> to handle that. Also, if a server error occurred, then a 5xx response might be returned.</p>

<p>Additionally, the code assumes that <code>data.weather</code> will be an array and have at least 1 element. What happens if either of those are not true? While it may seem implausible it may be possible and something to guard against.</p>

<h3>Extra libraries</h3>

<p>The code includes <code>mousetrap.js</code> and <code>moment.js</code> - I presume those correspond to the libraries <a href="https://craig.is/killing/mice" rel="nofollow noreferrer">Mousetrap</a> and <a href="https://momentjs.com/" rel="nofollow noreferrer">MomentJS</a>, but it doesn't appear that those libraries are used by the code. Unless those are used by other code not included, those libraries can be removed to save the users time loading the page.</p>
    </div>