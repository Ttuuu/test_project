<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Use <code>size_t</code> for sizes</h1>
<p>Although the LeetCode question specifies that the constructor takes an <code>int capacity</code>, using an <code>int</code> to hold a size is not appropriate for two reasons:</p>
<ol>
<li><code>int</code> might not be big enough to handle all possible sizes that fit into the available memory.</li>
<li><code>int</code> is signed, and now you have to deal with potentially negative numbers.</li>
</ol>
<p>Also note that the standard library uses <code>size_t</code> for things like <code>.size()</code>, and the result of the <code>sizeof</code> operator is also a <code>size_t</code>. So it's best to internally store the capacity as a <code>size_t</code>. This will avoid compiler warnings about comparisons between signed and unsigned values.</p>
<h1>Use types consistently</h1>
<p>The one place you use <code>size_t</code> is in <code>std::list&lt;size_t&gt; lru</code>. But here, the list is actually holding keys. Everywhere else you write <code>int key</code>, so you should write <code>std::list&lt;int&gt; lru</code> here, otherwise your cache might not work correctly when using negative numbers for keys. The LeetCode question does not say whether or not negative <em>keys</em> are allowed, it only mentions only positive <em>values</em> are stored.</p>
<h1>Make helper functions <code>private</code></h1>
<p>Helper functions like <code>update()</code> and <code>clear()</code> are not part of the public API as specified by the LeetCode problem. So make them <code>private</code>.</p>
<h1>Use proper names</h1>
<p>The function <code>clear()</code>, despite its name and even the comment above it, does not erase the cache. Instead, it just removes the least recently used element. Make sure the name (and also the comment) reflects this. I would name it something like <code>pop_lru()</code>, or perhaps just <code>pop()</code>.</p>
<p>Also, the name <code>update()</code> does not match the comment above it. I would remove the comment, and give a more descriptive name: <code>make_most_recent()</code>.</p>
<h1>Useless use of <code>const</code></h1>
<p>It does not make sense to have a function return <code>const void</code>. Just write <code>void</code>.</p>
    </div>