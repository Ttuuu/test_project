<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Assuming you have a BOOL/BOOLEAN column called <code>visible</code>, you might consider using a more recognized syntax like <code>visible &lt;&gt; 0</code> or <code>visible = 0</code> as advised here: <a href="https://stackoverflow.com/a/24801220/2943403">MySQL: “= true” vs “is true” on BOOLEAN. When is it advisable to use which one? And Which one is vendor independent?</a> After all, <a href="https://dev.mysql.com/doc/refman/5.6/en/numeric-type-overview.html" rel="nofollow noreferrer">BOOLEAN columns are really just TINYINT columns</a>.</p>

<p>I have to assume that <code>confirm_result_set($result);</code> is fetching the rows and preparing them in some manner.  Perhaps you'd like to adjust the variable name to be more intuitive/descriptive.</p>

<p>Some developers, myself included, do not recommend the use of <code>global</code> as a means of transferring variables into a function's scope.  IMO, it is cleaner to pass the connection variable as a parameter in the function call (like you do with <code>$sql</code>).</p>

<p>I don't know what <code>db_escape()</code> is doing, but the surest advice is to urge you to use prepared statements with placeholders.  As a less classy alternative, so long as <code>$category_id</code> is an integer, you can cast it as an integer (<code>(int)$category_id</code>) before using it in your query. Joomla, for instance, doesn't offer prepared statements yet (available in the next major version) so they use integer/float casting for security on numeric values.  Also, numeric values do not need to be quoted in queries.</p>

<p><code>ASC</code> is not necessary in your query, it is the default sorting direction and can be omitted.</p>

<p>The LIMIT clause string can be written without concatenation: <code>$sql .= "LIMIT $p, $rowperpage";</code></p>
    </div>