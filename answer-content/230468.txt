<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Assuming that you are trying to extract ALL of the rating values from your table, I agree with Unnamed that you should simply GROUP BY and return the <code>Rating</code>, and the <code>COUNT()</code> in the result set.</p>

<p>Two things to add here...</p>

<ol>
<li><p>Without apply default values, you need to be aware that Unnamed's query will potentially deliver gaps where there is no count for a particular <code>Rating</code> score.  To mitigate this, you should <code>array_merge()</code> your own set of defaults (all of the expected Rating scores) and assign them with a zero count or modify your looping process to provide 0 counts for missing Ratings.</p></li>
<li><p><code>GROUP BY</code> has a cool feature that will provide the grand total for you as well (which seems perfect for your use case and is not included in unnamed's solution)-- <code>ROLL UP</code>: <a href="http://www.mysqltutorial.org/mysql-rollup/" rel="nofollow noreferrer">http://www.mysqltutorial.org/mysql-rollup/</a></p>

<p>This means you can do something like:</p>

<pre><code>function stats($songID){
    $st = $this-&gt;conn-&gt;prepare(
        "SELECT COALESCE(Rating, 'Total') Rating, COUNT(1) `Count`
         FROM list
         WHERE songID = ?
         GROUP BY Rating DESC WITH ROLLUP"
    );

    return $st-&gt;execute([$songID])-&gt;fetchall();
}
</code></pre>

<p>Here's a fiddle demo: <a href="https://www.db-fiddle.com/f/9WZJwBunnEHjy6MMQGYSbt/4" rel="nofollow noreferrer">https://www.db-fiddle.com/f/9WZJwBunnEHjy6MMQGYSbt/4</a></p></li>
</ol>
    </div>