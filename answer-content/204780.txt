<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Offering useful feedback is tricky. It's so dependent on what the company setting the test thinks is "over engineering" and what they mean by the casual statement "<em>Ensure that you maintain and apply basic engineering principles such as SOLID, DRY, YAGNI and KISS</em>". It's quite likely for example that they viewed your efforts to introduce DI as over-engineering. But maybe they wanted you to do that. Only they know.</p>

<p>Rather than using inheritance, I'd personally have added a default constructor to <code>CustomerService</code> that used the current services (to maintain backward compatibility) and another that injected such services, which is something you suggest too at the end of your question.</p>

<p>Also, I'd not have added the regex for the email checking. The only rule that applies 100% to all emails is that it must contain an <code>@</code>. There are no other rules that apply to every email in existence, so your regex is guaranteed to fail for a real email address at some stage.</p>

<p>But really, apart from those two points, there's nothing obviously wrong with your code. The company just has an expectation and you failed to "magically" anticipate that expectation. So don't be disheartened, they just weren't the company for you.</p>

<p>I would chase them for feedback though. Email them, phone them etc and ask directly what they thought was wrong with your submission. Unless they are incredibly rude and disinterested (in which case, did you even want to work there?), they should provide some feedback.</p>
    </div>