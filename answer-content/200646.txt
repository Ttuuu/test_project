<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some tips:</p>

<ul>
<li>Know your PEP8, format your code appropriately.</li>
<li>Learn string formatting - and know the differences between 3.6 and earlier.</li>
<li>Your <code>errMsg</code> and Exception process seem like you expect an error but what error are you expecting? Might want to specify which error you're expecting from your edge cases. ValueError? AttributeError? Also, you shouldn't perform equality statements against None.</li>
<li><code>if (count == None or not isinstance(count, list) or len(count) != 2)</code> has redundant brackets </li>
</ul>

<p>And use a proper test harness instead of writing your own. Here is your code with your <code>expect</code> function removed and using pytest:</p>

<pre><code>import pytest


def coin_sum(coins, total):
    # tabulation way
    arr = [1] + [0] * total
    for coin in coins:
        for i in range(coin, total + 1):
            arr[i] += arr[i - coin]
    return 0 if total == 0 else arr[total]


def test01():
    example = coin_sum([1, 2, 3], 4)
    assert example == 4


def test02():
    example = coin_sum([2, 5, 3, 6], 10)
    assert example == 5


def test03():
    example = coin_sum([2], 10)
    assert example == 1


def test04():
    example = coin_sum([7, 15], 20)
    assert example == 0


def test05():
    example = coin_sum(
            [78, 10, 4, 22, 44, 31, 60, 62, 95, 37, 28, 11, 17, 67, 33, 3, 65, 9, 26, 52, 25, 69, 41, 57, 93, 70, 96, 5,
             97, 48, 50, 27, 6, 77, 1, 55, 45, 14, 72, 87, 8, 71, 15, 59], 100)
    assert example == 3850949
</code></pre>

<p>And here are the results:</p>

<pre><code>C:\PycharmProjects\codereview\tests&gt;pytest test_tt.py
======================== test session starts ========================
platform win32 -- Python 3.7.0, pytest-3.6.2, py-1.5.4, pluggy-0.6.0
rootdir: C:\PycharmProjects\codereview\tests, inifile:
plugins: cov-2.5.1, celery-4.2.0
collected 5 items

test_tt.py .....                                               [100%]

===================== 5 passed in 0.13 seconds ======================
</code></pre>

<p>Hope this helps! </p>
    </div>