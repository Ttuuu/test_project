<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This function can be simplified:</p>

<blockquote>
<pre><code>private int GetParentIndex(int childIndex)
{
    if (childIndex % 2 == 0)
    {
        return (childIndex - 2) / 2;
    }
    else
    {
        return (childIndex - 1) / 2;
    }
}
</code></pre>
</blockquote>

<p>This implementation explicitly takes care to divide only even numbers by two, but there is no problem dividing an odd number by two, that will round towards zero. In the case that <code>childIndex</code> is even, <code>(childIndex - 1) / 2</code> would still work. Hypothetically there would be a difference if <code>childIndex</code> is even and non-positive, but that means the parent of the root is being calculated (which does not happen, <code>BubbleUp</code> stops at the root) or that an invalid index (negative) is passed in which would be a bug elsewhere.</p>

<p>Or to summarize, the implementation could be:</p>

<pre><code>private int GetParentIndex(int childIndex)
{
    return (childIndex - 1) / 2;
}
</code></pre>
    </div>