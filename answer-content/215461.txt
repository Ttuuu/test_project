<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The first 3 lines in <code>main</code> can be turned into a function:</p>
<pre><code>std::string getInput()
{
    std::string input;
    std::cout &lt;&lt; "------------ Input -----------" &lt;&lt; std::endl;
    std::cin &gt;&gt; input;
    return input;
}

int main()
    std::string input = getInput();
</code></pre>
<p>There are several portions of <code>main</code> that could become functions.</p>
<h3>Declare Variable when needed</h3>
<p>In the function <code>convertToBinary</code> the integer variables <code>i</code> and <code>r</code> are declared at the beginning of the function. They are only needed within the <code>for</code> loop.</p>
<pre><code>    for (int i = 0; i &lt; l; i++) {
        int r = decimal % 2;
        decimal /= 2;
        str += std::to_string(r);
    }
</code></pre>
<p>This is also true in the <code>main</code> function for <code>i</code> and other variables.</p>
<p>The contents of the <code>then</code> clause and the <code>else</code> could both be moved into functions.</p>
<p>Does the inner <code>if</code> statement <code>(if (i == length - 1))</code> need to be within the <code>for</code> loop or could it be executed after the <code>for</code> loop is done? You might want to think about <a href="https://en.wikipedia.org/wiki/Loop_invariant" rel="nofollow noreferrer">loop invariants</a>.</p>
<h3>Reduce Complexity When You Can</h3>
<p>In the function <code>bits</code>, checking from the top down might make reading easier because the top limit isn't needed:</p>
<pre><code>    if (d &gt; 65535) {
        l = 32;
    } else if (d &gt; 255) {
        l = 16;
    } else {
        l = 8;
    }
</code></pre>
    </div>