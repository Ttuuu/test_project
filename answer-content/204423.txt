<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Errors</h2>

<p>I tried this both in jsFiddle (with and without JS 1.7 and Babel) as well as NodeJS but saw a few errors. The first one was:</p>

<blockquote>
<pre><code>  return LeafCache[CLASS.name] || LeafCache[CLASS.name] = eval( `class Leaf extends ${CLASS.name} {
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
</code></pre>
  
  <p>ReferenceError: Invalid left-hand side in assignment</p>
</blockquote>

<p>So then I tried wrapping the second conditional in parentheses and that appeared to get me past that error:</p>

<pre><code>return LeafCache[CLASS.name] || (LeafCache[CLASS.name] = eval( `class Leaf extends ${CLASS.name} {
    constructor(val) {
        super(val);
    }
}; Leaf.prototype.__isleaf__ = true; Leaf` ));
</code></pre>

<p>But then I see another error:</p>

<blockquote>
<pre><code>               Object.defineProperty( res[key], '__parent__', {
                       ^
</code></pre>
  
  <p>TypeError: Cannot redefine property: __parent__</p>
</blockquote>

<h2>Other feedback</h2>

<p>Other than those errors I don't see much I would change - maybe a few places where variables can be declared using <code>const</code> instead of <code>let</code> - e.g. <code>genHandler</code>, <code>res</code> within the function <code>__raw__</code>, so as to avoid unintentional re-assignment...</p>

<p>Some of this code appears to be identical to the changes added in <a href="https://codereview.stackexchange.com/revisions/200495/7">revision 7</a> to <a href="https://codereview.stackexchange.com/q/200495/120114">your previous post</a> but with the <code>Leaf</code> class added. Was that in response to the suggestion at the end of <a href="https://codereview.stackexchange.com/a/200942/120114">rm-'s answer</a>?</p>

<blockquote>
  <p>but still the code could be simplified a little bit, split into separate small utility functions, organized in a way to be easy to read from top to bottom, and such.<sup><a href="https://codereview.stackexchange.com/a/200942/120114">1</a></sup></p>
</blockquote>

<p><sup>1</sup><sub><a href="https://codereview.stackexchange.com/a/200942/120114">https://codereview.stackexchange.com/a/200942/120114</a></sub></p>
    </div>