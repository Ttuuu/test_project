<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My first recommendation is to use <code>std::ops</code>. Try writing implementations of <code>ops::Add</code> for addition,  <code>ops::Mul&lt;Vec3&lt;T&gt;&gt;</code> for cross product, and <code>ops::Mul&lt;T&gt;</code> for scaler-vector multiplication. Not only does implementing these standard traits make your code more interoperable with other Rust code, but it also gives you operator overloading, so you can use <code>+</code> and <code>*</code> on your vectors.</p>

<p>Second, I would question the user of the trait <code>Vector3&lt;f32&gt;</code>. Why do you need a trait? I would just put your operations in the implementation of <code>Vec3&lt;T&gt;</code> itself</p>

<pre><code>impl &lt;T&gt; Vec3&lt;T&gt; {

// ... methods ...

}
</code></pre>

<p>Looking forward to seeing your completed code. This will even more interesting once you get generics working.</p>
    </div>