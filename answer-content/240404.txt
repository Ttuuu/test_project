<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would recommend looking into MVVM architecture. You can see a simple example in this <a href="https://github.com/arifinfrds/iOS-MVVM-Moya" rel="nofollow noreferrer">repo</a>.</p>
<p>One problem with it is that its author declares and assigned view models directly in a <code>ViewController</code> which can be a bit problematic when writing tests. A better approach would be to inject view model so it can be easily replaced with mock. To improve that approach you can take a look at coordinators patterns, a bit more advanced example can be found <a href="https://academy.realm.io/posts/mobilization-lukasz-mroz-mvvm-coordinators-rxswift/" rel="nofollow noreferrer">here</a></p>
<p>In most cases the <code>WebService</code> should go in the <code>ViewModel</code> in the MVVM pattern. Services can be injected to <code>ViewModels</code>, which are responsible for managing data provided by these services. Then when they perform all logical transformations (filtering, ordering, multiplying etc.) they provide this information to a view (<code>ViewController</code> in our case) which just consumes it. It allows us to easily write mocks and tests. There are of course more approaches like state machine, but <code>ViewModel</code> as content provider and meeting point for services is most common and most universal one in my opinion.</p>
    </div>