<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your function does too many things: reading Excel file, filtering necessary rows, and calculating the "recession_start". My advice is to take the first two out. </p>

<p>Also, supply quarters and GDP as separate objects (<code>pd.Series</code>) to the function instead of the DataFrame. Like this you will remove hardcoded strings from your function, and, what's more important, you will get rid of <code>SettingWithCopyWarning</code> that you should get right now:</p>

<pre><code>df = pd.read_excel('gdplev.xls',
                   names=['Quarter', 'GDP in 2009 dollars'],
                   usecols='E,G',
                   skiprows=7)
mask = df['Quarter'] &gt;= '2000q1'
print(get_recession_start(quarters=df.loc[mask, 'Quarter'],
                          gdps=df.loc[mask, 'GDP in 2009 dollars']))
</code></pre>

<p>Note that I use <code>usecols</code> instead of <code>parse_cols</code> as it is deprecated. Also, I removed <code>df.query</code> in favor of boolean masking and <code>.loc</code>.</p>

<p>Then, the function would look like this:</p>

<pre><code>def get_recession_start(quarters: pd.Series,
                        gdps: pd.Series) -&gt; str:
    """
    Returns the year and quarter of the recession start time
    as a string value in a format such as 2005q3
    """
    growth = gdps.pct_change()
    recession = (growth &lt; 0) &amp; (growth.shift(-1) &lt; 0)
    recession = recession.reset_index(drop=True)
    return quarters.iloc[recession.idxmax()]
</code></pre>

<p>Here I also used <a href="https://www.python.org/dev/peps/pep-0008/#string-quotes" rel="nofollow noreferrer">triple double quotes</a> for the docstring and <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">type hints</a>. IMHO, this looks much cleaner.  </p>

<p>Probably, it would also make sense to return only the <code>recession.idxmax()</code> index and get corresponding <code>quarters</code> value outside of the function.</p>
    </div>