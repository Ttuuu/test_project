<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Types</h2>

<p>This was too long for a comment to <a href="https://codereview.stackexchange.com/users/91165/prince">prince</a>:</p>

<blockquote>
  <p>Enums are bad in python except for very specific cases, while this may be one of them, I would generally recommend against Enums. Enums are not useful code, they don't make the code clearer. Python doesn't have a <code>switch</code> statement.</p>
</blockquote>

<p>First learn the built-in types, a flip can be described with a Boolean (<strong>bool</strong>) [note: booleans are a subtype of ints]. If you have more options (like a dice roll), then use whole numbers (<strong>int</strong>). If you randomly choose a winner from a pool of players, use a <strong>set</strong> of strings (<strong>str</strong>).</p>

<p>If you need to map an input to an output, rather than a long <code>if</code> chain, use Dictionaries (<strong>dict</strong>):</p>

<pre><code>result = {
    False: "It's tails.",
    True: "It's head."
}

choice = bool(random.randint(0, 1)) 
#     or bool(random.getrandbits(1))
#     or random.choice({True,False})

print(result[choice])
</code></pre>

<p>While it might seem ridiculous to use a dictionary in this case, it will make sense if you take a deck of card for example.</p>

<pre><code>result = {
    1: "as",
    2: "two",
    3: "three",
    4: "four",
    5: "five",
    6: "six",
    7: "seven",
    8: "eight",
    9: "nine",
    10: "ten",
    11: "jack",
    12: "queen",
    13: "king"
}

# or 
"""
result = {
    1: "as",
    **{i: str(i) for i in range(2,11)}
    11: "jack",
    12: "queen",
    13: "king"
}
"""
colors = {"clubs", "diamonds", "spades", "hearts"}
your_card = bool(random.randint(0, 13))
ai_card = bool(random.randint(0, 13))

print(f"Your card is the {result[your_card]} of {random.choice(colors)}")
print(f"Your card is the {result[ai_card]} of {random.choice(colors)}")
print(f"The winner is {'you' if your_card &gt; ai_card else 'ai'}")
</code></pre>

<p>Of course, in those cases, it isn't obvious to find the string if you have the number, if it is trivial to make a function that can do the conversion, make a function.</p>

<p>My top advice is <strong>Don't make long <code>if</code> chains and avoid enums until you know all built in types</strong></p>

<p>Â°[note: code not tested]</p>
    </div>