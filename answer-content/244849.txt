<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>there is no need for final semicolon <code>;</code></li>
</ul>
<h1>loop</h1>
<pre><code>for host in $(cat enc_list);
</code></pre>
<ul>
<li><code>$(cat )</code> can be writen as <code>$(&lt; )</code>, latter form is builtin and will not fork a <code>cat</code> command.</li>
</ul>
<h1>data</h1>
<pre><code>data_req="`ls -l /home/myuser/firmware_version-* |awk '{print $NF}'| tail -1`"
</code></pre>
<ul>
<li>no need for quote</li>
<li>back tick ( ` ) is deprecated use <code>$( )</code> construct.</li>
<li>you use <code>ls -l</code> then <code>awk</code> to filter filename ( <code>$NF</code> ), just use <code>ls | tail  -1</code></li>
<li>sorting by <code>ls</code> won't work when year change.</li>
<li>sorting <code>ls</code> is frowned upon (well if you build all the sorted files without space or newline in their name, it might be OK)</li>
<li>if you still want <code>ls</code> sorting use either <code>ls -t</code> or <code>ls -rt</code> to filter by date (newest first, oldest first)</li>
<li>use <code>\ls</code> to skip any aliased <code>ls</code> (when piped ls will put one file per line, this can be forced by <code>ls -1</code>, column display can be forced with <code>ls -C</code> )</li>
<li>you use <code>${LOGFILE_1}</code> above, then use a parsed <code>ls</code> to retrieve the file, why not use <code>${LOGFILE_1}</code> again ?</li>
</ul>
<h1>parsing</h1>
<pre><code>cat "${data_req}" | egrep '=|1   BladeSystem|HP VC'  | awk '{$1=$1};1' | tee -a "${LOGFILE_2}"
</code></pre>
<ul>
<li><code>grep</code> can read file, this is a useless use of cat.</li>
<li><code>awk '{$1=$1};1'</code> will do nothing</li>
</ul>
<p>the line can be written as</p>
<pre><code>egrep '=|1[ ]+BladeSystem|HP VC'  "${LOGFILE_1}"  | tee -a "${LOGFILE_2}"
</code></pre>
<hr>
<ul>
<li>I am pretty sure you can use public/private keys with HP enclosure.</li>
<li>those enclosure might give you XML answer, it might be worth the effort to analyse and parse it using XML tools ( xmlstartlet/xsltproc/xmllint ), not awk/sed/grep</li>
</ul>
    </div>