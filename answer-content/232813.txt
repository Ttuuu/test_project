<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is no reason to use <code>HashMap</code>, you are not using the bools anywhere. So I think You could just use <code>HashSet</code>. Which you don't need to feed in foreach, instead simply pass the integers as constructor parameter.</p>

<pre><code>var set = new HashSet(A);
</code></pre>

<p>You don't have to compare both <code>i</code> and <code>j</code></p>

<pre><code>i &lt; A.length &amp;&amp; j &lt; A.length
</code></pre>

<p>if <code>j</code> is always one larger then <code>i</code>, just compare with <code>j</code>.</p>

<p>This condition is always true:</p>

<pre><code>(a + b + delta) == sum
</code></pre>

<p>since that is the way it was obtained in the first place:</p>

<pre><code>Integer delta = sum - (a + b);
</code></pre>

<p>This:</p>

<pre><code>int[] result = {a, b, delta};
return result;
</code></pre>

<p>could be just</p>

<pre><code>return {a, b, delta};
</code></pre>

<p>You are returning <code>null</code> where you claim to return <code>int[]</code>, not sure if that's correct.</p>

<p>Anyway I think your implementation does not work as intended, because it only looks for sums of two consecutive and third anywhere. It fails for example on [5,1,2,1,8] looking for 15=5+2+8.</p>
    </div>