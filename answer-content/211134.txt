<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Typically this scenario is done with a decorator pattern where you would wrap just the one and have the cache functionality in the one class. You would put the code in the CacheDataAdapter that I assume is currently in the code of the IDataAdapter cache.  Most of the time this will simplify your code as you can call base method to get the values if not in the backing store for the cache.  </p>

<p>For example if you are using the ConcurrentDictionary or MemoryCache they will have methods to GetOrCreate or AddOrUpdate that will take a lamba expression that you can call into your base method to get the value if missing.  Since you are doing async work while caching you should check out the <a href="https://blogs.msdn.microsoft.com/pfxteam/2011/01/15/asynclazyt/" rel="nofollow noreferrer">AsyncLazy</a></p>

<p>If you don't want to do the decorator pattern I would swap Save and Delete to do it in the primary store before removing them from the cache.  You could have a situation where the save fails in the primary but your cache is updated to say it's good.  </p>

<p>As far if you should await the ReadAllAsync or not it doesn't matter a lot.  I personally wouldn't await it but either way is fine.  See <a href="https://stackoverflow.com/a/17887084">answer</a> on SO</p>
    </div>