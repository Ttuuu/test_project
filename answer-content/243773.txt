<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I assume, that you are exercising formatting and handling time correctly, so I won't mention, that you could do it in a "oneliner" using the existing <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString" rel="nofollow noreferrer">api</a> (for the options see <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat" rel="nofollow noreferrer">here</a>):</p>
<pre><code>  let options = {
    hour12: true,
    hour: "2-digit",
    minute: "2-digit",
    second: "2-digit"
  };

  function showTime() {
    container.textContent = (new Date()).toLocaleTimeString("en-US", options);
  }
setInterval(showTime, 1000);
</code></pre>
<hr>
<p>Another way to format a number by is again to use the existing api instead of <code>String.padStart()</code>:</p>
<pre><code>  let x = 42;
  console.log(x.toLocaleString("en-US", { minimumIntegerDigits: 3 }));
</code></pre>
<p>Here the option speaks for itself, and the output is <code>"042"</code>.</p>
<hr>
<p>The other answers address the most to be said about your code. One thing not mentioned is, that your watch potentially can be as much as nearly one second behind the actual time,
if it is started somewhere in between two seconds. To align with the system time, you could do the following:</p>
<p><code>setTimeout(() =&gt; setInterval(showTime, 1000), 1000 - (new Date()).getMilliseconds());</code></p>
<p>Here <code>setTimeout()</code> is waiting for the next system's second to occur, and then starting the watch by calling <code>setInterval()</code>.</p>
    </div>