<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>Since class <code>Entity</code> deletes its children in the destructor - it has ownership over the data. According to modern C++ guidelines you don't pass ownership via raw pointers nor class should own any data it has only a raw pointer to (except for most basic classes I suppose). Use <code>std::unique_ptr&lt;Entity&gt;</code> instead of <code>Entity*</code> - besides safety it will automatically implement your custom trivial destructor. It will also automatically mark your class <code>Entity</code> to be non-copyable.</li>
<li>Just write <code>virtual ~System() = default;</code> instead of making a custom empty constructor in .cpp.</li>
<li><code>System(std::vector&lt;unsigned int&gt;&amp; componentIDs);</code> replace with <code>System(const std::vector&lt;unsigned int&gt;&amp; componentIDs);</code> since it doesn't modify <code>componentIDs</code>.</li>
<li>Template function <code>AddComponent</code> doesn't compile or work. Your compiler might not scream since you don't use it at any point in your code but it is wrong in many places. Core review is for reviewing working code not debugging non-working code.</li>
<li>There is something terribly wrong with your approach to the <code>ECSManager::m_Components</code>. It won't do what you want it to do.</li>
<li><code>std::vector&lt;Entity&amp;&gt;</code> doesn't compile... <code>std::vector</code> cannot hold native references. Use <code>std::reference_wrapper</code> for it.</li>
</ol>

<p>I assume there many other errors. Please test your code prior to posting it on code review. If you fail to make something work, you can post it on StackOverflow first.</p>
    </div>