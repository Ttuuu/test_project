<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Because this method is <code>Public</code> you should check if <code>lstOrderedDates</code> is <code>Nothing</code> and you should't believe that the passed List really is ordered.  </p>

<p>Doing the check on lstOrderedDates.Count for <code>0</code> and <code>1</code> first will save one indentation for the meat of the code.</p>

<p>Placing <code>Dim dateToCheck = lstOrderedDates.ElementAt(1)</code> inside the loop will remove the need for the  third <code>if</code> inside the loop. </p>

<p>The second <code>if</code> isn't needed at all because of the first <code>if</code>. You can just set <code>selectedDate = dateToCheck</code>.</p>

<p>Would lead to:</p>

<pre><code>Public Shared Function GetClosetDateToToday(lstOrderedDates As List(Of Date)) As Date

    ' Select the closest Delivery date to TODAY (inclusive) from the list of Ordered dates 
    If lstOrderedDates is Nothing OrElse lstOrderedDates.Count = 0 Then
        Return Nothing 
    ElseIf lstOrderedDates.Count = 1
        Return lstOrderedDates.ElementAt(0) 
    End If
    Dim ordered as List(Of DateTime) = lstOrderedDates.OrderByDescending(function(d) d).ToList()
    Dim selectedDate = ordered.ElementAt(0)
    For i = 1 To ordered.Count - 1

        Dim dateToCheck = ordered.ElementAt(i)

        If dateToCheck &lt; Date.Now.Date Then
            Exit For
        End If

        selectedDate = dateToCheck

    Next i
    Return selectedDate

End Function 
</code></pre>

<p>In C# I would do it using some Linq magic like so  </p>

<pre><code>    public static DateTime GetClosetDateToToday(List&lt;DateTime&gt; ordered)
    {
        if (ordered == null || ordered.Count == 0) { return default(DateTime); }

        var result = ordered
                     .OrderByDescending(item =&gt; item)
                     .LastOrDefault(item =&gt; item &gt;= DateTime.Now);

        if (result == default(DateTime))
        {
            return ordered[0];
        }
        return result;
    }
</code></pre>

<p>which should be equal to the VB.NET version but without guarantee </p>

<pre><code>Public Shared Function GetClosetDateToToday(lstOrderedDates As List(Of Date)) As Date

    ' Select the closest Delivery date to TODAY (inclusive) from the list of Ordered dates 
    If lstOrderedDates is Nothing OrElse lstOrderedDates.Count = 0 Then
        Return Nothing 
    End If

    Dim found as DateTime = lstOrderedDates
                            .OrderByDescending(function(d) d)
                            .LastOrDefault(function(d) d &gt;= DateTime.Now)
    If found is Nothing then
        found = lstOrderedDates.ElementAt(0) 
    End If

    Return found 

End Function 
</code></pre>
    </div>