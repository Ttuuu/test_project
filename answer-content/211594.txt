<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Starting from the excellent progress @Josay made, I'd only have one major suggestion:  Turn the set-once properties into read-only, computed properties.  This will:</p>

<ol>
<li>prevent them from being inadvertently overwritten by other code and</li>
<li>allow the <code>effectiInterestRate</code> and/or <code>paymentsPerPeriod</code> to be updated, without the derived computations then becoming invalid.</li>
</ol>

<p>The main change is to make the constructor be:</p>

<pre><code>    def __init__(self, effectiveInterestRate, paymentsPerPeriod):
        self.effectiveInterestRate = effectiveInterestRate
        self.paymentsPerPeriod = paymentsPerPeriod
</code></pre>

<p>and then make some computed properties:</p>

<pre><code>    @property
    def nominalInterestRate(self):
        return self.paymentsPerPeriod * ((1 + self.effectiveInterestRate) ** (1 / self.paymentsPerPeriod) - 1)

    @property
    def effectiveDiscountRate(self):
        return self.effectiveInterestRate / (1 + self.effectiveInterestRate)

    @property
    def nominalDiscountRate(self):
        return self.paymentsPerPeriod * (1 - (1 + self.effectiveInterestRate) ** (-1 / self.paymentsPerPeriod))

    @property
    def discountFactor(self):
        return 1 / (1 + self.effectiveInterestRate)

    @property
    def forceOfInterest(self):
        return math.log(1 + effectiveInterestRate)
</code></pre>
    </div>