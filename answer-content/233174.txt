<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Honestly, the initial <code>words_to_marks</code> function is full of "anti-patterns/bad smells".</p>

<p>When reviewing in steps:</p>

<ul>
<li><p>instead of iterating over <code>string.ascii_lowercase</code> and generating/filling a dictionary of letter indices on <strong>each</strong> function call with:</p>

<pre><code>for index, letters in enumerate(string.ascii_lowercase, 1):     # creates the dictionary
    values[letters] = index
</code></pre>

<p>create a predefined top-level dict <code>lowercase_indices_map</code> at once:</p>

<pre><code>import string

lowercase_indices_map = {c:i for i, c in enumerate(string.ascii_lowercase, 1)}
</code></pre></li>
<li><p>converting each letter of the word with:</p>

<pre><code>for letter in s:
   letter_lower = letter.lower
</code></pre>

<p>is completely redundant as the whole word can be <em>lowercased</em> at once <code>s = s.lower()</code></p></li>
<li><p>and the <em>"magic"</em> like:</p>

<pre><code>values_of_words.append(sum(final))  # sums all the values in the list
submit = str(values_of_words)       # converts into string so I can remove the brackets around the list
return submit[1:-1]
</code></pre>

<p>is just an unnecessary thing that you should avoid doing in future. The sum of letter indices is simply calculated with a single <code>sum(...)</code> call.</p></li>
</ul>

<hr>

<p>The whole idea fits in few lines of code:</p>

<pre><code>import string

lowercase_indices_map = {c:i for i, c in enumerate(string.ascii_lowercase, 1)}

def sum_letters_indices(word):
    word = word.lower()
    return sum(lowercase_indices_map[char] for char in word)
</code></pre>

<p>Sample usage:</p>

<pre><code>print(sum_letters_indices("hello"))    # 52
print(sum_letters_indices("friends"))  # 75
</code></pre>
    </div>