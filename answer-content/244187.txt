<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To be cheeky, the ultimate optimization is "don't use Python for numerics", and the next-best optimization is "use a library rather than writing this yourself".</p>
<p>It's worth having a read through <a href="https://stackoverflow.com/questions/4114167/checking-if-a-number-is-a-prime-number-in-python">https://stackoverflow.com/questions/4114167/checking-if-a-number-is-a-prime-number-in-python</a></p>
<p>Also consider calling into <a href="https://docs.sympy.org/latest/modules/ntheory.html#sympy.ntheory.primetest.isprime" rel="nofollow noreferrer">https://docs.sympy.org/latest/modules/ntheory.html#sympy.ntheory.primetest.isprime</a> .</p>
<p>Otherwise:</p>
<h2>Roots</h2>
<p>I do not trust Python to do the right thing here:</p>
<pre><code>b**(0.5)
</code></pre>
<p>Just call <code>isqrt</code> instead, which will be more likely to get an optimized implementation. This is confirmed here: <a href="https://stackoverflow.com/questions/327002/which-is-faster-in-python-x-5-or-math-sqrtx">https://stackoverflow.com/questions/327002/which-is-faster-in-python-x-5-or-math-sqrtx</a></p>
<h2>Variable names</h2>
<p>You need to get out of the habit of single-letter variable names. I have no idea what <code>b</code> means other than inferring based on context.</p>
<h2>Time measurement</h2>
<p>Use <code>timeit</code>. Your current implementation only has a single iteration for each of the input values and is thus extremely vulnerable to CPU thread-switching noise, etc.</p>
    </div>