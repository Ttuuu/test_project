<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>for i in range(1 ,num_batches +1):
</code></pre>

<p>Your inter-token spacing here is a little wonky. I suggest running this code through a linter to get it to be PEP8-compliant.</p>

<p>This string:</p>

<pre><code>r'input_batch_' + str(i) + r'.txt'
</code></pre>

<p>can be:</p>

<pre><code>f'input_batch_{i}.txt'
</code></pre>

<p>This code:</p>

<pre><code>entries_raw = infile.readlines()
entries_single = [x.strip() for x in entries_raw]
entries = [x.split('\t') for x in entries_single]
</code></pre>

<p>can also be simplified, to:</p>

<pre><code>entries = [line.rstrip().split('\t') for line in infile]
</code></pre>

<p>Note a few things. You don't need to call <code>readlines()</code>; you can treat the file object itself as an iterator. Also, avoid calling a variable <code>x</code> even if it's an intermediate variable; you need meaningful names.</p>

<p>This is an antipattern inherited from C:</p>

<pre><code>for j in range(len(entries)):
    data.loc[j] = entries[j][1], entries[j][0]
</code></pre>

<p>You should instead do:</p>

<pre><code>for j, entry in enumerate(entries):
    data.loc[j] = entry[1], entry[0]
</code></pre>

<p>That also applies to your <code>for x in range(len(data)):</code>.</p>

<p>This:</p>

<pre><code>freq_dict = dict()
</code></pre>

<p>should be:</p>

<pre><code>freq_dict = {}
</code></pre>

<p>This:</p>

<pre><code>if key in freq_dict:
    prior_freq = freq_dict.get(key)
    freq_dict[key] = prior_freq + data['freq'][x]
else:
    freq_dict[key] = data['freq'][x]
</code></pre>

<p>can be simplified to:</p>

<pre><code>prior_freq = freq_dict.get(key)
freq_dict[key] = data['freq'][x]
if prior_freq is not None:
    freq_dict[key] += prior_freq
</code></pre>

<p>or even (courtesy @AlexHall):</p>

<pre><code>freq_dict[key] = data['freq'][x] + freq_dict.get(key, 0)
</code></pre>

<p>Note a few things. First of all, you were inappropriately using <code>get</code> - either check for key presence and then use <code>[]</code>, or use <code>get</code> and then check the return value (which is preferred, as it requires fewer key lookups).</p>

<p>This loop:</p>

<pre><code>for key in freq_dict.keys():
outfile.write("%s,%s\n" % (key, freq_dict[key]))
</code></pre>

<p>needs adjustment in a few ways. Firstly, it won't run at all because its indentation is wrong. Also, rather that only iterating over <code>keys</code>, you should be iterating over <code>items</code>:</p>

<pre><code>for key, freq in freq_dict.items():
    outfile.write(f'{key},{freq}\n')
</code></pre>
    </div>