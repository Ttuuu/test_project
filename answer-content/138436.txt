<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What is not enough LISP-y in your function is the style used for the parentheses (they should not be left alone as last element of a line and they should be on the last line of the enclosed form). Another minor point is that you can use the shorter <code>mapcar</code> instead of <code>map 'list</code>.</p>

<p>Here is a version of your function (generalized for any function applied to the data and any predicate) which follows the more conventional style used in Common Lisp.</p>

<pre><code>(defun schwartzian-transform (list costly-function predicate)
"sort a list of objects over the value of a function applied to them,
by applying the Schwartzian Transform (https://en.wikipedia.org/wiki/Schwartzian_transform)
the parameters are the list, the function, and the predicate for the sort." 
  (mapcar #'cdr
          (stable-sort (mapcar (lambda (x)
                                 (cons (funcall costly-function x) x))
                               list)
                       predicate
                       :key #'car)))

(require :sb-posix)
(schwartzian-transform
 (directory "/etc/*")
 (lambda (x) (sb-posix:stat-mtime (sb-posix:stat x)))
 #'&lt;=)
</code></pre>
    </div>