<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>The bug in</p>

<pre><code>for (auto it = list.begin(); it != list.end(); ++it)
{
    it = list.erase(it);
}
</code></pre>

<p>is due to <code>++it</code>. You don't need to manually advance the iterator, <code>erase</code> does it for you automatically.</p></li>
<li><p>The <code>const_iterator</code> promises that the pointed value would not be modified through it, which better expresses the intentions, and allows the compiler to optimize code more aggressively.</p></li>
<li><p><code>head</code> is a misnomer. Call it <code>sentinel</code>, which it actually is.</p></li>
<li><p>I am not sure that the circular list with a sentinel node is a good design. It doesn't buy you anything; memory wise it is worse than standard head and tail pointers; it somewhat complicates the code; it imposes a requirement on <code>T</code> to be constructible from <code>0.</code></p></li>
</ul>
    </div>