<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>4: <code>use std::{env, error, fs::read_to_string, io, path::PathBuf, process};</code></p>

<p>Just a personal taste, but I would do</p>

<pre><code>use std::{env, error, io, process};
use std::fs::read_to_string;
use std::path::PathBuf;
</code></pre>

<p>Yes, nested includes are nice and easy, but hard to extend. It's up to you.</p>

<hr>

<p>35: <code>let file_contents: Vec&lt;&amp;str&gt; = file_contents.split('\n').collect();</code></p>

<p>I would suggest using <a href="https://doc.rust-lang.org/std/primitive.str.html#method.lines" rel="nofollow noreferrer"><code>lines</code></a> instead.</p>

<p>Also, you can omit <code>&amp;str</code> or change the line completly.</p>

<p>Either </p>

<pre><code>let file_contents: Vec&lt;_&gt; = file_contents.lines().collect();
</code></pre>

<p>or</p>

<pre><code>let file_contents = file_contents.lines().collect::&lt;Vec&lt;_&gt;&gt;();
</code></pre>

<hr>

<p>46/48: <code>line.len() &gt; 0</code> / <code>line.len() == 0</code></p>

<p>Replace that by <code>!line.is_empty()</code> and <code>line.is_empty()</code>.</p>

<hr>

<p>60: <code>resolved_path = PathBuf::from(env::current_dir()?);</code></p>

<p>Remove <code>PathBuf::from</code> completly, because <a href="https://doc.rust-lang.org/std/env/fn.current_dir.html" rel="nofollow noreferrer"><code>current_dir</code></a> is already a <code>PathBuf</code></p>
    </div>