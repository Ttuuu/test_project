<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The drawings may be arbitrarily complex. As you grow the program, you might want to add color, animation, who knows what.</p>

<p>Thus, your drawings are <em>resources,</em> and should be treated as such.</p>

<p><a href="https://stackoverflow.com/a/20389418">This answer</a> provides code, links, and explanations. In short:</p>

<ul>
<li><p>create one or more (your call) text files</p></li>
<li><p>store the drawings in some format (your call) in the text files</p></li>
<li><p>open a reader on the appropriate resource:</p>

<pre><code>InputStream in = getClass().getResourceAsStream("/file.txt"); 
BufferedReader reader = new BufferedReader(new InputStreamReader(in));
</code></pre></li>
<li><p>read in the data, parse the format, and render the artwork</p></li>
<li><p>PROFIT!!</p></li>
</ul>

<p>Note: to start with, the right format is probably "here are my chars" and you just read them and echo to the screen. If you create one file per image, you can generate the file name as "imageNN.txt" and your rendering code becomes 5 or 6 lines.</p>

<p><strong>Update:</strong></p>

<p>Now that I'm on a computer, not a phone, consider this:</p>

<pre><code>static final String GALLOWS_FORMAT = "images/gallows%02d.txt";

// ... other code ...

static void show(int count, PrintStream out) {
    final String filespec = String.format(GALLOWS_FORMAT, count);  
    InputStream in = getClass().getResourceAsStream(filespec);
    BufferedReader gallows = new BufferedReader(new InputStreamReader(in));

    String line;

    while ((line = gallows.readLine()) != null) {
        out.println(line)
    }

    gallows.close();
}
</code></pre>
    </div>