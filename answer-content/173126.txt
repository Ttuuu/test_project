<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In order to make your algorithm efficient, basically what you need is this: you march through the <strong><em>non-occupied</em></strong> cells in some particular order (does not matter which, but you could march one row at a time from top to bottom, each row one column position from left to right). When you encounter an empty cell (call it <code>c</code>), put the least non-conflicting digit into it (say, 4). Next move to the next empty cell in the march order and set it to the smallest possible value. If you find that the an empty cell cannot contain <strong><em>any</em></strong> digit, you need to backtrack (your algorithm should be recursive). Now, suppose you get back to <code>c</code>. Its current value is still 4, but you know that it does not lead to solution. Because of this, you increase it to the next feasible value (say 7). Continue in the same manner until your recursive algorithm sets the very last cell; halt then.</p>
    </div>