<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Though it is character-building to transform a recursive algorithm into an iterative form (and vice versa) I would not worry <em>too</em> much about iterative vs recursive.</p>

<p>There are several ways you could improve this code.</p>

<ul>
<li><p>As I said in your previous post: why an array? You could be much more general and sort an <code>IList&lt;int&gt;</code>.  And why ints?  You can sort any collection of <em>things that can be compared consistently</em> which would make your sorting algorithm more useful.</p></li>
<li><p><code>start</code> and <code>end</code> are very clear. <code>i</code>, <code>j</code> and <code>num</code> are not.  How is the reader of this code supposed to understand what it does?  Rename <code>num</code> to what it is: the pivot. </p></li>
<li><p>Recursive quicksort has four basic steps: (1) decide if we're already sorted, (2) choose a pivot, (3) partition and (4) recurse. The considerable majority of your algorithm is devoted to (3). Consider putting the partition logic in a helper method that can be clearly shown to be correct.</p></li>
<li><p>Consider showing us your test cases.</p></li>
<li><p>There is no error handling; what if the array is null?  What if the start and end are out of bounds?  And so on.</p></li>
<li><p>Consider adding postcondition assertions.  A postcondition assertion is a <code>Debug.Assert</code> that documents what the method ensures is true just before it returns. In your case the postcondition is "the array is sorted from start to end". So assert that; write a little "is sorted" predicate and verify that it works. This will help you find bugs, if there are any. This will help future readers of the code understand it. And it will help people who change the code in the future understand what needs to not break when they modify the code.</p></li>
<li><p>The partition step also has a postcondition; after the partition the array is partitioned into three parts: the values before the pivot are smaller or equal to it, the pivot, and the values after the pivot are greater than it. Assert that these conditions are met.</p></li>
</ul>
    </div>