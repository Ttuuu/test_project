<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your functions themselves are pretty broad, so I'm not going to review each one. However, I can tell you that what you're probably looking for is a <code>namespace</code>. A <code>namespace</code> is just a way to group together similar functions/classes/static objects. They're a little bit like Java's <code>package</code> in that they can be used to organize your code into related groups.</p>

<p>A class with only static functions can be converted to a namespace very easily:</p>

<pre><code>#ifndef STDAFX_INCLUDE
#define STDAFX_INCLUDE

#include "stdafx.h"

#endif

#include &lt;sstream&gt;
#include &lt;algorithm&gt; 
#include &lt;functional&gt; 
#include &lt;cctype&gt;
#include &lt;locale&gt;
#include &lt;random&gt;

// Namespace containing utility functions

namespace Util {
    std::string serialize_http_args(std::map&lt;std::string, std::string&gt;);
    std::string serialize_http_headers(std::map&lt;std::string, std::string&gt;);
    int randrange(int min, int max);
    void trim(std::string&amp;);
    void ltrim(std::string&amp;);
    void rtrim(std::string&amp;);
    std::string trim_copy(std::string);
    std::string ltrim_copy(std::string);
    std::string rtrim_copy(std::string);
    std::string int2str(int);
    std::string lowercase(std::string);
    std::vector&lt;std::string&gt; split(std::string, std::string);
    std::vector&lt;std::string&gt; split_once(std::string, std::string);
}
</code></pre>

<p>Note how <code>class</code> was changed to <code>namespace</code>, <code>public:</code> was removed (all items in a namespace are public), <code>static</code> was removed (it has different meaning outside of a class) and there is no semicolon after the final closing brace.</p>

<p>Each function is referenced the same as it was before, e.g. <code>int random = Util::randrange(0, 100)</code>.</p>

<p>Your include files also look strange compared to what you're actually using - based on the given function definitions, you should only need <code>&lt;string&gt;</code>, <code>&lt;map&gt;</code> and <code>&lt;vector&gt;</code> in this header. Best practice with include files is to <em>only</em> include the headers that you need for the current file. A user of this utility namespace doesn't care if your <code>randrange</code> function uses the <code>&lt;random&gt;</code> library for its implementation - that is a detail that should only appear in the source file.</p>

<p>As a side note, since it looks like you're developing on Windows, best practice is to put</p>

<pre><code>#include "stdafx.h"
</code></pre>

<p>as the first line in every <em>source</em> file, and leave it out of your <em>header</em> files completely. See <a href="https://stackoverflow.com/a/5234347/8365363">this answer on StackOverflow</a> for more details.</p>
    </div>