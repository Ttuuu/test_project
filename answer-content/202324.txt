<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Unneeded is</p>

<ul>
<li><code>Block.capacity</code> - at one spot simply use <code>blockCapacity</code>.</li>
</ul>

<p>Still a bug:</p>

<pre><code>            for (int newBlockIndex = index; 
                     newBlockIndex &lt; elementsOnRight;
</code></pre>

<p>should be (I think)</p>

<pre><code>            for (int newBlockIndex = index; 
                     newBlockIndex &lt; index + elementsOnRight;
</code></pre>

<p>(Redo the bench mark before improving the algorithm.)</p>

<hr>

<p>One may use <code>System.arraycopy</code> and <code>Arrays.fill</code>. For large numbers <code>arraycopy</code> is better than a loop.</p>

<p>Then it would be more opportune to drop the (nice) modulo trick (called "round robin"), dropping:</p>

<ul>
<li><code>Block.indexMask</code> - rename logicalIndex to arrayIndex, and do no modulo.</li>
<li><code>Block.headIndex</code></li>
</ul>

<p>This will also remove the minor requirement that the block capacity is a power of 2.</p>

<pre><code>            // Add newBlock before block and move to it the prefix of the
            // current block and append the new element:
            for (int newBlockIndex = 0; 
                     newBlockIndex &lt; elementsOnLeft; 
                     newBlockIndex++) {
                newBlock.array[newBlockIndex] = block.get(newBlockIndex);
                block.setNull(newBlockIndex);
            }
</code></pre>

<p>can be done as:</p>

<pre><code>            System.arraycopy(block.array, 0, newBlock.array, 0, elementsOnLeft);
            Arrays.fill(block.array, 0, elementsOnLeft, null);
</code></pre>

<p>The same for</p>

<pre><code>            int targetIndex = 1;
            for (int newBlockIndex = index; 
                     newBlockIndex &lt; /* index + ? */ elementsOnRight;
                     newBlockIndex++) {
                newBlock.array[targetIndex] = block.get(newBlockIndex);
                block.setNull(newBlockIndex);
                targetIndex++;
            }
</code></pre>

<p>can be done as:</p>

<pre><code>            System.arraycopy(block.array, index, newBlock.array, 1, elementsOnRight);
            Arrays.fill(block.array, 1, elementsOnRight, null);
</code></pre>
    </div>