<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Please note I am not an expert in Java, I do know something about object oriented programming.</p>

<p>Java is an object oriented programming language. To write good object oriented programs it's best to keep 5 programming principles in mind. Together these 5 principles are called <a href="https://en.wikipedia.org/wiki/SOLID" rel="nofollow noreferrer">SOLID</a> programming. The 5 programming principles are</p>

<ul>
<li>The <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">Single Responsibility Principle</a>  </li>
<li>The <a href="https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle" rel="nofollow noreferrer">Open-closed principle</a>  </li>
<li>The <a href="https://en.wikipedia.org/wiki/Liskov_substitution_principle" rel="nofollow noreferrer">Liskov substitution principle</a>  </li>
<li>The <a href="https://en.wikipedia.org/wiki/Interface_segregation_principle" rel="nofollow noreferrer">Interface segregation principle</a>  </li>
<li>The <a href="https://en.wikipedia.org/wiki/Dependency_inversion_principle" rel="nofollow noreferrer">Dependency inversion principle</a></li>
</ul>

<p>The single responsibility principle states:  </p>

<blockquote>
  <p>that every module, class, or function should have responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by that module, class or function.</p>
</blockquote>

<p>This program violates the single responsibility principle in 2 ways, first the function <code>main()</code> is included in the class and second the <code>write()</code> function is too complex (does too much) and should be simplified.</p>

<p>The function <code>write()</code> might be better named <code>copy()</code>. It should do only one thing, which is copy the input file to the output file. There could be 2 <code>copy()</code> functions, one for <code>text</code> and one for <code>strings</code>. The decision on which way to write to the output file should be outside the <code>copy</code> functions.</p>

<p>Opening and closing the files should be outside the <code>write</code> function. The program should only open the input file once and possibly reset it to the beginning the second time.</p>

<p>The <code>ByteStreamTest</code> constructor could open the input file.
There could be a Boolean member of the <code>ByteStreamTest</code> class that is either public and gets modified by <code>main()</code> or private with accessor functions.</p>
    </div>