<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It's clear you're performing the same operation over different ranges of cells. So I'd separate that logic in a <code>Function</code> which you can call with any range you like. Using arrays achieve a speed up if the ranges are large, but for now wait until you think you need it. (Needing to check the cell for <code>.HasFormula</code> will slow down using an array in any case.)</p>

<p>The code below shows the trimming logic isolated to a single function. The logic is no different from yours with the exception of more clear variable names.</p>

<pre><code>Option Explicit

Sub test()
    TrimTheseCells JHACheck.Range("M7:M32")
    TrimTheseCells JHACheck.Range("M35:M41")
    TrimTheseCells JHACheck.Range("R35:R41")
End Sub

Private Sub TrimTheseCells(ByRef thisRange As Range)
    Dim cell As Range
    For Each cell In thisRange
        If Not IsEmpty(cell) Then
            If Not cell.HasFormula Then
                cell.Value = Trim(cell.Value)
            End If
        End If
    Next cell
End Sub
</code></pre>
    </div>