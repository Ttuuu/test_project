<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In my opinion your code is perfectly fine! I just found some fussy thinks.</p>
<hr>
<h1>HTML Comments</h1>
<p>In Robert C. Martin's book <a href="https://www.investigatii.md/uploads/resurse/Clean_Code.pdf#%5B%7B%22num%22%3A1325%2C%22gen%22%3A0%7D%2C%7B%22name%22%3A%22XYZ%22%7D%2C-48%2C671%2C1%5D" rel="nofollow noreferrer">Clean Code under HTML Comments</a> you can read</p>
<blockquote>
<p>HTML in source code comments is an abomination [...]. It makes the comments hard to read in the one place where they should be easy to read â€” the editor/IDE. If comments are going to be extracted by some tool (like Javadoc) to appear in a Web page, then it should be the responsibility of that tool, and not the programmer, to adorn the comments with appropriate HTML.</p>
</blockquote>
<p>In to places you uses the <code>&lt;code&gt;</code>-tag. Which can be replaced by javadocs <code>{@code}</code></p>
<p>For example from</p>
<blockquote>
<pre class="lang-java prettyprint-override"><code>&lt;code&gt;x1, x2, ..., xn&lt;/code&gt; 
</code></pre>
</blockquote>
<p>to</p>
<pre class="lang-java prettyprint-override"><code>{@code x1, x2, ..., xn}
</code></pre>
<hr>
<h1>Duplicated Statement</h1>
<p>The statement <code>points.size() - 1</code> occurs three times inside the method <code>computeClusternessMeasure</code>. Even it is only a <span class="math-container">\$O(1)\$</span>-statement it makes it easier to read the variable <code>indexOfLastEntry</code> instead of <code>points.size() - 1</code></p>
<hr>
<h1>An Other Argument</h1>
<p>Currently <code>computeClusternessMeasure</code> takes a <code>Collection</code> but instead you need a <code>List</code>. This "transformation" has nothing to do with the algorithm and a a collection makes additional to that no sense..</p>
<p>Furthermore you need to <code>sort</code> it..</p>
<h1>Take a <a href="https://www.cs.helsinki.fi/u/luontola/tdd-2009/ext/ObjectCalisthenics.pdf" rel="nofollow noreferrer">First-Class-Collection</a> as Argument</h1>
<p>If you want to keep the flexibility you could create a First-Class-Collection.</p>
<blockquote>
<p>Any class that contains a collection should contain no other member variables. Each collection gets wrapped in its own class, so now behaviors related to the collection have a home.</p>
</blockquote>
<p>The method signature I want to create is <code>double computeClusternessMeasure(SortedMessurementPoints points)</code></p>
<pre class="lang-java prettyprint-override"><code>public class SortedMessurementPoints {

      private List&lt;Double&gt; points;
   
      public SortedMessurementPoints(Collection&lt;Double&gt; points) {
          List&lt;Double&gt; asList = new ArrayList(points);
          Collection.sort(asList )
          this.points = asList;
      }

      public double get(int index) {
          return points.get(index);
      }

      public int indexOfLastEntry() {
            return points.size() - 1;
      }
}
</code></pre>
<pre class="lang-java prettyprint-override"><code>public double computeClusternessMeasure(SortedMessurementPoints points) {
    double minimumPoint = points.get(0);
    double maximumPoint = points.get(points.indexOfLastEntry());
    double range = maximumPoint - minimumPoint;

    if (range == 0.0) {
        // Once here, all data points are equal and so CM must be 1.0.
        return 1.0;
    }

    double expectedDifference = range / points.indexOfLastEntry();
    double sum = 0.0;

    for (int i = 0; i &lt; points.indexOfLastEntry(); i++) {
        double currentDifference = points.get(i + 1) - points.get(i);
        sum += Math.min(Math.abs(expectedDifference - currentDifference),
                                     expectedDifference);
    }

    return sum / range;
}
</code></pre>
    </div>