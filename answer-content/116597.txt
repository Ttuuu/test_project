<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A better alternative to the busy wait loop would be to use a Semaphore - in this case a <a href="https://msdn.microsoft.com/en-us/library/system.threading.semaphoreslim%28v=vs.110%29.aspx" rel="noreferrer"><code>SemaphoreSlim</code></a> would probably be the most appropriate. Semaphores are not reentrant. This would simplify the implementation to:</p>

<pre><code>struct DumbAsyncMutex
{
    private SemaphoreSlim _Semaphore = new SemaphoreSlim(1, 1);

    public async Task WithMutexAsync(Func&lt;Task&gt; t)
    {
        await _Semaphore.WaitAsync();

        try
        {
            await t();
        }
        finally
        {
            _Semaphore.Release(1);
        }
    }
}
</code></pre>

<p>The advantage is that it has <code>async</code> support and you can abandon the waiting by using cancellation tokens. </p>
    </div>