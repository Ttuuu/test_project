<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The flaw in your algorithm is that you're summing for each item in each array. That means you get \$O(n^2)\$ for time complexity.</p>

<p>Sum once, then add to the left side whilst removing from the right side. This will give a time complexity of \$O(2n)\$ (once to sum, another to move each element over from the left to the right side).</p>

<p>Additionally, once you have found 1 case in which both sides match, you can stop looking for that testcase.</p>
    </div>