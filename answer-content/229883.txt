<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>w3schools gets its placement from shelling out big bucks for high ranking in search engine results (as I've read), not for being the best resource for web development advice.  When in doubt, read Stack Exchanges sites.  SE sites enjoy the benefit of constant peer review.  If something is not quite right, eventually a whistleblower is going to find it and call it out.</li>
<li>There is no benefit to the parenthetical wrapping of the POST values -- this can be safely omitted.  When declaring variables, use camelCase or snake_case for improved readability -- if done consistently through a project, you'll thank yourself later.</li>
<li><p>Your <code>COUNT()</code> query is looking for a <code>true</code>|<code>false</code> determination; this can be simplified using this technique: <a href="https://stackoverflow.com/a/37958929/2943403">https://stackoverflow.com/a/37958929/2943403</a>  As a personal preference, passing an array to <code>execute()</code> is a superior syntax because it is less verbose.</p>

<pre><code>$stmt = $conn-&gt;prepare(
    "SELECT 1
     FROM blackout
     WHERE :pickupdate BETWEEN start_date AND end_date
       AND city = :pickuploc
       AND class = :class"
);
$stmt-&gt;execute([
    'class' =&gt; $class,
    'pickupdate' =&gt; $sqlPickUpDate,
    'pickuploc'=&gt; $pickUpLoc,
]);
$blackout = (bool)$stmt-&gt;fetchColumn();
</code></pre></li>
<li>Definitely re-use the same connection variable, there is no benefit in grabbing another.</li>
<li><p>Write your simplest / less-intensive conditions first and progress to expressions that involve function calls or relatively heavier processing.  Using <code>in_array()</code> will spare your conditional expressions from being overloaded with lots of <code>&amp;&amp;</code>s and <code>||</code>s.  Don't let your line width stretch on for too long, try to avoid doing a lot of horizontal scrolling when writing/reading your scripts.  For my liking, your "second half" of conditions when determining if booking action is required, needs an additional set of parentheses to make the logic absolutely clear to humans.  I'm actually not going to touch that ordering of the conditions because I don't want to accidentally break the logic, but if this was my script, I would go further to clear up what is happening.</p>

<pre><code>if (
    ($coverage == 'inclusive' &amp;&amp;
     in_array($dlCountry, ['US', 'JP']) &amp;&amp;
     in_array($driversAge, [19, 20])
    ) ||
    in_array($class, ['suv', 'minivan', 'convert']) &amp;&amp;
    in_array($driversAge, [19, 20]) ||
    $pickuploc == 'oc' ||
    $blackout
) {
</code></pre></li>
<li>Again with the INSERT query, I recommend declaring an associative array instead of all of those <code>bindParam()</code> calls.</li>
<li>You must never, ever display db error messages to the end user in production.  When you are developing, it may be okay, but if you provide those precise details to someone with malicious intentions, things can go very badly for you and your project.</li>
<li>If you are going to just <code>&lt;br&gt;</code> delimit your data and print to screen, it will make things a bit simpler and more scalable to set up an array and implode the values with <code>&lt;br&gt;</code> as glue.  Again, try not to write excessively wide code.</li>
</ol>

<p>Overall, I'd say you are doing quite well -- I've seen far worse attempts.  You are using prepared statements and datetime objects, so you are on the right path.</p>
    </div>