<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have modified my code to the suggestions, what are other things that could be worked on? Thank you for your help.</p>

<p>Car Menu:</p>

<pre><code>package CarPartsB;

import java.util.InputMismatchException;
import java.util.Scanner;

public class CarPartsMenu {

    Scanner console = new Scanner(System.in);
    private final CarsArray carsList = new CarsArray();
    private boolean loopVariable = true;

    public void showMenu() {

        while (loopVariable) {
            try {
                System.out.println("1: Add car.\n2: Remove car.\n3: List cars.\n4: Exiting");
                int userInput = console.nextInt();
                switch (userInput) {
                    case 1:
                        addCar();
                        break;
                    case 2:
                        removeCar();
                        break;
                    case 3:
                        listCars();
                        break;
                    case 4:
                        loopVariable = false;
                        break;
                }
            } catch (InputMismatchException e) {
                console.nextLine();
                System.out.println("\n" + e + " \nhas happened, choose value from 1 o 4.\n Click enter to continue...");
                console.nextLine();
            }
        }
    }

    private void addCar() {
        String make, model;
        int year;
        double price;
        try {
            System.out.println("What's price of your car? ");
            price = console.nextDouble();
            validateInput(price);
            System.out.println("What year was your car made?");
            year = console.nextInt();
            validateInputYear(year);
            System.out.println("What's the make of your car?");
            make = console.next();
            System.out.println("What's the model of your car?");
            model = console.next();
            Car car = new Car(price, year, make, model);
            carsList.addCar(car);
        } catch (InputMismatchException e) {
            console.nextLine();
            System.out.println("\n" + e + "\nhas happened, make sure to input correct values.\n Click enter to continue...");
            console.nextLine();
        }
    }

    private void removeCar() {
        if (carsList.isEmpty()) {
            console.nextLine();
            System.out.println("There are no cars in the list");
            console.nextLine();
        } else {
            try {
                System.out.println("Type id of the car you want to remove: ");
                int userInputID = console.nextInt();
                carsList.removeCar(userInputID);
                System.out.println("Car with ID: " + userInputID + " has been removed.\n");
                console.nextLine();
            } catch (IndexOutOfBoundsException e) {
                console.nextLine();
                System.out.println("\n" + e + "\nhas happened, you have to pick ID that EXISTS.\n Click enter to continue...");
                console.nextLine();
            } catch (InputMismatchException e) {
                console.nextLine();
                System.out.println("\n" + e + "\nhas happened, input an integer.\n Click enter to continue...");
                console.nextLine();
            }
        }
    }

    private void listCars() {
        console.nextLine();
        System.out.println("List of cars: ");
        printCarDetails();
        System.out.println("\nPress anything to continue...");
        console.nextLine();
    }

    private void printCarDetails() {
         if (carsList.isEmpty()) {
            System.out.println("Empty..");
        }else {
            for(Car c : carsList.getCars()) {
                System.out.println("ID:" + c.getCarID() + " " + c.getMake() + " "
                + c.getModel() + " is " + c.getYearsOld() + " "
                + "years old and has price of " + c.getPrice());
            }
         }

    }

    private void validateInputYear(int number) {
        if (number &lt; 1900 || number &gt; 2018) {
            throw new InputMismatchException("\nYou can't add car that was made earlier than 1900\n or after 2018");
        }
    }

    private void validateInput(double number) {
        if (number &lt;= 0) {
            throw new InputMismatchException("\nPrice can't be negative or zero.");
        }
    }

}
</code></pre>

<p><code>Array</code> Class</p>

<pre><code>package CarPartsB;

import java.util.ArrayList;
import java.util.NoSuchElementException;

public class CarsArray extends ArrayList {

    private final ArrayList&lt;Car&gt; carsArray;

    public CarsArray() {
        this.carsArray = new ArrayList();
    }

    public ArrayList&lt;Car&gt; getCars() {
        return carsArray;
    }

    public int size() {
        return carsArray.size();
    }

    public void addCar(Car element) {
        carsArray.add(element);
    }

    public void removeCar(int carId) {
        Car carToRemove = null;
        for (Car c : carsArray) {
            if (c.getCarID() == carId) {
                carToRemove = c;
            }
        }
        if (carToRemove != null) {
            carsArray.remove(carToRemove);
        } else {
            throw new NoSuchElementException();
        }
    }

    public boolean isEmpty() {
        return carsArray.isEmpty();
    }

}
</code></pre>

<p><code>Car</code> Class</p>

<pre><code>package CarPartsB;

import java.time.Year;

public class Car {

    private double price;
    private final int year_of_production;
    private final String make;
    private final String model;
    private final int yearsOld;
    private final int carID;
    static int CAR_ID;
    int year = Year.now().getValue();


    public Car(double price, int year_of_production, String make, String model) {
        this.price = price;
        this.year_of_production = year_of_production;
        this.make = make;
        this.model = model;
        this.yearsOld = year - this.year_of_production;
        this.carID = CAR_ID;
        CAR_ID++;

    }

    public int getYearsOld() {
        return yearsOld;
    }

    public int getCarID() {
        return carID;
    }

    public void setPrice(int price) {
        this.price = price;
    }

    public double getPrice() {
        return price;
    }

    public int getYear_of_production() {
        return year_of_production;
    }

    public String getMake() {
        return make;
    }

    public String getModel() {
        return model;
    }

}
</code></pre>
    </div>