<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Import sanity</h2>

<p>These three:</p>

<pre><code>from tkinter import *
from tkinter.ttk import *
import tkinter as tk
</code></pre>

<p>are not all needed at the same time. The first is the messiest - it simply floods your namespace with all tk symbols. The second is similarly messy. You're better off with:</p>

<pre><code>import tkinter as tk
import tkinter.ttk as ttk
</code></pre>

<h2>Path handling</h2>

<p>Especially since you're in Windows, you should rethink your handling of paths. This:</p>

<pre><code>directory = "C:/Users/label/Desktop/Sign off Project/sign off img"
choices = glob.glob(os.path.join(directory, "*.jpg"))
</code></pre>

<p>has a few issues. You should probably be using a relative path, first of all. Using an absolute path in a situation like this creates more complicated and fragile code.</p>

<p>Also, consider using the stuff from <code>pathlib</code> to simplify and clean up your filename operations.</p>

<p>My <em>guess</em> is that you'll end up with something like:</p>

<pre><code>from pathlib import Path

choices = Path('sign off img').glob('*.jpg')
</code></pre>

<h2>Args</h2>

<pre><code>def change_dropdown(*args):
</code></pre>

<p><a href="https://effbot.org/tkinterbook/button.htm#Tkinter.Button.config-method" rel="nofollow noreferrer">The documentation</a> does not mention any args to the callback - so simply delete <code>*args</code>.</p>

<h2>Global code</h2>

<pre><code>root = Tk()
root.minsize(840, 400)
app = App(root)
root.mainloop()
</code></pre>

<p>Put this in a main function:</p>

<pre><code>def main():
    root = Tk()
    root.minsize(840, 400)
    app = App(root)
    root.mainloop()

if __name__ == '__main__':
    main()
</code></pre>
    </div>