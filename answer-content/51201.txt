<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>You do a <code>editorWindow.setDefaultCloseOperation(EXIT_ON_CLOSE);</code>
which means if I open multiple windows using <strong>New</strong> menu item and
close any one of the windows program exits. This is because 
you do not differentiate between a window and an application instance.
you should separate your window code from your application instance
your application instance should manage its open windows.
A window should inform the application instance when it is closed
and the application should exit when its last window is closed.
If you do not exit at the first window-closed event, you should release
memory, file handles,  (network, db connectionsin the future?) etc whatever
resources associated with the window. </p></li>
<li><p>You get the file name before you show the file chooser you get a
<code>NullPointerException</code>, which you do not catch and swing prints it
to console, provided you run the program from console.</p>

<pre><code>JFileChooser save = new JFileChooser();
File filename = save.getSelectedFile();
if(opened == false &amp;&amp; saved == false) {
    save.showSaveDialog(null);
</code></pre></li>
<li><p>In your file I/O operation you do this:</p>

<pre><code>// Method for opening files
private void openingFiles(File filename) {
    try {
        openedFile = filename;
        FileReader reader = new FileReader(filename);
        textArea.read(reader, null);
        opened = true;
        window.setTitle("JavaEdit - " + filename.getName());
    } catch (IOException err) {
        err.printStackTrace();
    }
}
</code></pre>

<p>Apart from possible resource leaks, as <a href="https://codereview.stackexchange.com/a/51176/20251">previously pointed out</a>,
you give the user no indication whether his command completed
successfully or not. Probably when you try to save a file you would
expect the editor to give some indication of the result: if successful a "file
saved" notification in the status bar, the star indicating the file
is modified to disappear etc. If unsuccessful you would want even
more obvious indication, such as a message box, saying "File is
open by another process" or at least "Could not save buffer".</p></li>
<li><p>Your event handling code seems very AWT, with a single 
<code>if/else if</code> block. A better way is 
to use <code>Action</code>s instead. Check out the <a href="http://docs.oracle.com/javase/tutorial/uiswing/misc/action.html" rel="nofollow noreferrer">swing Action tutorial</a>; 
it also has a demo, although not perfect, shows how a single action can 
be associated with a menu item, toolbar button, a keyboard shortcut etc.</p></li>
</ol>
    </div>