<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>1. Use classes to separate concerns</h3>
<p>One improvement could be to introduce your own classes to separate the hangman drawing, from the main game loop.</p>
<p>Something like</p>
<pre><code>class Gallow {
private:
    static std::string gallows[] =
    {
        "  |  O\n  | /|\\\n  |  |\n  | / \\", // right leg (complete)
        "  |  O\n  | /|\\\n  |  |\n  | /",    // left leg
        "  |  O\n  | /|\\\n  |  |\n  |",      // torso
        "  |  O\n  | /|\\\n  |\n  |",         // right arm
        "  |  O\n  | /|\n  |\n  |",           // body
        "  |  O\n  | /\n  |\n  |",            // left arm
        "  |  O\n  |\n  |\n  |",              // head
        "  |\n  |\n  |\n  |",                 // empty gallows
        "   ____\n  |  |\n",                  // gallows top
        "\n _|_____\n"                        // gallows base
    };
    int stage;
public:
    Gallow() : stage(sizeof(gallows)) {}
    void printNextFailedStage() {
        if(stage &gt;= 0) {
            std::cout gallows[stage];
            stage--;
        }
    }
    bool isCompleted() {
        return stage &lt;= 0;
    }
};
</code></pre>
<p>Also separating the given words to guess into a class would make the overall designe more flexible.</p>
<h3>2. Don't use c-style <code>srand()</code> and <code>rand()</code> functions with c++</h3>
<p>Using <code>srand()</code> and <code>rand()</code> functions should be replaced with the <a href="https://en.cppreference.com/w/cpp/numeric/random" rel="noreferrer">Pseudo-random number generation</a> facilities of the current standard.</p>
<h3>3. Use specific <code>using</code> statements to reduce namespace references</h3>
<p>You can use</p>
<pre><code>using std::cout;
</code></pre>
<p>for example to avoid the need to write out <code>std::cout</code> everytime.</p>
    </div>