<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Single Responsibility Principle</strong> </p>

<p>The class Game does too much directly, this could be an aggregation of classes instead. One of the points of the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="noreferrer">Single Responsibility Principle</a> is that a class or function has limited tasks to perform so that it is easier to write, read and debug. The file input should have it's own class that game might evoke. The single responsibility is one of the 5 key principles of <a href="https://en.wikipedia.org/wiki/SOLID" rel="noreferrer">SOLID</a> programming. SOLID programming is a good method of Object Oriented programming.</p>

<p><strong>Error Checking</strong>  </p>

<p>The function <code>onOffSwitch(std::string command)</code> returns an integer value that is <strong>always</strong> ignored. There is no error checking on the value to see if the file <code>words.txt</code> was opened successfully. If the file doesn't exist the program goes into an infinite loop (Bug number 1).</p>

<p><strong>Don't Ignore Warning Messages</strong></p>

<p>I built and ran this program in Visual Studio 2015. The following warning messages were issued during the build:</p>

<pre><code>1&gt;------ Build started: Project: HangMan1, Configuration: Debug Win32 ------
1&gt;  Game.cpp
1&gt;d:\codereview\hangman1\hangman1\game.cpp(58): warning C4244: 'argument': conversion from 'time_t' to 'unsigned int', possible loss of data
1&gt;d:\codereview\hangman1\hangman1\game.cpp(86): warning C4018: '&lt;': signed/unsigned mismatch
1&gt;d:\codereview\hangman1\hangman1\game.cpp(123): warning C4018: '&lt;': signed/unsigned mismatch
1&gt;d:\codereview\hangman1\hangman1\game.cpp(132): warning C4244: 'argument': conversion from 'time_t' to 'unsigned int', possible loss of data
1&gt;d:\codereview\hangman1\hangman1\game.cpp(141): warning C4018: '&lt;': signed/unsigned mismatch
1&gt;d:\codereview\hangman1\hangman1\game.cpp(257): warning C4805: '==': unsafe mix of type 'int' and type 'bool' in operation
1&gt;d:\codereview\hangman1\hangman1\game.cpp(261): warning C4805: '==': unsafe mix of type 'int' and type 'bool' in operation
1&gt;d:\codereview\hangman1\hangman1\game.cpp(34): warning C4715: 'Game::onOffSwitch': not all control paths return a value
========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========
</code></pre>

<p>The warning messages should be treated as error messages in this case because it shows possible bugs in the code. The last warning message in particular should be treated as an error message, <strong>all paths through the code should always return a value</strong>.</p>

<p><strong>Bug Number 2</strong>  </p>

<p>After words.txt was added the program ran and it picked one of the lines as it was supposed to. When the first letter of the line was added (not the first guess or the first correct guess) the letter was converted to a capital which made the answer when it was entered wrong. It might be better to convert all user input to lower case upon entry.</p>

<p><strong>Portability</strong>  </p>

<p>The code is not portable because it includes windows.h. It also uses windows only features such as STD_OUTPUT_HANDLE. It might be better to ifdef this code so it can be moved to other platforms.</p>
    </div>