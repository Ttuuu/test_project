<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The method you have provided looks clean, is short and is easy to understand. It does what it should do but calls <code>Contains()</code> in the worst case 3 times which could be avoided.</p>

<p>A filedatatype other than <code>General</code> can only happen if at least the delimiter <code>__</code> is found twice. So why don't we <a href="https://msdn.microsoft.com/en-us/library/tabh47cf(v=vs.110).aspx" rel="nofollow noreferrer"><code>Split()</code></a> the filname and if we get an array which length is at least <code>3</code> we have something to work with.  </p>

<p>Let us assume the filename without extension reads <code>SomeFile__Export__SomeMoreText</code> if we call <code>Split()</code> using <code>__</code> as splitting argument we would get <code>{"SomeFile", "Export", "SomeMoreText"}</code> now we can easily iterate over the array starting at the second element and ending at the element before last and using a <code>switch</code> on each element to gain the desired filedatatype.  </p>

<p>Overall this would look like  </p>

<pre><code>private static string GetFileDataType(string fullFileNameWithPath)
{

    var fileName = Path.GetFileNameWithoutExtension(fullFileNameWithPath);

    if (string.IsNullOrWhiteSpace(fileName)) { return string.Empty; }

    var possibleFileDataTypes = fileName.Split(new string[] { "__" }, StringSplitOptions.None);

    if (possibleFileDataTypes.Length &lt; 3) { return "General"; }

    for (var i = 1; i &lt; possibleFileDataTypes.Length - 1; i++)
    {
        switch (possibleFileDataTypes[i])
        {
            case "Import":
                return "Source Data";

            case "Export":
                return "Destination Data";

            case "Transform":
                return "Transformational Data";
        }
    }
    return "General";
}
</code></pre>

<p>and produces the following results  </p>

<pre><code>GetFileDataType(string.Empty) -&gt; string.Emtpty
GetFileDataType(null) -&gt; string.Emtpty
GetFileDataType(@"C:\folder\Text__Export__SomeOtherText.txt") -&gt; "Destination Data"
GetFileDataType(@"C:\folder\Text__SomeOtherText__SomeMoreText.txt") -&gt; "General"
GetFileDataType(@"C:\folder\Some__File__Import__Some__More__Text.txt") -&gt; "Source Data"
GetFileDataType(@"C:\folder\__Transform__Some__More__Text.txt") -&gt; "Transformational Data"
GetFileDataType(@"C:\folder\__Export__.txt") -&gt; "Destination Data"
GetFileDataType(@"C:\folder\__Export.txt") -&gt; "General"
GetFileDataType(@"C:\folder\____.txt") -&gt; "General"
GetFileDataType(@"C:\folder\____.txt") -&gt; "General"
</code></pre>
    </div>