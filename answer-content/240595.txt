<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>your code is pretty neat and readable. Shuffling algorithm looks reliable to me, however I have a few comments to your C# code.</p>

<ol>
<li>You pass the argument <code>numberOfTries</code> as <code>ulong</code> type, but <code>correctHits</code> and <code>wrongHits</code> are <code>int</code>. It could lead to wrong output if the <code>numberOfTries</code> is large enough to overflow <code>int.MaxValue</code>.</li>
<li>Variable doors are initialized in each loop. It could be initialized once in higher scope, e.g. before the <code>for</code> loop.</li>
<li><p>I can see repetetive code <code>doors[prizeIndex.Next(0, doors.Length)]</code>. This piece of code could be refactored to isolated method. For example:</p>

<p>private static int GetDoorNumber() =&gt; _doors[_prizeIndex.Next(0, _doors.Length)];</p></li>
<li><p>You can save couple of code lines introducing ternary operator. Then you do not need variable correctGuess.</p>

<p>correctHits += (selectedDoor == prizeDoor) ? 1 : 0;</p></li>
</ol>

<p>You can calculate <code>wrongHits</code> as a difference of numberOfTries and correctHits. But your solution works too.</p>
    </div>