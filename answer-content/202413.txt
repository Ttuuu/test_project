<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is not a template class at all, but sort of a wrapper for <code>file_exists()</code> function. It does nothing of the templating business but just gets you a filename.</p>

<p>To make it a template class, </p>

<ul>
<li>make it accept an array with all data used in the template</li>
<li>add a render() function that will extract data array into separate variables and then include the template file.</li>
<li>add some sort of auto-escaping feature (like going through the data array recursively and escaping all scalar values)</li>
<li>a possibility to return the rendered HTML instead of outputting it</li>
<li>add some facility to call a "master" template that will add the common site design to the certain page's template.</li>
</ul>

<p>So a usage example would be</p>

<pre><code>require_once 'Template.class.php';
$data = [
    'data' =&gt; $data,
    'results' =&gt; $results,
];
$template = new Template('path/to/template/file');
$template-&gt;render($data);
</code></pre>

<p>Quite off topic but consider a more tidy syntax for your template.</p>

<pre><code>      &lt;div class="wrapper"&gt;
        &lt;?php foreach($data as $row): ?&gt;
          &lt;span&gt;&lt;small class="text-uppercase"&gt;&lt;?= $row['h'] ?&gt;&lt;/small&gt;
          &lt;small&gt;&amp;nbsp;-&amp;nbsp;&lt;/small&gt;
          &lt;small class="text-uppercase"&gt;&lt;?= $row['a'] ?&gt;&lt;/small&gt;
          &lt;p&gt;&lt;?= $results[mt_rand(1,12)] ?&gt;&lt;/p&gt;&lt;/span&gt;
        &lt;?php endforeach ?&gt;
      &lt;/div&gt;
</code></pre>
    </div>