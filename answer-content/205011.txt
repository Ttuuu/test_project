<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>1) The <code>PlayerInput</code> method doesn't need to have a parameter as <code>userInput</code> is declared in a global scope.</p>

<p>2) Instead of having <code>flagNum</code> as an in, you should create an <code>enum</code> called something like <code>RoundWinner</code> and give it all possible ends for a round (Computer, Player, None).</p>

<p>3) In the <code>PlayerInput()</code> method you can shorten</p>

<pre><code>userInput = Console.ReadLine();
userInput = userInput.ToUpper();
return userInput;
</code></pre>

<p>to <code>return Console.ReadLine().ToUpper();</code>.</p>

<p>4) <code>isPlaying</code> is useless, instead you can change your while to <code>while(true)</code> and <code>break</code> where you were doing <code>isPlaying = false;</code>.</p>

<p>5) Same problem than in <code>3)</code> : in the <code>PlayGame()</code> method you can shorten</p>

<pre><code>string again = string.Empty;
again = Console.ReadLine();
again = again.ToUpper();
</code></pre>

<p>to <code>again = Console.ReadLine().ToUpper();</code>.</p>

<p>6) The <code>ShowResult()</code> method doesn't need to return an int.</p>

<p>7) You should also have an <code>enum</code> for rock scissors and paper which would be named like <code>Weapons</code> instead of comparing strings directly.</p>

<p>8) Same problem than <code>1)</code> : your <code>Match()</code> method doesn't need <code>userScore</code> and <code>comScore</code> arguments as they are declared in a global scope.</p>

<p>9) Same problem than <code>1)</code> and <code>8)</code> : your <code>SetRound()</code> method doesn't need <code>around</code> as argument as it is declared in a global scope.</p>
    </div>