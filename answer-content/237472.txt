<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You've got too much code.</p>

<p>First you filter out the zeros:</p>

<pre><code>xs = filter(lambda a: a != 0, xs)
</code></pre>

<p>Then you filter the positives to one list and the negatives to another:</p>

<pre><code>for num in xs:
    if num &gt; 0:
        positives.append(num)
    elif num &lt; 0:
        negatives.append(num)
</code></pre>

<p>So why bother with the first filtering?  Zeros would go into neither list in this loop; they're naturally filtered out.</p>

<p>You sort the <code>negatives</code> array unnecessarily.  You only need to do so if it contains an odd number of elements.  And you don't need to protect the test of whether it contains an odd number of elements with a check if it contains any elements at all.</p>

<p>No positive values and 1 negative value seems an odd special case.  If you let the code progress past that point, the single odd value would be pop'd out of the negative array, leaving no positive values and no negative values, which seems a less "special" special case.</p>

<p>Simplified code:</p>

<pre><code>def solution(xs):
    negatives = [num for num in xs if num &lt; 0]
    positives = [num for num in xs if num &gt; 0]

    if len(negatives) % 2 != 0:
        negatives.sort()
        negatives.pop()

    if positives or negatives:
        product = 1
        for x in positives + negatives:
            product *= x

        return str(product)

    return '0'
</code></pre>

<p>This should behave the same as your original code (complete with not passing some edge cases), but should be slightly faster.</p>

<hr>

<p>Do you really need to sort the <code>negatives</code> array?  That is an <span class="math-container">\$O(N \log N)\$</span> operation.  You just need to remove the smallest magnitude number from the array, and finding and removing that can be done in <span class="math-container">\$O(N)\$</span> time.</p>

<hr>

<h1>Edge Cases</h1>

<p>What is the maximum product of a non-empty subset of <code>[-4]</code>?</p>

<blockquote>
  <p>I've read that if there's only one negative number in the array, you should return 0, but I also read that you should return the negative value.</p>
</blockquote>

<p>Seems unreasonable to return zero in this case, because the only non empty subset is <code>[-4]</code>, and the maximum product is <code>-4</code>.</p>

<p>But what about <code>[-4, 0]</code>?  Both <code>0 &gt; -4</code> and <code>-4 * 0 &gt; -4</code>, so the maximum product is no longer <code>-4</code>.</p>

<p>Modification of the code left to student.</p>
    </div>