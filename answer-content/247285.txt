<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The solution is clear but seems too complicated for just sanitizing two URLs. Few suggestions:</p>
<ul>
<li>The test only covers the method <code>cleanUrls</code> and only the expected case. There should be <strong>at least</strong> one test for each public method with the expected input, plus other tests for edge cases.</li>
<li>Limit the interface of <code>SanitationService</code> by setting internal methods to <code>private</code>. For example <code>cleanDeal</code>.</li>
<li>The name <code>cleanUrls</code> is too general. The result is removing the query parameters from the URLs so a better name might be <code>stripUrlsParams</code>.</li>
</ul>
<p>My suggestion is to simplify <code>cleanApiKeys</code> like this:</p>
<pre><code>public List&lt;Deal&gt; cleanApiKeys(List&lt;Deal&gt; deals) {
    deals.stream().forEach(deal -&gt; {
        deal.stripUrlsParams();
    });
    return deals;
}
</code></pre>
<p>The class <code>Deal</code> will "deal" with its URLs:</p>
<pre class="lang-java prettyprint-override"><code>public class Deal{
    //...
    public void stripUrlsParams() {
        this.url = this.url == null ? null : url.split("\\?")[0];
        this.imageUrl = this.imageUrl == null ? null : imageUrl.split("\\?")[0];
    }
}
</code></pre>
<p>If for some reason you can't change <code>Deal</code> then add a private method in <code>SanitationService</code>.</p>
    </div>