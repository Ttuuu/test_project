<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I am still interested if anyone knows how to improve the speed of the JavaScript object approach, but I ended up <strong>searching the playlist text file with regex instead</strong>. It now runs in only a few seconds (without needing a background worker or anything): </p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="true">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var songInput = document.getElementById("songInput"),
	playlistInput = document.getElementById("playlistInput"),
	result = document.querySelector("textarea");

var songList, 
	playlistData;

function loadData(id, elem) {
	if(elem.files
	&amp;&amp; elem.files[0]) {
		let myFile = elem.files[0];
		let reader = new FileReader();
    
    	reader.addEventListener('load', function (e) {
    		if(id === "songInput")
    			songList = JSON.parse(e.target.result);

    		if(id === "playlistInput")
    			playlistData = e.target.result;

    		checkBothAdded();
    	});
    
    	reader.readAsBinaryString(myFile);
	}
}

function checkBothAdded() {
	if(songList
	&amp;&amp; playlistData) {
		getSongPlaylistData();
	}
}

/* Needed to escape song names that have (), [], etc. */
function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&amp;');
};

var songData = {};
function getSongPlaylistData() {
	for(let song of songList) {
		let playlistsItsIn = [];

        /* Use regex to search the playlist file for all instances,
           add the playlist name that it's in (if any) to an array. */
        let reg = new RegExp('"([^"]*?)":(?=[^\\]]+' + regexEscape(song) + ')', "g");
        let result;
        while((result = reg.exec(playlistData)) !== null) {
            playlistsItsIn.push(result[1]);
        }
        
        // Update our song data object
		songData[song] = playlistsItsIn;
	}

	result.value = JSON.stringify(songData, null, '\t');
}

songInput.addEventListener("change", function() {
	loadData("songInput", this);
});

playlistInput.addEventListener("change", function() {
	loadData("playlistInput", this);
});</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;p&gt;Please note that this will take a few seconds to run if you have a large amount of songs and playlists.&lt;/p&gt;
&lt;label&gt;Song text file (generated from &lt;a href="https://webapps.stackexchange.com/q/108103/140514"&gt;this answer&lt;/a&gt;): &lt;input type="file" id="songInput"&gt;&lt;/label&gt;
&lt;br&gt;
&lt;label&gt;Playlist text file (generated from &lt;a href="https://webapps.stackexchange.com/a/106604/140514"&gt;this answer&lt;/a&gt;): &lt;input type="file" id="playlistInput"&gt;&lt;/label&gt;
&lt;br&gt;
&lt;textarea style="width: 500px; height: 200px;"&gt;&lt;/textarea&gt;</code></pre>
</div>
</div>

    </div>