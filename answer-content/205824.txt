<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As you've asked if there's anything that can be done in a better way, here's my suggestion for your <code>type()</code> function:</p>

<pre><code>let type = (target, delay, text) =&gt; {
    if (text.length === 0) {
        return;
    }

    target.innerHTML += text[0];
    return setTimeout(() =&gt; type(target, delay, text.slice(1)),
        delay);
};
</code></pre>

<p>Rather than explicitly list the delay for each letter, I've created a function that accepts a DOM element, a delay time and a text string. On each call, it adds the first letter in the text string to the innerHTML of your target element and then calls itself recursively with a delay, having removed the first letter from the text argument. When there's no text left (i.e. <code>text.length === 0</code>) the function is done and can return.</p>

<p>I may not have explained it brilliantly but if you called it as:</p>

<pre><code>type(title, 250, 'To-do Application')
</code></pre>

<p>it should give you exactly the same result as your current code. It can then be reused with any DOM element, delay and text of your choosing should you wish to.</p>
    </div>