<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code does not run as it is shown there.</p>

<p>The problem, as mentioned in the comments, is that <code>int</code> <code>5</code> is not iterable.
<code>range(5)</code> is, which would perform the action five times.</p>

<p>Looking for</p>

<pre class="lang-py prettyprint-override"><code>if a not in l:
    l.append(a)
</code></pre>

<p>in each loop requires looking through that list each time.</p>

<p>Using sets instead, this operation is still required somewhere under the hood, but likely faster (implemented on a lower level).
We also no longer have to care for it.
In the case here, a <code>set</code> can be used like the <code>list</code>, with the added benefit that <code>set</code>s can only hold unique entries.
Since you care for the <em>different</em> values, and filter duplicates out manually with the code above, this is a step in the right direction.</p>

<p>Generally, comprehensions are faster than manual looping and appending in Python.
There are also set comprehensions.</p>

<p>One last issue I had was a <code>KeyError</code> for <code>"Origin"</code>.
However, <code>"Date"</code> was available in the response, so I used that for demonstration purposes:</p>

<pre class="lang-py prettyprint-override"><code>def get_google():
    return requests.get("https://google.com", allow_redirects=True)

dates = {get_google().headers["Date"] for _ in range(5)}

print(dates)
</code></pre>

<p>My machine took more than one second for the five tries, so the output was:</p>

<pre class="lang-py prettyprint-override"><code>{'Wed, 29 Apr 2020 15:43:12 GMT', 'Wed, 29 Apr 2020 15:43:13 GMT'}
</code></pre>

<p>Two unique/different date entries (<code>str</code>) from five requests.</p>

<p>If you want to build onto that, you can for example check if the response was <code>ok</code> (<code>200</code>) with the <code>ok</code> attribute of the <code>response.get()</code> object.</p>
    </div>