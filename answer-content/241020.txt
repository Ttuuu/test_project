<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Running but failed?</h2>

<pre><code>running = true;
return success;
</code></pre>

<p>In all cases you set <code>running</code> to true even if <code>success</code> is false. This seems like an odd decision. Also, you <code>init_snake</code> regardless of the success or failure of previous calls, which does not seem correct. You should be early-bailing in such circumstances.</p>

<h2>Main's early-return</h2>

<p>After this:</p>

<pre><code>if(!init())
    return -1;
</code></pre>

<p>your <code>else</code> is redundant and can be removed.</p>

<h2>Structural dereferencing</h2>

<p><code>(*e).type</code></p>

<p>should be</p>

<p><code>e-&gt;type</code></p>

<p>Similarly for <code>(*ptr).previous</code>, <code>(*new_tail)</code>, etc.</p>

<h2><code>const</code> arguments</h2>

<p>You do not modify <code>e</code> in <code>void handle_events(SDL_Event *e)</code>. As long as it does not cause callback pointer type incompatibility issues, consider making that argument <code>const SDL_Event *e</code>.</p>

<p>That aside: why are you passing in <code>e</code> at all? The way it is written now, <code>e</code> should just be a local variable.</p>

<h2>Non-exported functions</h2>

<p>For functions like <code>init</code> that are not intended for export to other translation units, mark them <code>static</code>. The same is true for any global variables that will not be referenced in other translation units.</p>
    </div>