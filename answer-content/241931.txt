<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Haven't tested if the code works. I've simply shortened the code that was given in the question.</p>

<p>In the code given in the question, there are variables x,x2,..x6 and y,...y6. These variables are all being used in a similar manner and a lot of code is redundant. </p>

<p>For instance lines like </p>

<pre><code>SelectObject(hdc, CreatePen(PS_SOLID, 1, RGB(255, 0, 0)));
SelectObject(hdc, CreateSolidBrush(RGB(255, 0, 0)));
Ellipse(hdc, sun_x - sun, sun_y - sun, sun_x + solar_size, sun_y + solar_size);
</code></pre>

<p>are constantly occurring in the code and differ only by some constants. So instead of using 6 variables, an array would be better. You could iterate through it and set the values one by one. Also, another array can be used to store the constant values that differ for each variable.</p>

<pre><code>#include &lt;Windows.h&gt;
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;

#define solar_size 20
#define PI 3.141592654
#define rad angle*180/PI

int angle;

double sun_x, sun_y, earth_x, earth_y;
double px, py;
double earth_speed = 0.05;
double x[6],y[6];

int main(void) {
    double sun;
    sun = sqrt(solar_size * 10);

    HWND hwnd = GetForegroundWindow();
    HDC hdc = GetWindowDC(hwnd);

    SelectObject(hdc, CreateSolidBrush(RGB(0, 0, 0)));
    Rectangle(hdc, 0, 0, GetSystemMetrics(SM_CXSCREEN), GetSystemMetrics(SM_CYSCREEN));

    TextOut(hdc, 250, 450, L"solar system Simulation", 23);
    sun_x = 300 ;
    sun_y = 240 ;

    SelectObject(hdc, CreatePen(PS_SOLID, 1, RGB(255, 0, 0)));
    SelectObject(hdc, CreateSolidBrush(RGB(255, 0, 0)));
    Ellipse(hdc, sun_x - sun, sun_y - sun, sun_x + solar_size, sun_y + solar_size);



    double speedCoefficients[] = {2.5, 1.5, 1, 0.6, 0.4, 0.15};
    int trignometricCoefficients[] = {30, 55, 85, 110, 140, 180};
    int ellipseCoefficients[]={8, 12, 12, 10, 17, 21};
    int r=[120, 100, 0, 120, 200, 255];
    int g=[120, 80, 50, 20, 80, 220];
    int b=[120, 0, 120, 0, 20, 0];

    while (1) {
        for (angle = 0;; angle++) {
            for(int i=0;i&lt;6;i++)
              {
                x[i] = trignometricCoefficients[i] * cos(angle * earth_speed * speedCoefficients[i]) + sun_x;
                y[i] = trignometricCoefficients[i] * sin(angle * earth_speed * speedCoefficients[i]) + sun_y;

                SelectObject(hdc, CreatePen(PS_SOLID, 3, RGB(r[i], g[i], b[i])));
                SelectObject(hdc, CreateSolidBrush(RGB(r[i], g[i], b[i])));
                Ellipse(hdc, x[i], y[i], x[i] + ellipseCoefficients[i], y[i] + ellipseCoefficients[i]);
              }

            Sleep(50);

            for(int i=0;i&lt;6;i++)
              {
                SelectObject(hdc, CreatePen(PS_SOLID, 3, RGB(0, 0, 0)));
                SelectObject(hdc, CreateSolidBrush(RGB(0, 0, 0)));
                Ellipse(hdc, x[i], y[i], x[i] + ellipseCoefficients[i], y[i] + ellipseCoefficients[i]);
              }

            }
        }

    }
</code></pre>
    </div>