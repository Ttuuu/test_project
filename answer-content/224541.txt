<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, it's not much of a mystery.  Your code is simple and pretty. <a href="https://github.com/assimp/assimp/blob/57c46db04256671878b0b87b18a88645ee448fa1/code/STL/STLLoader.cpp#L326-L344" rel="noreferrer">Their code</a> is ugly because it performs exactly what it needs to do, and no more:</p>

<blockquote>
<pre><code>} else if (!strncmp(sz,"vertex",6) &amp;&amp; ::IsSpaceOrNewLine(*(sz+6))) { // vertex 1.50000 1.50000 0.00000
    if (faceVertexCounter &gt;= 3) {
        ASSIMP_LOG_ERROR("STL: a facet with more than 3 vertices has been found");
        ++sz;
    } else {
        if (sz[6] == '\0') {
            throw DeadlyImportError("STL: unexpected EOF while parsing facet");
        }
        sz += 7;
        SkipSpaces(&amp;sz);
        positionBuffer.push_back(aiVector3D());
        aiVector3D* vn = &amp;positionBuffer.back();
        sz = fast_atoreal_move&lt;ai_real&gt;(sz, (ai_real&amp;)vn-&gt;x );
        SkipSpaces(&amp;sz);
        sz = fast_atoreal_move&lt;ai_real&gt;(sz, (ai_real&amp;)vn-&gt;y );
        SkipSpaces(&amp;sz);
        sz = fast_atoreal_move&lt;ai_real&gt;(sz, (ai_real&amp;)vn-&gt;z );
        faceVertexCounter++;
    }
</code></pre>
</blockquote>

<p>A few differences in the amount of work it does:</p>

<ul>
<li>There's no regex that needs to be compiled.</li>
<li>It's not splitting tokens into a list.  So, no list needs to be allocated and filled.  More importantly, no strings need to be allocated, copied, and destroyed.</li>
<li>The <code>aiVector3D</code> is allocated first, then each of the three numbers is parsed and written directly into the memory location of the coordinate, with no temporary variable assignments.</li>
</ul>

<p>I'll also point out that your use of <code>assert</code> is improper.  You should only assert conditions that you <em>know must be true</em> due to logic.  You should not assert conditions that you <em>hope to be true</em> about the input.  If you compile with assertions disabled, then the validation code goes away!  That would introduce a bug, and possibly a security vulnerability.</p>
    </div>