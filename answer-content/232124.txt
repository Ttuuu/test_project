<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Using the Intersect method to trim off cells not in the Worksheet's UsedRange will greatly improve performance.</p>

<pre><code> Function SumRange(Target As Range) As Double
    Dim result As Double
    Dim Cell As Range
    Set Target = Intersect(Target.Parent.UsedRange, Target)
    If Not Target Is Nothing Then
        For Each Cell In Target.Cells
            result = result + Cell.Value
        Next
    End If
    SumRange = result
End Function
</code></pre>

<p>For maximum performance you should trim the target range and then load the values into an array.</p>

<pre><code>Function SumRange(Target As Range) As Double
    Dim result As Double
    Dim values As Variant
    Dim item As Variant
    Set Target = Intersect(Target.Parent.UsedRange, Target)
    If Not Target Is Nothing Then
        values = Target.Value
        For Each item In values
            result = result + item
        Next
    End If
    SumRange = result
End Function
</code></pre>

<p>It is a best practice <code>Option Explicit</code> to the top of the code module to ensure that you declare all your variables.   This will help the compiler catch syntax and datatype errors.</p>

<p>Avoid using underscores in you method names as the VBA uses them to indicate events.</p>
    </div>