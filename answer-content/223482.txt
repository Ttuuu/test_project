<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>While I agree with <a href="https://codereview.stackexchange.com/a/223461/98493">the other answer</a> that you should not return a special string denoting failure, in Python you should refrain from returning <em>any</em> special return value (though if you do, <code>None</code> is an OK choice).</p>

<p>Instead you usually want to raise an informative exception, which can then be handled by the caller. Here the code already raises a <code>KeyError</code>, which you could keep, or you could add a custom exception.</p>

<pre><code>def decode(self, tiny_url):
    """Returns the full address associated with the given tiny url.
    Raises a `KeyError` in the event of an invalid `tiny_url`. """
    return self.urls[tiny_url]

...

try:
    decoded = t.decode(encoded)
except KeyError:
    print("Invalid")
print(decoded)
</code></pre>

<p>Note that I also changed the name of <code>TinyURL.storedURLS</code> in order to conform to Python's official style-guide, <a href="https://www.python.org/dev/peps/pep-0008/" rel="noreferrer">PEP8</a>, which recommends using <code>lower_case</code> as variable and function names.</p>
    </div>