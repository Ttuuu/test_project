<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't know anything about CodeClimate or how it determines complexity, but this is the likely culprit right here:</p>

<pre><code>return (
    40
    + (appearance.outfit.head ? 2 : 1)
    + (appearance.outfit.cape ? 2 : 1)
    + (appearance.outfit.amulet ? 2 : 1)
    + (appearance.outfit.weapon ? 2 : 1)
    + (appearance.outfit.shield ? 2 : 1)
    + (appearance.outfit.head ? 2 : 1)
    + (headObscured ? 2 : 4)
);
</code></pre>

<p>This is pretty hard to read and understand at a glance, and all of the ternary operators certainly don't help. Without knowing more about your object it is hard to review, but to me it would make more sense to have a method like this on your <code>outfit</code> object</p>

<pre><code>function getSlotSize(slot) {
    let size = 0;
    if (this.slots.includes(slot)) {
        size = slotIsEmpty(slot) ? 2 : 1;
        if (slot === "head") {
            size += 2 * isCoveringHead(this.head);
        }
    }

    return size;
}

function slotIsEmpty(slot) {
    return this.[slot] === null || this.[slot] === undefined;
}
</code></pre>

<p>Now you've separated out your logic for determining the size of everything instead of having to jam it into one function.</p>

<p>An even better approach may be to OOP this, and create objects representing a slot (or a specific kind of slot) and then each one should have a <code>getSize</code> method. Without knowing more about your code it is hard to say whether or not that would be overkill.</p>
    </div>