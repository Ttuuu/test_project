<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Is there a better way? Plainly speaking, not so much.</p>

<p>The thing is, <em>you</em> decide what is the content of the array and the clearest way of doing so is how you did it. We could do something like this : </p>

<pre><code>//I put x,y because I didn't count the row/column sizes
public static int[][] spawnWorld = new int[x][y];

Array.fill(spawnWorld, 14);

//Those are random indices
spawnWorld[14][10] = 1;
spawnWorld[15][10] = 1;
spawnWorld[16][10] = 1;
//etc..
</code></pre>

<p>Does that look better? Hell no. At least with your current format, you can see the patterns.</p>

<p>So what can we do?</p>

<p>I think your best bet is to not store the maps in the code. Imagine you wanted to change a map at some point, you would need to recompile your code! That seems overkill. The best solution would be to have separate (text?) files that contains the map. For example : </p>

<p><strong>map1.map</strong></p>

<pre><code>14,14,14,14,14,14,14,14,14,14
14,14,14,1,14,14,14,14,14,14
14,14,14,1,14,14,14,14,14,14
14,14,14,1,14,14,14,14,14,14
14,14,14,1,14,14,14,14,14,14
14,14,14,1,14,14,14,14,14,14
</code></pre>

<p>And to load the said map file in your code and put it in an array.</p>

<p>Also, you might want to consider writing a small form application to create the maps and save them to the <code>.map</code> format (I've used <code>.map</code>, but it could be whatever you want). That way you could make your map easily without having to write a bunch of 14s and 1s everywhere.</p>
    </div>