<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Updating my comments on current implementation, Thanks @Mast for pointing out.</p>

<ol>
<li>You have used <code>let</code> for <code>output</code>, <code>targetIndex</code> and <code>title</code>. None of
them never updated. <code>const</code> is better suitable here. </li>
<li>Usage of <code>value.title.indexOf('_')</code> is repeated. you can use variable.</li>
<li>You can avoid <code>substring</code> usage because you are already did <code>value.title.split('_')</code> and you can use index 1 value from result
    array.</li>
</ol>

<p>Apart from these minor points, <code>code looks good to me</code>.</p>

<p>As you asked, Here is alternative ES6 implementation.</p>

<ol>
<li>Use arrow function</li>
<li>With <code>reduce</code> and using destructure in input function arguments and have the default value for <code>title</code>.</li>
<li>In reduce function use destucture to get the values from <code>split</code> result.</li>
</ol>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const data = [{"title": "100_baz"}, {"title": "01_foo"}, {"title": "05_bar"}];

const indexSort = data =&gt; data.reduce((acc, {title = ''}) =&gt; {
  const [num, value] = title.split('_');
  acc[Number(num)] = value;
  return acc;
}, []);

console.log(indexSort(data));</code></pre>
</div>
</div>

    </div>