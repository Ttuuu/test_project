<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In several places, where you could have (and I think <em>should</em> have) used a simple <code>for</code> statement, for example, <code>for (int index = 1; index &lt; length_of_source; ++index)</code>,
you instead wrote a <code>do</code> statement that scatters the logic of the loop control and 
makes the program more difficult to understand.</p>

<p>On a different note, do <em>not</em> reseed the <code>rand</code> function (at least not unless you <em>really</em> know what you are doing)! It may <em>look</em> like you get something more completely random
by taking <code>srand(time(0))</code>, but how do you know that <code>time(0)</code> has changed between one
loop and the next? If it doesn't change, you are repeating the same set of "random"
numbers (which now aren't so random). On the other hand, if you call <code>srand(time(0))</code>
<em>once</em> and then never touch it again, you are guaranteed to have a pseudo-random
sequence with as good "random" properties as your math library can deliver,
which are almost certainly more "random" than anything you can design.</p>

<p><strong>Addendum:</strong> As requested, one more recommendation.
During a run that actually sorts or "scrambles" a file,
the program will call <code>getContent(myFile)</code> twice and <code>getLength(myFile)</code> once.
Each of these three function calls opens the file, reads its entire contents, 
and closes it.
Since you will end up doing the bulk of your program's work on a stored copy of
the file, I would read the file into memory <em>once</em> and then perform the remaining
actions (including informational printouts) on the same stored copy of the file.</p>

<p>Others have offered excellent recommendations; I leave them out of this answer 
mainly because they have been well expressed elsewhere (and partly so as not to
appear to take credit for them).</p>
    </div>