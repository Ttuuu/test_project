<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I've got little to add to <a href="https://codereview.stackexchange.com/a/133488">Martin Yorks great answer</a>.</p>

<p>I also think the loop approach is the better one, since it limits the amout of memory used for bigger files.</p>

<p>However, I found a little mistake in the answer: Since a while loop is used and the <code>read</code> method of the stream returns a reference to the stream, the condition <a href="https://en.cppreference.com/w/cpp/io/basic_ios/operator_bool" rel="nofollow noreferrer">evaluates to <code>false</code> if the end of the file has been reached</a>. Thus, the last block ist not used in the CRC calculation.</p>

<p>I therefore propose the following solution which is also closer to the <a href="https://www.boost.org/doc/libs/1_68_0/libs/crc/crc_example.cpp" rel="nofollow noreferrer">example provided with the library</a>:</p>

<pre><code>boost::crc_32_type crc;
std::vector&lt;char&gt; buffer(4096);
std::ifstream stream(fp, std::ios::in|std::ios::binary);
if(!stream) throw std::ifstream::failure("Could not open file for CRC calculation: " + fp);
do {
    stream.read(&amp;buffer[0], buffer.size());
    size_t byte_cnt = static_cast&lt;size_t&gt;(stream.gcount());
    crc.process_bytes(&amp;buffer[0], byte_cnt);
} while(stream);
return crc.checksum();
</code></pre>

<p>As you can see I also added an exception in case of file opening errors which should of course be caught somewhere.</p>

<p>I checked the result against the CRC functionality in 7-Zip, and now it finally matches :)</p>
    </div>