<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <ol>
  <li>In this line i don't want to write the actual details,i want that to be hidden from my script.How can i do that? ftp = FTP('server.com','user_name','password')</li>
  </ol>
</blockquote>

<p>You may want to declare constants, either at the beginning of your file or in a <code>Credentials</code> class that would be used as an enum:</p>

<pre><code>SERVER = 'server.com'
USER_NAME = 'Linu'
PASSWORD = 'CR.SEisGreat'

ftp = FTP(SERVER, USER_NAME, PASSWORD)
</code></pre>

<p>You may also want to encrypt your password, with <code>base64</code> or something alike. Storing passwords in files isn't a good idea anyway, so if you're using this file as a script you're going to call via bash or something alike, I would use a <a href="https://docs.python.org/3.3/library/argparse.html" rel="nofollow noreferrer">placeholder</a> like <code>argparse</code> that would prompt your password when calling the script: </p>

<pre><code>parser = argparse.ArgumentParser(description='Reading a file from a distant FTP server.')
parser.add_argument('--passwd', dest='password', type=str,
                   help='password required for FTP connection')
</code></pre>

<blockquote>
  <ol start="2">
  <li>The script downloads the file to my local system and process it as it
  is a local file, Is there anyway too read and process it without
  downloading it to the source server(there might be permission issues
  also)?</li>
  </ol>
</blockquote>

<p>I don't know much about FTP manipulation with Python so I'm not sure there is a way to read a file without having to download it.</p>

<blockquote>
  <ol start="3">
  <li>If there is no way rather than downloading it to the source, shall I
  able to mention specific path where this file would be downloaded
  rather than the way i have written?</li>
  </ol>
</blockquote>

<p>Again, you may place the path into a class constant (or in a separate class):</p>

<pre><code>FILE_PATH='''/path/to/file/''' 
</code></pre>

<blockquote>
  <ol start="4">
  <li>Is there anything which i can do to improve this code?</li>
  </ol>
</blockquote>

<h2>Imports</h2>

<pre><code>import psycopg2
import time
import os
</code></pre>

<p>I would edit this to import only the parts you need, e.g. </p>

<pre><code>from psycopg2 import connect, sql 
from time import perf_counter
</code></pre>

<p>There is no need to import the whole module if you only use a couple of functions, so whenever you can, I'd suggest you only import what you will actually use. </p>

<hr>

<h2>Raising exceptions</h2>

<pre><code>try:
    # ...
except:
    print ("Error")
</code></pre>

<p>I would raise an exception here, since it's a undesired behaviour:</p>

<pre><code> try:
    # ...
except Exception as e:
    print ("Error: {}".format(e))
</code></pre>

<p>You may want to do the same with your psycopg and FTP errors, I see you catch them but don't read their value. It may provide a more helpful message than the prints, which just indicate you encountered an error but don't tell more about what actually happened.</p>

<h2>SQL placeholders</h2>

<pre><code>SQL="""DROP TABLE IF EXISTS """+  table + """;CREATE TABLE IF NOT EXISTS """+ table + """
(created_date TEXT, product_sku TEXT, previous_stock TEXT, current_stock TEXT );"""
</code></pre>

<p>Should you want to make your code more generic, you could transform the above mentioned statement into:</p>

<pre><code>sql.SQL="""DROP TABLE IF EXISTS {table_name} ; CREATE TABLE IF NOT EXISTS {table_name}
 (created_date TEXT, product_sku TEXT, previous_stock TEXT, 
 current_stock TEXT );""".format(
    table_name = sql.Literal(table)
)
</code></pre>

<p>That way you may reuse the query on other tables. You may do the same on the table attributes, i.e. </p>

<pre><code>keys = ['created_date', 'product_sku', 'previous_stock', 'current_stock']
sql.SQL("""CREATE TABLE IF NOT EXISTS {} ({});""").format(
    sql.Identifier(table),
    sql.SQL('{} TEXT,').join(map(sql.Identifier, keys))
)
</code></pre>

<p>It alleviates the query and makes it more generic and reusable. By the way, I don't think you need to add <code>IF NOT EXISTS</code> after <code>CREATE</code> since you already deleted the table in the first part of your query.</p>
    </div>