<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>def fileparser_worker(filename, start, end, c):
    with open(filename) as inFile, open(outName + str(c),'w') as outFile:
            inFile.seek(start)
            #lines = inFile.readlines(end-start)
</code></pre>

<p>because <code>readlines</code> calls <code>readline</code> multiple times it can be replaced with
<code>read</code>.  </p>

<p>If the text should be split by newline and each split line should be splitted by a tab character, there are two ways to do it depending on the input text.  </p>

<pre><code>    for title in (line.split('\t') for line inFile.read(end-start).splitlines()):  
</code></pre>

<p>Here <code>title</code> is list of strings.  </p>

<p>Another one is to call <code>str.split()</code> or <code>str.split(None)</code> in which case the string is split by white spaces (space, tab or newline), this is best if it's ok to split by space character or the text has no space character.</p>

<pre><code>    for title in inFile.read(end-start).split():  
</code></pre>

<p>Here the <code>title</code> is string.  </p>

<p>If the <code>read().split()</code> becomes a memory hog, I think a generator will give
better result.  </p>

<pre><code>    #def get_title():
    #   yield next((line.split('\t') for line inFile.read(end-start).splitlines()))

    for title in (line.split('\t') for line inFile.read(end-start).splitlines()):  
        try:
            keywords = rake.execute_rake(title[2])
        except:
            print('Index out of bound error due to NULL Values')
            continue
</code></pre>

<p>If we could build a sequence of strings out of <code>keywords</code> we can call
<code>writelines</code> straight.  </p>

<pre><code>        else:
            outFile.writelines((keyword[0] + '\n' for keyword in keywords))
</code></pre>

<p>~            </p>
    </div>