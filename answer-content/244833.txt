<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>On PowerShell v6+, I would do the following:</p>
<pre><code>$String = $Fragment1, $Fragment2 |
    Where-Object { -not [System.String]::IsNullOrWhiteSpace($_) } |
    Join-String -Separator $Separator
</code></pre>
<p>You could use <code>[System.String]::IsNullOrEmpty()</code> instead of <code>[System.String]::IsNullOrWhiteSpace()</code>, but I find <code>[System.String]::IsNullOrWhiteSpace()</code> to be the desired functionality in almost all cases.</p>
<p>On Windows PowerShell (versions prior to v6), the <code>Join-String</code> command doesn't exist. There I would use:</p>
<pre><code>$String = ($Fragment1, $Fragment2 |
    Where-Object { -not [System.String]::IsNullOrWhiteSpace($_) }) -join $Separator
</code></pre>
<p>The <code>@().Where({ ... })</code> method is fairly obscure, so I tend to avoid it.</p>
<blockquote>
<p>it may not be clear to everybody what the semantics of <code>$_</code> are.</p>
</blockquote>
<p>I'm not sure it's valuable to consider this possibility. Simply put, if your reader doesn't understand the semantics of <code>$_</code>, then they cannot read PowerShell. It's a ubiquitous and pervasive variable both in practice and in design.</p>
    </div>