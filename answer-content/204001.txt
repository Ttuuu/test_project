<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Redundant Code at the end of <code>regenProductCache()</code></h3>

<p>The following code appears at the end of that function:</p>

<blockquote>
<pre><code>if(cache.get("product")!=null||cache.get("tabEncountered")!=null){
    cache.remove("product");
    cache.remove("tabEncountered");
    cache.put("tabEncountered",JSON.stringify(tabEncountered));
    cache.put("product",JSON.stringify(product));
}else{
    cache.remove("product");
    cache.remove("tabEncountered");
    cache.put("tabEncountered",JSON.stringify(tabEncountered));
    cache.put("product",JSON.stringify(product));
}
</code></pre>
</blockquote>

<p>However in both cases, the code blocks appear to be identical, which makes the conditional lines (i.e. <code>if</code> and <code>else</code>) pointless. That code can be simplified to just four lines:</p>

<pre><code>cache.remove("product");
cache.remove("tabEncountered");
cache.put("tabEncountered",JSON.stringify(tabEncountered));
cache.put("product",JSON.stringify(product));
</code></pre>

<h3>function <code>ordinateProductTabs()</code></h3>

<blockquote>
<pre><code>var productOrdinated = new Array();
for(var i=0;i&lt;product.length;i++){
  var count=product[i].length;
  productOrdinated.push(new Array(count));
  while(count&lt;49){
    product[i].push(null);
    productOrdinated[i].push(null)
    count++;
  }
</code></pre>
</blockquote>

<p>I haven't tried this but you could explore using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill" rel="nofollow noreferrer"><code>Array.prototype.fill()</code></a> instead of the <code>while</code> loop. Something like:</p>

<pre><code>var productOrdinated = new Array();
for(var i=0;i&lt;product.length;i++){
  var count=product[i].length;
  productOrdinated.push(new Array(count));
  product[i].fill(null, count, 49);
  productOrdinated[i].fill(null, count, 49);
</code></pre>

<p>Do you want the new arrays pushed into <code>productOrdinated</code> to initially be filled with <code>null</code>, or <code>undefined</code> for the first <code>count</code> elements and then <code>null</code> from <code>count</code> to 49? If you want all elements to be <code>null</code> then you could just add a new array filled with <code>null</code></p>

<pre><code>productOrdinated.push(new Array(count).fill(null));
product[i].fill(null, count, 49);
</code></pre>

<h3>Switch statements</h3>

<p>Instead of using the large <code>switch</code> statements in the HTML file, consider defining a mapping, perhaps defined just after <code>cache</code> is defined at the top of the page: </p>

<pre><code>var colorMapping = {
    'N': "tblack",
    'W': "twhite",
    'R': "tred",
    'V': "tgreen",
    'J': "tyellow",
    'B': "tblue"
};
</code></pre>

<p>Then use that value to assign to <code>textc</code> inside the loop:</p>

<pre><code>var key = product[Number(cache.get("inProductTypeTab"))+1][i*5 + j][10];
var textc = ""; //default value - change accordingly.
if (key in colorMapping) {
    textc = colorMapping[key];
}
</code></pre>

<p>And similarly for the other large <code>switch</code> statement.</p>

<h3>jQuery click handler</h3>

<p>You have this in the click handler:</p>

<blockquote>
<pre><code>window.onclick = function(event) {
  if (!event.target.matches('.dropbtn')) {
    var dropdowns = document.getElementsByClassName("dropdown-content");
    var i;
    for (i = 0; i &lt; dropdowns.length; i++) {
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
  }
}
</code></pre>
</blockquote>

<p>But since you are using jQuery, you can shorten this using a selector that combines the classes to select (i.e. <code>".dropdown-content.show"</code>) and the jQuery method <a href="http://api.jquery.com/removeClass" rel="nofollow noreferrer"><code>.removeClass()</code></a>.</p>

<pre><code>window.onclick = function(event) {
  if (!event.target.matches('.dropbtn')) {
    $(".dropdown-content.show").removeClass('show');
  }
}
</code></pre>
    </div>