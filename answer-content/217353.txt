<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your solution only works if there's exactly 3 trips. After you find the first trip, put it at the front of the array and then find each subsequent one but instead of using a <code>for</code> loop like you're doing there are other ways to find the next trip like using <code>Array.map()</code> or <code>Array.filter()</code>. </p>

<p>Here's one way to sort it in place and can handle any number of trips greater than 1.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function sortByLinked(trips, origin = 'JFK') {

  // this will be useful
  function swap(array, index1, index2){
    let temp = array[index1];
    array[index1] = array[index2];
    array[index2] = temp;
  }

  // find first one
  let first = trips.filter(trip =&gt; trip.from === origin)[0];

  // put him in the front of the list
  swap(trips, trips.map(trip =&gt; trip.from).indexOf(first.from), 0);

  // sort it in place
  for(let i=1; i&lt;trips.length; i++){
    swap(trips, i, trips.map(trip =&gt; trip.from).indexOf(trips[i-1].to));
  }
}</code></pre>
</div>
</div>

    </div>