<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you donâ€™t expect to be further subclassing <code>MyInterval</code>, you could just use a helper method for construction.</p>

<pre><code>class MyInterval(Period):

    @classmethod
    def create(cls, start, end, inclusive=True, **kwargs):
        start = _toDate(start)
        end = _toDate(end)

        if inclusive:
            end = end.add(days=1)

        return cls(start, end, **kwargs)
</code></pre>

<p>Alternatively, you could use a helper method to avoid the duplicated code (but not duplicated execution).</p>

<pre><code>class MyInterval(Period):

    @staticmethod
    def _fixup(start, end, inclusive):
        start = _toDate(start)
        end = _toDate(end)

        if inclusive:
            end = end.add(days=1)

        return start, end

    def __new__(cls, start, end, inclusive=True, **kwargs):
        start, end = cls._fixup(start, end, inclusive)
        return super().__new__(start, end, **kwargs)

    def __init__(self, start, end, inclusive=True, **kwargs):
        start, end = self._fixup(start, end, inclusive)
        return super().__init__(start, end, **kwargs)
</code></pre>
    </div>