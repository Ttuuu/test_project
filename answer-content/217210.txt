<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <a href="https://codereview.stackexchange.com/a/217177/92478">answer of AJNeufeld</a> already has a lot of absolutely great advice you should definitely follow.</p>

<p>Another thing that I previously commented on under his answer is that you should not use <code>if bool_value == True:</code> or <code>if bool_value == False:</code>. Instead use <code>if bool_value:</code> and <code>if not bool_value:</code>.</p>

<p>If you follow this advice, and your <code>if</code> statements don't "read" well, maybe think about how a <strong>better names for your variables can improve clarity and readability</strong>. I would say a prime example for this would be <code>defxworking</code>. Even after staring at your code for some time I'm still not sure why the variable is named like this. Another instance would be <code>percentt</code>. At first glance I thought about a typo, but later realized that it's probably because of <code>def percent():</code>. I think both, the function (soon to be method if you follow the other review) and the variable could have more telling names.</p>

<p>Since you have already mentioned that you plan to document your code, I invite you to have a read into the "official" <a href="https://www.python.org/dev/peps/pep-0008" rel="nofollow noreferrer">Style Guide for Python Code</a> - section <a href="https://www.python.org/dev/peps/pep-0008/#documentation-strings" rel="nofollow noreferrer">"Documentation Strings"</a> (or <a href="https://www.python.org/dev/peps/pep-0257/#specification" rel="nofollow noreferrer">this</a> for further reading).<br>
To sum it up shortly: you're encouraged to document every function with a short docstring, wrapped in <code>"""..."""</code>, immediately following the <code>def method_name(your, args)</code>. For example:</p>

<pre class="lang-py prettyprint-override"><code>def math_pressed(math):
    """Handle presses of math operator buttons"""
</code></pre>

<p>Following this convention will help Python's built-in <code>help(...)</code> function and also Python IDEs like PyCharm to pick-up your documentation. Future-you will also be greatful, especially if code gets more complex and spread out over multiple files.</p>
    </div>