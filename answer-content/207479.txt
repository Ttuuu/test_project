<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This solution seems overly complex.  If I'm understanding it correctly you just want to substitute a value type for a reference type to lock on.  </p>

<pre><code>public class LockMapper&lt;T&gt;
{
    private static readonly ConcurrentDictionary&lt;T, object&gt; _lockTable = new ConcurrentDictionary&lt;T, object&gt;();

    public static object GetSyncRoot(T valueToLockOn)
    {
        return _lockTable.GetOrAdd(valueToLockOn, _ =&gt; new object());
    }
}
</code></pre>

<p>Then in your code you can just do the following standard C# lock pattern.</p>

<pre><code>lock (LockMapper&lt;Guid&gt;.GetSyncRoot(anObjectId))
{
    // do something
}
</code></pre>
    </div>