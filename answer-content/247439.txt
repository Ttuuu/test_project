<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>#nullable enable

namespace Examples {

    using System;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.Linq;
    using System.Reflection;

    public class Program {

        public static void Main( String[] args ) {
            var theme = new Theme();

            var valid = theme.IsValid( out var invalidPropertyNames );

            if ( valid ) {
                Debug.WriteLine( $"All properties on {nameof( theme )} are valid." );
            }
            else {
                foreach ( var name in invalidPropertyNames ) {
                    Debug.WriteLine( $"Found invalid property {name}." );
                }
            }
        }

    }

    public class Theme {

        /// &lt;summary&gt;
        ///     Cache the reflection once.
        /// &lt;/summary&gt;
        private static readonly PropertyInfo[] _properties = typeof( Theme ).GetProperties( BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public );

        private Int32? Test1 { get; } = 1;
        private Int32? Test2 { get; } = null;
        private Int32? Test3 { get; } = 3;

        /// &lt;summary&gt;
        ///     Run a check to see if all properties are valid (not null).
        /// &lt;/summary&gt;
        /// &lt;returns&gt;Returns true if all properties do not have a  null value.&lt;/returns&gt;
        public Boolean IsValid() =&gt; this.IsValid( out _ );

        /// &lt;summary&gt;
        ///     Output a list of any invalid (null) properties.
        /// &lt;/summary&gt;
        /// &lt;param name="InvalidPropertyNames"&gt;&lt;/param&gt;
        /// &lt;returns&gt;Returns true if all properties do not have a  null value.&lt;/returns&gt;
        public Boolean IsValid( out IList&lt;String&gt; InvalidPropertyNames ) {
            InvalidPropertyNames = _properties.Where( info =&gt; info.GetValue( this, null ) == null ).Select( info =&gt; info.Name ).ToList();

            return !InvalidPropertyNames.Any();
        }

    }

}
</code></pre>
    </div>