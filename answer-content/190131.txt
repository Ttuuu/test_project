<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>About your choice of using Jaxb, Jaxb is a powerfull framework to serialize and deserialize Xml to Objects. However, you need to have the whole graph of objects in memory to generate the Xml and that may affect your performances.</p>

<p>For your <code>Rectangle</code> class. There is those two methods, <code>calculateArea():double</code> and <code>setArea():void</code> they do more or less the same but the second one in really strange. First, because usually, a setter expect a parameter. Second, because you have to call it on all kind of shape to have it completely initialized. this is usually a job for the constructor. And you expose the area via a <code>getArea():double</code> that either compute it on each call or return the value precomputed by your constructor (and each time one value change)</p>

<p>The <code>distance</code> method in your main cast all objects while it is unnecessary:
<code>((Circle) o).getXCoordinate();</code> will return the same result as <code>o.getXCoordinate();</code>.</p>

<p>You can also avoid casting in your <code>static</code> block if you declare the correct type for your variable. <code>Circle c = new Circle()</code>.</p>

<p>If you want to remove the shapes with the same area, you can use a <code>Set</code> with a comparator on the area. It will only keep one. The same apply for your sorting.</p>

<p>Finally, in your main method you catch all Exception and rethrow a custom one without reusing the original. By doing that you loose the whole stack trace. It is not a problem in your case but can be when you have a deep structure. </p>
    </div>