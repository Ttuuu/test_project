<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The technique you are looking for is a <a href="https://en.wikipedia.org/wiki/Dispatch_table#JavaScript_implementation" rel="nofollow noreferrer">dispatch table</a>.  You're only dispatching regular expressions, so the table doesn't need to have functions in it at all.</p>

<p>Collect the validating regexes and their corresponding error messages into a data structure.  Use HTML classes on the input fields to select which checks apply to each field.</p>

<p>Include the field name (or some other descriptive property) in the error message.</p>

<p>Attach the <code>onsubmit</code> handler in your code, not in the HTML, so that the page still works even if the JavaScript doesn't get loaded.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const validations = {
    number:     [ /^\d*$/,          "Please only use numbers!" ],
    some:       [ /./,              "Please do not leave this blank!"  ],
    words:      [ /^[a-zA-Z ]*$/,   "Please only use letters and spaces!"  ],
    concise:    [ /^.{0.50}$/,      "Maximum of 50 characters allowed!"  ],
    price:      [ /^[+-]?\d{1,3}\.?\d{0,2}$/, "Only 0-9 and . are allowed!" ],
    year:       [ /^\d{1,4}$/,      "Please enter a valid year!" ]
}

function ValidateMovSearch(submitted) {
    var valid=true;
    const fields=Array.from( submitted.target.querySelectorAll("input") );   
    
    fields.forEach( field =&gt; {
        const checks=Array.from( field.classList )
            .filter( checkname =&gt; validations.hasOwnProperty(checkname) )          
            .map( checkname =&gt; validations[checkname] );
        
        field.value=field.value.trim();        

        checks.forEach( check =&gt; {
            const regex=check[0], 
                  message=check[1];
            // check if valid-so-far, to limit number of alerts
            if (valid &amp;&amp; !regex.test( field.value )) { 
                alert(field.name + ": " + message); 
                field.focus();
                valid=false; 
            }
        });
    });
    return valid;
}
document.movInsert.onsubmit=ValidateMovSearch;</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;form name="movInsert"&gt;
    Actor ID:&lt;br&gt;    &lt;input type="text" name="Actor ID" class="some number"&gt;
&lt;br&gt;Movie Title:&lt;br&gt; &lt;input type="text" name="Movie Title" class="some concise words"&gt;
&lt;br&gt;Movie Price:&lt;br&gt; &lt;input type="text" name="Movie Price" class="some price"&gt;
&lt;br&gt;Movie Year:&lt;br&gt;  &lt;input type="text" name="Movie Year" class="some year"&gt;
&lt;br&gt;Movie Genre:&lt;br&gt; &lt;input type="text" name="Movie Genre" class="some concise words"&gt;
&lt;br&gt;&lt;input type = "submit" value = "Insert"&gt;
&lt;/form&gt;</code></pre>
</div>
</div>

    </div>