<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your algorithm is ok, there are only a few minor hints for improvement:</p>

<p>You're using <code>double</code>-typed variables. Although in your case the computations will be exact up to fairly large numbers, it's generally safer to use <code>int</code> or <code>long</code> if you don't need the fractional part.</p>

<p>Two of your variable names begin with an upper-case letter (<code>Binary</code> and <code>TempHold</code>). That's unusual for Java code, as the vast majority of programs follows the naming conventions, so much that I find it irritating to read non-conforming code.</p>

<p>Your variable <code>power</code> has a name that confused me first. I'd call it <code>exponent</code> (in mathematics, "power" is the result of exponentiation). And I'd rename <code>TempHold</code> to <code>digitChar</code> and <code>num</code> to <code>digitVal</code>.</p>

<p><code>Math.pow()</code> isn't really fast, so I recommend a different approach. With every iteration, the power grows by a factor of two, so I'd use something like <code>power = power * 2;</code> inside the loop.</p>

<p>For production code, you should separate input/output from computation, e.g. by putting the conversion part into a method of its own.</p>

<p>It's good style to close Scanners when they are finished (although that will eventually be done by Java's garbage collector if you don't do it explicitly).</p>

<p>So, my version of your program would be:</p>

<pre><code>import java.util.Scanner;

public class BinaryToDecimal {

    public static void main(String[] args) {
        Scanner scan1 = new Scanner(System.in);
        System.out.println("Enter a binary number: ");
        String binary = scan1.next(); // 11011

        String decimal = toDecimal(binary);

        System.out.println(decimal + "(10)");
        scan1.close();
    }

    public static String toDecimal(String binary) {
        long power = 1;
        long sum = 0;

        for (int i = binary.length() - 1; i &gt;= 0; i--) {
            char digitChar = binary.charAt(i);
            int digitVal = Character.getNumericValue(digitChar);
            sum = sum + digitVal * power;
            power = power * 2;
        }
        return String.valueOf(sum);
    }
}
</code></pre>
    </div>