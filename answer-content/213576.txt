<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can keep the nesting small by using <code>continue</code> if the condition is not the right one.</p>

<pre><code>def common_argument(M):
    element = M[0][4]
    for i in range(len(M)):
        if M[i][4] == element:
            continue
        if period(M, element) &lt; period(M, M[i][4]):
            element = M[i][4]
    return element


 def period(M,c):
    s = 0
    for i in range(len(M)):
        if c not in M[i]:
            continue;

        if M[i][2] == M[i][3]:
            continue;

        if M[i][2] &gt; M[i][3]:
            s += M[i][2] - M[i][3]
        if M[i][3] &gt; M[i][2]:
            s += M[i][3] - M[i][2]
    return s
</code></pre>

<p>See the Zen of Python: <a href="https://www.python.org/dev/peps/pep-0020/" rel="nofollow noreferrer">Flat is better than nested.</a></p>
    </div>