<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Fake Repository Responsibility</h1>

<p>If the fake repository is meant to only provide testability of the service, then I would say you have hidden the true responsibility of the fake too much.</p>

<p>It comes to what you want to know about the repository during the test? I would say you need to know how many times the <code>Import</code> method was called and what was the argument of each call.</p>

<p>What you have there seems more like a (yet simple) real in-memory implementation of the repository. The fake has its own list of items and adds items from all calls to <code>Import</code> to the list, making it impossible to see which items were to be added in which call (not that you have shown us a test for multiple executions).</p>

<p>I would expect the fake to have about this structure:</p>

<pre><code>class DeliveryDateRepositoryFake : IDeliveryDateRepository
{
  public int ImportCalled {get;};
  public IList&lt;DeliveryDate&gt; LastImportedDates {get;};

  // if you wanna keep track of all calls
  public IEnumerable&lt;IList&lt;DeliveryDates&gt;&gt; AllImportedDates{get;}
}
</code></pre>

<p>The implementation could be using <code>List&lt;DeliveryDate&gt;</code> property, or a list of such lists if you wanna keep track of all consecutive calls.</p>

<h1>Too Many Fakes</h1>

<p>If you are worried about having to implement a fake repository for every entity. Then you should have been worried if you have to implement a real repository for every entity.</p>

<p>What I mean is if you had a template interface for all repositories, maybe you might need just one template implementation of the fake.</p>

<h1>Setup and Cleanup</h1>

<p>You are repeating some code anyway (<code>Setup();</code> and <code>Cleanup();</code>). You could also have just one factory method, returning both the service and the respository as a tuple, destroying them automatically on the end of the test. And also removing need for properties definition and the "nulling" cleanup code.</p>

<h1>Assertions</h1>

<p>I'm not sure if you are just showing us the test in its simplests form or you are really just testing the counts of items. Anyway, I suggest you also test the items data, not just their count, because picking the data from command and passing them to the repository is responsibility of the service and thus should be subject of this test.</p>
    </div>