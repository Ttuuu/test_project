<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The first example is a violation of the <a href="https://nl.wikipedia.org/wiki/Open/closed-principe" rel="nofollow noreferrer">open/closed-principle</a>. You shouldn't need to extend the class in order to change the routes. There doesn't seem to be any other way to use the class without extending it.</p>

<pre><code>class Router {
    protected $routes = [];    

    protected function getRoute(Request $req) {
        // ...
    }

    public function handle(Request $req, Response $res) {
        $fn = $this-&gt;getRoute($req);
        call_user_func($fn, $req, $res);
    }

    public function setRoutes(array $routes)
    {
        $this-&gt;routes = $routes;
    }

    public function addRoute($method, $path, $fn) {
        $this-&gt;routes["$method $path"] = $fn;
    }
}
</code></pre>

<p>Instead of setting method as values for the routes, use a callable. This can be a function, method, closure or invokable object.</p>

<p>A user may still choose to extend it and initialize in the constructor if he really wants to.</p>

<pre><code>class GeneralRouter extends Router {

    public function RootRoute (Request $request, Response $response){
       // ...
    }

    public function PageRoute (Request $request, Response $response){
       // ...
    }

    public function __construct() {
        $this-&gt;setRoutes([
            'GET /' =&gt; [self::class, 'RootRoute']
            'GET /:page/' =&gt; [self::class, 'RootRoute']
        ]);
    }
}
</code></pre>

<p>Adding a <code>get</code>, <code>post</code> and <code>delete</code> method to the <code>Router</code> class would just add micro framework syntax for those who like it, but it wouldn't fundamentally change the router.</p>

<hr>

<p>Last, do <strong>not</strong> invent your own custom <code>Request</code> and <code>Response</code> objects. Use <a href="http://www.php-fig.org/psr/psr-7/" rel="nofollow noreferrer">PSR-7</a> to ensure interoperability with libraries and test suites. There is <a href="https://github.com/zendframework/zend-diactoros" rel="nofollow noreferrer">Zend Diactorors</a> and <a href="https://github.com/jasny/http-message" rel="nofollow noreferrer">Jasny HTTP message</a> <em>(developed by me)</em>.</p>
    </div>