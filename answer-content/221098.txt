<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Normally to find out what part of your code is slow, you would run it in a profiler. PowerShell however, unfortunately, doesn't have a profiler, so we have to use other means. There are various ways of finding the slow part.</p>

<p>You could put timing code in your code to measure how long the various parts take. The .NET <a href="https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.stopwatch?view=netframework-4.8" rel="nofollow noreferrer">Stopwatch</a> class might be helpful here.</p>

<p>Another easy way is to simply just chop out bits of your code until it speeds up. That's what I tried with your code. </p>

<p>The first thing I tried was to comment out the <code>Write-Progress</code>. That seemed like a likely candidate for being different in the ISE and in the console. When I did that, the code sped up instantly. So that seems to be the culprit.</p>

<p>All you have to do is call it less frequently. You could do something like this:</p>

<pre><code># Show progress bar. We don't call Write-Progress each time through the loop 
# because that is slow.
if ($i % 1000 -eq 0)
{
    Write-Progress -Activity "Performing mathematical calculations" `
        -Status "Please wait." -PercentComplete (100 * $i / $permutations) `
        -CurrentOperation "$([math]::Round(100 * $i / $permutations))% Completed."
}
</code></pre>
    </div>