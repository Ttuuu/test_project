<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you had tagged this code as C, it would have been acceptable. Since you tagged it as C++, it's horrible.</p>

<p>Instead of writing your own <code>swap</code> function, there's already <code>std::swap</code> in <code>&lt;algorithm&gt;</code>.</p>

<p>Instead of writing bubble sort yourself, just use <code>std::sort</code>, also from <code>&lt;algorithm&gt;</code>.</p>

<p>Instead of using arrays and resizing them yourself, just use <code>std::vector&lt;int&gt;</code>, from <code>&lt;vector&gt;</code>.</p>

<p>After applying these transformations, you cannot have a dangling pointer anymore since your code is completely pointer-free.</p>

<p>As part of an exercise for learning the basic operations on memory management, it's ok to write code like this, but never ever use such code in production. In production the code should look like this:</p>

<pre><code>#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;vector&gt;

void Print(const std::vector&lt;int&gt; &amp;nums)
{
    for(int num : nums)
    {
        std::cout &lt;&lt; " " &lt;&lt; num;
    }
    std::cout &lt;&lt; "\n";
}

int main()
{
    std::vector&lt;int&gt; nums { 5, 7, 3, 1 };

    // There's probably a more elegant way to add the elements to the vector.
    nums.push_back(4);
    nums.push_back(2);
    nums.push_back(8);

    std::sort(nums.begin(), nums.end());

    Print(nums);
}
</code></pre>

<p>By the way, your original code doesn't have any dangling pointer as well. Well done.</p>

<p>You don't need the <code>!= NULL</code> check before the <code>delete[]</code> since that pointer cannot be null. In modern C++ (since C++11 I think) you would also write <code>nullptr</code> instead of <code>NULL</code>. The reason is that historically <code>NULL</code> had not been guaranteed to be of pointer type.</p>

<p>Have a look at <a href="https://en.cppreference.com/w/cpp/algorithm" rel="nofollow noreferrer">https://en.cppreference.com/w/cpp/algorithm</a> for more algorithms that you shouldn't implement yourself in C++.</p>

<p>I would have liked to write the <code>push_back</code> block in a shorter way, as well as the <code>Print</code> function. I'm sure there's a more elegant way, I just don't know it.</p>
    </div>