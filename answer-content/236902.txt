<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some comments, more about methods that about the code.</p>

<h1>Fraction</h1>

<p>Personally I would have called it <code>Rational</code> since that what it is: rational numbers. But this is a matter of taste.</p>

<p>The constructor should assert that <code>_den != 0</code>.</p>

<p>The <code>operator!=</code> should compare the simplified fractions.</p>

<p>Should it not be <code>lcm</code> (lowest common multiple) and <code>gcd</code> (greatest common divisor)?</p>

<h1>Matrix</h1>

<p>Your matrices are <em>dense</em>, meaning that you keep track of all entries. If you care for performance you should also implement <em>sparse</em> matrices, which only keep track of the non-zero entries. There are several data structures for <a href="https://en.wikipedia.org/wiki/Sparse_matrix" rel="nofollow noreferrer">sparse matrices</a>.</p>

<p>Identity and constant matrices should have a special separate representation and re-implement the operations for performance. Actually you should use polymorphism and have a type hierarchy that accounts for: dense matrices, sparse matrices, diagonal matrices, constant matrices, identity matrix. Diagonal matrices will use one single vector of fractions, constant matrices only one fraction and the identity doesn't need any internal representation.</p>

<p>You should use factorizations, instead of brute force for performance:</p>

<ul>
<li><p>To compute the determinant you can use the <a href="https://en.wikipedia.org/wiki/QR_decomposition" rel="nofollow noreferrer">QR decomposition</a>: the determinant is then the product of the diagonal of R.</p></li>
<li><p>For the inverse, you could use the <a href="https://en.wikipedia.org/wiki/Singular_value_decomposition" rel="nofollow noreferrer">SVD decomposition</a> to compute the <a href="https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse" rel="nofollow noreferrer">Moore-Penrose pseudoinverse</a>, which is the inverse, if the matrix is not singular.</p></li>
</ul>
    </div>