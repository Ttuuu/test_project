<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few things to consider:</p>

<p>Is having the function generic really necessary? Why not just make the data type <code>unsigned long long</code> instead?  This way you can do some bounds checking.</p>

<p>I would suggest using a <code>bitset</code> to hold the raw data would be more efficient than using 32 bits to represent each 1 or 0.</p>

<p>All primes are odd except for <code>2</code>.  If you add <code>2</code> to the <code>result</code> vector, you can start the outer loop at 3 and increment by 2.</p>

<p>Since the outer loop will only be odd numbers the start of the inner loop will also be odd.  Therefore in order to keep hitting the odd number multiples you can increment by <code>i*2</code>.</p>

<p>You can shorten the second loop by adding to the vector every time you find a prime in the outer loop.  This way the second loop can start where the outer loop finishes.</p>

<p>There is also another algorithm you can use that is more highly optimised for making a list of primes, mind you it's also more complicated( sorry I can't remember the name off hand)</p>
    </div>