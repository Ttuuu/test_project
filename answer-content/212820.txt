<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The solution has a quadratic time complexity. If it solves the 50000-strong list in 18 seconds, I'd expect about 1800 seconds (aka 30 minutes) for a 500000 one. Notice that the problem is aggravated by the way you are looking for duplicates (and <code>IsPairUnique</code> doesn't look correct; it is prone to false positives).</p>

<p>There are few standard ways to bring the complexity down.</p>

<ul>
<li><p>Sort the list. Arrange two iterators, one at the beginning, another at the end.</p>

<p>Now add the pointed elements. If the sum is less than the target, advance the left one. If it is greater, move the right one toward the beginning. If it is a target, record it, and move both. In any case, when moving an iterator, skip duplicates. Rinse and repeat until they met.</p></li>
<li><p>If you have enough extra memory, put them in a set. For each element in a set check if its complement is also there.</p></li>
</ul>
    </div>