<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2><code>var</code></h2>
<p>Particularly given that you have accuracy issues, it's important for your own understanding of what the code does to be explicit in the following declarations:</p>
<pre><code>    var monthlyRepaymentAmount = HousingLoanInterest(principal, interestRatePerAnnum, years);
    var tenure = years * 12;
    var principalAndInterest = CompoundInterest(principal, interestRatePerAnnum, 12, years);
</code></pre>
<p>From these lines alone, I have no idea if these are supposed to be doubles, integers, decimals, etc. Just spell out the actual type.</p>
<h2>In-place operations</h2>
<pre><code>        totalRepaymentAmount = totalRepaymentAmount + (decimal)monthlyRepaymentAmount;
        tenure = tenure - 1;
     
</code></pre>
<p>can be</p>
<pre><code>totalRepaymentAmount += monthlyRepaymentAmount;
tenure--;
</code></pre>
<h2>Formatting</h2>
<p>This could benefit from some temporary variables, but even without them,</p>
<pre><code>    return (loanAmount * Math.Pow((interestRate / 12) + 1,
         (years * 12)) * interestRate / 12) / (Math.Pow
         (interestRate / 12 + 1, (years * 12)) - 1);
</code></pre>
<p>is more legible as</p>
<pre><code>return (
    loanAmount * Math.Pow(
        interestRate / 12 + 1,
        years * 12
    ) * interestRate / 12
) / (
    Math.Pow(
        interestRate / 12 + 1,
        years * 12
    ) - 1
);
</code></pre>
<p>which in turn is equivalent to</p>
<pre><code>double annual = interestRate / 12;
double pow = Math.Pow(
    annual + 1,
    years * 12
);
return loanAmount * pow * annual / (pow - 1);
</code></pre>
<p>Simpler yet:</p>
<pre><code>double annual = interestRate / 12,
       pow = Math.Pow(
           annual + 1,
           -12 * years
       );
return loanAmount * annual / (1 - pow);
</code></pre>
<p>Please test this for equivalence.</p>
    </div>