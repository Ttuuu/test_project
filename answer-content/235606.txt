<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <em>UpperCamelCase</em> format is used to name types. You should rename your classes (and constructors) to <code>EmailAppender</code> and <code>EmailSender</code>.</p>

<p>The <code>ExecutorService</code> has a <code>shutdown</code> method that you can use to reject new tasks and terminate the current ones. You may shutdown your pool form the <code>close</code> method. And there is a nice code sample in the official documentation : <a href="https://docs.oracle.com/javase/9/docs/api/java/util/concurrent/ExecutorService.html" rel="nofollow noreferrer">https://docs.oracle.com/javase/9/docs/api/java/util/concurrent/ExecutorService.html</a></p>

<p>I guess you should also avoid to use <code>System.out.println</code> and <code>e.printStackTrace()</code>. They will both print unexpected messages on the console. Imagine that your code will be shipped in a library, once a dev will use your library he will suddenly got things printed on his console.</p>

<p>Aside of that I don't see anything wrong. </p>

<p>On a more personal point of view, I would have tried to extract the "configuration" (Creation of <code>Properties</code> and creation of the instance) to another class so that you make a clear distinction between the conversion of the <code>LoggingEvent</code> to an email and the sending of an email message.</p>
    </div>