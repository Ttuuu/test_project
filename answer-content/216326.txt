<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The easiest (but not computationally most efficient) way to solve this challenge is to use a brute-force algorithm, like you did. However you can write it a lot more succinctly when using more of the tools available in the Python standard library.</p>

<ul>
<li><p>Use a <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generator expression</a> to get all slices:</p>

<pre><code>s = "..."
n = 13
slices = (s[i:i+n] for i in range(len(s) - n))
next(slices)
# '7316717653133'
</code></pre></li>
<li><p><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> this string to an iterable of integers:</p>

<pre><code>slices = (s[i:i+n] for i in range(len(s) - n))
list(map(int, next(slices)))
# [7, 3, 1, 6, 7, 1, 7, 6, 5, 3, 1, 3, 3]
</code></pre></li>
<li><p>Use <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>functools.reduce</code></a> and <a href="https://docs.python.org/3/library/operator.html#operator.mul" rel="nofollow noreferrer"><code>operator.mul</code></a> to get the product of this iterable:</p>

<pre><code>from functools import reduce
from operator import mul

slices = (s[i:i+n] for i in range(len(s) - n))
reduce(mul, map(int, next(slices)))
# 5000940
</code></pre></li>
<li><p>Use <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> to...get the maximum of those:</p>

<pre><code>slices = (s[i:i+n] for i in range(len(s) - n))
max(reduce(mul, map(int, slice)) for slice in slices)
</code></pre></li>
<li><p>Finally, wrap the code in functions and the calling code in a <a href="http://stackoverflow.com/questions/419163/what-does-if-name-main-do"><code>if __name__ == "__main__":</code> guard</a>:</p>

<pre><code>from functools import reduce
from operator import mul

def prod(x):
    return reduce(mul, x)

def maximum_product(s, n):
    return max(prod(map(int, s[i:i+n])) for i in range(len(s) - n))

if __name__ == "__main__":
    s = "..."
    n = 13
    print(max_product(s, n))
</code></pre></li>
</ul>
    </div>