<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just refactored the one function.
It is hard to tell what your intentions are in some places.</p>

<p>Comments are inline, with reasons as to why I changed things</p>

<pre><code>    public function onLoginPost(Request $request) {
        $validator = Validator::make($request-&gt;all(), [
            'login_email'     =&gt; 'required|email|exists:users,mail',
            'login_password'  =&gt; 'required'
        ]);

        Session::put('last_message_for', 'login');

        if ( $validator-&gt;fails()) {
            return Redirect::back()-&gt;withErrors($validator-&gt;messages());
        }

        // the prior statement returns, no need for an else here
        // else {
        if (!Auth::attempt(['mail' =&gt; $request-&gt;input('login_email'), 'password' =&gt; $request-&gt;input('login_password')])) {
            $this-&gt;addNewWebsiteLogin($request, User::where('mail', $request-&gt;input('login_email'))-&gt;pluck('id')-&gt;first(), "0");
            return Redirect::back()-&gt;withMessage('Opps, you entered an incorrect login.')-&gt;withColor('warning');
        }

        // the prior statement returns, no need for an else here
        // else {

        // we assign user to a variable, but still use Auth::user() thru the following code?
        $user = Auth::user();
        $rpInfo = $user-&gt;roleplayInformation;

        $this-&gt;addNewWebsiteLogin($request, $user-&gt;id, "1");

        // what no error checking, what if this request fails?
        // maybe this should be abstracted in a separate function, for example, $this-&gt;getCountryNameByIp($request-&gt;ip());
        $country = json_decode(file_get_contents("http://freegeoip.net/json/" . $request-&gt;ip()))-&gt;country_name;

        // this is not essential, i just find it more readable this way
        // if ($user-&gt;ip_last != $request-&gt;ip() &amp;&amp; strlen(Auth::user()-&gt;ip_last) &gt; 0) {
        $is_different_ip = (!empty(Auth::user()-&gt;ip_last) &amp;&amp; $user-&gt;ip_last != $request-&gt;ip());

        // not sure why you are checking for string versions of a what is essentially a boolean
        // if ($rpInfo-&gt;lock_account_on_different_ip == '1') {
        if ($rpInfo-&gt;lock_account_on_different_ip &amp;&amp; $is_different_ip) {
            $user-&gt;lockAccount("Detected a login from a different IP address.");
        }

        // i have split these conditions up, just for the sake of readability
        // if ($rpInfo-&gt;lock_account_on_different_country == '1' &amp;&amp; strlen(Auth::user()-&gt;last_country) &gt; 0 &amp;&amp; Auth::user()-&gt;last_country != $country) {
        $is_different_country = (!empty(Auth::user()-&gt;last_country) &amp;&amp; Auth::user()-&gt;last_country != $country);
        if ($rpInfo-&gt;lock_account_on_different_country &amp;&amp; $is_different_country) {
            $user-&gt;lockAccount("Detected a login from a different country.");
        }

        // personal preference again, if you are using booleans, leave the == bit out
        // if ($user-&gt;is_locked == '0') {
        if (!$user-&gt;is_locked) {

            // to me it seems like you don't need to test for a different country again, but hard to tell without seeing the user class
    //      if ($user-&gt;website_pin_selection == 'different_ip') {
    //          $user-&gt;pin_lock = '1';
    //      }
    //      else if ($user-&gt;website_pin_selection == 'different_country' &amp;&amp; strlen(Auth::user()-&gt;last_country) &gt; 0 &amp;&amp; Auth::user()-&gt;last_country != $country) {
    //          $user-&gt;pin_lock = '1';
    //      }

            if ($user-&gt;website_pin_selection == 'different_ip' || $user-&gt;website_pin_selection == 'different_country') {
                $user-&gt;pin_lock = '1';
            }
        }

    //  }

        // once again, i prefer boolean tests without the == for readability
        // if ($user-&gt;is_locked == '0' &amp;&amp; $user-&gt;pin_lock == '0' &amp;&amp; $user-&gt;website_pin_selection == 'every_login') {
        if (!$user-&gt;is_locked &amp;&amp; !$user-&gt;pin_lock &amp;&amp; $user-&gt;website_pin_selection == 'every_login') {
            $user-&gt;pin_lock = '1';
        }

        // not 100% sure on your logic here
        // why are we updating these fields if we detect a different ip or country, shouldn't we keep the original country and ip
        $user-&gt;ip_last = $request-&gt;ip();
        $user-&gt;last_country = $country;
        $user-&gt;save();

        return redirect()-&gt;route('frontend.user.home');
    //      }
    //  }
    }
</code></pre>
    </div>