<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have two comments of the tweaking kind:</p>

<p>1) any variable that is shared between threads has to be <strong><code>volatile</code></strong>. this is true even for static variables that have one value throughout the JVM (actually it is per class loader but this is irrelevant here). The reason for that is that threads can locally cache the value of variables.  volatile variables force the thread to read the global value each time. </p>

<p>You might also want to take a look at <code>AtomicInteger</code> which is an int that is guaranteed to be incremented synchronously and that has the same value for all running threads.</p>

<p>2) while <code>synchronized</code> will work, Java concurrency package has several Lock mechanisms that allow for better control over the synchronization process.  of relevancy here are <code>ReentrantLock</code>, <code>ReadWriteLock</code>.</p>
    </div>