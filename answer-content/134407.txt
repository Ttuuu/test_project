<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>More efficient... look at Sieve of Eratosthenes for a huge speed up. I'm ignoring it for now, as it comes again and again.</p>

<pre><code>for (int num = 2; num &lt; 10000000; num++) {
</code></pre>

<p>The condition <code>num &lt; 10000000</code> is plain wrong. It works, but makes no sense. If the requirements change, the limit may be too small. Just drop it. Or better, replace it by <code>counter &lt; 10001</code> (nobody says, that you have to test <code>num</code>, any condition is allowed).</p>

<p>You surely know that 4, 6, 8, ... are no primes, so you can skip them. Iterate over odd numbers only and set the initial value of counter equal to one (accounting for the skipped prime 2). So you get something like</p>

<pre><code>for (int num = 3; counter &lt; 10001; num += 2) {
</code></pre>

<hr>

<p>This hardly helped the speed, but doing the same thing in</p>

<pre><code>for (int factor = 2; factor &lt; num; factor++) {
</code></pre>

<p>surely helps. You only have to deal with odd <code>num</code>, so you test only odd <code>factor</code>s.</p>

<hr>

<p>Observe that for each <code>factor</code>, also <code>num / factor</code> is a factor and the smaller of the two is no bigger than the square root of <code>num</code>. So you can use</p>

<pre><code>int limit = (int) Math.sqrt(num);
for (int factor = 3; factor &lt;= limit; factor += 2) {
</code></pre>

<hr>

<pre><code>        if (isPrime) {
            primeNum = num;
            counter++;
        }
</code></pre>

<p>This looks a bit strange. It works, but you assign <code>primeNum</code> just in case it'll be needed. A rather useless variable as <code>num</code> would do, too.</p>

<hr>

<p>Even for such a rather trivial tasks you should use methods. Write small methods and let each of them do just one thing. Especially, never mix user input or output with computation as this makes the code perfectly non-reusable. Try to write methods like</p>

<pre><code>boolean isPrime(int num);
int nextPrimeAbove(int num);
int nthPrime(int n);
</code></pre>
    </div>