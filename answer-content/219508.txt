<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <code>use</code> binding is usually better than the <code>using</code> function. The object is disposed when leaving the scope of the <code>use</code> binding (when leaving the <code>SHA256</code> function).</p>

<pre><code>let SHA256 (file:FileInfo) =
    use hashFile = file.Open(FileMode.Open, FileAccess.Read, FileShare.ReadWrite)
    use sha256Hash = SHA256Managed.Create()
    sha256Hash.ComputeHash(hashFile)
</code></pre>

<p>You can avoid the use of a string builder by using <code>String.concat</code>. You can also use the F# <code>sprintf</code> function, which has slightly different format specifier syntax.</p>

<pre><code>let HexEncoded (hash:byte[]) :string =
    hash
    |&gt; Array.map (sprintf "%02X")
    |&gt; String.concat ""
</code></pre>

<p>This might be slightly slower than your string builder because it requires an intermediate array. (Note that your implementation could remove the intermediate array by using <code>Array.iter</code> instead of <code>Array.map</code> and moving the <code>ignore</code> to inside the lambda.)</p>
    </div>