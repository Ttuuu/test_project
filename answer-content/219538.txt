<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Nice work. I got pretty distracted playing a few games before starting the review.</p>

<p>Your 'Tic-Tac' display should be put inside a method, and called on the constructor. This way you're explicitly stating when the title will be printed, rather than leaving it up to the JVM. (The static block will be executed the first time the class is referenced).</p>

<p>I believe you should use a for-loop instead of a while loop;</p>

<pre><code>for (int i = 0; i &lt; numberOfGames; i++)
</code></pre>

<p>You should declare a variable for all of your whitespace. This will make it easier to edit/maintain:</p>

<pre><code>private static final WHITESPACE = "\t\t\t\t\t\t\t\t\t\t\t\t\t";
</code></pre>

<p>It's very rare for one character long variable names to be considered acceptable. 'r' is a bad variable name for the users choice.</p>

<p>'check' should also be renamed to 'validChoice' or similar.</p>

<p>If you need to initialize a variable, set it to <code>null</code>, not <code>"1"</code>.</p>

<p>Rename 'x' to something more meaningful, such as 'userChoice'.</p>

<p>Get rid of the empty if statement E.G:</p>

<pre><code>if (!x.matches("^[1-9]$")) {
    throw new NumberFormatException("Invalid Number");
}
</code></pre>

<p>Actually, you don't need to throw an exception. You should use Exceptions for exceptional cases and avoid them when possible. Throwing / catching exceptions is also very slow.</p>

<p>Your if statement could be made more clear by changing it from:</p>

<pre><code>if (!(r &gt; 0 &amp;&amp; r &lt; 10)) {
</code></pre>

<p>to:</p>

<pre><code>if (r &lt;= 0 || r &gt;= 10) {
</code></pre>

<p>Your <code>switchPlayer</code> method can be simplified to use a ternary E.G:</p>

<pre><code>turn = turn == 'X' ? 'O' : 'X'
</code></pre>

<p>This if statement can be simplified from:</p>

<pre><code>if (win()) {
    switchPlayer();
} else if (defence()) {
    switchPlayer();
} else {
    attack();
    switchPlayer();
}
</code></pre>

<p>to:</p>

<pre><code>if (!win() &amp;&amp; !defence()) {
    attack();
}
switchPlayer();
</code></pre>

<p>Your 'checkWin' method could be broken down. For example, if you had a list of possibilities for wins such as: <code>{0, 1, 2}</code>, <code>{3, 4, 5}</code> etc.</p>

<p><strong>Feature consideration:</strong></p>

<p>You could add numbers indicating the location of the squares. For example:</p>

<pre><code> X | O | 3 
---|---|---
 4 | 5 | 6
---|---|---
 7 | 8 | X 
</code></pre>
    </div>