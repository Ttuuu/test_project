<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your two constructors don't store a value into <code>m_capacity</code>, so if the initial capacity requested (passed in as a parameter) is larger than the default capacity you'll have things in an inconsistent state and likely run into problems later.</p>

<p>Is there a reason you're not using <code>std::make_unique&lt;int[]&gt;</code>, instead of allocating memory with <code>new</code> and constructing a <code>unique_ptr</code> from it?</p>

<p><code>at</code> member functions in the standard containers will perform bounds checking.  Your <code>at</code> does not.</p>

<p>Is there a particular reason you're exiting the program if you detect a problem, rather than throwing an exception?</p>

<p><code>DetermineCapacity</code> can enter an infinite loop if the <code>actual_capacity *= GROWTH_FACTOR</code> calculation overflows.</p>

<p><code>IncreaseCapacity</code> and <code>DecreaseCapacity</code> are almost identical.  Their functionality can be placed into a common function to avoid the code duplication.</p>

<p>You don't need to use <code>this-&gt;</code> in member functions like <code>capacity</code> and <code>size</code>.</p>

<p>In <code>pop</code>, you need to read the value to return <em>before</em> you shrink the array.  Since your resizing can reallocate memory and copy the vector contents, this can result in your reading an invalid value.</p>

<p>Why is <code>insert</code> <em>always</em> doing a reallocation?</p>

<p><code>Delete</code> does not validate its argument, which can lead to Undefined Behavior.</p>
    </div>