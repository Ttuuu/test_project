<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are already modifiyin the list of directories, so that should be enough. But your <code>exclude</code> includes the full path, so your check in the list comprehension does not actually filter the excluded directories, you only do that in the <code>for</code> loop below when already having descended into those excluded directories (wasting time).</p>

<p>So, this should work:</p>

<pre><code>from os import walk, path

exclude = {'./dir1/foo'}

for root, dirs, files in walk('.'):
    if exclude is not None:
        dirs[:] = [d for d in dirs if path.join(root, d) not in exclude]
    for name in files:
        print path.join(root, name)
</code></pre>

<p>Note that <code>exclude</code> needs to contain paths starting with the starting point of <code>os.walk</code>, so in this case <code>.</code>.</p>

<p>I also made <code>exclude</code> a set (<span class="math-container">\$\mathcal{O}(1)\$</span> <code>in</code> lookup), used the fact that <code>topdown=True</code> by default and <a href="https://stackoverflow.com/questions/3965104/not-none-test-in-python">used <code>is not</code> instead of <code>!=</code> for comparison to <code>None</code></a>.</p>

<hr>

<p>If you want to instead exclude folder names (regardless of their position in the directory tree), you can do that as well like this:</p>

<pre><code>from os import walk, path

exclude = {'foo'}

for root, dirs, files in walk('.'):
    if exclude is not None:
        dirs[:] = [d for d in dirs if d not in exclude]
    for name in files:
        print path.join(root, name)
</code></pre>

<p>What is not possible with either of these two approaches is to include <code>foo</code> only in sub-directories of <code>dir1</code>, like in your example. However, I think this is more consistent behaviour, so you should choose one of the two, IMO.</p>

<hr>

<p>As a last point, you should probably switch to Python 3 sooner rather than later if at all possible, because <a href="https://pythonclock.org/" rel="nofollow noreferrer">support for Python 2 will end in a bit more than a year</a> (at the time of writing this).</p>
    </div>