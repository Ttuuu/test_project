<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As a variation:</p>

<pre><code>var arr = new[] { "http://www.", "http://blog.", "http://forum.", "http://tracker.", "http://wiki.", "http://" };   
var to = "http://forum.";

int i = 0;

while ((!RedirectPermanent(from[i], to)) &amp;&amp; i &lt; arr.Length)
{
    ++i; // reversed from i++
    if (i &gt; arr.length) { break; }
}
</code></pre>

<p>There are several reasons I prefer this over a <code>foreach</code>:</p>

<ul>
<li><p><code>foreach</code> has a performance cost to execute. An internal state machine iterator has to be instantiated. The <code>while</code> with a count limiter essentially does the same thing. While this is a performance tweak, IMO, it's still a better practice.</p></li>
<li><p>code is not restricted/limited by the locked state of the iterated collection or the state machine iterator.</p></li>
<li><p>IMO, using <code>foreach</code> with a body of <code>if-then-break</code> smells and reads like slang rather than proper grammar. ;)</p></li>
</ul>
    </div>