<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could further generalize your player creation code by moving the logic of whether a specific player class is for that player class code into that specific class instance. For instance, </p>

<pre><code>public MagePlayerClass extends AbstractPlayerClass {
    @Override 
    boolean canCreate(final String arg) {
        return "m".equalsIgnoreCase(arg);
    }
}
</code></pre>

<p>In this way you completely remove a huge if-then-else or switch statement and can have hundreds of classes that extend AbstractPlayerClass.</p>

<p>Player instances would then be created by an abstract factory method that uses those sub-classes of AbstractPlayerClass to create and initialize the Player instance.</p>

<p>Your player creation code would loop over all classes in a specific folder that extend the AbstractPlayerClass until one of them returns true from a call to canCreate("m");</p>

<p>Furthermore, you now have a super class to move all the common player class code.</p>
    </div>