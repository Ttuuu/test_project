<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some quick thoughts:</p>

<ol>
<li>Linting the code will make it more easily readable to Python developers (including yourself when you get used to it).</li>
<li><code>elif (number % 2 == 1) :</code> could just be <code>else:</code> because a number which is not even must be odd.</li>
<li><code>return (newNumber)</code> should be just <code>return newNumber</code>.</li>
<li>The code below <code>#Input validation loop</code> should be in a <code>main</code> function, called <code>if __name__ == '__main__'</code>. That way it's possible to import your function for reuse in other code.</li>
<li><p>Rather than returning just the next number in the sequence you probably want to return an infinite <a href="https://anandology.com/python-practice-book/iterators.html" rel="nofollow noreferrer">iterator</a> so that the caller can get more numbers trivially:</p>

<pre><code>class Collatz():
    def __init__(self, start):
        self.number = start

    def __iter__(self):
        return self

    def __next__(self):
        if self.number in [0, 1]:
            raise StopIteration()
        if self.number % 2 == 0:
            self.number = int(self.number / 2)
        else:
            self.number *= 3
            self.number += 1
        return self.number
</code></pre>

<p>Use:</p>

<pre><code>&gt;&gt;&gt; print(list(Collatz(15)))
[46, 23, 70, 35, 106, 53, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1]
</code></pre></li>
</ol>
    </div>