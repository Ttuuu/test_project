<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would suggest using the <code>new()</code> generic type constraint. Using <code>Activator</code> means you can match a private constructor which you would no longer be the case with the generic constraint but you would be able to catch incorrect use at compile time. Currently, if I tried to use a class like:</p>

<pre><code> public class Foo
 {
     public Foo(string bar, double baz) { /* ... */ }
 }
</code></pre>

<p>Your class would throw at <em>runtime</em> (a MethodMissingException I believe). If you added <code>where T : class, new()</code> instead of just <code>where T : class</code>, trying to use your class with the <code>Foo</code> type would produce a <em>compile</em> time error. An error I can fix before having to run the code is the most helpful kind.</p>

<hr>

<p>Doing reflection in a loop when you don't need to is not a good thing. You do this for every line in the input file:</p>

<pre><code> T obj = GetObject();
 Type t = obj.GetType();
 PropertyInfo[] props = t.GetProperties();
</code></pre>

<p>You can create this all before processing the file and you don't need to create an instance to get the type information:</p>

<pre><code>PropertyInfo[] props = typeof(T).GetProperties();

for (int i = 1; i &lt; _csvLines.Length; i++)
{
    T obj = GetObject(); // or T obj = new T(); with the constraint added.
</code></pre>

<hr>

<p>You probably want the <code>PropertyInfo[]</code> to be an <code>IDictionary&lt;string, PropertyInfo&gt;</code>. to simplify the lookup by column name.</p>

<hr>

<p>As for whether this should be a class or not... If you do the reflection in the constructor and keep the instance around to process multiple files then I think it is okay to be a class to save on having to do the reflection over and over again. </p>

<p>If you are going to create an instance to process a file and then throw it away, or if you don't move the reflection to the constructor, I think it would be better as a static class with 2 methods as the other review suggests.</p>

<hr>

<p>It's spelt: "separator" not "separetor". You've used both spellings. It's a word that I almost always spell wrong too :)</p>
    </div>