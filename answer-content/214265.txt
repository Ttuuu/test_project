<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Scripts intended to be executable should have a shebang:</p>

<pre><code>#!/bin/sh
</code></pre>

<p>The repetitive calls to <code>trap</code> could be replaced by a loop:</p>

<pre><code>for i in 1 2 3 6 15
do trap "signal_handler_generic $i" $i
done
</code></pre>

<p>(Note: if using Shellcheck, you may need <code># shellcheck disable=SC2064</code>: we must not use single-quotes here, as it would make no sense to defer the expansion of <code>$i</code>).</p>

<p>With some small changes, we could trap the signals by name (the names <em>are</em> specified in POSIX, contrary to the code comment), and not need the conversion from number in the handler.</p>

<p>Consider letting <code>SIGHUP</code> mean "reload configuration" as is conventional in daemons.</p>

<p>I think the name <code>script_one_instance_lockfile</code> is possibly over-long.  As it's the only lock file we use, we could call it simply <code>lockfile</code> and get more of our lines down to a reasonable length.</p>

<p>There's no need to capture the output of <code>date</code> if the only thing we do with it is to immediately print it:</p>

<pre><code>    date '+%Y-%m-%d_%H:%M:%S  (re-)starting PROGRAM'
</code></pre>

<p>Use <code>test -e</code> (or <code>[ -e</code>) to test for existence, where the file type is irrelevant.  Also consider using a pidfile, so that after unclean shutdown and recovery, invocation isn't inhibited.  BTW, is it intentional that the lockfile is in (per-user) <code>$HOME</code>, rather than per-machine in some temporary filesystem (e.g. <code>/run</code> on Linux)?</p>
    </div>