<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Sadly, I am not familiar with <code>tkinter</code> but have used <code>QT</code> a bit and some concepts are similar. You will be interested in reading more about the layout managers for resizable windows and controls -  see <a href="http://zetcode.com/tkinter/layout/" rel="nofollow noreferrer">Layout management in Tkinter</a>. You are not exploiting their full potential.</p>

<p>I would always allow resize and never expect that the screen dimensions will always remain the same. And it takes very little to spoil your layout - just changing font could have a dramatic effect. <strong>Grid layouts</strong> exist for a reason, so use them.</p>

<p><strong>Hardcoded</strong> colors like <code>#273c75</code> should be defined as variables at the top op your code, possibly in a dedicated module if you end up with multiple files. But a configuration file would be nice. Because it is the kind of things that users will want to customize. Some people have poor sight and prefer high contrast, and the colors are not rendered the same on every screen.</p>

<p>So <code>#34495e</code> could be named <code>BLUE_GRAY</code> or something along these lines (use meaningful and descriptive names). I have no idea what <code>#34495e</code> looks like otherwise.</p>

<p>Same remark for <code>fg="white"</code>: don't use hardcoded colors.
Everything that is related to the <strong>customization</strong> of controls like padding, font size etc should be defined in a dedicated section or separate file. But I still prefer a configuration file of some sort.</p>

<p>Same here:</p>

<pre><code>champion_position = product(range(30), range(5))
</code></pre>

<p>Don't use fixed ranges in code, add some level of abstraction (and flexibility).</p>

<p>In programming it is important to <strong>separate logic from presentation</strong> as much as possible.</p>
    </div>