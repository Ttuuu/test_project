<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The simplest solution would be to drop the <code>totalBalance</code> field and simply have <code>getTotalBalance</code> calculate the value:</p>

<pre><code>public BigDecimal getTotalBalance() {
    return this.principalDue.subtract(this.penaltyPaid)
        .add(this.interestDue).subtract(this.interestPaid)
        .add(this.feeDue).subtract(this.feePaid)
        .add(this.penaltyDue).subtract(this.penaltyPaid);
}
</code></pre>

<p>There is no real reason to store the total inside the object, unless you know it has to called multiple times (and with that I mean a very large number of times, not 3 or 4 times) without being able to be cached.</p>

<p>Generally with data classes it's always prudent to look into the possibility of having it be immutable (= no setters), then you only need calculate the total once in the constructor. I can't say for sure without more context, but this actually looks like a prime example where immutability could make sense.</p>

<p>Again with out more context its difficult to say, but IMO the class seems to contain too much information/data. It may make sense to break in down into smaller classes.</p>
    </div>