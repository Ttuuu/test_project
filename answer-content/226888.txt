<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The statement <code>V.push_back(temp);</code> can be inefficient, as the vector <code>V</code> may need to be reallocated multiple times.</p>

<p>Use <a href="http://www.cplusplus.com/reference/vector/vector/reserve/" rel="noreferrer"><code>std::vector::reserve(N)</code></a> to ensure sufficient space exists in the vector before reading in the data to avoid multiple reallocations.</p>

<hr>

<blockquote>
  <p><span class="math-container">\$3 \le N \le 10^7\$</span><br>
  <span class="math-container">\$1 \le \mathrm{arr}[i] \le 10^3\$</span></p>
</blockquote>

<p>With <span class="math-container">\$10^7\$</span> pigeons and <span class="math-container">\$10^3\$</span> holes, many holes can have over 10,000 pigeons!  You might want to consider an array of counts indexed by side length.  No sort required; it is automatically sorted.  But your algorithm will need considerable reworking.</p>
    </div>