<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><strong>document your code. In the code.</strong><br>
Python got it right with <a href="https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring" rel="nofollow noreferrer">docstrings</a>:<br>
The laziest copying of a function includes its docstring, ready for introspection.</li>
<li><strong>document what everything is there for</strong> wherever not blatantly obvious.<br>
This would include the problem description - if it was in the source code, one might notice that the statements use an <code>abs()</code> where the description never mentions it.</li>
<li>let a tool help you to follow the <a href="https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds" rel="nofollow noreferrer">Style Guide for Python Code</a>.</li>
<li>your naming is OK (with the exception of <code>result</code> - there should be <em>digits of power</em> or <em>modulus of power</em>)</li>
<li>your <code>binaryToDec()</code> is too weird to mention - just try to describe what it does accomplish, and how.</li>
<li>read the requirement specification carefully. If possible, fix in writing how to check requirements are met.<br>
You mention that your implementation <code>is not the fastest way to do [modular exponentiation]</code>: is there an upper limit on execution time? Rank among course-mates?<br>
The way the exponent is specified looks constructed to head you to use one particular way to implement exponentiation.</li>
<li>know your python library. <a href="https://codereview.stackexchange.com/questions/231342/printing-the-last-two-digits-of-an-exponential-calculation#comment451181_231342">Mast</a> commented the existence of a built-in - for conversion of strings to numbers using a non-default base, more likely than not.</li>
</ul>

<p>How not to do more than hardly avoidable (/be "fast"):<br>
For starters, only the last <em>d</em> digits of a number have any influence on the last <em>d</em> digits of its integral powers represented using the same base <em>b</em>.<br>
Moreover, those last <em>d</em> digits become cyclic with <em>b**d</em> an integral multiple of cycle length - just watch out for things like <code>2**100</code>.</p>
    </div>