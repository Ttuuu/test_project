<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have some state you're maintaining, and you need a function that sets up callbacks to modify that state. </p>

<p>So basically, just do that.</p>

<p>You can probably do it better than I'm about to.</p>

<pre><code>
const newState = () =&gt; {
  let _radioSubtract = null;
  let _radioButtonsValue = null;
  return {
    getRadioSubtract: () =&gt; { return _radioSubtract; },
    getRadioButtonsValue: () =&gt; { return _radioButtonsValue; },
    set: (radioSubtract, radioButtonsValue) =&gt; {
      _radioSubtract = radioSubtract;
      _radioButtonsValue = radioButtonsValue;
    },
  };
}

const setHandler = (madID, state) =&gt; {
  const mad = document.querySelector(`#${madID}`)
  if (mad) {
    mad.addEventListener('click', (e) =&gt; {
      if(!document.querySelector('#basket-case').classList.contains('touched')) {
        extrasSetup(e);
        state.set(parseInt(e.target.dataset.price), parseInt(e.target.dataset.price));
        localExtrasCalc(staticPrice);
        parseAndUpdate();
      } else if(e.target.classList.contains('radioClicked')) {
        state.set(state.getRadioSubtract(), 0);
        noVatExtra = noVatExtra - state.getRadioSubtract();
        parseAndUpdate();
        e.target.disabled = true;
      }
    }); 
  }
}

setHandler('mad-1', newState());
setHandler('mad-2', newState());
</code></pre>

<p>I basically ignored everything in your code that I didn't understand or that you haven't talked about. Also I haven't tested this at all. You probably won't be able to use it as-is, but I think it's the pattern you're looking for.</p>
    </div>