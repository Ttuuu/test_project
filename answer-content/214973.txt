<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's not really much here. The only thing I can think of is it may prove faster to pre-allocate the destination vector using <a href="http://www.cplusplus.com/reference/vector/vector/reserve/" rel="noreferrer"><code>reserve</code></a>. <code>push_back</code> has the potential to cause several re-allocations per call to <code>transpose</code>, which will be slow. Try:</p>

<pre><code>std::vector&lt;double&gt; transpose_vector(const std::vector&lt;std::vector&lt;double&gt;&gt; &amp;column_vec) {
  std::vector&lt;double&gt; row_vector;
  row_vector.reserve(total_entries(column_vec)); // Pre-allocate the space we need

  for (auto c : column_vec) {
    for (auto r : c) {
      row_vector.push_back(r);
    }
  }
  return row_vector;
}
</code></pre>

<p>Where <code>total_entries</code> is a function that finds how many cells there are in the 2D vector. If each row is the same length, you could use math to figure this out. If it's ragged though, you may need to iterate <code>column_vector</code> summing the row lengths.</p>
    </div>