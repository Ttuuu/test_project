<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Yes, the code is correct for all valid code points. I was first confused about the double shifts, since I have never seen them before, but they do their job well. Other authors typically do a single <code>&gt;&gt;</code> followed by a bit mask, e.g. <code>(codepoint &gt;&gt; 12) &amp; 0x3F</code> to skip the 12 bits to the right and take the next 6 bits. That way, the numbers can be verified more easily, since they are smaller. Plus, all the <code>01xxxxxx</code> bytes have the same bitmask.</p>

<p>Your code omits some validity checks:</p>

<ul>
<li><code>codepoint</code> could be <code>&lt; 0</code></li>
<li><code>codepoint</code> could be between <code>0xD800</code> and <code>0xDFFF</code></li>
</ul>

<p>Other than these, it is perfect.</p>

<p>I know for sure that this conversion is built-in into C#, I just don't know where. Try loading a file into a string using the UTF-8 encoding. During that loading, the built-in conversion code gets called.</p>
    </div>