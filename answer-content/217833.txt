<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Reducing Complexity</strong><br>
The first thing to do for reduced complexity is to break up the code into multiple functions. This would allow you to profile the code and see where it spends the most time. This also makes it easier to read, write and debug the code. There are possibly 5 functions in main. As programs get more complex it is generally better to limit the <code>main()</code> function to set up and clean up and do all other processing in sub functions.</p>

<p>This would be applying the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">Single Responsibility Principle</a> to the code which is the first pillar of <a href="https://en.wikipedia.org/wiki/SOLID" rel="nofollow noreferrer">SOLID</a> object oriented programming. The Single Responsibility Principle states <code>The single responsibility principle is a computer programming principle that states that every module, class, or function[1] should have responsibility over a single part of the functionality provided by the software ...</code></p>

<p><strong>Variable Names</strong><br>
Generally single character variable names make code harder to read and debug. It is unclear what the variables <code>t</code>, <code>n</code>, <code>q</code> or <code>m</code> are or do.</p>

<p><strong>Use Explict Casts</strong><br>
The line of code </p>

<pre><code>unsigned long int m = sqrt(n);
</code></pre>

<p>is an implicit cast and generates warning messages in some compilers. C++ attempts to be type safe and casts should be explict, in this particular case it would be better to use a <a href="https://en.cppreference.com/w/cpp/language/static_cast" rel="nofollow noreferrer">static_case</a>.</p>

<p><strong>Performance</strong><br>
It looks like this code checks all numbers in a range, there is no reason to process even numbers except for 2 since all even numbers greater than 2 can't be prime numbers because they are divisible by 2.</p>

<p><strong>Indentation</strong><br>
The code is improperly indented immediately after the <code>while</code> statement. This makes it much harder to read the code.</p>
    </div>