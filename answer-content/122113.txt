<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It looks about perfect.</p>

<p>You got the post increment wrong though:</p>

<pre><code>MapValueIterator&lt;K, V&gt; operator++(int) {
    return (*this)++;
}
</code></pre>

<p>I believe this goes into an infinite recursion.</p>

<p>Thus this is normally implemented as:</p>

<pre><code>MapValueIterator&lt;K, V&gt; operator++(int) {
    MapValueIterator&lt;K, V&gt;  result(*this);  // get a copy for return
                                            // so this can be used
                                            // unaltered in the expression

    // Now implement the current object.
    ++(*this);

    // Returned the saved copy.
    return result;
}
</code></pre>

<p>The only difference is that the <code>std::map&lt;K,V&gt;::iterator</code> type actually implements the <code>Bidirectional iterator</code> concept. The question is why is your iterator only implement the <code>Forward iterator</code> concept.</p>
    </div>