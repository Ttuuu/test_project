<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>snake_case</h2>
<p>The PEP8 standard is for these:</p>
<pre><code>getTargetFileNames
currentWorkingDir 
</code></pre>
<p>to be</p>
<pre><code>get_target_filenames
current_working_dir
</code></pre>
<p>and so on for your other functions and variable names.</p>
<h2>Fail-safe directory reversion</h2>
<pre><code>    os.chdir(currentWorkingDir)
</code></pre>
<p>should be in a <code>finally</code>, with the <code>try</code> after the first <code>chdir</code>. That said, you shouldn't be changing the working directory at all. Nothing in <code>getTargetFileNames</code> requires it.</p>
<h2><code>pathlib</code></h2>
<p>Use of <code>pathlib.Path</code> in nearly all of your directory and filesystem operations rather than <code>os</code> will make for a much cleaner program.</p>
<h2>Generators</h2>
<pre><code>       listOfSubtitleFileNames = list()
       for fileName in listOfFileNames:
           if fileName.endswith('.srt'):
               listOfSubtitleFileNames.append(fileName)
               zipObj.extract(fileName, self.tempStorageDir)
    return listOfSubtitleFileNames
</code></pre>
<p>first of all, "list of" can usually be dropped from variable names for legibility; <code>subtitle_filenames</code> is enough to know that it's an iterable. Second, <code>list()</code> can be replaced with <code>[]</code>. It would be even simpler as a list comprehension:</p>
<pre><code>subtitle_filenames = [
    fn for fn in filenames if fn.endswith('.srt')
]
for fn in subtitle_filenames:
    zip_obj.extract(fn, self.temp_storage_dir)
return subtitle_filenames
</code></pre>
<h2>String interpolation</h2>
<pre><code>    fileMetadataSummary = metadata['title'] + '.S' \
          + str(metadata['season']) + 'E' \
          + str(metadata['episode']) + '.' \
          + metadata['quality']
</code></pre>
<p>First, avoid <code>\</code> line continuation whenever possible. The way to avoid that here is parentheses. Also, this is well-suited to string interpolation:</p>
<pre><code>file_metadata_summary = (
    metadata['title'] +
    f'S{metadata["season"]}'
    f'E{metadata["episode"]}'
    f'.{metadata["quality"]}'
)
</code></pre>
<h2>Hard-coded paths</h2>
<pre><code>                    '/Users/st/Downloads',
                    '/Volumes/Untitled/Game of Thrones/Season 2',
                    '/tmp'
</code></pre>
<p>should not be hard-coded. It should be parametric, perhaps as a command-line parameter.</p>
    </div>