<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have no idea why you need this text file. Making it faster should be possible though.</p>

<p>Your current code allocates a StringBuilder and a String for every line. You can avoid this by allocating a single StringBuilder and modifying it using append and setSize. This will reduce the time spent in the garbage collector.</p>

<p>Printing an integer involves splitting it into digits, and that involves integer division, one of the slowest opcodes a processor provides. In your case you can avoid integer division by defining a class called StrInt that stores the integer as a character array and as the number itself. You would need to define methods like <code>add(n)</code> and <code>appendTo(StringBuilder)</code> and take care of the wraparound into the negative numbers.</p>

<p>Using these two techniques will make your code much longer (especially the unit test for the StrInt class should be large) and probably also quite fast.</p>

<p>Writing 55 GB in 1000 seconds means the write rate is already 55 MB/s, which is not the worst.</p>

<p>You should also write to a byte stream instead of a character stream to avoid the unnecessary conversion. Simply changing the encoding from UTF-8 to US-ASCII may already speed it up measurably.</p>
    </div>