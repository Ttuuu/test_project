<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd like to say a few words about the code:</p>

<ul>
<li><p>There is some duplicate functionality using the regular expressions to validate and split the string. IMO you should either </p>

<ul>
<li>drop the <code>preg_split</code> and instead modify the "main" regular expression so that you can use the <code>matches</code> array that it returns, or</li>
<li>first execute the split and then verify each sub-string separately.</li>
</ul></li>
<li><p>You could also use either again the <code>matches</code> array from the main regex or <code>$rrx</code> (which by the way is a bad variable name, if you need a comment to explain it)  to parse the roll tokens instead of using three new regular expressions.</p></li>
<li><p>The returned data could also be optimized:</p>

<ul>
<li><p>It's a bit pointless to return <code>$inputText</code> since it's identical to what the caller passed in. I'd either drop it, or at least return <code>$inputClean</code>, or even return a "normalized" string (for example, <code>1d6-1</code>, <code>+1d6-1</code> and <code>-1+1d6</code> could all return <code>1d6-1</code>), but that would require some additional work.</p></li>
<li><p>Also the function shouldn't return a hard coded (error) texts and HTML. Instead it should return an error code (<code>array('error' =&gt; $errorCode)</code>) and the data about the roll in a structured format that then can transformed into HTML (or an alternative format, for example BBCode) in a separate function/template.</p></li>
</ul></li>
<li><p>Generally the code could do with splitting up into more functions.</p></li>
</ul>

<p>Finally: I'm not a big fan of using <code>v</code>/<code>^</code> if this syntax is supposed to be user friendly for two reasons:</p>

<ul>
<li>It may not be obvious to all users that <code>v</code> is supposed to symbolize an arrow and they may wonder what the letter "v" stands for.</li>
<li>The character <code>^</code> isn't commonly used by an average user and maybe difficult to type on some (non-US) keyboard layouts where it's a <a href="https://en.wikipedia.org/wiki/Dead_key" rel="nofollow noreferrer">dead key</a>.</li>
</ul>
    </div>