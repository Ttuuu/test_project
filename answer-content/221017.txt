<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just an idea:</p>

<p>Define <code>FrameworkUser</code> as:</p>

<pre><code>  public class FrameworkUser&lt;TKey&gt; : IdentityUser&lt;TKey&gt; where TKey : IEquatable&lt;TKey&gt;
  {
    // Either you could do this, if ParentUserId is relying on ParentUser
    public virtual UserId&lt;TKey&gt;? ParentUserId =&gt; ParentUser != null ? ParentUser.Id : (UserId&lt;TKey&gt;?)null;

    //.. or this, if it is an independent value (Name changed for testing):
    public virtual UserId&lt;TKey&gt;? ParentId { get; set; }


    // for better understanding
    public virtual FrameworkUser&lt;TKey&gt; ParentUser { get; set; }
  }
</code></pre>

<p>where <code>UserId&lt;TKey&gt;</code> is defined as:</p>

<pre><code>  public struct UserId&lt;TKey&gt;
  {
    public UserId(TKey id)
    {
      Id = id;
    }

    public TKey Id { get; }

    public override string ToString()
    {
      return Id.ToString();
    }

    public static implicit operator TKey(UserId&lt;TKey&gt; userId) =&gt; userId.Id;
    public static implicit operator UserId&lt;TKey&gt;(TKey id) =&gt; new UserId&lt;TKey&gt;(id);
  }
</code></pre>

<p>Test cases:</p>

<pre><code>    FrameworkUser&lt;string&gt; stringUser = new FrameworkUser&lt;string&gt;();
    Console.WriteLine($"Witout Parent: {stringUser.ParentUserId}");
    Console.WriteLine($"Witout ParentId: {stringUser.ParentId}");
    stringUser.ParentUser = new FrameworkUser&lt;string&gt; { Id = "ParentId" };
    stringUser.ParentId = "Independent ParentId";
    Console.WriteLine($"With Parent: {stringUser.ParentUserId}");
    if (stringUser.ParentId != null)
      Console.WriteLine($"With ParentId: {stringUser.ParentId}");

    Console.WriteLine();
    FrameworkUser&lt;int&gt; intUser = new FrameworkUser&lt;int&gt;();
    Console.WriteLine($"Witout Parent: {intUser.ParentUserId}");
    Console.WriteLine($"Witout ParentId: {intUser.ParentId}");
    intUser.ParentUser = new FrameworkUser&lt;int&gt; { Id = 1234 };
    intUser.ParentId = 1234;
    Console.WriteLine($"With Parent: {intUser.ParentUserId}");
    if (intUser.ParentId != null)
      Console.WriteLine($"With ParentId: {intUser.ParentId}");
</code></pre>
    </div>