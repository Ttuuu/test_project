<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Joe Wallis gave a much better algorithm, so I'll just give more general notes.</p>

<p>Instead of defining <code>alphabet</code> manually, you could import from the <code>string</code> module.</p>

<pre><code>from string import ascii_lowercase as alphabet
</code></pre>

<p>You have a confusing pattern with <code>tmp_size</code>. The fact that you have to define <code>while tmp_size+1</code> is a red flag. It would be better to write <code>while tmp_size &gt;= 0</code>, which gives the same result. But also you don't need to use <code>while</code> loops to iterate over a set of numbers. <code>for i in range(size - 1, -1, -1)</code> will do what you want. </p>

<pre><code>for i in range(size - 1, -1, -1):
</code></pre>

<p>Now there's no need for <code>tmp_size</code>, just refer to <code>i</code> as the current size.</p>

<p>You're recreating the string line twice in this line of code:</p>

<pre><code>shape = hypens + new_line + hypens + "\n" + shape + "\n" + hypens + new_line + hypens
</code></pre>

<p>I recommend taking both the hyphen section and the algorithm and moving them to a new function</p>

<pre><code>def get_line(i, size):
</code></pre>

<p>This way it's neater and separated out. You can just call it once to get the current line, then add it to <code>shape</code> as necessary.</p>
    </div>