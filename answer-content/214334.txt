<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Generally good code - plus points for good use of stdout/stderr and exit status.</p>

<p>Shellcheck reported some issues:</p>

<pre class="lang-none prettyprint-override"><code>shellcheck -f gcc  214327.sh
214327.sh:4:19: warning: Expanding an array without an index only gives the first element. [SC2128]
214327.sh:4:19: note: Double quote to prevent globbing and word splitting. [SC2086]
214327.sh:31:61: note: Backslash is literal in "\1". Prefer explicit escaping: "\\1". [SC1117]
214327.sh:35:26: error: &gt; is for string comparisons. Use -gt instead. [SC2071]
</code></pre>

<p>Taking the first two, I'd simply use <code>$0</code> to reproduce the program name as it was invoked, rather than messing about with <code>basename</code> to modify it.  The other two appear to be mere typos in the code, and the fixes are obvious.</p>

<p>We might want to perform some sanity checks on <code>$recipient</code>; in any case, it's wise to indicate that it's an argument and not an option when invoking <code>sendmail</code>, by using <code>--</code> as a separator.</p>

<p>The repeated tests for <code>[[ -n $subject_length ]]</code> could be combined into a single block:</p>

<pre><code>sed_filters=()

if [[ -n $subject_length ]]
then
    if [[ $subject_length != +([0-9]) ]]
    then
        echo "Error: subject length must be a whole number"
        exit 1
    fi

    sed_filters+=( -e "s/^(Subject: .{1,$subject_length}).*/\\1/" )
fi

# other filters can go here
</code></pre>

<p>Instead of choosing between <code>sed</code> and <code>cat</code>, we could simplify by unconditionally using <code>sed</code>, even if we do no filtering, by priming the filters list with an empty command:</p>

<pre><code>sed_filters=(-e '')

# conditionally add to sed_filters

# now, filter the incoming email (on stdin) and pass to sendmail
sed -E "${sed_filters[@]}" | /usr/sbin/sendmail -oi -- "$recipient"
</code></pre>

<p><code>sed</code> with an empty program acts as <code>cat</code>.</p>

<p>The <code>sed</code> line may match body text as well as headers; we probably want to replace only the latter.  We can do that by adding an <em>address</em> prefix:</p>

<pre class="lang-sed prettyprint-override"><code>1,/^$/s/^(Subject: .{1,$subject_length}).*/\1/i
</code></pre>

<p>(Note that RFC-822 headers are specified case-insensitively, so let's take that into account, using <code>/i</code>).</p>
    </div>