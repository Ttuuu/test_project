<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The trim() function usage is OK.</p>

<p>The biggest problem here is a hash security. A permanent  <code>md5( rand(0,1000) );</code> hash is anything but security. It's so easily guessable that you can count it doesn't exist at all.</p>

<p>Password reminder hashes are generated per request, each time anew. And it should be something less predictable, <a href="http://php.net/manual/en/function.random-bytes.php" rel="nofollow noreferrer">http://php.net/manual/en/function.random-bytes.php</a> for example.</p>

<p>Other issues are so common that they made into my list of Top 10 PHP delusions:</p>

<ul>
<li><a href="https://phpdelusions.net/top#zero_error_reporting" rel="nofollow noreferrer">Empty try..catch is a big no-no</a>. Whatever your goal is, there are proper ways to achieve it.</li>
<li><a href="https://phpdelusions.net/top#empty" rel="nofollow noreferrer">If (isset($var) &amp;&amp; !empty($var))</a> is essentially a tautology. You can and should use only empty() in this case.</li>
<li><a href="https://phpdelusions.net/top#num_rows" rel="nofollow noreferrer">You don't really need to call rowCount()</a>. It does no harm if you do, but there is no reason. Better fetch the selected data, it can serve you as good as the number of rows.

<ul>
<li>besides, it makes the code in login.php a little bit more complicated that it could be. See my canonical example, <a href="https://phpdelusions.net/pdo_examples/password_hash" rel="nofollow noreferrer">Authenticating a user using PDO and password_verify()</a></li>
</ul></li>
</ul>

<p>There is also a strange code snippet in reset_password.php, checking the result of prepare to test the success of the previous query makes no sense. Besides, given your error reporting is right, there is no need to check for the success at all, just do your redirect right away:</p>

<pre><code>  $sql-&gt;bindValue(':email', $email);
  $sql-&gt;execute();
  $_SESSION['message'] = "Sua senha foi resetada com sucesso ^^";
  header("location: success.php");    
  exit;
</code></pre>

<p>it is also a very good habit to always add <code>exit</code> after every Location header call in your code, as a header itself doesn't mean thet the code execution has been stopped.</p>
    </div>