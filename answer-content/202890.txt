<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The simplest way would be to continue with inheritance here. That will give you MedicalStudent and EngineerStudent instead of using boolean fields on Student.</p>
<p>Then you do the same for benefits to avoid a lot of duplication in your code.</p>
<p>And lastly you can extract your conditions to separate methods until your logic will be super simple.</p>
<pre><code>if (eligibleForMedicalBenefits(p)) {  
    p.setBenefits(medicalBenefits);
}
</code></pre>
<p>Your classes can look like this.</p>
<blockquote>
<p>abstract class Person</p>
<p>class Student extends Person</p>
<p>class MedicalStudent extends Student</p>
<p>class EngineerStudent extends Student</p>
</blockquote>
<p>The same goes for Employed entity and Benefits.</p>
<p>After these changes are introduced the eligibility method will be super simple.</p>
<pre><code>public boolean eligibleForMedicalBenefits(Person p) {
    return ((p instanceof MedicalStudent) &amp;&amp; p.age &gt; 22);
}
</code></pre>
    </div>