<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Review</h2>

<p>Java is an object-oriented language, so I suggest you take advantage of that. I understand your main concern is to provide a solution to the problem, but a next step is to make it adhere to some quality attributes such as testibility, usability and readability. This way, you'll be able to write code that others can reuse and maintain.</p>

<hr>

<h3>Remarks</h3>

<ul>
<li>Algorithm logic is mixed with input parsing and output to end-user</li>
<li>Input file is fixed</li>
<li>No error handler provided (what if can't open file or bad input detected?)</li>
<li>Main method abused for creating the algorithm</li>
<li>No edge case handler provided (what if file is empty, what would <em>min</em>, <em>max</em>, <em>mean</em> be?)</li>
<li>No unit tests provided</li>
<li>Make variables that you don't change final. For instance, <code>final double mean = result / gradesString.size();</code></li>
<li>Fix intendations</li>
</ul>

<hr>

<h3>Proposed Changes</h3>

<ul>
<li>Split the current implementation into 3 methods: one for reading and parsing an input file, one for performing the algorithm and one for outputting results to the end-user.</li>
<li>Let main method call these 3 methods with a predefined input file and provide a simple error handler.</li>
<li>Create a custom class holding all the statistical results and return an instance of this class in the algorithm.</li>
<li>Provide unit tests for the algorithm for at least the happy path, but preferrably also for empty input.</li>
</ul>
    </div>