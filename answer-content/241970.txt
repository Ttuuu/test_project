<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In the few cases I've wanted C-style static variables, I've used a Class with a <code>__call__()</code> method:</p>

<pre><code>class Foo:
    a = 1
    b = 2

    def __call__(self):
        print(self.a, self.b)
foo = Foo()

foo()
</code></pre>

<p>Or, you could use a function decorator</p>

<pre><code>def staticvars(**vars):
    def f(func):
        for k,v in vars.items():
            setattr(func, k, v)
        return func
    return f

@staticvars(a=1,b=2)
def foo():
    print(foo.a, foo.b)
</code></pre>

<p>Or, under the idea "it's easier to get forgiveness than permission":</p>

<pre><code>def counter():
    try:
        counter.x += 1

    except AttributeError:
        counter.x = 1

    return counter.x


print(counter(), counter(), counter())   # prints: 1, 2, 3
</code></pre>
    </div>