<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Thumbs up for putting the operators in an object, here's some improvements i would suggest : </p>

<ul>
<li>There's a typo when user clicks on " = ", <code>show</code> instead of <code>howResult</code>.</li>
<li>in the <code>math_it_up</code> Object you don't need the <code>[]</code>.</li>
<li>I would Rename <code>Key</code> to <code>Pad</code> for better understanding.</li>
<li>use <code>val</code> instead of <code>e.target.value</code> ( in <code>onClick(val)</code> ) since you have the value in there.</li>
<li>add <code>radix parameter</code> to <code>parseInt</code> like : <code>parseInt(myVar, 10)</code> , or use the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Unary_plus" rel="nofollow noreferrer">Unary_plus</a> <code>+</code>.</li>
<li>no need for the <code>parseInt</code> in the <code>else</code> of <code>if(isNaN)</code>.</li>
<li>instead of <code>prevState.result ? prevState.result : null</code> you can do <code>prevState.result || null</code> to avoid repeating.</li>
<li><code>setState</code> is asynchronous : 
if you need to update the state with a value that depends on the <code>this.state</code>, it's better to pass a callback to <code>setState</code> instead of an object, <a href="https://medium.com/@baphemot/understanding-reactjs-setstate-a4640451865b" rel="nofollow noreferrer">see this post</a> for more details.</li>
</ul>

<p>Her's a snippet of what the code would look like with the changes :</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="true">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const math_it_up = {
  "+": function(x, y) {    
    return x + y;
  },
  "-": function(x, y) {
    return x - y;
  },
  "*": function(x, y) {    
    return x * y;
  },
  "/": function(x, y) {
    return x / y;
  }
};

class App extends React.Component {
  state = {
    result: 0,
    operator: "",
    currentNum: "",
    show: 0
  };

  onClick = elem =&gt; {
    if (isNaN(elem)) {
      if (elem === "=") {
        this.setState( prevState =&gt; ({          
          show: prevState.result
        }));
      } else {
        this.setState(prevState =&gt; ({
          operator: elem,
          show: prevState.result || null
        }));
      }
    } else {
      if (!this.state.currentNum) {
        this.setState({
          currentNum: elem,
          result: elem,
          show: elem
        });
      } else {
        if (this.state.operator) {
          this.setState(prevState =&gt; ({
            currentNum: elem,
            result: math_it_up[this.state.operator](prevState.result, elem),
            show: elem
          }));
        }
      }
    }
  };

  render() {
    return (
      &lt;div&gt;
        &lt;Pad onClick={this.onClick} /&gt;
        &lt;h1&gt;{this.state.show}&lt;/h1&gt;
      &lt;/div&gt;
    );
  }
}

const Pad = ({ onClick }) =&gt; {
  const renderNumbers = () =&gt; {
    const arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
    return arr.map(val =&gt; {
      return (
        &lt;button key={val} name={val} onClick={() =&gt; onClick(val)}&gt;
          {val}
        &lt;/button&gt;
      );
    });
  };

  const renderCalculationKeys = () =&gt; {
    const arr = ["+", "-", "/", "*", "="];
    return arr.map(val =&gt; {
      return (
        &lt;button key={val} name={val} onClick={() =&gt; onClick(val)}&gt;
          {val}
        &lt;/button&gt;
      );
    });
  };

  return (
    &lt;div&gt;
      {renderNumbers()}
      {renderCalculationKeys()}
    &lt;/div&gt;
  );
};

ReactDOM.render(&lt;App /&gt;, document.getElementById("root"));</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/16.6.3/umd/react.production.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.6.3/umd/react-dom.production.min.js"&gt;&lt;/script&gt;
&lt;div id="root"&gt;&lt;/div&gt;</code></pre>
</div>
</div>

    </div>