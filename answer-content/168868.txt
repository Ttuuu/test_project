<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are already using quite a lot of ES6 features (<code>const</code>, arrow functions, <code>Array.prototype.find</code>, etc)</p>

<p>Here's a few more places you could use some ES6 features:</p>

<h3><code>Array.prototype.findIndex</code> / <code>Array.prototype.filter</code></h3>

<p>Inside <code>removeProduct</code> you are finding the product that has the same id as <code>product_id</code> and then finding the index of that through <code>indexOf</code> - this can be simplified through <code>findIndex</code>:</p>

<p><code>const index = products.findIndex(p =&gt; p.id === product_id)</code></p>

<p>Alternatively, we could just filter products and not worry about the index altogether:</p>

<p><code>products = products.filter(product =&gt; product.filter !== product_id)</code></p>

<h3><code>Array.from</code> / <code>...</code></h3>

<p>You can use <code>Array.from</code> or the spread operator to convert the <code>NodeList</code> instead of <code>[].slice.call</code>:</p>

<p><code>Array.from(productsTable.children).slice(1).forEach(...)</code></p>

<p>Or, using spread operator:</p>

<p><code>[...productsTable.children].slice(1).forEach(...)</code></p>

<h3>Arrow function over bind</h3>

<p>In my opinion, the following is easier to read than using <code>bind</code>:</p>

<p><code>deleteButton.addEventListener('click', () =&gt; removeProduct(product.id))</code></p>

<h3>Non ES6/General comments</h3>

<p>More generally, I'd recommend being consistent with your style of camel case and renaming to <code>productId</code></p>

<p>I find not abbreviating variable names helps avoid context switch. It's quite clear that <code>desc</code> is description but using <code>p</code> for <code>product</code> can become not so obvious once your codebase increases.</p>
    </div>