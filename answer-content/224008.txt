<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Three initial points:</p>

<ol>
<li>Always use <code>Option Explicit</code> at the top of the module. Always!</li>
<li>Properly indent your code to help with readability and exposure of some of the logic.</li>
<li><a href="https://stackoverflow.com/questions/10714251/how-to-avoid-using-select-in-excel-vba">Avoid using <code>.Activate</code> and <code>.Select</code> in your code</a>. It is not necessary unless you want to bring something to the user's attention.</li>
</ol>

<p>You have <code>d</code>, <code>x</code>, <code>y</code>, <code>z</code> but no real understand what they mean. Particularly <code>d</code>, which is not used anywhere except to be incremented!</p>

<p>Taking these points into account, you end up with:</p>

<pre><code>Sub automateCpu()
Dim noofComps As Long
Dim test as Range
Dim testS as Range
Dim test1 as Range
    set test1 = Worksheets("Test1").Range("A1")
    noOfComps = testRange.CurrentRegion.Rows.Count-1
Dim x As Long
    x = 0
Dim d As Integer
    d = 0
    Do While x &gt; noOfComps
        Set test1 = test1.Offset(1,0)
        Dim curComputer As String
        curComputer = testRange.Value
        Dim test1Row As Integer
        d = d + 1
        test1Row = test1.Row
        Dim testS as Range 
        Set testS = Sheets("TestS").Range("A1") ' Why "Sheets" instead of "Worksheets" as in the other case? Consistency!
        Dim y As Integer
        y = 0
        Dim z As Integer
        z = 0
        Dim LastRowSummary As integer
        LastRowSummary = testS.CurrentRegion.Rows.Count - 1
        Do While y &lt; LastRowSummary
            Set testS = testSRange.Offset(1, 0)
            If testS.Value = curComputer Then
                z = 1
                Dim SummaryRow As Integer
                SummaryRow = testS.Row
                Set test1 = Sheets("Test1").Range("B" &amp; test1Row)
              Dim curLogValue As Integer
              curLogValue = test1.Value

              Set testS = Sheets("TestS").Range("B" &amp; SummaryRow)
              testS.Value = curLogValue

              Set test1 = Sheets("Test1").Range("A" &amp; test1Row)
              Exit Do
         End If
         y = y + 1
      Loop

      If z = 0 Then
         d = d + 1
         set test1 = test1.Offset(1, 0)
         test1.Value = curComputer
         SummaryRow = test1.Row


         set test1 = Sheets("Test1").Range("B" &amp; test1Row)
         Dim curLogValue As Integer
         curLogValue = test1.Value

         Set testS = Sheets("TestS").Range("B" &amp; SummaryRow)
         testS.Value = curLogValue

         Set test1 = Sheets("Test1").Range("A" &amp; test1Row)
      End If
      z = 0
      d = d + 1
      x = x + 1
   Loop
   End Sub
</code></pre>

<p>But, looking at the code, you can see that there is a lot of shuffling of data into temporary variables. We can also clean this up with direct assignments.</p>

<pre><code>Sub automateCpu()
Dim noofComps As Long
Dim test as Range
Dim testSA as Range
Dim test1A as Range
Dim testSB as Range
Dim test1B as Range
    set test1A = Worksheets("Test1").Range("A1")
    noOfComps = testRange.CurrentRegion.Rows.Count-1
Dim x As Long
    x = 0
    Do While x &gt; noOfComps
        Set test1A = test1A.Offset(1,0)
        Dim curComputer As String
        curComputer = testRange.Value
        Dim test1Row As Integer
        test1Row = test1A.Row
        Set testSA = Sheets("TestS").Range("A1") ' Why "Sheets" instead of "Worksheets" as in the other case? Consistency!
        Dim y As Integer
        y = 0
        Dim z As Integer
        z = 0
        Dim LastRowSummary As integer
        LastRowSummary = testS.CurrentRegion.Rows.Count - 1
        Do While y &lt; LastRowSummary
            Set testSA = testSRange.Offset(1, 0)
            If testSA.Value = curComputer Then
                z = 1
                Dim SummaryRow As Integer
                SummaryRow = testSA.Row
                Set test1B = Sheets("Test1").Range("B" &amp; test1Row)
                Set testSB = Sheets("TestS").Range("B" &amp; SummaryRow)
                testSB.Value = test1B.Value

                Set test1A = Sheets("Test1").Range("A" &amp; test1Row)
                Exit Do
            End If
            y = y + 1
         Loop

         If z = 0 Then
             set test1A = test1A.Offset(1, 0)
             test1.Value = curComputer
             SummaryRow = test1A.Row

             set test1B = Sheets("Test1").Range("B" &amp; test1Row)
             Set testSB = Sheets("TestS").Range("B" &amp; SummaryRow)
             testSB.Value = test1B.Value

             Set test1A = Sheets("Test1").Range("A" &amp; test1Row)
         End If
         z = 0
         x = x + 1
     Loop
End Sub
</code></pre>

<p>Probably still some tidying up to do - but this gives the idea.</p>
    </div>