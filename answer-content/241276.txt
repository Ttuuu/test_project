<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There will certainly be users that can review your javascript operations better than me, so I'll only review the php.</p>

<ul>
<li>When checking for the existence of substrings at the start of your input string, you are calling too many functions and using verbose techniques -- <code>strpos()</code> will do just fine, there's no need to count substring lengths.</li>
<li>Always use curly braces to avoid mistakes about how many lines of code following the condition should be executed.  </li>
<li>Give your users specific advice about which browsers you feel are "proper". IOW, remove the ambiguity by explicitly stating which browsers are acceptable.</li>
<li>In accordance with php coding standards, using appropriate spacing.</li>
</ul>

<p>Revision:</p>

<pre><code>$browser = $_SERVER['HTTP_USER_AGENT'];
if (strpos($browser, 'Opera') !== 0 &amp;&amp; strpos($browser, 'Mozilla/5.0') !== 0) {
    exit("Please access this URL with a proper browser!\n");
}
</code></pre>

<hr>

<p>Much of the above advice applies here as well:</p>

<pre><code>if (strpos($player," ") || strpos($player,"&lt;") || strpos($player,"&gt;") ||
    strpos($player,"&amp;") || strpos($player,"\t") || strpos($player,"&amp;gt;")
    || strlen($player)==0)
        $player="anonymous";
</code></pre>

<p>...but also, these checks will permit characters in the first position which should be forbidden because you are performing a loose comparison upon the return value of <code>strpos()</code>.  IOW, if the the first character of the player's name is <code>&lt;</code>, the return value is <code>0</code> (which is falsey) and that will not be "caught" by your condition.</p>

<p>If the goal is to fallback to <code>anonymous</code> if the player name is empty or contains any characters in this list: <code>&lt;,&gt;,&amp;,\t, &amp;gt;</code>, perhaps a single regex call will tidy up the expression.  Logically, <code>&amp;</code> will also catch <code>&amp;gt;</code>. (<a href="https://3v4l.org/gOKjq" rel="nofollow noreferrer">Demo</a>)</p>

<pre><code>if (!preg_match('~^[^ &lt;&gt;&amp;\t]+$~', $player)) {
    $player = 'anonymous';
}
</code></pre>

<p>This will require that the player name consists of 1 or more valid characters, otherwise <code>anonymous</code> will be applied.  If you want to consider only allowing alphanumeric characters, it will be simpler to call <code>if (!ctype_alnum($player)) { $player = 'anonymous'; }</code></p>
    </div>