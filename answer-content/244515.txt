<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Constant parameters</h2>
<pre><code>parser::tokenize(string expr){
</code></pre>
<p>would be better off as</p>
<pre><code>parser::tokenize(const string &amp;expr) {
</code></pre>
<p>Similarly for <code>pre_process_trig_and_constants</code>, which should use an intermediate variable for the reassignment statements in that function.</p>
<h2>Encapsulation</h2>
<pre><code>toks_and_ops res ={toks,ops};
</code></pre>
<p>Rather than structures that don't know how to initialize themselves - such as this <code>toks_and_ops</code> - I would sooner see a constructor for this <code>toks_and_ops</code> as class that accepts a <code>const string &amp;expr</code> and does most of what <code>tokenize</code> is doing now.</p>
<h2>ASCII symbols</h2>
<pre><code>if((current_char&lt;58 &amp;&amp; current_char&gt;44) &amp;&amp; current_char != 47){
</code></pre>
<p>is very difficult to understand and maintain. Given that you say you're already assuming ASCII, as long as your compiler is <a href="https://stackoverflow.com/questions/6794590/how-does-file-encoding-affect-c11-string-literals">configured to also apply ASCII to literals</a>, you should just be using character literals like <code>'.'</code> .</p>
<h2>For-loop</h2>
<pre><code>int current_index=0;

while(current_index&lt;len){
    // ...

    current_index++;
}
</code></pre>
<p>should just be</p>
<pre><code>for (int current_index = 0; current_index &lt; len; current_index++) {
</code></pre>
    </div>