<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Not as clean as it could be, some code duplication, and there's also some state mutation in your <code>addMovie</code> function.</p>
<h1>Issues</h1>
<ol>
<li><code>movies.push(movie);</code> mutates the current state object.</li>
<li><code>checkForDuplicate</code> isn't a clear name, i.e. checking for duplicates is clear, but what is the return value?</li>
<li>Using <code>isMovieDuplicate</code> as the negation of the result from <code>checkForDuplicate</code> is completely counter-intuitive and confusing.</li>
<li>When adding data to current state and computing the next state, a functional state update should really be used.</li>
<li>Ternary logic could be reduced/simplified.</li>
<li>Handle side-effect of persisting to local storage in the component as an "effect" of updating the <code>movies</code> state.</li>
</ol>
<h1>Suggestions</h1>
<ol>
<li>Use a functional state update and shallow copy of current state in order to not mutate current state and correctly enqueue state updates.</li>
<li>Change <code>checkForDuplicate</code> to <code>checkIsDuplicate</code> to make it more clear the return value is likely a boolean (by <code>isXXX</code> naming convention) and will be true if it is a duplicate.</li>
<li>Remove <code>isMovieDuplicate</code> and use <code>checkIsDuplicate</code> directly in conditional test.</li>
<li>Remove the ternary. Assume duplicate failure, only update if not a duplicate and adding to movie array.</li>
<li>Use an <code>useEffect</code> hook to persist to localStorage (and eventually to DB).</li>
</ol>
<p>Code</p>
<pre><code>const addMovie = (movie: IMovie) =&gt; {
  let message = 'is already added to your watchlist.';
  let variant = 'warning';

  if (!checkIsDuplicate(movies, movie)) {
    setMovies(movies =&gt; sortMovieList([...movies, movie]));
    message = 'has been added to your watchlist.';
    variant = 'success';
  }

  displaySnackbar(`${movie.original_title} ${message}`, { variant });
};

useEffect(() =&gt; {
  addMovieToLocalStorage(movies);
}, [movies]);
</code></pre>
    </div>