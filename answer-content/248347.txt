<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Insertion sort allows a little known optimization. As coded, each iteration of an inner loop performs <em>two</em> comparisons: <code>j &gt; 0</code> and <code>data[j - 1] &gt; test_value</code>. It is possible to get away with <em>one</em>:</p>
<pre><code>if (test_value &lt; data[0]) {
    // No need to compare data anymore. Just shift.
    for (j = i; j &gt; 0; j--) {
        data[j] = data[j - 1];
    }
} else {
    // No need to check for indices anymore. data[0] is a natural sentinel.
    while (data[j - 1] &gt; test_value) {
        data[j] = data[j - 1];
        --j;
    }
}
data[j] = test_value;
</code></pre>
<p>As a <strong>no naked loops</strong> mantra dictates, the loops shall be refactored into function, <code>shift</code> and <code>unguarded_insert</code> respectively.</p>
<p><sub>To be clear, <a href="https://stackoverflow.com/users/3403834/user58697">user58697</a> who commented on <a href="https://stackoverflow.com/a/63542585/3403834">John Bollinger's answer</a> to the linked question is me.</sub></p>
    </div>