<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with Adam, that you shouldn't use a List of Lists of Lists internally. An ArrayList is useful, if you need to change the number of elements, but for a fixed size as here, it would be much easier to use a two-dimensional array. Using an ArrayList for multiple entities at a position is fine for now (*), because the number of entites change.</p>

<p>(*) Later it may be more performant to use something else.</p>

<pre><code>private List&lt;Entity&gt;[][] positions;

public Field(int height, int width, boolean multipleEntitiesOnPosition) {
    this.height = height;
    this.width = width;

    positions = new List&lt;Entity&gt;[height][width];

    // ...
}
</code></pre>

<p>Unless you know you'll have at least one entity at almost every position, it also make sense not to initalize the List of entites until needed:</p>

<pre><code>public void addEntity(Entity entity, int x, int y) {

   // ...

   if (positions[y][x] == null) {
     positions[y][x] = new ArrayList&lt;Entity&gt;();
   }

   // ...

   positions[y][x].add(entity);

   //

}
</code></pre>

<hr>

<p>The biggest problem currently is your use of System.err to write error messages. If this is just placeholder, then that would make your question off topic, so for now I'll assume that it's "real" :)</p>

<p>Checking validity of the coordinates is pointless here. If the given coordinates are wrong, then you have a problem in the rest of the code anyway, so you just as well can have it run into an <code>IndexOutOfBoundsException</code>.</p>

<p>And in the other error cases there is no way for the calling code to know what went wrong, so instead of writing a pointless error message return an error code.</p>
    </div>