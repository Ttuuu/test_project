<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Path management</h2>

<p>This:</p>

<pre><code>directory + '\\' + file_name
</code></pre>

<p>would be better represented by a <code>Path</code>:</p>

<pre><code>from pathlib import Path
# ...

def refresh(path: Path):
    # ...
    xlbook = xlapp.Workbooks.Open(str(path))

# ...

# Refresh the main data file
refresh(Path(data_folder) / chdna_data_file)
</code></pre>

<p>Also, this:</p>

<pre><code># Data location and file name
data_folder = os.getcwd()
backup_folder = data_folder + '\\backup'
</code></pre>

<p>can be</p>

<pre><code># Data location and file name
backup_folder = Path.cwd() / 'backup'
</code></pre>

<p>and similarly for</p>

<pre><code>os.rename(backup_folder + '\\' + old + '_copy.xlsx', backup_folder + '\\' + old)
</code></pre>

<h2>Set lookup</h2>

<p><code>stopword_list</code> should be a set, i.e.</p>

<pre><code>stopwords = {'SP', 'S', 'SPZOO', 'ZOO', 'OO', 'POLSKA', 'SPZ', 'Z', 'A', 'AKCYJNA', 'SPOLKA', 'KOMANDYTOWA', 'SPK', 'SK', 'K', 'O', 'SA', 'SJ', 'SPJ', 'J', 'JAWNA'}
</code></pre>

<p>This allows for efficient O(1) instead of O(n)-time lookup.</p>

<h2>Generator materialization</h2>

<p>Drop the inner brackets here:</p>

<pre><code>text_nopunct = ''.join([char.upper() for char in text if char not in string.punctuation])
</code></pre>

<p>so that the generator goes straight to the <code>join</code> without first being saved to an in-memory list.</p>

<p>For the same reason,</p>

<pre><code>tokens_no_stopwords = [word for word in tokens if word not in stopword_list]
</code></pre>

<p>should use parentheses instead of brackets.</p>

<h2>String interpolation</h2>

<pre><code>old = disti + '_marketshare_' + two_months_ago + '.xlsx'
</code></pre>

<p>can be</p>

<pre><code>old = f'{disti}_marketshare_{two_months_ago}.xlsx'
</code></pre>

<h2>Global code</h2>

<p>Pull everything after</p>

<pre><code># Define timeframes
</code></pre>

<p>into one or more functions.</p>
    </div>