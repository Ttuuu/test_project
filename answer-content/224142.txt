<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>UTF-8 Verification .NET</h2>

<blockquote>
  <p><em>Bonus question: Is there an build in way to do that?</em></p>
</blockquote>

<p>There is a built-in way to encode an unicode code point to UTF-8. I have checked some of the results against the <a href="https://en.wikipedia.org/wiki/UTF-8#Description" rel="nofollow noreferrer">UTF-8 Specification 2003</a>, and I believe this method complies to it. Another interesting link is the <a href="https://referencesource.microsoft.com/#mscorlib/system/text/utf8encoding.cs,c18e1492beee78eb" rel="nofollow noreferrer">UTF8Encoding Reference Source</a> to see how this encoding works.</p>

<pre><code>private byte[] CodePointToUtf8_BuiltIn(int codepoint)
{
    return new UTF8Encoding(true).GetBytes(new[] { (char)codepoint });
}
</code></pre>

<p>If we loop through the code points and filter out surrogates, we get some discrepancies between your algorithm and the built-in one.</p>

<pre><code>internal const char HIGH_SURROGATE_START = '\ud800';
internal const char HIGH_SURROGATE_END = '\udbff';
internal const char LOW_SURROGATE_START = '\udc00';
internal const char LOW_SURROGATE_END = '\udfff';        

for (int i = 0; i &lt;= 0x10FFFF; i++)
{
    if (i &gt;= HIGH_SURROGATE_START &amp;&amp; i &lt;= HIGH_SURROGATE_END) continue;
    if (i &gt;= LOW_SURROGATE_START &amp;&amp; i &lt;= LOW_SURROGATE_END) continue;

    var op = CodePointToUtf8(i);
    var net = CodePointToUtf8_BuiltIn(i);
    CollectionAssert.AreEqual(net, op);
}
</code></pre>

<p>Here's a way to display the differences</p>

<pre><code>var builder = new StringBuilder();
builder.AppendLine("0x" + i.ToString("X4"));
builder.AppendLine(string.Join(" - ", op.Select(x =&gt; Convert.ToString(x, 2).PadLeft(8, '0'))));
builder.AppendLine(string.Join(" - ", net.Select(x =&gt; Convert.ToString(x, 2).PadLeft(8, '0'))));
var text = builder.ToString();
</code></pre>

<p>And some differences</p>

<pre><code>0x00A0
11000010 - 11100000
11000010 - 10100000

0x0400
11110000 - 10000000
11010000 - 10000000

0x0720
11111100 - 11100000
11011100 - 10100000

..
</code></pre>

<p>Could you explain the differences?</p>
    </div>