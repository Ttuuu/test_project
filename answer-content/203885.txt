<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>General Feedback</h2>

<p>The carousel appears to work acceptably. The code is a bit scattered. Consider the variable <code>activeIdx</code>. It appears to be set in the click handler and referenced in the function <code>setActiveSlide()</code> as a global variable - not as a parameter, but in <code>slideUpDown()</code> it is a parameter.</p>

<p>I'm not convinced the promise queue is absolutely necessary. Perhaps a simple <a href="https://davidwalsh.name/javascript-debounce-function" rel="nofollow noreferrer">debounced function</a> would suffice. </p>

<p>And there are a lot of repeated DOM queries - remember those are not cheap! Especially in the function <code>advanceFunc()</code>. Instead of querying the DOM so many times, it would be better to store the list items (A.K.A. <code>bullets</code>) in a variable after they are added and re-use them in <code>advanceFunc()</code>. <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Remainder_()" rel="nofollow noreferrer">Modulus division</a> can then be used to determine the next index.</p>

<h2>Specific critique</h2>

<h3>bullet creation</h3>

<p>The name of the variable <code>bullets</code> is a bit misleading for a single element. A singular name like <code>bullet</code> would be more appropriate.</p>

<p>And to create each bullet, the <a href="http://api.jquery.com/jQuery/#jQuery2" rel="nofollow noreferrer">jQuery function</a> could be used. So instead of manually constructing the HTML for the list items:</p>

<blockquote>
<pre><code>var bullets = '&lt;li&gt;&lt;a href="#"&gt;' + i + '&lt;/a&gt;&lt;/li&gt;';
if (i == 0) {
  // active bullet
  var bullets = '&lt;li class="activeSlide"&gt;&lt;a href="#"&gt;' + i + '&lt;/a&gt;&lt;/li&gt;';
</code></pre>
</blockquote>

<p>use <code>$('&lt;li&gt;')</code> for the bullet and <a href="http://api.jquery.com/html" rel="nofollow noreferrer">.html()</a> to set the inner HTML:</p>

<pre><code>var bullet = $('&lt;li&gt;').html('&lt;a href="#"&gt;' + i + '&lt;/a&gt;');
</code></pre>

<p>Then the class name can be added via <a href="http://api.jquery.com/addclass" rel="nofollow noreferrer"><code>.addClass()</code></a></p>

<pre><code>if (i == 0) {
  $(slides[0]).addClass('active');
  bullet.addClass('activeSlide');
</code></pre>

<p>That way the inner HTML is only specified once.</p>

<h3>Shuffle function return value unused</h3>

<p>There is no need to return <code>slides</code> at the end of <code>shuffle()</code>:</p>

<blockquote>
<pre><code>return slides;
</code></pre>
</blockquote>

<p>This is because the return value is not assigned to anything (unless you intended for that to be the case):</p>

<blockquote>
<pre><code>shuffle(slides);
</code></pre>
</blockquote>

<h2>Rewrite</h2>

<p>See the modified code below. It doesn't use the queue or promises at all, and as far as I can tell maintains the same functionality. I also made <code>previousIdx</code> and <code>activeIdx</code> variables outside the functions instead of parameters. Because of this, I wrapped the whole thing in an <a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE" rel="nofollow noreferrer">IIFE</a> to avoid adding those variables to the global scope.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>$(function() {
  var $elm = $('.slider'),
    $slidesContainer = $elm.find('.slides-container'),
    slides = $slidesContainer.children('a'),
    slidesCount = slides.length,
    slideHeight = $(slides[0]).find('img').outerHeight(false),
    animationspeed = 1500,
    animationInterval = 7000;

  var activeIdx = 0;
  var previousIdx = 0; // First slide
  var shuffle = function(slides) {
    var j, x, i;
    for (i = slides.length - 1; i &gt; 0; i--) {
      j = Math.floor(Math.random() * (i + 1));
      x = slides[i];
      slides[i] = slides[j];
      slides[j] = x;
    }
    return slides;
  }
  shuffle(slides);

  // Set (initial) z-index for each slide
  var setZindex = function() {
    for (var i = 0; i &lt; slidesCount; i++) {
      $(slides[i]).css('z-index', slidesCount - i);
    }
  };
  setZindex();

  var setActiveSlide = function() {
    $(slides).removeClass('active');
    $(slides[activeIdx]).addClass('active');
    $(bullets).removeClass('activeSlide');
    $(bullets[activeIdx]).addClass('activeSlide');
  };

  function showSlideAtActiveIndex(resetInterval) {
    setActiveSlide();
    slideUpDown(); //previousIdx, activeIdx);
    previousIdx = activeIdx;
  }

  var advanceFunc = function() {
    activeIdx = ++activeIdx % slidesCount;
    showSlideAtActiveIndex();
  }

  var autoAdvance = setInterval(advanceFunc, animationInterval);

  //Set slide height
  $(slides).css('height', slideHeight);

  // Append bullets
  if (slidesCount &gt; 1) {
    /* Prepend the slider navigation to the slider
       if there are at least 2 slides */
    $elm.prepend('&lt;ul class="slider-nav"&gt;&lt;/ul&gt;');

    // make a bullet for each slide
    for (var i = 0; i &lt; slidesCount; i++) {
      var bullet = $('&lt;li&gt;').html('&lt;a href="#"&gt;' + i + '&lt;/a&gt;');
      if (i == 0) {
        bullet.addClass('activeSlide');
        // active bullet
        // active slide
        $(slides[0]).addClass('active');
      }
      $('.slider-nav').append(bullet);
    }
  };
  var bullets = $('.slider-nav li');

  var slideUpDown = function() {
    $(slides).not(slides[previousIdx]).css('top', slideHeight);
    // then animate to the next slide
    $(slides[activeIdx]).animate({
      'top': 0
    }, animationspeed);
    $(slides[previousIdx]).animate({
      'top': "-100%"
    }, animationspeed, 'swing');
  };

  $('.slider-nav a').on('click', function(event) {
    var clickedIdx = $(this).text();
    if ($(slides[clickedIdx]).hasClass("active")) {
      return false;
    }
    activeIdx = clickedIdx;
    showSlideAtActiveIndex(); 
    clearInterval(autoAdvance);
    setTimeout(function() {
      autoAdvance = setInterval(advanceFunc, animationInterval);
    }, animationInterval);
  });
});</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>body * {
  box-sizing: border-box;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
}

.slider {
  width: 100%;
  height: 300px;
  position: relative;
  overflow: hidden;
}

.slider .slider-nav {
  text-align: center;
  position: absolute;
  padding: 0;
  margin: 0;
  left: 10px;
  right: 10px;
  bottom: 2px;
  z-index: 10;
}

.slider .slider-nav li {
  display: inline-block;
  width: 20px;
  height: 4px;
  margin: 0 1px;
  text-indent: -9999px;
  overflow: hidden;
  background-color: rgba(255, 255, 255, .5);
}

.slider .slider-nav a {
  display: block;
  height: 4px;
  line-height: 4px;
}

.slider .slider-nav li.activeSlide {
  background: #fff;
}

.slider .slider-nav li.activeSlide a {
  display: none;
}

.slider .slider-container {
  width: 100%;
  text-align: center;
}

.slider .slides-container a {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

.slider .slides-container img {
  transform: translateX(-50%);
  margin-left: 50%;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"&gt;&lt;/script&gt;

&lt;div class="container"&gt;
  &lt;div class="slider"&gt;
    &lt;div class="slides-container"&gt;
      &lt;a href="#"&gt;
        &lt;img src="https://picsum.photos/1200/300/?gravity=east" alt=""&gt;
      &lt;/a&gt;
      &lt;a href="#"&gt;
        &lt;img src="https://picsum.photos/1200/300/?gravity=south" alt=""&gt;
      &lt;/a&gt;
      &lt;a href="#"&gt;
        &lt;img src="https://picsum.photos/1200/300/?gravity=west" alt=""&gt;
      &lt;/a&gt;
      &lt;a href="#"&gt;
        &lt;img src="https://picsum.photos/1200/300/?gravity=north" alt=""&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>

    </div>