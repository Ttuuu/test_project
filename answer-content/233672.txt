<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The second half of your code is inefficient, as it computers <code>is_win(b)</code> unnecessarily. It can be written as:</p>

<pre class="lang-py prettyprint-override"><code>    if is_win(moves[::2]):
        return 'A'
    elif is_win(moves[1::2]):
        return 'B'
    elif len(moves) == 9:
        return 'Draw'
    else:
        return 'Pending'
</code></pre>

<p>This removes the redundant <code>not a and not b</code>, the redundant parentheses and the redundant computation of <code>is_win</code> in case A has won already.</p>

<p>When I saw <code>is_win</code> for the first time, I didn't understand it.</p>

<ul>
<li>Maybe my chances had been better if you renamed <code>d1</code> to <code>diag1</code>.</li>
<li>You could also write <code>diag1</code> and <code>diag2</code> on separate lines, to align their coordinates vertically.</li>
<li>You could also inline the <code>diag1</code> and <code>diag2</code> so that you don't need a name for them at all.</li>
</ul>

<p>I'm thinking of:</p>

<pre class="lang-py prettyprint-override"><code>def is_win(pos: List[List[int]]) -&gt; bool:
    pos = set(tuple(i) for i in pos)
    horiz = 3 in Counter(r for r, _ in pos).values()
    verti = 3 in Counter(c for _, c in pos).values()
    diag1 = not (set([(0, 0), (1, 1), (2, 2)]) - pos)
    diag2 = not (set([(0, 2), (1, 1), (2, 0)]) - pos)
    return horiz or verti or diag1 or diag2
</code></pre>

<p>To avoid unnecessary computations here as well, you can let your IDE inline the variables except for <code>pos</code>.</p>

<p>Instead of <code>not (set1 - set2)</code>, the expression <code>set1.issubset(set2)</code> is clearer because it avoids the confusing <code>not</code>:</p>

<pre class="lang-py prettyprint-override"><code>    diag1 = {(0, 0), (1, 1), (2, 2)}.issubset(pos)
    # or:
    diag1 = {(0, 0), (1, 1), (2, 2)} &lt;= pos
</code></pre>

<p>Or you could make checking the diagonals similar to horizontal and vertical:</p>

<pre class="lang-py prettyprint-override"><code>    diag1 = 3 in Counter(r - c for r, c in pos).values()
    diag2 = 3 in Counter(r + c for r, c in pos).values()
</code></pre>
    </div>