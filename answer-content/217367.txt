<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To see for yourself how efficient these algorithms are, you can simply add some counters in the code paths:</p>

<pre><code>let assignments = 0;
let additions = 0;
let multiplications = 0;

const add = (a, b) =&gt; {
    additions++;
    return a + b;
};
</code></pre>

<p>And in your algorithms, just increment these counters in the correct places.</p>

<p>To check whether the exponentiation is efficient, <code>pow(3, 10)</code> should use less than 10 multiplications.</p>

<pre><code>pow(3, 10)
= pow(3, 5) ** 2
= (pow(3, 4) * 3) ** 2
= ((pow(3, 2) ** 2) * 3) ** 2
= (((pow(3, 1) ** 2) ** 2) * 3) ** 2
= (((3 ** 2) ** 2) * 3) ** 2
</code></pre>

<p>That's 4 multiplications instead of 10.</p>

<p>In this example I intentionally use 3 as the base in order to avoid confusion between the 2 from the base and the 2 from the squaring.</p>
    </div>