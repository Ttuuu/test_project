<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This post on Stack Overflow explains why you are getting the wrong years.</p>

<p><a href="https://stackoverflow.com/questions/37766353/pandas-to-datetime-parsing-wrong-year">https://stackoverflow.com/questions/37766353/pandas-to-datetime-parsing-wrong-year</a></p>

<p>Based on your code all of the two digit years in your data set will be converted to 19XX years. The only problem I can see is that if your data set includes dates across both centuries ( 19XX and 20XX) you'll end up forcing anything that should be 20XX to be 19XX the way you have it written. If your data set has dates in both centuries I'd recommend preprocessing your date strings to make them unambiguous (change 16MAR39 to 16MAR1939). This will require additional information from another tag in your data set if you've got it. </p>

<p>To your specific questions: </p>

<ol>
<li>Since the data is ambiguous there isn't a way to get it right the
first time.  If you preprocess the data then it should work as you
want with the single <code>pd.to_datetime</code> command.</li>
<li>Processing the data on the front end to resolve the ambiguity (based on other information in your set) is probably a better solution than assuming you need to offset every date after 2000. For example, 1MAR05 will be read as 2005, then your code will offset by 100 years and you'll get 1905 when maybe it should have actually been 2005. </li>
</ol>

<p>Amateur coder here learning too, but I don't think there is a built in function to make your data unambiguous or force a specific century prefix.</p>
    </div>