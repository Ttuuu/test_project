<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd never thought of using <code>reduce</code> for this. Neat! However, you can simplify <code>mk-balanced?</code> a little. </p>

<ul>
<li><code>str-&gt;chars</code> is redundant: <code>reduce</code> and the other sequence functions accept strings as such.</li>
<li>You can use <a href="https://clojuredocs.org/clojure.core/reduced" rel="nofollow noreferrer"><code>reduced</code></a> to short circuit a <code>reduce</code>.</li>
<li>The <code>reduced</code> can return any non-empty sequence: no need for <code>[:false]</code>.</li>
</ul>

<p>The simplified version is ...</p>

<pre><code>(defn mk-balanced? [table]
  (fn [s]
    (let [opens (set (vals table))
          closes (set (keys table))]
      (empty?
        (reduce
          (fn [stack cur]
            (condp contains? cur
              opens (conj stack cur)
              closes (if (and (seq stack)
                              (= (peek stack) (table cur)))
                       (pop stack)
                       (reduced [nil]))
              stack))
          []
          s)))))
</code></pre>
    </div>