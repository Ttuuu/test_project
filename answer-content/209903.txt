<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>At the beginnig: im providing this answer for PHP 7.2. You should switch to the latest version (7.3 was released days ago. Also 7.0 will reach EOL soon). Keep in mind to stick to the latest or LTS version.
Also please use english only in your code. Namings in Mexican/French/Spanish/German and s.o. will decrease your maintainablility heavily.</p>

<p>Okay let's  start with <strong>entrar.php</strong>:</p>

<ol>
<li>please use autocode formatting : <code>$appId                  = '123456789'; //Facebook App ID</code>. Many IDEs are providing this feature like <em>PHPStorm</em></li>
<li>set <code>$appId</code> and <code>$appSecret</code> values as <strong>const</strong>. They wont change. You can also think about moving them into an seperate class just containing public consts.</li>
<li>Your try-catch statement is ok but you can also catch multiple Exception types in one catch statement. </li>
<li>Don't just check for <code>isset</code>. The valuie can be still empty. Better use <code>empty()</code>. empty will check for isset and not empty and not 0 and so on. The PHP_docs are explaining this very well.</li>
<li>Please avoid class definitions in your business logic e.g. <code>class User {</code>. Better move them into an own file/class-file for better maintainability.</li>
<li><code>function checkUser($userData = array()){</code> at first add a scope like <strong>public</strong>/<strong>protected</strong>/<strong>private</strong>. Then also provide a return type as with &gt;= PHP 7.0
type hinting became more important. Don't worry., it's just to support you as developer and maintainer.</li>
<li><code>'nombre' =&gt; $userData['nombre'],</code> <strong>NEVER EVER trust the userinput</strong>. This is the number one security leak in modern architectures. Please add some validation</li>
<li>Avoid GET requests e.g. <code>if(isset($_GET['code'])){</code>. They are not secure. Better use POST instead</li>
</ol>

<p>Next <strong>usuario.php</strong></p>

<ul>
<li>Like i mentioned above: <strong>Don't trust the user input! NEVER EVER</strong> (I can't repeat it enough). You receive your data from $_SESSION and the sessiondata itself are safe but please keep it in mind anyway.</li>
</ul>

<p>The rest is ok (regarding the code itself) I wont comment on your architecture because i dont have enough background information on your project. But keep focusing on it, you are on a good way.</p>
    </div>