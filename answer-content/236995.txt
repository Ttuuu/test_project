<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2><strong>LRU pattern</strong></h2>

<p>The meaning of the function is to retrieve already computed value stored in a dict.With the LRU pattern, there is no need of dict, and everything in the @property. This code is ok if <code>functools</code> module is used with the:</p>

<pre><code>def total_stats(self) -&gt; Statistics:
    return sum((item.stats for item in self.items), Statistics())
</code></pre>

<h3>Python ≥ 3.2 - <a href="https://docs.python.org/3/library/functools.html#functools.lru_cache" rel="nofollow noreferrer">functools.lru_cache</a>:</h3>

<pre><code>@property
@lru_cache
def total_stats(self) -&gt; Statistics:
    return sum((item.stats for item in self.items), Statistics())
</code></pre>

<h3>Python ≥ 3.8 - <a href="https://docs.python.org/3/library/functools.html#functools.cached_property" rel="nofollow noreferrer">functools.cached_property</a>:</h3>

<p>EDIT: In this context, it cannot be used! In the question specific case, the list of items can change without creating a Statistics object. Then, if the list change, the cached_property will remain and return an outdated Statistics object.</p>

<blockquote>
  <p>Transform a method of a class into a property whose value is computed
  once and then cached as a normal attribute for the life of the
  instance. Similar to property(), with the addition of caching. Useful
  for expensive computed properties of instances that are otherwise
  effectively immutable.</p>
</blockquote>

<p>Example:</p>

<pre><code>&gt;&gt;&gt; from functools import cached_property
&gt;&gt;&gt; class CustomType:
    def __init__(self):
        self._some_value = list(range(5))
    @cached_property
    def some_value(self):
        print('cache result')
        return self._some_value

&gt;&gt;&gt; a = CustomType()
&gt;&gt;&gt; a.some_value
cache result
[0, 1, 2, 3, 4]
&gt;&gt;&gt; a._some_value = 0
&gt;&gt;&gt; a.some_value
[0, 1, 2, 3, 4]
&gt;&gt;&gt; a._some_value
0
</code></pre>

<h2>With the <a href="https://cacheout.readthedocs.io/en/latest/index.html" rel="nofollow noreferrer">cacheout module</a>:</h2>

<p>For other cache implementation.</p>

<ul>
<li>FIFO (First-In, First-Out)</li>
<li>LIFO (Last-In, First-Out)</li>
<li>LRU (Least Recently Used)</li>
<li>MRU (Most Recently Used)</li>
<li>LFU (Least Frequently Used)</li>
<li>RR (Random Replacement)</li>
</ul>
    </div>