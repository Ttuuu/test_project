<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Limitations on <code>cmpfunc()</code> with <code>qsort()</code></strong></p>

<p>Presently code only has a zero-filled array to sort, so <code>cmpfunc()</code> is OK.<br>
This makes for an <em>interesting</em> performance test.</p>

<p>If the array was populated with [0..127] as suggested in the question, <code>cmpfunc()</code> is still OK.</p>

<p>If the array was populated with [<code>INT_MIN...INT_MAX</code>], <code>cmpfunc()</code> is UB.</p>

<p>For <code>qsort</code> to perform and complete, the follow is required: </p>

<blockquote>
  <p>The function shall return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. ยง17dr 7.22.5.2 3</p>
</blockquote>

<p>Unfortunately <code>*(int*)a - *(int*)b</code> is prone to overflow (UB) and returning the wrong signed difference.</p>

<pre><code>int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );  // UB
}
</code></pre>

<p>Suggest a stable alternative:</p>

<pre><code>int cmpfunc (const void * a, const void * b) {
   int ia = * ((const int *)a);
   int ib = * ((const int *)b);
   return (ia &gt; ib) - (ia &lt; ib);
}
</code></pre>
    </div>