<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, <em>better</em> and <em>more elegant</em> are quite opinion based and depend on different things: a code can be better regarding performance but worse regarding clarity.</p>

<p>That being said, I'd like to drop my two cents: since you just want to know if a given word <em>begins</em> with the input string (which is different from containing the input string) you can use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf" rel="nofollow noreferrer">lastIndexOf</a>, setting <code>fromIndex</code> as <code>0</code>. That way, you don't search the whole string, but just its beginning:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var searchString = 'ma';
var names = ['Mark Kennel', 'Hellen Smith', 'Jane Mary Annet', 'Peter'];

function filterNames(arr, str) {
  return arr.filter(function(thisName) {
    return thisName.toLowerCase().split(" ").some(function(d) {
      return d.lastIndexOf(str.toLowerCase(), 0) === 0
    })
  })
}

console.log(filterNames(names, searchString))</code></pre>
</div>
</div>


<p>Another obvious option here is using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith" rel="nofollow noreferrer">startsWith</a>. However, unlike <code>lastIndexOf</code>, <code>startsWith</code> don't wok on IE (if you care for that).</p>
    </div>