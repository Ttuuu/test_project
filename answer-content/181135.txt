<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>To address your confusion, there is no floating point values. Both <code>temps.size()</code> and <code>2</code> are integrals, so the division is an integral division.</p></li>
<li><p>To elaborate on the point above, you can avoid testing for parity by always computing two indices:</p>

<pre><code>    ix1 = (temps.size() - 1) / 2;
    ix2 = temps.size() / 2;
    median = (temps[ix1] + temps[ix2]) / 2;
</code></pre>

<p>I am not advocating it as a best solution, but it is worth effort to see how those indices align nicely regardless of parity.</p></li>
<li><p>I strongly recommend to separate computation and output.</p></li>
<li><p>I strongly recommend to not put everything in <code>main</code>, but factor computations out into the distinct <code>mean</code> and <code>median</code> functions.</p></li>
<li><p>I don't know how much is already covered by chapter 4, but since you've already <code>#include &lt;algorithm&gt;</code>, you may want to investigate <code>std::accumulate</code>.</p></li>
<li><p>Kudos for <em>not</em> <code>using namespace std</code>.</p></li>
</ul>
    </div>