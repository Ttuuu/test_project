<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You repeatedly evaluate</p>

<pre><code>cost(cost_mat, best)
</code></pre>

<p>There is an opportunity to <a href="https://docs.python.org/3/library/functools.html#functools.lru_cache" rel="nofollow noreferrer">memoize</a> this, or at least store it in a temp var.</p>

<p>You should decide if you want "optimal" TSP, or "good enough" TSP
that is k-competitive with an optimal solution.</p>

<p>You suggest you're taking 15ms per city.
You didn't post profile / timing data, but
I have to believe that much of the time is taken up by <code>roll</code> + <code>sum</code>,
rather than by, say, creating route copies.
Could we pre-compute distances between points, and
then consider just next hops within some threshold distance?
Or order by distance, and consider only a fixed number of next hops,
adjusted upward each time a better route is found?</p>

<p>Could the <code>cost()</code> function be broken into "near" and "far" components,
with the advantage that "far" would be substantially constant?
Usually we do <em>not</em> find a better cost.
If we <em>do</em> find one, we could then fall back to "carefully"
computing the detailed "far" cost.</p>
    </div>