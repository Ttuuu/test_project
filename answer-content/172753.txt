<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A good practice of writing code would to be to follow the DRY method.
AKA "Don't Repeat Yourself".</p>

<p>To accomplish this instead of writing out each line for each input request you can use a for loop and if statements to accomplish just about anything you need here.</p>

<p>When you are going to have many variables being generated you should use a list or a dictionary to store each variable as it helps keep your code shorter and makes it much easier to manage the date.</p>

<p>For example Instead of the 27 lines of code you are using to create your 2 countries list <code>countries1</code> and <code>countries2</code> you can accomplish this with less than half the lines of code using a for loop like this one below:</p>

<pre><code>countries_list = ["england", "france", "spain", "germany", "italy", "portugal", "russia",
"dutch", "turkey", "swiss", "scotland", "greece", "poland", "belgium"]

groups = []
countries1 = []
countries2 = []

for i in range(7):
    groups.append([])
    countries1.append([])
    countries2.append([])
</code></pre>

<p>Now we have a countries1 and countries2 list with the same functionality as your original code and we can manipulate date by providing the index to where we want to check or change data.</p>

<p>Now instead of the 45 lines of code you use to ask for team names you can get the same results with 8 lines of code using a <code>for</code> loop like the below code:</p>

<pre><code># ask for teams
for i in range(7):
    for x in range(4):
        countries1[i].append([input("\nPlease enter an {} team: ".format(countries_list[i]))])

for i in range(7,14):
    countries2[i-7].append([input("\nPlease enter an {} team: ".format(countries_list[i]))])
</code></pre>

<p>You can apply this same logic to all parts of your code that are repeating so you take up less code and can manage the code a bit better.</p>

<p>If you want to make things super easy you could create a few functions that do many of the same task and that take a few arguments so you can get even more done with less code written.</p>

<p>Once you have all this down you may want to look into the OOP (Object Oriented Programing) style as it has many advantages over what you are currently doing.</p>

<p>One last example:</p>

<p>If you use this logic throughout your code you will end up making other parts of your code easier to write. For example if you do what I have shown you so far your last part of the code (47 lines of print statements) can be reduced to 5ish lines of code like this:</p>

<pre><code>group_list = ["\nGroup A", "\nGroup B", "\nGroup C", "\nGroup D",
              "\nGroup E", "\nGroup F", "\nGroup G", "\nGroup H"]
for i in group:
    print(group_list[i])
    for x in group[i]:
        print(x)
</code></pre>

<p>With all the options I have listed we can create a program that works the way you want with less than 50 lines of code.</p>

<p>UPDATE: Here is the example I promised from the comments.</p>

<p>The below example will be 60 lines of code but you can reduce the lines by reformatting the dictionaries in the first 14 lines. to just be on 2 lines instead of 8 lines and removing white space in the rest of the code.</p>

<pre><code>import random
import math


num_teams = 32
country_list = {"england" : ["English", 4], "france" : ["French", 4],
                "spain" : ["Spanish", 4], "germany" : ["German", 4],
                "italy" : ["Italian", 4], "portugal" : ["Portuguese", 3],
                "russia" : ["Russian", 2], "dutch" : ["Dutch", 1],
                "turkey" : ["Turkish", 1], "scotland" : ["Scottish", 1],
                "greece" : ["Greek", 1], "poland" : ["Polish", 1],
                "belgium" : ["Belgian", 1]}
group_and_teams = {"GroupA" : {}, "groupB" : {}, "groupC" : {}, "groupD" : {},
                   "groupE" : {}, "groupF" : {}, "groupG" : {}, "groupH" : {}}

print("\tUEFA Champions League Draw Simulator\n")
print("Enter teams to make your very own UEFA Champions League.")
input("Press the enter key to begin.")
x = 0
for country in country_list:
    x += country_list[country][1]
x = math.ceil(x / len(group_and_teams))

list_teams = {}
for country in country_list:
    for x in range(country_list[country][1]):
        list_teams[input("Please enter an {} team: ".format(country_list[country][0]))] = country

def find_open_slot(new_team):
    good = True
    group_chosen = False
    rand = random.sample(list(group_and_teams), 1)[0]
    while group_chosen == False:
        if len(group_and_teams[rand]) &gt; 0:
            for listed_team in group_and_teams[rand]:
                if new_team == listed_team or list_teams[new_team][1] == group_and_teams[rand][listed_team]:
                    good = False
        else:
            group_chosen = True
            return rand

        if good == False:
            rand = random.sample(list(group_and_teams), 1)[0]
        else:
            group_chosen = True
            return rand

for team in list_teams:
    group = find_open_slot(team)
    teams = group_and_teams[group]
    teams[team] = list_teams[team]

print("\nAssembling groups...\n")
input("Groups complete. Press the enter key to view.")

for group in group_and_teams:
    for teams in group_and_teams[group]:
        print("{}: team: {}, Country: {}".format(group,teams, group_and_teams[group][teams]))

input("\n\nPress the enter key to exit.")
</code></pre>
    </div>