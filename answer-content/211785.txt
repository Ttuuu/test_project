<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Found a little inconsistency in your Vue template</strong></p>

<p>Using <code>v-bind:</code> syntax here,</p>

<pre><code>&lt;div id="listContainer" v-bind:style="{ height: height + 'px'}"&gt;
</code></pre>

<p>... but using <code>:</code> shorthand here:</p>

<pre><code>&lt;li v-for="number in numbers" :class="getClass(number)"&gt;
</code></pre>

<p><strong>Useless variable <code>app</code></strong></p>

<pre class="lang-js prettyprint-override"><code>const app = new Vue({ /* ... */ });
</code></pre>

<p>Do I need to say more?</p>

<p><strong>EDIT:</strong> <em>YES.</em><br>
From <a href="https://eslint.org/docs/rules/no-unused-vars" rel="nofollow noreferrer">ESLint</a>: "<em>Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.</em>"  </p>

<p><strong>Object method notation shorthand</strong></p>

<p>Instead of using:</p>

<pre class="lang-js prettyprint-override"><code>getOutput: function(number) { /* ... */ }
// ...
getClass: function(number) { /* ... */ }
</code></pre>

<p>You could use:</p>

<pre class="lang-js prettyprint-override"><code>getOutput(number) { /* ... */ }
// ...
getClass(number) { /* ... */ }
</code></pre>

<p><strong>Too specific CSS selector</strong></p>

<p>You're specifying these selectors,</p>

<pre class="lang-css prettyprint-override"><code>li.FizzBuzz { /* ... */ }
li.Fizz { /* ... */ }
li.Buzz { /* ... */ }
</code></pre>

<p>but there aren't any elements that would have these classes (<code>FizzBuzz</code>, <code>Fizz</code> and <code>Buzz</code>) other than <code>li</code>'s. This means you could simplify it to:</p>

<pre class="lang-css prettyprint-override"><code>.FizzBuzz { /* ... */ }
.Fizz { /* ... */ }
.Buzz { /* ... */ }
</code></pre>
    </div>