<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Character encoding</h1>

<p>As a good practice, the character encoding should be included  in the <code>head</code> section of the document before the <code>title</code> element:</p>

<pre><code>&lt;meta charset="utf-8"&gt;
&lt;title&gt;SigmaCubes - Home&lt;/title&gt;
</code></pre>

<blockquote>
  <p>In order for all browsers to recognize a  declaration, it must be</p>
  
  <ul>
  <li>Within the <code>&lt;head&gt;</code> element,</li>
  <li>Before any elements that contain text, such as the <code>&lt;title&gt;</code> element, AND</li>
  <li>Within the first 512 bytes of your document, including <code>DOCTYPE</code> and whitespace</li>
  </ul>
</blockquote>

<p><sup>From Google Code Archive <a href="https://code.google.com/archive/p/doctype-mirror/wikis/MetaCharsetAttribute.wiki" rel="nofollow noreferrer">doctype-mirror - MetaCharsetAttribute.wiki</a></sup></p>

<hr>

<h1>Semantics</h1>

<p>Semantics are always highly opinion-based. It depends heavily on the actual content and context. This makes it hard to review the part inside <code>main</code>. The structure seems fine, but whether an <code>article</code> with nested <code>section</code> elements is the best fit, depends on the actual content.</p>

<p>The usage of <code>aside</code> is good, using it for a secondary navigation within the page.</p>

<h2><code>nav</code>-element</h2>

<p>I would say, you could use a list in the <code>nav</code>-element as well, like you did in the <code>aside</code>-element:</p>

<pre><code>&lt;nav&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;a href="#AboutUs" class="active"&gt;ABOUT US&lt;/a&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/nav&gt;
</code></pre>

<p>This is also recommended by the Web Accessibility initiate:</p>

<blockquote>
  <p>Convey the menu structure, typically by using a list. Such structural
  information allows assistive technologies to announce the number of
  items in the menu and provide corresponding navigation functionality.</p>
</blockquote>

<p><sup>From w3.org <a href="https://www.w3.org/WAI/tutorials/menus/structure/" rel="nofollow noreferrer">Web Accessibility Tutorials: Menu Structure</a></sup></p>

<p>See also W3C <a href="http://w3c.github.io/html/sections.html#the-nav-element" rel="nofollow noreferrer">4.3.4. The nav element</a> for more examples.</p>

<p>Same goes for the anchor elements in the <code>footer</code>.</p>

<h2><code>hr</code>-elements</h2>

<p>You're using <code>hr</code>-elements at the bottom of sections, which is not necessary:</p>

<blockquote>
  <p>The hr element represents a paragraph-level thematic break.</p>
</blockquote>

<p><sup>From W3C <a href="http://w3c.github.io/html-reference/hr.html" rel="nofollow noreferrer">hr</a></sup></p>

<p>Use CSS and <code>border-bottom</code> here.</p>

<h2><code>br</code>-elements</h2>

<p>Don't use <code>br</code>-elements to create distance between elements. Use CSS instead.</p>

<blockquote>
  <p>The HTML <code>&lt;br&gt;</code> element produces a line break in text (carriage-return).
  It is useful for writing a poem or an address, where the division of
  lines is significant.</p>
</blockquote>

<p><sup>From MDN <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br" rel="nofollow noreferrer"><code>&lt;br&gt;</code>: The Line Break element</a></sup></p>

<hr>

<h1><code>alt</code>-attributes</h1>

<p>You use these <code>alt</code>-attributes on two images on the header:</p>

<blockquote>
<pre><code>alt="[Company logo]"
alt="[Company Office]"
</code></pre>
</blockquote>

<p>First of all, you don't need to wrap the text into <code>[]</code>. Screen readers will read parentheses, brackets etc. so this can get annoying.</p>

<p>A logo don't need to have the word <code>logo</code> in its <code>alt</code>-attribute. The company name is just fine:</p>

<blockquote>
  <p>It is common practice on the web to have the main site logo also link
  to the site home page. Because this is fairly standard practice, providing
  alternative text for the image, such as your company name (<code>alt="Acme Company</code>),
  will usually suffice. Identifying the logo as actually being a logo
  (<code>alt="Acme Company Logo"</code>) is not typically necessary. The content and
  function is not "logo".</p>
</blockquote>

<p><sup>From WebAIM <a href="https://webaim.org/techniques/alttext/#logos" rel="nofollow noreferrer">Alternative Text: Logos</a></sup></p>

<p>The alternative text <code>company office</code> is probably not descriptive enough <em>or</em> the image can have an empty <code>alt</code>-attribute, if it's just a <a href="https://webaim.org/techniques/alttext/#decorative" rel="nofollow noreferrer">decorative image</a>.</p>

<hr>

<h1>Style</h1>

<p>Try to be consistent:</p>

<blockquote>
<pre><code>&lt;a href="#WhatWeDo"&gt;What we do&lt;/a&gt;
&lt;a href = "Sitemap.html"&gt;Sitemap&lt;/a&gt;
</code></pre>
</blockquote>

<p>â€¦ or:</p>

<blockquote>
<pre><code>&lt;br&gt;
&lt;br /&gt;
</code></pre>
</blockquote>

<hr>

<p>Try to avoid ids in selectors in CSS. See CSSLint <a href="https://github.com/CSSLint/csslint/wiki/Disallow-IDs-in-selectors" rel="nofollow noreferrer">Disallow IDs in selectors
</a>.</p>

<hr>

<p>With just a couple of elements this might be readable:</p>

<blockquote>
<pre><code>nav li, #sidenav, main
</code></pre>
</blockquote>

<p>But at some point, it might get confusing. List the selectors like that:</p>

<pre><code>nav li,
#sidenav,
main
</code></pre>
    </div>