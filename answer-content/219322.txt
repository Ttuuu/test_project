<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>It's recommended to use <code>enumerate</code> rather than <code>iter</code> (renamed <code>i</code>), <code>_</code> and indexing.</p>

<pre><code>for i, abs_path in enemerate(mentors_sql_abs):
    mentors_sql[i][0] = abs_path
</code></pre></li>
<li><p>It's better to use <code>zip</code> rather than build <code>mentors_sql</code> manually.</p></li>
<li>Your function could further be simplified if you don't extend <code>mentors_sql_*</code> and just <code>yield</code> the values.</li>
<li>Please only use one string delimiter, either <code>'</code> or <code>"</code>.</li>
<li><code>x</code> is a pretty bad variable name, I would use <code>file</code>. Even for a comprehension it's pretty poor, as x isn't short hand for anything.</li>
<li>The only difference between the two functions as you walk different paths. And so you can change your input to account for this, and use one function.</li>
<li>I don't see the need for returning both relative and absolute paths, and so won't comment on it too much. You may want to return one and convert when needed.</li>
</ol>

<pre><code>def find_sql(path):
    for dirpath, subdirs, files in walk(path):
        for file in files:
            if file.endswith('.sql'):
                yield (
                    path.join(dirpath, file),
                    path.join(path.basename(dirpath), file)
                )


mentors = find_sql(config["MAIN_DIR"] + '\\Homework')
students = find_sql(config["MAIN_DIR"] + '\\Students Homework')
</code></pre>
    </div>