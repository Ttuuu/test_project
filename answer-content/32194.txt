<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you asked this question here rather than on Stack Overflow, I'm going to propose this <a href="http://jsperf.com/elementloop/2" rel="nofollow">countdown iteration</a>:</p>

<pre><code>for (var y = arr.length - 1; y &gt;= 0; --y) {
    //do some maths
    var el = arr[y];
    el++;
}
</code></pre>

<p>The advantages are:</p>

<ul>
<li>You only calculate <code>arr.length</code> once, and do so without introducing a temporary variable</li>
<li>Each iteration, you compare <code>y</code> with zero.  To compare with any other number, the CPU would first have to load both values into registers before executing the conditional branch instruction.  To compare against zero, only the value of <code>y</code> needs to be loaded in a register; there is a special instruction for comparing against zero and conditionally branching.</li>
</ul>

<p>That said, the performance gain by iterating backward instead of forward is  negligible, and you should avoid the countdown technique if</p>

<ul>
<li>The processing of an element depends on the value of another element</li>
<li>The processing of an element could fail â€” premature termination of the loop would be weird if the partial results are at the end of the array</li>
</ul>
    </div>