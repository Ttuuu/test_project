<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>When you have a collection that you want to iterate over, and you don't particularly care about the index of each element, iterating by going through the collection's <code>.length</code> and manually incrementing an index counter anyway is a bit tedious and ugly. Collections almost always have iterators or a <code>forEach</code> method - it's nice to use those instead, when possible. In other words, rather than</p>

<pre><code>var el = document.querySelectorAll(".animateBorder");
for (var i = 0; i &lt; el.length; i++) {
  // lots of lines referencing el[i]
</code></pre>

<p>you may use</p>

<pre><code>const borderContainers = document.querySelectorAll(".animateBorder");
for (const borderContainer of borderContainers) {
  // lots of lines referencing borderContainer
</code></pre>

<p>Don't call the collection <code>el</code> - I, and most other developers, would ordinarily expect a variable named <code>el</code> to contain an <em>element</em>. Since what you have is a <em>collection</em> of elements, it would be good to be precise and make that clearer with the variable name, else a script reader or writer is more likely to get confused by it and make a mistake as a result.</p>

<p>You define the <code>event</code> argument, but never use it:</p>

<pre><code>document.addEventListener("scroll", (event) =&gt; {
</code></pre>

<p>If you're not going to use an argument, it would be better to leave it out entirely, that way there's one less variable readers of the script have to be mindful of:</p>

<pre><code>document.addEventListener("scroll", () =&gt; {
</code></pre>

<p><code>scroll</code> events can sometimes fire <em>very</em> frequently (like 50 in a second or two):</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const div = document.querySelector('div');
window.addEventListener('scroll', () =&gt; {
  div.textContent = Number(div.textContent) + 1;
});</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>body {
  height: 2000px;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;div&gt;0&lt;/div&gt;</code></pre>
</div>
</div>


<p>Given these sorts of events, and given that you might be iterating over a non-trivial number of <code>animateBorder</code> elements, <em>and</em> each of those <code>animateBorder</code>'s descendant <code>&lt;span&gt;</code>s, you might be right to consider the performance implications of your code.</p>

<p>One way to improve would be to retrieve values only when necessary. For example, rather than doing <code>window.innerHeight / 2 || document.documentElement.clientHeight / 2;</code> <em>for every scroll</em>, and also <em>for every <code>animateBorder</code> item that exists</em> during that scroll event, you could retrieve the value just <em>once</em>, on pageload. You can also retrieve the <code>scrollTop</code> when a scroll event occurs, rather than <em>for every animateBorder element</em> in a scroll event. Another option would be to add a small debouncer - only iterate through the elements and change their styles once, say, 50ms has passed since the last style change has taken place.</p>

<p>You define</p>

<pre><code>partLenght
</code></pre>

<p>Spelling matters in programming. Misspelled words are a very easy source of bugs. Use <code>partLength</code> instead.</p>

<p>Variables named <code>_0</code> and <code>_100</code> are pretty weird - it doesn't look like a normal variable name, but almost like a numeric literal with the new <code>_</code> optional separators, eg:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>console.log(
  1_000_000
);</code></pre>
</div>
</div>


<p>Better to call the variables something easily understandable with English words instead, maybe <code>spanTopOffset</code> and <code>spanBotOffset</code>.</p>

<p>You have</p>

<pre><code>if (direction == "horizontal") {
</code></pre>

<p>and a few other uses of <code>==</code> as well. Always use strict equality with <code>===</code> and <code>!==</code> instead - otherwise, if you use loose equality, you'll be requiring everyone that reads the code (including you) to be sure of all of the <a href="https://i.stack.imgur.com/35MpY.png" rel="nofollow noreferrer">weird type coercion rules</a> invoked by loose equality.</p>

<p>Since it's 2020, best to write <em>at least</em> in ES2015 syntax (which you're already partially doing with <code>=&gt;</code>). If you're going to use ES2015 syntax, use it everywhere - never use <code>var</code>, since it has too many problems. Define variables with <code>const</code> instead (or <code>let</code> if you have no choice but to reassign the variable).</p>

<p>To clarify the logic in the comparisons against <code>currentPos</code>, consider using <code>else-if</code> and <code>else</code> instead, to make it clear that exactly one of the conditions may be fulfilled. I'd also add comments indicating what exactly each condition means.</p>

<p>Or, an alternative would be to simply calculate the percentage required regardless, then constrain its values to between 0 and 100 - then set the width or height to that constrained percentage:</p>

<pre><code>// 0 when current position before or at top of span section
// between 0 and 100 when current position is between top and bottom of span section
// 100 when current position is after bottom of span section
const percentScrolledThisElement = Math.min(
  100,
  Math.max(
    0,
    Math.round(((currentPos - spanTopOffset) * 100) / partLength)
  )
);
if (direction === "horizontal") {
  span.style.width = percentScrolledThisElement + "%";
} else {
  span.style.height = percentScrolledThisElement + "%";
}
</code></pre>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const borderContainers =  document.querySelectorAll(".animateBorder");
// If screen size changes, you can add a resize event to reassign this:
const mHeight = window.innerHeight / 2 || document.documentElement.clientHeight / 2;
document.addEventListener("scroll", () =&gt; {
  const currentPos = document.documentElement.scrollTop + mHeight;
  for (const borderContainer of borderContainers) {
		const { offsetTop, offsetHeight } = borderContainer;
    const { count } = borderContainer.dataset;
		const partLength = offsetHeight / count;
		const elEnd = offsetTop + offsetHeight;
    borderContainer.querySelectorAll('span').forEach((span, i) =&gt; {
			const offset = i * partLength;
			const spanTopOffset = offsetTop + offset;
			const spanBotOffset = spanTopOffset + partLength;
			const { direction } = span.dataset;
      
      // 0 when current position before or at top of span section
      // between 0 and 100 when current position is between top and bottom of span section
      // 100 when current position is after bottom of span section
      const percentScrolledThisElement = Math.min(
        100,
        Math.max(
          0,
          Math.round(((currentPos - spanTopOffset) * 100) / partLength)
        )
      );
      if (direction === "horizontal") {
        span.style.width = percentScrolledThisElement + "%";
      } else {
        span.style.height = percentScrolledThisElement + "%";
      }
		});
	}
});</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>#lipsum {
  max-width: 680px;
  margin: 0 auto;
}

.animateBorder {
  display: flex;
  outline: 1px solid red;
  height: 300px;
  width: 50%;
  align-items: center;
  justify-content: center;
  position: relative;
}

span {
  display: block;
  background-color: green;
  position: absolute;
}
span.b-top {
  top: 0;
  width: 0;
  height: 2px;
}
span.b-top.d-right {
  left: 0;
}
span.b-top.d-left {
  right: 0;
}
span.b-right {
  right: 0%;
  height: 0;
  width: 2px;
}
span.b-right.d-up {
  bottom: 0;
}
span.b-right.d-down {
  top: 0%;
}
span.b-bottom {
  top: 100%;
  width: 0;
  height: 2px;
}
span.b-bottom.d-right {
  left: 0;
}
span.b-bottom.d-left {
  right: 0;
}
span.b-left {
  left: 0%;
  height: 0;
  width: 2px;
}
span.b-left.d-up {
  bottom: 0;
}
span.b-left.d-down {
  top: 0%;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;div id="lipsum"&gt;
&lt;p&gt;
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam lacinia mi eget efficitur pretium. Aliquam neque mauris, commodo sed leo quis, rutrum rhoncus dui. Nulla in sollicitudin magna. Aliquam at fermentum metus. Integer ac diam id urna placerat ornare. Integer consequat condimentum sem, quis finibus mi hendrerit non. Morbi quis fringilla purus, consequat imperdiet mauris. Sed dictum pretium tellus, eget euismod sem.
&lt;/p&gt;
&lt;p&gt;
Morbi suscipit magna nibh, vel tempus justo fermentum non. Nullam metus sapien, viverra quis viverra ac, ullamcorper ut neque. Maecenas eget orci quis libero aliquam gravida id in ligula. Mauris molestie consectetur erat, sed pharetra magna. Fusce consequat luctus libero sit amet posuere. Aliquam ultricies purus a nunc molestie elementum. Aliquam erat volutpat.
&lt;/p&gt;
  &lt;div class="animateBorder" data-count="3"&gt;
  &lt;span data-direction="horizontal" class="b-top d-right"&gt;&lt;/span&gt;
  &lt;span data-direction="vertical" class="b-right d-down"&gt;&lt;/span&gt;
  &lt;span data-direction="horizontal" class="b-bottom d-left"&gt;&lt;/span&gt;
  top,right,bottom&lt;/div&gt;
  &lt;div class="animateBorder" data-count="2"&gt;
  &lt;span data-direction="vertical" class="b-left d-down"&gt;&lt;/span&gt;
  &lt;span data-direction="horizontal"  class="b-bottom d-right"&gt;&lt;/span&gt;
  left,bottom&lt;/div&gt;
&lt;p&gt;
Nam at ligula leo. Integer eu ante vitae nisi pellentesque feugiat in vitae neque. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum ante odio, placerat eu tincidunt in, luctus a diam. Aenean sed elit nunc. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a ullamcorper orci. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Proin finibus elit sed urna tempus, in volutpat ipsum volutpat.
&lt;/p&gt;
&lt;p&gt;
Praesent nunc elit, aliquam id sagittis in, ornare a dui. Vestibulum aliquam sem sit amet risus porttitor, ornare fringilla ex tristique. Vivamus quis augue id enim placerat finibus. In ullamcorper, tortor eu finibus euismod, sapien felis eleifend urna, feugiat convallis metus purus sed ante. Pellentesque volutpat egestas mi, in luctus mauris. Suspendisse pellentesque sed enim eu maximus. Donec vestibulum orci nunc, sed egestas mauris iaculis vel. Aenean malesuada bibendum turpis eget lobortis. Sed et ex non lorem varius interdum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Praesent ultrices vehicula pretium. Aliquam mollis dolor ut commodo viverra. Nam nibh mauris, hendrerit et ipsum sed, aliquet auctor lacus. Maecenas tincidunt neque sed enim facilisis sagittis.
&lt;/p&gt;
  &lt;div class="animateBorder" data-count="3"&gt;
  &lt;span data-direction="horizontal" class="b-top d-right"&gt;&lt;/span&gt;
  &lt;span data-direction="vertical" class="b-right d-down"&gt;&lt;/span&gt;
  &lt;span data-direction="horizontal" class="b-bottom d-left"&gt;&lt;/span&gt;
  top,right,bottom&lt;/div&gt;
&lt;p&gt;
Ut ornare, metus eu consectetur pulvinar, mi ipsum egestas nibh, et rhoncus odio nulla quis massa. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Duis tincidunt turpis nunc, vitae pretium velit condimentum non. Nunc eleifend ipsum porttitor ligula mattis faucibus. Etiam ac neque vitae nibh finibus lobortis. Morbi laoreet auctor metus, quis sagittis lectus posuere at. Aenean quis gravida lorem. Mauris aliquam, purus nec congue blandit, erat ligula ornare erat, eu malesuada augue nunc in dolor. Mauris vestibulum condimentum suscipit. Suspendisse id nibh sed ex ornare tempus vel vitae velit. Quisque sem enim, sodales nec leo et, fermentum finibus lacus. Suspendisse sit amet rutrum arcu.
&lt;/p&gt;
&lt;p&gt;
Morbi nec efficitur nibh, a condimentum justo. Nunc enim nunc, gravida sed convallis eget, pulvinar nec ex. Pellentesque vitae feugiat massa. Phasellus fermentum orci eu commodo pulvinar. Ut eget porttitor purus. Nam posuere, tortor eleifend condimentum fermentum, lacus quam luctus diam, id congue tortor tortor vel nulla. Vivamus iaculis luctus mauris et dictum. Curabitur rutrum felis eros, vitae tempus risus pellentesque in.
&lt;/p&gt;
&lt;p&gt;
Ut tempor feugiat efficitur. Donec cursus sem consequat malesuada malesuada. Curabitur eu turpis quis tortor aliquet lobortis. Aliquam venenatis, nibh at porttitor faucibus, ex tortor viverra elit, vitae egestas ante augue ut tellus. Phasellus venenatis finibus blandit. Suspendisse sit amet eros vitae odio iaculis accumsan. Pellentesque eu nunc dolor. Vestibulum sed massa at orci ornare bibendum.
&lt;/p&gt;
&lt;p&gt;
Pellentesque nec justo ornare, iaculis turpis ut, vestibulum orci. Integer vel sem sed justo dapibus tempor. Nam hendrerit at sem eu lobortis. Duis id urna ac odio lobortis aliquet. Praesent id porttitor purus. Quisque et nibh in diam accumsan congue ac in velit. Proin libero mauris, interdum sollicitudin mauris id, dignissim ultrices metus. Etiam lacinia augue vitae suscipit euismod. Aliquam pulvinar dui semper lectus accumsan, auctor sagittis erat convallis. Donec faucibus id velit a consectetur.
&lt;/p&gt;
&lt;p&gt;
Suspendisse sodales pretium molestie. Morbi vulputate posuere porta. Duis dictum ultrices facilisis. Sed lobortis libero ipsum, eget tempus turpis blandit sed. Curabitur egestas dolor metus, quis iaculis dolor mattis vitae. Donec ac accumsan leo. Aenean maximus sapien eros.
&lt;/p&gt;
&lt;p&gt;
Praesent leo risus, sagittis ut sapien eget, convallis aliquam lacus. Donec posuere, mauris nec fringilla dictum, purus velit imperdiet purus, vel aliquam magna dui sit amet urna. Phasellus consequat purus id erat ornare congue quis non neque. Donec odio lectus, tincidunt eu sapien sit amet, fringilla dignissim felis. Nunc blandit vehicula ligula quis suscipit. Aenean nec auctor augue. Integer semper mauris eleifend, luctus est sit amet, hendrerit tellus. Donec at erat nec nulla convallis aliquam. Donec laoreet sit amet arcu at pretium. Sed et consequat augue, eget ultricies massa. Suspendisse luctus nulla at eros elementum fringilla.
&lt;/p&gt;
&lt;p&gt;
Duis volutpat erat nec feugiat lacinia. Praesent eget consectetur arcu. Duis fringilla imperdiet libero, eget tincidunt metus tincidunt vel. Suspendisse dignissim quis velit a tempor. Curabitur finibus nec tellus ac aliquet. Cras porttitor efficitur tristique. Maecenas bibendum lacus dui, in mattis tortor aliquam vel. Vestibulum quis tortor semper, consequat nulla eget, lacinia ante. Phasellus ornare vel massa nec eleifend. In aliquet ultricies augue.
&lt;/p&gt;
&lt;p&gt;
Nam ante augue, condimentum non nulla in, imperdiet dignissim augue. Curabitur sodales ullamcorper turpis, vitae convallis lacus vulputate eget. In mollis ipsum eleifend porttitor egestas. Aenean orci mi, scelerisque euismod justo id, luctus hendrerit tortor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In lobortis vitae dui ac efficitur. Nullam iaculis vulputate mi, sed pharetra turpis ultrices non. Pellentesque vitae sodales orci, non vulputate odio. Aliquam eu molestie ex. Maecenas pellentesque lorem est, quis lacinia odio tincidunt nec. Suspendisse pharetra est et magna tincidunt scelerisque.
&lt;/p&gt;
&lt;p&gt;
Vestibulum eu finibus orci. Sed non egestas felis. Vestibulum et nisi vel metus faucibus mattis. Vivamus at ligula sodales, commodo nisl vitae, pharetra tellus. Phasellus quis magna blandit, suscipit magna ac, interdum sem. Cras facilisis dui eu dolor efficitur, sed commodo velit placerat. Sed tempus tortor sit amet nunc dignissim, sit amet vestibulum mi luctus. Donec eget elit ex. Aenean sodales viverra est. Sed accumsan mauris turpis, eu rhoncus lacus volutpat eu. Curabitur et consectetur felis. Nullam at nulla vestibulum, eleifend quam ac, tristique odio. Phasellus sapien ante, blandit ultricies eros at, semper viverra elit.
&lt;/p&gt;
&lt;p&gt;
Sed dictum accumsan efficitur. Sed convallis lobortis porttitor. Nullam vitae lorem sed felis semper tincidunt. Mauris ut ipsum purus. Cras ultricies pharetra tellus sit amet accumsan. Quisque sed nulla lorem. Aliquam pulvinar a nisi sit amet semper. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla aliquam scelerisque erat et facilisis.
&lt;/p&gt;
&lt;p&gt;
Cras ac varius odio, in sollicitudin sapien. Nunc tincidunt vulputate tortor ac euismod. Phasellus dignissim et orci sit amet malesuada. Sed suscipit lectus libero. Maecenas ac aliquam diam, sit amet feugiat nibh. Duis vehicula sem nec tincidunt viverra. Donec non dolor nulla. Curabitur iaculis justo vitae vehicula egestas. Phasellus efficitur volutpat faucibus. Morbi ligula nisl, porttitor nec lectus non, accumsan ornare augue. Nullam imperdiet nisl eu urna bibendum finibus nec vel augue. Phasellus vestibulum dui at interdum sollicitudin. Etiam ac commodo metus. Vestibulum augue metus, commodo vitae felis venenatis, aliquet feugiat mauris. Duis consequat dui enim, in posuere lorem aliquet vitae.
&lt;/p&gt;&lt;/div&gt;</code></pre>
</div>
</div>

    </div>