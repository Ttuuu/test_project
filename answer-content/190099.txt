<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>MassUploadUser</h3>
<p>Based on the <a href="https://msdn.microsoft.com/en-us/library/ms229002.aspx" rel="noreferrer">.NET Naming Guidelines</a> properties should be named using <code>PascalCase</code> casing.</p>
<h3>The loop</h3>
<p>In its current form you do for each column in each row a <code>switch</code> to get the column index and value. By extracting this to a separate method like so</p>
<pre><code>private  Dictionary&lt;string, int&gt; ReadColumnIndexes(string[] headers)
{
  
    return headers.Select((v, i) =&gt; new { Key = v, Value = i })
                  .ToDictionary(o =&gt; o.Key, o =&gt; o.Value);
}  
</code></pre>
<p>You can then, outside of the <code>while</code> loop, assign the desired column index to variables like so</p>
<pre><code>var columnDictionary = ReadColumnIndexes(headers);

var firstNameColumn = columnDictionary["First Name"];
var lastNameColumn = columnDictionary["Last Name"];
.....  
var passwordColumn = columnDictionary["Password"];
</code></pre>
<p>now your loop could look like so</p>
<pre><code>while (!parser.EndOfData)
{
    string[] fields = parser.ReadFields();

    var massUploadUser = new MassUploadUser();
    massUploadUser.firstname = fields[firstNameColumn];
    massUploadUser.lastname = fields[lastNameColumn];
    .....
    string password = fields[passwordColumn];

   // After the for loop, I have some additional logic
   // to serialize the newly-created object to JSON
   // and then POST it to a RESTful API
   DoPostToWebService(massUploadUser, password);

  // At this point, we created the new user on the server, so no need
  // to keep the current instance of massUploadUser around
}
</code></pre>
    </div>