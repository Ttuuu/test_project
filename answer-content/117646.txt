<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The main part of the code is converting the <code>List&lt;String&gt;</code> value into a <code>String</code> delimited by a comma. Instead of using an external <code>i</code> variable, you can use a <code>StringBuilder</code> and append the comma or not depending on whether it is empty or not.</p>

<p>Regarding your current code:</p>

<ul>
<li>Try to avoid concatenating String with <code>+</code>. You should use a <code>StringBuilder</code> when necessary.</li>
<li>You don't need to make a separate code path for the case where the list is empty in the map value: the regular path handles it also.</li>
<li>You don't need to store the key and the value in local variables.</li>
<li>It is indeed a very good idea to return a new empty map instead of <code>null</code> when the incoming map is <code>null</code>.</li>
<li>If the value stored in the multimap is an empty list, then your code will throw an exception because it tries to access the element 0 when there is no such element.</li>
</ul>

<p>This would be a proposed code for Java 7:</p>

<pre><code>private Map&lt;String, String&gt; convertMultiToRegularMap(MultivaluedMap&lt;String, String&gt; m) {
    Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
    if (m == null) {
        return map;
    }
    for (Entry&lt;String, List&lt;String&gt;&gt; entry : m.entrySet()) {
        StringBuilder sb = new StringBuilder();
        for (String s : entry.getValue()) {
            if (sb.length() &gt; 0) {
                sb.append(',');
            }
            sb.append(s);
        }
        map.put(entry.getKey(), sb.toString());
    }
    return map;
}
</code></pre>

<hr>

<p>As a side-note, when you'll upgrade to Java 8, this code can be made simpler by using the new <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#join-java.lang.CharSequence-java.lang.Iterable-" rel="noreferrer"><code>String.join(delimiter, elements)</code></a> method.</p>
    </div>