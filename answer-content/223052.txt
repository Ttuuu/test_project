<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think it is very well done, especially for 12 minutes. </p>

<hr>

<h2>Similar solutions</h2>

<p>That solution is very similar to GeekforGeek solution.</p>

<p><a href="https://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/" rel="nofollow noreferrer">https://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/</a></p>

<p>The problem is slightly different (more generic). </p>

<p>Compare</p>

<pre><code>class GFG {

/* Searches the element x in mat[][]. If the
element is found, then prints its position
and returns true, otherwise prints "not found"
and returns false */
private static void search(int[][] mat, int n, int x) {

    int i = 0, j = n - 1; // set indexes for top right
    // element

    while (i &lt; n &amp;&amp; j &gt;= 0) {
        if (mat[i][j] == x) {
            System.out.print("n Found at " + i + " " + j);
            return;
        }
        if (mat[i][j] &gt; x) {
            j--;
        } else // if mat[i][j] &lt; x
        {
            i++;
        }
    }

    System.out.print("n Element not found");
    return; // if ( i==n || j== -1 )
}
}
// This code is contributed by Arnav Kr. Mandal.
</code></pre>

<hr>

<h2>Complexity analysis.</h2>

<p>Your complexity analysis was wrong.
Let A matrix n x m. The complexity is O(m log(n)).</p>

<p>Proof:
For every movement in the vertical direction, the algorithm performs a new binary search in the horizontal direction. </p>

<p>If the matrix is a columnar matrix... the complexity will be O(m), for example.</p>

<hr>

<h2>Room for improvement</h2>

<p>A better solution would be using the binary search in both directions (what keep working for more generic problems). Complexity is O(log(n) * log(m))</p>

<p>Or take usage of total ordering. More efficient but less generic. Complexity is O(log (n) + log(m))</p>

<p>See:
 <a href="https://www.geeksforgeeks.org/search-element-sorted-matrix/" rel="nofollow noreferrer">https://www.geeksforgeeks.org/search-element-sorted-matrix/</a></p>
    </div>