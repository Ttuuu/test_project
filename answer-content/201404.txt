<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A dynamic array based stack will use less memory, as it does not have to store an address with each element. It will probably be faster for push because it doesn't need to make an allocation each time.</p>

<p>The main benefit of using a linked list is immutability. With a linked list, you can make stack operations that leave the previous stack as it is.
However this is difficult without garbage collection.</p>

<p>Since you are not going for an immutable stack, I would recommend changing the signatures of you <code>push()</code> and <code>pop()</code> functions to something like this:</p>

<pre><code>void push(Node **top, int value);
int pop(Node **top);
</code></pre>

<p>This way, you don't leave users of your utility with pointers to freed values, so they can't screw up their stack by popping and using the original stack, which is now invalid.</p>
    </div>