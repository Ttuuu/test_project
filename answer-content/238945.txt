<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Use the constant <code>M_PI</code> (and others) from <code>&lt;cmath&gt;</code> instead of defining your own. </p>

<p><a href="https://stackoverflow.com/questions/137975/what-is-so-bad-about-singletons">Singletons are bad</a>, and there is no need for one here. I would recommend you avoid this pattern.</p>

<p>There is no way to cleanly exit the program.</p>

<p>Break out some functions, the body of the main calculation function is too long to be easy to understand.</p>

<p>Use <code>std::stringstream</code> and it's formatted input functions to read numbers etc instead of writing your own code for this.</p>

<p>You should use the correct algorithm for parsing mathematical expressions: <a href="https://en.m.wikipedia.org/wiki/Shunting-yard_algorithm" rel="noreferrer">shunting yard algorithm</a>.</p>

<p>Regarding more or less comments. Your code should be structured such that comments are not necessary. Break out functions wherever you think you need a comment and make the function name sat what what your comment would have had is one way to think of it. Of course it's not always possible but it's one way to think about it.</p>

<p>Eg. Instead of having:</p>

<pre><code>// Read in a number from string
... Lots of code...
</code></pre>

<p>Do:</p>

<pre><code>auto number = read_number(input_string);
</code></pre>

<p>If you apply this consistently you'll find that you get more readable and maintainable code with less comments.</p>

<p>I'm missing unit tests, this is an obvious class to test with unit testing to make sure it works and produces the correct result.</p>

<p>I'm going to stop here without going too deep into the technical issues with the code such as using <code>int</code> instead of <code>vector&lt;&gt;::size_type</code> etc because I believe that you have bigger things to address (e.g. use the right algorithm and test your code)</p>
    </div>