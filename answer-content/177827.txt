<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The indentation is inconsistent: the test class has its <code>{}</code> indented the same as the class declaration, but the main class has them indented one level more.</p>

<hr>

<p>It's good that you've included a unit test, but it's only testing half of the functionality. What about the getter?</p>

<hr>

<p><code>put</code> and <code>get</code> as method names don't follow C# conventions, which would be <code>Put</code> and <code>Get</code> -- although it would be even more idiomatic here to make them an <a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/indexers/" rel="noreferrer">indexer</a>. The original task is phrased in terms which are as language-agnostic as possible, but in an interview you should aim to show language knowledge where you have it as well as general knowledge and skill.</p>

<hr>

<p>Is there any reason for hard-coding <code>int</code> as the type of the key and value rather than making them generic?</p>

<hr>

<blockquote>
<pre><code>private List&lt;KeyValuePair&lt;int, int&gt;&gt; _orderList;
</code></pre>
</blockquote>

<p>Two questions: firstly, why <code>KeyValuePair&lt;int, int&gt;</code>? I don't see anything which uses the value. Secondly, why include <code>List</code> in the name? The type says that already.</p>

<hr>

<blockquote>
<pre><code>                _orderList.Remove(toRemove);
</code></pre>
</blockquote>



<blockquote>
<pre><code>            var tempCacheCell = _orderList.FirstOrDefault(x=&gt;x.Key == key);
            _orderList.Remove(tempCacheCell);
            _orderList.Add(tempCacheCell);
</code></pre>
</blockquote>

<p>What's the asymptotic complexity of adding or fetching an element? It can certainly be improved. Hint: one approach would be to manually implement a different type of list. Alternative hint: there's some quite powerful collections in .Net Framework (I haven't checked which of them made it into .Net Standard).</p>
    </div>