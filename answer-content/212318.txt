<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Using a string instead of division / modulo seems to be a few percent faster than the solution from the question:</p>

<pre><code>    public static int Reverse(int x)
    {
        var str = x.ToString();
        int res = 0;
        int multiplier = 1;
        var negative = str[0] == '-';
        for (int i = negative ? 1 : 0; i &lt; str.Length; i++)
        {
            var num = str[i] - 48;
            if (num &gt; 0 || multiplier &gt; 1)
            {
                res += num * multiplier;
                multiplier *= 10;
            }
        }
        return negative ? -res : res;
    }
</code></pre>

<p>However, improving the solutions from the question using System.Math.DivRem (as mistertribs suggested in a comment) will be even faster :):</p>

<pre><code>    public static int Reverse(int x)
    {
        var result = 0;
        var negative = x &lt; 0;
        if (negative) x = -x;

        while (x != 0)
        {
            x = Math.DivRem(x, 10, out var rest);
            result = result * 10 + rest;
        }

        return negative ? -result : result;
    }
</code></pre>
    </div>