<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Additionally to the other comments, i would think about the following:</p>

<h1>Magic values vs. constants</h1>

<p>The percentage for the tips (30%, 20%, 10%, 5%) are "magic numbers" that are used in the text and in the calculation. In bigger programs, when you have to change such a value (30% to 31%) you can nearly bet, that one of the occurances is missed. The replacement gets even harder, because here the 30% is about the tip, but in other places of the programm (if it gets bigger) you may use the same value for a different purpose. -&gt; That means you can not just search and replace them.<br>
==&gt; Therefor i would use constants for those values. That allows to use the same value at multiple places, but it is still easy changeable. Also the code is much easier to read when there is a "TIP_FOR_OUTSTANDING_QUALITY" instead of a "30%".</p>

<h1>Splitting code</h1>

<p>Also i would split the code in multiple parts. Currently the "serviceQuality" method is calculating AND converting the user input. When you want to add input validation or more complex convertings, then this gets messy. Therefor i would take the user input. convert it, and then use the clean and save number to feed the serviceQuality method.<br>
You could move it even further by having a method asking for the input, a method for the conversion, one for the calculation and one for the output.</p>

<h1>Resumee</h1>

<p>My suggestions result in a lot more code. But i think that code is easier to read and to maintain. And the most time is consumed by bugfixes and changes of code. Only a small part is really used for the initial creation. </p>

<p>Or as a rule of thumb: Code is read 100 times more often than it is written -&gt; It makes sense to put quite some effort into the readability :-)</p>
    </div>