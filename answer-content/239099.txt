<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Be explicit about the data structure you're using, and the assumptions. For example, a comment like this would be helpful for any future readers(including yourself): "We represent a graph as adjacency list stored in a Python dictionary. The adjacency list can contain nodes that are not present in the keys of the dictionary, and they should be treated as nodes that contain no outward edges."</li>
<li>I suspect that it's a bad idea to allow nodes that are not present in the keys. Conventionally, an adjacency list should have one entry for each node, whether they have outward edges or not. Moreover, it causes a lot of headache in implementations(To access a dictionary, we had to use <code>get()</code> method instead of the more straightforward square bracket notation). </li>
<li>The first five lines of your function essentially counts each nodes' occurrence. If you require that all nodes should be present in the keys of the dictionary, it can be implemented in a single line:</li>
</ul>

<pre><code>in_degree = {u: sum(u in v for v in graph.values()) for u in graph}
</code></pre>

<ul>
<li><code>topological_sort</code> sounds like a verb. Try use a noun for variable names, such as <code>sorted_nodes</code>.</li>
</ul>
    </div>