<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This </p>

<blockquote>
<pre><code>    if (outerRect.xMin &lt; innerRect.xMin &amp;&amp; outerRect.xMax &gt; innerRect.xMax &amp;&amp;
        outerRect.yMin &lt; innerRect.yMin &amp;&amp; outerRect.yMax &gt; innerRect.yMax)
</code></pre>
</blockquote>

<p>and this:</p>

<blockquote>
<pre><code>        if (outerRect.xMin &gt; innerRect.xMin)
        {
            outOfBounds |= OutOfBoundsDirection.Left;
        }

        if (outerRect.xMax &lt; innerRect.xMax)
        {
            outOfBounds |= OutOfBoundsDirection.Right;
        }

        if (outerRect.yMin &gt; innerRect.yMin)
        {
            outOfBounds |= OutOfBoundsDirection.Bottom;
        }

        if (outerRect.yMax &lt; innerRect.yMax)
        {
            outOfBounds |= OutOfBoundsDirection.Top;
        }
</code></pre>
</blockquote>

<p>are candidates as extension methods:</p>

<pre><code>static class Extensions
{
  public static bool Contains(this Rect outerRect, Rect innerRect)
  {
    return outerRect.xMin &lt; innerRect.xMin &amp;&amp; outerRect.xMax &gt; innerRect.xMax &amp;&amp;
             outerRect.yMin &lt; innerRect.yMin &amp;&amp; outerRect.yMax &gt; innerRect.yMax;
  }

  public static OutOfBoundsDirection Overlaps(this Rect outerRect, Rect innerRect)
  {
    OutOfBoundsDirection outOfBounds = OutOfBoundsDirection.None;

    if (outerRect.xMin &gt; innerRect.xMin)
    {
       outOfBounds |= OutOfBoundsDirection.Left;
    }

    if (outerRect.xMax &lt; innerRect.xMax)
    {
      outOfBounds |= OutOfBoundsDirection.Right;
    }

    if (outerRect.yMin &gt; innerRect.yMin)
    {
      outOfBounds |= OutOfBoundsDirection.Bottom;
    }

    if (outerRect.yMax &lt; innerRect.yMax)
    {
      outOfBounds |= OutOfBoundsDirection.Top;
    }

    return outOfBounds;
  }
}
</code></pre>

<hr>

<p>I'm not a fan of the <code>OutOfBoundsDirection.Inbounds</code> flag, because it can lead to invalid states as:</p>

<pre><code>OutOfBoundsDirection bounds = OutOfBoundsDirection.Inbounds | OutOfBoundsDirection.Left;
</code></pre>

<hr>

<blockquote>
<pre><code>    if (outerRect.xMin &gt; innerRect.xMin)
    {
       outOfBounds |= OutOfBoundsDirection.Left;
    }
</code></pre>
</blockquote>

<p>What if <code>outOfBounds</code> has the flag <code>Left</code> set before this check, then it's still set even if <code>outerRect.xMin &lt;= innerRect.xMin</code>? Or maybe you reset <code>outOfBounds</code> elsewhere?</p>

<p>Maybe the first check:</p>

<blockquote>
<pre><code>        if ((outOfBounds &amp;= OutOfBoundsDirection.Inbounds) == OutOfBoundsDirection.Inbounds)
        {
            outOfBounds ^= OutOfBoundsDirection.Inbounds;
        }
</code></pre>
</blockquote>

<p>should just be:</p>

<pre><code>outOfBounds = OutOfBoundsDirection.None;
</code></pre>
    </div>