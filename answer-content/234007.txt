<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here's a solution with conditional returns. A benefit with this approach is that it saves time by not doing a full check as soon as a non-magic property is discovered. This function takes <code>square</code> as a list of lists (rows).</p>

<pre><code>from typing import List

def is_really_magic(square: List[List[int]]) -&gt; bool:
    dim = len(square)
    magic_const = dim * (dim**2 +1) // 2
    dia_sum = 0
    dia_sum2 = 0
    for y in range(dim):
        if sum(square[y]) != magic_const:
            return False
        col_sum = 0
        for row in square:
            col_sum += row[y]
        if col_sum != magic_const:
            return False        
        dia_sum += square[y][y]
        dia_sum2 += square[y][dim-1-y]
    if dia_sum != magic_const or dia_sum2 != magic_const:
        return False
    return True
</code></pre>
    </div>