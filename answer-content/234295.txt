<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm pretty sure I don't understand the usage of your script, but I'll assume you have a good reason for performing this comparison.</p>

<p>I see that you are declaring/calling <code>$ngram_rta = getNgrams($valor)</code> inside your inner loop.  This means that for each word in your question string, you are asking php to do the same job to produce the same output.  You must not ask php to repeat itself.  Since <code>$ngrame_rta</code> is not mutated inside of the inner loop, you should generate the data inside the outer loop and count its length before entering the inner loop.</p>

<hr>

<p>In your posted script, <code>if($i &gt; ($n - 2)) {</code> is never satisfied on the first iteration.  I'll urge you to have a re-think about this condition.  Perhaps you want to make the <code>2</code> dynamic and perhaps you want to change the comparison to <code>&gt;=</code>.  You decide how to avoid performing an usable iteration.</p>

<hr>

<p>If the idea here is to break a word into an array of strings with <code>$n</code> length starting from each offset in the string then this seems cleaner:</p>

<p>(<a href="https://3v4l.org/LPSdc" rel="nofollow noreferrer">Demo</a>)</p>

<pre><code>for ($pos = strlen($match) - $n; $pos &gt;= 0; --$pos) {
    $nGrams[] = substr($match, $pos, $n);
}
</code></pre>

<hr>

<p>I guess your script could boil down to something like this:</p>

<p>(<a href="https://3v4l.org/nlLFE" rel="nofollow noreferrer">Demo</a>)</p>

<pre><code>function getNgrams($match, $n = 2) {
    $nGrams = [];
    for ($pos = strlen($match) - $n; $pos &gt;= 0; --$pos) {
        $nGrams[] = substr($match, $pos, $n);
    }
    return $nGrams;
}

$question = 'happy birthday';
$questionNGrams = array_map("getNgrams", explode(' ', $question));

$rta = ['today', 'happy', ' tomorrow ', 'monday', 'birthda'];

foreach ($rta as $value) { 
    $rtaNGram = getNgrams($value);
    $rtaNGramCount = count($rtaNGram);
    foreach ($questionNGrams as $questionNGram) {
        if (count(array_intersect($rtaNGram, $questionNGram)) / $rtaNGramCount &gt;= 0.8) {
            echo "{$value}&lt;br&gt;";
            break;  // prevent further iteration of inner loop after $value qualifies
        }
    }
}
</code></pre>

<p>Output:</p>

<pre><code>happy&lt;br&gt;birthda&lt;br&gt;
</code></pre>

<p>I do find my eyes going a bit crossed as I continue to read your code because I don't relate <code>$question</code> and <code>$rta</code> to the data they contain.  Perhaps be more accurate/intentional about the variable naming.</p>
    </div>