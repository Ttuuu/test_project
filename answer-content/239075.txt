<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As we are working in C#, below is an example of an object-oriented approach, in contrast to the static/procedural approach.</p>

<p>UPDATE: In the original answer I neglected to create a Number class to handle the reversing of the value. I have added it.</p>

<p>And here's the output:<br>
<a href="https://i.stack.imgur.com/4jjA7.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/4jjA7.jpg" alt="output"></a></p>

<pre><code>public class App_ReverseNumbers
{
    public void Run()
    {
        var list = new List&lt;int&gt; { 123, 456, 789 };

        var numbers = new Numbers(list);
        Console.WriteLine(numbers.ToString());

        var reversed = numbers.AsReversed();
        Console.WriteLine(reversed.ToString());
    }        
}

public class Numbers
{
    public List&lt;int&gt; List;

    public Numbers(List&lt;int&gt; list) =&gt; List = list;

    public Numbers AsReversed() =&gt; 
        new Numbers(List.Select(i =&gt; new Number(i).Reverse()).ToList());

    public override string ToString() =&gt; string.Join(", ", List);
}

public class Number
{
    public int Value { get; private set; }

    public Number(int value) =&gt; Value = value;

    public int Reverse() =&gt; int.Parse(new string(Value.ToString().Reverse().ToArray()));
}
</code></pre>
    </div>