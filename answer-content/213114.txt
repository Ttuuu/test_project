<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code is missing automatic tests.</p>

<p>One test case you definitely need is to ensure that <code>PolyAdd</code> and the related functions do not modify their arguments. As far as I can see by reading the code, the current version of <code>PolyAdd</code> modifies the bigger of its arguments, which is unexpected.</p>

<p>The reason that the argument is modified is that slices are essentially pointers, and when passing them as arguments, their content is not copied.</p>

<p>You should define a constructor function <code>NewPoly(deg int)</code> to hide all the implementation details. Using this constructor will also solve the aliasing problem mentioned above.</p>

<p>Regarding the long code for <code>Str</code>, you can merge some of the duplicate code:</p>

<pre class="lang-golang prettyprint-override"><code>    c := p.Coeffs[i]
    if c == 0 {
        continue;
    }

    if c &gt; 0 {
        s += " + "
    } else {
        s += " - "
    }

    if (c != 1 &amp;&amp; c != -1) || i == 0 {
        s += strconv.FormatFloat(c, 'g', -1, 64)
    }
    if i &gt; 1 {
        s += "x^" + strconv.Itoa(i)
    } else if i == 1 {
        s += "x"
    }
</code></pre>

<p>By extracting the expression <code>p.Coeffs[i]</code> into a variable, the code gets a bit cleaner. </p>

<p>If you need to speed up <code>Str</code>, use a <code>strings.Builder</code> instead of the <code>+=</code> operator.</p>
    </div>