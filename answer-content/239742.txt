<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can speed some things up by using more list and dict comprehensions, and by reducing your function calls. Some examples follow.</p>

<p><code>d = dict()</code> vs <code>d = {}</code>: 131 ns vs 30 ns.</p>

<p><code>len_of_half_a = int(len(a)/2)</code> vs <code>len_of_half_a = len(a)//2</code>: 201 ns vs 99 ns.</p>

<p>I used Python 3.8.1 for both tests.</p>

<p>Granted that this isn't much, but several of these tiny improvements could help you reach the target. You should see similar if not better performance increases by using list and dict comprehensions, e.g. for <code>domList</code>, <code>d</code>, and <code>dominantList</code>. And replacing your <code>while x &lt;= len(A) - K:</code> with a range-based iterator should bump you up a little more.</p>

<p>And a final small note is that you should try to follow standards with your naming and ensure clear and obvious names. <code>A</code> is not a good name for a variable, nor is <code>d</code>, and python tends to use <code>snake_case</code> over <code>camelCase</code>.</p>
    </div>