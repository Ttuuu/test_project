<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since it always operates on System.in, which is static, it's fine to have a static class. You could name it "SystemInput" to make the purpose clearer and make the class final with private constructor to make a point that it's not to be instantiated.</p>

<p>Your naming convention is uncommon to Java. Methods should start ith lower case letter.</p>

<p>The class is essentially just a big chunk of utility methods. To maintain the single responsibility principle, you could split them into their own classes that operate on a given Scanner. Maybe implement a common typed interface... You're just doing procedural programming with a global variable now.</p>

<p>Using the wildcard in imports is a bit bad practise. It becomes hard to tell what you actually need. It's also a sign that your class might have too many responsibilities if you have to resort to "just gimme everything".</p>

<p>What kind of projects do you usually do? (Ok, this is purely anecdotal, but) I've been programming Java for about 20 years and while I've parsed command line parameters quite often and read data piped from other commands I don't remember ever reading input from console interactively after leaving the university "Introduction to Java" course.</p>
    </div>