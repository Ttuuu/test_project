<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What if I add a class <code>Kelvin</code> without modifying the other classes? When I convert <code>Celsius</code> to <code>Kelvin</code> then, your code says that 20 Â°C = 20 K, which is simply wrong.</p>

<p>Your whole approach is doomed to fail. What you should do instead is to define one reference temperature scale. I would take Kelvin for that. Then, for every other temperature scale, have methods <code>fromKelvin</code> and <code>toKelvin</code>. That's all. This approach is well-known <a href="https://en.wikipedia.org/wiki/Compiler#Three-stage_compiler_structure" rel="noreferrer">from constructing compilers</a>, which has the same problem of several similar source languages and several different target machines.</p>

<p>For converting between arbitrary temperature scales you can have a helper method in the <code>Temperature</code> class like this:</p>

<pre class="lang-java prettyprint-override"><code>public static Temperature convert(Temperature from, TemperatureScale to) {
    double kelvin = from.toKelvin();
    return to.fromKelvin(kelvin);
}
</code></pre>

<p>You can see that there are two completely different classes involved:</p>

<ol>
<li>A temperature scale, like Kelvin or Fahrenheit</li>
<li>A specific temperature, consisting of a temperature scale and a value, like 293 Kelvin</li>
</ol>

<hr>

<p>Regarding the exception class: There is no good reason to give it a <code>String</code> parameter. The name of the class is already expressive enough. Therefore you should remove that parameter and just <code>throw new AbsoluteZeroException()</code>. You should probably rename it to <code>BelowAbsoluteZeroException</code>. Or you should just take the predefined <code>IllegalArgumentException</code> and be fine. In many cases you don't need to invent your own exception classes.</p>
    </div>