<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First, a few points of the code you wrote. If you have an array of values, you can <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join" rel="nofollow noreferrer"><code>join</code></a> the values together to efficiently create a string. This would eliminate the need for at least one of the <code>reduce</code> calls. Second, in a reduce call, the value of the second callback parameter (<code>currentValue</code> in your code) is the value of the array parameter at the index parameter (<code>arr[currentIndex]</code> in your code). Combining that with Javascript's capability to ignore excess function parameters, your <code>reduce</code> calls should take only two parameters, and use the <code>currentValue</code> in place of the <code>arr[currentIndex]</code>.</p>

<p>You should also avoid using the same variable names in the same scope. Having two sets of <code>total</code>, <code>currentValue</code>, <code>currentIndex</code>, and <code>arr</code> could get confusing quickly, and lead to strange bugs.</p>

<p>Now, for the one-liner:</p>

<pre><code>return this.grid.flat().map((el) =&gt; el ? "o" : "b").join("");
</code></pre>

<p>See <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat" rel="nofollow noreferrer"><code>Array#flat</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" rel="nofollow noreferrer"><code>Array#map</code></a>, and the aforementioned <code>Array#join</code>. Of these, <code>Array#flat</code> is the newest and possibly unsupported method. It can be easily polyfilled or replaced. The MDN page shows some clever replacements like <code>arr.reduce((all, row) =&gt; all.concat(row), [])</code> and <code>[].concat(...arr)</code>.</p>
    </div>