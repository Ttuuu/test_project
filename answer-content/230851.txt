<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some general comments:</p>

<ul>
<li><p>In terms of readability and protection from errors, you could benefit a lot from something like <code>struct point</code> which capsulates a 2-dimensional points. That is, if x and y belong together logically, they should be inside the same structure.</p></li>
<li><p>Read about const correctness. All parameters that are not modified should be marked as <code>const</code>, again for readability and protection from errors.</p></li>
<li><p>All <code>max_...</code> and <code>max_...</code> variables should be const as well.</p></li>
<li><p>You are doing many unnecessary passes over your vectors with <code>max_element</code> and <code>min_element</code>, but what you actually want here is <a href="https://en.cppreference.com/w/cpp/algorithm/minmax_element" rel="nofollow noreferrer"><code>minmax_element</code></a>.</p></li>
<li><p>Is <code>temp2</code> really necessary? Why not push into <code>res</code> directly?</p></li>
<li><p>Currently, you also need to include <code>&lt;iterator&gt;</code>. Note that in C++, we also have <code>&lt;ctime&gt;</code>.</p></li>
<li><p>For readability and potentially performance as well, don't declare all variables at the beginning of a scope. That is, <code>box_...</code> vectors and <code>res</code> can be declared much later, closer to their site of usage.</p></li>
<li><p>You can precompute <code>cutoff * 1.1</code> instead of writing the expression each time you need the result.</p></li>
<li><p>I don't know if you did already, but <a href="https://www.boost.org/doc/libs/1_71_0/libs/geometry/doc/html/index.html" rel="nofollow noreferrer">Boost.Geometry</a> could be helpful in cleaning up the code.</p></li>
</ul>
    </div>