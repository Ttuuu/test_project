<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't know Java, but I still found your challenge interesting! So I translated your code to Python and tried to beat it:</p>

<pre><code>def your_search(seq, target):
    start, end, total  = 0,0,0

    while (end &lt; len(seq)):
        total += seq[end]
        while (total&gt;=target):
            total-=seq[start]
            start+=1
            if (total == target):
                return True
        end+=1
    return False
</code></pre>

<p>Here is my attempted improvement:</p>

<pre><code>def segment_search(seq,target,i=0, s=0, total=0):
    try:
        while total&lt;target:
            total += seq[i]
            i+=1
    except:
        return False

    if total == target:
        return True, s, i
    else:
        return segment_search(seq,target,i,s+1, total-seq[s])
</code></pre>

<p>And here is the performance test:</p>

<pre><code>seq = [1, 2, 6, 7, 3, 4, 6, 8, 2, 3, 6, 2, 6, 8, 4, 1, 5, 7, 3, 4, 1, 2, 1, 4, 6, 8, 9, 5, 4, 7, 1, 2, 4, 5, 2, 6, 7, 3, 8, 4, 2, 5]*10
def wrapper(func,seq):
    for target in range(sum(seq)):
        func(seq,target)

In [55]: %timeit wrapper(your_search,seq)
10 loops, best of 3: 54.8 ms per loop

In [56]: %timeit wrapper(segment_search,seq)
10 loops, best of 3: 26.9 ms per loop
</code></pre>

<p>It's around double as fast in Python and arguably more elegant!
I hope my proposed idea helps for Java as well!</p>

<p>EDIT: I didn't read your text, just the code. There is nothing wrong with your code. It's actually quite brilliant! Sometimes the testers should be tested instead.. But to make sure, I will check it again. If you don't hear from me it means I haven't found a mistake. By the way, this forum is meant for code performance suggestions.. </p>

<p>edit2:</p>

<p>I found your mistake!The argument "continuous" was misleading! Instead you failed by never checking if moving to the right finds the correct total. Your if statement was hidden in a loop. See comments:</p>

<pre><code>// [1, 3, 1, 4, 23]

int start  = 0
int end  = 0

int total = 0;
int target = 8;

while(end &lt; arr.length){

  total += arr[end]; 

  while(total&gt;=target){ //remove the "="

     total-=arr[start]; 

     start++;

     if(total == target){   // put this outside of the loop
       return true;
     }

  }
  end++;
}

return false;
</code></pre>
    </div>