<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In general visitor patterns in other languages are manage with tables, maps or any other struct/object type, here is the improvement that you can make on your code</p>

<pre><code>class TaxVisitor(CostVisitor):

    def cost(self,node):
        if isinstance(node, Milk):
            return 150
        if isinstance(node, Sugar):
            return 100
        if isinstance(node, Plain_Coffee):
            return 10
</code></pre>

<p>Can be changed to</p>

<pre><code>class TaxVisitor(CostVisitor):
    self.__table = { "Milk" : 150, "Sugar" : 100, ...}

    def cost(self,node):
        if node.__class__.__name__ in self.__table:
            return self.__table[node.__class__.__name__]
</code></pre>

<p>This will make it easy to extender the number of instances by just update the table variable, hope is clear.</p>
    </div>