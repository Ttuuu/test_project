<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>tmp = game[:][:]</code> is not doing what you think it is doing.  <code>game[:]</code> returns a slice of all the rows of <code>game</code> (so a list of columns).  To that, you apply the slice operator <code>[:]</code>, which takes the slice of the row list (of columns), and returns a row list (of columns).  In short, <code>game[:]</code> is the same as <code>game[:][:]</code>, which is the same as <code>game[:][:][:][:][:]</code>.</p>

<p>In particular, <code>tmp</code> is list which contains references to the <strong>same</strong> column lists as <code>game</code>, so <code>tmp[row][col]</code> accesses exactly the same entry as <code>game[row][col]</code>.  You have not created a temporary copy of <code>game</code>; you have created a copy of references to the same column list objects.</p>

<p>As such, you can remove <code>tmp</code>, and just set <code>game[row][col]</code> directly, and set it back to <code>None</code> like you are doing via <code>tmp</code>.</p>

<hr>

<p>The code <code>x, y = move[0], move[1]</code> seems to be useless, since <code>x</code> and <code>y</code> are never used.</p>

<hr>

<p>The <code>minimax()</code> function returns the best possible outcome for that player, but doesn’t return the move that corresponds to that outcome.  “You have a guaranteed winning move, but I’m not going to tell you what it is.”</p>

<p>You might want to return the move that corresponds to that outcome.</p>
    </div>