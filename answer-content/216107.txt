<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A couple possible bugs:</p>

<ul>
<li>When a user registers, there's text saying that they get $1000 to start. I don't see where this money comes from in the code.</li>
<li>In <code>display_info()</code>, if <code>player_stands</code> is <code>True</code>, I think it could be possible to display both "Busted! You lost!" and ""Dealer busted! You won"</li>
</ul>

<p>I don't see the point of passing <code>still_playing</code> to <code>display_info</code>. If we don't pass it, set <code>still_playing</code> to <code>True</code> at the start of the function, the overall behavior doesn't change.</p>

<p>I think <code>display_info()</code> is doing an awful lot. It:</p>

<ul>
<li>shows the current state</li>
<li>determines the winner</li>
<li>changes the player's money, and</li>
<li>Tells you who won/lost</li>
</ul>

<p>I would try to separate these out.</p>

<p><code>hit_or_stand()</code> returns a number, so the caller has to remember what it means. Consider using a constant or an <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer">enum</a> instead.</p>

<p>The user's password gets stored in plaintext. Consider encrypting it.</p>

<p>It seems unconventional to have a function parameter be in all caps. Per PEP 8: </p>

<blockquote>
  <p>Constants are usually defined on a module level and written in all capital letters with underscores separating words. Examples include MAX_OVERFLOW and TOTAL."</p>
</blockquote>

<p>So it would look more natural to do, e.g.</p>

<pre><code>import sys

DEALER_MINIMUM_SCORE = 17

[...]

def dealer_play(shoe, dealer):
    while score(dealer) &lt;= DEALER_MINIMUM_SCORE:
        deal_card(shoe, dealer, 1)
    return False
</code></pre>

<p>or maybe</p>

<pre><code>def dealer_play(shoe, dealer, dealer_minimum_score):
    while score(dealer) &lt;= dealer_minimum_score:
        deal_card(shoe, dealer, 1)
    return False

[...]

still_playing = dealer_play(shoe, dealer, DEALER_MINIMUM_SCORE)
</code></pre>
    </div>