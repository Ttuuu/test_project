<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Normally I'd suggest printing out the current time three times: at the beginning, after calling <code>getPrimeNumbers</code>, and after calling <code>getMaxPrimeFactor</code>, to see which function is taking up so much time.
But in this case <em>both</em> functions are very inefficient.</p>
<p>Put more effort into designing and analyzing your algorithms, <em>before</em> you try coding them in any specific language.</p>
<h1>getPrimeNumbers():</h1>
<p>To generate a list of prime numbers, it isn't necessary to test every individual value in the range.
<a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes" rel="nofollow noreferrer">Sieve of Eratosthenes - Wikipedia</a> describes a much more efficient method.</p>
<p>And you can make the range much shorter by realizing that if it the given number itself isn't prime, the next largest candidate will be its square root.
E.g. if the number is 1,000,000, its largest prime factor can't be larger than 1000.
If the number is 600851475143, no prime factor other than itself can be larger than 800,000.</p>
<h1>getMaxPrimeFactor:</h1>
<p>Building a list of prime factors, printing the maximum value in the list, then discarding them all is a waste of effort.</p>
<p>Instead of a list, simply keep track of the last prime factor found.</p>
    </div>