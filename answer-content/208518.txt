<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One thing that stands out for me in your code is the lack of use of the remainder <code>%</code>. <code>i%n</code> gives you the remainder of the Euclidean division of <code>n</code> by <code>i</code>, which is a positive integer &gt;=0 and &lt; n.</p>

<p>For example, <code>5%12 = 5</code> because <code>5 = 12*0 + 5</code>, and <code>13%12 = 1</code> because <code>13 = 12*1 + 1</code> (I am using <code>n=12</code> in this example because this is basically what we do when reading clocks).</p>

<p>Anyways, this is useful if you have a list of things which is "cyclic", i.e. you would like to go back to the beginning after reaching the end, which is exactly the case here.</p>

<p>So, for encryption, instead of </p>

<pre><code> if(j!=26){
      translated_message_build.append(alphabet[j+1]);
      }
 else{
      translated_message_build.append((alphabet[j-26]));
      }
</code></pre>

<p>I would write</p>

<pre><code>translated_message_build.append(alphabet[(j+1)%26]);
</code></pre>

<p>And for decryption</p>

<pre><code>translated_message_build.append(alphabet[(j-1)%26]);
</code></pre>

<p>This works because (for encryption) if <code>j=26</code>, <code>j+1 = 27</code> and <code>27%26 = 1</code> because <code>27=26*1 + 1</code>.</p>

<p>And (for decryption) if <code>j=0</code>, <code>j-1 = -1</code> and <code>-1%26 = 25</code> because <code>-1 = 26*(-1) +25</code>.</p>
    </div>