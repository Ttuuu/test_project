<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Bug</strong> in the posted code. If you try it with the input <code>[1,0,1,0,0]</code> you will get the answer <code>1</code>. The first two lines in the <code>else</code> won't get executed if the sequence ends with the longest run of zeros. Correct code is</p>

<pre><code>    for j in l:
        if j==0:
            c+=1
        else:
            c = 0
        if c &gt; max_count:
            max_count = c

    return max_count
</code></pre>

<p>This can be considerably shortened and, I think, clarified:</p>

<pre><code>    for j in l:
        c = c + 1 if j==0 else 0  # in other languages there is a ternary ?: op
        max_count = max( max_count, c) 

    return max_count
</code></pre>

<p>Two stylistic issues:</p>

<p>never use <code>l</code> as a variable name, it reads like <code>1</code>. Lowercase <code>l</code> is best avoided altogether unless it's part of a word in a natural language. Similar arguments against <code>O</code> and <code>Z</code> which read like <code>0</code> and <code>2</code>, but class-names starting with capital <code>O</code> or <code>Z</code> aren't so confusing.</p>

<p>The Pythonic form of initialization is <code>c, max_count = 0, 0</code> (one line) provided the right-hand side, in particular, needs no real thought. </p>
    </div>