<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The counting sort that you implemented is definitely the way to go.  I would clean up the code a little bit, though.</p>

<p><strong>Boxing</strong> <code>elem</code> as an <code>Integer</code>, then unboxing it back to an <code>int</code>, is unjustified.</p>

<p>Writing a <strong><code>switch</code> statement,</strong> rather than an <code>else if</code> chain, produces slightly cleaner bytecode.</p>

<p><strong>You've mingled the output logic with the sorting logic,</strong> which is bad practice.  You should define a separate function to do the output, especially since the <code>main()</code> is responsible for reading the input.  The sorting function should be named to suggest that it only handles 0, 1, 2 as input.</p>

<p>Each line of output will have a <strong>trailing space</strong> after the last number.  That might cause your solution to fail some tests.</p>

<p>Since you call <code>Integer.parseInt()</code> so much, you might be better off using a <code>Scanner</code>.</p>

<pre><code>import java.util.Arrays;
import java.util.Scanner;
import java.util.stream.Collectors;

class GFG {
    private GFG() {}

    public static void sort012(int[] array) {
        int count0 = 0, count1 = 0, count2 = 0;
        for (int elem : array) {
            switch (elem) {
                case 0: count0++; break;
                case 1: count1++; break;
                case 2: count2++; break;
                default: throw new IllegalArgumentException("Not 0, 1, or 2");
            }
        }
        int i = 0;
        while (count0-- &gt; 0) { array[i++] = 0; }
        while (count1-- &gt; 0) { array[i++] = 1; }
        while (count2-- &gt; 0) { array[i++] = 2; }
    }

    public static String toString(int[] array) {
        return Arrays.stream(array)
                     .mapToObj(String::valueOf)
                     .collect(Collectors.joining(" "));
    }

    public static void main (String[] args) {
        Scanner scan = new Scanner(System.in);
        int numTests = scan.nextInt(); scan.nextLine();
        while (numTests-- &gt; 0) {
            int size = scan.nextInt(); scan.nextLine();
            String[] inputs = scan.nextLine().split(" ");

            int[] array = new int[size];
            for (int j = 0; j &lt; size; j++) {
                array[j] = Integer.parseInt(inputs[j]);
            }

            sort012(array);
            System.out.println(toString(array));
        }
    }
}
</code></pre>
    </div>