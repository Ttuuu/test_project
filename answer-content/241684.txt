<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Much of your work with X values can be lifted out of the Y loops, since they are invariant within the Y loop.  This means that all the calculations of the various <code>pixel_x</code> values should be done before starting .</p>

<p>Also the four nested <code>if</code> statements could be a bit cleaner as one big <code>if</code>.  However, the two conditions that test the X values should be done before the Y loop, since if they are true the Y loop won't do anything.</p>

<p>The conditions with that if can be handled before the loop starts by adjusting the loop starting and/or end values.  This is similar to clipping graphics at the edge of a screen (or window).  For example, if <code>true_pixel_x</code> is less than <code>chunk_min_pixel_x</code>, your loop won't do anything.  If you start <code>x</code> at an appropriate value that condition can be skipped entirely.</p>

<pre><code>int x = left_border &lt; chunk_min_pixel_x ? chunk_min_pixel_x - left_border : 0;
</code></pre>

<p>What that does is if the first X value will be out of range, we start <code>x</code> at the first value that is in range, otherwise we start at 0.</p>

<p>Similar conditions can be done to determine the end X, start Y, and end Y values.  Once that is done then your loop won't have any extra conditions in it and you won't need the <code>if</code> check.</p>
    </div>