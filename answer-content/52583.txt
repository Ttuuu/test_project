<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Making your code run</strong></p>

<p>Here's the result of my first run :</p>

<pre><code>  File "cleaner.py", line 305
    likes)
         ^
SyntaxError: invalid syntax
</code></pre>

<p>This is quite easy to fix : just comment this part of the line or put it with the part of the code it goes with.</p>

<p>Here's the result of the second run :</p>

<pre><code>Traceback (most recent call last):
  File "cleaner.py", line 19, in &lt;module&gt;
    likes = open('filepath' + 'likes.csv')
IOError: [Errno 2] No such file or directory: 'filepathlikes.csv'
</code></pre>

<p>Fixed by commenting the line <code>likes = open('filepath' + 'likes.csv')</code> (and moving it to the bottom of the file where it belongs).</p>

<p><strong>Style</strong></p>

<p>There is a common Python style guide described in <a href="http://legacy.python.org/dev/peps/pep-0008/" rel="nofollow">PEP 8</a>.</p>

<p>You can find a few tools that will help you to spot a few things than can easily be improved :</p>

<ul>
<li><p><code>pep8</code> (and its <a href="http://pep8online.com/" rel="nofollow">online version</a>)</p></li>
<li><p><code>pychecker</code></p></li>
<li><p><code>pylint</code></p></li>
<li><p><code>pyflakes</code></p></li>
</ul>

<p>I'll let you play with this because there is quite a lot to say :</p>

<p><strong>Documentation</strong></p>

<p>Your code needs some king of comments/docstring so that one can understand what it is all about.</p>

<p><strong>Focusing on smaller pieces of code</strong></p>

<p>As I have no idea what the big pictures is, I'll give you some tips on smaller parts of the code that can easily be improved :</p>

<p>You can rewrite :</p>

<pre><code>                letCheck = 0
                for letter in like[:5]:
                    if letter in alphanum:
                       letCheck += 1
</code></pre>

<p>with the <a href="https://docs.python.org/release/2.7.6/library/functions.html#sum" rel="nofollow">sum</a> function :</p>

<pre><code>                letCheck = sum(1 for letter in like[:5] if letter in alphanum)
</code></pre>

<p>You can rewrite</p>

<pre><code>                if letCheck &gt;= len(like[:5])-1:
                    pass
                else:
                    userLikes.remove(like)
</code></pre>

<p>by inverting the condition :</p>

<pre><code>                if letCheck &lt; len(like[:5])-1:
                    userLikes.remove(like)
</code></pre>

<p>You can rewrite :</p>

<pre><code>cells = range(len(userLikes))
for i in cells:
    userLikes[i] = userLikes[i].strip('"')
return userLikes
</code></pre>

<p>by using <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> :</p>

<pre><code>return [l.strip('"') for l in userLikes]
</code></pre>

<p>Your <code>userCounter</code>, on top on having a pretty bad name does not always return something. It probably be a good idea to add a <code>return False</code> at the end to make it better but if you are to write this :</p>

<pre><code>if userCount == upLimit:
    #sets upperbound on amount of data to be processed
    return True
return False
</code></pre>

<p>You should probably do this instead :</p>

<pre><code>return userCount == upLimit
</code></pre>

<p>You can rewrite :</p>

<pre><code>        if likeA != '':
            if likeA in userLikes:
                cleanLikesList += userLikes[1:]
        else:
             cleanLikesList += userLikes[1:]
</code></pre>

<p>by inverting the conditions :</p>

<pre><code>        if likeA == '':
             cleanLikesList += userLikes[1:]
        else:
            if likeA in userLikes:
                cleanLikesList += userLikes[1:]
</code></pre>

<p>merging <code>else</code> and <code>if</code></p>

<pre><code>        if likeA == '':
             cleanLikesList += userLikes[1:]
        elif likeA in userLikes:
             cleanLikesList += userLikes[1:]
</code></pre>

<p>and then merging conditions :</p>

<pre><code>        if likeA == '' or likeA in userLikes:
             cleanLikesList += userLikes[1:]
</code></pre>

<p>Also, in the same function, the <code>userCount</code> variable does not seem to be used.</p>

<p>There is still quite a lot to say but I am running out of time. As a general rule of thumb, you should try to keep your function smaller and to make it clearer what the intent is.</p>
    </div>