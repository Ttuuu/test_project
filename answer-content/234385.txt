<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>except: raise Exception</code> is awful.</p>

<ol>
<li><p>It converts all errors to <code>Exception</code>.</p>

<ul>
<li>This means errors that have nothing to do with <code>Exception</code> like <code>BaseException</code> and <code>KeyboardInterupt</code> are now something they semantically are not.</li>
<li>This also means if you have a <code>KeyError</code> then it's magically the same as any other error.</li>
</ul></li>
<li><p>It doesn't even raise an exception instance, <code>Exception()</code>.</p></li>
<li>There's no need for it, just remove it from your code.</li>
</ol>

<hr>

<p>If you weren't appending to different lists then we could see that all we need is a basic for loop.</p>

<pre><code>for proj in issue.affected_projects[:3]:
    affected.append(proj)
</code></pre>

<p>Since you have to append to other lists you can zip over them.</p>

<pre><code>for affected, proj in zip(affected_projects, issue.affected_projects):
    affected.append(proj)
</code></pre>

<p>Since you need to default to <code>''</code> you can just extend <code>issue.affected_projects</code> to these values.</p>

<pre><code>affected_projects = [[], [], []]
for issue in project:
    for affected, proj in zip(
        affected_projects,
        issue.affected_projects + 3*['']
    ):
        affected.append(proj)
</code></pre>

<p>We can remove the need for <code>affected.append</code> by moving the zip up one loop.</p>

<pre><code>affected_projects = zip(*(
    (issue.affected_projects + 3*[''])[:3]
    for issue in project
))
pd.DataFrame(zip(*affected_projects))
</code></pre>

<p>Since you are <code>zip</code>ing <code>affected_projects</code> and you're zipping <code>issue.affected_projects</code> you don't really need to <code>zip</code> at all.</p>

<pre><code>df = pd.DataFrame(
    (issue.affected_projects + 3*[''])[:3]
    for issue in project
)
</code></pre>
    </div>