<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code you've written seems to be reasonably elegant (to me at least!). You can make this slightly simpler by:</p>
<ul>
<li>storing the colors array rather than getting each time (I've used a <code>by lazy</code> but you could use a <code>nullable var</code> or a <code>lateinit var</code> if you prefer)</li>
<li>Store the cardCount elsewhere rather than locally and incrementing it each time</li>
</ul>
<p>I've put an example of these changes below. I would strongly recommend extracting out the color logic into its own class in order to make it more testable, reusable and better separation of concern.</p>
<pre><code>private val colors: IntArray by lazy{
    resources.getIntArray(R.array.cardColors)
}

private val cardCount = 0

private fun getCardColor(): Int {
    val color = colors[cardCount % colors.size]  
    cardCount.inc()
    return color
} 
</code></pre>
<p>Also, you could use the <a href="https://developer.android.com/reference/androidx/annotation/ColorInt" rel="nofollow noreferrer"><code>@ColorInt</code></a> annotation to make it clear that the Int being returned is a ColorInt.</p>
    </div>