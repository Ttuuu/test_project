<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think that <code>container</code> and <code>images</code> are being repeated unecessarly.</p>
<hr>
<p>When you call <code>imgGenerator</code> in <code>appendImages</code>, you already know that you want an array of images.</p>
<p>You can use <a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/from" rel="nofollow noreferrer">Array.from</a>:</p>
<ul>
<li>the first argument will be an <code>array-like</code> object, that is, an object that is accessed by index and with a length propertie(which is identified as <code>images</code> on our javascript)</li>
<li>the second argument will be the <code>mapFunction</code>(which will
be <code>imgGenerator</code>), a function that will be called for every
item of the array</li>
</ul>
<p>Doing this, on <code>imgGenerator</code> you avoid to make an instance of an array(<code>imgs</code>), a push into it and a <code>for</code> loop every time you want this array, although, you will not need to pass <code>images</code> as parameter again</p>
<hr>
<p>the <code>container</code> is always <code>imgsContainer</code>, so, in the <code>appendImages</code> you already know where to append</p>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function imgGenerator() {
  const img = document.createElement("img");
  img.src = `http://api.adorable.io/avatars/${randomInteger()}`;
  img.classList.add('infinite-scroll-img');
  return img;
}

function appendImages(images) {
  imgsContainer.append(
    ...Array.from({ length: images }, imgGenerator)
  );
}

function handleIntersect(entries) {
  entries.forEach(entry =&gt; {
    if (entry.isIntersecting) {
      appendImages(5);
    }
  });
}

appendImages(5);</code></pre>
</div>
</div>

    </div>