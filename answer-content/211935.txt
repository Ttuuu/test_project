<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Possible Use of Delegation</h3>

<p>I look at this code and see a lot that reminds me of code in the <code>HashMap</code> class.  You may be able to simplify this considerably by delegating your methods to a <code>HashMap</code>.</p>

<pre><code>public class FlexSet&lt;E extends Identifiable&gt; implements IdSet&lt;E&gt; {
    private Map&lt;Object, E&gt; backingMap = new HashMap&lt;&gt;();

    //example
    @Override
    boolean containsId(Object o) {
        return backingMap.containsKey(o);
    }

    //and so on
}
</code></pre>

<h3>Use Generic Type for Identifier</h3>

<p>It is highly likely that the ID of your <code>Identifiable</code> will have a type that can be known at compile time.  You can use generics to improve the prospects of bugs being found at compile time rather than runtime.</p>

<pre><code>public interface Identifiable&lt;ID&gt; {
    ID getId();
}
</code></pre>

<h3>API methods unclear</h3>

<p>The signature of <code>containsAllIds(Collection&lt;?&gt; c)</code> (and other methods along those lines) do not tell me clearly what they accept (IDs? Elements? Mix of both?).  Making the <code>Identifiable</code> generic will probably help here.</p>
    </div>