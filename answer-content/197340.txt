<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The hardest part of your question:</p>

<blockquote>
  <p>Is it allowed to change <code>Body</code> field value of <code>http.Request</code> struct?</p>
</blockquote>

<p>Part of <a href="https://golang.org/pkg/net/http/#Request" rel="nofollow noreferrer">http.Request</a> documentation:</p>

<pre><code>// Body is the request's body.
//
// For client requests a nil body means the request has no
// body, such as a GET request. The HTTP Client's Transport
// is responsible for calling the Close method.
//
// For server requests the Request Body is always non-nil
// but will return EOF immediately when no body is present.
// The Server will close the request body. The ServeHTTP
// Handler does not need to.
Body io.ReadCloser
</code></pre>

<p>The documentation says nothing about it. So we need to find some top level policy on such things. As far as I know there is no one in Go documentation.</p>

<p><code>Body</code> field type is <code>io.ReadCloser</code> interface, the actual struct type is hidden behind it.</p>

<ul>
<li>the actual type may have non exported fields which work in conjuction with <code>Close</code> method,</li>
<li>the hidden struct may be part of some reusable pool and will be lost,</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Trailer" rel="nofollow noreferrer">HTTP trailer headers</a> may be somewhere behind EOF.</li>
</ul>

<p>You may take a look at current <a href="https://golang.org/src/net/http/" rel="nofollow noreferrer"><code>net/http</code> sources</a> to find the answer, but it can change in next Go release.</p>

<p>So I guess your best bet is to ask the Go community or even propose a change to <code>Body</code> documentation that will clear things out.</p>

<hr>

<p>Another approach would be to wrap original <code>Body</code> and read it together with request handler.</p>
    </div>