<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>With a little rework I was able to increase speed 4x.</p>

<p><strong>Initial Code:</strong></p>

<pre><code>start = time.time()
# Empty data.frame to append to
dmat = pd.DataFrame()

# For i, j = hour; k, l = day
for i in range(1, 3):
    for j in range(1, 3):
        for k in range(1, 3):
            for l in range(1, 3):
                x = dat[(dat['hour'] == i) &amp; (dat['day'] == k)].distance
                y = dat[(dat['hour'] == j) &amp; (dat['day'] == l)].distance
                # Calculate difference
                jds = custom_fn(x, y)
                # Build data frame and append
                outdat = pd.DataFrame({'day_hour_a': f"{k}_{i}", 'day_hour_b': f"{l}_{j}", 'jds': [round(jds, 4)]})
                dmat = dmat.append(outdat, ignore_index=True)

# Pivot data to get matrix
distMatrix = dmat.pivot(index='day_hour_a', columns='day_hour_b', values='jds')

end = time.time()

print(end - start)
</code></pre>

<p><strong>Time 1</strong>:</p>

<pre><code>&gt; 0.07694768905639648
</code></pre>

<p><strong>Reworked code:</strong></p>

<pre><code>start = time.time()

x = []
g = dat.groupby(['day', 'hour'])['distance']
for k1, g1 in g:
    for k2, g2 in g:
        x += [(k1, k2, custom_fn(g1, g2))]

x = pd.DataFrame(x).pivot(index=0, columns=1, values=2)

print(x)

end = time.time()

print(end - start)
</code></pre>

<p><strong>Time 2</strong></p>

<pre><code>&gt; 0.022540807723999023
</code></pre>
    </div>