<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Ensure you match the given API</h1>
<p>Using <code>size_t</code> for sizes is a good thing to do, however the LeetCode problem specifies the API, and you should not change it. <code>minimumDistance()</code> should return <code>int</code>.</p>
<h1>Use <code>static constexpr</code> for compile-time constants</h1>
<p>Use <code>static constexpr</code> instead of <code>const</code> for the constants. This allows the compiler to make more optimizations, and they can then also be used in other places where a compile-time constant is required, for example:</p>
<h1>Use a <code>std::array</code></h1>
<p>Since <code>dp</code> has a compile-time constant size, you can make it a <a href="https://en.cppreference.com/w/cpp/container/array" rel="nofollow noreferrer"><code>std::array</code></a>:</p>
<pre><code>std::array&lt;int, ALPHABET_LEN&gt; dp;
</code></pre>
<h1>Avoid using small types unnecessarily</h1>
<p>Here you have a problem where you know the maximum distance between two letters is 25. I see you have decided to make <code>coordinates()</code> return an <code>unsigned short</code>. I would not do this. While it might seem more optimal, it is not: on many 32-bit and 64-bit platforms, 16-bit integers are often less efficient than 32-bit integers, since they are smaller than the natural register size, and thus the compiler might need to add instructions to ensure all but the lower 16 bits are zeroed. There might also be a penalty because it has to convert it back to a regular <code>int</code> when adding it the result to  <code>total_distance</code>.</p>
<p>The right time to use <code>short</code>s or even <code>char</code>s to hold integer values is when you have large arrays of them, since then it might reduce memory usage and memory bandwidth.</p>
<h1>Proper naming</h1>
<p>The function <code>coordinates()</code>, contrary to what the name implies, does not return coordinates. Instead, it returns a distance. So name it <code>distance()</code>.</p>
<p>I would also not name the arguments <code>left</code> and <code>right</code>, but just <code>a</code> and <code>b</code>. Left and right sounds confusing here since you might think it gets the character under the left and right fingers as inputs.</p>
<p>Also, what does <code>dp</code> stand for? It seems like this vector holds the maximum distance traveled given a starting position. Try to find a more descriptive name for it. If there is no good one, then at least add a comment explaining what <code>dp</code> is.</p>
<p>The names <code>second</code> and <code>third</code> are slightly misleading for <code>index &gt; 0</code>. Maybe it would be better to name them <code>from</code> and <code>to</code>.</p>
<h1>Use <code>WIDTH</code> consistently</h1>
<p>You still use one literal <code>6</code> in <code>coordinates()</code>.</p>
    </div>