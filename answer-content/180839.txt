<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Naming</h1>

<p>You should start naming your classes something a little more readable than <code>div1</code> as all that tells me that it's a div but nothing regarding functionality.  Like, instead of <code>div1</code> I'd use something like <code>primary-content</code> as my class name.</p>

<h1>Document.ready</h1>

<p>Next, you should wrap all your functions inside of one <code>$(document).ready()</code>.  It increases readability and does the exact same thing.</p>

<pre><code>$(document).ready(function(){  
  //button 1
  $("#button1").click(function(){
      $("#text1").toggle();
  });

  //button 2
  $("#button2").click(function(){
      $("#text2").fadeToggle();
  });
  //button 3
    $("#button3").click(function(){
      //Had to break this line into 2 so I could post this, wouldn't let me indent/space right
      $("#text3")
        .fadeIn()
        .slideUp(500)
        .slideDown(500)
        .slideUp(500)
        .slideDown(500)
        .fadeOut();
    });
});
</code></pre>

<h1>Indentation and trailing <code>}</code> and <code>});</code></h1>

<p>Your indentation seems to be a little off.  This is a common thing that happens.  It is easy to fix (unless there is more than just indentation problems).  I frequently Google <code>&lt;language name&gt; beautifier</code>.  What a beautifier does is indent your code with inhuman precision.  Try a <a href="https://www.freeformatter.com/css-beautifier.html#ad-output" rel="nofollow noreferrer">CSS beautifier</a>.  I say this because beautifying/indenting correctly can make debugging easier.  I found a couple of extra tidbits that should not be there <code>}</code>.</p>

<h1>CSS Selectors</h1>

<p>It is also considered good practice to make your CSS selectors as precise as possible (without impeding your program), like instead of <code>.primary-content</code>, you could use <code>div.container &gt; div.primary-content</code>.  Where the container contains primary content.</p>

<p>Having imprecise CSS selectors can backfire.  For instance, when you go to use <code>h1</code> somewhere else and the page and it ends up being <code>blue</code> because you set <code>h1{color:blue}</code>.  Of course, you can override that styling, but you may get a little sick of doing that after you have to manually set your x-th <code>h1</code>'s color back to default.</p>

<p>You can also massively reduce repetitive class setting by using parent selectors:</p>

<pre><code>.drop1 &gt; li, drop1 {
  background-color: #66ff99;
  border-color:#66ff99;
}
</code></pre>

<p>Goes from:</p>

<pre><code>&lt;ul class="dropdown-menu drop1"&gt;
  &lt;li class="drop1"&gt;&lt;a href="#"&gt;Dropdown 1&lt;/a&gt;&lt;/li&gt;
  &lt;li class="drop1"&gt;&lt;a href="#"&gt;Dropdown 2&lt;/a&gt;&lt;/li&gt;
  &lt;li class="drop1"&gt;&lt;a href="#"&gt;Dropdown 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>To:</p>

<pre><code>&lt;ul class="dropdown-menu drop1"&gt;
   &lt;li&gt;&lt;a href="#"&gt;Dropdown 1&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="#"&gt;Dropdown 2&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="#"&gt;Dropdown 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>Grouping selectors can also reduce code (making it easier to error check and find what you're looking for and update all relevant elements):</p>

<p>This:</p>

<pre><code>#text1 {
  padding-left: 10px;
  padding-top: 10px;
  display: none;
}

#text2 {
  padding-left: 10px;
  padding-top: 10px;
  display: none;
}

#text3 {
  padding-left: 10px;
  padding-top: 10px;
  display: none;
}
</code></pre>

<p>Should be:</p>

<pre><code>#text1, #text2, #text3 {
  padding-left: 10px;
  padding-top: 10px;
  display: none;
}
</code></pre>

<p>But even then you could further reduce it by using <code>padding: &lt;top&gt;px &lt;right&gt;px &lt;bottom&gt;px &lt;left&gt;px;</code> or, for your code:</p>

<pre><code>#text1, #text2, #text3 {
  padding: 10px 0 0 10px;
  display: none;
}
</code></pre>

<h1>Button formatting</h1>

<p>I'd personally try to steer away from manually setting <code>width</code> and <code>height</code> in the case of a button because if you were to change the text at all in the future, it will not display as intended.  There are cases where it's okay to set button size to the pixel but that is on a case-by-case basis.  So, I'd instead use <code>padding</code> for what you're doing.</p>

<pre><code>#coll_button {  
  border-radius: 6px;
  padding:10px 40px 10px 40px;
  margin-top: 30px;
  margin-left: 20px;
}
</code></pre>

<h1>jQuery indentation</h1>

<p>When I am chaining jQuery functions, I commonly use another indent for each function call.  I find it to be more readable.</p>

<pre><code>$("#button3").click(function(){
  $("#text3")
    .fadeIn()
    .slideUp(500)
    .slideDown(500)
    .slideUp(500)
    .slideDown(500)
    .fadeOut();
});
</code></pre>

<h1>Disclaimer</h1>

<p>I changed the height of your row to <code>200%</code> because I wanted to test how it would look if I included more content.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>$(document).ready(function(){  
  //button 1
  $("#button1").click(function(){
      $("#text1").toggle();
  });
  
  //button 2
  $("#button2").click(function(){
      $("#text2").fadeToggle();
  });
  //button 3
    $("#button3").click(function(){
      //Had to break this line into 2 so I could post this, wouldn't let me indent/space right
      $("#text3")
        .fadeIn()
        .slideUp(500)
        .slideDown(500)
        .slideUp(500)
        .slideDown(500)
        .fadeOut();
    });
});</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>.div1 {
  background-color: #80bfff;
}

body {
  margin:0;
  padding:0;
}

.div2 {
  background-color: #ccffff;
  text-overflow: scroll;
}

.div3 {
  background-color: #80bfff;
}

.row {
  height: 200%;
}

#main {
  background-color: #3333ff;
}

#main_head {
  height: 150px;
  margin: 0;
}

#main_foot {
  height: 150px;
  background-color: #3333ff;
  padding:0;
}

h1 {
  color: black;
}

.drop1 li {
  background-color: #66ff99;
  border-color:#66ff99;
}

#coll_button {  
  border-radius: 6px;
  padding:10px 40px 10px 40px;
  margin-top: 30px;
  margin-left: 20px;
}

.textContainer {
  padding:10px;
}

.textContainer &gt;  h4 {
  display:none;
}

#text1, #text2, #text3 {
  padding: 10px 0 0 10px;
  display: none;
}

#modalbutton1 {
  height: 50px;
  margin-left: 20px;
  margin-top: 20px;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
   &lt;html lang="en"&gt;
      &lt;head&gt;
         &lt;meta charset="utf-8"&gt;
         &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
         &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"&gt;&lt;/script&gt;
         &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css"&gt;
         &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.6/umd/popper.min.js"&gt;    &lt;/script&gt;
         &lt;script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js"&gt;&lt;/script&gt;
      &lt;/head&gt;
      &lt;body&gt;
         &lt;link rel="stylesheet" href="test.css"&gt;
         &lt;script src="test.js"&gt;&lt;/script&gt;
         &lt;div class="container-fluid" id="main"&gt;
            &lt;h1 id="main_head"&gt;This is a heading&lt;/h1&gt;
            &lt;div class="row"&gt;
               &lt;div class="col-sm-2 div1"&gt;
                  &lt;div class="btn-group-vertical"&gt;
                     &lt;h4&gt;These buttons don't work yet because I haven't implemented anything yet&lt;/h4&gt;
                     &lt;button id="button1" type="button" class="btn btn-warning"&gt;Toggle text&lt;/button&gt;
                     &lt;button id="button2" type="button" class="btn btn-info"&gt;Fade text&lt;/button&gt;
                     &lt;button id="button3" type="button" class="btn btn-success"&gt;Text animation&lt;/button&gt;
                  &lt;/div&gt;
               &lt;/div&gt;
               &lt;div class="col-sm-8 div2"&gt;
                  &lt;button data-toggle="collapse" data-target="#main_collapse" class="btn-danger coll_button" id="coll_button"&gt;Collapsible&lt;/button&gt;
                  &lt;div id="main_collapse" class="collapse"&gt;
                     &lt;h3&gt;Some pretty neat random text that just appears when you click on the collapse thing&lt;/h3&gt;
                  &lt;/div&gt;
                  &lt;br&gt;
                  &lt;!--Start modal--&gt;
                  &lt;!-- Trigger the modal with a button --&gt;
                  &lt;button type="button" class="btn btn-info btn-lg" id="modalbutton1" data-toggle="modal" data-target="#myModal"&gt;Open Modal&lt;/button&gt;
                  &lt;!-- Modal --&gt;
                  &lt;div id="myModal" class="modal fade" role="dialog"&gt;
                     &lt;div class="modal-dialog"&gt;
                        &lt;!-- Modal content--&gt;
                        &lt;div class="modal-content"&gt;
                           &lt;div class="modal-header"&gt;
                              &lt;h4 class="modal-title"&gt;Modal Header&lt;/h4&gt;
                              &lt;button type="button" class="close" data-dismiss="modal"&gt;&amp;times;&lt;/button&gt;
                           &lt;/div&gt;
                           &lt;div class="modal-body"&gt;
                              &lt;p&gt;This is a modal. It's a cool way of displaying pop up text at the click of a button.&lt;/p&gt;
                           &lt;/div&gt;
                           &lt;div class="modal-footer"&gt;
                              &lt;button type="button" class="btn btn-success" data-dismiss="modal"&gt;Close&lt;/button&gt;
                           &lt;/div&gt;
                        &lt;/div&gt;
                     &lt;/div&gt;
                  &lt;/div&gt;
                  &lt;!--End modal--&gt;
                  &lt;h4 id="text1"&gt;This is some toggleable text&lt;/h4&gt;
                  &lt;h4 id="text2"&gt;You can fade this text in and out&lt;/h4&gt;
                  &lt;h4 id="text3"&gt;You can make this text slide up and down&lt;/h4&gt;
               &lt;/div&gt;
               &lt;div class="col-sm-2 div3"&gt;
                  &lt;div class="container"&gt;
                     &lt;h4&gt;This is a dropdown menu&lt;/h4&gt;
                     &lt;div class="dropdown"&gt;
                        &lt;button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown"&gt;Click the dropdown menu
                        &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt;
                        &lt;ul class="dropdown-menu drop1"&gt;
                           &lt;li&gt;&lt;a href="#"&gt;Dropdown 1&lt;/a&gt;&lt;/li&gt;
                           &lt;li&gt;&lt;a href="#"&gt;Dropdown 2&lt;/a&gt;&lt;/li&gt;
                           &lt;li&gt;&lt;a href="#"&gt;Dropdown 3&lt;/a&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                     &lt;/div&gt;
                  &lt;/div&gt;
               &lt;/div&gt;
            &lt;/div&gt;
            &lt;div id="main_foot" class="container-fluid"&gt;
               &lt;h1&gt;This is a footer&lt;/h1&gt;
            &lt;/div&gt;
         &lt;/div&gt;
         &lt;script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"&gt;&lt;/script&gt;
      &lt;/body&gt;
   &lt;/html&gt;</code></pre>
</div>
</div>

    </div>