<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <pre class="lang-bsh prettyprint-override"><code>fileExt="*.js"
allFiles=$(find ./ -name $fileExt)
</code></pre>
</blockquote>

<p>This is a bug.  The wildcard in <code>$fileExt</code> will be expanded by the shell, and cause a syntax error when the current directory has more than one matching file in it:</p>

<pre><code>$ touch a.js b.js
$ fileExt="*.js"
$ find ./ -name $fileExt
find: paths must precede expression: `b.js'
find: possible unquoted pattern after predicate `-name'?
</code></pre>

<p>You need to quote the variable.  Better yet, use the <code>globstar</code> option to populate an array and eliminate <code>find</code> altogether:</p>

<pre class="lang-bsh prettyprint-override"><code>fileExt="js"
shopt -s globstar
declare -a allFiles=( **/*.$fileExt )
grep â€¦ "${allFiles[@]}" # to use the array
</code></pre>

<p>This regex does not match blank lines:</p>

<blockquote>
  <pre class="lang-bsh prettyprint-override"><code>grep '^[[:space:]]*//' 
</code></pre>
</blockquote>

<p>Just <code>/*</code> is enough to start a multi-line comment in JavaScript (not <code>/**</code>).</p>

<p>The script reads every file four times.  That is slow.  Since you're using Perl already, just let it count everything.  Then you don't need to capture the file names at all, since they are used only once:</p>

<pre class="lang-bsh prettyprint-override"><code>#!/bin/bash
shopt -s globstar
exec perl -nle '
    BEGIN { 
        @ARGV=grep -f, @ARGV or die "no matching files\n";
        $comment = $blank = 0;
    }
    if    ( m{ ^\s*/\* }x .. m{ \*/ }x   or   m{ ^\s*// }x ) { $comment++ }
    elsif ( m{ ^\s*$ }x ) { $blank++ }
    END { print "$comment comment lines; $blank blank lines; $. total lines" }
' **/*.js
</code></pre>

<p>At this point we're barely using bash anymore, and the globbing can be moved inside the Perl script, using the File::Find module:</p>

<pre class="lang-perl prettyprint-override"><code>#!/usr/bin/perl -wnl
BEGIN {
  use strict;
  use File::Find;
  my $ext="js";
  my @dirs=( @ARGV ? @ARGV : '.' );
  @ARGV=();
  find(sub { -f and /\.$ext$/o and push @ARGV, $File::Find::name }, @dirs );
  our ($comment, $blank) = (0, 0);
}

if    ( m{ ^\s*/\* }x .. m{ \*/ }x   or   m{ ^\s*// }x ) { $comment++ }
elsif ( m{ ^\s*$ }x ) { $blank++ }

END {
  print "$comment comment lines; $blank blank lines; $. total lines";
}
</code></pre>
    </div>