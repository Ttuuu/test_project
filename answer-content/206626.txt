<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code is too convoluted and unreadable for such a simple task</p>

<ul>
<li><code>seems</code> is a dictionary where the values are (first index, occurrences) pairs.  That's an unconventional data structure.  You'd be better off with two separate dictionaries.</li>
<li><code>seems</code> is a weird variable name.  What does it mean, anyway?</li>
<li>Why is the <code>index = len(string)</code> statement necessary?</li>
</ul>

<p>This solution is less cluttered, and more clearly expresses the idea that you are counting the characters, then finding the first unique one.</p>

<pre><code>from collections import Counter

def first_uniq_char(s):
    counts = Counter(s)
    return next((i for i, c in enumerate(s) if counts[c] == 1), -1)
</code></pre>
    </div>