<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Two comments on your comments:</p>

<ol>
<li><p>Have the comment be at the same indentation level as the block that you're commenting.  Having all the comments start at column 0 forces the eye to rapidly scan from left to right, and it makes it impossible to discern the overall structure of the program at a glance from the left-hand margin of the code.  (It looks like not all the code has this problem, but enough of it does to be very distracting.)</p></li>
<li><p>Comments should describe and rephrase the purpose of a block (a logical chunk) of code, not describe what each individual line of code does.  For example, this:</p>

<pre><code># pass that slice to the sliceMatrix function to get the number of clusters in that row
numClusters = sliceMatrix(rowSlice, 4)
</code></pre></li>
</ol>

<p>is not a useful comment, because I can already see that you're calling the <code>sliceMatrix</code> function, I can see that you're passing <code>rowSlice</code> to it, and I can see that you're calling the result <code>numClusters</code>.</p>

<hr>

<p>On the matter of how to parse a seat string, this is simple enough that you don't really need a regex or even the manually specified letter:number mapping.  The fact that the column is always expressed as a single letter makes it easy to do by slicing:</p>

<pre><code># Seats are specified as a row number followed by a column letter, e.g. "22D".
# Our seat map is zero-indexed so row 1, column A corresponds to 0, 0.
row = int(seat[:-1]) - 1   # raises ValueError if the row isn't a number
col = ord(seat[-1:].upper()) - ord('A')
seat_map[row][col] = seat  # raises IndexError if seat is out of bounds
</code></pre>
    </div>