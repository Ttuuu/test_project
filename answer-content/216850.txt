<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'll talk about the second implementation first.</p>

<hr>

<p>The name isn't well chosen. I'm aware it's supposed to mirror the PHP name, but in JavaScript it is convention to use camelCase names and not snake_case. I'd choose <code>countArrayValues</code>.</p>

<p>Also don't use unnecessary short and undescriptive variable names. In your case <code>arr</code> and <code>a</code> are easily confused. Better names would be, for example, <code>input</code> and <code>result</code>.</p>

<hr>

<p>You are initializing <code>a</code> as an empty array. Unlike PHP in JavaScript arrays and objects are two different things (although an array is also an object, which is why is still works). An empty object in JavaScript is denoted with <code>{}</code>.</p>

<hr>

<p>It's bad form to have a function like this to mutate its input. A user may not expect that their array is suddenly sorted. </p>

<p>Additionally it's not even needed to sort the array in this case, so leaving it out will speed it up considerably. Instead of comparing with the "previous" value, just check if the value is already in the result.</p>

<pre><code>function countArrayValues(input) {//returns object
    let result = {};
    for ( let i = 0; i &lt; input.length; i++ ) {
        // result[input[i]] will either result in `undefined` which is 
        // interpreted as `false`, or as the current count, which as 
        // a positive integer will be considered `true`
        if ( result[input[i]] ) {
            result[input[i]]++;
        } else {
            result[input[i]] = 1
        }
    }
    return result;
}
</code></pre>

<hr>

<p>Regarding the first implemention: I'm not quite sure about the use case, because just a array of numbers without any reference to the original values seems a bit pointless to me. If it's needed I'd base it's implementation on the result of the second version.</p>
    </div>