<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Is it possible to use userList only one time?</p>
</blockquote>

<p>Every time you call a <code>FirstOrDefault</code>, you are doing an O(n) search through the user list. You should consider keeping a dictionary of user IDs to user objects. Without knowing what kind of frameworks you're using, I can't say whether this is a job for your ORM or whether you have to do it yourself. With a dictionary, user lookup will be much faster.</p>

<p>So short answer, no; but you shouldn't be using a list.</p>

<blockquote>
  <p>Is there an alternative of multiple <code>foreach</code> statement?</p>
</blockquote>

<p>Not really.</p>

<p>Other things I see that could use some love:</p>

<h2>Overuse of <code>var</code></h2>

<p>I find <code>var</code> to be useful in contexts where it's visually obvious what type a variable will take, including during instantiation statements. However, that is not the case with any of the instances of <code>var</code> in your code; I have no idea what's going into those variables. Unless the type is some kind of monstrous generic, just use the type.</p>

<h2>Data model issues</h2>

<p>You have some kind of user object, and some kind of item object with multiple references to user names. Are you sure it's a good idea to refer to the names, and not the user objects? The answer to this might be that you need the names in this case because the object is shortly destined for some kind of serialization, but if that isn't the case, it's probably a better idea to keep object references instead of string references.</p>

<p>In other words, why store <code>comment.CreatedByName</code> when you already have <code>comment.CreatedBy</code>?</p>
    </div>