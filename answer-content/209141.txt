<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You might want to spend some time becoming more familiar with the Standard Library. You're doing a few things that are already provided for.</p>

<pre><code>implicit class Converter(char: Char) {
  def toNum: Int = char - '0'
}
</code></pre>

<p>To convert a digit character into the value it represents: <code>char.asDigit</code>. If you have one or more digit characters in a string: <code>digits.toInt</code></p>

<p>Your solution also fails for expressions like <code>"2*2+3"</code>. It looks like the <code>evaluateExpression()</code> code doesn't anticipate that, in the recursive call <code>evaluateExpression(pendingExpression)</code>, the value of <code>pendingExpression</code> might be a single digit.</p>

<p>But mostly, with the input under so many tight restrictions, you should consider what shortcuts might be available to you.</p>

<pre><code>def evaluateExpression(s :String) :Int =
  s.split("\\+")
   .map(_.split("\\*")
         .map(_.toInt)
         .product)
   .sum
</code></pre>
    </div>