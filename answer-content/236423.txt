<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Filter validation</h2>

<p>For validation code, you could use a more compact but somewhat verbose pattern of <em>failing early, failing fast</em>.</p>

<pre><code>{
    // Test for: XXX-XXXXXXXX-XXX

    var parts = SNString.Split( '-' );

    if ( parts.Length != 3 )
        return false;
    if ( parts[ 0 ].Length != 3 )
        return false;
    if ( parts[ 1 ].Length != 8 )
        return false;
    if ( parts[ 2 ].Length != 3 )
        return false;

    return true;
}
</code></pre>

<p>The function will have a lot a exit points, but only a "success" result, at the end. Think the validation process as a filter, what only let pass correct data.</p>

<p>I may nitpick this code is only testing what:</p>

<pre><code>{
    // "Mask" test for: XXX-XXXXXXXX-XXX

    var hyphens = 0;
    for ( int pos = 0 ; pos &lt; SNString.Length ; pos++ )
        if ( SNString[ pos ] == '-' )
            hyphens++;

    if ( hyphens == 2 &amp;&amp; SNString.Length == 16 &amp;&amp; SNString[ 3 ] == '-' &amp;&amp; SNString[ 12 ] == '-' )
        return true;

    return false;
}
</code></pre>

<p>No string splits, no allocations, only validations in place.</p>
    </div>