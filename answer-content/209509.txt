<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The purpose of the request made in <code>ngOnInit</code> seemed unclear to me. 
I presume if any pagination info is not provided, then the result contains the default pagination values such as <code>page</code>, <code>total</code>, <code>limit</code> or does it return all items? </p>

<p>Just in case, it is good practice to provide explicit default values such as <code>page: 0</code>, <code>limit: 20</code>etc. After setting the default values, <code>ngOnInit</code>should use <code>loadData</code> to fetch the items.</p>

<p><strike>As far as i see, <code>observable$</code> variable is not used anywhere except <code>ngOnInit</code>, so i would remove it.</strike></p>

<p>For fetching data or another possible operations on item(s) such as update, fetch, delete etc, i would create a <code>ItemService</code>. You can prefer it to be inject to your component.</p>

<p>Since typescript is a typed language i would define types for response and item.
Such as</p>

<pre><code>interface Item {

}

interface ItemResponse {
    page: number;
    total: number;
    limit: number;
    items: Item[];
}
</code></pre>

<p>So from <code>ItemService</code> you may return observable of the proper type.</p>

<p>Edit: updated comment about <code>observable$</code> variable.</p>
    </div>