<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your current approach of highlighting one token type after another will fail for more complicated examples. Imagine this:</p>
<pre><code>String s = "public data, private secrets";
</code></pre>
<p>The words in the string are not keywords.</p>
<p>To fix this, you need to change your code to tokenize the input text in a single pass, like this pseudo code:</p>
<pre class="lang-js prettyprint-override"><code>function tokenize(text) {
    const tokens = [];

    while (text !== '') {
        if (text starts with whitespace)
            tokens.push(['space', leading space]);
        else if (text starts with keyword)
            tokens.push(['keyword.flow', keyword]);
        else if (text starts with string)
            tokens.push(['string', string]);
        else
            error();
        text = text without the current token;
    }
    return tokens;
}
</code></pre>
<p>Using this structure, you can correctly parse Java code. Parsing more esoteric languages like Python or Kotlin or even Perl requires even more sophisticated parsers, but Java is a very simple language (on the syntactical level).</p>
<p>Once you have split the text into tokens, generating the highlighted HTML from the tokens is trivial.</p>
    </div>