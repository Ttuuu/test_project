<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Naming</h3>

<ul>
<li><p><code>LENGTH_OFFSET</code> sounds like the offset at which you find the length, not the offset after the length. I'd cede that I can't think of a better name though, that doesn't sound silly...</p></li>
<li><p>Personally I'd prefer <code>lengthBytes</code> to <code>lengthByte</code>, since there are more than one (is this a relic of previously using 8bit lengths?).</p></li>
<li><p><code>getLength</code> sounds like an accessor: really this is doing a translation/conversion, and the name should reflect that.</p></li>
<li><p><code>cnt</code> isn't very meaningful, and your ArgumentExceptions all refer to <code>content</code>.</p></li>
</ul>

<h3>String Encoding</h3>

<p>I would be worried about using <code>String.getBytes</code> and <code>String(byte[])</code>, as you are not explicitly indicating the encoding. I'm not a Java programmer, but judging by <a href="https://stackoverflow.com/a/12659462/383598">this answer on StackOverflow</a> and the documentation, you should really be using overloads which allow you to specifying the encoding (e.g. UTF8), which will enable reliable communication between machines, and between implementations of the protocol written in different languages.</p>

<h3>Misc</h3>

<ul>
<li><p><code>raw</code> is the whole (length + content) packet when you using the <code>Packet(String cnt)</code> constructor, but doesn't include the length when you use the <code>Packet(byte[] data)</code> constructor.</p></li>
<li><p>Spelling error in exception message: "lenght"</p></li>
<li><p>Nice to see lots of guard clauses: would checking for negative lengths be sensible?</p></li>
<li><p>A few more empty lines would be appreciated to break up logical parts of the larger methods (e.g. in the byte[] constructor, first run some checks (empty line) then read the length (empty line) then read the content).</p></li>
</ul>
    </div>