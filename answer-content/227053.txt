<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to CodeReview!</p>

<h2>Whitespace</h2>

<p>The PEP8 standard, and consequently most Python linting tools, will recommend that you add another linebreak before your function definitions, plus some whitespace around your operators, etc. I won't detail this exhaustively; you're best to use the IDE of your choice - PyCharm is a reasonable one that is helpful for this.</p>

<h2>Type hinting</h2>

<p><code>bound</code> is probably an integer, so add <code>: int</code> after it. It probably returns an <code>int</code> as well.</p>

<h2>Subroutines</h2>

<p>Put your global-scoped code into subroutines for ease of maintenance, legibility and testing.</p>

<h2>Redundant <code>pass</code></h2>

<p>That <code>pass</code> isn't needed.</p>

<h2>Use format strings</h2>

<p>This:</p>

<pre><code>str(i[0])+' '+str(i[1])+'\n'
</code></pre>

<p>can be</p>

<pre><code>f'{i[0]} {i[1]}\n'
</code></pre>

<h2>Simplify some math</h2>

<p>This:</p>

<pre><code>((bound**2)*2)+1
</code></pre>

<p>can be</p>

<pre><code>2 * bound**2 + 1
</code></pre>

<p>due to operator precedence.</p>

<h2>Truthiness</h2>

<p>This:</p>

<pre><code>if parity[a+n*d] != 1:
</code></pre>

<p>can be</p>

<pre><code>if not parity[a + n*d]:
</code></pre>

<p>because 0 is falsey.</p>

<h2>camel_case</h2>

<p><code>ariLen</code> is more commonly written <code>ari_len</code> in Python.</p>
    </div>