<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>local_diff = abs(max(a[:i+1]) - max(a[i+1:]))
</code></pre>

<p>For every i the entire aray is walked through to find left and right maxima.
This is complexity <strong>O(NÂ²)</strong>.</p>

<p>One could have two arrays with left_maxima and right_maxima, <strong>O(N)</strong>, so</p>

<pre><code>local_diff = abs(left_maxima[i] - right_maxima[i])
</code></pre>

<p>Then the entire complexity is <strong>O(N)</strong>.</p>

<p>The maxima can be filled with a loop over i, either increasing or decreasing, using:</p>

<pre><code>left_maxima[i] = max(left_maxima[i-1], a[i])         // ++i
right_maxima[i] = max(right_maxima[i+1], a[i])       // --i
</code></pre>

<p>It is even so, that one array (left or right) is not needed in the final <code>local_diff</code> loop.</p>

<p><em>What makes this problem so devious is that at index i an evaluation has to happen from past &lt; i and from the "future" &gt; i.</em></p>
    </div>