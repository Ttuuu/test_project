<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To optimize this query, I would only perform the date checks once, regardless of how Oracle optimizes internally.</p>

<blockquote>
<pre><code>, COUNT(case when cq.entry_date &gt; TO_DATE('09-Jun-2017', 'dd-mm-yyyy') then 1 END) AS cq_count 
    , SUM(case when cq.entry_date &gt; TO_DATE('09-Jun-2017', 'dd-mm-yyyy') then (cq.unit_price * cq.qty_quoted) END) AS cq_total 
    , SUM(case when cq.entry_date &gt; TO_DATE('09-Jun-2017', 'dd-mm-yyyy') then cq.qty_quoted END) cq_qty
FROM customer_quote cq
</code></pre>
</blockquote>

<p>could be rewritten as:
<a href="https://dbfiddle.uk/?rdbms=oracle_11.2&amp;fiddle=e18566f4b9b224b92394ca57dfdf166d" rel="nofollow noreferrer">Fiddle Oracle 11g Release2</a></p>

<pre><code>select part_key 
    ,  condition_code 
    ,  count(recent) cq_count 
    ,  sum(case when recent = 1 then (unit_price * qty_quoted) end) cq_total 
    ,  sum(case when recent = 1 then qty_quoted end) cq_qty
from (
    select q.* 
        , case when entry_date &gt; add_months(trunc(sysdate),-12) then 1 end recent
        from customer_quote q
    where entry_date &gt; add_months(trunc(sysdate),-24)
) lookup 
group by part_key, condition_code
--order by 1, 2
</code></pre>
    </div>