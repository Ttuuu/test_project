<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Name shadowing</h2>

<pre><code>next = addr + 1             # Skip length byte; filled in at end
</code></pre>

<p>Don't call a variable <code>next</code>. That's already a built-in. You could use <code>next_addr</code> for example.</p>

<p>Similarly,</p>

<pre><code>def test_depint(M, value, bytes):
</code></pre>

<p>should not use the built-in name <code>bytes</code>. I'm not completely clear on what it does in context, but maybe <code>message</code>, <code>deposit</code>, <code>deposit_span</code>, etc. are possible.</p>

<h2>Masking</h2>

<pre><code>        value, byte = divmod(value, 0x100)
</code></pre>

<p>Are you sure that this shouldn't just be</p>

<pre><code>byte = value &amp; 0xFF
value &gt;&gt;= 8
</code></pre>

<h2>Assert decomposition</h2>

<blockquote>
  <p>Is there a clearer way to describe the tests?</p>
</blockquote>

<pre><code>assert (len(bytes),   bytes,  222) \
    == (M.byte(addr), bvalue, M.byte(addr+size-1))
</code></pre>

<p>Don't combine this. Tests are more useful if you can see exactly which term in an assertion failed:</p>

<pre><code>assert len(bytes) == M.byte(addr)
assert bytes == bvalue
assert M.byte(addr+size-1) == 222
</code></pre>

<h2>f-strings</h2>

<pre><code>print('DEPOSIT', value, 'expecting', bytes)
</code></pre>

<p>can be</p>

<pre><code>print(f'DEPOSIT {value} expecting {bytes}')
</code></pre>
    </div>