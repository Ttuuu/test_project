<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Getting rid of the class is definitely a step in the right direction.</p></li>
<li><p>Assuming <code>count</code> can never be negative, we should use an <code>unsigned</code> integer type for it.</p></li>
<li><p>I don't think the <code>MessageComponents</code> class is a good idea. It makes the design very inflexible. If we ever want to change the message, we'll have to change every single function there.</p></li>
<li><p>We're programming a very specific output message, and the code doesn't seem to be intended for re-use, so I don't think we need the named functions either.</p></li>
</ul>

<hr>

<p>I'd suggest something more like:</p>

<pre><code>std::string makeStatisticsMessage(char letter, unsigned int count)
{
    auto const verb = (count == 1) ? "is" : "are";
    auto const number = (count == 0) ? "no" : (count == 1) ? "one" : std::to_string(count);
    auto const plural = (count == 1) ? "" : "s";
    return fmt::format("There {} {} '{}'{}.", verb, number, letter, plural);
}
</code></pre>

<p>Although we now check <code>count</code> multiple times, I'd argue that it's much easier to follow the logic for each component separately.</p>

<p>It also means that we can abstract or change the behavior for each component later (e.g. if we decide we want to print all the numbers as words instead of digits).</p>
    </div>