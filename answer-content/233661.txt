<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Use descriptive variable names. <code>r</code> as a variable name tells you nothing and makes your code harder to read. <code>rowOffset</code> tells you what it's used for. This goes a long way to make your code readable.</p>

<p>Declare your variables just before you use them. You only have 2 currently but its easy for variables to increase. Instead of having a wall of declarations at the top of a Function/Sub, like below:</p>

<pre><code>dim r as long
Dim i as long
dim p as range
dim sv as range

</code></pre>

<p>Have them declared just before they get used.</p>

<pre><code>dim lastRow as long
lastRow = Worksheets("MCInput").Cells(Rows.Count,"B").End(xlUp).Row

dim rowOffset as long
For rowOffset = 0 to (lastRow - 2)
    `Code that does what you want
Next
</code></pre>

<p>This ultimately aids you in refactoring (restructuring) your code when you need to. It also becomes easier to tell when a variable is no longer needed. No code using the variable just after it's declared? Delete it. With a wall of declarations you have to laboriously check for usage. There are tools like <a href="http://rubberduckvba.com/" rel="nofollow noreferrer">Rubberduck</a>, which I'm a contributor to, than can tell you if a variable is used.</p>

<hr>

<p>You're using a string literal populated with a worksheets name to access the worksheet through the hidden Global object's Worksheets property IE <code>Global.Worksheets("Calcs")</code>. This returns an <code>Object</code> variable which is late-bound and doesn't give you intellisense when you use <code>.</code> (period) after the collection. It's preferred to use the Worksheet.CodeName. You can see this in the Project Explorer window. The CodeName of the worksheet is <code>Sheet1</code> while the Name (What is shown in the tab) is <code>Calcs</code>.</p>

<p><a href="https://i.stack.imgur.com/KkkrZ.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/KkkrZ.png" alt="enter image description here"></a></p>

<p>Sheet1 isn't a helpful name, this ties into using descriptive names above, so we'll change it by double clicking on it in the Project Explorer to display the code behind for the worksheet, then pressing F4 to display the Properties Window (also found under the menu at the top View&gt;Properties. At the top where it says (Name) change it to something more descriptive.</p>

<p><a href="https://i.stack.imgur.com/YJY46.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/YJY46.png" alt="enter image description here"></a></p>

<p>Now instead of using <code>Worksheets("Calcs")</code> use <code>CalculationSheet</code> to access the worksheet object. The same thing can be done to. Two added benefits:</p>

<ul>
<li>You're no longer dependent on the literal string "Calcs" which stops working if the worksheet is renamed.</li>
<li>You get intellisense. Type <code>CalculationSheet.</code> (note the period) to show a list of accessible members.</li>
</ul>

<hr>

<p>There's more that can and probably should be done with your code. Things like worksheet properties would help to clean up and shorten the code which then leads to the realization you'd benefit from <a href="https://rubberduckvba.wordpress.com/2017/12/08/there-is-no-worksheet/" rel="nofollow noreferrer">creating a proxy</a> for accessing your data. I was nerd-sniped by this already and that can be for another review.</p>
    </div>