<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Python is open-source, and all the source code in the GitHub repository <a href="https://github.com/python/cpython" rel="nofollow noreferrer">python/cpython</a>. For a great deal of the built-ins, they can be found in <a href="https://github.com/python/cpython/blob/master/Python/bltinmodule.c" rel="nofollow noreferrer">cpython/Python/bltinmodule.c
</a>. In the current revision, the beginning of the sorted function definitions is found at <a href="https://github.com/python/cpython/blob/8ac658114dec4964479baecfbc439fceb40eaa79/Python/bltinmodule.c#L2175" rel="nofollow noreferrer">line 2175</a>, and the actual function itself is found at <a href="https://github.com/python/cpython/blob/8ac658114dec4964479baecfbc439fceb40eaa79/Python/bltinmodule.c#L2201" rel="nofollow noreferrer">line 2201</a>.</p>

<p>However, I'm not sure that knowing the implementation of sorted can help you too much with optimizing heapsort, because sorted uses <a href="https://en.wikipedia.org/wiki/Timsort" rel="nofollow noreferrer">Timsort</a>.</p>

<p>I can make a suggestion: decorators will always add overhead, and particularly in a case like this, it's probably better to just make a new version of the function that integrates the key parameter with the original function, though this answer might miss the entire point of your question.</p>
    </div>