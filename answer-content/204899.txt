<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Since the function may bail out without computing the result, it <em>must</em> signal the caller that something got wrong. Consider returning an error code.</p></li>
<li><p>Since you are dealing with negative numbers, testing for <code>num &gt; 9999999999</code> is not sufficient.</p></li>
<li><p>Along the same line, <code>-num</code> may overflow. </p></li>
<li><p>The lines</p>

<pre><code>    str++;
    *(str - 1) = sign;
</code></pre>

<p>are a long way to say</p>

<pre><code>    *str++ = sign;
</code></pre>

<p>That said, you seem to force a sign (a whitespace) into the output even for positives. Strictly speaking, it is not an <code>itoa</code> compatible behavior.</p></li>
<li><p><code>memset</code> seems superfluous. <code>*str = 0;</code> after the conversion is done suffices.</p></li>
<li><p>I don't think that the benefits of a subtraction loop vs division/modulo are measurable. Did you profile?</p></li>
<li><p>The only reason to prefer <code>itoa</code> to <code>sprintf</code> is that the former supports arbitrary conversion bases. It you only need decimal conversion, I strongly recommend to stick with the latter.</p></li>
</ul>
    </div>