<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can indeed solve this using a binary search. In my solution i implemented a recursive method to solve the problem, although a non-recursive version could easily be implemented as well. This solves the problem within O(log n) iterations. It uses 19 iterations to find the secret number of 317810</p>
<pre><code>private static void Main(string[] args)
    {
        int max = 400000;
        int min = 1;
        int current = max / 2;
        binarySearch(max, min, current);
    }

    private static int binarySearch(int max, int min, int current)
    {
        if (BlackBox(current, "&gt;"))
        {
            return binarySearch(max, current, (max + current) / 2);
        }

        if (BlackBox(current, "&lt;"))
        {
            return binarySearch(current, min, (current + min) / 2);
        }

        if (BlackBox(current, "=="))
        {
            return current;
        }

        // secret number is not within range of max/min 
        return -1;
    }
</code></pre>
    </div>