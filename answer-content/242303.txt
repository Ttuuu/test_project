<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Things to be aware of:</p>

<ul>
<li><code>array_filter()</code> does a full loop of the array.</li>
<li><code>foreach()</code>, of course, does a full loop of the array.</li>
<li><code>min()</code> does a full loop of the array.</li>
<li><code>empty()</code> does a couple of things: it checks if a variable is not set AND if it is "falsey".  Because the <code>$dates</code> variable will be unconditionally set, there is no need to check this -- just use <code>!$dates</code> if you want to check if the array is empty.</li>
<li><code>array_filter()</code>, like <code>empty()</code> is a "greedy" seeker of "falsey" values.  I assume that this is a non-issue for your task because there should be no <code>0</code> or <code>false</code> (etc.) values -- only datetime values or <code>null</code>s.</li>
<li><a href="https://stackoverflow.com/q/961074/2943403">datetime objects can be compared</a>.</li>
<li>you don't need to make iterated calls to <code>getTimestamp()</code>, nor do you need to declare a new datetime object and set its time manually -- just use the one you found.</li>
</ul>

<p>I suppose I'll recommend that you loop the data just one time.  No array generation, no function calls, very direct and concise.  Your custom method name is descriptive.  Go with this:</p>

<p>Code: (<a href="https://3v4l.org/nFLpk" rel="nofollow noreferrer">Demo</a>)</p>

<pre><code>public static function minDateTime(?DateTimeInterface ...$dates)
{
    $minDate = null;
    foreach ($dates as $date) {
        if ($date &amp;&amp; (!$minDate || $date &lt; $minDate)) {
            $minDate = $date;
        }
    }
    return $minDate;
}
</code></pre>
    </div>