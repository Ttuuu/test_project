<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First off, the file <code>jsonArray.js</code> doesn't contain "JSON". It's a JavaScript source code file containing an JavaScript array literal which in turn contains JavaScript object literals. And since it's not JSON, you could theoretically put functions into the objects:</p>
<pre><code>{
  alt: "clearValueIcon", // Quotes around key are not needed, since it's not JSON
  src : "...", // shortened
  style: "grid-column:1/2;grid-row: 2/3;",
  handler() {
     this.value = ""; // For example
  }
}, 
</code></pre>
<p>And with a helping method:</p>
<pre><code>methods: {
  callHandler(handler) {
     handler.call(this);
  }
}
</code></pre>
<pre class="lang-html prettyprint-override"><code>&lt;img
     v-for="img in imagesData"
     :key="img.alt"
     @click="callHandler(img.handler)"
     :alt="img.alt"
     :src="img.src"
     :style="img.style"
/&gt;
</code></pre>
<hr>
<p>However I don't really see the point of outsourcing the buttons into a data array like this. Unless you are using the array in some other way in the project, you should just straight up have a list of <code>img</code>s (or custom "button" components) in your template.</p>
<p>Two more things:</p>
<ul>
<li>The styles belong in the style sheet.</li>
<li>The chosen texts for the <code>alt</code> attributes are bad. They are supposed to be fallback texts that displayed to the user in the case the images can't be displayed to (or seen by) the user. For the shown buttons something like <code>"Clear"</code>, <code>"+/-"</code> and <code>"%"</code> would be better choices.</li>
</ul>
<p>EDIT: One more thing: You shouldn't be using a plain image with a click handler, but for accessability wrap them in a <code>&lt;button&gt;</code> (or <code>&lt;a&gt;</code>) and put the handler on them.</p>
    </div>