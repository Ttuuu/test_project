<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Double-quote variables used as command line arguments</h3>

<p>Instead of this:</p>

<blockquote>
<pre><code>convert $1 -crop $2 "two.png"
</code></pre>
</blockquote>

<p>Write like this:</p>

<pre><code>convert "$1" -crop "$2" "two.png"
</code></pre>

<p>This is to protect from word splitting and glob expansion.</p>

<h3>Double quote... naturally</h3>

<p>This is hard to read and confusing:</p>

<blockquote>
<pre><code>Final=$One"X"$Two"+"$Three"+"$Four
</code></pre>
</blockquote>

<p>I suggest to write like this:</p>

<pre><code>Final="${One}X$Two+$Three+$Four"
</code></pre>

<h3>Use better variable names</h3>

<p>It's really hard to make sense of a program that uses variable names like <code>First</code>, <code>Fourth</code>, <code>Second</code>, <code>Lhs</code>, that don't reveal their purpose.</p>

<p>Also, the convention is to use lowercase names, without capitalizing the first letters.</p>

<h3>Chopping off characters case insensitively</h3>

<p>Instead of detecting if the delimiter is <code>x</code> or <code>X</code> and storing it in a variable,
you could use the pattern <code>[xX]</code>, for example:</p>

<pre><code>width=${spec%%[xX]*}
</code></pre>

<p>For example if you have <code>200x300</code> or <code>200X300</code> in <code>spec</code>, <code>width</code> becomes <code>200</code>.
(Do take note of the meaningful names.)</p>

<h3>Floating point math in the shell</h3>

<p>Unfortunately Bash doesn't do floating point math.
It would give you a syntax error if you tried to multiply something by <code>1.5</code>.
On the other hand, if you want to multiply by <code>1.5</code>, and you don't mind truncating decimal points (as is the case here), you could multiply by 3 and divide by 2.</p>

<p>That is, instead of this:</p>

<pre><code>width=$(bc &lt;&lt;&lt; "$width * 1.5")
</code></pre>

<p>You could write:</p>

<pre><code>((width = width * 3 / 2))
</code></pre>

<h3>Use here strings</h3>

<p>Instead of <code>echo ... | cmd</code>, write <code>cmd &lt;&lt;&lt; "..."</code>.</p>
    </div>