<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code generally looks good, but is a little rough to read (in part due to length but also with method names like <code>turnIndicatorToggle(self)</code> and <code>toggleTurnIndicator(self)</code>). But when I try to run your program I run into a few issues; your main window is fairly huge (bigger than my screen!) and can't be resized, and your indicators for tics and tacs (x and o) don't appear after the first. I think there's also supposed to be text somewhere but I can't see it (which may be because the window is too big).</p>

<p>Since you're asking for Qt advice, I think that you should look at decorators for your slots; it increases both readability and performance. And since you ask for best practices, you should get used to snake_case instead of camelCase for your variables and functions, and lower case names for your files, and it would also be nice with type hinting and some docstrings as well as some additional whitespace in your functions. You may also want to consider separating the "back-end" of the game and putting that functionality in its own class.</p>

<p>Finally, I'll add some minor practical tips:</p>

<ul>
<li>you could simplify lines 136â€“137 to <code>for x, y in positions</code> (and you could have a tuple of tuples instead of a list of tuples) <em>(don't use memory you don't need to use.)</em></li>
<li>You can simplify it even more with <code>for x, y in itertools.product(range(3), range(3)):</code> <em>(if there's a function that can do what you want to do, use it.)</em></li>
<li>your <code>capture</code> and <code>reset</code> functions in <code>TicTacToeCell</code> can merged with a default argument: <code>def capture(self, symbol=''):</code> <em>(look for repetition)</em></li>
</ul>
    </div>