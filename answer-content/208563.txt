<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Buffer overflow</h2>
<p>Consider what entering <code>"295.8"</code> does.</p>
<pre><code>#define MAXDIGITS 5
char inp[MAXDIGITS];
printf("Please input the value of cement: ");
scanf("%s", inp);
</code></pre>
<p>Code used the dangerous <code>scanf("%s", inp);</code> with no width limits.  <code>scanf("%s", inp);</code> being ignorant of the size of <code>inp[]</code>, stored the 5 read characters <strong>and</strong> the appended <em>null character</em>.</p>
<p>This results in <em>undefined behavior</em> (UB).  Code may work as expected today and fail in strange ways tomorrow.</p>
<p>I recommend to only use <code>fgets()</code> for user input.  After reading a <em>line</em> of user input, it is saved as a <em>string</em>.  Then parse the string.</p>
<p>No need for such a tight buffer size.  Recommend twice the expected max width needed.</p>
<pre><code>#define BUFFER_SIZE (2*MAXDIGITS + 1)
char buffer[BUFFER_SIZE];

printf("Please input the value of cement: ");
fflush(stdout);  // Insure output is seen before reading

fgets(buffer, sizeof buffer, stdin);
double val = strtod(buffer, NULL);
</code></pre>
    </div>