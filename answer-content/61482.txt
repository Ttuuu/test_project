<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is pretty nice code! I can still nitpitck a bit :)</p>

<hr>

<p>You could use the cool <code>.. &lt; .. &lt; ..</code> operator for this:</p>

<blockquote>
<pre><code>in_x_range = bx + BIRD_WIDTH &gt; self.x and bx &lt; self.x + PIPE_WIDTH
</code></pre>
</blockquote>

<p>like this:</p>

<pre><code>in_x_range = bx - PIPE_WIDTH &lt; self.x &lt; bx + BIRD_WIDTH
</code></pre>

<hr>

<p>Maybe <code>random_pipe_pair</code> will be slightly more readable if you added a few line breaks.</p>

<hr>

<p><em>Moot point, but keeping it anyway, see my conclusion at the bottom.</em></p>

<p><strike>You don't need the parentheses here:</strike></p>

<blockquote>
<pre><code>in_y_range = (by &lt; self.top_height_px or
              by + BIRD_HEIGHT &gt; WIN_HEIGHT - self.bottom_height_px)
</code></pre>
</blockquote>

<p>and here:</p>

<blockquote>
<pre><code>if e.type == QUIT or (e.type == KEYUP and e.key == K_ESCAPE):
</code></pre>
</blockquote>

<p>and here the outer parens:</p>

<blockquote>
<pre><code>elif e.type == MOUSEBUTTONUP or (e.type == KEYUP and
        e.key in (K_UP, K_RETURN, K_SPACE)):
</code></pre>
</blockquote>

<p>and here:</p>

<blockquote>
<pre><code>if (0 &gt;= bird_y or bird_y &gt;= WIN_HEIGHT - BIRD_HEIGHT or
        True in pipe_collisions):
</code></pre>
</blockquote>

<p><strong>BUT...</strong> As you commented, you use the parens mostly to allow breaking long lines (probably following PEP8) without the ugly <code>\</code>. I totally agree with that, so yeah, keep 'em! (In fact I didn't even know this was possible, so thanks for the lesson, teach'!)</p>
    </div>