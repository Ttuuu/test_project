<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I might be misreading your code, but it looks like all you want is:</p>

<pre><code>def echo(*args):
    six.print_(*args, sep=" ", end="")
</code></pre>

<p>For something a bit more manual:</p>

<pre><code>def echo(*args):
    six.print_(" ".join(map(str, args)), end="")
</code></pre>

<hr>

<p>In terms of reviewing your actual code, on top of the issues Morwenn raises, note that:</p>

<pre><code>op = getattr(data, '__str__', None)
if op:
</code></pre>

<p>simplifies to:</p>

<pre><code>if hasattr(data, '__str__'):
</code></pre>

<p>However, it is rare to call magic methods directly in Python; normally you'd just do <code>str(data)</code> and let Python call <code>__str__</code>. This is safer, as although an old-style class may not implement <code>__str__</code>, you can still get e.g. <code>'&lt;foo.bar object at 0x...&gt;'</code> via <code>str(...)</code>. </p>

<hr>

<p>I would include the filtering as a separate function:</p>

<pre><code>def valid(arg):
    """Include a docstring to explain your filtering rules."""
    if (isinstance(data, (six.string_types, six.integer_types)) or
        hasattr(data, '__str__')):
        return True
    LOG.error("echo called with an unsupported data type")
    return False
</code></pre>

<p>Then <code>echo</code> can use <a href="https://docs.python.org/2/library/functions.html#filter" rel="nofollow"><code>filter</code></a>:</p>

<pre><code>def echo(*args):
    six.print_(*filter(valid, args), sep=" ", end="")
</code></pre>
    </div>