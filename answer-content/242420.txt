<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a classic <a href="https://en.wikipedia.org/wiki/Constraint_satisfaction_problem" rel="nofollow noreferrer">constraint satisfaction problem</a>.</p>

<p>There are a couple of general techniques you can use to greatly speed up the search for a solution:</p>

<ul>
<li><p><strong>constraint propagation</strong> --- using the constraints of the game to immediately rule out possible values a variable can take; and</p></li>
<li><p><strong>variable ordering</strong> --- being clever about deciding which variable to attempt to assign next.</p></li>
</ul>

<p>In Sudoku, the variables are the cells, and the possible values are the digits, <code>1-9</code>.</p>

<p>You may wish to use a more refined search-state representation. With your current representation, a cell is either filled in or isn't, but you might be better off keeping track of all the possible values the cell could have (initially, the set <code>{1, 2, ..., 9}</code>), which would allow you to incrementally rule out values.</p>

<p>The improved algorithm would be a backtracking search, like the one you already have, but at each node of the search tree you apply constraint propagation to immediately rule out some of the options. If you reach a state in which all of the values of a variable have been ruled out, you know the sudoku is not solvable from that state, so you backtrack.</p>

<p><strong>Constraint Propagation</strong></p>

<p>An inference procedure looks at the present search state, and uses knowledge of the constraints to eliminate possible assignments. You can make full use of a procedure by repeatedly applying it until it produces no change.</p>

<p>Here are a couple of inference procedures you might apply:</p>

<ul>
<li><p>When the value of a cell has been deduced, you can remove that value from all other cells in the same unit (row, column, or box).</p></li>
<li><p>When two cells in a unit have been reduced to the exact same pair of possible values, you can rule those values out for all other cells in the same unit. This is known as the <a href="https://www.learn-sudoku.com/naked-pairs.html" rel="nofollow noreferrer">'naked pairs'</a> strategy.</p></li>
</ul>

<p>There are <a href="https://www.learn-sudoku.com/basic-techniques.html" rel="nofollow noreferrer">other strategies</a> you might want to try implementing, although you will get diminishing returns.</p>

<p><strong>Variable Ordering</strong></p>

<p>This one's simple: simply choose the most constrained variable first -- that is, the cell with the least options. Intuitively, this is likely to rule out bad assignments earlier, resulting in a larger portion of the search tree being pruned by backtracking.</p>

<hr>

<p>Leave a comment if there's anything I haven't explained clearly.</p>

<p>You can find an excellent write-up on Sudoku solving <a href="http://norvig.com/sudoku.html" rel="nofollow noreferrer">here</a>.</p>
    </div>