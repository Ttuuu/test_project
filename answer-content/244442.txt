<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could easily turn your method into a one-liner <a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/expression-bodied-members#methods" rel="nofollow noreferrer">expression-bodied method</a> with a few tricks:</p>
<ul>
<li>use the <code>_</code> <a href="https://docs.microsoft.com/en-us/dotnet/csharp/discards" rel="nofollow noreferrer">discard</a> variable instead of the explicit <code>parsedDate</code> variable (also, it doesn't need initializing to <code>new DateTime()</code>).</li>
<li>use the <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/conditional-operator" rel="nofollow noreferrer">conditional operator</a> since you're returning one of two <code>ValidationResult</code>s.</li>
<li><code>value.ToString()</code> can be passed directly into <code>TryParseExact</code> without the extra local variable <code>dateToParse</code>.</li>
</ul>
<p>Giving:</p>
<pre><code>protected override ValidationResult IsValid(object value, ValidationContext validationContext) =&gt;
    DateTime.TryParseExact(value.ToString(), "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out _)
        ? ValidationResult.Success
        : new ValidationResult("Invalid date, please try again with a valid date in the format of DD/MM/YYYY.");
</code></pre>
<p>Couple more items:</p>
<ul>
<li>Recommend -- for ease of reading -- adding a <code>using System.Globalization;</code> to your namespace so you don't have to type that long prefix out twice.</li>
<li>As this is an attribute, add the suffix <code>Attribute</code> to your class name.</li>
</ul>
    </div>