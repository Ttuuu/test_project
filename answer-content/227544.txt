<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Nested functions</h2>

<p>Not really sure what your motivation was, here, but this Russian nesting doll of functions is not really necessary. Under certain narrow circumstances, like limiting the number of publicly visible methods in a library, it might be called-for - but not really here. You don't need closures for this code, so just move things up to global namespace.</p>

<h2>Variable case</h2>

<p><code>A</code>-<code>C</code> should be lower-case because they aren't types.</p>

<h2>Random unpacking</h2>

<pre><code>a, b, c = (int(7*random() + 1) for _ in range(3))
</code></pre>

<h2>Never <code>except:</code></h2>

<p>Currently, you can't Ctrl+C out of the program, because you're catching all exceptions. Narrow your exception type.</p>

<h2>Don't materialize generators</h2>

<pre><code>D, E, F = [get_input(axis) for axis in "YXZ"]
</code></pre>

<p>should be</p>

<pre><code>d, e, f = (get_input(axis) for axis in "YXZ")
</code></pre>

<p>because you don't need to keep that list in memory.</p>

<h2>Format strings</h2>

<pre><code>print(str(D) + str(E) + str(F))
</code></pre>

<p>becomes</p>

<pre><code>print(f'{d}{e}{f}')
</code></pre>

<h2>Stack abuse</h2>

<p>You call <code>game</code>, which calls <code>end</code>, which calls <code>game</code>... Don't do this. Just loop.</p>
    </div>