<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Overall I think you have all the major pieces there, but I would also taking your find module a step further and create a target if QScintilla is found. You can do this by adding the following:</p>

<pre><code>if(QSCINTILLA_LIBRARY AND QSCINTILLA_INCLUDE_DIR)

  set(QSCINTILLA_LIBRARIES ${QSCINTILLA_LIBRARY})
  set(QSCINTILLA_INCLUDE_DIRS ${QSCINTILLA_INCLUDE_DIR})

  if(NOT TARGET QScintilla::QScintilla)
      add_library(QScintilla::QScintilla UNKNOWN IMPORTED)
      set_target_properties(QScintilla::QScintilla PROPERTIES
           IMPORTED_IMPLIB ${QSCINTILLA_LIBRARY}
           INTERFACE_INCLUDE_DIRECTORIES ${QSCINTILLA_INCLUDE_DIR})
  endif(NOT TARGET QScintilla::QSintilla)

endif(QSCINTILLA_LIBRARY AND QSCINTILLA_INCLUDE_DIR)
</code></pre>

<p>Now you can use the library like so: <code>target_link_libraries(MyProject PUBLIC QScintilla::QScintilla)</code>. Feel free to change the imported target name. </p>

<hr>

<p>One minor thing I would suggest (that you can see in the code above ^) it to have your <code>if()</code> conditions match inside the corresponding <code>end()</code> call. So if you have <code>if(condition)</code>, the matching <code>end()</code> should also look like <code>end(condition)</code>. </p>

<hr>

<p>As for cross platform support it's difficult to say without trying it on multiple platforms. I'm not sure about your <code>find_path</code> call. The use of <code>${Qt5Core_INCLUDE_DIRS}</code> should be portable enough but it's tough to say. </p>

<p>One other nuance with find modules that I personally find can be troublesome is that on windows, if the library is a shared library you need to find the path to the <code>.lib</code> file and the <code>.dll</code> since that binary file isn't necessarily on the user's environment path. This is more of a nice to have and something I do for all find modules I write, but I work mostly on windows anyway. </p>
    </div>