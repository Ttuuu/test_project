<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>IMO returning <code>IEnumerable&lt;T&gt;</code> from an API is a violation of "L", as running GetEnumerator() a second time (or <code>foreach</code>, or <code>Count()</code>) behaves differently for different kinds of <code>IEnumerable&lt;T&gt;</code>s.  It may fail, run forever, or have expensive side-effects (like running a database query).</p>
<p>Instead commit to returning an in-memory collection, and type the API as <code>ICollection&lt;T&gt;</code>, or <code>IList&lt;T&gt;</code>, or return <code>IQueryable&lt;T&gt;</code> and make the caller decide how to structure and when to execute the query.</p>
<p>And given the uncertainty about the behavior of the returned <code>IEnumerable&lt;T&gt;</code>, the calling code has little choice but to immediately call <code>.ToList()</code> on the <code>IEnumerable&lt;T&gt;</code>, often creating a second copy of the collection.</p>
    </div>