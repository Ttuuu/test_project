<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think your algorithm is good. Not much can be done there.</p>

<p>Readability is the last thing people care about when solving puzzles like this, but here on Core Review we do care. So, here's my answer, and it may not be what you expect. </p>

<p>Just remember that readability is good for you. It makes it easier to understand and debug your own code. In the end it will safe you time, especially when the puzzles get a lot harder.</p>

<p>First of all; Variable names need to tell us what they contain, so <code>rowNo</code> instead of <code>r</code>, <code>colNo</code> instead of <code>c</code>. When you've got 10 one-letter variables you <em>will</em> loose track of their meaning.</p>

<p>Too many <code>||</code> conditions in an <code>if ()</code> don't improve readability either. Why not use functions like this:</p>

<pre><code>function insideGrid(rowNo, colNo) {
    let insideRow = rowNo &gt;= 0 &amp;&amp; rowNo &lt; gridWidth,
        insideCol = colNo &gt;= 0 &amp;&amp; colNo &lt; gridHeight;
    return insideRow &amp;&amp; insideCol;
}

function onLand(rowNo, colNo) {
    return insideGrid(rowNo, colNo) &amp;&amp; grid[rowNo][colNo];
}
</code></pre>

<p>Then you can do:</p>

<pre><code>function eraseIsland(rowNo, colNo) {
    if (onLand(rowNo, colNo)) {
        eraseIsland(rowNo - 1, colNo);
        eraseIsland(rowNo + 1, colNo);
        eraseIsland(rowNo, colNo + 1);
        eraseIsland(rowNo, colNo - 1);
    }
}
</code></pre>

<p>There is <a href="https://www.freecodecamp.org/news/constant-confusion-why-i-still-use-javascript-function-statements-984ece0b72fd/" rel="nofollow noreferrer">no good reason to use arrow functions</a>, but you can use them for correctly named tiny functions (this is a bit controversial, I know).</p>

<p>An alternative way to walk over the grid is:</p>

<pre><code>let islandCount = 0;
grid.forEach((row, rowNo) =&gt; {
    row.foreach((island, colNo) =&gt; {
        if (island) {
            islandCount++;
            eraseIsland(rowNo, colNo);
        }
    });
});
</code></pre>

<p>Ah, see, I did use arrow functions afteral!</p>

<p>Don't think that shorter code is always better code, it isn't. You could minify your code to one line, like this:</p>

<pre><code>function numIslands(a){if(null===a||void 0===a||!a.length||!a[0].length)return 0;const b=a.length,d=a[0].length,e=(f,g)=&gt;{0&gt;f||0&gt;g||f&gt;=b||g&gt;=d||"0"===a[f][g]||(a[f][g]="0",e(f+1,g),e(f-1,g),e(f,g+1),e(f,g-1))};let f=0;for(let g=0;g&lt;b;g++)for(let b=0;b&lt;d;b++)"1"===a[g][b]&amp;&amp;(f++,e(g,b));return f}
</code></pre>

<p>But is that better? I don't think so. As a programmer you're not only writing code for the computer to understand, but also for normal human beings, including yourself. </p>

<p><strong>In summary:</strong> Your solution is fine, but the coding could be improved.</p>

<p><em>(all code published here is untested!)</em></p>
    </div>