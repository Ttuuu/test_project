<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have some background in math so a further improvement would be </p>

<pre><code>def sieve(li, x):
    for i in range(2*x, len(li), x):
        li[i] = False
    return li

def get_primes(limit):
    li = [False, True]*(limit//2)
    li[1] = False
    li[2] = True
    for i in range(3, limit, 2):
        if li[i]:
            li = sieve(li, i)
    primes = [x for x in range(len(li)) if li[x]]
    return primes
</code></pre>

<p>because no even number beside 2 is prime. It probable is faster in one function. And will be even faster as a function in i class. Don't know why class methods is faster then functions..</p>

<p>Can't explain this either, but it's faster to iterate over range objects then lists of numbers. I'm referring to the second last row in the code. But iterating over a list of numbers is faster then enumeration.  </p>

<p>When doing the first 50 project euler problem, I was keen on doing them in less then 1 second. This kind of things add up. </p>
    </div>