<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The problem is similar to your other "two of something" problems, such as <a href="https://codereview.stackexchange.com/questions/216795/determine-whether-any-permutation-of-a-string-is-a-palindrome/216828#216828">Palindrome</a> and <a href="https://codereview.stackexchange.com/questions/216468/find-the-elements-that-appear-only-once/216502">Find the elements that appear only once</a>.  As in those problems, a Set is the appropriate data structure.</p>

<p>The main difference is that early exit is possible (when two of something is found) so we'd rather not be inside of a <code>reduce</code>. </p>

<pre><code>const firstRepeated = s =&gt; {
  const seen=new Set();
  for (var c of s) {
      if (seen.has(c)) return c; 
      else seen.add(c); 
  }
  return null;
}
</code></pre>
    </div>