<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree that the switch statement smells. One way to avoid it is to abstract LED values into the array, and let <code>change_color_intensity</code> operate on it:</p>

<pre><code>void change_color_intensity(int which, int start, int stop, int delta)
{
    int values[] = { 0, 0, 0 };
    for (values[which] = start; values[which] != stop; values[which] += delta) {
        set_leds(values[0], values[1], values[2]);
        delay(DELAY_WITHIN_LOOP);
    }
}
</code></pre>

<p>Note that I change a <code>while</code> loop into a IMHO more readable <code>for</code>. I also changed some names for the same reason.</p>

<hr>

<p>Another approach is to abstract LED names, and get rid of <code>setLed</code> altogether:</p>

<pre><code>void change_color_intensity(int which, int start, int stop, int delta)
{
    for (in value = start; value != stop; value += delta) {
        analogWrite(which, value);
        delay(DELAY_WITHIN_LOOP);
    }
}
</code></pre>

<p>with the caller defining a pin array:</p>

<pre><code>    int LED = { RED_LED_PIN, GREEN_RED_PIN, BLUE_RED_PIN };
    for (pin = 0; pin &lt; 3; pin++) {
        change_color_intensity(LED[pin], 0, 256, 1);
        ....
    }
</code></pre>

<hr>

<p>I am not sure I understand what you mean by multiple function invocations. If you are concerned with invoking <code>change_color_intensity</code> twice in a loop, I see no problem with it.</p>
    </div>