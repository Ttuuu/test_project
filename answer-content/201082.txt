<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><strong><code>push_front</code></strong> does not update <code>tail</code>. Usually no problem, unless applied to an empty list (<code>tail</code> remains <code>nullptr</code>, which <code>push_back</code> doesn't check, etc).</p></li>
<li><p>Ditto for <code>insertPosition</code>.</p></li>
<li><p>Ditto for <code>pop_back</code>. Popping the last element from the list shall update <code>head</code>.</p></li>
<li><p><code>push_front(const T &amp;&amp;theData)</code> is missing.</p></li>
<li><p><strong><code>insertPosition</code></strong> looks too cautious. You immediately know that <code>pos &lt;= size()</code>; there is no point to not trust yourself. <code>i != pos</code> is impossible.</p>

<p>As a side note, the interface doesn't look clear. I'd expect <code>insertPosition(0, ...) be _always_ equivalent to</code>push_front`.</p></li>
<li><p><code>size()</code> shall return <code>size_t</code>. In any case, there is no reason to return a signed value. Similarly, the position arguments shall be <code>size_t</code>, or at least unsigned.</p></li>
</ul>
    </div>