<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Introduce a variable for <code>blip3_dump()</code>'s offset expression:</p>

<pre><code>    for (int b=0, e_size2b = e + size2b; b&lt;3; ++b) {
        int offset = e_size2b + b * size_grid_3b;
        for (int d=0; d&lt;3; ++d) {
            force_fp[i][d][offset] += f[d][0][b] + f[d][1][b];
            force_fp[j][d][offset] -= f[d][0][b];
            force_fp[k][d][offset] -= f[d][1][b];
        }
    }
</code></pre>

<p>Note how this has "the <code>a</code>-loop" unrolled - more obvious with separate <code>force_fp[i]</code> updates.<br>
In <code>PairBlip::blip3_inner()</code>, unroll the <code>a</code>-loop and swap iterating first&amp;last index:</p>

<pre><code>    for (int b=0; b&lt;3; ++b)
        for (int d=0; d&lt;3; ++d) {
            f[d][0][b] = gp[d][0][b] * blip_ijk - g[d][0][b] * coef[0];
            f[d][1][b] = gp[d][1][b] * blip_ijk - g[d][1][b] * coef[1];
        }
</code></pre>

<p>This seems to suggest to replace <code>f[][][]</code> and associated indexing with <code>f0</code> and <code>f1</code>:</p>

<pre><code>void blip3_inner(int i, int j, int k, int e_size2b,
        double g[][2][3], double gp[][2][3],
        double &amp;blip_ijk, double coef[2])
{
    for (int b=0; b&lt;3; ++b) {
        int offset = e_size2b + b * size_grid_3b;
        for (int d=0; d&lt;3; ++d) {
            double  f0 = gp[d][0][b] * blip_ijk - g[d][0][b] * coef[0],
                    f1 = gp[d][1][b] * blip_ijk - g[d][1][b] * coef[1];
            force_fp[i][d][offset] += f0 + f1;
            force_fp[j][d][offset] -= f0;
            force_fp[k][d][offset] -= f1;
        }
    }
}
</code></pre>
    </div>