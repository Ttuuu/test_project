<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with a previous answer that suggest making your x, y, z variables public.  Also, in my past experience (3d game programming), I usually declare my components as a union within the class, so you have the freedom to access the components specifically or as in an array (without the overhead of a function call).  The same concept can be applied when you start making matrix classes (something you will certainly be doing if rolling your own 3d math library), and you can set up a union to map your data as an array, individual components, and even the component vectors, all within the same memory.</p>

<pre><code>union
{
    float v[3];
    struct
    {
        float x, y, z;
    };

};
</code></pre>

<p><strong>Edit:</strong>
In the comments, dyp points out that anonymous structs are not part of the c++ standard.  I looked into this, and found <a href="https://stackoverflow.com/questions/2253878/why-does-c-disallow-anonymous-structs-and-unions">this question</a> which not only confirms dyp's assertion, but indicates that the usage I suggested above is undefined behavior in it's entirety, so you may not want to do this, though I have released several full 3D games over the years that use exactly this functionality.  Apparently there is always more to learn...</p>
    </div>