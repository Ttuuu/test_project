<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to CodeReview!</p>
<p>You have missed an OO-opportunity.</p>
<p>You have a <code>class Player</code> but you are still "switching on internal data". You do this:</p>
<pre><code>def get_player_input(choices, text=''):
    ...
</code></pre>
<p>which is not a method on <code>Player</code>. And later, you do this:</p>
<pre><code>if player.is_human:
    row = int(get_player_input(options, "Enter row number(1-3): ")) - 1
    colmn = int(get_player_input(options, "Enter column number(1-3): ")) - 1
else:
    row, colmn = randint(0, 2), randint(0, 2)
</code></pre>
<p>This act of writing <code>if player.is_human: ... else: ...</code> is "switching on internal data". It's "internal data" because you aren't getting it from outside the class. It's "switching" because you are making an exclusive choice.</p>
<p>Switching on internal data is a <a href="https://en.wikipedia.org/wiki/Code_smell" rel="nofollow noreferrer">"code smell"</a> that indicates you might need a new class. In this case, I think you do:</p>
<pre><code>from abc import ABC, abstractmethod

class Player(ABC):
    @abstractmethod
    def get_next_move(self, board: Board) -&gt; Position:
        ...

class PlayerIO(Player):
    def get_next_move(self, board: Board) -&gt; Position:
        """ Read next move from io streams """
        pass

class PlayerRandom(Player):
    def get_next_move(self, board: Board) -&gt; Position:
        """ Randomly generate next move """
        pass
</code></pre>
<p>I'll suggest that the IO constructor takes input and output streams, and handles displaying the board and prompting for a new move.</p>
<p>I'll also suggest that you write a TextIO class of some kind, and give it methods like "prompt for input" and "read a string" and "read an integer". This basic set of operations can be the building blocks for your <code>PlayerIO</code> class, and will make it possible to create a mock object for unit testing.</p>
    </div>