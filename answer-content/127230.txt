<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Don't ever use <code>input</code> in a function that does work. It violates "separation of concerns" by tying the abstract calculation logic to the means by which the input is obtained.</p>

<p>Far better would be:</p>

<pre><code>def binary_operation(operation, left, right):
    """Returns the result of applying operation to its arguments."""
    return operator_map[operation](left, right)
</code></pre>

<p>where <code>operator_map</code> is taken from @coderodde's answer. This allows you to call your (simple) engine in ways that have no connection to how the operands get there. For example:</p>

<pre><code>binary_operation('+', 2, 3)
binary_operation(sys.argv[1], float(sys.argv[2]), float(sys.argv[3]))
</code></pre>

<p>you can also have the original behavior with</p>

<pre><code>binary_operation(input('operator'), float(input('number')), float(input('number'))
</code></pre>

<p>or even</p>

<pre><code>binary_operation('*', 5.0 binary_operation('+' 2, 3))
</code></pre>

<p>Prior to posting, I find that Joe Wallis suggested this, but I think it important enough to elaborate on its own.</p>
    </div>