<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are few small things that stick out to me... starting with the least significant, and moving up...</p>
<h3>Constants</h3>
<p>Why are your error message text values public? If it is to satisfy the Unit testing, then the common solution is to make them package-private, and put the unit tests in the same package as the code. Most common build tools (ant, maven, etc.) have separate folders for the tests and the source, and you can have the same package structures in each.</p>
<p>If you really want to test the actual exception text, then the better solution would be to have separate specific exception types for each problem type, or to reuse different existing exceptions. For example - it is quite OK to throw a <code>NullPointerException</code> if one of the input strings are null when they should not be. An <code>IllegalArgumentException</code> for empty-strings is OK. Or, create the <code>DuplicateSearchStringException</code> if you need it.</p>
<h3><code>any</code> vs. <code>not-all</code></h3>
<p>In your validation streams, you have code like:</p>
<blockquote>
<pre><code>private static boolean anyNullOrEmpty(String[] strings) {
    return Stream.of(strings).allMatch(x -&gt; x == null || x.isEmpty());
}
</code></pre>
</blockquote>
<p>That would be better as:</p>
<pre><code>private static boolean anyNullOrEmpty(String[] strings) {
    return !Stream.of(strings)
          .filter(x -&gt; x == null || x.isEmpty())
          .findAny()
          .isEmpty();
}
</code></pre>
<p>It's better because it stops streaming when the first problem is found - it does not need to check everything.</p>
<h3>String joining</h3>
<blockquote>
<pre><code>Stream.of(searchStrings).collect(joining("|")
</code></pre>
</blockquote>
<p>can be simplified as:</p>
<pre><code>String.join("|", searchStrings)
</code></pre>
<p>Having said that, you should also consider your search-patterns - are you looking for exact strings? You should probably be escaping the inputs, if you are. Otherwise, what if someone inputs <code>"Hi|there"</code> now what?</p>
<pre><code>Stream.of(searchStrings).map(Pattern::quote).collect(joining("|")
</code></pre>
    </div>