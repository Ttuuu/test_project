<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Without knowing anything more about the nature of G or H, there isn't much to go on.  This might not be <em>optimized</em>, but it is more readable.  It takes as arguments the sequence output by <code>G(k)</code> and the function <code>H</code>.</p>

<pre><code>from collections import defaultdict

def f(sequence, is_equivalent):
    """returns the number items in each equivalence class in the input sequence"""
    counter = defaultdict(int)

    for item in sequence:
        # filter counter.keys() to find equivalents to item
        equivalent = (eq for eq in counter.keys() if is_equivalent(item, eq))

        # key is next equivalent or default to item if no equivalent
        key = next(equivalent, item)

        counter[key] += 1

    return list(counter.items())
</code></pre>
    </div>