<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><code>Math.abs</code> in <code>Math.abs(high - low) == 1</code> is suspicious. <code>high</code> <em>should</em> always be not less than <code>low</code>. Remove it.</p></li>
<li><p><code>middle = (low + high) &gt;&gt; 1</code> <a href="https://ai.googleblog.com/2006/06/extra-extra-read-all-about-it-nearly.html" rel="nofollow noreferrer">may (and will) overflow</a>. Do <code>middle = low + (high - low) &gt;&gt; 1</code>.</p>

<p>That said, <code>&gt;&gt; 1</code> is no better than) <code>/ 2</code>.</p></li>
<li><p>Java is notorious in <em>not</em> eliminating the tail recursion. You should do it manually. First, rewrite it in a tail-recursive form:</p>

<pre><code>    if (low == high) {
        return arr[low];
    }
    if ( Math.abs(high - low) == 1 ) {
        return Math.max(arr[low], arr[high]);
    }

    middle = (low + high) &gt;&gt; 1;
    if (arr[middle] &gt; arr[middle + 1]) {
        return arr[middle];
    }
    if (arr[low] &gt; arr[middle]) {
        high = middle - 1;
    } else {
        low = middle + 1;
    }
    return findMax(arr, low, high);
</code></pre>

<p>then eliminate a recursive call:</p>

<pre><code>    while (high - low &gt; 2) {
        middle = low + (high - low) / 2;
        if (arr[middle] &gt; arr[middle + 1]) {
            return arr[middle];
        }
        if (arr[low] &gt; arr[middle]) {
            high = middle - 1;
        } else {
            low = middle + 1;
        }
    }
    return Math.max(arr[low], arr[high]);
</code></pre></li>
</ul>
    </div>