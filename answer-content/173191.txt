<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few of thoughts:</p>

<p>First, use a cell class, this can have properties not only for the value of the cell, but also for a collection of possible values, the row, column, square and square position.  This allows you to maintain by reference the cells in different collections(rows, columns, squares), without repeating all the data and having all cell changes reflected in all collections.</p>

<p>Second, build these collections as you build the puzzle.</p>

<p>Third, instead of starting randomly, start at a cell that has the lowest number of possibilities.  For instance if the cell has 2 possibilities, you only have to follow 2 paths to either complete some cells, or fail.  If both fail you have your answer.  By constantly taking only the smallest number of possibilities, this will greatly reduce the number of nested iterations.</p>
    </div>