<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The requirements for a forward iterator are:</p>

<ul>
<li><a href="http://www.martinbroadhurst.com/stl/ForwardIterator.html" rel="nofollow noreferrer">Forward Iterator</a></li>
</ul>

<p>It is a refinement of:</p>

<ul>
<li><a href="http://www.martinbroadhurst.com/stl/InputIterator.html" rel="nofollow noreferrer">Input Iterator</a></li>
<li><a href="http://www.martinbroadhurst.com/stl/OutputIterator.html" rel="nofollow noreferrer">Output Iterator</a></li>
<li><a href="http://www.martinbroadhurst.com/stl/trivial.html" rel="nofollow noreferrer">Trivial Iterator</a></li>
<li><a href="http://www.martinbroadhurst.com/stl/EqualityComparable.html" rel="nofollow noreferrer">Equity Comparable</a></li>
<li><a href="http://www.martinbroadhurst.com/stl/DefaultConstructible.html" rel="nofollow noreferrer">Default Constructable</a></li>
<li><a href="http://www.martinbroadhurst.com/stl/Assignable.html" rel="nofollow noreferrer">Assignable</a></li>
</ul>

<p>If you read through all those specs you must define these:</p>

<ul>
<li>Preincrement</li>
<li>Postincrement</li>
<li>Dereference (Read/Write)</li>
<li>Default Constructable</li>
<li>Copy Constructable</li>
<li>Assignment operator</li>
<li>swap</li>
<li>Postincrement and de-reference</li>
<li>Postincrement and assignment</li>
<li>Member accesses (-&gt; when de-referencing returns an object with members).</li>
<li>Comparable with == and !=</li>
</ul>

<p>You must also define these types:</p>

<ul>
<li>Value type </li>
<li>Distance type</li>
</ul>

<p>You are missing:</p>

<ul>
<li>The types.</li>
<li>Postincrement</li>
<li>Default Constructable (This gives you the equivalent of end of any list).</li>
<li>swap</li>
<li>Member accesses (-&gt; when de-referencing returns an object with members).</li>
</ul>
    </div>