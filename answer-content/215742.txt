<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Not bad for a first Python script!</p>

<p>In general, you can greatly benefit from giving parts of your code names, by encapsulating them in functions. This makes it also re-usable and let's you add a <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer"><code>docstring</code></a> giving more detail on what this function does.</p>

<p>If you add a <code>main</code> function which you call under a <code>if __name__ == "__main__":</code> guard you can also import these functions from another script without all of your code running.</p>

<p>Instead of <code>urllib.request</code>, you can use the <a href="http://docs.python-requests.org/en/master/" rel="nofollow noreferrer"><code>requests</code></a> module, it even has a method to directly return a JSON object.</p>

<p>While it is nice that the astronauts response contains the number of astronauts in space, you could get the same information from calling <code>len(people)</code>, which is <span class="math-container">\$\mathcal{O}(1)\$</span> for Python lists.</p>

<p>Familiarize yourself with <a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer"><code>f-string</code></a>s (Python 3.6+). They are a nice and compact way to write formatted strings, since they can contain arbitrary Python expressions (I used it for the address here).</p>

<pre><code>import requests
import reverse_geocoder

def get_json(url):
    """Retrieve JSON object from url.

    Raises an exception if connection fails.
    """
    response = requests.get(url)
    response.raise_for_status()  # make sure an exception is raised if something goes wrong
    return response.json()

def get_astronauts():
    """Returns a list of all people currently in space"""
    url = "http://api.open-notify.org/astros.json"
    return get_json(url)['people']

def get_iss_location():
    """Returns the current latitude and longitude of the ISS"""
    url = "http://api.open-notify.org/iss-now.json"
    position = get_json(url)['iss_position']
    return position['latitude'], position['longitude']

def get_address(position):
    """Do a reverse lookup getting the closest address to a given position"""
    return reverse_geocoder.search(position)[0]

def main():
    astronauts_in_space = get_astronauts()
    print("People in space : ", len(astronauts_in_space))
    print("----NAMES----")
    for astronaut in astronauts_in_space:
        print(astronaut['name'])

    iss_position = get_iss_location()
    print("Latitude: {}, Longitude: {}".format(*position))

    address = get_address(iss_position)
    print("----Address----")
    print(f"{address['name']}, {address['admin1']} {address['admin2']} {address['cc']}")

if __name__ == "__main__":
    main()
</code></pre>
    </div>