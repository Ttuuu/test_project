<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What you are looking for is <a href="https://docs.python.org/3/library/argparse.html#mutual-exclusion" rel="noreferrer"><code>add_mutually_exclusive_group</code></a>. It allows you to define options that are mutually exclusive as well as specifying if selecting one of these options is a required action or not. And looking at your <code>else:</code> block, yours is; meaning if we call the program without arguments, it should fail with an error along the following:</p>

<pre class="lang-none prettyprint-override"><code>usage: [-h] (-t TEXT | -f FILE)
program_name.py: error: one of the arguments -t/--text -f/--file is required
</code></pre>

<p>You are also handling files in your input and should avoid doing so manually. <code>argparse</code> provides a <a href="https://docs.python.org/3/library/argparse.html#filetype-objects" rel="noreferrer"><code>FileType</code></a> object meant to be used as the <code>type</code> keyword of <code>add_argument</code> to handle files for you. It will fail with a proper error message if the file cannot be opened with the proper mode and will return the opened file object in the resulting parsed arguments.</p>

<p>Proposed improvements:</p>

<pre><code>#!/usr/bin/env python

import argparse


def parse_command_line():
    parser = argparse.ArgumentParser()
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('-t', '--text', help='Text')
    group.add_argument('-f', '--file', type=argparse.FileType('r'), help='File containing the text')
    return parser


if __name__ == '__main__':
    args = parse_command_line().parse_args()

    if args.text is not None:
        text = args.text
    elif args.file is not None:
        with args.file as f:
            text = f.read()

    # Program continues ...
</code></pre>

<p>Also note the use of <code>with</code> to properly close the provided file.</p>
    </div>