<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The following avoids assumptions about and/or the need to convert according to culture, by letting the tried-and-tested DateTime plumbing do the work.  Creating a translation map once at first instantiation of the class (the static constructor) is the best I can think of to optimise performance.</p>

<p>If you use it, don't forget to do error-checking - specifically the result of TryParse.</p>

<pre><code>using System;
using System.Collections.Generic;

public class Program
{
  private static readonly Dictionary&lt;string, string&gt; MonthNameMap;
  //  Static constructor to build the translation dictionary once
  static Program()
  {
    MonthNameMap = new Dictionary&lt;string, string&gt;();
    //var months = new List&lt;string&gt;() { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };
    //foreach (var shortMonthString in months)
    //{
    //  DateTime.TryParse($"1 {shortMonthString} 2000", out var dt);
    //  MonthNameMap.Add(shortMonthString, dt.ToString("MMMM"));
    //}
    for (int i = 1; i &lt;= 12; i++)
    {
      DateTime.TryParse($"2000-{i}-25", out var dt);
      MonthNameMap.Add(dt.ToString("MMM"), dt.ToString("MMMM"));
    }
  }

  public static void Main()
  {
    foreach (var entry in MonthNameMap)
    {
      Console.WriteLine($"{entry.Key}: {entry.Value}");
    }
  }
}
</code></pre>

<p>Results:</p>

<pre><code>Jan: January
Feb: February
Mar: March
Apr: April
May: May
Jun: June
Jul: July
Aug: August
Sep: September
Oct: October
Nov: November
Dec: December
</code></pre>
    </div>