<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>doing <code>try/catch</code> like this, will execute the <code>try/catch</code> block each time the Page_Load is triggered, which would be unnecessary. </p>

<p>What you need is to validate the user input in <code>btnSaveUser_Click</code> event, and when user clicks on <code>btnSaveUser_Click</code> the data should go to validation process, 
if there is any error, it should do something about it (e.g. show it to the user to be able to fix it and resubmit it again.).</p>

<p>for the AntiForgery, I would suggest you implement it globally on all <code>POST</code> requests. Thus, you'll need to implement a middleware handler which will handle <code>HttpContext</code> post requests, and validate the token. This would be a better approach. </p>

<p>For the last question, having both <code>if(Page.IsPostBack)</code> and <code>if(!Page.IsPostBack)</code> would be redundant. </p>

<p>it should be simplified to : </p>

<pre><code>if (!Page.IsPostBack)
{
    // not a postback
}
else
{
    // is a postback
}
</code></pre>
    </div>