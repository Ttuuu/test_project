<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Yes... there is a simpler way. You have two choices, but each about the same. Use an Array, or a Map. The more advanced way of doing this would certainly be with a Map. </p>

<p>Think about a map as a type of array where instead of using an integer to index the array you can use anything. In our case here we'll use  char as the index. Because chars are ints you could just use a simple array in this case, and just mentally think of 'a' as 0, but we're going to take the larger step today.</p>

<pre><code>String sample = "Hello World!";

// Initialization
Map &lt;Character, Integer&gt; counter = new HashMap&lt;Character, Integer&gt;();
for(int c = 'a'; c &lt;= 'z'; c++){
    counter.put((Character)c, 0);
}

// Populate
for (int i = 0; i &lt; sample.length(); i++){
    if(counter.containsKey(sample.charAt(i)))
        counter.put(sample.charAt(i), counter.get(sample.charAt(i)) + 1 );
}
</code></pre>

<p>Now anytime you want to know how many of whatever character there was just call this method</p>

<pre><code>int getCount(Character character){
    if(counter.containsKey(character))
        return counter.get(character);
    else return 0;
}
</code></pre>

<p>Note: This only will work for counting punctuation. </p>
    </div>