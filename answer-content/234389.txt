<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Remove the trivial destructor</h1>

<p>The destructor is not doing anything, so there's no need to write it at all.</p>

<h1>Make it clear what types <code>T</code> are allowed</h1>

<p>Currently your code allows the instantiation of the class with any type <code>T</code>. However, it probably only makes sense for unsigned integral types. Furthermore, you probably want to restrict it to only the polynomials you have defined in <code>CrcSpace</code>, since not all generators result in useful CRCs.</p>

<p>It would be better if you could pass the desired polynomial directly as the template argument to <code>class Crc</code>. Here is a possible implementation:</p>

<pre><code>namespace CrcSpace {
    template&lt;typename T, T value_&gt;
    struct Polynomial {
         using value_type = T; 
         static constexpr T value = value_;
    };

    using etsi = Polynomial&lt;u8, 0xD5&gt;;
    ...
    using posix = Polynomial&lt;u32, 0x04C11DB7&gt;;
}

template &lt;typename P&gt;
class Crc {
    using T = typename P::value_type;

private:
    T initValue;
    ...

public:
    Crc(T initValue, T finalXor);
    ...
};
</code></pre>

<p>You'd the instantiate a <code>Crc</code> like so:</p>

<pre><code>Crc&lt;CrcSpace::etsi&gt; crc(9, 42);
</code></pre>

<h1>Use array notation where appropriate</h1>

<p>This line:</p>

<pre><code>*(this-&gt;crcTable + tabIndexCounter) = temp;
</code></pre>

<p>Looks very complex, but it's just writting to an array element. It should be rewritten as:</p>

<pre><code>crcTable[tabIndexCounter] = temp;
</code></pre>

<h1>Don't write <code>this-&gt;</code> unnecessarily</h1>

<p>You use <code>this-&gt;variable</code> in many places where the <code>this-&gt;</code> part is unnecessary. Unlike Python, you don't need to write <code>this-&gt;</code> everywhere in C++.</p>
    </div>