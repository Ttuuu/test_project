<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have one answer - along with your questions about how to write the code, you should also consider writing unit tests for it.  </p>

<p>That is an answer to your question "any suggestions for improvements?" </p>

<p>For instance you could write a module that imports unittest and in there import your module and create a test class per the unittest documentation.  </p>

<p>Then you'd write a function called <code>test_isWhiteSpace_truepositive</code> that calls <code>&lt;your module&gt;.isWhiteSpace(" ")</code> and then checks if the result is true.  That test would tell you that your function correctly identifies a space as a whitespace character.  You could then either add to that function a check for <code>"\t"</code> and <code>"\n"</code>, or you could write separate tests for those characters (I'd do them all in one).</p>

<p>The tests would not need much maintenance unless you change your code - you'd write one for each function you create, they serve as documentation for the expected behavior of the function and they could be easily run (python mytestsuite.py) whenever you update your code, and they would tell you if you've broken anything.  You could even automate them as part of your source code management (git, etc.) process.</p>

<p>These lower level functions don't benefit very much from this but eventually your program is going to get large and as you make more changes, you might need to add different kinds of whitespace and it would be helpful to have this test to run against your updated function to make sure it behaves as expected.  </p>

<p>For instance you might change "isWhiteSpace" to take an entire string rather than one character, and then you'd want to really exercise it with <code>isWhiteSpace("     \t    \n      \t\t   \n\n\n\n\n")</code>, etc.</p>

<p>Just a toy example, but it would be a suggestion for improving your code.</p>
    </div>