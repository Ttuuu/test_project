<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Many folks find that tacking on <code>{</code> <code>}</code> braces
to even a single-line <code>if</code> body is a useful way of preventing future bugs.</p>
<hr>
<p>You wrote:</p>
<blockquote>
<pre><code>  array[0] + maxSubsetSumNoAdjacent(Arrays.copyOfRange(array, 2, array.length)),
  array[1] + maxSubsetSumNoAdjacent(Arrays.copyOfRange(array, 3, array.length))
</code></pre>
</blockquote>
<p>The pair of copy statements is wasteful.
You're allocating temp storage (for GC to collect)
and consuming memory bandwidth.
It turns what <em>could</em> be a linear algorithm into a quadratic one (O(n) â†’ O(n^2)).</p>
<p>The caller is going to simply hand you an array,
so you <em>have</em> to conform to that public API, accepting a single argument.
But nothing stops you from overloading, from writing a private helper.
Your public function should immediately ask the helper about the array,
from index <code>0</code> onward to end of array.
Then all the work happens in the helper.</p>
<p>Note that recursive calls that pass array plus a starting index
will never <strong>copy</strong> the array.
They merely pass a pointer to start of original array, in O(1) time,
independent of how enormous that array happens to be.</p>
<p>You have an opportunity to dramatically improve the implemented algorithm,
by passing index to the "as yet unsolved" portion of the array.</p>
    </div>