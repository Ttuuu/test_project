<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Extensibility</h1>

<p>The following is meant as an addendum to Rob's answer. It is built upon their approach and extends it to work for arrays with arbitrary <em>depth</em>.</p>

<pre><code>extension Array {
    func flattened(range: Range&lt;Int&gt;) -&gt; [Any]? {
        return helper(range).result?.count == range.upperBound - range.lowerBound ?
                helper(range).result :
                nil
    }

    private func helper(_ range: Range&lt;Int&gt;) -&gt; (result: [Any]?, offset: Int) {
        var result: [Any] = []

        var offset = range.startIndex
        let length = range.upperBound - range.lowerBound

        result.reserveCapacity(length)

        for i in self.indices {
            let element = self[i]

            if let sub_a: [Any] = element as? [Any] {
                let tempo = sub_a.helper(offset..&lt;offset + length - result.count)
                if let res = tempo.result {
                    result += res
                    offset = tempo.offset
                } else {
                    return (result: nil, offset: offset)
                }
            } else {
                if offset == 0 {
                    result.append(element)
                }
                offset = Swift.max(0, offset - 1)
            }

            if result.count == length {
                return (result: result, offset: offset)
            }
        }

        return (result: result, offset: offset)
    }
}
</code></pre>

<p>It has been tested with all of these arrays :</p>

<pre><code>let a: [Any] = [[["0", "1", "2",   "3",  "4",    "5"], ["6",  "7"], []],
                [["8", "9", "10", "11", "12"], ["13",  "14", "15"]]]

let b: [Any] = [[["0", "1"], ["2", "3", "4"]],
                [[]],
                [["5"], ["6", "7", "8", "9"]],
                [["10", "11", "12"], ["13", "14", "15"]]]

let c: [Any] = [["0", "1", "2", "3", "4", "5", ["6", "7", ["8", "9", "10", "11", "12"]]], [], ["13", "14", "15"]]
</code></pre>

<p>The output of all three :</p>

<pre><code>print(a.flattened(range: 3..&lt;15))
print(b.flattened(range: 3..&lt;15))
print(c.flattened(range: 3..&lt;15))
</code></pre>

<p>is </p>

<blockquote>
  <p><code>Optional(["3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"])</code></p>
</blockquote>
    </div>