<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Original approach works too slow and syntactically inefficient â€“ it is also quicker to recalculate everything than track dependencies. Now I defined a <code>Lazy.tt</code> template to create class with overrides, so if attribute named <code>Lazy</code> marks property or class like here:</p>

<pre><code>class Calculator
{
    public int Arg1 { get; set; }
    public int Arg2 { get; set; }
    [Lazy] public virtual int Mul =&gt; Arg1 * Arg2;
    [Lazy] public virtual int Sum =&gt; Arg1 + Arg2;
}
</code></pre>

<p>The following <code>Lazy</code> class is generated by <code>tt</code>:</p>

<pre><code>class LazyCalculator : Calculator
{
    public LazyCalculator() // Delegate all ctors
        : base()
    {
        Init();
    }

    void Init()
    {
        LazyMul = new Lazy&lt;int&gt;(() =&gt; base.Mul);
        LazySum = new Lazy&lt;int&gt;(() =&gt; base.Sum);
    }

    Lazy&lt;int&gt; LazyMul;
    public override int Mul =&gt; LazyMul.Value;

    Lazy&lt;int&gt; LazySum;
    public override int Sum =&gt; LazySum.Value;
}
</code></pre>

<p>It is not perfect, as <code>EnvDTE</code> (to browse code structure) is slow and not available for MSBuild, but I just could not come to the better solution at the moment.</p>
    </div>