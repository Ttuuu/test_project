<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just some quick/general thoughts here, not really an in-depth analysis.</p>

<p>Regarding performance, it's imperative to use devtools performance profiler (or its simpler version "JavaScript profiler" in Chrome) and optionally other more specialized tools for node.js, etc. Otherwise you'll get a rehashing of the well-known practices which most likely have little to no influence in this case.</p>

<p>For example, you do a lot of string concatenation but I would instantly suggest using an array which can then be quickly converted into a string by using Uint8Array+TextDecoder API or via feeding 8kB chunks to String.fromCharCode or plain arr.join('') if you store strings.</p>

<p>Regarding RegExp, things like <code>/^prefix(.*)suffix$/</code> can cause catastrophic backtracking (like half a minute) on some inputs so it's best to split such an expression in two or apply <a href="https://javascript.info/regexp-catastrophic-backtracking" rel="nofollow noreferrer">other preventive solutions</a>, even use plain-string checks where possible via <code>str.startsWith('prefix') &amp;&amp; str.endsWith('suffix')</code> and then <code>slice()</code> the string.</p>

<p>Regarding splitting, one thing to pay attention to is the deoptimization of large functions due to various heuristics in V8 (and possibly other js engines), partially when the shape of function parameters changes, which should be indicated as such in devtools profiler and for which you can find more info on V8 blogs, IIRC. Here's also some: <a href="https://github.com/thlorenz/v8-perf" rel="nofollow noreferrer">https://github.com/thlorenz/v8-perf</a></p>
    </div>