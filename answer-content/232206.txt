<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> gives you a major headstart on this one. </li>
<li>Include some """python <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer">docstring</a>"""</li>
<li>decompose into a neat single username method and a <a href="https://www.digitalocean.com/community/tutorials/understanding-list-comprehensions-in-python-3" rel="nofollow noreferrer">list-comprehension</a> to apply this to an input list.</li>
</ul>

<p>The below is not self-contained (<code>users</code> resides as a global variable) but solves the problem succinctly.</p>

<pre class="lang-py prettyprint-override"><code>from collections import defaultdict

users = defaultdict(lambda: -1)  # All names start at -1


def new_username(name):
    """Generate unique username for given name"""
    users[name] += 1
    return f"{name}{'' if users[name] == 0 else users[name]}"


def username_system(names):
    return [new_username(n) for n in names]  # list comprehension


names = ['john', 'john', 'tom', 'john']
print(username_system(names))
</code></pre>
    </div>