<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It does look sound to me with one exception that you need to be aware of, as far as I can see:</p>
<pre class="lang-java prettyprint-override"><code>if (!string.isEmpty()) {
    synchronized (lock) {
        lock.notify();
    }
    string = "";
}
</code></pre>
<p>The moment you set <code>string</code> to a new value, the first thread might not have visited the variable at this point. You can see that when outputting <code>string</code> in both threads. This is only important if thread #1 is going to do processing on the value.</p>
<p>Additionally, because of the <code>Thread.sleep(200);</code> you might miss input lines because <code>string</code> value might have changed an unidentified number of times during this period.</p>
<hr>
<blockquote>
<p>I mean, if I don't add the 200ms delay in t2 execution, the thread will consume a lot of processing power, so, how can I create a listener behavior?</p>
</blockquote>
<p>The same way you did between #2 and #1, <code>notify</code> #2 from #3.</p>
<hr>
<p>To fix these issues, you want to use something like a <code>BlockingQueue</code>. Thread #3 pushes the line to the <code>Queue</code>, thread #2 dequeues the next value and notifies #1. Or, #2 pushes it to a second <code>Queue</code> for #1.</p>
    </div>