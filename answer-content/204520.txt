<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Don't use <code>using</code> in your headers</h1>
<p>Everyone who uses the header will have <em>the entire contents of the <code>std</code> namespace</em> copied into the global namespace <em>whether they want them or not</em>.  It's not what I expect when I write <code>#include "hashtable.h"</code>, and it's poor practice to inflict that on your <s>victims</s> users.</p>
<hr>
<p>Otherwise, the code looks pretty clean.  Good use of <code>const</code> where appropriate.  Some issues that may be worth looking at:</p>
<ul>
<li><p>Prefer to use a smart pointer rather than a raw pointer for <code>ht</code>, which is owned by this class.</p>
</li>
<li><p>We can use <code>std::fill</code> instead of a <code>for</code> loop to initialise the contents of <code>ht</code>.</p>
</li>
<li><p>It's probably more convenient to implement move construction/assignment in terms of <code>swap()</code>, so implement that.</p>
</li>
<li><p>Prefer to use the standard names for functions such as <code>capacity()</code> and <code>empty()</code>, to make this class more interchangeable with the standard collections.  Similarly, consider providing iterators and making the content type a template parameter.</p>
</li>
<li><p>Test program - do you really need to flush every line of output?  Or can most of those <code>std::endl</code> be simply <code>\n</code> instead?</p>
</li>
</ul>
    </div>