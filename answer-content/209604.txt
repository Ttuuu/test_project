<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>IDbManager dbMansdager = new DbManager(ConnectionDbType.SqlLite);  
</code></pre>
</blockquote>

<p>Small typo here. It should be named <code>dbManager</code>should't it?  </p>

<ul>
<li><p><code>ResolveConfig()</code> is a <code>public</code> method hence you should validate the passed methodparameter. One could pass <code>null</code> and your queries would throw an exception.  </p></li>
<li><p><code>Send()</code> you are using <code>using</code> statements for disposable objects which is good but you could do better by stacking the <code>using</code>s like so  </p>

<pre><code>using (var smtp = new SmtpClient(SmtpIp))
using (var mail = new MailMessage())
{
    smtp.UseDefaultCredentials = true;


}  
</code></pre>

<p>This will save one level of indentation.  </p></li>
<li><p>It seems you expect that <code>To</code> may be <code>null</code> or empty. You can simplify the check by only calling <code>string.IsNullOrEmpty()</code> or much better <code>string.IsNullOrWhiteSpace()</code>. But wait, if <code>To</code> is either <code>null</code> or empty calling <code>SendMailAsync()</code> would throw an <code>ArgumentNullException</code>. </p></li>
<li><code>Finally</code> this could be a problem because the <code>finally</code> will be executed no matter if an exception had been thrown or not. Meaning the attachment will be deleted. This will happen e.g the smtp-server is down as well. Is this the desired behaviour ?  </li>
<li>Omitting braces <code>{}</code> whould be avoided althought they might be optional. Omitting braces can lead to hidden and therefor hard to find bugs.  

<hr></li>
</ul>

<blockquote>
  <p>Is it fine approach to call config like this generally in that example
  class?  </p>
</blockquote>

<p>If you want to make quick adjustments to some config this isn't the way you should go because changing e.g a xml-file just needs an editor but changing some db entries adds a lot of overhead. It also depends on the use case. If you consider to make mass-mailings then the db version would be better.</p>
    </div>