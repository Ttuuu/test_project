<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here are my ideas.<br>
For the insert script I have the same recommendations as @mickmackusa. Stay consistent and use object-oriented syntax for mysqli and prepared statements. You might find it easier to use PDO instead of mysqli, but it is probably too late at this stage unless your project is still small and you are willing to swap.</p>

<p>Update script:</p>

<ol>
<li><p>Don't create so many aliases on your variables. There is no reason for it if you are not modifying their value. If 2 variables hold the same value, but have different name your code gets harder to understand.</p></li>
<li><p>Don't declare empty strings explicitly. Try out my nifty trick of using trim with null-coalesce operator*: <code>trim($_POST['fname'] ?? '');</code> It doesn't trigger a notice and also defaults to an empty string if the variable doesn't exist. Personally I don't agree here with @mickmackusa statements that your should call <code>isset</code> before <code>trim</code>, I see no benefit in doing so, and much more prefer defaulting it to a null or empty string.</p></li>
<li><p>Use <code>isset</code> or <code>empty</code>. There is no need to call them both. Try: <code>if (!empty($_POST['id'])) {</code></p></li>
<li><p>Your <code>id</code> should be an integer so you should enforce that. A short way of doing so would be <code>$id = (int) ($_POST['id'] ?? null);</code>, but keep in mind that your should do more data validation than this!</p></li>
<li><p>Use an associative array for your validation errors. This makes the syntax simpler (see answer by @mickmackusa), and still allows you to separate the messages. An empty array is falsish value so you can just check <code>if(!$errors)</code> to see if the validations passed.<br>
In your HTML form you can then check if the key exists and display the message. Here again you could use null-coalesce operator*: <code>&lt;?php echo $validation_errors['embg'] ?? '';?&gt;</code> to get rid of the pesky notices, or you could redesign your HTML to display the <code>&lt;span&gt;</code> only if the message exists.</p></li>
<li><p>Close your mysqli statement in the same code block it was created or not at all, PHP will do it for you anyway. If the prepare call fails it will return FALSE and your can't call <code>FALSE-&gt;close()</code>. Close the statement only if prepare was successful.</p></li>
<li><p>Exit with a header. Exit can take an argument in the form of a string and header returns nothing which makes it a perfect pair to put together: <code>exit(header('location: employees.php'));</code>. Saves you one line at least.</p></li>
<li><p>No need for an else statement after the <code>exit</code>. Exit will terminate the script so else part will never be reached. </p></li>
<li><p>You should close mysqli connection either in the same block of code it was created or not at all. When PHP script terminated it will close the connection for you automatically. If you really need to close it yourself don't put it inside an if statement.</p></li>
<li><p>The only statement in the else part is an if statement. Use <code>elseif</code> instead. In your case the statement can be <code>if/elseif/else</code> instead of <code>if{if/else}</code></p></li>
<li><p><strong>Prevent XSS!</strong> Never output raw data regardless of where it came from. Use <code>htmlspecialchars($str, ENT_QUOTES | ENT_HTML5, 'UTF-8');</code> on any data displayed into HTML. I have created a wrapper function to make it simpler to call this. </p></li>
<li><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select" rel="nofollow noreferrer">HMTL select tag</a> doesn't have <code>type</code> or <code>value</code> attributes. </p></li>
</ol>

<p>* If you are not yet on &gt;=PHP 7, then instead of null coalesce operator you need to use a longer syntax with an <code>isset</code> or create a shim.</p>

<pre><code>&lt;?php
// Include config file
require_once 'config.php';

// Processing form data when form is submitted
if (!empty($_POST['id'])) {
    // Get hidden input value
    $id = (int) ($_POST['id'] ?? null);

    // define an empty array for validation errors to be displayed in HTML form
    $validation_errors = [];

    // Validate First Name ($fname)
    $fname = trim($_POST['fname'] ?? '');
    if (empty($fname)) {
        $validation_errors['fname'] = 'Please enter your First Name.';
    }

    // Validate Last Name ($lname)
    $lname = trim($_POST['lname'] ?? '');
    if (empty($lname)) {
        $validation_errors['lname'] = 'Please enter your Last Name.';
    }

    // Validate Date of Birth ($dob)
    $dob = trim($_POST['dob'] ?? '');
    if (empty($dob)) {
        $validation_errors['dob'] = 'Please enter your Date of Birth.';
    }

    // Validate EMBG ($embg)
    $embg = trim($_POST['embg'] ?? '');
    if (empty($embg)) {
        $validation_errors['embg'] = 'Please enter your EMBG.';
    }

    // Validate Address ($address)
    $address = trim($_POST['address'] ?? '');
    if (empty($address)) {
        $validation_errors['address'] = 'Please enter an address.';
    }

    // Validate City ($city)
    $city = trim($_POST['city'] ?? '');
    if (empty($city)) {
        $validation_errors['city'] = 'Please enter your City.';
    }

    // Validate Mobile Number ($mobile)
    $mobile = trim($_POST['mobile'] ?? '');
    if (empty($mobile)) {
        $validation_errors['mobile'] = 'Please enter your Mobile.';
    }

    // Validate E-mail ($email)
    $email = trim($_POST['email'] ?? '');
    if (empty($email)) {
        $validation_errors['email'] = 'Please enter your E-mail.';
    }

    // Validate WorkPlace ($workplace)
    $workplace = trim($_POST['workplace'] ?? '');
    if (empty($workplace)) {
        $validation_errors['workplace'] = 'Please choose your Work Place.';
    }

    // Validate Work Position ($workposition)
    $workposition = trim($_POST['workposition'] ?? '');
    if (empty($workposition)) {
        $validation_errors['workposition'] = 'Please choose your Work Position.';
    }

    // Validate Job Start Date ($jobstartdate)
    $jobstartdate = trim($_POST['jobstartdate'] ?? '');
    if (empty($jobstartdate)) {
        $validation_errors['jobstartdate'] = 'Please enter your Date of Birth.';
    }

    // Validate Contract From ($contractfrom)
    $contractfrom = trim($_POST['contractfrom'] ?? '');
    if (empty($contractfrom)) {
        $validation_errors['contractfrom'] = 'Please enter your Date of Birth.';
    }


    // Check input errors before inserting in database   jobstartdate
    if (!$validation_errors) {
        // Prepare an update statement
        $sql = 'UPDATE addemployees SET fname=?, lname=?, dob=?, embg=?, address=?, city=?, mobile=?, email=?, workplace=?,
                workposition=?, jobstartdate=?, contractfrom=? WHERE id=?';

        if ($stmt = $mysqli-&gt;prepare($sql)) {
            // Bind variables to the prepared statement as parameters
            $stmt-&gt;bind_param(
                'ssssssssssssi',
                $fname,
                $lname,
                $dob,
                $embg,
                $address,
                $city,
                $mobile,
                $email,
                $workplace,
                $workposition,
                $jobstartdate,
                $contractfrom,
                $id
            );

            // Attempt to execute the prepared statement
            if ($stmt-&gt;execute()) {
                // Records updated successfully. Redirect to landing page
                exit(header('location: employees.php')); // exit with a header
            }
            echo 'Something went wrong. Please try again later.';

            // Close statement
            // $stmt-&gt;close(); // it's redundant in this context
        }
    }
} elseif ($id = (int)$_GET['id']) {
    // Check existence of id parameter before processing further

    // Prepare a select statement
    $sql = 'SELECT * FROM addemployees WHERE id = ?';

    if ($stmt = $mysqli-&gt;prepare($sql)) {
        // Bind variables to the prepared statement as parameters
        $stmt-&gt;bind_param('i', $id);

        // Attempt to execute the prepared statement
        if ($stmt-&gt;execute()) {
            $result = $stmt-&gt;get_result();
            if ($result-&gt;num_rows) {
                // Fetch result row as an associative array. Since the result set contains only one row, we don't need to use while loop
                $row = $result-&gt;fetch_array(MYSQLI_ASSOC);

                // Retrieve individual field value
                $fname        = $row['fname'];
                $lname        = $row['lname'];
                $dob          = $row['dob'];
                $embg         = $row['embg'];
                $address      = $row['address'];
                $city         = $row['city'];
                $mobile       = $row['mobile'];
                $email        = $row['email'];
                $workplace    = $row['workplace'];
                $workposition = $row['workposition'];
                $jobstartdate = $row['jobstartdate'];
                $contractfrom = $row['contractfrom'];
            } else {
                // URL doesn't contain valid id. Redirect to error page
                exit(header('location: error.php')); // exit with a header
            }
        } else {
            echo 'Oops! Something went wrong. Please try again later.';
        }

        // Close statement
        // $stmt-&gt;close(); // it's redundant in this context
    }
} else {
    // URL doesn't contain id parameter. Redirect to error page
    exit(header('location: error.php')); // exit with a header
}


// Close connection
// $mysqli-&gt;close(); // it's redundant in this context


function clean_HTML(string $str): string
{
    return htmlspecialchars($str, ENT_QUOTES | ENT_HTML5, 'UTF-8');
}

?&gt;


&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Update Record&lt;/title&gt;
    &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.css"&gt;
    &lt;style type="text/css"&gt;
        .wrapper{
            width: 500px;
            margin: 0 auto;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="wrapper"&gt;
        &lt;div class="container-fluid"&gt;
            &lt;div class="row"&gt;
                &lt;div class="col-md-12"&gt;
                    &lt;div class="page-header"&gt;
                        &lt;h2&gt;Измени Податоци&lt;/h2&gt;
                    &lt;/div&gt;
                    &lt;form action="&lt;?php echo htmlspecialchars(basename($_SERVER['REQUEST_URI'])); ?&gt;" method="post"&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['fname']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Име&lt;/label&gt;
                            &lt;input type="text" id="fname" name="fname" class="form-control" value="&lt;?php echo clean_HTML($fname); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['fname'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['lname']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Презиме&lt;/label&gt;
                            &lt;input type="text" name="lname" id="lname" class="form-control" value="&lt;?php echo clean_HTML($lname); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['lname'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['dob']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Дата на Раѓање&lt;/label&gt;
                            &lt;input type="date" name="dob" id="dob" class="form-control" value="&lt;?php echo clean_HTML($dob); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['dob'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['embg']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;ЕМБГ&lt;/label&gt;
                            &lt;input type="text" name="embg" id="embg" class="form-control" maxlength="13" value="&lt;?php echo clean_HTML($embg); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['embg'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['address']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Адреса&lt;/label&gt;
                            &lt;input type="text" id="address" name="address" class="form-control" value="&lt;?php echo clean_HTML($address); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['address'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['city']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Град&lt;/label&gt;
                            &lt;input type="text" name="city" id="city" class="form-control" value="&lt;?php echo clean_HTML($city); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['city'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['mobile']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Мобилен&lt;/label&gt;
                            &lt;input type="text" name="mobile" id="mobile" class="form-control" maxlength="9" value="&lt;?php echo clean_HTML($mobile); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['mobile'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['email']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Е-маил&lt;/label&gt;
                            &lt;input type="text" name="email" id="email" class="form-control" value="&lt;?php echo clean_HTML($email); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['email'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['workplace']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Работно Место &lt;span style="font-size: 15px; color: rgb(255, 0, 0); margin-right: 15px;"&gt;(ПРОВЕРИ)&lt;/span&gt;&lt;/label&gt;
                            &lt;select name="workplace" id="workplace" class="form-control" &gt;
                                &lt;option value="Кафич ГТ-1 - Широк Сокак бр. 55"&gt;Кафич ГТ-1 - Широк Сокак бр. 55&lt;/option&gt;
                                &lt;option value="Кафич ГТ-2 - Широк Сокак бр. 94"&gt;Кафич ГТ-2 - Широк Сокак бр. 94&lt;/option&gt;
                                &lt;option value="Ланч Бар ГТ - Широк Сокак бр. 55"&gt;Ланч Бар ГТ - Широк Сокак бр. 55&lt;/option&gt;
                                &lt;option value="Главен Магацин - Боримечка"&gt;Главен Магацин - Боримечка&lt;/option&gt;
                            &lt;/select&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['workplace'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['workposition']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Работна Позиција &lt;span style="font-size: 15px; color: rgb(255, 0, 0); margin-right: 15px;"&gt;(ПРОВЕРИ)&lt;/span&gt;&lt;/label&gt;
                            &lt;select name="workposition" id="workposition" class="form-control" &gt;
                            &lt;option value="Келнер"&gt;Келнер&lt;/option&gt;
                            &lt;option value="Шанкер"&gt;Шанкер&lt;/option&gt;
                            &lt;option value="Колачи"&gt;Колачи&lt;/option&gt;
                            &lt;option value="Сладолед"&gt;Сладолед&lt;/option&gt;
                            &lt;option value="Производство Сладолед"&gt;Производство Сладолед&lt;/option&gt;
                            &lt;option value="Производство Торти"&gt;Производство Торти&lt;/option&gt;
                            &lt;option value="Кувар"&gt;Кувар&lt;/option&gt;
                            &lt;option value="Помошник Кувар"&gt;Помошник Кувар&lt;/option&gt;
                            &lt;option value="Салатер"&gt;Салатер&lt;/option&gt;
                            &lt;option value="Пицер"&gt;Пицер&lt;/option&gt;
                            &lt;option value="Менаџер"&gt;Менаџер&lt;/option&gt;
                            &lt;option value="Книговодител"&gt;Книговодител&lt;/option&gt;
                            &lt;option value="Хигиеничар"&gt;Хигиеничар&lt;/option&gt;
                            &lt;option value="Стражар"&gt;Стражар&lt;/option&gt;
                            &lt;option value="Магационер"&gt;Магационер&lt;/option&gt;
                            &lt;option value="Шофер"&gt;Шофер&lt;/option&gt;
                            &lt;option value="Дистрибутер"&gt;Дистрибутер&lt;/option&gt;
                            &lt;/select&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['workposition'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['jobstartdate']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Дата на Почнување на Работа &lt;span style="font-size: 15px; color: rgb(255, 0, 0); margin-right: 15px;"&gt;(Месец/Ден/Година)&lt;/span&gt;&lt;/label&gt;
                            &lt;input type="date" name="jobstartdate" id="jobstartdate" class="form-control" value="&lt;?php echo clean_HTML($jobstartdate); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['jobstartdate'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;

                        &lt;div class="form-group &lt;?php echo isset($validation_errors['contractfrom']) ? 'has-error' : ''; ?&gt;"&gt;
                            &lt;label&gt;Договор за работа од &lt;span style="font-size: 15px; color: rgb(255, 0, 0); margin-right: 15px;"&gt;(Месец/Ден/Година)&lt;/span&gt;&lt;/label&gt;
                            &lt;input type="date" name="contractfrom" id="contractfrom" class="form-control" value="&lt;?php echo clean_HTML($contractfrom); ?&gt;"&gt;
                            &lt;span class="help-block"&gt;&lt;?php echo $validation_errors['contractfrom'] ?? '';?&gt;&lt;/span&gt;
                        &lt;/div&gt;


                        &lt;input type="hidden" name="id" value="&lt;?php echo $id; ?&gt;"/&gt;
                        &lt;input type="submit" class="btn btn-primary" value="Submit"&gt;
                        &lt;a href="employees.php" class="btn btn-default"&gt;Cancel&lt;/a&gt;
                    &lt;/form&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
    </div>