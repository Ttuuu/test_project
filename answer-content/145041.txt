<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't see what you've done here as 'bad practice'. But I can suggest some improvements. My comments are below each snippet of your code:</p>

<pre><code>public static int workMinutes
{
    get
    {
        return Properties.Settings.Default.workMinutes;
    }
    set
    {
        Properties.Settings.Default.workMinutes = value;
        save();
    }
}
</code></pre>

<p>Can the wrapped code possibly throw? If yes, can you include code that guards against those exceptions from throwing? If no, please document your getter/setter with the list of exceptions that could possibly throw, having a brief explanation as to what conditions can cause the exceptions.</p>

<pre><code>public static void init()
{
    if(Properties.Settings.Default.workMinutes == 0)
        Properties.Settings.Default.workMinutes = 5;

    if(Properties.Settings.Default.restMinutes == 0)
        Properties.Settings.Default.restMinutes = 5;

    save();
}
</code></pre>

<p>You've created properties, but then in client code (the init method), you don't use the properties, but rather you directly access the thing being wrapped. I suggest that you use your properties in all client code.</p>

<pre><code>private static void save()
{
    Properties.Settings.Default.Save();
}
</code></pre>

<p>I see no good reason to wrap the call to Properties.Settings.Default.Save inside of this static method. Your wrapper is private, and is consumed only by members of the same struct. I suggest to remove your custom save method, and making direct calls to Properties.Settings.Default.Save within the other two struct members.</p>

<p>Lemme know what you think about my critique.</p>
    </div>