<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It sounds from your problem description that the strings can only differ if one is a substring of the other.  Maybe even the one will only be truncated at the end?  When I look at your code I see that CraigsList may add hyphens and spaces.  I think this is a much simpler problem than the more general case of lexical similarity.  Would something like the following work for you?</p>

<pre><code>public boolean isSimilar(String orig, String test) {
    // Remove every character that's not relevant to your comparison.
    // (assumes you are writing in ASCII English)
    // The regular expression should be read as: "replace each character that
    // is not a capital or lower-case letter or number with... nothing"
    // Since this will remove all whitespace, you don't need to trim.
    orig = orig.replaceAll("[^A-Za-z0-9]", "");
    test = test.replaceAll("[^A-Za-z0-9]", "");

    return (test.length &lt; orig.length) &amp;&amp;
           orig.substring(0, test.length).equalsIgnoreCase(test);
}
</code></pre>

<p>I didn't compile this, so it might be Java-ish pseudo-code, but I hope that gives you an idea.</p>

<p>Also using == or != with Strings in Java is very dangerous.  It will not work if your code is ever serialized, or used on separate machines.  I would make one or more of the following changes:</p>

<pre><code>// Original
if(cur.getActv() != "YES" &amp;&amp; sameItemDesc(cl.getDesc(), cur.getDesc()))

// Better - parenthesis and indentation makes clear two separate comparisons
// Also, makes clear that the != "YES" gets evaluated before the &amp;&amp;
if( (cur.getActv() != "YES") &amp;&amp;
    sameItemDesc(cl.getDesc(), cur.getDesc()) )

// Better: compares the *contents* of the string "YES" with
// the contents of whatever string getActv() returns.  You were comparing
// the *address* of "YES" with the *address* of whatever string cur.getActv()
// returns.
if( !"YES".equals(cur.getActv()) &amp;&amp;
    sameItemDesc(cl.getDesc(), cur.getDesc()) )

// Better still to make getActv return a boolean!  Now you don't
// have to worry about what kind of comparison you use, or even
// typos!
if( !cur.getActv() &amp;&amp;
    sameItemDesc(cl.getDesc(), cur.getDesc()) )
</code></pre>
    </div>