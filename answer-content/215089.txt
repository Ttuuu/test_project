<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Double-quote variables used in command parameters</h3>

<p>This is a bug:</p>

<blockquote>
<pre><code>/bin/rm -i $@
</code></pre>
</blockquote>

<p>What will happen if you try to delete file <code>a b</code> (with space in the name)?
Most likely this:</p>

<blockquote>
<pre><code>rm: a: No such file or directory
rm: b: No such file or directory
</code></pre>
</blockquote>

<p>Always write <code>"$@"</code> instead of unquoted <code>$@</code>.</p>

<p>Unfortunately, as you pointed out in a comment,
this will cause another problem:
arguments containing globs will be taken literally.
In short, it's difficult to have the cake and eat it too.</p>

<p>You could mitigate the problem by looping over the arguments,
and if you detect a glob, then expand it yourself:</p>

<pre><code>for arg; do
    if [[ $arg == *[*?]* ]]; then
        expanded=($arg)
        echo rm -i "${expanded[@]}"
    else
        echo rm -i "$arg"
    fi
done
</code></pre>

<p>This still won't be perfect, because it doesn't handle the case when an argument contains both spaces and globs. A robust solution would take more effort, and not worth doing in Bash. (See <a href="https://stackoverflow.com/a/48526731/641955">this example</a> delegating the hard work to Python.)</p>

<h3>Use <code>command</code> to bypass aliases</h3>

<p>Don't worry about the absolute path of commands. Use <code>command</code> to bypass aliases:</p>

<pre><code>command rm -i "$@"
</code></pre>

<h3>Redundant file descriptors</h3>

<p>In <code>echo "Abort: ..." 1&gt;&amp;2</code>, the file descriptor <code>1</code> is redundant, you can safely omit it.</p>

<h3>Preserving the user's environment</h3>

<p>This is a minor nitpick.
When the alias is executed, it will do <code>set +f</code>,
regardless of whatever was the original setting in the shell,
which may not be the same.
This is really just a minor nitpick, for the record.
I wouldn't care about this tiny impractical detail either.</p>
    </div>