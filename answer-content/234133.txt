<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First let's take a quick look at what your code is doing. Your innermost line of code is:</p>

<pre><code>n[i]&lt;-sum(abs(a[i,]-b[j,])^2)
</code></pre>

<p>Due to how you've structured your for loops, this is run for times</p>

<ol>
<li>with i=1 and j=1, setting <code>n[1]</code> to the squared distance between row 1 with <code>a</code> and row 1 of <code>b</code>,</li>
<li>with i=1 and j=2, <strong>overwriting</strong> <code>n[1]</code> to the squared distance between row 1 of <code>a</code> and row 2 of <code>b</code>,</li>
<li>with i=2 and j=1, setting <code>n[2]</code> to the squared distance between row 2 of <code>a</code> and row 1 of <code>b</code>, and</li>
<li>with i=2 and j=2, <strong>overwriting</strong> <code>n[2]</code> to the squared distance between row 2 of <code>a</code> and row 2 of <code>b</code>.</li>
</ol>

<p>So we end up with <code>n = c(34, 20)</code>, the squared distances between each row of <code>a</code> and the last row of <code>b</code>.</p>

<p>It seems most likely to me that you are trying to compute the distances between each pair of points (since your <code>n</code> is structured as a vector). In this case, check out what we accomplish with the following, much simpler code:</p>

<pre><code>(a-b)^2
#      [,1] [,2]
# [1,]    4   16
# [2,]    4   16
</code></pre>

<p>The resulting matrix is the squared difference of each element in the two matrices. All we need to do is to sum up the rows:</p>

<pre><code>n &lt;- rowSums((a-b)^2)
n
# [1] 20 20
</code></pre>

<p>Or if we wanted the actual distance instead of the squared distance:</p>

<pre><code>n &lt;- sqrt(rowSums((a-b)^2))
n
# [1] 4.472136 4.472136
</code></pre>

<p>Note that we dramatically simplified the calculation; a nice side benefit is that this code is much faster than using a <code>for</code> loop in R.</p>
    </div>