<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>The type-hints are incomplete for <code>IMAP4.__init__</code> and <code>IMAP4_SSL.__init__</code>.</li>
<li>Try to use <code>typing.List</code> and <code>typing.Tuple</code> instead of <code>list</code> and <code>tuple</code>. The former allow you to subtype a little further, for eg. <code>List[str]</code>.</li>
<li>Use <code>super()</code> instead of explicit calls: <code>imaplib.IMAP4.__init__(self, host, port)</code>, that would help in case of multiple inheritance.</li>
<li><code>Union[AnyStr, None]</code> can be replaced with <code>Optional[AnyStr]</code>.</li>
<li>There's no need of this check: <code>if ' ' in criterion</code>. Simply split and call extend on <code>_search_criterion</code> instead of a loop and <code>list.append</code>: <code>_search_criterion.extend(criterion.split())</code>.</li>
<li>The <code>list()</code> call in <code>tuple(list(_search_criterion))</code> is redundant.</li>
<li><p>The <code>from</code> based imports should come after simple imports, plus make sure the import groups itself are sorted. Check <a href="https://google.github.io/styleguide/pyguide.html?showone=Imports_formatting#Imports_formatting" rel="nofollow noreferrer">Google's style guide</a> and <a href="https://www.python.org/dev/peps/pep-0008/#imports" rel="nofollow noreferrer">PEP 8</a>.</p>

<pre><code>import imaplib
import socket
import sys
from typing import Union, Tuple, AnyStr, List, Any  
</code></pre></li>
<li><p>I am not sure about <code>return</code> in <code>__init__</code> being PEP compliant. </p></li>
</ul>
    </div>