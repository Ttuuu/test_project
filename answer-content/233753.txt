<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>\|</code> is not a proper escape sequence.  To include the backslash in the string, it should be escaped using two backslashes, or you should use a “raw” string for the regular expression, so backslashes do not need to be escaped.</p>

<p><code>for x in range(0, len(context) - 1):</code> does not check the last character of the string, since <code>range(start, end)</code> already does not include <code>end</code>.</p>

<p><code>if (context[x].isspace())==True:</code> does not need the parentheses around <code>context[x].isspace()</code>, nor does it need the <code>== True</code>.</p>

<p>You can use <code>enumerate()</code> to loop over the contents of an iterable and get the index at the same time.  Also, a <code>for ... else</code> block can be used to detect if nothing was found.  With Python 3.6 or later, f-strings can be used to embed variables directly in strings.</p>

<pre><code>for idx, ch in enumerate(context):
    if ch.isspace():
        print(f"spaces found in the file at {idx}")
        break
else:
    print("no space found")
</code></pre>

<p>It is strange to find a quotation mark, and declare that a new line has been found.  Are you sure you’ve got your logic correct?</p>

<p>PEP8 Guidelines:</p>

<ul>
<li>spaces around all operators, like <code>=</code>, <code>==</code>, <code>-</code></li>
<li>use a space after each comma in argument lists</li>
<li>blank line after imports</li>
<li>longer, descriptive variable names (<code>x</code> is too short and not descriptive)</li>
</ul>
    </div>