<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd recommend you start over. I always start patterns that are mirrored in the x axis by figuring out how to do a quarter of the pattern.
I also use a view, so that if you want to change the icons you can.</p>

<p>And so I start with:</p>

<pre><code>def palindrome(n):
    view = ''.join(map(str, range(n + 1)))
    for size in reversed(range(n + 1)):
        half = view[size:]
        print(half)

palindrome(3)
</code></pre>



<pre><code>3
23
123
0123
</code></pre>

<p>After this we know to use <code>view[size]</code> as the center, and we repeat it <code>size</code> amount of times.</p>

<pre><code>def palindrome(n):
    view = ''.join(map(str, range(n + 1)))
    for size in reversed(range(n + 1)):
        half = view[size] * size + view[size:]
        print(half)

palindrome(3)
</code></pre>



<pre><code>3333
2223
1123
0123
</code></pre>

<p>From this you will then just have to mirror the output:</p>

<pre><code>def palindrome(n):
    view = ''.join(map(str, range(n + 1)))
    for sizes in (reversed(range(n + 1)), range(1, n + 1)):
        for size in sizes:
            half = view[size] * size + view[size:]
            yield half[:0:-1] + half
</code></pre>

<hr>

<p>Going forward, you could enter <code>view</code> into it and make it output whatever you want.</p>

<pre><code>import itertools

def palindrome(view):
    n = len(view)
    for size in itertools.chain(reversed(range(n)), range(1, n)):
        half = view[size] * size + view[size:]
        yield half[:0:-1] + half

print('\n'.join(palindrome('.|.|')))
</code></pre>



<pre><code>|||||||
|.....|
|.|||.|
|.|.|.|
|.|||.|
|.....|
|||||||
</code></pre>
    </div>