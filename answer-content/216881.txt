<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Use a <code>std::map</code> to store user name and password</h3>

<p>Use of</p>

<pre><code>std::vector&lt;std::string&gt; usernames;
std::vector&lt;std::string&gt; passwords;
</code></pre>

<p>for storing user names and corresponding passwords is not good. It's easy to add the same user name multiple times. I think it will be bette to use a map.</p>

<pre><code>// Key is user
// Value is password
std::map&lt;std::string, std::string&gt; users;
</code></pre>

<h3>Add a function to add a user</h3>

<p>Add a function to add a user. In the function, make sure the user name is not already used before adding it to the map.</p>

<pre><code>bool addUser(std::string const&amp; name, std::string const&amp; pass)
{
   if ( users.find(name) != user.end() )
   {
      std::cerr &lt;&lt; "User '" &lt;&lt; name &lt;&lt; "' already exists.\n";
      return false;
   }

   user[name] = pass;
   return true;
}
</code></pre>

<h3>Update <code>generateTestAccounts</code></h3>

<p>Update <code>generateTestAccounts</code> to use <code>addUser</code>.</p>

<pre><code>void Bank::generateTestAccounts() {
   for(int i = 0; i &lt; 5; i++) {
      addUser("user" + std::to_string(i), "pass" + std::to_string(i));
   }
}
</code></pre>

<h3>Update <code>login</code> to use the map</h3>

<pre><code>bool Bank::login(std::string const&amp; username, std::string const&amp; password) {
    if(lockedOut)
    {
       return false;
    }

    if ( users.find(username) == users.end() )
    {
       std::cerr &lt;&lt; "Unknown user: '" &lt;&lt; username &lt;&lt; "'\n";
       return false;
    }

    if ( users[username] == password )
    {
       user = username;
       return true;
    }

    attempts += 1;
    if(attempts == 3)
    {
       lockedOut = true;
    }

    return false;   
}
</code></pre>
    </div>