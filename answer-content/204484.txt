<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>These nested loops</p>

<pre><code>    for i in range(len(nums)):
        for j in range(i,len(nums)):
</code></pre>

<p>undoubtedly make the time complexity quadratic. This is the reason for TLE. There is no point to optimize this code; you need to rethink the approach. I don't want to spell out the linear algorithm, and deprive you the fun of finding it. Hint: think of the sliding window.</p>

<hr>

<p>A condition <code>j == i</code> inside the inner loop happens exactly once, and we perfectly know when. Lift it out:</p>

<pre><code>    for i in range(len(nums)):
        T[i] = nums[i]
        if T[i] == k:
            count +=1
        for j in range(i + 1, len(nums)):
            currSum = T[j-1] + nums[j]
            T[j] = currSum
            if currSum == k:
                count +=1
</code></pre>
    </div>