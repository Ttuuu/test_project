<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For readability and simplicity, why don't we use a <code>union</code>?</p>

<pre><code>union converter {
    char    c[4];
    int32_t i;
}
</code></pre>

<p>Now, to convert, it's as simple as this:</p>

<pre><code>union converter conv;
conv.i = yourInt32Value;
char *cString = conv.c;
</code></pre>

<p>or</p>

<pre><code>union converter conv;
conv.c = yourCStringValue;
int32_t i = conv.i;
</code></pre>

<hr>

<p>Remember to pay attention to your endianness, however.</p>

<pre><code>union converter {
    char    c[4];
    int32_t i;
};

int main(int argc, const char * argv[]) {
    union converter conv;
    conv.c[0] = 0xFF;
    conv.c[1] = 0xEE;
    conv.c[2] = 0xDD;
    conv.c[3] = 0xCC;

    std::cout &lt;&lt; std::hex &lt;&lt; conv.i &lt;&lt; std::endl;

    return 0;
}
</code></pre>

<p>The above snippet prints: <code>ccddeeff</code> (on my machine).</p>

<p>Consider taking a look at this <a href="https://stackoverflow.com/questions/4239993/determining-endianness-at-compile-time/4240014#4240014">StackOverflow answer</a> for dealing with compile-time and run-time endianness checking.</p>
    </div>