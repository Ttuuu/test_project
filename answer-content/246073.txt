<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Constants</h1>
<p>A couple of constants would make your code easier to adapt.  So, for example a constant for the number of cards would allow the potential to adapt the program to 2/4 card play.</p>
<h1>Variable naming</h1>
<p>To make the program easier to follow, I favour names that indicate what a variable represents, rather than where it comes from.  So, rather than <code>randomN</code>, consider <code>acePosition</code>.  Rather than <code>userInput</code>, consider <code>guessedPosition</code>.</p>
<h1>Duplicated logic</h1>
<p>When you're doing things that are identical / very similar it's a good indication that there's scope to extract into a function / class.  There are two main duplications that you've got, when printing out each of the winning/losing statements with the card positions.  These also share printing the end card positions.  Consider extracting a method that can output the card positions, with the ace in a given position.</p>
<h1>If/Else</h1>
<p>When you've got two if conditions that are exclusive, use if/else, rather than <code>if(userInput == randomN)</code> and <code>if(userInput != randomN)</code></p>
<h1>Putting it together</h1>
<p>You might end up with something more like this:</p>
<pre><code>public class ThreeCardMonte {
    final static int UNKNOWN_POSITION = 0;
    final static int NUMBER_OF_CARDS = 3;

    public static String formatCards(int acePosition) {
        var cardValue = IntStream.range(0, NUMBER_OF_CARDS)
                .mapToObj(i -&gt; i + 1 == acePosition ? "\tAA" : "\t##")
                .collect(Collectors.joining()) + "\n";
        var columnLabels = IntStream.range(0, NUMBER_OF_CARDS)
                .mapToObj(i-&gt;"\t"+(i+1))
                .collect(Collectors.joining()) + "\n";

        return cardValue + cardValue + columnLabels;
    }

    public static void main(String[] args) {
        Random random = new Random();
        Scanner input = new Scanner(System.in);
        int acePosition = random.nextInt(NUMBER_OF_CARDS) + 1;


        System.out.println("You slide up to Fast Eddie's card table and plop down your cash.\n" +
                "He glances at you out of the corner of his eye and starts shuffling.\n" +
                "He lays down three cards.\n");
        System.out.println("Which one is the ace?\n" + formatCards(UNKNOWN_POSITION));
        System.out.print("&gt; ");
        int guessedPosition = input.nextInt();

        if (guessedPosition == acePosition) {
            System.out.println("\nYou nailed it! Fast Eddie reluctantly hands over your winnings, scowling.\n" +
                    formatCards(acePosition));
        } else {
            System.out.format("\nHa! Fast Eddie wins again! The ace was card number %d.\n" +
                    formatCards(acePosition), acePosition);
        }
    }
}
</code></pre>
    </div>