<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>using id = uint8_t;
using buffer = std::vector&lt;uint8_t&gt;;

static constexpr size_t header_length{sizeof(id)};
static constexpr size_t max_body_length{MAX_COMMAND_BODY_LENGTH};
</code></pre>
</blockquote>

<p>Misspelt <code>std::uint8_t</code> and <code>std::size_t</code> here - that's a lurking portability bug (you're getting away with this because your current compiler is exercising its option to declare global-namespace copies of standard identifiers, but will fail on compilers that don't do that).</p>

<p><code>command_base</code> is intended to be a base class, so its destructor should be <strong><code>virtual</code></strong>.</p>

<p>Given that <code>buffer</code> is a <code>std::vector</code> and <code>it</code> is <code>buffer.cbegin()</code>, we can replace <code>std::distance(it, buffer.cend())</code> with a simple <code>buffer.size()</code>.</p>
    </div>