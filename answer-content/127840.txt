<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>It may be much cleaner to put the <code>isdecimal()</code> check in a loop, rather than involving recursion (a function calling itself).  You can then put the call to <code>print()</code> after the call to <code>guardian()</code> at the very bottom.</li>
<li>As for <code>processor()</code>, it's already calculating the factorial, so don't have it convert output as well.  Just return the number and let another function handle the output.</li>
<li><p>The methods could have more specific names to make their intents clearer at a glance.  This could also eliminate the need for the initial comments (unless they're specifically for having documentation, for which they should be right before the method name).</p>

<p>For instance, <code>guardian()</code> can be renamed to <code>acquire_number()</code> and <code>processor()</code> could be renamed to <code>calculate_factorial()</code>.</p></li>
<li>You could consider having more variables at the bottom to avoid cramming so many function calls inside each other.  This will help make it a bit more readable.</li>
<li><p>The final output could look a bit nicer:</p>

<pre><code>print('!' + str(number) + ' = ' + str(factorial))
</code></pre></li>
</ul>

<p>Solution with all changes:</p>

<pre><code>"""Finding the factorial of a given number. """
def calculate_factorial(n):
    if n == 0 or n == 1:
        return 1

    product = 1

    for i in range(1, n + 1):
        product *= i

    return product

"""Asking for a number and guarding the script from raising an error. """
def acquire_number():
    number = input('Number: ')

    while not number.isdecimal():
        print('Please enter a positive integer number! \n')
        number = input('Number: ')

    return number

number = acquire_number()
factorial = calculate_factorial(number)
print('!' + str(number) + ' = ' + str(factorial))
</code></pre>
    </div>