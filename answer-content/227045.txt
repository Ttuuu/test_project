<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I like the script. But I have maybe some suggestions for improvement.</p>

<p>This part:</p>

<blockquote>
<pre><code>RAM=$(free -m)
total=$(echo "$RAM"|awk '/^[mM]em\.?:/{print $2}')
available=$(echo "$RAM"|awk '/^[mM]em\.?:/{print $7}')
</code></pre>
</blockquote>

<p>Personalty I prefer to dig these values from <code>/proc/meminfo</code> to avoid running unnecessary <em>free</em> utility, but I saw several scripts based on it. And in case that is a small script for desktop... why not :)</p>

<p>However. The main advantage of the output from <code>free -m</code> is, that all information you need contains just one line. Try to hold the advantage. Multiple lines with awk usage isn't necessary here.</p>

<p>Try this:</p>

<pre><code>read -r _ total _ _ _ _ available &lt;&lt;&lt; $(free -m | grep -i mem)
</code></pre>

<p>Second thing is arithmetic: as @Zeta mentioned in previous answer, there isn't a reason for using <code>expr</code>. But instead:</p>

<blockquote>
<pre><code>WARNING=$(($total / 5))
CRITICAL=$(($total / 10))
</code></pre>
</blockquote>

<p>I would use the syntax below, due to <a href="https://codereview.stackexchange.com/a/226249/206203">issue which i had in bash GNU bash, 4.2.4(2)-release</a>. (Btw. ShellCheck complains about that as well.)</p>

<pre><code>warning=$(( total / 2 ))
critical=$(( total / 10 ))
</code></pre>

<p>The rest could be okay. But you are forcing bash to test <em>condition</em> about <code>warning</code> and <code>critical</code>, and when the script wasn't run by cron, you don't use it? Pity.</p>

<p>I would do that this way:</p>

<pre><code>#!/usr/bin/env bash

# gets available and total ram
read -r _ total _ _ _ _ available &lt;&lt;&lt; $(free -m | grep -i mem)

warning=$(( total / 5 ))
critical=$(( total / 10 ))

message="${available}/${total} MB free"

if (( $available &lt; $critical )); then
  icon="error"
  title="Memory critical!"
  message+=", critical at $critical MB"
elif (( $available &lt; $warning )); then
  icon=""
  title="Memory warning."
  message+=", warning at $warning MB"
fi

if [[ -t 0 ]]; then
  echo "$title $message"
else
  notify-send "--icon=$icon" "$title" "$message"
fi
</code></pre>

<p>Regards :)</p>
    </div>