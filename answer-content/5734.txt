<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with the points made by Loki Astari. I would like to add a few.</p>

<ol>
<li>Instead of the <code>liftbox</code> asking the <code>elevator</code> for the total number of levels, the lift box could be given the total number in it's constructor (that is, if the <code>liftbox</code> is to be created by the <code>elevator</code>).</li>
<li>It's not a major point, but the use of a <code>boolean</code> to specify the direction isn't the easiest to read. I would be tempted to replace it with an <code>enum</code> that would allow the options of up or down. This would be much easier to read and would remove the need for the comment to explain it.</li>
<li>With regards to naming of variables, I would strongly advise you use meaningful names, and try to avoid abbreviations where possible. If someone was reading over this code and it was in a larger scale program, reading a reference to <code>ele</code> might be misinterpreted depending on the context of the rest of the code being read. <code>ele</code> probably isn't the best of examples, particularly for this question, but it's something that should be considered for future programs.</li>
<li>Lastly, similarly to point 3, I would recommend differentiating between your local and global variables. For example, in some coding standards, programmers prefix their global variables with an underscore (e.g. <code>_currLevel</code>). I write my global variables in PasCal case, prefixed with the 'm' character, to signify that they are member variables (e.g. mCurrLevel). It is good to try and adopt similar naming conventions, as it really helps in making code easier to read.</li>
</ol>
    </div>