<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well, this is what I did. Not sure if that's the best way to go.</p>

<pre><code>def getMaxUserLevelByUserId(userId: Muid)(
      implicit connection: Connection): Option[OrganizationMembership.Level.Value] = {
    val organizationMemberships = getAllByUserId(userId)

    if (organizationMemberships.nonEmpty) {

      val levelMap = Map(
          OrganizationMembership.Level.Guest -&gt; 0,
          OrganizationMembership.Level.Member -&gt; 1,
          OrganizationMembership.Level.Admin -&gt; 2
      )

      val maxLevel = organizationMemberships.foldLeft(OrganizationMembership.Level.Guest) {
        (level, organizationMembership) =&gt;
          if (levelMap(organizationMembership.level) &gt; levelMap(level)) {
            organizationMembership.level
          } else {
            level
          }
      }

      Some(maxLevel)

    } else {

      None

    }
  }
</code></pre>

<p>The idea behind the code above, is the fact that we are iterating through the collection only once, regardless of the collection size. 
The <code>levelMap</code> was created strictly for the reason of easier comparison.</p>

<p>The cool thing about <code>foldLeft</code> in this case is that we don't need to create mutable variables while iterating through the collection and it is actually very short and quite readable code.</p>
    </div>