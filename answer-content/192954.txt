<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Instead of creating you final slice during the loop, you could do two loops: one for creating the <code>map</code> and another to turn it into a slice:</p>

<pre><code>//
// Returns unique items in a slice
//
func Unique(slice []string) []string {
    // create a map with all the values as key
    uniqMap := make(map[string]struct{})
    for _, v := range slice {
        uniqMap[v] = struct{}{}
    }

    // turn the map keys into a slice
    uniqSlice := make([]string, 0, len(uniqMap))
    for v := range uniqMap {
        uniqSlice = append(uniqSlice, v)
    }
    return uniqSlice
}
</code></pre>

<p>If your are not interested into the value of the map, it is customary to store the empty <code>struct{}</code>.</p>

<p>NB: this implementation will not keep any ordering of the input slice</p>
    </div>