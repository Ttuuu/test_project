<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Code will look much better once OP can use own functions.</p>

<blockquote>
  <p>how can I improve my solution?</p>
</blockquote>

<p><strong>Meaningful names</strong></p>

<p>Why is the credit card number called <code>j</code>.  How about <code>cc_num</code>?</p>

<p>Many others names need like-wise improvements.</p>

<p><strong>Use <code>bool</code></strong></p>

<p>For flags, consider <code>bool</code>.</p>

<pre><code>#include &lt;stdbool.h&gt;

bool flag;
</code></pre>

<p><strong>Auto format</strong></p>

<p>Use a development environment that supports auto formatting.  Do not format manually - just not efficient.</p>

<pre><code>#include&lt;stdlib.h&gt;
#include&lt;cs50.h&gt;

int main() {
  long long x, j = 0;
  int len, i, len_flag, flag = 0, flag_val = 0, sp_len = 0, check_flag = 0; //basic integers related  to loop etc
  int res, sum, fin_sum = 0, h = 0, d2_sum = 0, d1_sum = 0, ff_num = 0; // variables  related to extracting numbers 
  int sum_len = 0, in_sum = 0, in_fsum = 0, len_sum = 0, m = 0; // extraing numbers from more than single  sum result 
  int sum_f = 0, sum_final = 0;

  do {
    x = get_long("enter a valid card number \n");
    j = x;
    len_flag = 0;
    len = 0;
    while (len_flag != 1) {
      x = x / 10;
      if (x == 0) {
        len_flag = 1;   //finding the lenght of the number 
      }
      len++;
    }
    if (len == 15 || len == 16 || len == 13) {
      flag = 1;
      sp_len = 1;
    } else {
      flag = 1;
    }

  } while (flag != 1);
  ...
</code></pre>

<p><strong>Define variables where needed</strong></p>

<p>Rather than a sea of objects up front, defined them where needed.</p>

<p>Example: Refactor <code>x</code>.  Other variables can like-wise get defined closer to their usage.</p>

<pre><code>  // long long x, j = 0;
  long long j = 0;
  ...

  do {
    // x = get_long("enter a valid card number \n");
    long long x = get_long("enter a valid card number \n");
    j = x;
    ...

    if (sum_len &gt; 1) {
      // x = 0;
      int x = 0;
</code></pre>

<p><strong>Spelling</strong></p>

<pre><code>//finding the lenght of the number
  finding the length of the number
</code></pre>

<p><strong>Clean-up</strong></p>

<p>For review purposes, no need for dead debug code.<br>
Eliminate <code>//printf("multi_res : %d \n",sum)</code>, etc.</p>

<p>Eliminate unused variables like <code>m</code>.</p>

<p><strong>Comment code</strong></p>

<p>Each chunk of code deserves to be a function, yet I understand that is prohibited for now.</p>

<p>I'd comment the chunks of code to help aide understanding.</p>

<pre><code>  // Read input CC number
  // Set j as the CC#, len_flag as the CC# length, flag to 1, ...
  do {
    long long x = get_long("enter a valid card number \n");
</code></pre>

<p><strong>Simplify</strong></p>

<p><code>flag</code> only used as 1.</p>

<pre><code>  do {
    ...
      flag = 1;
  } while (flag != 1);
</code></pre>

<p>Replaceable with </p>

<pre><code>  {
    ...
  }
</code></pre>

<p>Same for later <code>do {  ... } while (check_flag != 1);</code>.</p>

<p><strong>Documentation</strong></p>

<p>Within code I'd add an algorithm link:</p>

<pre><code>// https://en.wikipedia.org/wiki/Luhn_algorithm
</code></pre>

<p><strong>Why space before '\n' ?</strong></p>

<pre><code>// "enter a valid card number \n"
"enter a valid card number\n"
</code></pre>

<p><strong>Chunks of code seem verbose</strong></p>

<pre><code>len_flag = 0;
len = 0;
while (len_flag != 1) {
  x = x / 10;
  if (x == 0) {
    len_flag = 1;   //finding the lenght of the number 
  }
  len++;
}
</code></pre>

<p>versus</p>

<pre><code>// decimal digit length of x
len = 0;
do {
  len++;
} while (x /= 10);
</code></pre>
    </div>