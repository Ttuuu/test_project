<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>for page in reversed(range(latest_comic - pages + 1, latest_comic + 1)):
    print(f"Fetching page {page} out of {latest_comic}")
    try:
        url = get_images_from_page(f"{BASE_URL}{page}/")
        thread = threading.Thread(target=save_image, args=(url, ))
        thread.start()
    except (ValueError, AttributeError, requests.exceptions.MissingSchema):
        print(f"WARNING: Invalid comic image source url.")
        collect_garbage.append(f"{BASE_URL}{page}")
        continue
thread.join()
</code></pre>

<p>Here you create several threads that download the pages. There are at least two problems with this code:</p>

<ol>
<li>You create a number of threads, but only join() the last one you created. There is no guarantee that all threads have finished before the last one does. Maintain a list of your threads.</li>
<li>No rate limit. If you try to download 100 pages, it will try to do all 100 simultaneously. That is not a good idea. Only create a limited amount of threads at a time.</li>
</ol>
    </div>