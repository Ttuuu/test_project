<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd start with a few specific points for the code style.</p>

<ol>
<li>Consistent naming. You are mixing <code>snake_case</code> and <code>camelCase</code>. Check the section on <a href="https://www.python.org/dev/peps/pep-0008/#naming-conventions" rel="nofollow noreferrer">naming conventions</a>.</li>
<li>Whitespaces around <a href="https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements" rel="nofollow noreferrer">keyword arguments</a> is advised against.</li>
<li>Try to use <code>str.format()</code> or <code>str % ()</code> modes to insert variables into strings, preferring the <code>.format</code> over <code>%</code> style. If you do decide to switch to python 3.6+ (<a href="https://codereview.stackexchange.com/questions/200043/streaming-scheduled-tv-shows-according-to-a-csv-playlist#comment384995_200043">as commented</a>), you also have <a href="https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498" rel="nofollow noreferrer"><code>f""</code> (format-type strings)</a>.</li>
<li>Order your imports in <a href="https://www.python.org/dev/peps/pep-0008/#imports" rel="nofollow noreferrer">the following suggested order</a>:

<ul>
<li>Standard library imports.</li>
<li>Related third party imports.</li>
<li>Local application/library specific imports.</li>
</ul></li>
</ol>

<hr>

<p>Now, to some changes you can do for optimisations, maintainability and portability.</p>

<ol>
<li>Your entire <code>cron.py</code> is redundant. Since everything it does depends only on the <code>tvshow.py</code>, switch to only using that file. Place the code currently in <code>cron.py</code> inside the <code>if __name__ == "__main__"</code> block.</li>
<li><p>You're trying to import <code>config</code> twice.</p>

<pre><code>import config
import csv
import config
</code></pre></li>
<li>You can have a class <strong><code>TVSchedule</code>(r)</strong>, which reads the config file when initialising, and sets up the <code>file_name</code>, <code>time</code>, <code>app_path</code> beforehand.</li>
<li>The performance of <code>scanFileForTime</code> and <code>getFileContent</code> will get better if the latter <code>yield</code>s the rows :)</li>
<li><p>Make use of <a href="https://devdocs.io/python~2.7/library/array#array.array.extend" rel="nofollow noreferrer"><code>.extend</code> method</a>; so that the following:</p>

<pre><code>for item in config.appArguments:
    arguments.append(item)
</code></pre>

<p>becomes</p>

<pre><code>arguments.extend(config.appArguments)
</code></pre></li>
</ol>
    </div>