<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You don't need to count the number of occurrences of each character, you just need to know if a character is repeating or not, so you can use <code>Dictionary&lt;char, bool&gt;</code> instead of <code>Dictionary&lt;char, int&gt;</code>, but IMO using two <code>List&lt;char&gt;</code> gives more readable and clean code.</p>

<pre><code>public static char FindFirstNonRepeatingCharacter(string input)
{
    if (input == null) throw new ArgumentNullException();

    var repeatingChars = new List&lt;char&gt;();
    var candidates = new List&lt;char&gt;();

    foreach (var i in input)
    {
        var c = char.ToUpperInvariant(i);

        if (repeatingChars.Contains(c)) continue;

        if (candidates.Contains(c))
        {
            candidates.Remove(c);
            repeatingChars.Add(c);
        }
        else
        {       
            candidates.Add(c);
        }
    }

    if (candidates.Count == 0) throw new Exception("No non-repeating characters");

    return candidates[0];
}
</code></pre>
    </div>