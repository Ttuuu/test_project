<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are right about <code>using namespace</code>.  The purpose of a namespace is to allow types and functions to have the same name in two or more areas of code.  Think about the class <code>configuration</code>, its quite a common name for something in code so if you and I are both writing a module for an all singing all dancing app and we both have a <code>configuration</code> class we are screwed when we come to integrate it, if we are lucky it won't compile.  So this is why you have namespaces, <code>CodeGorilla::configuration</code> and <code>JessLim::configuration</code>, don't have a problem being integrated and the project succeeds and we become millionaires.
Then someone decided to stick a <code>using namespace Bob;</code> statement at the top of the code and everything turned ugly, because no one knows who's configuration was who's.</p>
<p>I think if you are going to use namespaces then there is almost never a reason to use a <code>using namespace</code> statement.  There are always exceptions to any rule, but std is never one of them :)</p>
<p>I am sorry to say this so bluntly but <strong>IN MY OPINION</strong> your code is ugly.  Its one monolithic function, it takes 8 scrolls to get to the bottom of it and sorry but my finger doesn't need that much exercise.</p>
<p>What can we do about it?
Firstly you have these large strings dotted through the code.  If you extracted each of those out into a constant that would make the code look better (assuming you named the constants nicely).  Also that bit of refactoring allows you to make this multilingual.</p>
<p>Functions should not be ~200 lines I normally stick to less than a screen full which is about 40 lines.  To be honest most of the functions I have written in the last few years and been 10 lines or less.  You have to balance the increased readability from having short functions with the decreased readability from having to jump between functions.  There is no one size fits all answer.</p>
<p>Lambda functions are great, but sometime they get to big and should be refactored into a separate function.  <code>bot.getEvents().onCallbackQuery()</code> and <code>bot.getEvents().onAnyMessage()</code> could both do with being separated out.</p>
<p>Enums are your friend because they document the code without you having to write a comment.  <code>flag==1</code> and <code>flag==2</code> are not very self explanatory, but <code>flag == eMainChat</code> and <code>flag == eFeedbackChat</code> are much more instantly recognisable.</p>
<p>Braces or { and } are really good at making code readable.  Everyone has there own preference and I'm old school.  You have written C++ and then formatted it as JavaScript, personally I go with an open and closing brace should almost always be on their own line, it just makes the code a little neater.  Also always use braces, even on a single line.  Again its just consistent and nice.  When the code always looks the same then you don't read the code you just see it, I'm sorry that it's a bit of an airy fairy statement, but I can't think of a better way to describe it.  You don't want to waste you time reading code you want to find the bug, fix it and move on.</p>
<p>You need to make sure all your variables are initialised.  Compilers do this in debug builds but not normally in release builds.  Classes are normally initialised in the constructor so <code>std::string Return_Quote;</code> is fine, but <code>int TopicIndex;</code> is not fine.</p>
<p>You also need to ensure that any memory you allocate is deallocated.<br>
InlineKeyboardButton::Ptr KeyboardButton(new InlineKeyboardButton); is one occurrence but there are more.</p>
<p>Try and be consistent with your variable and function naming convention.  Some variables are in lower case, some are capitalised, etc.  And never, ever get lazy and use a single letter as a variable (n I am looking at you), It just means you have to add an extra comment where you could just have said <code>topicIndex</code>.</p>
<p>Oh and like the others said if you put all the information in the question people are more likely to answer it.  I haven't followed your link, god knows what is there it could be a virus it could be wonderful code.  Like I said my finger doesn't need more exercise and that extra click could just push it over the edge :)</p>
    </div>