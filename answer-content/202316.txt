<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would reccomend using <code>string.IsNullOrWhitespace(..)</code>  instead of <code>string.IsNullOrEmpty(..)</code>, but this depends on how you call your method and what input is possible.
Also I prefer returning early, instead of having all my actual code in an if-block:</p>

<pre><code>public string GetSuburbName(string location)
{
    if (string.IsNullOrWhitespace(location))
    {
        return null; // or String.Empty
    }
    // your stuff
}
</code></pre>

<p>Regarding your <code>FindSuburbName</code>-Method: There are a LOT of redundant checks, that could be a lot more simplified. For example you check if <code>Count &gt; 0</code>, then take the <code>FirstOrDefault()</code>, where <code>First()</code> would be enough, because you know there is at leat one, then you check if that result is not <code>null</code>. How could it be <code>null</code>? </p>

<p>One line version (for readability it would probably be best to do this in more lines, but this is just to show what is possible):</p>

<pre><code>private string FindSuburbName(GeoCodeResponse result)
{
    return result?.results?.FirstOrDefault()?.AddressComponents.FirstOrDefault(comp =&gt; comp.Types.Contains("locality"))?.LongName;
}
</code></pre>

<p>If you want to return <code>string.Empty</code> instead of <code>null</code>, just do <code>?? string.Empty</code> at the end of that oneliner. </p>

<p>You could omit the constructor of you <code>Results</code>-class, if you do </p>

<pre><code>public List&lt;AddressComponent&gt; AddressComponents { get; set; } = new List&lt;AddressComponent&gt;();
</code></pre>

<p>instead.</p>
    </div>