<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is how I ended up doing it now:</p>

<pre><code>&lt;?php

namespace App\Registration\GroupUploads\Errors;

/**
 * Error that appear during parsing csv file
 * @var [type]
 */
abstract class Error
{
  const USEREXISTS  = 7;
  const MAILINVALID = 1;
  const SEALUSED    = 2;
  const MIXEDUP     = 3;
  const QUALMISSING = 20;

  public $id;
  protected $msg;

  /**
   * Get error message
   * @return [type] [description]
   */
  public function getMsg()
  {
    return $this-&gt;msg;
  }

  /**
   * Error if user existed before registration
   * @param  [type] $name [description]
   * @return [type]       [description]
   */
  public static function userAlreadyExists($name)
  {
    $error = new Error();
    $error-&gt;id   = static::USEREXISTS;
    $error-&gt;msg  = "User " . $name .  " already exists";
    return $error;
  }

  /**
   * Mail is not valid
   * @param  [type] $mail [description]
   * @return [type]       [description]
   */
  public static function mailInvalid($mail)
  {
    $error = new Error();
    $error-&gt;id   = static::MAILINVALID;
    $error-&gt;msg  = "The mail " . $mail .  " is not valid";
    return $error;
  }

  //..
}
</code></pre>

<p>This way the <code>getMsg</code> method is short. Also adding a new error only requires to add one method instead of two (and no modification of the <code>getMsg</code> function).</p>

<p>To identify an error I call <code>if($error-&gt;id == Error::USEREXISTS){...}</code>.</p>

<p>Having the id was quite important, because I wanted to store the errors in DB.</p>
    </div>