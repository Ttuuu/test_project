<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is nothing wrong with your code when changing the data size to a larger number, except that the <code>draw()</code> method doesn't adjust the width of the columns by the ratio between the canvas size and the number of columns to be drawn.</p>
<p>You'll have to do some math like:</p>
<pre><code>  let offset = Math.round(canvaswidth / len);
  let rectWidth = Math.round(offset * 0.9);
</code></pre>
<p>The rounding is because you want integer values (pixels).</p>
<hr>
<blockquote>
<pre><code>ctx.fillStyle = "#000000"
ctx.fillRect(15 * i, 500 - arr[i], 10, arr[i])
if (seen[i]) {
  ctx.fillStyle = "#00ff00"
  ctx.fillRect(15 * i, 500 - arr[i], 10, arr[i])
}
</code></pre>
</blockquote>
<p>This seems inefficient as you draw more and more columns twice through the sorting. A better solution would be something like:</p>
<pre><code>ctx.fillStyle = seen[i] ? "#00ff00" : "#000000";
ctx.fillRect(offset * i, 500 - arr[i], rectWidth, arr[i]);
</code></pre>
<hr>
<blockquote>
<pre><code>for (let i = s; i &lt;= e; i++) {
    ctx.fillStyle = "#ffffff"
    ctx.fillRect(15 * i, 500 - arr[i], 10, arr[i])
    ctx.fillStyle = "#0000ff"
    ctx.fillRect(15 * i, 500, 10, arr[i])
    seen[i] = 1
}
</code></pre>
</blockquote>
<p>You shouldn't "undraw" a column by drawing a white column over it. Instead you could use <code>clearRect</code> with the same dimensions.</p>
<hr>
<blockquote>
<p><code>let m = parseInt((s + e) / 2)</code></p>
</blockquote>
<p>You can integer divide by two by right shifting by one:</p>
<pre><code>(s + e) &gt;&gt; 1
</code></pre>
<hr>
<p>You should really be careful to end each statement with a ';' (<a href="https://en.wikipedia.org/wiki/JavaScript_syntax#Whitespace_and_semicolons" rel="nofollow noreferrer">see here</a>)</p>
<hr>
<blockquote>
<pre><code>await merge(s, e)
// await console.log(`merged ${s} to ${e} now draw...`)
await draw(s, e)
</code></pre>
</blockquote>
<p>You call these with <code>await</code> but they are not defined as <code>async</code>?</p>
<hr>
<p>Your algorithm seems to works like a merge sort - as I recall it. I think I would encapsulate the parts into a class instead of having the functions in the global scope.</p>
<hr>
<p>Besides that, I find you graphics very illustrative.</p>
    </div>