<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>[1] By Java convention curly brackets belong in the same line as the preceding statement/expression.</p>

<p>Instead of this:</p>

<pre><code>if
()
{}
else
{}

for
()
{}
</code></pre>

<p>do this:</p>

<pre><code>if () {
    ...
} else {
    ...
}

for () {
    ...
}
</code></pre>

<p>I suggest you read the Google Java style guide for more tips: <a href="https://google.github.io/styleguide/javaguide.html" rel="nofollow noreferrer">https://google.github.io/styleguide/javaguide.html</a></p>

<p>[2] You don't have to introduce an intermediate variable for holding chars, you can directly assign the result of charAt() method to an int variable: <code>intChar1 = (int) str1.charAt(i);</code></p>

<p>[3] You don't have to do all those substring operations to make the strings the same length. Rewrite the main for loop to do as many iterations as there are characters in the shorter string. Written more succinctly: <code>min(length(A), length(B)</code> iterations</p>

<p>[4]Â To lexicographically compare two strings, you have to find the first different character in both strings and handle the remaining edge cases after the main for loop. Some pseudocode:</p>

<pre><code>for i = 0; i &lt; (min(length(A), length(B)); i++
    if A[i] != B[i]
        if A[i] &lt; B[i] return -1
        else return 1

// If you didn't return from the method at this point, there are only three options left
String A is shorter than string B - return -1
String B is shorter than string A - return 1
String A and string B are equal - return 0
</code></pre>
    </div>