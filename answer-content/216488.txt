<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>What if you want to add the functionality for up to 3 players?</p>

<p>You'd have to create a 'player3AnimationStage, player3SpriteSheet etc. It's also inside the 'gameState', which arguably makes sense, but still could be separated into it's own class.</p>

<p>For example:</p>

<pre><code>class Player
{
    constructor(spriteSheet, animationStage)
    {
        this.SpriteSheet = spriteSheet;
        this.AnimationStage = animationStage;
    }
}

const gameState = {
    player1: new Player(...);
    player2: new Player(...);
</code></pre>

<p>Or better yet, have an array of Players. Try to code your game so that it does not matter how many players there are. (E.g iterate through the list of players).</p>

<p>Your colours could be made into an ENUM, or a class with score, colorName, colorCode.</p>

<p>I'd suggest declaring some variables at the top, to make maintenance easier.
Such as key div elements (hiScoreTable). (Or even just the ids of the elements).
Images.</p>

<p>Try to avoid 'maigc numbers' by using named variables. For example, what is '17' here?:</p>

<pre><code>for (let i = 0; i &lt; 17; i++) 
</code></pre>

<p>Avoiding 'magicNumbers' also decreases code duplication and makes maintenance easier. For example, to increase player speed currently we'd have to change it in at least 2 places. </p>
    </div>