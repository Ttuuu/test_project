<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First let me say "Good work!" on revising the code to use functions. This is important in C (and most other languages, too) because it makes smaller units of code which are easier to read and reason about. </p>

<p>As you have discovered, making more function calls has the potential to make the program slower if the compiler is not doing significant optimizations. Modern optimizing compilers can automatically inline functions when the optimizations are turned on, but you can also suggest to the compiler that it can inline the functions. </p>

<p>If you change the function prototype from, eg. </p>

<pre><code>void find_matching_bracket(unsigned char** tape_ptr,unsigned char** code_ptr){
</code></pre>

<p>to</p>

<pre><code>static inline
void find_matching_bracket(unsigned char** tape_ptr,unsigned char** code_ptr){
</code></pre>

<p>that should help with the speed. Especially this function which is in the "inner loop" should have a significant benefit from being inlined.</p>

<p><code>static</code> isn't strictly necessary here, but it often goes well with <code>inline</code>. </p>

<p>Another option is to turn up the compiler optimization level. With gcc or clang, you can add <code>-O2</code> or <code>-O3</code> and it should do the inlining for you.</p>

<p>Btw, your <code>find_matching_bracket</code> function looks better than the one I wrote for my interpreter. It's shorter and simpler.</p>

<p>(out of time. more to add later)</p>
    </div>