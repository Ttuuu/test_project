<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>r.Post("/", func(w http.ResponseWriter, r *http.Request) {
    handlePost(w, r)
})
</code></pre>

<p>can be simplified to</p>

<pre><code>r.Post("/", handlePost)
</code></pre>

<p>since both functions have same signature.</p>

<hr>

<pre><code>fmt.Fprintf(w, "dummy response will go here")
</code></pre>

<p>No need to use <code>printf</code> family functions where you don't need formatting. You can write directly with</p>

<pre><code>w.Write([]byte("dummy response will go here"))
</code></pre>

<p>or with</p>

<pre><code>io.WriteString(w, "dummy response will go here")
</code></pre>

<hr>

<pre><code>responsebody, _ := ioutil.ReadAll(resp.Body)
fmt.Println("backend response Body:", string(responsebody))
</code></pre>

<p>This one reads the whole response into memory for no reason. Use <code>io.Copy</code> to write it more efficiently:</p>

<pre><code>fmt.Print("backend response Body: ")
_, err := io.Copy(os.Stdout, resp.Body)
</code></pre>

<hr>

<blockquote>
  <p>I'm not worried about error handling yet.</p>
</blockquote>

<p>Then everything else is totally fine.</p>
    </div>