<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Firstly, you should make N constant by putting final modifier in front of it in the prototype. </p>

<p>Secondly, Java implements strings using a character array, there is no performance gain in converting the string to an array (<code>binaryString.charAt(i)</code> takes the same amount of time as <code>characters[i]</code>). Also, using the class Character with .equals is actually hurting performance, as creating a class and using <code>.equals</code> takes longer than using the char type and == operator. So, you can slightly increase the space and time complexity of your program. But since it is so basic, you wouldn't notice it with an integer, you'd probably not notice the difference with a BigInteger.</p>

<p>Lastly, one small improvement you can make in the logic of your method is checking how many digits are left in your string. For example, if you have the string 100001001, by the time you get to the second 1, there is no possible way the binary gap could be larger than what you have already found, since there are only 3 digits left, but you found a gap of size 4, in best case the next one could only be 2, no need to continue checking, so just return.</p>
    </div>