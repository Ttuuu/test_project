<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You're doing a lot with <code>.Selection</code>. By default, that is going to be slow. Doing things behind the scenes is always faster. Either way, working with <code>selection</code> isn't the best way to go. Either pass the document to the sub or prompt the user. Is the <a href="https://msdn.microsoft.com/en-us/vba/word-vba/articles/selection-object-word?f=255&amp;MSPPError=-2147217396" rel="nofollow noreferrer">selection</a> a document, text, body, header, title, section? Be explicit.</p>

<p>The way you use <code>.Find</code> makes me thing you're referring to a range, which can be any of those things. Let's take a look at the basic skeleton of your sub -</p>

<blockquote>
<pre><code>    With Selection
    .Find.ClearFormatting
    .Find.Replacement.ClearFormatting
    .Find
    .Find.Execute
    .Find.ClearFormatting
    .Find.Replacement.ClearFormatting
    .Find
    .Find.Execute
    .Find.ClearFormatting
    .Find.Replacement.ClearFormatting
    .Find
    .Find.Execute
    .Find.ClearFormatting
    .Find.Replacement.ClearFormatting
    .Find
    .Find.Execute
    .Find.ClearFormatting
    .Find.Replacement.ClearFormatting
    .Find
    .Find.Execute
    .Find.ClearFormatting
    .Find.Replacement.ClearFormatting
    .Find
    .Find.Execute
    .Find.ClearFormatting
    .Find.Replacement.ClearFormatting
    .Find
    .Find.Execute
End With
</code></pre>
</blockquote>

<p>Yikes. You're doing the same thing <strong><em>7</em></strong> times. At worst that should be refactored. Something like this -</p>

<pre><code>Private Sub AlterRange(ByVal target As Range, ByVal findString As String, ByVal replaceString As String)
    With target
        .Find.ClearFormatting
        .Find.Replacement.ClearFormatting
        .Find
            .Text findString
            .Replacement replaceString
        .Find.Execute Replace:=wdReplaceAll
    End With
End Sub
</code></pre>

<p>Now <em>something</em> like this would work</p>

<pre><code>Dim target As Range
Set target = Selection
Dim findStrings(1 To 7) As String
findStrings(1) = "^p^p"
findStrings(2) = "^p"
findStrings(3) = "wvw"
findStrings(4) = "$GPGGA" &amp; "(*)" &amp; "$GPRMC"
'...
Dim replacestrings(1 To 7) As String
replacestrings(1) = "wvw"
replacestrings(2) = ","
'...

Dim i As Long
For i = 1 To 7
    AlterRange target, findStrings(i), replacestrings(i)
Next
</code></pre>

<p>All of this is untested, but you get the idea.</p>

<hr>

<p>What you <em>could</em> do to speed it up is to create a variant (or whatever) to store the entire selection in and then do your finding and replacing in the variant, then place the variant back out to the sheet overwriting the selection.</p>

<p>I don't know how all this would interact with your formatting, but it doesn't seem like you're <em>keeping</em> any formatting so it shouldn't be a problem.</p>
    </div>