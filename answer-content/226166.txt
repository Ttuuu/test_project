<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Given that the <code>PdfWriter</code> holds a reference to an <code>IDisposable</code> resource (the <code>Stream</code>), it's good practice to implement <code>IDisposable</code>. Note that Stream is a special case of rule <a href="https://docs.microsoft.com/en-us/visualstudio/code-quality/ca2213-disposable-fields-should-be-disposed?view=vs-2019" rel="noreferrer">CA2213</a>.</p>

<p>I've also noticed that all of your examples call both <code>Initialise</code> and <code>Finish</code>. If that's the case, I'd argue for a factory method to create the writer and call <code>Finish</code> within the <code>Dispose</code> method of <code>PdfWriter</code>. That means your usage could become:</p>

<pre><code>using (IO.FileStream fs = IO.File.Create("Example1.pdf"))
using (PdfWriter writer = PdfWriter.Create(fs, new PdfWriterOptions 
                                               { 
                                                   Fonts = Pdf.StandardFontFamily.Times() 
                                               }))
{
    // The actual writing.
}
</code></pre>

<p>That saves the consumer from having to remember to call two methods every time they use the class.</p>
    </div>