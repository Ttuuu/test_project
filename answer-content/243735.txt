<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From time to time one sees this wish. I never needed it, but the way is to have one global repository in the base class:</p>
<pre><code>public abstract class Animal {
    private static final Map&lt;Class&lt;? extends Animal&gt;, List&lt;Animal&gt;&gt; all =
            new HashMap&lt;&gt;();

    protected Animal() {
        List&lt;Animal&gt; species = all.computeIfAbsent(getClass(),
                type -&gt; new ArrayList&lt;&gt;());
        species.add(this);
    }

    public static Stream&lt;T extends Animal&gt; all(Class&lt;T&gt; type) {
        return all.computeIfAbsent(getClass(), 
               type -&gt; new ArrayList&lt;&gt;()).stream().map(type::cast);
    }
</code></pre>
<p>Instead of storing the <code>Animal</code> child instance one could use a <code>WeakReference&lt;Animal&gt;</code> to let animals disappear when not used.</p>
<p>A call to <code>Animal.all(Dog.class)</code> needs no Animal instance.</p>
    </div>