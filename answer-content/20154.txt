<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think BFS is your algorithm, but I do have some cleanups for you. The reason A* won't work is because your estimation of how much farther you have to go (you could do a simple grid distance from where you are to the end point, also considering the jump value where you are sitting) could be wrong based on future jumps, and in your case, estimations are not acceptable. (Note: in some cases, for example if this was an AI in a game, estimation can be acceptable if performance is greatly improved)</p>

<ol>
<li><p>Use a queue instead of a vector for openList. Every erase on the first item in a vector means you have to copy all the items to new memory positions!!! BFS algorithm and  std::queue are a married pair because your push and pop are constant time, and you won't accidentally push or pop at the wrong end.</p></li>
<li><p>You are keeping a list of visited points, but you aren't using this list, and you aren't using it because you don't need it. You can't go backwards in your path toward the end, so you don't have to keep track of where you have been.</p></li>
</ol>
    </div>