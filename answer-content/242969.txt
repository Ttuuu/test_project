<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Combined imports</h2>

<pre><code>from selenium.common.exceptions import ElementNotInteractableException
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import ElementClickInterceptedException
from selenium.common.exceptions import TimeoutException
</code></pre>

<p>should be</p>

<pre><code>from selenium.common.exceptions import (
    ElementNotInteractableException,
    NoSuchElementException,
    ElementClickInterceptedException,
    TimeoutException,
)
</code></pre>

<h2>Input-in-static</h2>

<p>This:</p>

<pre><code>job_title = input('Enter your desired position: ').replace(' ', '+')
</code></pre>

<p>creeps me out. I don't know a lot about <code>scrapy</code>, but see if you can initialize <code>job_title</code> in the constructor instead of as a static. What if this class were to be imported once and used twice, each with a different job title?</p>

<h2>Hard-coded paths</h2>

<p>This:</p>

<pre><code>'C:\Users\leagu\chromedriver.exe'
</code></pre>

<p>should be pulled out into a constant, or better yet, an environmental parameter, command-line argument or configuration file parameter. Surely a user of yours who downloads your script will not be named <code>leagu</code>.</p>

<h2>XPath</h2>

<pre><code>/html/body/main/div[2]/div/div[1]/div[3]/div/div/a
</code></pre>

<p>is extremely fragile and opaque. I loaded the <code>remote.co</code> search results, and a better selector - mind you, this is CSS and not XPath - is</p>

<pre><code>div.card &gt; div.card-body &gt; div.card &gt; div.card-body &gt; a.card
</code></pre>

<p>You should not start from the root element, and you should attempt to use classes and IDs where possible. This markup is kind of a mess and so meaningful paths are hard to form.</p>

<h2>Swallowing exceptions</h2>

<p>You do this:</p>

<pre><code>    except TimeoutException:
        self.log("Timeout - Couldn't load the page!")
</code></pre>

<p>but then continue with the rest of the method? Would you not want to re-throw, or at least return?</p>

<h2>Non-guaranteed close</h2>

<p>This:</p>

<pre><code>self.driver.close()
</code></pre>

<p>will be skipped if there is any uncaught exception. First of all, I don't think the driver should be closed in <code>parse</code>, or else the class effectively can only support one invocation of <code>parse</code>. Implement <code>__enter__</code> and <code>__exit__</code>, and call <code>driver.close()</code> in <code>__exit__</code>. Have the instantiator of <code>ScrapeRemote</code> use it in a with-block.</p>
    </div>