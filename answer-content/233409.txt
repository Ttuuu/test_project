<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Don't mutate input and return.</p>

<p>If I need to pass <code>columns</code> unedited to two different functions, than your function will seem like it's not mutating <code>columns</code> and I wouldn't have to perform a copy of the data. But this isn't the case.</p></li>
<li><p>You may want to potentially error if there are no values before the first "Unnamed" value.</p></li>
<li>You may want to make <code>pattern</code> an argument, to allow reusability of the function. And instead use change it to a callback to allow even more reusability.</li>
</ul>

<p>Overall your function's pretty good. I don't think it can be made much shorter.</p>

<pre><code>def value_or_previous(iterator, undefined, default=None):
    prev_item = default
    for item in iterator:
        if not undefined(item):
            prev_item = item
        yield prev_item


def rename_unnamed(columns):
    return list(value_or_previous(columns, re.compile(r'^Unnamed:\s\d+$').match))
</code></pre>
    </div>