<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I see code I can't quite believe true.<br>
<code>rbtNode Uncle(rbtNode n)</code> has been <a href="https://codereview.stackexchange.com/a/30521/93149">competently condensed by Jesse C. Slicer</a>, but</p>

<pre><code>private static rbtNode Sibling(rbtNode node) {
    return node.Parent == null ? null
        : (node == node.Parent.Left ? node.Parent.Left : node.Parent.Right);
}
</code></pre>

<p>seems to just return <code>node</code> instead of its sibling just as the original.<br>
In <code>Insert(Node value)</code>, an <code>rbtNode</code> is instantiated unconditionally, to immediately fall into oblivion when "the F value" is found.<br>
Nothing (much) wrong with that, but if <code>n</code> had not been defined beforehand,</p>

<pre><code>if (value.F &lt; current.F) {
    if (n.left == null) {
        current.left = n;
        break;
    }
    current = current.left;
} else if (value.F &gt; current.F) {
    if (current.right == null) {
        current.right = n;
        break;
    }
    current = current.right;
}
</code></pre>

<p>would have been more eye-catching.  </p>
    </div>