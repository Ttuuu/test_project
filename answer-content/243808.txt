<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I know this is an old question but this answer could be helpful to others.</p>
<p>Since the letters and symbols we're dealing with are relatively close to each other in terms of character value, we can use that to our advantage by doing some simple math.</p>
<p><em>NOTE: This code is largely unchecked and rather verbose - optimize as desired</em></p>
<pre><code>class Student {
    private double points = 0.0;
    private int credits = 0;
    private final String name = "";

    /**
     * This returns the student's GPA as a double
     *
     * @return The calculated GPA
     */
    public double getGPA() {
        return ((points / credits) * 100) / 100;
    }

    /**
     * This adds a grade to the student's GPA
     *
     * @param gradeString Grade the student received
     * @param credits     Total credit hours of the course
     */
    public void addGrade(String gradeString, int credits) {
        if (gradeString.equals("F")) {
            gradeString = "E";
        }

        // As we get closer to the letter 'E', the lower the total points
        // The ASCII value of 'A" is 65, and the value for 'E' is 69
        // 69 / 65 is 1, with a remainder of 4
        // The remainder is what we're after, so use modulo
        //
        // For example, the program passes in the grade "C-" and the first
        // character of that the string gradeString is C and we can get this
        // value by using the charAt() method. Since Java is a 0-based index
        // language we pass 0 into the charAt method to get the first character
        // of the string. The decimal value of that character is 67. We know that
        // the decimal value of the character 'E' is 69, so we can use the formula
        // 69 % 67 which will give us 2.

        double gradeVal = 'E' % gradeString.charAt(0);

        if (gradeString.length() == 2) {
            int c = gradeString.charAt(1);

            // A little bit of error checking is required using these methods
            if (c != 'X' &amp;&amp;
                    (gradeVal != 'D' &amp;&amp; c != '-') &amp;&amp;
                    (gradeVal != 'A' &amp;&amp; c != '+')) {
                double point = -((c - (double) ',') / 3);
                gradeVal += point;
            }
        }

        // Add the number of credits to our running total
        this.credits += credits;

        // Calculate this course's grade
        double courseGrade = Math.round((gradeVal * credits) * 100) / 100.0;

        // Add the course grade to our running total
        points += courseGrade;
    }

    /**
     * Get the student's name
     *
     * @return The student's name
     */
    public String getName() {
        return name;
    }

    /**
     * The Student class
     *
     * @param name The student's name
     */
    public Student(String name) {
        this.name = name;
    }
}

public class Program {
    public static void main(String[] args) {
        // Create a new Student object named student1
        // student1's name is set with Robert
        Student student1 = new Student("Robert");

        // Add various grades to student's history
        student1.addGrade("A", 4); // CPS-171
        student1.addGrade("A", 3); // ENG-107
        student1.addGrade("A", 4); // CPS-161
        student1.addGrade("C-", 4); // Some math class I'll have to take

        // Store the student's GPA into student1Gpa
        double student1Gpa = student1.getGPA();
        System.out.printf("Student %s has a GPA of %.2f\n", student1.getName(), student1Gpa);
    }
}
</code></pre>
    </div>