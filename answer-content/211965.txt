<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A couple of things. You can avoid the #defines with a using directive . You don't need to give the caller any knowledge of the Log class. It does not need to be in the header at all. What happens if I call start log more than once? There's no protection against that. Also, I know it probably works as is, but the static cast in add log scares me because you never defined an integer value for the enum class. It seems to be begging for a segfault.</p>

<p>Beyond that, how to improve the interface depends in what you want.   Currently the code is not thread safe.  You could use lock guards in your methods to accomplish this. </p>

<p>Do you want to have one central log? Or do you want each instantiation of the log to be isolated?</p>

<p>If you want one central, consider the singleton pattern and give out shared or weak pointers via a static factory, and make the ctor private. Then instead of having the function interface, you can keep a shared pointer to the logging object and give it references to it, people can then call the functions on the class. </p>

<p>If you want each installation of the log to be separate, just have the user construct a log class.  </p>
    </div>