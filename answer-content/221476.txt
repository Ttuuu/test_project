<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's a problem with your approach: it always visits all nodes to build value lists, even when the trees aren't similar at all. By obtaining leaf-node values lazily, you'll prevent a lot of unnecessary traversal work if the trees are different.</p>

<p>This can be achieved by changing <code>DFS</code> to a generator method (using <code>yield</code>), and comparing the results with <code>SequenceEqual</code>, as janos already pointed out. You'll want to use an explicit stack instead of recursion though, to avoid incurring too much overhead.</p>

<p>However, for trees that are leaf-similar, the added overhead ends up making things slower. The fastest approach is probably a recursive method that does a depth-first traversal of both trees at the same time, bailing out as soon as it finds a leaf-node difference.</p>
    </div>