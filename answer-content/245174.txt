<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If I had  to make this OOP, I'd begin by hedging concerns :</p>
<ul>
<li>a class for user data handling (retrieving the POST and using it)</li>
<li>a service (that you'd dependency inject) to handle the configuration of the Google Service</li>
<li>a <code>GoogleUser</code> class for encapsulating the result of the service and abstracting all those <code>foreach</code></li>
</ul>
<p>Then, orchestrate those in some kind of controller (I guess you have already since you use a <code>$this-&gt;sendJson</code> method)</p>
<p>I like custom Exception cascade but that's just me :</p>
<pre><code>try{
  //everything working well
}catch(GoogleLoginException $e){
}catch(RequiredEmailException $e){
}catch(RequiredNameException $e){
}
</code></pre>
<p>GoogleSDK is notoriously verbose and looks a lot like enterprise java and is always a pain to make elegant.</p>
<p>In the end you'd have something like :</p>
<pre><code>
class LoginController{
   private $google;

   public function __construct(GoogleService $google){
     $this-&gt;google = $google;
   }

   public function oauthCallbackAction($postRequest){
     $code = $postRequest-&gt;get("code");
     try{
         $authentifiedClient = $google-&gt;authentifiedClientWithCode($code);
         $googleUser = $authentifiedClient-&gt;getMe();
         return $this-&gt;json([
                              "user_name" =&gt; $googleUser-&gt;getUserName(),
                              "email" =&gt; $googleUser-&gt;getEmail(),
                            ], 200);
     }catch(GoogleAuthException $e){   //thrown by GoogleService
             return $this-&gt;json("blah", 500);
     }catch(RequiredEmailException $e){ //thrown by GoogleUser::getEmail
             return $this-&gt;json("gimme email !", 400);
     }catch(RequiredNameException $e){  //thrown by GoogleUser::getUserName
             return $this-&gt;json("gimme name !", 400);
     }

   }

}
</code></pre>
    </div>