<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think you could simplify your code a bit by considering the second list to be a dictionary mapping the key to list of values with the same key. This would avoid doing a linear search over the second list for each element of the first list, and also lends itself to less code:</p>

<pre><code>from collections import defaultdict

def match(al, bl, key):
    table = defaultdict(list)
    for b in bl:
        table[key(b)].append(b)
    return [(a, table[key(a)].pop(0)) for a in al]
</code></pre>

<p>The function will raise an <code>IndexError</code> exception in case the key does not reference a matching element in <code>bl</code>.</p>
    </div>