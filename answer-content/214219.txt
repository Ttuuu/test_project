<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Fact</strong>: To copy regular try-catch functionality, your implementation needs to check if a handler has been registered for exception's superclass and prevent initialization where superclass hides subclass try-block.</p>

<p><strong>Fact</strong>: If you support multiple finally blocks, you should support multiple catch blocks for an exception type. Just for symmetry. This would conflict with previous point, so a design choice has to be made.</p>

<p><strong>Opinion</strong>: The mental load from having to remember how yet another try-catch abstraction library works counteracts all benefit we might get from reduced "boilerplate".</p>

<p><strong>Disclaimer</strong>: Facts expressed above may or may not be based on actual facts.</p>

<p>Mental exercises like this are an important part of learning. But we need to evaluate the pros and the cons when we're done and not be afraid to scrap the bad ideas, like Lombok or Vavr should have been.</p>
    </div>