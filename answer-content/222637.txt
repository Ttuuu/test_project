<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Group cat data together in object, have a single source.</strong></p>

<p>You have two arrays and an element, all joined together by a common index. I would move things around so all the details are coming from a single source. This means if you want to add a cat, you add it in one place. It also allows for an easy upgrade if you wanted to start storing this data somewhere that is not hard-coded.</p>

<p>I have created a new <code>cats</code> array. This contains all the cats and their data:</p>

<pre class="lang-js prettyprint-override"><code>const cats = [{
    name: "Tom",
    image: "tom.jpg",
    score: 0
}];
</code></pre>

<p>For now we will stick with hard-coded data, however this could just as easily be a response from an API. For example:</p>

<pre class="lang-js prettyprint-override"><code>fetch('https://example.com/cats.json')
  .then(function (response) {
    return response.json();
  })
  .then(function (cats) {
    //... do something with the cats
  });
</code></pre>

<p>The <code>cats</code> array stores all the details we need to populate our dropdown:</p>

<pre class="lang-js prettyprint-override"><code>const catSelect = document.getElementById("cat-select");

cats.forEach(function(cat, index) {
    const option = document.createElement("option");
    option.value = index;
    option.text = cat.name;
    catSelect.add(option);
});
</code></pre>

<hr>

<p><strong>Handling user interaction</strong></p>

<p>You have right idea with storing <code>document.getElementById("cat-select")</code> in a variable, however, you are redefining it on every user interaction (<code>ddl = document.getElementById("cat-select");</code>). Instead, lets define some constants. I have also added a new variable to keep track of the currently selected cat.</p>

<pre class="lang-js prettyprint-override"><code>const catImage = document.getElementById("cat-image");
const catScore = document.getElementById("cat-score");
const catSelect = document.getElementById("cat-select");

let selectedCat;
</code></pre>

<p>Now we can use these in our functions. I have modified your two functions and also added one new one:</p>

<pre class="lang-js prettyprint-override"><code>/*
This simple function is just to update the display of the score.
I thought it was nicer to put it in a function to avoid duplicating the code.
If you wanted to change it in the future, you would only have to change it in one place.
*/
function displayCatScore(score) {
    catScore.innerText = score == 0 ? "zero" : score;
}


/*
This simply updates the score of the currently selected cat and then displays it.
*/
function incrementSelectedCatScore() {
    displayCatScore(++selectedCat.score);
}


/*
This function updates `selectedCat` and displays that cat's score and image.
`cat` is the index of the cat that should be displayed.
*/
function displayCat(cat) {
    selectedCat = cats[cat];

    displayCatScore(selectedCat.score);

    catImage.src = imageBasePath + selectedCat.image;
    catImage.alt = selectedCat.name;
}
</code></pre>

<p>Now for event listeners - I have moved them from your HTML to the Javascript. It's easier when everything is kept together and in my opinion, it is just much cleaner.</p>

<pre class="lang-js prettyprint-override"><code>catImage.addEventListener("click", incrementSelectedCatScore);

catSelect.addEventListener("change", function() {
    displayCat(this.value); // this.value will be the index of the selected cat
});

displayCat(0); // Display the first cat
</code></pre>

<hr>

<p><strong>Full working example</strong>:</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function displayCatScore(score) {
  catScore.innerText = score == 0 ? "zero" : score;
}

function incrementSelectedCatScore() {
  displayCatScore(++selectedCat.score);
}

function displayCat(cat) {
  selectedCat = cats[cat];

  displayCatScore(selectedCat.score);

  catImage.src = imageBasePath + selectedCat.image;
  catImage.alt = selectedCat.name;
}

const imageBasePath = "https://raw.githubusercontent.com/smartcoder2/CatClickerApp/master/images/";

const cats = [{
    name: "Tom",
    image: "tom.jpg",
    score: 0
  },
  {
    name: "Jack",
    image: "jack.jpeg",
    score: 0
  },
  {
    name: "Zoe",
    image: "zoe.jpeg",
    score: 0
  },
  {
    name: "Simba",
    image: "simba.jpg",
    score: 0
  },
  {
    name: "George",
    image: "george.jpeg",
    score: 0
  }
];

const catImage = document.getElementById("cat-image");
const catScore = document.getElementById("cat-score");
const catSelect = document.getElementById("cat-select");

let selectedCat;

cats.forEach(function(cat, index) {
  const option = document.createElement("option");
  option.value = index;
  option.text = cat.name;
  catSelect.add(option);
});

catImage.addEventListener("click", incrementSelectedCatScore);

catSelect.addEventListener("change", function() {
  displayCat(this.value);
});

displayCat(0);</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>.outer-box {
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  grid-gap: 2vw;
  align-items: center;
}

.outer-box&gt;div,
img {
  max-width: 25vw;
  min-height: 10vh;
  max-height: 44vh;
  justify-self: center;
}

.outer-box&gt;div {
  text-align: center;
}

#show-click-value {
  font-size: 6vh;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;html&gt;

&lt;head&gt;
  &lt;link rel="stylesheet" href="styles\style.css" /&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;div class="outer-box"&gt;
    &lt;div class="item1"&gt;&lt;/div&gt;
    &lt;div class="item2"&gt;
      &lt;label class="cat-label" for="cat-select"&gt;Select a cat&lt;/label&gt;
      &lt;select id="cat-select" name="cats"&gt;&lt;/select&gt;
      &lt;br /&gt;
    &lt;/div&gt;
    &lt;div class="item3"&gt;&lt;/div&gt;
    &lt;div class="item4"&gt;&lt;/div&gt;
    &lt;img id="cat-image"&gt;
    &lt;div class="item6"&gt;&lt;/div&gt;
    &lt;div class="item7"&gt;&lt;/div&gt;
    &lt;div id="cat-score"&gt;&lt;/div&gt;
    &lt;div class="item9"&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;!-- srr-to-do-later: position the image and other elements properly --&gt;

&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>


<hr>

<p>If you have any questions or would like any further clarification, please let me know and I will be happy to help :)</p>
    </div>