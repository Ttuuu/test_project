<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Before we get into deep performance concerns, let's do a quality pass:</p>

<h2>Global code</h2>

<p>Lines like </p>

<pre><code>x=plt.imread("s2.png")    #the file name
#x=color.rgba2rgb(x)
y=x
n=int(input())     #"n" is the level of blurring(typical values=5,10,20,50)
le=y.shape[0]
bd=y.shape[1]
</code></pre>

<p>should be in a function and not in global scope.</p>

<h2>Mystery input</h2>

<p>Pass a prompt to <code>input</code>, such as <code>Please enter the level of blurring</code>.</p>

<h2>Extraneous parens</h2>

<p>This:</p>

<pre><code>y2=np.ones(shape=(le+(2*n),bd+(2*n)))
for i in range(0,le):
    for j in range(0,bd):
        y2[(i+n),(j+n)]=y[i,j]
return(y2)
</code></pre>

<p>can be</p>

<pre><code>y2 = np.ones(shape=(le + 2*n, bd + 2*n))
for i in range(le):
    for j in range(bd):
        y2[i + n, j + n] = y[i, j]
return y2
</code></pre>

<p>Also note the default value for the start of <code>range</code>.</p>

<h2>In-place division</h2>

<p>This:</p>

<pre><code>k=k/(np.sum(k))
return(k)
</code></pre>

<p>can be</p>

<pre><code>k /= np.sum(k)
return k
</code></pre>

<h2>Empty, not zero</h2>

<p>Your <code>blur</code> method should definitely be vectorized, which I'll get to later, but for now, since it's clear that you're overwriting every entry: use <code>empty</code> rather than <code>zeros</code>.</p>

<h2>Add another dimension</h2>

<p>This:</p>

<pre><code>r=blur(y[:,:,0],kernel(p),frame(y[:,:,0]))
g=blur(y[:,:,1],kernel(p),frame(y[:,:,1]))
b=blur(y[:,:,2],kernel(p),frame(y[:,:,2]))
</code></pre>

<p>should not be three separate calls. Your data should have a dimension (<code>y</code> already does) of length 3, and <code>y</code> should be passed in its entirety.</p>

<h2>Variable names</h2>

<p><code>le</code>, <code>bd</code> and <code>p</code> mean nothing to me, and in three months they might not mean anything to you, either. Write these out with longer, more meaningful names. I promise that it will not slow the program down.</p>
    </div>