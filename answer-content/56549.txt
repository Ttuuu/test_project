<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just a few quick minor notes:</p>

<ol>
<li><p>This comment:</p>

<blockquote>
<pre><code>// Check if ALL fields are in common
if (onlyA.isEmpty() &amp;&amp; onlyB.isEmpty()) {
</code></pre>
</blockquote>

<p>could be replaced with an explanatory local variable:</p>

<pre><code>boolean allFieldsAreInCommon = onlyA.isEmpty() &amp;&amp; onlyB.isEmpty();
if (allFieldsAreInCommon) {
</code></pre></li>
<li><p>The same is true for this one:</p>

<blockquote>
<pre><code>if (Collections.disjoint(a, b)) {
    return null; // Return if the groups have no fields in common
}
</code></pre>
</blockquote>

<p>Result:</p>

<pre><code>boolean noFieldsInCommon = Collections.disjoint(a, b);
if (noFieldsInCommon) {
    return null;
}
</code></pre></li>
<li><p>160-character long line width is a little bit long here:</p>

<blockquote>
<pre><code>// If this is called in a loop an infinite loop can occur if we don't do this because we're creating a NEW object all the time to hold them both.
// We should reuse one of the existing ones and go back to using == above.
</code></pre>
</blockquote>

<p>A few linebreak would avoid horizontal scrolling.</p></li>
<li><p>The following patterns is duplicated in the test method:</p>

<blockquote>
<pre><code>new FieldGroup&lt;String&gt;(Arrays.asList("a", "b", "c"))
</code></pre>
</blockquote>

<p>I would create a <code>createFieldGroup(String...)</code> method for that.</p></li>
<li><p>I would consider using <a href="https://code.google.com/p/guava-libraries/wiki/UsingAndAvoidingNullExplained" rel="noreferrer"><code>Optional</code> from Guava</a> instead of <code>null</code> return values.</p></li>
</ol>
    </div>