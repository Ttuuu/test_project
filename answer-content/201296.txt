<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Think about what possible inputs your parameters can represent, like the empty set and sets smaller than expected.</p>

<pre><code>    for (int i = 0; i &lt; vect.size() - 2; i++) {
</code></pre>

<p><code>vect.size()</code> returns an unsigned size type.  If <code>vect</code> is smaller than the value you are subtracting, then your comparison will be <code>i &lt; huge number</code>, leading to access violations.</p>

<pre><code>        if (isSequence(vect[i], vect[i + 1], vect[i + 2])) {
</code></pre>

<p>Start at <code>i = 2</code> and compare to size without the subtraction.  The conditional here should do the subtraction, which won't invoke the modulus behavior as your checked values are guaranteed to exist.</p>

<pre><code>        if (isSequence(vect[i-2], vect[i-1], vect[i])) {
        // Checks:           |          |         |
        //       [0,size-2) &lt;┘          |         |
        //                  [1,size-1) &lt;┘         |
        //                              [2,size) &lt;┘
</code></pre>
    </div>