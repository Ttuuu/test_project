<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is good code for a first post. I'm glad to waste time discussing PEP 8 violations, and seeing a sensible use of the collections module. Having chosen good data structures is a good place to start.</p>

<p>For 2d arrays in Python (unless I am doing numeric heavy lifting, when using numpy is the obvious way to go) I prefer using a dictionary to a list of lists. Something like a named tuple can be used as the key. This makes the board initialization look like:</p>

<pre><code>Pos = collections.namedtuple('position', ['x', 'y'])
...
def __create_board(self) -&gt; None:
    self.board = {(Pos(x, y)) for x in range(self.WIDTH) for y in range(self.HEIGHT)}
</code></pre>

<p>This is a fairly big change that will ripple through the code but then you won't have to worry about [y][x] indexing or making temporary (x,y) variables.</p>

<p>Onto some more specific things. First, I think I would define a str method here, rather than having a print method. It adds a hidden dependency to sys.stdout in your code, and makes it harder to unit test. </p>

<pre><code>def print_board(self) -&gt; None:
    print('\n')
    for row in self.board:
        print(row)
</code></pre>

<p>Here I would lose the recursion and use a while True/break construction.</p>

<pre><code>if apple_pos in self.body_segments or apple_pos == self.head_pos:
    self.spawn_apple()  # if apple spawned in snake, then run func again with recursion 
        return
</code></pre>

<p>becomes:</p>

<pre><code>while True:
    ...
    if apple_pos not in self.body_segments and apple_pos != self.head_pos:
        break
</code></pre>

<p>I must admit to never having used the keyboard module but _pressed_events doesn't look like it is meant to be part of the API. And I don't know where the magic code numbers come from, or what key (if any) they bind to on my platform.</p>

<pre><code>for code in keyboard._pressed_events:
    if code == 105:
        snake.direction = 'left'
</code></pre>

<p>As you never actually use the string directions I might change it to:</p>

<pre><code>for code in keyboard.some_get_event_api_call():
    if code == LEFT_ARROW:
        snake.direction = Pos(-1, 0)
</code></pre>

<p>Then you can do the elif thing only once.</p>

<p>Finally:</p>

<pre><code>int(board_obj.WIDTH / 2)
</code></pre>

<p>can be just</p>

<pre><code>board_obj.WIDTH // 2
</code></pre>
    </div>