<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Too long for a comment...</p>

<p>The problem as presented seems to have much in common with the string permutations problem in terms of solution structure.</p>

<p>You should be able to do something similar to: <a href="https://stackoverflow.com/questions/4240080/generating-all-permutations-of-a-given-string">https://stackoverflow.com/questions/4240080/generating-all-permutations-of-a-given-string</a> with slight modification to get a compact recursive formulation.</p>

<p>Pseudo code below:</p>

<pre><code>solution(string digits, string prefix="", array&lt;string&gt; outputs)
    if digits empty then
        add prefix to outputs
    else
        currentDigit := digits.get(0)
        remainingDigits := digits.remove(0);
        for each character in listOfCharsForDigit[currentDigit] do
            solution(remainingDigits, prefix+character, outputs)
        endfor
    endif
</code></pre>

<p>Hope that helps...</p>
    </div>