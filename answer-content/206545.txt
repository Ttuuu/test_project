<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If the data source can't give you new data fast enough to allow you to meet your time constraints, then you have to be able to run without calling the data source.  In your case, that means having camera data already available, and that's going to require a solution similar to the one you describe.  There are a few things to consider.</p>

<ol>
<li>You say that some cameras are fast enough.  Can you determine whether the one you have is, and if so load on demand?</li>
<li>Is it possible for you to know when your API is under use, and pull data more frequently when it is, and less frequently when it's not?  Or is there really any downside to pulling data as fast as you can?</li>
<li>Is it worth trying to load the data from the data source as a task with a timeout, so you can return that if you get it fast enough?</li>
</ol>

<p>As for the code itself, there's a lot that could be improved.  The class does everything: downloads data, parses HTML, parses strings.  It's at least 3 different classes in one.  It doesn't do any error handling - there are a lot of empty catch blocks.  There's use of non-threadsafe objects in a threaded environment (e.g. <code>list.Add()</code>) - which is presumably why you added the <code>try</code> block there.</p>
    </div>