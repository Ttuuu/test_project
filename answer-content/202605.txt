<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code is good because you implemented many <code>__methods__</code> that allow natural use of the class with <code>for</code> and <code>print</code> built-ins.</p>

<p>A great way to make it easier to improve the code is to add automatic tests, for example with <code>doctest</code>.</p>

<p>Let me show you a practical example:</p>

<p>I note that <code>__str__</code> repeats logic already inside <code>__iter__</code>, so first thing I write a test to see how it works now:</p>

<pre><code>import doctest

class LinkedList():
  def __str__(self):
    """
    Define string casting for the list.

    &gt;&gt;&gt; str(LinkedList([1, 2, 3]))
    '1 =&gt; 2 =&gt; 3 =&gt; None'
    """
    # old code

if __name__ == "__main__":
  doctest.testmod()
</code></pre>

<p>Than I write the new implementation that uses <code>__iter__</code> through the <code>for</code> keyword:</p>

<pre><code>def __str__(self):
    """
    Define string casting for the list.

    &gt;&gt;&gt; str(LinkedList([1, 2, 3]))
    '1 =&gt; 2 =&gt; 3 =&gt; None'
    """
    return ' =&gt; '.join((str(x) for x in self)) + ' =&gt; None'
</code></pre>

<p>Just executing the code runs the test and I know that the new implementation works the same as the old one at least in this case.
More tests can be added for example for empty list or different data types inside the list but this is the basic idea.</p>

<p>The same can be said for <code>index</code>, you can reuse the <code>__iter__</code> logic once again:</p>

<pre><code>def index(self, item):
    """
    Return index of first occurence of specified item. -1 if absent.

    &gt;&gt;&gt; LinkedList(['a', 'b', 'c', 'd']).index('b')
    1

    """
    for index, x in enumerate(self):
        if x == item:
            return index
    return -1
</code></pre>

<p>In general when you write a collection the <code>__iter__</code> method is very useful for implementing other methods.</p>
    </div>