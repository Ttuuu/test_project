<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The stuff with <code>counter_one</code> and <code>counter_two</code> is rather oblique, and it seems that it would break if someone were to choose the same password as someone else (or username, but you do have safeguards against that). If I understand what you're trying to do correctly, you could just do</p>

<pre><code>account_match = any([(f"'{user_name}'" in line) and (f"'{password}'" in line) for line in f.readlines()])
</code></pre>

<p>I think there should be more safeguards against infinite loops. For instance:</p>

<pre><code>def create(max_attempts = default_max_attempts,
           max_time = default_max_time):
    exists = os.path.exists("C:/Users/Tom/Desktop/test/login_project/account_info.txt")
    if not exists:
        f = open("account_info.txt", "w")
        f.close()
    start_time = time.time()
    while attempts &lt; max_attempts:
        if time.time()-start_time() &gt; max_time:
            print("Max time exceeded. Exiting account creation.")
            return "Max time exceeded."  
        user_name = input("\nEnter a username: ")
        with  open("account_info.txt", "r") as f:
            file_contents = f.read()
            if f"'{user_name}'" in file_contents:
                user_choice = input("\nUsername already in use. Press X to exit, any other key to continue.")
                if user_choice.upper() == 'X':
                    confirmation = input("Exit account creation? Y/N")
                    if confirmation.upper() == "Y":
                        print("Exiting account creation.")                        
                        return "User exited account creation."
                attempts +=1
                continue
            break
    if attempts == max_attempts:
        return "Max attempts reached."          
    while attempts &lt; max_attempts:
        if time.time()-start_time() &gt; max_time:
            print("Max time exceeded. Exiting account creation.")
            return "Max time exceeded."
        password = input("Enter a password: ")
        password_confirm = input("Confirm password: ")
        if password == password_confirm:
            info_list = [user_name, password, email]
            with open("account_info.txt", "a+") as f:
                f.write(f"{info_list}\r\n")
                f.close()
            print("\nAccount Created.\n")
            choosing()
            break
        else:
            user_choice = input("\nPasswords did not match. Press X to exit, any other key to continue.")
            if user_choice.upper() == 'X':
                confirmation = input("Exit account creation? Y/N")
                if confirmation.upper() == "Y":
                    print("Exiting account creation.")                        
                    return "User exited account creation."
            attempts +=1
            continue
    if attempts == max_attempts:
        return "Max attempts reached."   
</code></pre>
    </div>