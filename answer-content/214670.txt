<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>root</h2>

<p>The <code>root</code> directive is inherited. You have the same statement in the <code>server</code> block, and repeated in a number of <code>location</code> blocks. Only the first statement is necessary. See <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#root" rel="nofollow noreferrer">this document</a> for details.</p>

<h2>location ~* ^/static/.*$</h2>

<p>This can be replaced by the prefix location:</p>

<pre><code>location /static/ { ... }
</code></pre>

<p>The prefix location is more efficient than the regular expression location. The precedence order is different, but that does not affect your current configuration. See <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#location" rel="nofollow noreferrer">this document</a> for details.</p>

<h2>rewrite ^(.*)$ https://$http_host$1 permanent;</h2>

<p>You can replace this with a <code>return</code> statement, thus eliminating a regular expression.</p>

<pre><code>return 301 https://$http_host$request_uri;
</code></pre>

<h2>Nested location blocks</h2>

<p>A number of statements are common to three <code>location</code> blocks, all of which represent URIs that begin with <code>/static/</code>. The <code>expires</code>, <code>access_log</code> and <code>add_header</code> directives are inherited.</p>

<p>You could restructure your locations as follows:</p>

<pre><code>location /static/ {
    root  /var/www/html/src;
    expires 1y;
    access_log off;
    add_header Cache-Control "public";

    location = /static/site.js {
        try_files /static/$script_file =404;
    }
    location ~* ^/static/img/.+\.(png|jpg)$ {
        add_header Vary Accept;
        add_header Cache-Control "public";
        try_files $uri$webp_suffix $uri =404;
    }
}
location / {
    ...
}
</code></pre>

<p>This would improve efficiency as URIs which do not begin with <code>/static/</code> will not need to be checked against the regular expressions.</p>

<p>The <code>add_header</code> directive has an additional inheritance rule. See <a href="http://nginx.org/en/docs/http/ngx_http_headers_module.html#add_header" rel="nofollow noreferrer">this document</a> for details.</p>
    </div>