<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Simplifying the functions into one</h2>

<p>Yes the three functions can be combined into one. To start, the <code>pos</code> variable can be simplified to default to 0 when no <em>left</em> style has been applied using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Logical_OR_()" rel="nofollow noreferrer">logical OR</a> because <code>NaN</code> will be converted to <code>false</code>.</p>

<pre><code>let pos = parseInt(avatar.style.marginLeft, 10) || 0;
</code></pre>

<p>Notice that the call to <code>parseInt()</code> contains two parameters: </p>

<ul>
<li>the <em>left</em> style of the avatar element without the <code>px</code> characters removed - this is because <code>parseInt()</code> can strip those off.</li>
<li>an integer <code>10</code> - see feedback point #3 below.</li>
</ul>

<p>Then a parameter for determining if the avatar should be moved to the end could be added, and since you are using <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> features like <code>let</code>, a default value can be used: </p>

<pre><code>function moveAvatarForward(moveToEnd = false) {
</code></pre>

<p>And that value can determine the value of <code>movePos</code> </p>

<pre><code>let movePos = pos + sum;
if (moveToEnd) {
  movePos = progressContainerWidth - avatarSize;
}
</code></pre>

<h2>Other feedback</h2>

<ol>
<li>Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" rel="nofollow noreferrer"><code>const</code></a> whenever a variable doesn't need to be re-assigned</li>
<li><p>Minimize DOM lookups</p>

<p>Take for example the first two variable declarations:</p>

<blockquote>
<pre><code>let startText = document.querySelector('.circle').innerHTML = "click";
let circle = document.querySelector('.circle');
</code></pre>
</blockquote>

<p>In this case, there are two DOM lookups for the same element. Instead of doing this, the value for <code>startText</code> could be accessed from <code>circle</code>:</p>

<pre><code>const circle = document.querySelector('.circle');
const startText = circle.innerHTML = "click";
</code></pre>

<p>The same is true for <code>avatarSize</code> - it can be accessed via <code>avatar</code>. And it doesn't need to be re-declared inside <code>endOfAvatar()</code> - just remove the keyword <code>let</code>. </p>

<p>Additionally, <code>titleContainer</code> points to the same thing as <code>startText</code> so those can be reduced to one variable.</p></li>
<li><p>When using <code>parseInt()</code>: "always specify a radix."<sup><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt#Octal_interpretations_with_no_radix" rel="nofollow noreferrer">1</a></sup> (i.e. 2<sup>nd</sup> parameter - typically <code>10</code>)</p></li>
<li><p>Use prefix increment in <code>frame()</code> to increment before using a variable. Instead of the following two lines:</p>

<blockquote>
<pre><code>pos++;  
avatar.style.marginLeft = pos + "px";
</code></pre>
</blockquote>

<p>Just use the prefix increment to combine the lines:</p>

<pre><code>avatar.style.marginLeft = ++pos + "px";
</code></pre></li>
<li>Avoid poluting the global scope by wrapping the code in a function that is executed once the DOM is ready (e.g. using <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener" rel="nofollow noreferrer"><code>document.addEventListener()</code></a> for the <a href="https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded" rel="nofollow noreferrer"><em>DOMContentLoaded</em></a> event), or at least an <a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE" rel="nofollow noreferrer">IIFE</a>.</li>
</ol>

<h3>Simplified code</h3>

<p>The element <code>move-container</code> and its children were removed because they appear to not be used.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="false" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>document.addEventListener('DOMContentLoaded', function() {
  // Init .innerHTML for circle
  const circle = document.querySelector('.circle');
  circle.innerHTML = "click";
  const progressContainer = document.querySelector('.progress-container');
  const avatar = document.querySelector('.avatar');
  const avatarSize = avatar.clientWidth;
  const totalLevels = 5;

  // Listen for events
  circle.addEventListener('click', mainClickMaze);

  // Move the avatar based on its previous location
  function moveAvatarForward(moveToEnd = false) {
    let pos = parseInt(avatar.style.marginLeft, 10) || 0;
    const progressContainerWidth = progressContainer.clientWidth;
    const sum = Math.round(progressContainerWidth / totalLevels);
    let movePos = pos + sum;
    if (moveToEnd) {
      movePos = progressContainerWidth - avatar.clientWidth;
    }
    requestAnimationFrame(frame);

    function frame() {
      if (pos != movePos) {
        avatar.style.marginLeft = ++pos + "px";
        requestAnimationFrame(frame);
      }
    }
  }

  function mainClickMaze(event) {
    let click = parseInt(circle.innerHTML, 10) || 0;
    circle.innerHTML = ++click;
    if (click == totalLevels) {
      // Remove event listener 
      circle.removeEventListener('click', mainClickMaze);
      circle.innerHTML = 'Disabled';
    }
    if (click == 1) {
      progressContainer.style.display = 'flex';
    } else {
      moveAvatarForward(click == totalLevels);
    }
  }
});</code></pre>
<pre class="snippet-code-css lang-css prettyprint-override"><code>html,
body {
  padding: 0;
  margin: 0;
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 33.3vh;
  margin-bottom: 33.3vh;
}

.circle {
  display: flex;
  width: 20vw;
  height: 20vw;
  background-color: red;
  border-radius: 50%;
  color: white;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 24px;
  cursor: pointer;
}

.progress-container {
  position: fixed;
  display: none;
  align-items: center;
  width: 90%;
  height: 2px;
  background-color: red;
  bottom: 5vh;
}

.avatar {
  width: 2vw;
  height: 2vw;
  background-color: blue;
  border-radius: 50%;
}</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;div class="container"&gt;
  &lt;div class="circle"&gt;&lt;/div&gt;
  &lt;div class="progress-container"&gt;
    &lt;div class="avatar"&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>

    </div>