<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You should remove  </p>

<pre><code>int dummyCounter = 1;  
</code></pre>

<p>and change the <code>if</code>'s checking for <code>folderStack.Count</code> to an <code>if..else</code> like so  </p>

<pre><code>        //Ends the while loop
        if (folderStack.Count == 0)
        {
            break;
        } 
        else
        {
            currentFolder = folderStack.Pop();
        }  
</code></pre>

<p>While writing this I thought about this </p>

<blockquote>
<pre><code>if (dummyCounter != 1)
{
    @Html.Partial("_Folder", currentFolder);
}
</code></pre>
</blockquote>

<p>as well and again checked the program-flow. If we assume that the <code>parentFolder.FoldersContained != 0</code> we output the files of the <code>parentFolder</code> twice. One time inside the <code>do..while</code> loop and one time after the loop. We could remove this <code>if</code> and this  </p>

<pre><code>//Parent folder
@Html.Partial("_Folder", parentFolder);  
</code></pre>

<p>like so  </p>

<pre><code>@foreach (var parentFolder in Model)
{

    Stack&lt;Folder&gt; folderStack = new Stack&lt;Folder&gt;();
    folderStack.Push(parentFolder);

    @while (folderStack.Count &gt; 0)
    {

        var currentFolder = folderStack.Pop();
        @Html.Partial("_Folder", currentFolder);

        &lt;div class="collapse" id="@currentFolder.Id"&gt;

            @for (int i = currentFolder.FoldersContained; i &gt; 0; i--)
            {
                //Pushes all nested directories into my stack
                //in reverse inorder to display the top directory
                folderStack.Push(currentFolder.Folders[i - 1]);
            }

            // Should they contain any files, display them
            @foreach (var file in currentFolder.Files)
            {
                @Html.Partial("_File", file);
            }

        &lt;/div&gt;

    }
}
</code></pre>

<p>I know that this isn't exactly the same as you had before (the most outer <code>&lt;div class="collapse" id="@currentFolder.Id"&gt;</code> is missing) but it is much clearer and easier to read. If you need this <code>div</code>'s I would suggest to just use a separate method to process the contained folders and files of the parentFolders. </p>
    </div>