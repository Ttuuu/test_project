<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>@Ted Brownlow has answered your constructor question, but here's a few other points to consider going forward...</p>
<h1>Consider your class interface</h1>
<p>Your class needs to present an interface that is functional,usable and focused.  At the moment, your class is responsible for both implementing a LIFO and outputting them to the console.  These are really different concerns.  Consider if instead of writing to the console you wanted to write to a web page / different window.  Building the display logic straight into the class makes it less flexible.  A good exercise might be to remove the <code>show</code> method and decide what method(s) you would need to add to your class in order to allow it to be implemented from outside the class.</p>
<h1>Bounds checking</h1>
<p>At the moment your class has a fixed maximum size of 5.  However, other than by reading the class there's no way for the client to know (possibly missing a <code>maxSize</code> method or similar).  There's also no way for the client to know how many items are in the list, unless they keep track of it themselves (possibly missing a <code>currentSize</code> method or similar).</p>
<p>Without this size information, there's no way for the client to know if it's safe to call <code>push</code> or <code>pop</code>.  Consider what would happen if you already had 5 items when <code>push</code> was called.  What would happen if 0 items were present and pop was called?  At the moment, you're relying on the framework to handle these scenarios.  This can be ok, if it's a conscious decision, but you probably want to consider  adding some bounds checks and throwing exceptions that more explicitly help the user of your class know what they did wrong.</p>
    </div>