<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here is how you might do it.</p>

<pre class="lang-py prettyprint-override"><code>def tuples_adjacent(a, b, modulus) -&gt; bool:
    def sequential(x, y):
        return (y-x) % modulus == 1
    assert sequential(*a) and sequential(*b)
    return sequential(a[1],b[0]) or sequential(b[1],a[0])
</code></pre>

<p>This will raise an <code>AssertionError</code> on <code>tuples_adjacent((1,1), (1,1), 6)</code> because the tuples do not meet the precondition of being consecutive pairs. I'm not sure if that is exactly what you want without seeing the surrounding program. You can decide if you actually just want to <code>return False</code> if that precondition is not met.</p>

<p>The other commenter mentioned <code>abs(a-b)%6==2</code> for checking adjacency, but this is incorrect and fails for the case <code>a=5</code>, <code>b=1</code>. You instead have to do <code>(a-b)%m in {2,m-2}</code>. In general, absolute value and modulus do not play well with each other.</p>
    </div>