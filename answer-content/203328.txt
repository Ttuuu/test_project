<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>PEP 8, the official Python style guide, says that <a href="https://www.python.org/dev/peps/pep-0008/#indentation" rel="nofollow noreferrer">indentation should be 4 spaces per level</a>.  Since whitespace is significant in Python, that is a pretty strong convention.</p>

<p>The implementation could be less verbose:</p>

<ul>
<li><code>sorted(list(graph.keys()), …)</code> could be shortened to <code>sorted(graph, …)</code>.</li>
<li>Instead of defining <code>available_colors</code> as a list of booleans, you could define <code>taken_colors</code> as a set, ideally using a <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow noreferrer">generator expression</a>.</li>
<li>The loop that assigns <code>color_map[node]</code> can be simplified down to <code><a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer">next</a>(<em>generator expression with a condition</em>)</code>.</li>
</ul>



<pre><code>def color_nodes(graph):
    color_map = {}
    # Consider nodes in descending degree 
    for node in sorted(graph, key=lambda x: len(graph[x]), reverse=True):
        neighbor_colors = set(color_map.get(neigh) for neigh in graph[node])
        color_map[node] = next( 
            color for color in range(len(graph)) if color not in neighbor_colors
        )
    return color_map
</code></pre>
    </div>