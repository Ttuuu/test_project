<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with <a href="https://codereview.stackexchange.com/a/211168/84718">@Ludisposed</a> answer, but you have a few <code>subprocess</code> gotchas:</p>

<ul>
<li>You don't need to spawn a shell in order to run the command, simply build your command as a list of arguments and it will be fine. This is especially important if your rules names may contains spaces as the command would be treated entirelly differently in your implementation;</li>
<li><a href="https://docs.python.org/3/library/subprocess.html#older-high-level-api" rel="noreferrer">Replace the old <code>subprocess.call</code> by <code>subprocess.run</code></a>;</li>
<li>You may be interested to run <code>subprocess.run</code> by specifying <code>check=True</code> in order to generate an exception and be alerted if something does not go according to plan.</li>
</ul>

<p>Applying these changes to <em>e.g.</em> <code>modify_rule</code> can lead to:</p>

<pre><code>def modify_rule(rule_name, enabled=True):
    """Enable or Disable a specific rule"""
    subprocess.run(
        [
            'netsh', 'advfirewall', 'firewall',
            'set', 'rule', f'name={rule_name}',
            'new', f'enable={"yes" if enabled else "no"}',
        ],
        check=True,
        stdout=DEVNULL,
        stderr=DEVNULL
    )
</code></pre>

<p>Also note that I removed the <code>print</code> call from the function as it impairs reusability. If the caller want this kind of messages, it should be responsible for printing them, not this function.</p>
    </div>