<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>the <code>str_replace()</code> calls can be consolidated. (<a href="https://3v4l.org/jBYaK" rel="nofollow noreferrer">Demo</a>)</p>
<pre><code>$string = "\ntext\r\ntab\t\ntext\"quote'\"text";
var_dump(
    str_replace(
        ['"', "\r", "\n", "\t"],
        ["'", ''],
        $string
    )
);
</code></pre>
</li>
<li><p>I do like <code>return  $item-&gt;isHit() ? $item-&gt;get() : null;</code> which removes a redundant call.</p>
</li>
<li><p>You might like to indicate the data type that a method returns.  E.g.:</p>
<pre><code>private function isValidXml(string $xmlString): bool
</code></pre>
</li>
<li><p>Since your <code>trim()</code> call assumes that the incoming data <code>isset()</code>, then <code>empty()</code> is doing more "work" than necessary.  Perhaps this:</p>
<pre><code>$content = trim($xmlString);
if (!$content || stripos($content, '&lt;!DOCTYPE html&gt;') !== false) {
    return false;
}
</code></pre>
</li>
<li><p>For DRYness, I would like to see <code>simplexml_load_string()</code> only called once in this class.  This would demand that the validation be integrated into the <code>getSimpleXmlObjectFromString()</code> method or that the xml is passed back it after the validating method was non-false.</p>
</li>
</ul>
<p>Outside of these insights, your class seems pretty tidy to me.</p>
<hr>
<p>After comments from the OP:</p>
<ul>
<li><p>I think I recommend the exception throwing technique from the original class. I am not overly confident on the best practices of writing awesome try-catch blocks, but it feels like the appropriate place for it. I don't follow why there are two catch blocks in the original class. ...Try not to get too concerned about method length -- the concern must be confined to ensuring that methods have a single responsibility.</p>
</li>
<li><p><code>getSimpleXmlObjectFromString()</code> is sanitizing and converting.  <code>isValidXml()</code> is validating before and after loading.  I think you need to decide how you want to remove the redundant loading.  Do you want separate methods that:</p>
<ol>
<li><code>sanitizeString()</code></li>
<li><code>validateString()</code></li>
<li><code>validateXML()</code></li>
</ol>
<br>
Maybe, maybe not; but you should never ask php to perform the same operation on the same data more than once.
</li>
<li><p>Since <code>$errors = libxml_get_errors();</code> will ensure that the variable will be declared if reached, then <code>empty()</code> is doing unnecessary work. Like my earlier advice, just use a falsey check.</p>
<pre><code>return !$errors;
</code></pre>
</li>
</ul>
    </div>