<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm thinking you named <code>ret</code> as in short for <code>return</code>.
Don't shorten variable names. Also try to give varaible names that are meaningful. Naming it return because you return it is silly.</p>

<pre><code>char ret = '\0';
</code></pre>

<p>Same here:</p>

<pre><code>std::string temp;
</code></pre>

<p>This line looks very odd and is a sign of poorly named variables:</p>

<pre><code>ret = it-&gt;second;
</code></pre>

<p><code>r</code>, <code>p</code> <code>s</code> these are a good example of when you should be using an ENUM.</p>

<p>Try to avoid 1 letter variable names.</p>

<p>You can use <code>const</code> when variables should never change. For example: <code>rules</code>.</p>

<p>I suggest putting the condition inside the while instead.
For example:</p>

<pre><code>} while (std::tolower(ret[0]) != 'r' || std::tolower(ret[0]) != 'p' || std::tolower(ret[0]) != 's');
</code></pre>

<p>If you had an ENUM, you could check the entered value against all the values in the ENUM. This would look much better, and be easier to maintain. (E.g adding <code>Lizard</code> <code>Spock</code>)</p>

<p>The ENUM would also help for printing the values. (No more if <code>r</code> print <code>rock</code> etc)</p>
    </div>