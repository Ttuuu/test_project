<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Note: The current HackerRank provides an input that is an array of arrays, each interior array being a row.</p>

<p>Example input:</p>

<pre><code>11 2 4
4 5 6
10 8 -12
</code></pre>

<p>Output</p>

<pre><code>[
    [11,2,4],
    [4,5,6],
    [10,8,-12]
]
</code></pre>

<p>Given this input you really don't have to do much. 
Since it's diagonal we can use the same index to select the row <em>and</em> the value within the row. You want the reversed position for the value on the second set of values, so simply reverse inline and add them together.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="true">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const input = [[11,2,4],[4,5,6],[10,8,-12]];
// Complete the diagonalDifference function below.
function diagonalDifference(arr) {
    let sum = 0;
    for (var i = 0; i &lt;= arr.length - 1; i++) {
        sum += arr[i][i] - arr[i].reverse()[i];
    }
    return Math.abs(sum);
}
console.log(diagonalDifference(input));</code></pre>
</div>
</div>


<p>That's pretty verbose of course. We can use a reduce and do it on one line.</p>

<pre><code>function diagonalDifference(arr) {
    return Math.abs(arr.reduce((s, r, i) =&gt; s += r[i] - r.reverse()[i], 0));
}
</code></pre>
    </div>