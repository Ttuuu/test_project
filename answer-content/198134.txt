<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>            if (currentInterval.start &lt;= pastInterval.end) {
                // if the past interval can be merged with the current interval
                if (currentInterval.end &gt; pastInterval.end) {
                    // this means currentInterval finishes outside of the past-intervals limit
                    Interval newInterval = new Interval(pastInterval.start, currentInterval.end);
                    pastInterval = newInterval;
                }
            } else {
                // as the past interval cannot be merged within the current interval, its the beginning of new interval
                mergedIntervals.add(pastInterval);
                pastInterval = currentInterval;
            }
</code></pre>
</blockquote>

<p>This is quite a minor nit-pick, but where nested <code>if</code>s can be avoided it can make the code more readable:</p>

<pre><code>        if (currentInterval.start &gt; pastInterval.end) {
            // as the past interval cannot be merged within the current interval, its the beginning of new interval
            mergedIntervals.add(pastInterval);
            pastInterval = currentInterval;
        }
        else if (currentInterval.end &gt; pastInterval.end) {
            // this means currentInterval finishes outside of the past-intervals limit
            Interval newInterval = new Interval(pastInterval.start, currentInterval.end);
            pastInterval = newInterval;
        }
</code></pre>

<p>Also, IMO <code>newInterval</code> is pointless, so I would make the further simplification of eliminating it to get:</p>

<pre><code>        if (currentInterval.start &gt; pastInterval.end) {
            // as the past interval cannot be merged within the current interval, its the beginning of new interval
            mergedIntervals.add(pastInterval);
            pastInterval = currentInterval;
        }
        else if (currentInterval.end &gt; pastInterval.end) {
            // this means currentInterval finishes outside of the past-intervals limit
            pastInterval = new Interval(pastInterval.start, currentInterval.end);
        }
</code></pre>
    </div>