<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>If you need to add <code>''</code> then you should do this outside of the function. This can be fairly easy knowing the output is always a string.</p>

<pre><code>&gt;&gt;&gt; print(repr(list_concatenator('a')))
'a'
</code></pre>

<p>By default the IDLE prompt does this automatically.</p>

<pre><code>&gt;&gt;&gt; list_concatenator('a')
'a'
</code></pre></li>
<li><p>Rather than using <code>len(your_list) == 0</code> you can use <code>not your_list</code>.</p>

<pre><code>if not your_list:
    return 'Your list is empty'
</code></pre></li>
<li><p>You can use <code>str.join</code> to join the rest of your lists.</p></li>
</ol>

<pre><code>def list_concatenator(your_list, comma=', ', conjunction=' and '):
    if not your_list:
        return 'Your list is empty'

    your_list = [str(i) for i in your_list]
    if len(your_list) &gt; 1:
       your_list[:-1] = [comma.join(your_list[:-1])]
    return conjunction.join(your_list)

&gt;&gt;&gt; list_concatenator(['item1', 'item2', 3, 'item4', 'item5', 'item6', 7, 'item8', 9])
'item1, item2, 3, item4, item5, item6, 7, item8 and 9'
&gt;&gt;&gt; list_concatenator('abcde', conjunction=' or ')
'a, b, c, d or e'
&gt;&gt;&gt; list_concatenator('abcde', conjunction=', or ')
'a, b, c, d, or e'
&gt;&gt;&gt; list_concatenator('ab')
'a and b'
&gt;&gt;&gt; list_concatenator('a')
'a'
</code></pre>

<hr>

<p>It should be noted that the challenge says to seperate each value with a <code>', '</code>, and so you could simplify this by mutating the last value with the conjunction, and just use one <code>str.join</code>.</p>

<pre><code>def list_concatenator(your_list, comma=', ', conjunction='and'):
    if not your_list:
        return 'Your list is empty'

    your_list = [str(i) for i in your_list]
    if len(your_list) &gt; 1:
        your_list[-1] = conjunction + ' ' + your_list[-1]
    return comma.join(your_list)

&gt;&gt;&gt; list_concatenator(['item1', 'item2', 3, 'item4', 'item5', 'item6', 7, 'item8', 9])
'item1, item2, 3, item4, item5, item6, 7, item8, and 9'
&gt;&gt;&gt; list_concatenator('abcde', conjunction='or')
'a, b, c, d, or e'
&gt;&gt;&gt; list_concatenator('ab')
'a, and b'
&gt;&gt;&gt; list_concatenator('a')
'a'
</code></pre>
    </div>