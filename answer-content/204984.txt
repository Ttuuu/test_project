<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Regarding improving your programming, there are several things you should also do when writing a program in Python.</p>

<p>First, is have your code in separate functions. Even though your code here results in a one-liner, it should be in its own function. There are several reasons:</p>

<ul>
<li>keeps the functions separated: good to ensure limited interaction,</li>
<li>keeps the variable scope restricted: good to ensure your variable state is unaffected,</li>
<li>enables rapid optimisation if needed: when you only need to change one function, you know the rest of your code will operate like it did before.</li>
</ul>

<p>Of course it might seem like a lot of extra effort for a small return, but the amount of effort needed later to change the entire program (if you start writing hundreds of lines) will probably ruin your day. Imagine you need to do it just to track down a bug? Where is it?</p>

<p>To take 200_success's one-liner, I would write this code like this:</p>

<pre><code># coding=utf-8

def remove_middle_of_three(data_set):
    return ' '.join(str(i) for i in data_set if i % 3 != 1)


if __name__ == "__main__":
    result = remove_middle_of_three(range(30))
    print(result)
</code></pre>

<p>and the big reason is, I've learned that even one-liners end up becoming production code in organisations, or I waste hours rewriting my own personal code for home automation tracking down bugs. Doing it right only takes a little extra time at the start (and often it's all boiler-plate code anyway), but it saves hours when you don't have hours to waste.</p>

<p>Hope this helps - and keep coding!</p>
    </div>