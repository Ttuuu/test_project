<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>here just my ideas how to improve your code. maybe in some points i am wrong, but this are the places i would dig into and make it a little better:</p>

<p><strong>1) set Image only once</strong></p>

<pre><code>favImg.image = UIImage(named: "icBookmarkAdded.png")
</code></pre>

<p>you only need to set it once - when the cell is created and not always when it prepared for each row</p>

<p><strong>2) wrong nesting</strong></p>

<pre><code>if camArray != nil {
    for item in camArray! {
        if cw.cwCameraID == item["stream_id"].string {
           ...
        } else if cw.cwCameraID.isEmpty {
</code></pre>

<p>here you mixed the loop <code>camArray</code> with wrong inner if. i would test if <code>cw.cwCameraID.isEmpty</code> at first and later do the loop and not inside the loop otherwise this <code>if</code> block runs <code>camArray.count</code> times (also you call <code>getVotes(for: cw.cwID)</code> the same amount with an call to the external Firebase service in <code>getVotes</code>. </p>

<p>you should check your method </p>

<p><strong>3) variable type for camArray</strong></p>

<p>i would return from <code>return VeedoServices.shared.veedoCamerasArray()</code> an dictinary so you can get the stream directly with <code>camMap[cw.cwCameraID]</code> ( <a href="https://developer.apple.com/documentation/swift/dictionary" rel="nofollow noreferrer">https://developer.apple.com/documentation/swift/dictionary</a> ) and don't need to loop over an array </p>

<p><strong>3) wrong place for camArray</strong></p>

<p>i would not populate this list in every instance of the cell. an cell should be dumb as possible and i would set it from the table controller the value in <code>configCell</code> and there only the . otherwise it hit the <code>VeedoServices</code> call everytime again (i assume it is a call to a external service?)</p>

<p><strong>4) on/off images</strong></p>

<p>the <code>cameraStatusImg.image = UIImage(named: "icCameraOn.png")</code> i would avoid with placing 2 images in the cell and just hide the wrong image and unhide the right image instead of assinging a new image in every cycle</p>

<p><strong>5) gettingImgLbl</strong></p>

<p>i not understand why you show so many different informations to the <code>gettingImgLbl</code> - but as i see if there is no info goes to this label, it is possible that there can be an old text from the previous reused cw with this cell.</p>

<p><strong>6) rating switch / case</strong></p>

<pre><code>  switch rating {

    case 0.0..&lt;0.1: ratingLbl.text = "0.5"
</code></pre>

<p>i would calculate it direct:     </p>

<pre><code>  ratingLbl.text = = String(((rating * 10).rounded(.down) + 1) * 0.5)
</code></pre>

<p><strong>7) distance</strong></p>

<pre><code>        if cw.nearestCW() == 0.0 {
            bottomInformationLbl.text = "Вы на месте!"

        } else {
            bottomInformationLbl.text = String(format: "Расстояние до мойки %.1f км", cw.nearestCW() / 1000)
        }
</code></pre>

<p>i guess that cw.nearestCW() gives you the distance in meters. but what is if it is beetween <code>&gt;0</code> and <code>&lt;100</code>, then this text shows <code>"Расстояние до мойки 0.0 км"</code>? </p>

<p>but anyhow i would show up to 1km the exact meters and over this the km </p>

<p><strong>8) Firebase</strong></p>

<pre><code>    FirebaseServices.shared.REF_VOTES.observe(.value) { (snapshot) in
    guard let snapshots = snapshot.children.allObjects as? [DataSnapshot] else { return }

    for snap in snapshots {
        guard let voteDict = snap.value as? [String: AnyObject] else { return }

        if voteDict["carwashID"] as? String == carwashId {
</code></pre>

<p>i don't know firebase not well but i think to loop over an array is too much in this place (you need also to fetch all the snapshots here. try to get only the carwash like you do in your next method <code>FirebaseServices.shared.REF_VOTES.child(carwashId)</code></p>

<p><strong>9) set only once</strong></p>

<pre><code>voteButton.setTitle("Хочу видеть очередь!", for: .normal)
</code></pre>

<p>you name a voting button "i like to see the queue"? i think this is wrong text for a voting. clickbait?</p>

<p><strong>10) wrong place for disableVoteButton</strong></p>

<pre><code>            if UserDefaults.standard.value(forKey: cw.cwID) != nil {
                disableVoteButton()
            } else {
                enableVoteButton()
            }
</code></pre>

<p>why this is inside at a very nested if block? it should be run always </p>
    </div>