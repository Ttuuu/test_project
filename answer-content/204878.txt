<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just a few thoughts, this is by no means a complete review.</p>

<h2>Variable naming</h2>

<ul>
<li><p>In <code>CompilerImpl</code> you have variables like</p>

<pre><code>private String WORKING_DIR;
private String FILE_NAME_CPP;
</code></pre>

<p>and so on. The (albeit rather old) <a href="https://www.oracle.com/technetwork/java/javase/documentation/codeconventions-135099.html#367" rel="nofollow noreferrer">code conventions</a> suggest that
this case should be only used for constants, not for regular
variables.</p></li>
<li><p>In <code>public String getSrcName(boolean var);</code> the meaning of <code>var</code> is
so unobvious that you felt like commenting it yourself. Why not name
it something like <code>boolean withExtension</code>?</p></li>
</ul>

<h2>Potential Nullpointers</h2>

<p>See e.g. <code>ProcessBuilderFactory.getProcessBuilder</code>:</p>

<pre><code>public static ProcessBuilder getProcessBuilder(DTO dto) {
    ProcessBuilder processBuilder = null;
    switch (dto.getLang()) {
        case Language.CPP :
            processBuilder = new ProcessBuilder("g++", dto.getSrcName(true), "-o", dto.getSrcName(false));
            break;
        case Language.JAVA :
            processBuilder = new ProcessBuilder("javac", dto.getSrcName(true));
            break;
    }
    processBuilder.directory(new File(dto.getWorkingDir()));
    return processBuilder;
}
</code></pre>

<p>As far as I can see <code>dto.getLang()</code> comes directly from the input submission (not fully shown), so there is no guarantee that it will be either <code>Language.CPP</code> or <code>Language.JAVA</code>, leaving <code>processBuilder</code> potentially <code>null</code>. Since <code>dto.getLang()</code> returns a <code>String</code> I would suggest to replace it with an <code>enum</code> and put some validation before accepting a submission so that valid values are guaranteed during processing.</p>

<h2>Superfluous variables</h2>

<p>The following struck my eye because <code>flow</code> is actually superfluous:</p>

<pre><code>boolean flow = true;
CompileStatus status;
ProcessBuilder compile = ProcessBuilderFactory.getProcessBuilder(dto);
ProcessBuilder execute = ProcessBuilderFactory.getExecutionProcessBuilder(dto);

status = engine.compile(compile);
if (status != CompileStatus.COMPILE_SUCCESS) //CompileStatus is enum class
    flow = false;

if (flow) {
    status = engine.execute(execute, dto);
    if (status != CompileStatus.EXECUTION_SUCCESS)
        flow = false;
}

if (flow) {
    status = diffCheck();
    logger.info("Diff checker, {}", status);
}
</code></pre>

<p>Why not implement it like this?</p>

<pre><code>ProcessBuilder compile = ProcessBuilderFactory.getProcessBuilder(dto);
ProcessBuilder execute = ProcessBuilderFactory.getExecutionProcessBuilder(dto);

CompileStatus status = engine.compile(compile);

if (status == CompileStatus.COMPILE_SUCCESS) {
    status = engine.execute(execute, dto);
}

if (status == CompileStatus.EXECUTION_SUCCESS) {
    status = diffCheck();
    logger.info("Diff checker, {}", status);
}
</code></pre>
    </div>