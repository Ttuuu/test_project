<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I did that ugly try, because of NullReferenceException (if form is filled correctly, there would be no summary element, and if form is filled incorrectly, there would be no popup element).  </p>
</blockquote>

<p>This problem can be easyly handled by a <code>null</code> check of the returned <code>WebElement</code> from the call to <code>Driver.FindElement()</code>.  </p>

<p>A little bit more problematic is IMO the looping condition because the condition only could evaluate to <code>true</code> if the passed <code>TimeSpan</code> is negativ. If this is what you want you really should place a comment there. If you didn't mean to pass a negative timespan then you should reverse the looping condition to <code>DateTime.Now &lt; deadline</code>. </p>

<p>Extracting the repeated call to <code>TimeSpan.FromSeconds(5)</code> to a variable will make the code easier to read.  </p>

<p>You know although copy &amp; pasta will save time, you need to check if the pasted code is correct (empty data vs tooMuchData)  </p>

<blockquote>
<pre><code>    // check if empty data
    try
    {
        var tooMuchData = new WebDriverWait(Driver, TimeSpan.FromSeconds(5))
    .Until(ExpectedConditions.TextToBePresentInElement(Driver.FindElement(By.Id("popup")), "Empty data"));
        if (tooMuchData) return false;  
</code></pre>
</blockquote>

<p>Implementing the mentioned points will look like so  </p>

<pre><code>public bool? GetResult(TimeSpan timeout)
{
    var deadline = DateTime.Now.Add(timeout);
    var waitTimeout = TimeSpan.FromSeconds(5);

    do
    {
        WebElement summaryWebElement = Driver.FindElement(By.Id("summary"));
        if (summaryWebElement != null)
        {
            var success = new WebDriverWait(Driver, waitTimeout).Until(ExpectedConditions.TextToBePresentInElement(summaryWebElement , "Success!"));
            if (success) return true;
        }

        WebElement popupWebElement = Driver.FindElement(By.Id("popup"));
        if (popupWebelement != null)
        {
            var notEnoughData = new WebDriverWait(Driver, waitTimeout).Until(ExpectedConditions.TextToBePresentInElement(popupWebElement, "Not enough data"));
            if (notEnoughData) return false;

            var tooMuchData = new WebDriverWait(Driver, waitTimeout).Until(ExpectedConditions.TextToBePresentInElement(popupWebelement, "Too much data"));
            if (tooMuchData) return false;

            var emptyData = new WebDriverWait(Driver, waitTimeout).Until(ExpectedConditions.TextToBePresentInElement(popupWebElement, "Empty data"));
            if (emptyData) return false;
        }

    } while (DateTime.Now &gt; deadline);

    return null;
}  
</code></pre>

<p>Because the checks for the popup text only differs from the expected text you could think about using a foreach loop over an array containing the expected strings.</p>
    </div>