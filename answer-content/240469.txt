<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have a lot of problems in your code, so let's break them down.</p>

<p>First, you have a database class that is useless. Add all of your database access config (user, password, host, etc) in configuration files. Preferably in environment variables. Then, use PDO directly when you need a connection.</p>

<p>Second, you have a <code>ModelUser</code> class. Imagine your manager comes and requests you a feature to notify the user when he doesn't log in for a month. Is he gonna say "I want to notify the model user" or "I wan to notify the user"? So, rename your classe to <code>User</code>.</p>

<p>Third, your domain class (<code>User</code>) knows about database details. What if you want to save it in a file? Or send it throught a message queue? An <code>User</code> must have <code>email</code>, <code>password</code>, etc. It doesn't have a <code>$database</code>. That doesn't make sense.
Search for <code>Entity</code> and <code>Repository</code> patterns.</p>

<p>Fourth, you said: "The class ControllerUser is instantiated in a file called init.php". That's not cool. You should use the front controller pattern. You have a single entry point in your application that configures routes and tells to which controller a request should go.</p>

<p>Fifth, a Controller must only:</p>

<ol>
<li>Receive a request</li>
<li>Return a response</li>
</ol>

<p>Sixth, the view layer can't have any logic. It should be just html.</p>

<p>Seventh, you should follow the PSR-12 in you code style: <a href="https://www.php-fig.org/psr/psr-12/" rel="noreferrer">https://www.php-fig.org/psr/psr-12/</a></p>

<p>I strongly sugest you study more about OOP, Domain-Driven Design, design patterns, etc.</p>

<p>I have a simple MVC example but the code is in Portuguese:
<a href="https://github.com/CViniciusSDias/php-mvc" rel="noreferrer">https://github.com/CViniciusSDias/php-mvc</a></p>
    </div>