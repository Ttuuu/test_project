<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some suggestions:</p>

<ul>
<li>Passing the code through at least one linter such as flake8 or pycodestyle will make for more idiomatic and therefore readable code.</li>
<li>Do you have any automated tests? If so, do they test all four combinations of <code>weights</code> and <code>bin_index</code>?</li>
<li>Do you really need <code>weights</code> and <code>bin_index</code> to be defaulted? I'm generally suspicious of code which defaults parameter values without a very clear reason.</li>
<li><p>Functions are first class citizens in Python, so rather than your nested <code>if</code> statements you can decide which method to call and what the second parameter should be with two unnested <code>if</code> statements:</p>

<pre><code>if bin_index:
    binning_function = _bincenter
else:
    …

if weights:
    …
</code></pre></li>
<li>Naming is very important. I can't easily follow your code because things are named for what they <em>are</em> and not for what they contain or what they are used for. For example, <code>pointdict</code> tells me nothing about its contents and <code>res</code> could be short for “result”, “response” or something else entirely.</li>
<li>Reusing variables is generally discouraged - they make the information flow confusing, and they should be optimized away by the interpreter.</li>
<li>I don't remember the precedence rules other than for simple arithmetic by heart, so I'd enforce it using parentheses in expressions like <code>x//res+0.5</code>.</li>
</ul>

<p>Rather than using a <code>defaultdict(list)</code> you can just <code>pointdict.get(key, [])</code> if you know the dict is sparse. This is purposely not a suggestion because whether it's appropriate or not depends on the programming environment, but it is an option.</p>
    </div>