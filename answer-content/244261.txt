<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have some suggestions to make the code cleaner, not faster.</p>
<h2>Always try to pass the size of the maximum size to the Collection / Map when known</h2>
<p>The <code>ArrayList</code> has a default size of 10 elements, if you have more elements, the list will have to resize its internal pool. By setting the size, you can prevent the resize and make your code faster.</p>
<pre class="lang-java prettyprint-override"><code>//[...]
int totalPlayers = scanner.nextInt();
ArrayList&lt;Integer&gt; playerScores = new ArrayList&lt;&gt;(totalPlayers);
//[...]
int aliceTotalScores = scanner.nextInt();
ArrayList&lt;Integer&gt; aliceScores = new ArrayList&lt;&gt;(aliceTotalScores);
//[...]
</code></pre>
<h2>Always use the base class / interface in the left part of the variable when possible</h2>
<p>By setting the <code>java.util.List</code> interface in the variable part, this could make the code more refactorable in the future, since you could easily change the list type without changing everything (inheritance).</p>
<p><strong>Before</strong></p>
<pre class="lang-java prettyprint-override"><code> ArrayList&lt;Integer&gt; playerScores = new ArrayList&lt;&gt;(totalPlayers);
</code></pre>
<p><strong>After</strong></p>
<pre class="lang-java prettyprint-override"><code> List&lt;Integer&gt; playerScores = new ArrayList&lt;&gt;(totalPlayers);
</code></pre>
<h2>Replace the <code>for</code> loop with an enhanced 'for' loop</h2>
<p>In your code, you donâ€™t actually need the index provided by the loop, you can the enhanced version.</p>
<p><strong>Before</strong></p>
<pre class="lang-java prettyprint-override"><code>for (int i = 0; i &lt; aliceTotalScores; i++) {
   finalScores.add(aliceScores.get(i));
   finalScores.sort(Collections.reverseOrder());
   Set&lt;Integer&gt; set = new LinkedHashSet&lt;&gt;(finalScores);
   finalScores.clear();
   finalScores.addAll(set);
   System.out.println(finalScores.indexOf(aliceScores.get(i)) + 1);
}
</code></pre>
<p><strong>After</strong></p>
<pre class="lang-java prettyprint-override"><code>for (Integer aliceScore : aliceScores) {
   finalScores.add(aliceScore);
   finalScores.sort(Collections.reverseOrder());
   Set&lt;Integer&gt; set = new LinkedHashSet&lt;&gt;(finalScores);
   finalScores.clear();
   finalScores.addAll(set);
   System.out.println(finalScores.indexOf(aliceScore) + 1);
}
</code></pre>
<h2>Extract some of the logic to methods.</h2>
<p>To remove some of the code of the main method, you could move both list instantiation (playerScores &amp; aliceScores) to methods. Since the logic is similar, you could make only one method to read the inputs to a list and reuse the same for both cases.</p>
<pre class="lang-java prettyprint-override"><code>public static void main(String[] args) {
   List&lt;Integer&gt; playerScores = getPlayerScores(scanner);
   List&lt;Integer&gt; aliceScores = getAliceScores(scanner);
}

private static List&lt;Integer&gt; getAliceScores(Scanner scanner) {
   return getIntegers(scanner);
}

private static List&lt;Integer&gt; getPlayerScores(Scanner scanner) {
   return getIntegers(scanner);
}


private static List&lt;Integer&gt; getIntegers(Scanner scanner) {
   int size = scanner.nextInt();
   List&lt;Integer&gt; integers = new ArrayList&lt;&gt;(size);
   for (int i = 0; i &lt; size; i++) {
      integers.add(scanner.nextInt());
   }
   return integers;
}

</code></pre>
<p><strong>or</strong></p>
<pre class="lang-java prettyprint-override"><code>public static void main(String[] args) {
   List&lt;Integer&gt; playerScores = getIntegers(scanner);
   List&lt;Integer&gt; aliceScores = getIntegers(scanner);
}

private static List&lt;Integer&gt; getIntegers(Scanner scanner) {
   int size = scanner.nextInt();
   List&lt;Integer&gt; integers = new ArrayList&lt;&gt;(size);
   for (int i = 0; i &lt; size; i++) {
      integers.add(scanner.nextInt());
   }
   return integers;
}

</code></pre>
<h1>Refactored code</h1>
<pre class="lang-java prettyprint-override"><code>public static void main(String[] args) {
   Scanner scanner = new Scanner(System.in);
   List&lt;Integer&gt; playerScores = getPlayerScores(scanner);
   List&lt;Integer&gt; aliceScores = getAliceScores(scanner);
   List&lt;Integer&gt; finalScores = new ArrayList&lt;&gt;(playerScores);

   for (Integer aliceScore : aliceScores) {
      finalScores.add(aliceScore);
      finalScores.sort(Collections.reverseOrder());
      Set&lt;Integer&gt; set = new LinkedHashSet&lt;&gt;(finalScores);
      finalScores.clear();
      finalScores.addAll(set);
      System.out.println(finalScores.indexOf(aliceScore) + 1);
   }
}

private static List&lt;Integer&gt; getAliceScores(Scanner scanner) {
   return getIntegers(scanner);
}

private static List&lt;Integer&gt; getPlayerScores(Scanner scanner) {
   return getIntegers(scanner);
}


private static List&lt;Integer&gt; getIntegers(Scanner scanner) {
   int size = scanner.nextInt();
   List&lt;Integer&gt; integers = new ArrayList&lt;&gt;(size);
   for (int i = 0; i &lt; size; i++) {
      integers.add(scanner.nextInt());
   }
   return integers;
}
</code></pre>
    </div>