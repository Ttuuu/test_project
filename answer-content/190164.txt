<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Naming</h3>

<p>Your variable's names are pretty generic. Tell me what they are - use the name to give information - the characters are free.</p>

<p>The same goes for the function name - <code>IDWW</code>. I'm not sure what it should be doing.</p>

<p>I imagine you'd be good with names like</p>

<p><code>firstValue, secondValue, thirdValue, firstDistance, secondDistance, thirdDistance</code></p>

<p>I don't know what those are because they aren't given a <strong>Type</strong>. Your function also doesn't have a return <strong>Type</strong>. That means you're taking in 6 variants and returning a <strong>variant</strong>. That has impact.</p>

<h3>Variant</h3>

<p>When you don't define or type your variable, VBA will declare it as a <em>Variant</em>, which are <a href="https://msdn.microsoft.com/en-us/library/twcxd6b8.aspx" rel="nofollow noreferrer">objects</a>:</p>

<blockquote>
  <p><strong>Performance</strong>. A variable you declare with the Object type is flexible
  enough to contain a reference to any object. However, when you invoke
  a method or property on such a variable, you always incur late binding
  (at run time). To force early binding (at compile time) and better
  performance, declare the variable with a specific class name, or cast
  it to the specific data type.</p>
</blockquote>

<p>Total you are working with 12 Variants and a return Variant.</p>

<p>You also have 6 variables made of 1 letter and 1 number. The code is already pretty abstract, but seeing something like</p>

<pre><code>For i = k To j Step -1
    For n = 1 To 26
        If k * n &gt; j * n Then
            n = i * j
        Else
        n = i * k
        End If
    Next
Next
</code></pre>

<p>Gives me no confidence that I'll be able to decipher what's happening.</p>

<p>You also test like this twice -</p>

<pre><code>If Value2 &lt;&gt; "" And Dist2 &lt;&gt; "" Then
If Value3 &lt;&gt; "" And Dist2 &lt;&gt; "" Then
</code></pre>

<p>It seems like these should be optional arguments in the function, otherwise you're forcing the user to submit nulls.</p>

<pre><code>Private Function IDWW(ByVal firstValue As Long, ByVal firstDistance As Long, _
        Optional ByVal secondValue As Long, Optional ByVal secondDistance As Long, _
        Optional ByVal thirdValue As Long, Optional ByVal thirdDistance As Long) As Long
</code></pre>

<p>You can also give them default values. If you don't give them defaults, they choose the default value of their Type.</p>

<pre><code>Optional ByVal secondValue As Long = 0, Optional ByVal secondDistance As Long = 0,
</code></pre>

<p>You were testing for <code>""</code> which has a name = <code>vbNullString</code>. But what you should have been testing for is the equivalent for a Variant</p>

<pre><code>If IsEmpty(var) then
</code></pre>

<p>Something else you aren't testing for is whether the user passes something else in the Variant, like a Range. Or maybe a negative number. These are all things that can be eliminated with the right Type.</p>

<p>Like here -</p>

<pre><code>If Value2 &lt;&gt; "" And Dist2 &lt;&gt; "" Then
    a2 = Value2 / (Dist2) ^ 2
    b2 = 1 / (Dist2) ^ 2
Else
    a2 = 0
    b2 = 0
End If
</code></pre>

<p>If <code>a2</code> and <code>a3</code> were <code>Long</code> you wouldn't need to set them, they are by default <code>0</code>.</p>

<p>At the end</p>

<blockquote>
<pre><code>'Avoid a problem if all 3 distances are empty
 If b1 + b2 + b3 = 0 Then
    IDWW = 0
</code></pre>
</blockquote>

<p>Is that really what you're doing? Adding variants to get 0. But what if I submitted a negative distance? What if I submitted both a negative value and distance?</p>
    </div>