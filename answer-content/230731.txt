<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Welcome to Python!</h1>

<hr>

<h1>Choosing Rock/Paper/Scissors/</h1>

<p>This</p>

<pre><code>if choice == 'R':
    choice = "Rock"
elif choice == 'P':
    choice = "Paper"
elif choice == 'S':
    choice = "Scissors"
</code></pre>

<p>can be</p>

<pre><code>choice = [option for option in options if option.startswith(choice)][0]
</code></pre>

<p>Since you're grabbing only the first letter, you can make this comparison, instead of checking each option with its own if statement. This also takes advantage of list comprehension. The array is filled for every value that starts with <code>choice</code>. Since only one value will be in this list, you can simply grab the first value in the list <code>[0]</code>.
</p><hr>

<h1>Utilizing <code>in</code></h1>

<p>This</p>

<pre><code>if choice != 'R' or 'P' or 'S':
</code></pre>

<p>can be this</p>

<pre><code>if choice not in "RPS":
</code></pre>

<p>This simply checks if the choice is within the string, reducing the need to check each individual character separately.
</p><hr>

<h1>Unnecessary <code>while</code></h1>

<p>This</p>

<pre><code>while cpu_choice == choice:
    print("You chose", choice + "!")
    print("Computer chooses", cpu_choice + "!")
    break
</code></pre>

<p>is basically an if statement, since it's a check and only run once</p>

<pre><code>if cpu_choice == choice:
    print("You chose", choice + "!")
    print("Computer chooses", cpu_choice + "!")
</code></pre>

<p>We can make it even neater using <a href="https://cito.github.io/blog/f-strings/" rel="nofollow noreferrer"><code>string formatting</code></a></p>

<pre><code>if cpu_choice == choice:
    print(f"You chose {choice}!")
    print(f"Computer chooses {cpu_choice}!")
</code></pre>

<p>Also this</p>

<pre><code>while choice != cpu_choice:
</code></pre>

<p>should be this</p>

<pre><code>if choice != cpu_choice:
</code></pre>

<p></p><hr>

<h1>Imports</h1>

<p>Imports should go outside of functions, and at the top of the module</p>

<pre><code>import random

def main():
    ... code ...
</code></pre>

<p></p><hr>

<h1>Better Input Validation</h1>

<p>Right now, you check if the input is valid. If it isn't, you print "Invalid choice!". But you don't stop the program. It keeps running with that choice. You can simplify this by using a <code>while</code> loop here, only breaking if the input is valid:</p>

<pre><code>choice = input("Enter your choice: ")
while choice not in "RPS":
    print("Invalid choice!")
    choice = input("Enter your choice: ")
</code></pre>

<p></p><hr>

<h1>Unused Variables</h1>

<p>This</p>

<pre><code>game_active = True
</code></pre>

<p>is never used in your program. You should remove this to avoid confusion, as I initially thought this was the flag that determined if the game was to be run again.</p>
    </div>