<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with the answer given by Stingy. Also note that with the collector implementation you are not short-circuiting, so with a stream of a billion elements, you will still process them all even when the first element encountered is a left.</p>

<p>That being said, I will comment on a thing or two for this implementation:</p>

<ul>
<li><p>Users of your collector generally do not really care about the type of the accumulator, so you can wildcard the type instead:</p>

<pre><code>&lt;L, R&gt; Collector&lt;Either&lt;L, R&gt;, ?, Either&lt;L, List&lt;R&gt;&gt;&gt; sequence()
</code></pre></li>
<li><p>I would swap the checks in your combiner, it makes it more readable in my opinion:</p>

<pre><code>Either&lt;L, List&lt;R&gt;&gt; firstEither = firstEitherContainer.get(0);
if (firstEither.isLeft()) {
    return firstEitherContainer;
}
Either&lt;L, List&lt;R&gt;&gt; secondEither = secondEitherContainer.get(0);
if (secondEither.isLeft()) {
    return secondEitherContainer;
}
firstEither.getOrError(getErrorMsg).addAll(secondEither.getOrError(getErrorMsg));
return firstEitherContainer;
</code></pre></li>
</ul>
    </div>