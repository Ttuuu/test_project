<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Something about the cryptography:</p>

<ul>
<li>Do you still use the unmaintained PyCrypto library or the new PyCryptodome (a maintained mostly compatible drop-in-replacement)?</li>
<li>You are using the CBC mode correctly (random IV for encryption), which is good.</li>
<li>Data is not authenticated - even encrypted data can be changed without the possibility to detect. You can use HMAC (hash based message authentication code) or an AEAD (authenticated encryption with additional data) encryption mode.</li>
<li>Your password derivation function has good ideas (Rounds + Salt), but is still a bit weak: Only 9 rounds by default are too less for todays standards. As the derivation functions apply the same ideas as for password storage, consider looking at those: E.g. PBKDF2 (which is included in Python) or Argon2 (one of the most modern).</li>
</ul>
    </div>