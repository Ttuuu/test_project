<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>catch (Exception)
{

    throw;
}  
</code></pre>
</blockquote>
<p>Well this won't buy you anything but a few more lines of code. Just remove the <code>try..catch</code> at all. This construct just let the exception bubble up the call stack like it would if you wouldn't have the <code>try..catch</code> at all.</p>
<hr>
<h2>public void ProcessLeaveRequest</h2>
<ul>
<li>You don't validate all of the given method arguments.</li>
<li>The <code>reason</code> argument isn't used at all.</li>
<li>You are throwing <code>Exception</code> instead of e.g <code>ArgumentOutOfRangeException</code> which would be the better fit.</li>
<li>it seems (from the <code>FindEmployee()</code> method) that <code>Employee</code> is a struct (hint <code>default(Employee)</code>) which makes it possible that you add something into your database which doesn't belongs there. Assume you pass an <code>epmloyeeId</code> which doesn't exists into the <code>FindEmployee()</code> method you would the get a <code>default(Employee)</code> back which in the case of a struct would have default property values for <code>StartDate</code> and <code>IsMarried</code>. If this properties would be seen as valid in your validateion part, you would end up with a <code>EmployeeLeaveDetail</code> in your database for an employee which doesn't exist.</li>
</ul>
<hr>
<p>You should always use braces <code>{}</code> although they might be optional. By not using them you are in danger of introducing bugs which are hard to track. I would like to encourage you to always use them. This will help you to make your code less error prone.</p>
<p>This is meant for <code>if</code>, <code>else if</code> and <code>else</code>.</p>
    </div>