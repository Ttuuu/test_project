<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Your question</h2>

<blockquote>
  <p><em>Does anyone have a better idea?</em></p>
</blockquote>

<p>There are multiple posts on SO like <a href="https://stackoverflow.com/q/3746678/1575353">Force a checkbox to always submit, even when unchecked</a>, which has <a href="https://stackoverflow.com/a/6621928/1575353">an answer</a> that suggests adding a hidden input with the same name as the checkbox and the opposite value (e.g. "<em>no</em>"). </p>

<blockquote>
<pre><code>&lt;input type="hidden" name="checkbox1" value="off"&gt;
&lt;input type="checkbox" name="checkbox1" value="on"&gt; My checkbox
</code></pre>
</blockquote>

<p>Perhaps you should consider using different elements - e.g. radio buttons, which can be <a href="https://stackoverflow.com/a/37769450/1575353">styled like more modern toggle inputs (e.g. iOS style)</a></p>

<h2>Review of existing code</h2>

<p>Looking at <code>interceptSubmit()</code> I see that:</p>

<ul>
<li><strong>Lines aren't terminated with semi-colons</strong>. While they are only required <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Automatic_semicolon_insertion" rel="nofollow noreferrer">after a handful of statements</a>, it could lead to errors if somehow whitespace got removed.</li>
<li><p><strong>The variable name <code>form</code> is slightly misleading</strong> - typically a <em>form</em> refers to a <code>&lt;form&gt;</code> element, but in this case the variable is an HTML collection of elements with a particular class name, which appears to be two checkboxes with the given HTML. </p>

<blockquote>
<pre><code>let form = document.getElementsByClassName('custom-control-input')
</code></pre>
</blockquote>

<p>A more appropriate name might be <code>customControlInputs</code></p></li>
<li><strong><code>form</code> isn't re-assigned</strong> so it could be declared with <code>const</code> to avoid accidental re-assignment</li>
<li><strong><code>document.getElementsByClassName()</code> returns a Live <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection" rel="nofollow noreferrer">HTMLCollection</a><sup><a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName" rel="nofollow noreferrer">1</a></sup></strong> so that assignment can take place outside of the function - perhaps an ideal place would be as soon as the DOM is ready</li>
<li><strong><code>for</code> loop variable <code>i</code> is a global variable</strong> because it is not declared with <code>var</code>, <code>let</code>, etc. In general it is best to avoid global variables to avoid accidental re-assignment.</li>
<li><strong>a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of" rel="nofollow noreferrer"><code>for...of</code> loop</a> could be used</strong> instead of a regular <code>for</code> loop if <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> is supported by all target browsers. That would allow simplification of accessing elements of the collection.</li>
</ul>
    </div>