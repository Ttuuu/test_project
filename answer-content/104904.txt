<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>React has a small amount of boilerplate you need to repeat in order to keep your components well documented, thus the usage of propTypes which is one of great things to validate data.</p>

<p>There is nothing wrong with how your components are structured, as react "ways" were followed.</p>

<p>Only thing I can observe and which can be improved is to use strict comparisons, eg: <code>===</code> instead of <code>==</code> and so on. Why? </p>

<blockquote>
  <p>The identity operator returns true if the operands are strictly equal (see above) with no type conversion.</p>
</blockquote>

<p>More information at <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators" rel="nofollow">MDN</a></p>

<p>As a bonus if your project uses Babel then you can use const and let for defining variables.</p>

<p>Also you could transform:</p>

<pre><code>var {label, id} = this.props;
var other = _.omit(this.props, 'label');
</code></pre>

<p>To:</p>

<pre><code>const {label, id, ...other} = this.props;
</code></pre>

<p>You can notice that we have eliminated the use of lodash/underscore.</p>

<p>You can find more about Babel at their <a href="http://babeljs.io/docs/learn-es2015/" rel="nofollow">homepage</a>.</p>
    </div>