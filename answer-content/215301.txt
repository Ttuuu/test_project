<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Extract common code into a common block. You only need the <code>case</code> to determine the save-location. The note itself can be read before switching:</p>

<pre class="lang-bsh prettyprint-override"><code>#...
read -p "What is this note for?
Work
School
Shopping
&gt; " topic
read -p "
Note 
&gt; "  note
save=""
case $topic in
  "Work")
    save=$wsave
    break
    ;;
  "School")
    save=scsave
    break
    ;;
  "Shopping")
    save=$shsave
    break
    ;;
  *) echo "Error: Selection was not on list, try again.
"
    ;;
esac
if [[ $save!="" ]]; then
  echo "$date: $note" &gt;&gt; "$save"
  echo "Note saved to $save"
fi
#...
</code></pre>

<p>this removes the duplication in the case-blocks and still allows you to clearly work with what you expect for every note.</p>

<hr>

<p>The variable names could use a bit more... characters in general. You could even use snake_case to differentiate between words and all that. This allows you to make the code significantly more speaking.</p>

<hr>

<p>The comment <code>#list</code> is really not adding any value. <code>#get the date</code> is already clearly outlined by the code, maybe a more human readable format explanation might be useful there. <code>#save locations</code> should be completely replaceable with proper variable names.</p>

<hr>

<p>A word on the save locations you are using. As it stands, these are totally visible and will clutter the user's home directory. You should consider making these hidden by default by prefixing the filenames with a <code>.</code>, maybe even put them into a separate folder in the home-directory.</p>
    </div>