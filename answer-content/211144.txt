<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your <code>fibonacci</code> doesn't need the variables <code>a</code> and <code>b</code>; <code>out</code> is already tracking them.</p>

<pre><code>def fibonacci(n):
    out = [1,2]
    for i in range(n-2):
        out.append(out[i]+out[i+1])
    return out
</code></pre>

<p>You should build both the encoding and coding codebooks at the same time, so you don't have to run the same function twice to get both.</p>

<p>You can build your codebooks as you find the codes:</p>

<pre><code>def makeCodebook():
    alpha = "ETAOINSRHLDCUMFPGWYBVKXJQZ"
    F = fibonacci(10)
    F.reverse()
    D = {}
    E = {}
    for x,letter in enumerate(alpha,1):
        while x != 0:
            code = []
            for f in F:
                if f &lt;= x:
                    code.append("1")
                    x = x-f
                else:
                    code.append("0")

            while code[0] == "0":

                code.pop(0)
            code.reverse()
            code.append("1")
        D[code] = letter
        E[letter] = code
    return D,E
</code></pre>

<p>Note that this eliminates the need to keep a <code>codes</code> list.</p>

<p>Then you can have</p>

<pre><code>def prefixCode(text,decode=False):
     D, E = makeCodebook(decode=decode)
     if not decode:
          return "".join([E[letter] for letter in text])
</code></pre>
    </div>