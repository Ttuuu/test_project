<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are a new contributor and we try to be nice, but one can only be so nice when the code AND the most of your reasoning is so poor.</p>
<p>THIS SOUNDS LIKE HOMEWORK with all the restrictions you are giving.</p>
<p>You seem to be obsessed with making this a one-liner.  Such obsessions will weigh you down and lead to poor code.  Use one-liners where they make the best sense in a short, simple call.</p>
<p>You return an int but use a double internally.  If you cast the double to an int, your method will always (A) return 0 or (B) throw an exception.</p>
<p>There is the Principle of Least Astonishment and your code violates in 2 ways.  If a caller wants to GetRandomNumberHigherThanHalf, then it would astonish them to throw an exception.  They would expect the method would correctly keep trying until it finds the right value to return.  And the 2nd violation is that your method could return 0.5, which is NOT HIGHER than Half.</p>
<p>Make up your mind if you really want a Double or an int.  If you want an int, you may want it to fall within a range, so you could use this <a href="https://docs.microsoft.com/en-us/dotnet/api/system.random.next?view=netcore-3.1#System_Random_Next_System_Int32_System_Int32_" rel="nofollow noreferrer">Next overload</a>.</p>
<p>If you take time to read the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.random.-ctor?view=netcore-3.1" rel="nofollow noreferrer">Random constructor</a> comments, look at the bottom at this text:</p>
<blockquote>
<p>Another option is to instantiate a single Random object that you use
to generate all the random numbers in your application. This yields
slightly better performance, since instantiating a random number
generator is fairly expensive.</p>
</blockquote>
<p>With your method, if you quickly call it repeatedly, then it will not return a different random number, but rather the same number.  If you instantiated a Random instance once for your class, then you would not have this problem.</p>
<p>Again, if you clearly think out what you want ... do you want a Double &gt; 0.5 but less than 1.0, or do you want a Double scaled between 2 values, or do you want an integer falling between 2 values, then pick the right Random method.  And I would not throw if the value is less than 0.5; rather I would simply add 0.5 to the returned value.</p>
    </div>