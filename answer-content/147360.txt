<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You use <code>for index, letter in enumerate(string_list):</code> but don't use the <code>index</code>.
Instead of using <code>string_list.index(vowel)</code> in the second loop you can instead build an index list in the first loop.
And reverse either the index list or the vowels list.
This should have a better time complexity as <code>string_list.index(vowel)</code> seems to be making your code time complexity \$O(n^2)\$.</p>

<p>I'd also change your code to follow <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a>, and remove all the redundant <code>_list</code> parts in your variable names.
As this makes your code easier to read.</p>

<p>Finally I'd return, rather than print, the final list as it makes the code  more reusable. And, as Mathias commented, you could also change your return type to a string, as giving a string as input and getting a list of strings as output is a little odd.</p>

<pre><code>VOWELS = set('aeiou')

def reverse_vowels(string):
    string = list(string)
    vowels = []
    indexes = []

    for index, letter in enumerate(string):
        if letter in VOWELS:
            vowels.append(letter)
            indexes.append(index)

    for i, char in zip(indexes, reversed(vowels)):
        string[i] = char

    return ''.join(string)
</code></pre>
    </div>