<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I like nitwitting about kotlin, therefor only feedback about the language.</p>
<h1><a href="https://kotlinlang.org/docs/reference/functions.html#single-expression-functions" rel="nofollow noreferrer">single expression functions</a></h1>
<p>If your function exists out of one expression, you can write it easier.<br>
Instead of having to write:</p>
<pre><code>override fun getItemCount(): Int {
    return items.size
}
</code></pre>
<p>you can write:</p>
<pre><code>override fun getItemCount() = items.size
</code></pre>
<h1>code duplication</h1>
<p>Try to remove as much duplication as possible.</p>
<pre><code>if (audioRecordUI.isActive)
    itemView.name.setTextColor(itemView.context.getColor(R.color.grenadier))
else 
    itemView.name.setTextColor(itemView.context.getColor(R.color.black))
</code></pre>
<p>In the code above, you do three things:</p>
<ol>
<li>Choose a colorId</li>
<li>Get the matching color</li>
<li>set the itemview to the color</li>
</ol>
<p>Actions 2 and 3 are duplicated.<br>
With a simple variable, this code becomes much clearer.</p>
<pre><code>val textColorId = if(audioRecordUi.isActive) R.color.grenadier else R.color.black
itemView.name.setTextColor(itemView.context.getColor(textColorId))
</code></pre>
<h1>scoped functions</h1>
<p>When you need to reuse a variable multiple times after eachother, you can use a scoped function, eg <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/also.html" rel="nofollow noreferrer">also</a> and <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/apply.html" rel="nofollow noreferrer">apply</a>.<br>
instead of writing:</p>
<pre><code>itemView.select.isChecked = !itemView.select.isChecked
</code></pre>
<p>you can write:</p>
<pre><code>itemView.select.also { it.isChecked = !it.isChecked }
</code></pre>
<p>or even:</p>
<pre><code>itemView.select.apply { this.isChecked = !this.isChecked }
</code></pre>
<p>And as you don't have to write <code>this</code>:</p>
<pre><code>itemView.select.apply { isChecked = !isChecked }
</code></pre>
<h1>Personal choice</h1>
<p>I personally don't like the three lines for a simple if:</p>
<pre><code>if (!isSelectableMode) {
    clearSelect()
}
</code></pre>
<p>If it's this short, I would place it on one line.
If it would be a bit longer, two lines without brackets.</p>
<pre><code>if (!isSelectableMode) clearSelect()
</code></pre>
    </div>