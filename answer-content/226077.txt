<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You probably do want <code>std::forward</code> here. You're using forwarding references with your templated &amp;&amp; types, which means that they might actually be lvalues which the rest of the program expects to remain valid. <code>std::move</code> is basicall a promise that says "The owner is done with this object; feel free to plunder it". Obviously that's dangerous if it's false! <code>std::forward</code>, by contrast, will intelligently say whether something is free to plunder, based on whether it was free for plundering when passed as a parameter in the first place.</p>

<p>One other thing that I would suggest might be helpful is adding some sort of error detection. It would take a bit of work, but stuffing <code>compose</code> with a few well placed static_assert lines or similar would make a world of difference when trying to get something to build which has a few layers of composition. I'm thinking you could construct something helpful with <a href="https://en.cppreference.com/w/cpp/types/is_invocable" rel="nofollow noreferrer">is_invocable</a> although that would require c++17. </p>
    </div>