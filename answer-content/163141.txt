<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3><a href="https://www.python.org/dev/peps/pep-0008/" rel="noreferrer">You can make it look nicer!</a></h3>

<p>Instead of writing comments in front of your functions, do it with docstrings:</p>

<pre><code>def roll_dice():
    """Print a number between 1 and 6 (side of the dice)"""
    print(random.randint(1, 6))
</code></pre>

<p>You can observe that I made a couple of changes to this:</p>

<ul>
<li>removed the extra space you had in your <code>print()</code> function</li>
<li>added the docstring I mentioned above</li>
<li>modified the content of docstring (your function doesn't return anything, it just prints a random number). A beginner programmer might get the wrong idea.</li>
<li>used 4-spaces indentation instead of two.</li>
<li>2 new lines in front of your function</li>
</ul>

<h3>Now, let's try to make it even better!</h3>

<p>You have two <a href="https://en.wikipedia.org/wiki/Magic_number_(programming)" rel="noreferrer">magic numbers</a>, 1 and 6. Since you put the logic inside a function, let's make use of it and define those as arguments to our function:</p>

<pre><code>def roll_dice(min_dice, max_dice):
    """Print a number between min_dice and max_dice (side of the dice)"""
    print(random.randint(min_dice, max_dice))
</code></pre>

<p>The above has the advantage of an easier customization of your program. More, you can abstract things even more, and give those arguments a default value:</p>

<pre><code>def roll_dice(min_dice=1, max_dice=6):
    """Print a number between min_dice and max_dice (side of the dice)"""
    print(random.randint(min_dice, max_dice))
</code></pre>

<p>More, you can go a step further and make the function actually do something. Let's make it so that it returns a value. Just replace the <code>print()</code> function with <code>return</code>.</p>

<p>Okay, so far so good. I think we've managed to handle this part pretty well. Let's move on.</p>

<p>First, let's apply the changes we did in the first part, to this one too:</p>

<pre><code>print("""
Welcome to my python random dice program!
To start press enter!
Whenever you are over, type quit.
""")

flag = True
while flag:
    user_prompt = input("&gt;")
    if user_prompt.lower() == "quit":
        flag = False
    else:
        print("Rolling dice...\nYour number is:")
        roll_dice()
</code></pre>

<p>What I don't like about this, is the fact that you didn't wrap the logic inside a function. Let's do that first:</p>

<pre><code>def play():
    print("""
    Welcome to my python random dice program!
    To start press enter!
    Whenever you are over, type quit.
    """)
    flag = True
    while flag:
        user_prompt = input("&gt; ")
        if user_prompt.lower() == "quit":
            flag = False
        else:
            print("Rolling dice...\nYour number is:")
            roll_dice()
</code></pre>

<p>The changes that I'd like to make to this function are the following:</p>

<ul>
<li>remove the <code>flag</code> variable</li>
<li><p>move out the intro message in it</p>

<pre><code>def play():
    while True:
        user_prompt = input("&gt; ")
        if user_prompt.lower() == "quit":
            return False
        else:
            print("Rolling dice...\nYour number is: {}".format(roll_dice()))
</code></pre></li>
</ul>

<p>Moving next, let's build our <code>main()</code> function:</p>

<pre><code>def main():
    print("Welcome to my python random dice program!\n"
          "To start press ENTER!\n"
          "Whenever you are over, type quit.\n")
    play()
</code></pre>

<p>Last but not least, let's call our main function:</p>

<pre><code>if __name__ == "__main__":
    main()
</code></pre>

<p>You can see I added an extra line: <code>if __name__ == "__main__"</code>. By doing the main check, you can have that code only execute when you want to run the module as a program and not have it execute when someone just wants to import your module and call your functions themselves.</p>

<hr>

<p>The full code:</p>

<pre><code>import random


def roll_dice(min_dice=1, max_dice=6):
    """Print a number between min_dice and max_dice (side of the dice)"""
    return random.randint(min_dice, max_dice)


def play():
    """Return false if user enters 'quit'. Otherwise, print a random number"""
    while True:
        user_prompt = input("&gt; ")
        if user_prompt.lower() == "quit":
            return False
        else:
            print("Rolling dice...\nYour number is: {}".format(roll_dice()))


def main():
    print("Welcome to my python random dice program!\n"
          "To start press ENTER!\n"
          "Whenever you are over, type quit.\n")
    play()

if __name__ == "__main__":
    main()
</code></pre>
    </div>