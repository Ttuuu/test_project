<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you are dealing with digits, you at some point must pick a base (in this case base 10). So converting the number to a string is not a bad way of getting the digits. I would keep it simple, and just check each digit and see if it is one of the digits you want.</p>

<pre><code># Incorporating the other suggestions to loop over the chars directly rather than using an index
def count_even_digits(n, n_digits):
    count = 0
    for c in str(n):
        if c in "02468":
            count += 1
    return count
</code></pre>

<p>You could follow up with the other suggestion to use the built-in sum,</p>

<pre><code>def count_even_digits(n, n_digits):
    return sum(c in "02468" for c in str(n))
</code></pre>

<p>Using either of these approaches have the advantage that you only do the conversion from int =&gt; str, rather than (implicit for decimal) int =&gt; str =&gt; int.</p>
    </div>