<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The number of lines is seldom a measure of quality. It is always better to use more lines if it makes the code more readable or more efficient. Why do you want fewer lines?</p>

<p>Anyway, since this is a bit of "a big code dump," I'm just going to skim over it and point the most obvious things. It's not an exhaustive list. You can start improving the code from these.</p>

<p><strong>Window.Java</strong></p>

<p>Pararameters names <code>x</code> and <code>y</code> are reserved for indexing a two dimensional map, e.g. pinpointing a pixel in an image. The code uses them for dimension, where <code>width</code> and <code>height</code> would be better.</p>

<p><strong>Main.Java</strong></p>

<p>I don't remember much of Swing anymore, but shouldn't the window resize itself to fit the frame? So passing the frame size to window would be redundant as it's the Frame you want to be exactly 1800x1000 pixels.</p>

<p><strong>Frame.java</strong></p>

<p>You can see from the implemented interfaces that this class loads on responsibilities. Refactor the listeners into standalone classes so the frame doesn't need to be responsible for interpreting mouse movement (<a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">single responsibility principle</a>) and such. The frame should only be reponsible for displaying the graphics.</p>

<p>This class is a bit of a mess. Cells are stored in a redundant array of rows and columns. A two dimensional array, or a one dimensional array with index calculated from x and y location would be easier to understand as they are common constructs in this kind of application.</p>

<p><strong>General</strong></p>

<p>There is a separate class for Cell but in Game of Life the relation of the Cells is just as important. There should be a separate class for the Grid that contains the cells. Not just a bunch of ArrayLists. The rules that control the life and death of cells should be in yet another class. That class would be the game engine.</p>

<p>The Frame should not be controlling the game. The timer should be a separate class which tells the game engine to update the game model and send events to the Frame to let it know that the visual representation needs to be updated. Look at the <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" rel="nofollow noreferrer">Model-View-Controller</a> design pattern.</p>
    </div>