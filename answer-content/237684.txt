<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Three things to add to MJ713's answer:</p>

<p>For mutually exclusive options, use <code>if ... elif ...</code>.  When a match is found, the rest of the conditions are skipped.  It may also help to put the order the tests so that the most common case is first and the least common case is last.</p>

<p><code>dict.setdefault(key, default_value)</code> returns dict[key] if it is in the dict. Otherwise, it sets dict[key] to default_value and returns that.</p>

<p>Avoid so called "magic numbers".  If someone else looks at your code, they won't know what <code>3</code> means.  Indeed, you put a note in the problem description to say that <code>3</code> and <code>4</code> indicate break start/stop times.  The numbers also make it more difficult to change the code (e.g., are you sure the 3 you are about to change is a break start and not just a 3?).  It would be better to use a global constant or an enum.</p>

<p>Put together:</p>

<pre><code>DAY_START = 1
BREAK_RESET = 2
BREAK_END = 3
BREAK_START = 4
DAY_END = 5

def collect_data(data):

    request = {}

    for clock_event in data:
        clock_type = clock_event['clock_type']

        if clock_type == BREAK_START:
            breaks = request.setdefault("break", [])
            breaks.append({"start": clock_event["start"]})

        elif clock_type == BREAK_END:
            request["break"][-1]["end"] = clock_event["end"]

        elif clock_type == DAY_START:
            request.update({"name": clock_event["name"],
                            "start": clock_event["start"]})

        # handle other clock types

        else:
            raise ValueError(f"Invalid 'clock_type': {clock_type}")    

    return request
</code></pre>
    </div>