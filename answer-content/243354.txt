<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Aho-Corasick algorithm</h3>

<p>Perhaps another approach is in order.  I'd suggest the <a href="https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm" rel="nofollow noreferrer">Aho-Corasick</a> algorithm.  Here's the original paper <a href="http://cr.yp.to/bib/1975/aho.pdf" rel="nofollow noreferrer">Efficient String Matching: An Aid to Bibliographic Search</a> (pdf).</p>

<ol>
<li>Create a mapping from gene to gene index and weight.</li>
<li>Build the DFA with the all of the genes.</li>
<li>Loop over the DNA tests</li>
<li>Scan each DNA test using the DFA.</li>
<li>For each gene returned by the DFA, look up the index and weight.</li>
<li>If the index is in the allowed range for that DNA, add the weight to the running total for that DNA</li>
<li>Keep track of the min and max scores for each DNA test</li>
<li>Output the results</li>
</ol>

<p>Don't have time now.  I'll try to code it up later.</p>
    </div>