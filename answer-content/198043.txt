<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Avoid wildcard imports</h3>

<p><code>from ... import *</code> is not recommended.
Especially when there are imports from multiple packages,
it makes it difficult to know where some symbol comes from.
If you find it tedious to spell out the package names when using functions,
consider importing with a shorter alias.</p>

<h3>Always use context manager when opening files</h3>

<p>You did use <code>with open(...)</code> in some places,
but not in <code>get_json_file_contents</code>.
Maybe I'm missing something,
but I suggest to rewrite this with a context manager.</p>

<h3>Return empty objects instead of <code>None</code> when possible</h3>

<p>Callers of <code>get_json_file_contents</code> must check for <code>None</code> before looping over the returned value.
If you don't mind changing <code>get_json_file_contents</code> to return an empty list,
then callers can become simpler.</p>

<p>Note that <code>retrieve_user</code> doesn't check for <code>None</code> before using the returned value. That looks like a bug.</p>

<h3>Logical error</h3>

<p>There is a logical error here:</p>

<blockquote>
<pre><code>user = retrieve_user(username)
password_hash = user['password']
if not user:
    return False
</code></pre>
</blockquote>

<p>The <code>if</code> statement should come before accessing <code>user['password']</code>,
otherwise it doesn't make sense, and probably a bug.</p>

<h3>Style</h3>

<p>This is not Pythonic:</p>

<blockquote>
<pre><code>if not check_password(password, password_hash):
    return False
return True
</code></pre>
</blockquote>

<p>It would be better to use the boolean expression directly:</p>

<pre><code>return check_password(password, password_hash)
</code></pre>

<h3>Readability</h3>

<p>I think it would be better to add more blank lines to visually separate bigger logical steps. In particular, in <code>add_user</code>. Currently it looks like a long blob of code.</p>

<p>Some of the names are a bit too long for my taste, with redundant terms.
For example in <code>check_if_user_already_exists</code> the term "already" is definitely redundant.
You will probably not like it,
but I would reduce this one to <code>user_exists</code>.</p>
    </div>