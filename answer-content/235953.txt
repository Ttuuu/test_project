<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are already tools for choosing elements from a collection with some given probabilities. In the standard library there is <a href="https://docs.python.org/3/library/random.html#random.choices" rel="noreferrer"><code>random.choices</code></a>, which takes the values, the probabilities and the number of items you want:</p>

<pre><code>import random

values = ["get_10_20", "get_20_30"]
#p = [0.5 * 0.6 + 0.5 * 0.4, 0.5 * 0.4 + 0.5 * 0.6]
p = [0.5, 0.5]

n = 10
random.choices(values, weights=p, k=n)
# ['get_10_20', 'get_10_20', 'get_10_20', 'get_10_20', 'get_10_20', 'get_20_30',
#  'get_20_30', 'get_20_30', 'get_10_20', 'get_10_20']
</code></pre>

<p>The other possibility is to use <a href="https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.random.choice.html#numpy.random.choice" rel="noreferrer"><code>numpy.random.choice</code></a> for this, which allows you to directly generate multi-dimensional data:</p>

<pre><code>values = ["get_10_20", "get_20_30"]
p = [0.5, 0.5]

n, m = 2, 3
np.random.choice(values, p=p, size=(n, m))
# array([['get_10_20', 'get_10_20', 'get_20_30'],
#        ['get_20_30', 'get_20_30', 'get_20_30']], dtype='&lt;U9')
</code></pre>

<p>Both approaches assume that you can combine the probabilities to a total probability for each value. The <code>numpy</code> method enforces that they sum to one, while the standard library <code>random</code> does that for you, if necessary.</p>
    </div>