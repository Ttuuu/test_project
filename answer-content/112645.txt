<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Builder Method Names</h3>

<p>It's probably a matter of taste, but <code>Range.range(1, 10);</code> and the other two overloaded calls looks a bit redundant. It would look better as <code>Range.of(1, 10);</code>, wouldn't it?</p>

<h3>Constants</h3>

<p>It's very nice that the three <code>int</code> fields are final, but <code>size()</code> method performs calculations on each invocation of the method (plus if <code>isEmpty()</code> is called!), to produce the same result repetitively.</p>

<p>There should be a <code>final int size</code> field, calculated in the constructor (I wouldn't recommend to use lazy patterns here).</p>

<h3>contains(Object)</h3>

<p>What will happen if it was called with <code>null</code> arg? A <code>NullPointerException</code>. Since the <code>ClassCastException</code> is caught, I'd vote to add the NullPointer there also.</p>

<p>However, there is an alternative for the <code>try-catch</code> block in this case:</p>

<pre><code>public boolean contains(int n) {
  boolean inBounds = step &gt; 0 ? (start &lt;= n) &amp;&amp; (n &lt; stop)
                              : (start &gt;= n) &amp;&amp; (n &gt; stop);
  return inBounds &amp;&amp; (n - start) % step == 0;
}

@Override
public boolean contains(Object o) {
    return false;
}
</code></pre>

<h3>Logic</h3>

<p>According to the tests and the implementation, ranges like (1, 10, -1), (10, 1, 1) are considered as empty. This choice looks a bit weird, because these ranges have valid bounds, but the value of the <code>step</code> field is inconsistent with these bounds, making them senseless. I think that the constructor arguments should be validated, with an <code>IllegalArgumentException</code> thrown for such cases.</p>

<p>And what about ranges like (1, 10, 20), (10, 1, -20) ? Are they also empty?</p>

<p>If the current implementation does not correspond to a strict requirement, I'd suggest to define an <em>empty range</em> as a range where the <code>start</code> and the <code>stop</code> values are equal.</p>

<p><em>P.S.</em> please remove the <code>main(args)</code> method from <code>Range</code> class. There is already <code>RangeTest</code> for that.</p>
    </div>