<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3><code>break</code> statements after <code>return</code></h3>

<p>While it is a great habit to include the <code>break</code> statements, there is no need to include <code>break</code> statements following a <code>return</code>, since anything following the <code>return</code> statement within a function is unreachable.</p>

<h3><code>switch(true)</code></h3>

<p>while this works because each <code>case</code> statement must evaluate to true, it is simpler to just use <code>if</code> statements. Your logic checks if the value is less than 50, then if it is greater than 49 and less than 201. The requirements never specified if the values would be integers, floats, etc. So it would be wise to consider a value like 49.5. That value would be less than 50 so the first condition would be true. However if the value was $200.50 the second condition would evaluate to true, even though the value was more than 200. So update the condition to <code>cost &lt;= 200</code>. Otherwise if neither of those conditions have been met, the value <strong>must</strong> be more than 200.</p>

<pre><code>function calculateTip(cost) {
    if (cost &lt; 50) {
        return cost * .2;
    }
    if (cost &lt;= 200) {
        return cost * .15;
    }
    return cost * .1;
}
</code></pre>

<h3>Error</h3>

<p>The default case of the switch statement merely calls <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" rel="nofollow noreferrer"><code>Error</code></a></p>

<blockquote>
<pre><code>default:
    Error('Unsupported input.');
</code></pre>
</blockquote>

<p>This likely won't do what you expect. If you want an error to be thrown, then instantiate an error with the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new" rel="nofollow noreferrer"><code>new</code></a> operator and precede it with the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/throw" rel="nofollow noreferrer"><code>throw</code></a> operator:</p>

<pre><code>throw new Error('Unsupported input.');
</code></pre>

<p>It would be wise the check the input before comparing the value against other numbers, perhaps with the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat" rel="nofollow noreferrer"><code>parseFloat()</code></a> function:</p>

<pre><code>function calculateTip(cost) {
    if (!parseFloat(cost)) {
        throw new Error('Unsupported input.');
    }
</code></pre>

<p>That way anything that cannot be coerced the an integer (e.g. <code>{}</code>) will cause the error to be thrown.</p>

<h3>Updated code</h3>

<p>See the code below with the advice above implemented.</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var bills = [124, 48, 268];
var totals = [];
var pointlessArray = [];

function calculateTip(cost) {
  if (!parseFloat(cost)) {
    throw new Error('Unsupported input.');
  }
  if (cost &lt; 50) {
    return cost * .2;
  }
  if (cost &lt;= 200) {
    return cost * .15;
  }
  return cost * .1;
}

function makePointlessArray(inputArray) {
  var length = inputArray.length;
  for (var i = 0; i &lt; length; i++) {
    pointlessArray[i] = calculateTip(inputArray[i]);
  }
}

function calculateTotal(billArray) {
  var length = billArray.length;
  for (var i = 0; i &lt; length; i++) {
    totals[i] = billArray[i] + calculateTip(billArray[i]);
  }
}

makePointlessArray(bills);
calculateTotal(bills);

console.log(`The bills are: ${bills}`);
console.log(`The calculated tips are: ${pointlessArray}`);
console.log(`The calculated totals are: ${totals}`);</code></pre>
</div>
</div>

    </div>