<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The solution below is very compact. It avoids unnecessary checks and loops only through the relevant elements. You can check the working codepen here: 
<a href="http://codepen.io/PiotrBerebecki/pen/RRGaBZ" rel="nofollow">http://codepen.io/PiotrBerebecki/pen/RRGaBZ</a>.</p>

<pre><code>function pairwise(arr, arg) {
  var sum = 0;
  for (var i=0; i&lt;arr.length-1; i++) {
    for (var j=i+1; j&lt;arr.length; j++) {
      if (arr[i] &lt;= arg &amp;&amp; arr[j] &lt;= arg &amp;&amp; arr[i] + arr[j] == arg) {
        sum += i+j; 
        arr[i] = arr[j] = NaN;
      }   
    }
  }
  return sum;
}

console.log(  pairwise([1, 1, 0, 2], 2)  ) // should return 6
</code></pre>

<p><strong>Under the hood:</strong></p>

<ol>
<li>Start looping from the element with index (<code>i</code>) = 0.</li>
<li>Add a second loop only for the elements which are later in the array. Their index <code>j</code> is always higher than <code>i</code> as we are adding 1 to <code>i</code>.</li>
<li>If both elements (numbers) are less than or equal to to the <code>arg</code>, check if their sum equals to the <code>arg</code>. This avoids checking the sum if either of the numbers are greater than the <code>arg</code>.</li>
<li>If the pair has been found then change their values to <code>NaN</code> to avoid further checks and duplication.</li>
</ol>
    </div>