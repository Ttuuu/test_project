<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You should not be calling <code>sizeof()</code> after every iteration.  In fact, using <code>foreach()</code> eliminates the need to count at all and provides an incrementing counter variable.</p>

<p>When you want to break out of a loop and immediately return from your custom function, just use <code>return</code>.</p>

<p>Notice in my code below that it is not necessary to write an <code>elseif</code> or <code>else</code> condition.</p>

<p>You can avoid working with negative values and calling <code>abs()</code> by using subtraction instead of adding to the negative initial value.</p>

<p>I also, try to keep the number of declared variables to a minimum.</p>

<p>Code: (<a href="https://3v4l.org/CAVsk" rel="nofollow noreferrer">Demo</a>)</p>

<pre><code>$years = [1000.00, 2000.00, 3000.00, 4000.00, 5000.00];
$expected = 7500.00;

function payback($array, $target) {
    foreach ($array as $i =&gt; $amount) {
        $newTarget = $target - $amount;
        if ($newTarget &lt; 0) {
            return round($i + ($target / $amount), 2);
        }
        $target = $newTarget;
    }
}

echo "payback is: " . payback($years, $expected);
</code></pre>

<p>Output:</p>

<pre><code>payback is: 3.38
</code></pre>
    </div>