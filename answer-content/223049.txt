<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>So from a generic perspective I would suggest to cut the task into different sub tasks</p>

<p>Determine, which row the character is in. You can determine this generically from the position the character has in the string.</p>

<p>Note that this is completely determined by the size of the zigzag pattern and effectively independentof the string itself.</p>

<p>Then sort the string by that index. If your algorithm creates an [x,y] Coordinate you simply need so sort via </p>

<pre><code>constexpr friend bool operator&lt;(const Coordinate&amp; a, const Coordinate&amp; b) {
    return std::tie(a.y, a.x) &lt; std::tie(b.y,b.x);
}
</code></pre>

<p>So one simple way would be to create an array of indexes and sort that as coordinate and then create the string from the the index array</p>
    </div>