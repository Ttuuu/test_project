<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It would be good to have some comments in the code explaining why (a) it works; (b) it takes linear time.</p>

<hr>

<blockquote>
<pre><code>        int i = 0;
        for (i = 0; i &lt; n; i++) {
</code></pre>
</blockquote>

<p>I would prefer to use <code>for (int i = 0; ...)</code> and similarly for the other loop over <code>i</code>: they don't need to use the same variable, and keeping scopes as small as possible helps understanding and maintenance. But if you prefer to keep the variable in the wider scope, there's no need to initialise it twice. Either of</p>

<pre><code>        int i = 0;
        for (; i &lt; n; i++) {
</code></pre>

<p>or</p>

<pre><code>        int i;
        for (i = 0; i &lt; n; i++) {
</code></pre>

<p>works fine.</p>

<hr>

<blockquote>
<pre><code>            if (val &lt;= 0 || val &gt; n)
                continue;
            while (val != arr[val - 1]) {
                int nextval = arr[val - 1];
                arr[val - 1] = val;
                val = nextval;
                if (val &lt;= 0 || val &gt; n) {
                    break;
                }
            }
</code></pre>
</blockquote>

<p>It's a bit inelegant to apply the range test twice. A simple refactor gives</p>

<pre><code>        while (val &gt; 0 &amp;&amp; val &lt;= n &amp;&amp; val != arr[val - 1]) {
            int nextval = arr[val - 1];
            arr[val - 1] = val;
            val = nextval;
        }
</code></pre>

<hr>

<blockquote>
<pre><code>        }
        return n+1;

    }
</code></pre>
</blockquote>

<p>For consistency I would add whitespace around <code>+</code>. The blank line makes more sense to me before the <code>return</code> rather than after it, and I would also add a blank line separating the two loops.</p>

<p>The fact that I'm nitpicking whitespace like this is a good sign: I haven't found anything which I consider to be a major problem.</p>
    </div>