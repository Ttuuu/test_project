<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Please take a look at this library for inspiration on how to state machine could be defined:
<a href="https://projects.spring.io/spring-statemachine/" rel="nofollow noreferrer">https://projects.spring.io/spring-statemachine/</a></p>
<ul>
<li>Should I change locking system to "fair"? =&gt; Could you please clarify what you are trying to achieve</li>
<li>Will it work smoothly with 2 threads? (There's no possibility that the start()/stop() can be accessed at the same time by more than 2 threads) =&gt; Yes. You have declared the only monitor object (<code>lock</code>) and configured <code>corePoolSize = 1</code>, <code>maximumPoolSize = 1</code>.</li>
<li>Does the code have any bugs I can't see? =&gt; I do not understand what is the purpose of this exercise</li>
<li>Any way to write it much simpler? =&gt; I think yes. Work is a singleton. the synchronized keyword could be used directly on <code>Work</code>'s methods. And without clarification, it looks like that the whole solution could be replaced with <code>ThreadPoolExecutor</code>, cause it is not clear why do we need <code>RUNNING</code>, <code>FINALIZING</code> states.</li>
</ul>
    </div>