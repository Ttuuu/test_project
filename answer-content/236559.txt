<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If the list never changes once loaded, the data would only ever need to be sorted one time (which ever you prefer as the default). Once sorted, you can just <code>reverse</code> the array as you currently are.</p>

<p>Additionally, if your data comes from a database of sorts, you may not even need to sort on the client at all, you could return an already sorted resultset.</p>

<p>So taking all that into account, here's what your code <em>could</em> look like:</p>

<pre><code>// Assuming 'users' is already sorted ASC order, if not then we want to users.sort(...) one time where appropriate
const { order, users } = this.state;
// Copy the array if going in DESC order to avoid resorting for ASC
const sortedUsers = order ? users.slice().reverse() : users;
this.setState({ users: sortedUsers, order: !order });
</code></pre>
    </div>