<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><code>matching_brace_position</code> does not <code>return -1</code> as advertised (<code>if the matching brace is not found</code>). If the matching brace is indeed not found, it returns nothing (in fact, it would access <code>source</code> out of bound). This is UB.</p></li>
<li><p><strike><code>handle_loop_end</code> assumes a well-formed BF program. With an ill-formed one (having a stray <code>]</code>) it would try to <code>free</code> something which wasn't previously allocated.</strike></p>

<p>As a side note, the cast <code>(Jump_Node*)popped_jump</code> is not necessary, and could even be harmful.</p>

<p>As another side note, the final <code>else</code> is not necessary. Just <code>return false</code>.</p></li>
<li><p>As the interpreter runs, the list of jump nodes is created and destroyed over and over again. I strongly recommend to create it once (rejecting the ill-formed programs in the process). BF is notoriously easy to compile after all.</p>

<p>BTW, compiling (into a byte code at least) is an answer to your last bullet. If you insist on strictly interpreting, consider <code>setjmp/longjmp</code>.</p></li>
</ul>
    </div>