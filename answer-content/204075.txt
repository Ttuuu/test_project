<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Do not reinvent the wheel and pick up an existing component framework. For instance, <a href="https://getbootstrap.com/" rel="nofollow noreferrer">Bootstrap</a> provides an <a href="https://getbootstrap.com/docs/4.1/components/collapse/#accordion-example" rel="nofollow noreferrer">accordion component</a> out of the box. You simply need to <a href="https://getbootstrap.com/docs/4.1/getting-started/introduction/" rel="nofollow noreferrer">drop in Bootstrap's CSS and JS</a>, then follow the prescribed markup, replacing the user-specific portions like the targets.</p></li>
<li><p>You might also want to consider using <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary" rel="nofollow noreferrer"><code>&lt;summary&gt;</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details" rel="nofollow noreferrer"><code>&lt;details&gt;</code></a> elements to do accordions without having to bring in libraries or write down scripts. You can read HTML5Doctor's <a href="http://html5doctor.com/the-details-and-summary-elements/" rel="nofollow noreferrer">analysis on <code>&lt;summary&gt;</code> and <code>&lt;details&gt;</code></a>, its purpose and use cases.</p></li>
<li><p>Your indents need to be consistent. This can be remedied by using a text editor that's geared towards code editing out of the box (instead of a plain text editor like Notepad). <a href="https://www.sublimetext.com/" rel="nofollow noreferrer">Sublime Text</a> or <a href="https://code.visualstudio.com/" rel="nofollow noreferrer">VS Code</a> should get you started. They allow you to set what your indent character and width are, and will indent a newline accordingly.</p></li>
<li><p>Avoid inline styles, put all your CSS in a stylesheet, use classes. The only case that inline CSS is allowed is when you have dynamic values for styles (i.e. positioning with <code>top</code> and <code>left</code> based on some calculation not known ahead of time).</p></li>
<li><p>Avoid using IDs. IDs are limiting in a sense that it can only be assigned to one element. If you have multiple elements that need styling, classes are a better fit. Also, IDs have high <a href="https://www.smashingmagazine.com/2007/07/css-specificity-things-you-should-know/" rel="nofollow noreferrer">specificity</a>, meaning it's harder to override unless you have a more specific selector - which can be a pain since a more specific selector means putting more into a selector making it unnecessarily long and brittle. </p></li>
<li><p>Avoid styling element selectors directly and use classes. For instance, styling lists using <code>ul</code> and <code>li</code> as selectors assumes that ALL lists should look that way, but you don't really want that. Use classes and target specific elements. And while you're at it, use a naming convention, like <a href="https://en.bem.info/methodology/key-concepts/" rel="nofollow noreferrer">BEM</a>. </p></li>
</ul>
    </div>