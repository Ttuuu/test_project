<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Would it be appropriate to first map()</p>
</blockquote>

<p>I don't think so. This would only serve to make the computer iterate over each value twice. I don't see how that would make it simpler.</p>

<blockquote>
  <p>it would fail at the very first element that is less than or equal to 30 preventing us to see what other values of an array are.</p>
</blockquote>

<p>If I understand correctly, each test can only return a single result, therefore if you want to evaluate <em>all</em> list items you would have to make a test for each one. You could also create a separate test for <em>all</em> of them.</p>

<p><em>Disclaimer: This code may or may not actually run, I've never used Jasmine, but it should hopefully at least get the point across</em></p>

<pre><code>describe("All the stuff should be &gt;30", function() {
    var allItemsSafe = true;

    var dataItems = element.all(by.css("ul.data-list &gt; li.data-item"));
    dataItems.each(function (elm) {
        elm.getText().then(function (text) {

            var isSafe = parseInt(text) &gt; 30;
            if(!isSafe) allItemsSafe = false;

            it(text+" should be greater than 30", function() {
                expect(isSafe).toBe(true);
            });

         });
    });

    it("ALL ITEMS should be greater than 30", function() {
        expect(allItemsSafe).toBe(true);
    });

});
</code></pre>

<p>Sidenote: I'm not sure if you really need <code>parseInt</code>, if the string is numeric it should be cast to a number implicitly.</p>
    </div>