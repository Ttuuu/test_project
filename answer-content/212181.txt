<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In terms of speeding up your 2nd option. The following code changes should work.
NOTICE that I put in a decrement counter in each loop. this should half the loops' run time.</p>

<p>You can then do this for each of your NextNum  sections (NextNum, NextNum2, NextNum3, and NextNum4)</p>

<pre><code>      Dim intK as integer
      Dim intUB1 as integer
      Dim intL as integer
      Dim intUB2 as integer

      'Find min row:
      intUB1 = UBOUND(v,1)
      intK = intUB1
      intUB2 = UBound(v,2)
      For row = LBound(v, 1) To intUB1
        intL = intUB2
        For col = LBound(v, 2) To intUB2
          If Not IsEmpty(v(row, col)) Then
            rowMin = row
            GoTo NextNum
          End If
          If Not IsEmpty(v(row, intL)) Then
            rowMin = row
            GoTo NextNum
          End If

          if intL &lt;= row then Exit For
          intL = intL - 1
        Next
        For col = LBound(v, 2) To intUB2
          If Not IsEmpty(v(intK, col)) Then
            rowMin = intK
            GoTo NextNum
          End If
          If Not IsEmpty(v(intK, intL)) Then
            rowMin = intK
            GoTo NextNum
          End If

          if intL &lt;= row then Exit For
          intL = intL - 1
        Next

        if intK &lt;= row then exit for
        intK = intK - 1
      Next
    NextNum:

</code></pre>
    </div>