<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The way I see it, virtually all of that over-engineered convolution can be scrapped.</p>
<p>You only need to take special action when you process the <code>JsonData</code> value.</p>
<p>It needs to be decoded, flattened, and merged with the other non-encoded data.</p>
<p>Simply use something like this: (<a href="https://3v4l.org/Ku53H" rel="nofollow noreferrer">Demo</a>)</p>
<pre><code>$post = [];
foreach ($_POST as $key =&gt; $value) {
    if ($key !== 'JsonData') {
        $post[$key] = $value;
    } else {
        $post = array_merge($post, ...json_decode($value, true));
    }
}
var_export($post);
</code></pre>
<p>If you are concerned about redundant subarray keys (that were previously json encoded), then that is more of a problem with the incoming data rather than a problem with this process (my script provides the same handling as in your posted script).</p>
<p>Now that you can see how simply the data can be unpacked, you won't need to bag so hard on the other developer.</p>
<hr>
<p>I don't think I endorse the practice of key-ignorant json decoding <code>true</code>/<code>false</code> strings to booleans because it will potentially convert strings that shouldn't be converted.</p>
<p>Amyhow, here's one way of handling the conditional boolean conversion (<a href="https://3v4l.org/DLiqu" rel="nofollow noreferrer">Demo</a>):</p>
<pre><code>function mergeAndBoolify($posted) {
    $result = [];
    foreach ($posted as $key1 =&gt; $value1) {
        if ($key1 === 'JsonData') {
            foreach (json_decode($value1, true) as $item) {
                foreach ($item as $key2 =&gt; $value2) {
                    if (in_array($value2, ['true', 'false'])) {
                        $value2 = json_decode($value2);
                    }
                    $result[$key2] = $value2;
                }
            }
        } else {
            $result[$key1] = $value1;
        }
    }
    return $result;
}

$_POST = [
    'JsonData' =&gt; '[{"firstname":"false"},{"lastname":"true"},{"email":""}]',
    'otherdata' =&gt; 'otherdata'
];

var_export(mergeAndBoolify($_POST));
</code></pre>
<p>Output:</p>
<pre><code>array (
  'firstname' =&gt; false,
  'lastname' =&gt; true,
  'email' =&gt; '',
  'otherdata' =&gt; 'otherdata',
)
</code></pre>
    </div>