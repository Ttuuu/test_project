<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>I would only ever mark polymorphic classes <code>final</code>. For them, there's a potential benefit to balance out the unnaturalness of not being able to inherit.</p></li>
<li><p>You should really indent the contents of the class by one step. Though that could possibly be an artifact of only partially adapting to SE's markup.</p></li>
<li><p>Consider verifying that <code>prefix</code> and <code>suffix</code> have sensible values, at least in debug-mode (<code>assert()</code>).</p></li>
<li><p>The first ctor has sensible defaults for its last two parameters. Why not take advantage of that?</p></li>
<li><p>Is there a reason you only accept <code>std::string</code>, instead of generally <code>std::basic_string&lt;char, std::char_traits&lt;char&gt;, AnyAllocator&gt;</code>?</p></li>
<li><p>You could use <code>!_size</code> instead of <code>_size == 0</code>. Well, de gustibus.</p></li>
<li><p>Your comparison is curious, but at least consistent.</p></li>
<li><p>I would suggest conforming to <a href="https://en.cppreference.com/w/cpp/string/basic_string_view" rel="nofollow noreferrer">C++17 <code>std::string_view</code></a> as closely as possible so you can later remove your custom class, and to ease the burden for users.</p></li>
</ol>
    </div>