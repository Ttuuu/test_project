<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>All the other answers are very good and detailed but they fail to touch upon the reasoning behind the fatal flaw in your code: static variables are generally bad and to be avoided. This answer should help you understand some of the basics of static variables so you can understand the other answers better. To explain that we need to touch on some OOP basics and what a static variable is in a class.</p>

<p>The principle of OOP is that you can create objects containing their own methods and variables so that all of the code relating to a certain task is in an "object". In java an "object" is created in the form of a class.</p>

<p>The main benefits of OOP are twofold, it simplifies the code, and more importantly allows effective code reuse and duplication. Static variables and methods are, generally speaking, against code reuse and duplication. A class is meant to be initialized before using, essentially making an instance of the class before you use it. In java this initialization would look like this:</p>

<pre><code>GameFunctions game = new GameFunctions();
</code></pre>

<p>And then all methods after that would be called like</p>

<pre><code>game.getInput();
</code></pre>

<p>This is very useful because it allows multiple instances of a class to be created simultaneously so if you wanted to have two games running you could do something like:</p>

<pre><code>GameFunctions game1 = new GameFunctions();
GameFunctions game2 = new GameFunctions();
</code></pre>

<p>Static variables, instead of being owned by each object as you create them are owned by the class itself, in other words there will only really be one GameFunctions object. This object may work just fine, but it's far better to do things in terms of non static variables. Although static variables do have their place, that place is very rare and this class shouldn't have a single static variable.</p>

<p>That being said, this is a common mistake everyone makes when they first start, your code seems pretty well thought out and I'm sure you're on track to learn much more in the way of coding!</p>
    </div>