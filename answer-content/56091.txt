<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>if (dr.GetValue(0).ToString() == _str)
{
   dr.Close();
   cmdOne = new SqlCommand("select customername from customer where userid='" + objLogOnUserInformation.UserId + "'", con);
   dr = cmdOne.ExecuteReader();
   dr.Read();
   objLogOnUserInformation.SessionUserName = dr.GetValue(0).ToString();
   dr.Close();
   //if usertype is customer, U is returned
   return _str;
}
else
{
   dr.Close();
   cmdOne = new SqlCommand("select customername from customer where userid='" + objLogOnUserInformation.UserId + "'", con);
   dr = cmdOne.ExecuteReader();
   dr.Read();
   objLogOnUserInformation.SessionUserName = dr.GetValue(0).ToString();
   dr.Close();
   //If usertype is Admin, A is returned
   return "A";
}
</code></pre>
</blockquote>
<p>I'll just start with all the things I see in this code.</p>
<h2>Naming:</h2>
<blockquote>
<pre><code>dr, con, objLogOnUserInformation, cmdOne
</code></pre>
</blockquote>
<p>All these names are <strong>bad</strong> for various reasons.</p>
<p><code>dr</code> (and <code>con</code>) is waay too short. You can allow yourself to name your variables after what they do and not some cryptic unpronounciable names. --&gt; use <code>dataReader</code> (and <code>connection</code>) instead</p>
<p><code>objLogOnUserInformation</code> is bad because ad 1 it's not clear, and ad 2 it uses hungarian notation. <strong>Never use hungarian notation</strong>, instead:</p>
<p><img src="https://i.stack.imgur.com/9YfMu.gif" alt="BUUUURN" title="BUUUUURN">
--&gt; use: <code>loggingInUserInfo</code></p>
<p><code>cmdOne</code> doesn't tell you what it is and it is <em><strong>numbered!</strong></em> If you have no better idea than numbering equal variables, you are <em>probably</em> doing something wrong. I'd use <code>sqlCommand</code></p>
<h2>User-type:</h2>
<p>Your user type is a String. <em><strong>THIS IS DANGEROUS</strong></em> and also quite prone to bugs. C# has a nice "feature" called <code>enums</code>. It looks like your UserType is one:</p>
<pre><code>public enum UserType 
{
    CUSTOMER, ADMIN, //maybe others
}
</code></pre>
<p>And now the coolest thing happens.. Your if-else is useless. you do exactly the same <strong>either way</strong> you return the UserType. why not remove the if-statement completely (as well as the outer data reader and merge it with your "select usertype" statement:</p>
<pre><code>dataReader.close(); 
// if you use dataReader with a using statement early on, you can leave that out
sqlCommand = new SqlCommand("select customername, usertype from customer where userId='" + loggingInUserInfo.UserId + "'", connection);
using (dataReader = sqlCommand.ExecuteReader())
{
    dataReader.read();

    loggingInUserInformation.SessionUserName = dataReader.Item["customername"];
    return dataReader.Item["usertype"];
}
</code></pre>
    </div>