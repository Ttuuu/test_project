<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>PHP</h2>

<h3>Variable names, excess variables, logic</h3>

<p>When iterating through the rows in <code>showOrderDetails()</code>, the variable <code>$row_index</code> is slightly misleading because that should contain the column name, not an index (typically an integer value):</p>

<blockquote>
<pre><code>foreach ($table_row as $row_index =&gt; $row_data) { // titulos campos
</code></pre>
</blockquote>

<p>A better name for that key would be something like <code>$column_name</code>:</p>

<pre><code>foreach ($table_row as $column_name =&gt; $column_value) { // titulos campos
</code></pre>

<p>But the name <code>$row_index</code> would be appropriate for the key on the outer <code>foreach</code>:</p>

<pre><code>foreach ($res as $row_index =&gt; $table_row) {   
</code></pre>

<p>Then instead of creating an extra variable called <code>$first</code>, you could utilize <code>$row_index</code> and <code>$column_name</code> to conditionally display the rows and cells.</p>

<p>The first one:</p>

<blockquote>
<pre><code>if($first){ //HEADERS
</code></pre>
</blockquote>

<p>could then be updated to: </p>

<pre><code>if($row_index === 0){ //HEADERS
</code></pre>

<p>And then the second one, in the nested loop:</p>

<blockquote>
<pre><code>if($first){ //TO NOT DISPLAY ID
</code></pre>
</blockquote>

<p>Could be changed to:</p>

<pre><code>if($column_name === 'id'){ //TO NOT DISPLAY ID
</code></pre>

<p>And the second inner loop could be updated as well:</p>

<blockquote>
<pre><code>foreach ($table_row as $row_data) { // DATA
      if ($first){
          continue;
</code></pre>
</blockquote>

<p>Could be rewritten to add the row if the column name is <em>id</em>: </p>

<pre><code>foreach ($table_row as $column_name =&gt; $column_value) { // DATA
    if ($column_name === 'id'){
        $idLinea=$column_value;
</code></pre>

<p>And then <code>$first</code> could be eliminated entirely.</p>

<p>Alternatively, the condition in the first nested loop could be negated and then the <code>continue</code> could be eliminated:</p>

<pre><code>if($column_name !== 'id'){ //DO NOT DISPLAY ID
    echo "&lt;th&gt;$column_name&lt;/th&gt;";
}
</code></pre>

<p>See that all together in <a href="https://www.tehplayground.com/VJ6j8uqKiPKYWn37" rel="nofollow noreferrer">this playground example</a> (not connected with Javascript/AJAX requests).</p>

<h2>JS</h2>

<p>The line to look up the element to remove by <em>id</em> attribute:</p>

<blockquote>
<pre><code>var fila=document.querySelector('#fila'+idLinea); //We choose the first and unique row which has whatever ID needed.
</code></pre>
</blockquote>

<p>Could be changed to use <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById" rel="nofollow noreferrer"><code>document.getElementById()</code></a></p>

<pre><code>  var fila=document.getElementById('fila'+idLinea); //We choose the first and unique row which has whatever ID needed.  
</code></pre>

<p>There are a few discussions about which to use: </p>

<ul>
<li><a href="https://www.sitepoint.com/community/t/getelementbyid-vs-queryselector/280663/2" rel="nofollow noreferrer">this Sitepoint forum</a></li>
<li><a href="https://stackoverflow.com/q/26848289/1575353">this SO question and its answers (and related posts)</a></li>
</ul>

<p>The general consensus is that <code>getElementById()</code> is quicker than <code>querySelector()</code>. For a small page like this it would likely not be noticeable.</p>
    </div>