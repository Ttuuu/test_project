<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I recommend creating a static class named something like Hash, Crypto or Password depending on your project/context and making these methods public static, instead of making them private methods for the user class.</p>
<h3>WARNING!</h3>
<p>Unless your password encryption management code is sophisticated enough to manage password scheme versions and handle multi-version-migration complications PasswordHashWorkFactor should not be editable (i.e. by editing the relevant key in the config file). In that case, editing it would cause migration efforts or <strong>MORE IMPORTANTLY</strong> the attacker with R/W access to the config file can crash the system easily by adding an unnoticeable digit to PasswordHashWorkFactor  (add a 0 to 100000). It would take significant time of the admin/dev to figure out the problem in a sophisticated config file while the users cannot log in. You may have it hardcoded as a <code>const</code> at the static class and change it in every major release at the code level. Again this is a matter of convenience vs security trade-off.</p>
<p>Here is my feedback in more detail as an <a href="https://codereview.stackexchange.com/questions/202917/secure-password-hashing-implementation-with-salt-and-pepper">implementation</a>. You may want to check it out.</p>
    </div>