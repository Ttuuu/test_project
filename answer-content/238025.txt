<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First some words about the created HTML/DOM:</p>

<p>In HTML it is invalid for an <code>ul</code> element to directly contain another <code>ul</code>. An <code>ul</code> only may contain <code>li</code> elements, so you should wrap the inner <code>ul</code> in it's own <code>li</code>. Unfortunately the DOM API allows you to create invalid HTML and there is no good way to notice it. And it may not become noticeable until the browser has problems rendering it.</p>

<p>Regarding the guardian names: You should have a space character between the <code>span</code> elements otherwise the browser will render it (or in case of screen readers/text-to-speech, may read it) as one one word. EDIT: Creating a space with CSS may not be recognized by a screen reader. An actual space will always be interpreted correctly. Another case were this could be a problem is copy and paste where it also will be copied without a space.</p>

<p>A similar accessibility problem may be the way "flag" is being rendered: Even if you use CSS to display something, empty span elements with just a class name but no content may be ignored and not read out by screen readers.</p>

<hr>

<p>On to the JavaScript:</p>

<p>Instead of calling <code>document.getElementById("childList")</code> each time <code>addChild</code> is called it would be better to call it once outside and pass the reference into <code>addChild</code>.</p>

<p>In a function such as <code>addChild</code> which purpose is to display the <code>child</code> object it's unexpected for it to modify that object with <code>delete child.group</code>, especially since that modification isn't relevant to the further logic of the function.</p>

<p>At the event listener assignment it's unnecessary to wrap the listener function in an additional function. So</p>

<blockquote>
<pre><code>page.addEventListener("click", function(){pageGuardian()});
</code></pre>
</blockquote>

<p>Can be written as:</p>

<pre><code>page.addEventListener("click", pageGuardian);
</code></pre>

<p>BTW how to the listener functions determine which child they work with when called? </p>

<p>Finally, the code for creating the buttons are basically identical for each button so it should be extracted into a separate function.</p>

<hr>

<p>EDIT: One more point I forgot before: You may want to look into using a template engine instead of building the HTML/DOM structure yourself.</p>
    </div>