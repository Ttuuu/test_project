<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Maintaining bidirectional relationships</h2>
<p>Rather than this check:</p>
<pre><code>    if not self._command.has_task(self):
        raise ValueError("orphaned task")
</code></pre>
<p>it would be better to mark the task as orphaned by nulling out its command. In other words,</p>
<pre><code>def remove_task(self, task):
    """
    Remove the task from this command.  After calling this, 
    the task is orphaned and the reference to the task should be discarded.
    """
    task.command = None
    self.tasks.remove(task)
</code></pre>
<p>Having <code>command</code> as a simple, "public", possibly-None member on <code>Task</code> is simpler. At most, I would give this a type hint of <code>Optional[Command]</code> in the constructor.</p>
<h2>Types</h2>
<p>Don't call <code>date</code> <code>date</code>; that's a commonly used class in a built-in library.</p>
<p><code>deadline</code> should probably be of type <code>datetime</code> (not <code>date</code>), and <code>duration</code> should be of type <code>timedelta</code>, not <code>int</code>.</p>
    </div>