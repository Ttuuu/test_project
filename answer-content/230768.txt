<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p><code>WorkingDayRequestDto workingDayDto</code></p>
</blockquote>

<p>The name of this object is IMO misleading because it seems to represent a whole week. I would call it <code>WorkWeek</code>.</p>

<hr>

<p>If it's possible to change the data model, I would invent a <code>WorkDay</code> object with a <code>Start</code> and <code>End</code> time:</p>

<pre><code>public class WorkDay
{
  public WorkDay(DateTime? start, DateTime? end)
  {
    Start = start;
    End = end;
  }

  public DayOfWeek? DayOfWeek =&gt; Start != null ? (DayOfWeek?)Start.Value.DayOfWeek : null;
  public DateTime? Start { get; }
  public DateTime? End { get; }

  public bool IsValid
  {
    get
    {
      return Start != null &amp;&amp; End != null  &amp;&amp; Start &lt;= End &amp;&amp; Start.Value.DayOfWeek == End.Value.DayOfWeek || Start == null &amp;&amp; End == null;
    }
  }

  // And/Or

  public void CheckIsValid()
  {
    if (Start == null &amp;&amp; End != null || Start != null &amp;&amp; End == null)
      throw new WorkDayNullCheckException(this);
    if (Start != null &amp;&amp; End != null &amp;&amp; (Start &gt; End || Start.Value.Date != End.Value.Date)
      throw new WorkDayInvalidStateException(this);
  }

}
</code></pre>

<p>and then <code>WorkWeek</code> could be defined as something like:</p>

<pre><code>public class WorkWeek
{
  public WorkDay Monday { get; set; }
  public WorkDay Tuesday { get; set; }
  public WorkDay Wednesday { get; set; }
  public WorkDay Thursday { get; set; }
  public WorkDay Friday { get; set; }
  public WorkDay Saturday { get; set; }
  public WorkDay Sunday { get; set; }

  public WorkDay[] Days =&gt; new WorkDay[] { Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday };

  public bool IsValid =&gt; Days.All(d =&gt; d.IsValid);

  // And/Or

  public void CheckValidity()
  {
    foreach (var day in Days.Where(d =&gt; d != null))
    {
      day.CheckIsValid();
    }
  }

}
</code></pre>
    </div>