<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Given that some implementations of the M0 core take 32 cycles to perform a multiply, using the minimal number of MULS is important. Now, the bottom 32 bits are correctly calculated by 1 MULS so only 3 MULS are strictly necessary. If only r0-r3 are used, that is another 4 cycles (stack unstack) and seeing as a multiply will be the bottom subroutine, lr (r14) only needs to be stacked if your code intends to use it. If you are <em>THAT</em> short of registers and can prevent interrupts, you can use store sp (r13) as well.</p>

<p>The problem lies with the fact that only the Z &amp; N flags are updated by MULS. I'm stumbling with the way to detect an overflow in an elegant manner. Can someone more able than I devise an elegant solution?</p>
    </div>