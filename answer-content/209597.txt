<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Too sad, it's not O(1).
There is a cost for: </p>

<ul>
<li>Constructing the regex into a DFA</li>
<li>Calling <code>test()</code> or <code>match()</code> on the regex for the value</li>
</ul>

<p>Complexities:</p>

<ul>
<li>A well implemented regex construction will be <code>O(M)</code> where M is the length of the key.</li>
<li>While test/matching it afterwards will be <code>O(N)</code> where N is the length of the value. (best case, e.g. regexes with backtracking can result in horrible complexities) </li>
</ul>

<p>So a couple of improvements can be:</p>

<ul>
<li>if the key is always the same. Construct the regex for the key only once.</li>
<li>first start with comparing the length of the value and key before calling the more expensive test()-match() methods.</li>
<li><p>apart from that, the idea of a regex is ok but I don't know if it's the most understandable way of writing an indexOf.</p></li>
<li><p>Reference: <a href="https://stackoverflow.com/questions/5892115/whats-the-time-complexity-of-average-regex-algorithms">Regex Complexities on SO</a></p></li>
</ul>
    </div>