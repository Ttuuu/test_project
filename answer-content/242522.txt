<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would turn your mappings mapping countries and indicators around. Then you can simply do:</p>

<pre><code>COUNTRIES = {"EST": "Baltic States", "LVA": "Baltic States", "LTU": "Baltic States", ...}

df["region"] = df["iso3"].map(COUNTRIES)
df["category"] = df["id"].map(INDICATORS)
</code></pre>

<p>If you are too lazy to manually invert the dictionary, or like the current structure more but still want to have the easier usage, just use this one-line function:</p>

<pre><code>def invert(d):
    return {v: k for k, values in d.items() for v in values}
</code></pre>

<hr>

<p>Instead of </p>

<pre><code>ISO3_PARAM = ';'.join(chain(*COUNTRIES.values()))
</code></pre>

<p>Use</p>

<pre><code>ISO3_PARAM = ';'.join(chain.from_iterable(COUNTRIES.values()))
</code></pre>

<p>This does not have any memory problems (not that that is a problem here, but it is good practice in general).</p>

<p>And if you follow the previous recommendation, replace <code>values</code> with <code>keys</code>.</p>

<hr>

<p>I would slightly simplify your <code>page_level</code> function by inlining <code>meta["pages"]</code> and using the <code>params</code> argument of <code>requests.get</code> to pass the parameters</p>

<pre><code>def page_level(indicator: str) -&gt; Iterator:
    """ Iterate over all pages related to specific indicator. """
    url = f"{URL}{ISO3_PARAM}/indicator/{indicator}"
    page = 1
    while True:
        meta, data = requests.get(url, params={"format": "json", "page": page}).json()
        yield from item_level(data)
        page += 1
        if page &gt; meta["pages"]:
            break
        sleep(1)
</code></pre>

<hr>

<p>I must say that while I like that you separated things into their own function, I am not so sure about their names (I know, names are hard!). They convey only at which level a function operates, but not what it <em>does</em>.</p>

<p>My suggestions for names:</p>

<ul>
<li><code>indicator_level</code> -&gt; <code>get_dataframe</code> (and directly return the dataframe) or <code>get_data</code></li>
<li><code>page_level</code> -&gt; <code>get_indicator_data</code></li>
<li><code>item_level</code> -&gt; <code>extract_items</code></li>
</ul>
    </div>