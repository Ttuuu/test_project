<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You should change :</p>

<pre><code>    found = False
    for p in pix: #This loop gets the two inner pixels of the circle at X position 35
        for P in pix:
            if found == False:
                if abs(p[1] - P[1]) == 87:
                    final.append(p)
                    final.append(P)
                    found = True
</code></pre>

<p>by :</p>

<pre><code>    for p in pix: #This loop gets the two inner pixels of the circle at X position 35
        for P in pix:
            if abs(p[1] - P[1]) == 87:
                final.append(p)
                final.append(P)
                break
        else: continue
        break
</code></pre>

<p>This breaks the two loops instead of pointlessly running the loop after it's found.</p>

<hr>

<p>Second thing, you use Threads, they aren't executed in parallel due to GIL, this can be a problem if you're looking for performance, consider multiprocessing if needed.</p>

<hr>

<p>This code is inefficient, assign <code>screen[y][x]</code> to a variable to avoid lookups, and do you really need to check every pixel of every frame ? This will be difficult to run in real time without melting your CPU, for the game you linked, you probably only need one column of pixel. Also it seems that pixels are either white or not white, so these big conditions are a bit superfluous.</p>

<pre><code>            for x in range(len(screen[y])): #For each pixel on this layer
                if screen[y][x][0] &gt;= 30 and screen[y][x][0] &lt;= 50 and screen[y][x][1] &gt;= 50 and screen[y][x][1] &lt;= 65 and screen[y][x][2] &gt;= 130 and screen[y][x][2] &lt;= 150:
                    lineY.append(pY) #Found a line pixel
                if screen[y][x][0] &gt;= 60 and screen[y][x][0] &lt;= 70 and screen[y][x][1] &gt;= 75 and screen[y][x][1] &lt;= 85 and screen[y][x][2] &gt;= 175 and screen[y][x][2] &lt;= 185:
                    circP.append((pX, pY)) #Found a circle pixel
</code></pre>

<hr>

<p>Your code would be easier to read if it was broken down into multiple functions and if you used good variable names (not single/double letters, snake_case, PEP8 compliant).</p>

<hr>

<p>Take time to research about <code>for else</code> notation, the <code>GIL</code> and parallel computing in python (to make it simple: Theads run on one Core, Processes run on multiple Cores). <code>screen[y][x]</code> calls multiple functions behind the scene that is why you should assign in this case. <code>PEP8</code> gives good advices on how to write readable code (It is a question of habit, use a linter, it can help).</p>
    </div>