<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I find your method for fixing <em>invalid</em> <code>JSON</code> is the worst possible because it treats <code>JSON</code> as a pure <code>string</code> and not a tree of properties/keys and values. This increases the possibility of changing values that might not be values at all. IMO the optimal approach would be to parse it with <code>JSON.NET</code> by using <code>JToken.Parse</code> and recreate the resulting tree with <em>correct</em> values.</p>

<p>You can take a look how it could be done <a href="https://codereview.stackexchange.com/questions/208641/chaining-json-transformations-with-visitors">here</a> where I'm using the <a href="https://www.oodesign.com/visitor-pattern.html" rel="nofollow noreferrer">Visitor Pattern</a> to transform <code>JSON</code> too. </p>

<hr>

<p>But honestly, unless you need to be able to read some old data, you should really fix the serializer so that it outputs valid <code>JSON</code> instead of trying to fix its <em>bugs</em> with even more dirty workarounds.</p>
    </div>