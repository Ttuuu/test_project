<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are basically making your object filtering into an <span class="math-container">\$0(m * n)\$</span> complexity function ( where <span class="math-container">\$m\$</span> is number of type id’s) that your are filtering against and <span class="math-container">\$n\$</span> is number of objects in the fetched result set.   This function should only be <span class="math-container">\$0(n)\$</span>. </p>

<p>To do this, make type id’s into a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set" rel="nofollow noreferrer"><code>Set</code></a> which allows <span class="math-container">\$O(1)\$</span> lookup and then use this <code>Set</code> to filter the fetched objects.</p>

<p>For example:</p>

<pre><code>const typeIds = new Set([ /* ids here */ ]);
const isFilteredType = (element) =&gt; typeIds.has(element.type);

// and later when filtering results
.then( (out) =&gt; out.filter(isFilteredType) );
</code></pre>

<p>It is also customary in javascript to use lowercase first letter for variable names. Your code would look odd to most JS developer for this reason. </p>

<p>There is really not much of a reason to use <code>var</code> in modern JavaScript.  You should primarily use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" rel="nofollow noreferrer"><code>const</code></a> with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let" rel="nofollow noreferrer"><code>let</code></a> being used where the variable needs to be reassignable.</p>

<p>It is not really clear here why <code>JSONpull</code> and <code>FilterJSON</code> are even needed.</p>
    </div>