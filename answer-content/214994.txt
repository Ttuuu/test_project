<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>A quick warning.</h2>
<p>Javascript objects are referenced and that means objects can contain cyclic references. You function does not check for cyclic references. Cyclic references are very common in JavascripT so you should protect against the potential error.</p>
<h2>Some solutions.</h2>
<ul>
<li>You can use a <code>Set</code> to track which objects have already been processed and step over repeats.</li>
<li>Add a depth argument that limits the recursion depth.</li>
</ul>
<p>You can just let it throw a call stack overflow when the recursion gets too deep. However a  warning, some browsers support tail call optimization and can recurse infinitely. Your function is not currently a tail call, but be aware as it could force the user to crash / close the page.</p>
<p>Example of cyclic object</p>
<pre><code> const A = {A: "Prop B be will reference Self" };
 A.B = A;

 


    
</code></pre>
    </div>