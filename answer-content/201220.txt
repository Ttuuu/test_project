<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>The solution to a good algorithm is a clear logic. Your code uses the "hammers" that are present, spring to mind, and do a tiny bit more than needed. So start to find a logic first.</p>
</blockquote>

<p>To get the next smaller number the most strict algorithm would be:</p>

<p>Example: <strong>1253479</strong></p>

<ul>
<li>Start from the last digit to the first as long as the digits are decreasing or equal. <code>12[5]+increasing 3479, 5 &gt; 3.</code></li>
<li>From the increasing tail pick the element just smaller (4), and reverse the tail. <code>12(4)+decreasing 97[5]3.</code></li>
</ul>

<p>Result: <strong>1249753</strong></p>

<p>The math is relatively simple, and the algorithm linear to the length.</p>

<blockquote>
  <p>As you see the code can do with the "hammers", functions, you use.</p>
</blockquote>

<hr>

<p><strong><em>Explanation (on request)</em></strong></p>

<p>Say you have a number <strong>1253479</strong> = prefix <strong>12</strong>, digit <strong>5</strong>, and increasing suffix <strong>3479</strong>. (5 &gt; 3 hence a smaller permutation on digit+suffix is possible)</p>

<p>An increasing (non-decreasing) suffix 3479 is the first minimum permutation; other permutations like 4379 are greater.</p>

<p>A decreasing (non-increasing) suffix 9753 is the last maximum permutation; other permutations like 9735 are smaller.</p>

<p>Hence a permution++ resp. permutation-- works like:</p>

<pre><code>1 2 5 3 4 7 9
     \ / / /
= =          
     / \ \ \
1 2 4 9 7 5 3
</code></pre>

<p>Roughly reminiscent of increasing/decreasing an integer on paper with a suffix 00...0.</p>

<p>A proof would be more for a math forum.</p>

<p>As this answer has its probably deserved downvotes (it insists on a redesign), I leave it at that.</p>
    </div>