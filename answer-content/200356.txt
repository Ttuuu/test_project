<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>You can pass <code>str</code> to <code>map</code> rather than a <code>lambda</code>.</li>
<li>You can remove the need for <code>map</code> if you change your third loop to append <code>str(number)</code>.</li>
<li>You can use <a href="https://docs.python.org/3/library/string.html" rel="nofollow noreferrer"><code>string</code></a> to remove the need for <code>chr</code> and <code>int</code> in the first three loops. By using:

<ol>
<li><a href="https://docs.python.org/3/library/string.html#string.ascii_letters" rel="nofollow noreferrer"><code>string.ascii_letters</code></a>:<br>
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</li>
<li><a href="https://docs.python.org/3/library/string.html#string.digits" rel="nofollow noreferrer"><code>string.digits</code></a>:<br>
0123456789</li>
</ol></li>
<li>You can combine all your loops into one string concatenation.</li>
<li>Don't use <code>;</code> to end lines.</li>
<li>You can define <code>array</code> as a constant outside the function.</li>
<li>I recommend using Python 3, or changing <code>print</code> to be Python 3 compatible.</li>
</ol>



<pre><code>import random
import string

CHARACTERS = (
    string.ascii_letters
    + string.digits
    + '-._~'
)

def generate_unique_key():
    return ''.join(random.sample(CHARACTERS, 15))

print(generate_unique_key())
</code></pre>

<hr>

<p>You can also use the <a href="https://docs.python.org/3/library/secrets.html#module-secrets" rel="nofollow noreferrer"><code>secrets</code></a> library (thanks @<a href="https://codereview.stackexchange.com/users/84718/mathias-ettinger">MathiasEttinger</a>) which is a CSRNG version of <code>random</code>. It also contains the function <a href="https://docs.python.org/3/library/secrets.html#secrets.token_urlsafe" rel="nofollow noreferrer"><code>secrets.token_urlsafe</code></a> (thanks @<a href="https://codereview.stackexchange.com/users/98493/graipher">Graipher</a>) which generates a random string which is safe for use in URLs. Allowing:</p>

<pre><code>def generate_unique_key(size=15):
    return secrets.token_urlsafe(size)[:size]
</code></pre>
    </div>