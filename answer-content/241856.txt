<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are a couple of improvements you can make in your <code>componentDidMount</code>.</p>

<p>First, you create an empty array of <code>shops</code>, then push to it in every iteration over the <code>querySnapshot</code>. When constructing an array by transforming another array (or array-like collection), the appropriate method to use is <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" rel="nofollow noreferrer"><code>Array.prototype.map</code></a>. You can get an array of documents from the snapshot by accessing its <code>.docs</code> property.</p>

<p>Second, rather than calling <code>doc.data</code> many times repetitively, you can make an array of properties and extract each of them from the document being iterated over, putting them into a new object with <code>Object.fromEntries</code>:</p>

<pre><code>async componentDidMount() {
  const querySnapshot = await db.mShopsCollection().get();
  const properties = ['address1', 'address2', 'address3', 'name', 'prefecture', 'zip_code'];
  const shops = querySnapshot.docs.map((doc) =&gt; {
    const data = doc.data();
    return {
      id: doc.id,
      ...Object.fromEntries(properties.map(prop =&gt; data[prop]))
    };
  });
  this.setState({ shops });
}
</code></pre>

<p>Lodash's <a href="https://lodash.com/docs/4.17.15#pick" rel="nofollow noreferrer"><code>pick</code></a> is another method that can be used to extract certain properties from an object into a new object.</p>
    </div>