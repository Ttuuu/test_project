<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Statics</h2>

<p>You have a one-file program, so more of your methods and globals, including these:</p>

<pre><code>int playerLossesCount[NUM_PLAYERS];
Wall walls[NUM_PLAYERS][NUM_WALLS];

GXTexObj texObj;
</code></pre>

<p>should be made <code>static</code>.</p>

<h2>Declarations for variables</h2>

<pre><code>int main( int argc, char **argv ){
    u32 fb;     // initial framebuffer index
    u32 first_frame;
    f32 yscale;
    u32 xfbHeight;
    Mtx44 perspective;
    Mtx GXmodelView2D;
    void *gp_fifo = NULL;
</code></pre>

<p>This style is typical for pre-C99 code, but generally it's more difficult to follow the code this way. It's more legible if the variables are declared and initialized closer to where they're actually used.</p>

<h2>Spaces</h2>

<p>C is generally more free-form than (say) Python when it comes to whitespace, but this:</p>

<pre><code>GX_SetScissor(0,0,rmode-&gt;fbWidth,rmode-&gt;efbHeight);
</code></pre>

<p>still needs more. Probably one space after each comma for this to be legible. Also, your brace style varies wildly; compare</p>

<pre><code>        if(Point_CheckCollision(&amp;self-&gt;players[i], &amp;self-&gt;players[j]) ) {
            return true; }
</code></pre>

<p>with</p>

<pre><code>if(Point_CheckInRectangle(&amp;self-&gt;players[playerId], 
        TV_MARGIN&lt;&lt;8,
        WIDTH-SPRITE_SIZE-TV_MARGIN &lt;&lt; 8,
        (UPPER_MARGIN + TV_MARGIN) &lt;&lt;8 ,
        (HEIGHT+UPPER_MARGIN-SPRITE_SIZE-TV_MARGIN) &lt;&lt; 8)) 
{return true;}
</code></pre>

<p>with</p>

<pre><code>        if(self-&gt;players[playerId].x == walls[i][wallId].x &amp;&amp; self-&gt;players[playerId].y == walls[i][wallId].y) {
            return true;
        }  
</code></pre>

<p>The last one seems the sanest, but whatever you do, pick a style and stick with it.</p>

<h2>Coordinates</h2>

<p>Based on a reading of this:</p>

<pre><code>float texCoords[] = {
    0.0 ,0.0 , 0.5, 0.0, 0.5, 0.5, 0.0, 0.5,
// ...
GX_TexCoord2f32(texCoords[texIndex],texCoords[texIndex+1]);
</code></pre>

<p>it seems that you're flattening an array of coordinates to be represented as x, y, x, y... Your code would be more legible if you were to use an array of <code>Point</code> structures (you've even declared one yourself; you might as well use it). </p>

<h2>Loop combination</h2>

<p>This:</p>

<pre><code>for(int i=y; i &lt; y+height;i+=spriteSize){ 
    SpriteDrawer_SpriteTex(self, x,i,spriteSize, spriteSize, sprite); 
}
for(int i=y; i &lt; y+height;i+=spriteSize){ 
    SpriteDrawer_SpriteTex(self, x+width,i,spriteSize, spriteSize, sprite);
}
</code></pre>

<p>should become the equivalent</p>

<pre><code>for(int i=y; i &lt; y+height;i+=spriteSize){ 
    SpriteDrawer_SpriteTex(self, x,i,spriteSize, spriteSize, sprite); 
    SpriteDrawer_SpriteTex(self, x+width,i,spriteSize, spriteSize, sprite);
}
</code></pre>
    </div>