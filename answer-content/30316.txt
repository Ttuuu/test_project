<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I am not that familiar with static methods in PHP specifically, so my answer is a bit limited in the aspect of what can be done in PHP.</p>

<p>If possible in PHP, I'd say make both ways available.</p>

<p>Obviously, the appeal of the static method is in its ease of use. However, such approach also has its limitations.</p>

<p>For example, let's say you want to make a validator that would check if a validated value is in a certain list. With the static approach, you'd need to make a separate class for each list. But, if you make your class so that you instantiate it, you can make a general validator which would have list management methods (i.e., <code>assignArray</code>, <code>addItem</code>, <code>clearItems</code>, etc), and you could use that one single validator class for all the lists you want.</p>

<p>So, if PHP doesn't allow duality, I'd vote for the non-static approach.</p>
    </div>