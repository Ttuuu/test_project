<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I see a few small issues in the C++ code, that probably won't give any large performance benefit. Flex is doing the heavy work of reading the input and parsing it, there's not much you can do about that.</p>
<h1>Iterator arithmetic</h1>
<p>Instead of:</p>
<pre><code>case 10:
    {
        auto n{vec.size()};
        vec.push_back(yytext);
        std::iter_swap(vec.begin() + n, vec.begin() + n - 2);
    }
</code></pre>
<p>You can also do iterator arithmetic on the end iterator, thereby avoiding the need to get the size of the vector:</p>
<pre><code>case 10:
    vec.push_back(yytext);
    std::iter_swap(vec.end() - 1, vec.end() - 3);
</code></pre>
<h1>Don't <code>return 1</code> after reading a newline character</h1>
<p>There is no need to return from <code>yylex()</code> after reading a newline, just remove the <code>return 1</code> statement. This avoids needing the <code>while</code>-loop in <code>main()</code>.</p>
<h1>Use <code>emplace_back()</code> instead of <code>push_back()</code></h1>
<p>This avoids having to create a temporary that is being copied into the vector.</p>
    </div>