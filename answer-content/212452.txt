<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The existing answers cover most of the issues that I spotted. There's just one thing that I think it's useful to add:</p>

<blockquote>
<pre><code>    for st in (2**x for x in range(1, bound+1)):        #Generator for powers of 2.
        slce = list(traj2.items())[int((math.log(st,2)-1)**2):st]    #Slices "traj2" into powers of 2.
        result[st] = key(max([n[1] for n in slce]), traj2)
</code></pre>
</blockquote>

<p>This converts the <code>dict</code> into a list every time through the loop. The suggestions, which don't rely on undocumented behaviour, instead filter the <code>dict</code> each time through the loop. But you can instead invert the loop:</p>

<pre><code>    best = [0] * (bound + 1)
    for key, value in traj2.items():
        x = int(math.log(key, 2)) + 1
        if value &gt; best[x] or (value == best[x] and key &lt; result[2**x]):
            best[x] = value
            result[2**x] = key
</code></pre>

<p>This gives straightforward linear running time and allows you explicit control over tie-breaking. (I'm not sure whether I've got the tie-breaking correct for your conjecture, but you can easily fix that).</p>
    </div>