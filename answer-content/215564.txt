<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You may wish to try <a href="http://numba.pydata.org/" rel="nofollow noreferrer">numba</a>. Turn the DataFrame columns into Numpy arrays. Although, I couldn't get it working with letters, here it is with number id's. (ran in Jupyter)</p>

<pre><code>import sys
import timeit

import numpy as np
import pandas as pd
from numba import jit


n = 1000

id_arr = np.concatenate((np.tile(1, n//2),  np.tile(2, n//2)), axis=None)
df = pd.DataFrame({'id': id_arr,
                'x': np.random.randn(n)})

@jit(nopython=True)
def calculator_nb(id, x):
    res = np.empty(x.shape)
    res[0] = 0
    for i in range(1, res.shape[0]):
        if id[i] == id[i-1]:
            res[i] = x[i] - x[i-1]
        else: 
            res[i] = 0

    return res

%timeit calculator_nb(*df[['id', 'x']].values.T)
459 µs ± 1.85 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
</code></pre>
    </div>