<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In your implementation you have smashed together two separate roles: <strong>Product</strong> and <strong>Creator</strong>.</p>
<p>Your implementation is equivalent with the following:</p>
<pre><code>public class GoldCreditCard : CreditCard
{
    private GoldCreditCard(decimal creditLimit, decimal annualCharge)
    {
        CardType = CardType.Gold;
        CreditLimit = creditLimit;
        AnnualCharge = annualCharge;
    }

    public GoldCreditCard()
    {
        CardType = CardType.Gold;
        CreditLimit = 15000; 
        AnnualCharge = 100;
    }
}
</code></pre>
<p>Or almost with this one (this provides more flexibility):</p>
<pre><code>public class GoldCreditCard : CreditCard
{
    public GoldCreditCard(decimal creditLimit = 15000, decimal annualCharge = 100)
    {
        CardType = CardType.Gold;
        CreditLimit = creditLimit;
        AnnualCharge = annualCharge;
    }
}
</code></pre>
<p>The whole point of the pattern is that only the Creator (Factory) knows how to setup a concrete product. In your case your class knows how to initialize itself.</p>
    </div>