<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The trick is to use a <code>byte_repeater</code> like <a href="https://stackoverflow.com/a/45226040/9226753">here</a>. </p>

<pre><code>template&lt;typename T, std::size_t count, int byte&gt;
struct byte_repeater;

template&lt;typename T, int byte&gt;
struct byte_repeater&lt;T, 1, byte&gt; {
    static constexpr T value = byte;
};

template&lt;typename T, std::size_t count, int byte&gt;
struct byte_repeater {
    static constexpr auto value = (byte_repeater&lt;T, count-1, byte&gt;::value &lt;&lt; CHAR_BIT) | byte;
};
</code></pre>

<p>Add a convenient function <code>make_mask</code></p>

<pre><code>template&lt;typename T, int mask&gt;
struct make_mask {
    static constexpr auto value = byte_repeater&lt;typename std::make_unsigned&lt;T&gt;::type, sizeof(T), mask&gt;::value;
};
</code></pre>

<p>And then the <code>ostream&lt;&lt;</code> operator becomes:</p>

<pre><code>template&lt;typename T&gt;
std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::vector&lt;T&gt;&amp; obj)
{
    static constexpr auto width = sizeof(T) * 2;
    static constexpr auto mask = make_mask&lt;T,0xFF&gt;::value;
    os &lt;&lt; "[";
    std::for_each(obj.begin(), obj.end() - 1, [&amp;os](const auto&amp; elem) {
        os &lt;&lt; "0x" &lt;&lt; std::hex &lt;&lt; std::uppercase &lt;&lt; std::setw(width) &lt;&lt; std::setfill('0') &lt;&lt; (elem &amp; mask) &lt;&lt; ", ";
    });
    os &lt;&lt; "0x" &lt;&lt; std::hex &lt;&lt; std::uppercase &lt;&lt; std::setw(width) &lt;&lt; std::setfill('0') &lt;&lt; (obj.back() &amp; mask);
    os &lt;&lt; "]";
    return os;
}
</code></pre>

<h2><a href="https://godbolt.org/z/DE20aS" rel="nofollow noreferrer">LIVE DEMO</a></h2>
    </div>