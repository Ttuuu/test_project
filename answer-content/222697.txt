<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As I am not sure on how your Promises work, this is what I can come up with.</p>

<p>To reduce your <code>catch</code> nesting you could make each promise return another promise. This would force you to have a general <code>.then</code> and a general <code>.catch</code> after your <code>updateUser</code> method.</p>

<p>I stubbed a bit of code here:</p>

<pre><code>var updateUser = new Promise(function(resolve, reject) {
  resolve("Promise one");
});

var updateOrCreateAddresses = new Promise(function(resolve, reject) {
  reject("Promise two"); // e.g. replace reject with resolve to see it "pass"
});

var updateOrCreateBalances = new Promise(function(resolve, reject) {
  resolve("Promise three");
});

var success = () =&gt; {
    alert("Success");
}

updateUser.then( x =&gt; {
    return updateOrCreateAddresses.then(y =&gt; {
        return updateOrCreateBalances.then(z =&gt; {
            return success;
        })
    })
})
.then(a =&gt; a())
.catch(err =&gt; alert(err));
</code></pre>

<p>What happens there? Each promise is returning another promise. If one promise fails, the promise will return the "error" to it's parent, where on <code>updateUser</code> the promise get's finally caught.</p>
    </div>