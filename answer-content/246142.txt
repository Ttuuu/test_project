<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Why do <code>n</code> comparisons when you only need ~<code>n/2</code>? We can compare every <em>pair</em> of elements until we find a non-matching pair, then "short-circuit" and return whichever element is unique.</p>
<pre><code>def find_uniq(arr):
    common = arr[0]
    if common not in arr[1:3]:
        return common
    for a, b in zip(arr[1::2], arr[2::2]):
        if a != b:
            if a == common:
                return b
            else:
                return a
    return arr[-1]
</code></pre>
<p>A further improvement would be to use <code>iter</code> to avoid copies of <code>arr</code> being made in the <code>zip</code> statement.</p>
<pre><code>def find_uniq(arr):
    iterator = iter(arr)
    common = next(iterator)
    if common not in arr[1:3]:
        return common
    for a, b in zip(iterator, iterator):
        if a != b:
            if a == common:
                return b
            else:
                return a
    return arr[-1]
</code></pre>
    </div>