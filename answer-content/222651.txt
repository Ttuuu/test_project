<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Do not recurse if the iterative solution is readily available. In Python it is particularly very important: Python does not optimize tail recursion, and there is a serious chance to hit the stack limit.</p>

<p>For example, <code>make_request</code> should look like</p>

<pre><code>while True:
    try:
        res = requests.get(url, proxies=proxy, timeout=10)
    except Exception:
        continue
    print("proxy used in requests:",proxy)
    if res.status_code!=200:
        continue
    soup = BeautifulSoup(res.text, "lxml")
    return [urljoin(base_url,item.get("href")) for item in soup.select(".summary .question-hyperlink")]
</code></pre>

<p>Similarly, <code>start_script</code> shall also be converted into a loop. As a side benefit, there would be no need for the very alarming <code>usable_proxy</code> and <code>cbool</code> globals.</p></li>
<li><p>You shall not blindly retry on <code>res.status_code!=200</code>. Some status codes (e.g. a 400 family) guarantee that you will get the same error over and over again, resulting in the infinite loop.</p>

<p>Ditto for exceptions.</p></li>
</ul>
    </div>