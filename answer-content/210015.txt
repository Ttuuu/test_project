<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This looks quite clean in general. May I suggest a few minor improvements:</p>

<ul>
<li>I think you could just use <code>workbook.active</code> to get the sheet</li>
<li><p>instead of doing the <code>rstrip(".xlsx")</code> which would also right-strip out <code>.sslsx</code> or <code>sl.xs.ss</code> and even grab a part of the actual filename:</p>

<pre><code>In [1]: "christmas.xlsx".rstrip(".xlsx")
Out[1]: 'christma'
</code></pre>

<p>use <a href="https://stackoverflow.com/q/678236/771848"><code>os</code> module or the beautiful <code>pathlib</code> to properly extract a filename without an extension</a>:</p>

<pre><code>In [1]: from pathlib import Path

In [2]: Path("christmas.xlsx").resolve().stem
Out[2]: 'christmas'
</code></pre></li>
<li><p>calculate what you can before the loop instead of inside it. For instance, <code>sheet.max_row</code> is something you could just remember in a variable at the top of your function and re-use inside. It's not a lot of savings, but <em><a href="https://stackoverflow.com/questions/28597014/python-why-is-accessing-instance-attribute-is-slower-than-local">attribute access still has its cost in Python</a></em>:</p>

<pre><code>max_row = sheet.max_row
</code></pre></li>
<li><p>something similar is happening when you get the value of a cell twice, instead:</p>

<pre><code>cell_value = sheet.cell(column=column, row=row).value

if cell_value:
    textfile.writelines(cell_value + '\n')
</code></pre></li>
<li><p>it may be a good idea to keep the nestedness at a minimum (<a href="https://www.python.org/dev/peps/pep-0020/" rel="nofollow noreferrer">"Flat is better than nested."</a>) and would rather check for a reverse condition and use <code>continue</code> to move to the next iteration:</p>

<pre><code>for column in range(1, sheet.max_column + 1):
    if not sheet.cell(row=1, column=column).value:
        continue

    text_filename = get_text_filename(filename, column)
</code></pre></li>
</ul>

<p><strong>Some out-of-the-box ideas:</strong></p>

<ul>
<li>feels like if you do it with <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_excel.html#pandas-read-excel" rel="nofollow noreferrer"><code>pandas.read_excel()</code></a> it may just become way more easier and beautiful</li>
</ul>
    </div>