<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Note that some messages from exceptions expand to more lines (e.g. ArgumentNullException), so consider to replace new line characters while formatting the message so each exception message is written neatly in one line:</p>

<pre><code>exception.Message.Replace(Environment.NewLine, " ")
</code></pre>

<hr>

<p>My version would look something like:</p>

<pre><code>public static string GetMessageTree(this Exception ex, string indent = "")
{
  if (ex == null) return string.Empty;

  if (ex is AggregateException aggregate)
    return aggregate.GetMessageTree(indent);

  return string.Format("{0}{1}{3}{2}", 
    indent, 
    ex.Message.Replace(Environment.NewLine, ": "), 
    ex.InnerException.GetMessageTree($"{indent}    "), 
    Environment.NewLine);
}

public static string GetMessageTree(this AggregateException ex, string indent = "")
{
  if (ex == null) return string.Empty;

  StringBuilder builder = new StringBuilder();
  builder.AppendLine($"{indent}{ex.Message} -&gt;");

  foreach (Exception childEx in ex.InnerExceptions)
  {
    builder
      .AppendLine(
        childEx
        .GetMessageTree($"{indent}    ")
        .TrimEnd(Environment.NewLine.ToCharArray()));
  }

  return builder.ToString();
}
</code></pre>

<p>Because the Polymorphism doesn't seem to work in extension methods it is necessary to check for <code>AggregateException</code> in the bass class extension</p>
    </div>