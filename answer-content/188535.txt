<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Design</h2>

<p>You have implemented the class as a singleton, but made the constructor public. That makes the use of the singleton pattern kind of useless. Since you want the class to only be instantiated once, which is inside the class itself, you should make it <code>private</code>.</p>

<hr>

<pre><code>public ArrayList&lt;SimilarityModel&gt; getRelatums(String keyword)
</code></pre>

<p>Especially in the API of a class, i. e. its public members like this method, you should use interfaces or abstract types, rather than specific implementations. If you replace <code>ArrayList&lt;SimilarityModel&gt;</code> with <code>List&lt;SimilarityModel&gt;</code>, you can use any implementation of <code>List</code> that you like, without having to change many parts of your code.</p>

<h2>Style</h2>

<p>The Java convention for class names is <code>UpperCamelCase</code>. <code>ontologyConnector</code> should be <code>OntologyConnector</code>.</p>

<hr>

<p>Your names are not only inconsistent in capitalization, but also abbreviation. <code>OntModel</code> should be written out as <code>OntologyModel</code>, to fit with <code>OntologyConnector</code> but also because abbreviations sometimes force the reader to guess what it means and thus destroy the code's readability.</p>

<hr>

<pre><code>public ArrayList&lt;SimilarityModel&gt; getRelatums(String keyword)
</code></pre>

<p>The return type suggests that the method returns a collection of <code>SimilarityModel</code>s, but is named <code>getRelatums</code>. It should be called <code>getSimilarityModels</code>, if that's what it is actually doing. If not, then the name of the type <code>SimilarityModel</code> might be chosen badly.</p>

<hr>

<p><em>As others have already pointed out in the comments, in order to get help with the performance problem you need to add more information and code (e. g. the classes <code>OntModel</code> and <code>SymmetricProperty</code>). However in my opinion there is still a lot you can improve in the already available code to make it worth a review. Please add more code to get further suggestions as performance improvements.</em></p>
    </div>