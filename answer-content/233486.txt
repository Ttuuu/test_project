<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Developing further based on <a href="https://codereview.stackexchange.com/a/233467/149207">TinMan's excellent answer</a> and other posters' contributions, I came up with this:</p>

<pre><code>Public Function IsDistinct(LeftValue As Variant, RightValue As Variant) As Boolean
    If LeftValue &lt;&gt; RightValue Then
        IsDistinct = True
    ElseIf IsNull(LeftValue) Xor IsNull(RightValue) Then
        IsDistinct = True
    End If
End Function
</code></pre>

<p>Both this version and TinMan's version reduces the number of evaluations to only 1 in the best case and 2 for the worst case. However, this version exploits the fact that the <code>If</code> conditions will treat <code>Null</code> result as a falsy result.<sup>1</sup>   </p>

<p>Therefore, only equal values and <code>Null</code> result will proceed to the <code>ElseIf</code> condition, which we use the <code>Xor</code> to verify that they aren't both <code>Null</code>. If that doesn't match, then we know that they are considered the same value. </p>

<p>This is more terse but I think the readability hurts a bit because of the <code>LeftValue &lt;&gt; RightValue</code> potentially returning a <code>Null</code> result which does not make for most intuitive thinking through the logical procession. But I would say that it's more common to compare one value against another value than it is to have <code>Null</code> against any other value or having both <code>Null</code> so that is also a good optimization, I think. Need to test whether this is in fact an improvement in speed, though.</p>

<hr>

<p>1) Aside: I found out that <code>Select Case True</code> does not like <code>Null</code> results; we get an <code>Invalid Use of Null</code> error with that structure. Thus, it must be a <code>If/ElseIf</code> which tolerates <code>Null</code> result. However, It's very important to remember that with a <code>Null</code> result, it will never ever enter any <code>If</code> or <code>ElseIf</code> branch, and therefore always fall into the <code>Else</code> or through.</p>
    </div>