<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some suggestions:</p>

<ol>
<li><code>shellcheck</code> should give you a few suggestions. I won't mention things I expect it to find.</li>
<li>Uppercase names are by convention only used for exported variables.</li>
<li><code>SUBDIRECTORY_OK</code> is unused. If it's a magic variable this probably should be mentioned.</li>
<li><code>SIZER</code> is only used once, so it should be inlined.</li>
<li><code>wc -w</code> 8.30 from GNU coreutils, at least, does not output any spaces, so <code>tr -d ' '</code> might be unnecessary.</li>
<li><code>(($# &gt; 0))</code> would usually be written <code>[[ "$#" -gt 0 ]]</code>.</li>
<li>Throwing away standard error means the script will be harder to debug. If there's <em>specific</em> output there you want to hide you can use <code>cmd 2&gt; &gt;(grep -v â€¦ &gt;&amp;2)</code></li>
<li><strike><code>commit_len</code> is slow because for each commit you run a <code>git</code> command &amp; more to count the number of commits <em>before</em> it. Which means you traverse the Git history N times. I think you'll get the same result by running <code>size "$1"</code>.</strike></li>
<li>You can use <code>shift</code> to simplify things like <code>"${@:2}"</code> to just <code>"$@"</code>.</li>
<li><code>dc</code> is not a tool I'm familiar with, but it will certainly be faster to count using something like <code>awk</code> to gobble the whole stream in one command. <a href="https://unix.stackexchange.com/q/169716/3645"><code>while read</code> is actually surprisingly slow</a>.</li>
</ol>
    </div>