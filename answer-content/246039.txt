<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Your workbook</h2>
<p>It has a few issues:</p>
<ul>
<li>It should not be a global</li>
<li>It should not be assigned an empty string, since it actually (eventually) takes a <code>Workbook</code> instance</li>
<li>Ideally it should be opened and closed in the same function, not different functions</li>
</ul>
<p>Also, based on the <a href="https://xlsxwriter.readthedocs.io/workbook.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>The <code>Workbook()</code> method also works using the with context manager. In which case it doesnâ€™t need an explicit <code>close()</code> statement</p>
</blockquote>
<p>So do that.</p>
<h2>Date formatting</h2>
<pre><code>'day-sheet-%s.xlsx' % today.strftime('%d-%m-%y')
</code></pre>
<p>can be</p>
<pre><code>f'day-sheet-{today:%d-%m-%y}.xlsx'
</code></pre>
<p>This uses string interpolation and inline <code>datetime</code> formatting.</p>
<h2>Cell defaults</h2>
<pre><code>worksheet.set_default_row(12.6)
worksheet.set_column('A:A', 4.11)
worksheet.set_column('AA:AA', 3.11)
worksheet.set_column('AB:AB', 5.56)
cell_format = get_spacer_format()
worksheet.set_column('AC:AC', 0.63, cell_format)
worksheet.set_column('AF:AF', 4.56)
worksheet.set_column('AG:AG', 14.11)
worksheet.set_column('AH:AJ', 6.56)
worksheet.set_column('B:K', 2.56)
worksheet.set_column('L:L', 3.11)
worksheet.set_column('P:P', 4.11)
worksheet.set_column('Q:AA', 2.56)
worksheet.set_column('M:M', 5.22)
worksheet.set_column('N:N', 5.33)
worksheet.set_column('O:O', 1.67)
</code></pre>
<p>These constants, ideally, should be externalized - possibly to a (maybe-global) constant tuple of floats, decoupled from the column specifications.</p>
<h2>Day of week</h2>
<pre><code>int(datetime.today().strftime('%w'))
</code></pre>
<p>should not go through string formatting. Instead, call into <a href="https://docs.python.org/3/library/datetime.html#datetime.date.weekday" rel="nofollow noreferrer">https://docs.python.org/3/library/datetime.html#datetime.date.weekday</a></p>
<h2>More string interpolation</h2>
<pre><code>url = ('xxx'
       'xxx/{year}-{week}-{day}'
       .format(
           **{'day': day, 'week': week, 'year': year}
       ))
</code></pre>
<p>is simpler as</p>
<pre><code>url = (
    'xxx'
    f'xxx/{year}-{week}-{day}'
)
</code></pre>
<h2>Header case</h2>
<p>Even though these will work, technically:</p>
<pre><code>headers = {
    'x-api-key': 'xxx',
    'content-type': 'application/json; charset=UTF-8',
    'referer': 'xxx',
    'x-betfair-token': 'xxx',
    'authorization': ACCESS_TOKEN
}
</code></pre>
<p>The standard capitalization for header keys is <a href="https://www.iana.org/assignments/message-headers/message-headers.xml#perm-headers" rel="nofollow noreferrer">TitleCase</a>, and you should use it.</p>
<h2>Posting JSON</h2>
<pre><code>requests.post(
    url,
    data=json.dumps(data).replace(' ', ''),
    headers=headers
)
</code></pre>
<p>Don't call <code>json.dumps</code>. You can just pass a dictionary to the <code>json</code> kwarg.</p>
<h2>Set comprehensions</h2>
<pre><code>    set(
        [
            race['G_track']
            for race in races
        ]
    )
</code></pre>
<p>can be</p>
<pre><code>{
    race['G_track']
    for race in races
}
</code></pre>
    </div>