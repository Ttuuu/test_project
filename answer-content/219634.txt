<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is not a full answer, but it should lead you to the right way:</p>

<pre><code>Option Explicit
Sub ImportData()

    Dim wb2 As Workbook
    Dim ws1 As Worksheet 'you can also reference sheets
    Dim ws2 As Worksheet
    Dim slr As Long
    Dim dlr As Long
    Dim Tlr As Long
    Dim arrData 'working with arrays is always better
    Dim i As Long
    Dim DictDuplicates As New Scripting.Dictionary 'You need Microsoft Scripting Runtime for this to work

    'I'm gonna assume you don't have/want formulas on the INPUT_DATA so it will be all values.
    With ThisWorkbook 'always better ThisWorkbook if its the same containing the code
        Set ws1 = .Sheets("INPUT_DATA")
        Set ws2 = .Sheets("TOTAL_DATA")
    End With

    'Lets Store the lookup data in a dictionary so you can check it later
    With ws2
        dlr = .Cells(.Rows.Count, 30).End(xlUp).Row
        For i = 2 To dlr ' I'm assuming the data has headers, if not, change 2 for 1
            'This may throw an error if your data is duplicated on that sheet
            DictDuplicates.Add .Cells(i, 30), i 'store the value and it's position for later needs
        Next i
    End With


    FileToOpen = Application.GetOpenFilename _
    (Title:="Select import file", _
    FileFilter:="Microsoft Excel Workbooks (*.xls;*.xlsx;*.xlsm),*.xls;*.xlsx;*.xlsm")

    If FileToOpen = False Then
        MsgBox "No File Specified.", vbExclamation, "ERROR"
        Exit Sub
    Else
        Set wb2 = Workbooks.Open(Filename:=FileToOpen, ReadOnly:=True) 'since you are not writting, open it on ReadOnly to avoid problems
        With wb2.Worksheets("Sheet1")
            slr = .Cells(.Rows.Count, 1).End(xlUp).Row 'You didn't qualified the Rows.Count
            arrData = .Range("A8:S" &amp; slr).Value
        End With
        wb2.Close savechanges:=False
    End If

   'Now you can work on the array
    For i = 2 To UBound(arrData) ' I'm assuming the data copied has headers, if not, change 2 for 1
        If DictDuplicates.Exists(arrData(i, 1) &amp; """__""" &amp; arrData(i, 2)) Then
            'If the concatenated data exists on the dictionary
        Else
            'If it doesn't

        End If
    Next i
    With ws1
        .Range(.Cells(1, 1), .Cells(UBound(arrData), UBound(arrData, 2))).Value = arrData 'paste the array to the worksheet
    End With

End Sub
</code></pre>

<p>Think of using arrays/dictionaries when working with large amounts of data.</p>
    </div>