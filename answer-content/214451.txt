<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>While <a href="https://codereview.stackexchange.com/a/214407/98493">the answer</a> by <a href="https://codereview.stackexchange.com/users/193138/beno%C3%AEt-pilatte">@Beno√ÆtPilatte</a> is fine as long as you want to keep this a recursive solution, here is a solution using only generators.</p>

<p>First, <a href="https://pythonclock.org/" rel="nofollow noreferrer">Python 2 is going to be no longer supported in less than a year</a>. If you have not yet switched to Python 3, now is the time. As a small incentive I am going to assume Python 3 in the rest of this answer.</p>

<p>Now, let's start by building a generator that takes the user input until an empty line is entered:</p>

<pre><code>def user_input():
    while True:
        s = input()
        if not s:
            return
        yield s
</code></pre>

<p>That was easy, and now we are already done, because we can just use <code>str.upper</code> directly, since the output of <code>input</code> is a string, no need for a recursive function to do it for you:</p>

<pre><code>def solution():
    for line in user_input():
        print(line.upper())
</code></pre>

<p>Alternatively we can chain generators and use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a>:</p>

<pre><code>def solution():
    for line in map(str.upper, user_input()):
        print(line)
</code></pre>

<p>As you can see this is vastly shorter and more readable, regardless of the stack size limit in Python.</p>
    </div>