<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't have the time to write a complete review but I do have possible (big) change you may want to consider. That is to see if you can use javaFX's Properties to store (and update) your numbers.</p>

<p>For example, taken from <a href="https://docs.oracle.com/javafx/2/binding/jfxpub-binding.htm" rel="nofollow noreferrer">here</a>.</p>

<blockquote>
  <p>Example 3 Using the Fluent API</p>

<pre><code>package bindingdemo;   

import javafx.beans.property.IntegerProperty;
import javafx.beans.property.SimpleIntegerProperty; 
import javafx.beans.binding.NumberBinding;   

public class Main {

public static void main(String[] args) {
    IntegerProperty num1 = new SimpleIntegerProperty(1);
    IntegerProperty num2 = new SimpleIntegerProperty(2);
    NumberBinding sum = num1.add(num2);
    System.out.println(sum.getValue());
    num1.set(2);
    System.out.println(sum.getValue());
} }
</code></pre>
</blockquote>

<p>This example shows that you can "bind" the result of some calculation to the input values. You can than use that binding to calculate the resulting cookies for your player.</p>

<p>This way, you only need to update the cookies of each factory (or other source) and the ammount of cookies available to the player will automatically update to the correct total.</p>
    </div>