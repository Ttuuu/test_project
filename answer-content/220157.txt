<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your loop approach works but seems a bit convoluted. For instance you could rewrite the <code>for</code> loop this way:</p>

<pre><code>for (i in 1:number_of_characters) {

  end &lt;- i + 3

  if (end &lt;= number_of_characters) {
    temp &lt;- substring(text, i, end)
    quad_gram_list &lt;- append(quad_gram_list, temp)
  }
}
</code></pre>

<p>But anyway it's generally better to avoid loops in R.</p>

<p>Also note that:</p>

<ul>
<li>you should use <code>character(0)</code> instead of <code>""[-1]</code></li>
<li><code>:</code> is to be avoided because of undesired behaviour on edge cases. It's better to use <code>seq_len()</code>.</li>
</ul>

<p>Here are two alternative solutions:</p>

<p><strong>1) Using base R:</strong></p>

<pre><code>unlist(lapply(seq_len(nchar(text) - 3), function(i) substring(text, i, i + 3)))
# [1] "hell" "ello" "llo " "lo w" "o wo" " wor" "worl" "orld"
</code></pre>

<p><strong>2) Using <code>tokenizers</code>:</strong></p>

<pre><code>library(tokenizers)

tokenize_character_shingles(
  text,
  n = 4,
  strip_non_alphanum = FALSE,
  simplify = TRUE
)
# [1] "hell" "ello" "llo " "lo w" "o wo" " wor" "worl" "orld"
</code></pre>
    </div>