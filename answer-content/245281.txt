<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>keyword arguments</h1>
<p>I had to check the documentation to find out what the <code>1</code> means in <code>df1.drop('new_id', 1)</code>. More clear would be <code>df1.drop('new_id', axis=1)</code>, or even better: <code>df1.drop(columns=["type_", "new_id"])</code></p>
<h1>Don't overwrite raw data</h1>
<p>You add columns and values to <code>df1</code>, which makes finding problems harder.</p>
<p>With a bit of reshuffling, and using <code>df.join</code> instead of <code>pd.merge</code>, you can make your intent a bit more clear</p>
<pre><code>df6= df1.join(
    df2.assign(level="l1").set_index(["id", "level"]),
    how="outer",
    on=["id", "level"],
).join(
    df3.assign(level="l2").set_index(["id", "level"]),
    how="outer",
    on=["id", "level"],
    lsuffix="_",
)
</code></pre>
<h1>np.where</h1>
<p>If you're looking for null, you can use <code>fillna</code> or <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.combine_first.html" rel="nofollow noreferrer"><code>combine_first</code></a>. To replace <code>'l2'</code> with <code>'l3'</code>, you can use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.replace.html" rel="nofollow noreferrer"><code>Series.replace</code></a>.</p>
<pre><code>df7 = df6.assign(
    id=df6["new_id"].fillna(df6["id"]).astype(int),
    type=df6["type_"].fillna(df6["type"]),
    level=df6["level"].replace("l2", "l3")
).drop(columns=["type_", "new_id"])
</code></pre>
<p>I don't know whether this approach will be faster, but to me, what happens here is a lot more clear.</p>
    </div>