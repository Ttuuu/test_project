<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is no state being kept in the <code>MafStats</code> object, so it is nothing more than a namespace with an awkward usage.  These should all just be functions in a <code>mafstats</code> module.</p>

<p>You're obviously deliberately reinventing the wheel here, since <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.var.html" rel="nofollow noreferrer"><code>numpy.var()</code></a> and other statistical functions already exist in NumPy and SciPy.  The question is, how far do you go with writing code the hard way?  <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer"><code>sum()</code></a> is a built-in function; <code>** .5</code> is already quite compact and efficient; <a href="https://docs.python.org/3/library/math.html#math.sqrt" rel="nofollow noreferrer"><code>math.sqrt()</code></a> and <a href="https://docs.python.org/3/library/math.html#math.factorial" rel="nofollow noreferrer"><code>math.factorial()</code></a> already exist.  Clearly, the built-in <code>sum()</code> function is the best way to calculate a sum in Python, so I'm not sure what we're reviewing here.  I can say, though, that <code>float(total_sum)</code> has a pointless cast to float and a self-redundant variable name.</p>
    </div>