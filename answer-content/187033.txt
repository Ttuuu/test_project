<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Use a single import</h2>

<p>Instead of importing each individual class, I recommend importing the whole module with a short name. You can then use the short name as a prefix for all of your commands. It makes your code a bit more self-documenting, especially if you mix both tkinter and ttk in the same application.</p>

<p>For example:</p>

<pre><code>import tkinter as tk
...
window = tk.Tk()
button = tk.Button(window, text="Start", command=askQuestion)
</code></pre>

<h2>Separate widget creation from layout</h2>

<p>In my experience, the layout of a GUI changes a lot more than the actual widgets, especially early in development. By separating widget creation from widget layout, it makes debugging much easier. It also makes it much easier to visualize the layout just by looking at the code. </p>

<p>Instead of this:</p>

<pre><code>Label(view, text=self.question).pack()
Button(view, text=self.answers[0], command=lambda *args: self.check("A", view)).pack()
Button(view, text=self.answers[1], command=lambda *args: self.check("B", view)).pack()
Button(view, text=self.answers[2], command=lambda *args: self.check("C", view)).pack()
Button(view, text=self.answers[3], command=lambda *args: self.check("D", view)).pack()
</code></pre>

<p>... I recommend this:</p>

<pre><code>label = Label(view, text=self.question)
button_a = Button(view, text=self.answers[0], command=lambda *args: self.check("A", view))
button_b = Button(view, text=self.answers[1], command=lambda *args: self.check("B", view))
button_c = Button(view, text=self.answers[2], command=lambda *args: self.check("C", view))
button_d = Button(view, text=self.answers[3], command=lambda *args: self.check("D", view))

label.pack()
button_a.pack()
button_b.pack()
button_c.pack()
button_d.pack()
</code></pre>

<h2>Explicitly set <code>side</code> for pack</h2>

<p>I recommend always explicitly setting the side for <code>pack</code>. Even though the default will likely never change, explicitly setting the side makes the code less ambiguous:</p>

<pre><code>label.pack(side="top")
button_a.pack(side="top")
button_b.pack(side="top")
button_c.pack(side="top")
button_d.pack(side="top")
</code></pre>
    </div>