<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It looks like you have incorporated much of the feedback from <a href="https://codereview.stackexchange.com/a/209298/120114">AJNeufeld's answer to your previous question</a> and the code looks better. The indentation is a little inconsistent though - for example, some lines are indented with two spaces, some four (or one tab), and then in some spots eight spaces/two tabs (e.g. the 10th line of <code>solve()</code>). Make the indentation consistent for the sake of anyone reading your code (including yourself in the future).</p>

<p>I <a href="https://onlinegdb.com/B189w0wWN" rel="nofollow noreferrer">tried running the code on on onlinegdb.com</a>. In order to run the code there, I had to put the class definition for <code>MagicSquare</code> in a separate file (i.e. <code>MagicSquare.java</code>). Then in the <code>main</code> method, the code calls the <code>solve</code> method, which is a private method, like all methods except for the constructor. In order for a non-abstract class to be useful, usually it will need to have at least one method other than the constructor. The same is true for the member/instance variable/property <code>solutions</code> - it is referenced from the <code>main</code> method. </p>

<p>Perhaps you are simply running the code in a single file but in larger projects you will likely need to use multiple files.</p>

<hr>

<p>The following block can be simplified:</p>

<blockquote>
<pre><code>for(int i=0; i&lt;squareSize; i=i+size+1) {
    diagonal1 = diagonal1 + square[i];
}
</code></pre>
</blockquote>

<p>Instead of assigning the value to <code>diagonal1 + square[i]</code>, use the compound operator <a href="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op1.html#PageContent" rel="nofollow noreferrer"><code>+=</code></a> <sub>(just as it was used in the last <code>for</code> loop of the <code>solve()</code> method for <code>row_sum</code> and <code>col_sum</code>)</sub>:</p>

<pre><code>for(int i=0; i&lt;squareSize; i+=size+1) {
    diagonal1 += square[i];
}
</code></pre>

<p>The same is true for the <code>for</code> loop after that to add to <code>diagonal2</code>.</p>

<hr>

<p>One last comment about the UI: <a href="https://codereview.stackexchange.com/q/209272/120114">Your original post</a> doesn't appear to contain any formal requirements but it might be wise to print explanatory text to prompt the user to enter the number to be used for the magic number.</p>
    </div>