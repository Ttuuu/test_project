<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think this code is very basic. I didn't look very deeply inside it and didn't bother to run it. I think I can give you some advices without it. I only looked at readability not efficiency, which when you are using standard c++ should be fine in most cases. You should usually be woried about efficiency only when you detect there is problem with it and it matters. There were some highlights in your code but there are things you should work at.</p>

<ol>
<li><p>hungarian notation. I don't want to get into this discussion, but I think nowadays it's not popular to use it. So imho:
sUsername should be called username.
sPassword - password
objUsers - users
etc...</p></li>
<li><p>Lines in comments shouldn't be longer than code itself. It's very annoying to reader.</p></li>
<li><p>In Add_Text_File_To_Vector:</p></li>
</ol>

<p>file3 should be passed as argument (type of argument should be const std::istream &amp;) and why is it called file3? Where is file1, file2...</p>

<p>Name of file should not be inside function. Functions should be generic, works in different environments. This is gonna work only in your filesystem with your directory structure. </p>

<p>You could define file in main in first line, eg:</p>

<pre><code>std::string inputFilePath = "/Applications/Practice.cpp/Practice.cpp/Practice/doodle/HowQuickly/HowQuickly/new.txt"
</code></pre>

<p>Or better yet, program filename could be argument to program. I mean you could change <code>int main()</code> to <code>int main(int argc, char** argv)</code> and pass it as argv. This way you could try different input files without recompiling program.</p>

<p>Potential reviewer have to dive deep into your code to even run it.</p>

<p>I don't understand the point of this:</p>

<pre><code>if (objUsers.size() == 0) {
    // loop code
}
</code></pre>

<p>You should just write code without this if condition.
Without it program is gonna work the same way and function will be simpler and more generic. If you realy wanted to kind of assert, that input is correct you could write: <code>assert(objUsers.size() == 0)</code>
This way program would immediately stopped on error - and this is good behavior for most programs.</p>

<p>It was very hard to figure out what <code>objSplit</code> is for. But I think you wanted to do some optimization because I don't see it is used anywhere. I think you should create this vector inside function. You shouldn't bother reader of your high level code with this low level detail. If it is realy true (it's not obvious), that resize(0) is faster than creating objSplit from scratch every time and it is realy gonna make a difference than you could make it a global variable. Premature optimization are usualy harmfull and this was very harmfull for readability. And it was not said in comment. I had to figure it out by myself. Comment near the function only stated obvious thing that I figured out before I read it.</p>

<p>I think this singature of function would be better:</p>

<pre><code> Read_Users_List(const istream &amp; input, vector&lt;User&gt;&amp; users) {}
</code></pre>

<ol start="4">
<li>In Create_Account</li>
</ol>

<p>you passed objUsers but function don't use it. This is plain wrong and hurts readability.</p>

<p>5 Check_Text_File</p>

<p>name of function is a lie. It doesn't check any text file inside it. It should be called for example Is_Username_Unique.
And it should not has sPassword as argument, because it is not used anywhere.</p>

<p>If you use c++11 you could exchange:</p>

<pre><code>for(int iCount = 0; iCount &lt; objUsers.size(); iCount++)
</code></pre>

<p>with </p>

<pre><code>for (const auto &amp; user : objUsers)
</code></pre>

<p>and than use:</p>

<pre><code>if (sUsername == user.sUsername)
</code></pre>

<p>instead of:</p>

<pre><code>if (sUsername == objUsers.at(iCount).sUsername)
</code></pre>

<p>It is important to use this whenever you can. Because it is easier to read and more errorproof.</p>

<ol start="6">
<li>Append_Credential_To_Text_File</li>
</ol>

<p>You hardcoded name of the file with credentials. You write the same name of the file twice in your code. This is the worst thing you done so far. You should pass the name of file as argument or at least make it a global variable. In this program you have to change one thing in two places. 
If i wanted to run this, I'd have to change the path in two places.</p>

<ol start="7">
<li>Last_Line_To_Vector:</li>
</ol>

<p>the same filename again...
This has so much duplication in it... and it is sooo complex. 
Couldn't you just write </p>

<pre><code>objUsers.push_back({sUsername, sPassword}); 
</code></pre>

<p>instead:</p>

<pre><code>Last_Line_To_Vector(objUsers);
</code></pre>

<p>Or at least you could write:</p>

<pre><code>User objUser;
objUser.sUsername = sUsername;
objUser.sPassword = sPassword;
objUsers.push_back(objUser);
</code></pre>

<p>If I understood correctly that this is what you wanted to do...</p>

<ol start="8">
<li>Login_To_Account</li>
</ol>

<p>sUsername and sPassword does nothing. Shouldn't you return it somehow from function, for example add arguments <code>string &amp; sUsername</code>, <code>string &amp; sPassword</code> 
than Is_Login_Details_Correct would have more sense... You should pass to this function the same credentials.</p>

<pre><code>while(Is_Login_Details_Correct(objUsers, sUsername, sPassword) == false);
</code></pre>

<p>should be just:</p>

<pre><code>while(not Is_Login_Details_Correct(objUsers, sUsername, sPassword));
</code></pre>

<p>There are more things that could be done better, but let's start with this.</p>
    </div>