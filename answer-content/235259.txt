<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>People are so weird about <code>using namespace std;</code>. If it's a main.cpp file and you promise not to rename it like main.h to include into something else, it's fine and reduces noise. Are you <strong>seriously</strong> worried about <strong>needing</strong> to write colliding names like cout or string? It's a reasonable habit to build to qualify names since it will be necessary in larger codebases, but that rationale is premature for single file learning code. </p>

<p>Mixing std::cout with cin is a mistake though. To a reader, that implies there's some sort of significant difference between the two, like cin is not of the std:: namespace because otherwise why would the author specifically qualify cout? </p>

<hr>

<p>Use a formatter like clang-format. Your main function is indented by 1 which I'm pretty sure is unintentional. You should never need to think too much about formatting in any language.</p>

<hr>

<p>Compile your code with warnings on, e.g. <code>-Wall</code>. I got:</p>

<pre><code>&lt;source&gt;: In function 'int main()':

&lt;source&gt;:21:41: warning: right operand of comma operator has no effect [-Wunused-value]

   21 |     Whitelist = "Fred267s", "Seb4572s", "Popp4593s";

      |                                         ^~~~~~~~~~~

&lt;source&gt;:21:52: warning: right operand of comma operator has no effect [-Wunused-value]

   21 |     Whitelist = "Fred267s", "Seb4572s", "Popp4593s";

      |                                                    ^

&lt;source&gt;:31:50: warning: right operand of comma operator has no effect [-Wunused-value]

   31 |     else if (Username != "Fred267s", "Seb4572s", "Popp4593s" ){

      |                                                  ^~~~~~~~~~~
</code></pre>

<p>Which would have clued you into that issue automatically.</p>
    </div>