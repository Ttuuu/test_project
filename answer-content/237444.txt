<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>We want to exclude from the vector (more generally a sequence) the maps of which any map in the blacklist is a sub-map. Let's define a function that tests whether its first argument is a sub-map of its second argument:</p>

<pre><code>(defn submap? [a b]
  (every? (fn [[k v]] (= v (b k)))  a))
</code></pre>

<p>For instance,</p>

<pre><code>=&gt; (map #(submap? {1 2} %) [{} {1 1} {1 2}])
(false false true)
</code></pre>

<p>So far, so good. Let's use <code>submap?</code> to define function <code>clean</code> that takes a blacklist and a sequence of maps as arguments, excluding any supermaps of any map in the blacklist from the sequence:</p>

<pre><code>(defn clean [blacklist ms]
  (filter
    (fn [m] (not-any? #(submap? % m) blacklist))
    ms))
</code></pre>

<p>For example, </p>

<pre><code>=&gt; (clean blacklist my-list)
({:a 1, :b 5, :c 6} {:a 7, :b 8, :c 12})
</code></pre>

<hr>

<p><code>submap?</code> could be careful about absent keys. If you have <code>nil</code> values, you need to fix this. </p>
    </div>