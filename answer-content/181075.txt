<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your <code>param('f')</code> is user-provided and may therefore open up security concerns. In particular, it may be used to navigate to <code>$basepath/../../some-secret-file.pdf</code>. The impact is reduced because you can only read files ending in <code>.pdf</code>, but it fundamentally still exists.</p>

<p>As a mitigation, you should limit the allowed file names and match for those. I.e. explicitly validate that you have a good filename, don't just try to exclude a few known-bad patterns. For example, you might want to allow any filenames that only consist of ASCII letters or digits, in that case:</p>

<pre><code>unless ($filename =~ /\A[a-zA-Z0-9]+\z/) {
  die "Illegal file name was provided: $filename";
}
</code></pre>

<p>(The assertions <code>\A</code> and <code>\z</code> anchor at the beginning/end of the string, and therefore ensure that the whole string matches this pattern and doesn't just contain this pattern somewhere.)</p>

<p>Instead of <code>die</code> which will be visible to users as a 500 internal server error, explicitly returning some 4xx error might be more appropriate.</p>
    </div>