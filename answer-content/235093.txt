<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is just some minor optimization, but it should already be faster.
Instead of looping over the length of <code>skipgrams_and_labels</code> and then do a triple index lookup with <code>skipgrams_and_labels[i][j][k]</code>, we loop directly over the elements and use enumerate to still get the index for b.</p>

<pre><code>def word2vec_batch(sequences, vocabulary_length, batch_size=20):
    batch_indices = np.random.choice(sequences.shape[0], batch_size, replace=False)
    batch = sequences[batch_indices, :]
    assert batch.ndim == 2
    skipgrams_and_labels = [skipgrams_labels(sequence, vocabulary_length) for sequence in sequences]
    print(f"Maximum question length {max(len(question) for question in batch)}")
    shape_zero = len(skipgrams_and_labels)
    shape_one = max(len(x) for x in skipgrams_and_labels)
    shape_two = max(len(y) for x in skipgrams_and_labels for y in x)
    b = np.zeros((shape_zero, shape_one, shape_two))
    print(b.shape)
    for i, a in enumerate(skipgrams_and_labels):
        for j, b in enumerate(a):
            for k, c in enumerate(b):
                b[i][j][k] = c
    return b
</code></pre>

<p>EDIT:
This should be even faster because it gets rid of the other triple index lookup <code>b[i][j][k]</code>:</p>

<pre><code>def word2vec_batch(sequences, vocabulary_length, batch_size=20):
    batch_indices = np.random.choice(sequences.shape[0], batch_size, replace=False)
    batch = sequences[batch_indices, :]
    assert batch.ndim == 2
    skipgrams_and_labels = [skipgrams_labels(sequence, vocabulary_length) for sequence in sequences]
    print(f"Maximum question length {max(len(question) for question in batch)}")
    shape_zero = len(skipgrams_and_labels)
    shape_one = max(len(x) for x in skipgrams_and_labels)
    shape_two = max(len(y) for x in skipgrams_and_labels for y in x)
    b = [c for a in skipgrams_and_labels for c in b for b in a]
    return np.array(b).reshape(shape_zero,shape_one,shape_two)
</code></pre>
    </div>