<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Code showing some of the points AJNeufeld mentioned.</p>

<p>Further points:</p>

<ul>
<li>You can check most false states in one condition</li>
<li>Because of this, you only need to check factors from a minimum of 3</li>
<li>Working through the possible factors in ascending order will produce a quicker result. E.g. 1200 is not divisible by 1199, but is by 3.  </li>
<li>You only need to check factors up to the square root of the passed number, since any numbers after that will start repeating previously checked calculations. E.g. 3 * 400 == 400 * 3</li>
<li>Any even factor will produce an even number, so we can skip checking even factors in the for loop using a step size of 2</li>
</ul>

<pre><code>import math

num = int(input("Enter your number: "))

# check all negative numbers, 0, 1 and even numbers
if num &lt;= 1 or (num % 2 == 0 and num &gt; 2):
    print(num, "is not a prime number")
else:
    # calculate square root as maximum factor to check
    # any numbers past this point will start repeating
    # previously checked values since a * b == b * a
    sqrt = math.sqrt(num)
    # start from 3, checking odd numbers only
    # even factors will result in an even num
    # + 1 on end ensures loop runs for x == 3
    for x in range(3, int(math.floor(sqrt)) + 1, 2):
        if num % x == 0:
            print(num, "is not a prime number")
            break
    # no factor found, loop falls through
    else:
        print(num, "is a prime number")

</code></pre>
    </div>