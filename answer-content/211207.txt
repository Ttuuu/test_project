<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have a few flags (<code>removed</code>, <code>responded</code>) which are almost equivalent and possibly useless. <code>removeListener()</code> won't cause any error if listener has been already removed then <code>removed</code> is unnecessary. After you called <code>removeListener()</code> your callback won't be called then also <code>responded</code> (which BTW is a misleading name) is unnecessary. Also, <code>setTimeout()</code> won't call its callback twice then again <code>responded</code> isn't necessary.</p>

<p>Use <code>const</code> instead of <code>let</code> whenever possible and declare your variables (usually one per line) when you initialize them. In (untested) code:</p>

<pre><code>if (!socket) {
    reject("Socket supplied is not valid.");
    return;
}

if (socket.disconnected) {
    reject("Socket is disconnected");
    return;
}

const timeout = setTimeout(() =&gt; {
   socket.removeListener(wait_key, callback);

   if (error_on_timeout) {
       reject("Socket timeout");
   } else {
       resolve(null);
   }
}, max_wait)

const callback = (data) =&gt; {
    clearTimeout(timeout);
    socket.removeListener(wait_key, callback);
    resolve(data);
};

socket.on(wait_key, callback);
socket.emit(emit, data)
</code></pre>

<p>Few more notes: <code>resolve()</code> and <code>reject()</code> won't stop execution then you need to add the proper <code>return</code>. Use semicolon consistently: someone prefers to avoid semicolon as much as possible, pick a style and use it consistently.</p>
    </div>