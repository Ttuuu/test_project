<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I suggest restricting to one loop, flatting the rest.
I used the C++17's feature "If statement with initializer" to limit the scope of the variable "current".</p>

<pre><code>#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;string_view&gt;

bool is_palindrome(std::string_view str) {
    return std::equal(str.cbegin(), str.cbegin() + str.size()/2, str.crbegin());
}

std::string_view longest_palindrome(std::string_view str)
{
    auto offset = str.cbegin();
    auto size = str.size();

    while(size &gt; 0) {
        if (std::string_view current = {offset, size}; is_palindrome(current)) return current;
        if (offset + size &gt;= str.cend()) { offset = str.cbegin(); --size; }
        else ++offset;
    }
    return {};
}

int main()
{
    for (std::string str: { "", "forgeekskeegfor", "abc abc", "forgeeksskeeg", "geeksskeegfor", "kayak" }) {
        auto palindrome = longest_palindrome(str);
        std::cout &lt;&lt; "Found palindrome of length " &lt;&lt; palindrome.size()
            &lt;&lt; " in " &lt;&lt; str &lt;&lt; ": " &lt;&lt; palindrome &lt;&lt; '\n';
    }
}
</code></pre>

<p><a href="https://wandbox.org/permlink/6i3NeSSIJopBYwcA" rel="nofollow noreferrer">Test online</a></p>
    </div>