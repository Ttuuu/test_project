<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The functions <code>countVowels()</code> and <code>countConsonants()</code> do very similar things, but are implemented in entirely different ways.  Could they not be written using the same method?  Could they be defined one in terms of the other, such as <code>consonants = string_length - vowels</code>?</p>

<p>The statement <code>str.toLowerCase();</code> does nothing.  Well, it does do something ... it computes a lowercase version of <code>str</code> ... but doesn’t assign the result to anything, so the result is lost.  You probably wanted <code>str = str.toLowerCase();</code>.</p>

<p>The class <code>StringBuffer</code> is deprecated; <code>StringBuilder</code> should be used in its place.</p>

<p>The <code>StringBuffer#append()</code> function returns itself to facilitate chained operation, like <code>sb.append(x).append(y).append(x)</code>.  The value returned should not be used for other purposes, such as printing.  <code>System.out.println(thirdForAdding.append(second))</code> is a side-effect in a print statement - a dangerous practice; unlearn it.</p>

<p>Constructing a <code>StringBuffer</code> (or a <code>StringBuilder</code>) to append one value is overkill.  Just use regular string addition.</p>

<p>Explicit equality tests with <code>true</code> are unnecessary.  You could simply write:</p>

<pre><code>if (first.matches(firstRegex) &amp;&amp; second.matches(secondRegex)) { …
</code></pre>

<p><code>”Wrong”</code> is only printed if the first test fails.  If the second, third, or fourth tests fail, nothing is output.</p>

<p>The <code>Scanner</code> (and other <code>Closable</code> resources) should be closed to release resources immediately, instead of when garbage collected.  The try-with-resources statement does this for you automatically &amp; safely:</p>

<pre><code>try (Scanner scn = new Scanner(System.in)) {
    ... use scanner here ...
}
... scanner has been closed after this point.
</code></pre>
    </div>