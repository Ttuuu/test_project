<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One thing you could do to increase the speed of your algorithm would be to use the numbers in <code>primes</code> rather than incrementing <code>a</code> and then checking if <code>a</code> is in <code>primes</code>.</p>

<p>Ex.</p>

<p>Since we know that <code>11</code> is the <code>5th</code> prime number, we could set <code>a = 4</code>, and then pass <code>primes[a]</code> to your truncation functions.</p>

<p>You'd still be incrementing <code>a</code>, but you would know that you're already using a valid prime number, because it comes from the list of primes you already generated.</p>

<p>P.S. Using this method, you could effectively skip your first check in both for loops for every case, although you will have to re-write them to accommodate this change.</p>
    </div>