<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code actually doesn't work, because you use <code>replaceAll</code>. This means that your pattern will allow you to match <code>../../</code> and replace it with <code></code>, resulting in a lost double-back. You can fix this two ways:</p>

<ol>
<li>You could change the <code>replaceAll</code> to <code>replaceFirst</code></li>
<li>You could change the pattern to exclude <code>../../</code> (<code>[^/.]+/\\.\\./?</code> works)</li>
</ol>

<p>You can then simplify your loop since the <code>ONE_DOT</code> case will be matched properly so you don't need to split out a check for minimization.</p>

<p>Thus I would suggest:</p>

<pre class="lang-java prettyprint-override"><code>private static final Pattern ONE_DOT = Pattern.compile("/\\./");
private static final Pattern TWO_DOTS = Pattern.compile("([^/.]+/\\.\\.)+/?");

public static String minimize(final String in) {
    String tmp = in;

    tmp = ONE_DOT.matcher(tmp).replaceAll("/");

    while (TWO_DOTS.matcher(tmp).matches())
        tmp = TWO_DOTS.matcher(tmp).replaceAll("");

    return tmp;
}
</code></pre>

<p>At least as a first-pass improvement. There may be a way to do it without the loop using some kind of counting regular expression, but off the top of my head I'm not sure.</p>
    </div>