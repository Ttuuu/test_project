<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are few ways to simplify the code. First, to deal with <code>rollover</code> you don't need to convert a number to string and back.</p>

<pre><code>    if (k &gt; 9) {
        rollover = 1;
        k -= 10;
    }
</code></pre>

<p>looks more natural.</p>

<p>Second, the <code>isFirst</code> logic is rather convoluted. A standard technique is to initialize the resulting list with the dummy head, and not worry about the special case anymore. In pseudocode:</p>

<pre><code>    dummy = ListNode()
    tail = dummy
    while (....) {
        compute sum
        tail.next = ListNode(sum)
        tail = tail.next
        advance lists
    }
    handle the remaining rollover
    return dummy.next
</code></pre>

<p>Finally, testing for <code>i</code> and <code>j</code> at the end of the loop effectively repeats the test you've already done at the beginning. I recommend to change <code>while (i || j)</code> to <code>while (i &amp;&amp; j)</code>, and deal with the remaining tail separately (notice that one of the tails is guaranteed to be empty, and one of the last loops is a no-op):</p>

<pre><code>    while (i &amp;&amp; j) {
        ....
    }

    while (i) {
        propagate rollover
    }

    while (j) {
        propagate rollover
    }
</code></pre>

<p>The last two loops are good candidates to become a function.</p>
    </div>