<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If <code>Score</code> cannot jump suddenly in the levels, for example after <code>Score=50</code> it cannot jump to <code>Score=550</code>, then you could simplify by using half-ranges in the <code>if</code> statements, so instead of <code>Score &gt;= X &amp;&amp; Score &lt;= X + C</code> you could use just <code>Score &gt;= X</code>, like this:</p>

<pre><code>void IncreaseScore()
{
    if (Score &gt;= 100 &amp;&amp; !Increased100500)
    {
        Increase();
        Increased100500 = true;
    } 
    else if (Score &gt;= 500 &amp;&amp; !Increased5001500)
    {
        Increase();
        Increased5001500 = true;
    } 
    else if (Score &gt;= 1500 &amp;&amp; !Increased15003000)
    {
        Increase();
        Increased15003000 = true;
    } 
}
</code></pre>

<p>But this is just treating the symptoms, not the real problem. It's not good that you need 3 state variables <code>Increased100500</code>, <code>Increased5001500</code>, and <code>Increased15003000</code>, and the hardcoded constants <code>100</code>, <code>500</code>, <code>1500</code> to keep track of this.</p>

<p>It would be better to refactor somehow without using those <code>boolean</code> variables at all. For example:</p>

<pre><code>private const int[] thresholds = {100, 500, 1500};
private const HashSet&lt;int&gt; passedThresholds = new HashSet&lt;int&gt;();

void IncreaseScore()
{
    for (int threshold : thresholds)
    {
        if (Score &gt;= threshold &amp;&amp; !passedThresholds.Contains(threshold))
        {
            passedThresholds.add(threshold);
            Increase();
            break;
        }
    }
}
</code></pre>

<p>The behavior of this code is equivalent, and you don't need so many boolean variables to track the state. The <code>increaseScore</code> method doesn't need to know the exact values of the thresholds either, which is a good thing. And you can easily change the thresholds, simply in the declaration of <code>thresholds</code>, and without editing variable names.</p>
    </div>