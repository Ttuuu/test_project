<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If I understand the rules correctly, it can me implemented in O(N) in the following way:</p>

<ol>
<li>Attach a second integer to each node</li>
<li>non-leaf node = <code>0</code>, leaf node = node's main value.</li>
<li>Do a depth-first walk.</li>
<li>For every node that you visited all children of, set the second value to the sum of the second values of the direct children. If the second value is smaller than the main value, set it to the main value instead</li>
</ol>

<p>(i adjusted 2nd leaf node from 15 to 10 for illustrative purposes)</p>

<p>After step 2.</p>

<pre><code>          15
           0
   20            25
    0             0
5      10      5  
5      10      5  
</code></pre>

<p>After first non-leaf is visited:</p>

<pre><code>          15
           0
   20            25
-&gt; 15 &lt;-          0
5      10  
5      10      5  
</code></pre>

<p>15 is smaller so set it to 20</p>

<pre><code>          15
           0
   20            25
   20             0
5      10      5  
5      10      5  
</code></pre>

<p>Final tree after algorithm:</p>

<pre><code>          15
          45 &lt;- answer
   20            25
   20            25
5      10      5  
5      10      5  
</code></pre>
    </div>