<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>if nums[i] &gt; n:
    return False
</code></pre>

<p>This is unnecesary, you are starting the binary search with max(nums) as minimum, so n will always be at leat equal to max nums[i].</p>

<p>Why is both your constructor and split_array method taking in the parameters of the problem? Either only take them on constructor or make split_array a static method without using constructor.</p>

<p>Why you have min_res and max_res? Either use those in the binary search or just replace them with low and high, no reason to have both those and low/high variables.</p>

<p>If you keep an array of accumulated sums of the array you can change is_valid to do binary search to find the index of the next group. This would change complexity from O(|n| * log(sum(n))) to O(m * log(|n|) * log(sum(n))). For such small amount of n, this is probably not worth doing in this case but its definitly better if you have small m and big n. Instead of reimplementing binary search for this, you could actually use <a href="https://docs.python.org/3/library/bisect.html" rel="nofollow noreferrer">bisect</a></p>
    </div>