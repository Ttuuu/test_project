<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>The IShip Conundrum</h2>

<p>While writing my UI for the game I ran into several problems both trying to extend the Ship class and write my own class that implements the IShip interface.</p>

<p>The main issue I had writing my own Ship class was that 80+ percent of the code would be copied from the OP's Ship class.  Where is the code reuse?  Since the majority of the Ship code is consists of either settings or methods that need to be present in all IShip classes, I concluded an Abstract class was needed.  This lead me to try to use the Ship class as a base class (similar the <a href="https://stackoverflow.com/a/21223273/9912714">Answer - VBA: is there something like Abstract Class?
</a>. </p>

<p>After I subclassed the Ship class, I tried to replace the Ships that were being passed from the Controller to the View but found that it is not possible to do.  Faced with this problem I tried to modify the Controller.</p>

<p>My approach to modifying the Controller was simply pass to replace the Ship factories in the Controller with a class instance that implemented IShip. I found that the Controller was dependent on the ShipKinds method of the Ship class and not the IShip interface.  ShipKinds should be added to the IShip interface.  </p>

<p>This lead me to think deeper on the roles and interactions of the IShip, Controller, and View.  It seems that the Controller produces the IShips because the View cannot validate the IShip placement without know of the IPlayerGrid model.  Is there a use case in which  the Controller would need different versions of IShip...I don't think so.  After all the Controller is responsible for managing the flow of interactions between the Model, View and Strategies not for modifying or using the IShips.  The View, however, could definitely benefit by using custom IShip classes.  It would be really convenient to have the Ships reference labels, images, divs or whatever that are responsible for rendering them.  But is the View is the one would benefit the most from a custom IShp, why are the IShips immutable by the View?  </p>

<p>I think a better setup would be to have the Controller request the IShips from the View for validation.  This will allow the Controller to still be validating the IShips against the Model, while allowing the View to implement whichever type of IShip that it needs.  This setup would also allow the same Controller to be used by all types of Views without modification.</p>

<p>At this point I decided to follow the script that was laid out by the WorksheetView class and everything fell in place nicely.  After I got my prototype working and posted it to CR, I realized that I had made it much more complicated than it needed to be.  My next prototype will probably contain 40% less VBA code.</p>

<h2>Random Thoughts</h2>

<p>Having to click the <code>ShowInformation</code> between each deployment is annoying.  I would like to see this changed to a passive (non response) alert.</p>

<p>I would also like to see a ShipIndex property and DeploymentComplete method added to the IGridViewCommands interface.  This would facilitate repositioning ships after their positions were confirmed.</p>

<p>What do you think of a <strike> MultiplayerHumanStrategy</strike> <strong>MultiPlayer Mode</strong>?  The idea is to store each players ship and attack position information on a worksheet.  The <strike>Strategies</strike> <strong>game</strong> could then take advantage of the new Co-Authoring feature to allow multiple players to play, in real-time, over a network.  </p>
    </div>