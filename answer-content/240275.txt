<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This:</p>

<blockquote>
<pre><code>    if (j % 2 != 0)
    {
      sum += 4 * Function(x[j]);
    }
    else
    {
      sum += 2 * Function(x[j]);
    }
</code></pre>
</blockquote>

<p>can be expressed as:</p>

<pre><code>    sum += (2 &lt;&lt; (j % 2)) * Function(x);
</code></pre>

<hr>

<p>In order to make your algorithm more useful, you should inject the <code>Function</code> as a delegate parameter to the method, and also make it <code>static</code>:</p>

<pre><code>public static double Compute(Func&lt;double, double&gt; fx, double a, double b, int n)
{
  double h = (b - a) / n;

  double sum = fx(a) + fx(b);
  double x = a;
  for (int j = 1; j &lt; n; j++)
  {
    x += h;
    sum += (2 &lt;&lt; (j % 2)) * fx(x);
  }

  return sum * h / 3;
}
</code></pre>

<p>Used as:</p>

<pre><code>Simpson.Compute(x =&gt; 1 / (1 + Math.Pow(x, 5)), a, b, n);
</code></pre>
    </div>