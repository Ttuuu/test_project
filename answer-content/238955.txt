<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>On top of @Graipher's style recommendations, you should use better, more descriptive names to begin with. In this context, it's fairly clear what at least <em>part</em> of the intent of <code>H</code> and <code>T</code> are. <code>H</code> has to do with "heads"... but what about "heads"? I would name it something closer to <code>head_streak</code>, or something else descriptive. Especially with as short of lines as you have, succinct variables names aren't necessary or even preferable. And that suggestions applies to an even greater extent for names like <code>scH</code>. <em>Be descriptive</em>. <code>record_heads</code> or something similar would be better.</p>

<hr>

<p>I'm not a fan of multiple variable assignments on one line; especially when it's using tuple destructuring. </p>

<pre><code>H, T = H+1, 0
</code></pre>

<p>That may be succinct and fit on one line, but I don't think it reads near as clearly as:</p>

<pre><code>H += 1
T = 0
</code></pre>

<p>And I would say the same about</p>

<pre><code>scH, scT = 0, 0
</code></pre>

<p>And the like at the top.</p>

<hr>

<p>Arguably, it would be better to have the function return a tuple instead of a list. Really, it doesn't make any actual difference. Symbolically though, you're returning a structure that will <em>always</em> have exactly two elements. If you were to type-hint your function signature:</p>

<pre><code>from typing import List

def getMaxStreaks(tosses: List[str]) -&gt; List[int]:
    . . .
</code></pre>

<p>That, what you have now, suggests that the function could return a variable amount of numbers, which isn't true. This on the other hand though:</p>

<pre><code>from typing import List, Tuple

def getMaxStreaks(tosses: List[str]) -&gt; Tuple[int, int]:
    . . .
</code></pre>

<p>Lets the caller (and the IDE) know that the function will always return exactly two integers.</p>
    </div>