<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well it has been a year since I supplied an answer to this question but bearing in mind that <a href="https://codereview.stackexchange.com/questions/175434/javascript-typehead-using-debounce#comment332904_175434">you commented</a> "<em>@BenC yes I have deliberately implemented it. I know I could have used forEach here which would have been a better approach than making a new function which does the same thing.</em>" the functions <code>iterate()</code> and <code>getElementById()</code> can be be removed. </p>

<p>Instead of using <code>iterate()</code>, use Array functions like <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/foreach" rel="nofollow noreferrer"><code>Array.prototype.forEach()</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" rel="nofollow noreferrer"><code>Array.prototype.filter()</code></a>. Because <code>filter()</code> runs a function for every item in the array, that is basically reinventing the wheel for many of those functional array methods.</p>

<p>Take for example the function <code>search()</code>:</p>

<blockquote>
<pre><code>var search = function(val) {
    var arr = [];
    iterate(data, function(item, index) {
        if(item.indexOf(val) !== -1) {
            arr.push(item);
        }
    })
    return arr;
}
</code></pre>
</blockquote>

<p>Instead use the built-in array method <code>filter()</code>:</p>

<pre><code>var search = function(val) {
    return data.filter(function(item, index) {
        return item.indexOf(val) !== -1;
    });
}
</code></pre>

<p>And similarly, <code>bindData()</code> can use <code>arr.forEach()</code> instead of <code>iterate()</code>.</p>

<p>And <code>getElementById()</code> doesn't really wrap anything special - it just calls <code>document.getElementById()</code> so there isn't really any advantage to it.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>'use strict';;
;(function(window, document, undefined) {
  var data = ['alabama', 'alaska', 'arizona', 'arkansas', 'california', 'colorado', 'connecticut', 'delaware'];


  /** 
   * variables: searchBox is where you type the city name, ul is the list of suggestions
   */
  var searchBox, ul;

  /**
   * methods
   */

  var search = function(val) {
    return data.filter(function(item, index) {
      return item.indexOf(val) !== -1;
    });
  }

  var addEvent = function(elm) {
    elm.addEventListener('click', function(event) {
      if (event.target !== event.currentTarget) {
        searchBox.value = event.target.textContent;
        hideList();
      }
      event.stopPropagation();
    });
  }

  var appendChild = function(parent, child) {
    parent.appendChild(child);
  }
  var hideList = function() {
    ul.style.display = 'none';
    while (ul.firstChild) {
      ul.removeChild(ul.firstChild);
    }
  }

  var bindData = function(arr) {
    ul.style.display = '';
    arr.forEach( function(item, index) {
      var li = document.createElement('li');
      var a = document.createElement('a');
      a.textContent = item;
      appendChild(li, a)
      appendChild(ul, li);
    });
  }

  function debounce(func, wait, immediate) {
    var timeout;
    return function() {
      var context = this,
        args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) {
          func.apply(context, args);
        }
      };
      var callNow = immediate &amp;&amp; !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) {
        func.apply(context, args);
      }
    };
  }

  var typeAhead = debounce(function(event) {
    hideList(); //removeChild();
    var value = event.target.value;
    if (value !== '') {
      var arr = search(value);
      bindData(arr);
    }
  }, 400);

  document.addEventListener("DOMContentLoaded", function(event) {
    searchBox = document.getElementById('typeahead');
    searchBox.addEventListener('keyup', typeAhead);

    ul = document.createElement('ul');
    ul.setAttribute('id', 'searchResults')
    appendChild(document.body, ul);
    hideList();
    addEvent(ul);
  });
})(window, document);</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;input type="text" placeholder="type to search" id="typeahead"&gt;</code></pre>
</div>
</div>

    </div>