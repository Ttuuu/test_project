<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your header file shouldn't require other headers to be included first.  You are missing includes of <code>&lt;memory&gt;</code> and <code>&lt;utility&gt;</code> for it to be usable.  You can help yourself spot such omissions by including your own headers first, before the standard library headers, in your <code>main.cpp</code>.</p>

<p>It helps to be consistent with standard collections - this consistency is useful, as it allows your collection to be used in a generic (template) function.  For this reason, I suggest <code>size_t size() const</code> instead of <code>int getSize() const</code>.</p>

<p>Instead of <code>search()</code>, it might be better to implement iterators for your collection.  Then we have the full range of <code>&lt;algorithm&gt;</code> functions, including <code>find_if()</code> and so on.  We'd be able to replace <code>deleteSpecific()</code> with an <code>erase()</code> method that accepts an iterator or two iterators, more like the standard collections.  (This <code>erase()</code> would then usefully provide you with a <code>clear()</code> method, and you could use that in the destructor to avoid unlimited recursion in the cleanup).</p>

<p>What is the purpose of the no-argument <code>display()</code>?  It seems to just duplicate the streaming operator, but constrained to standard output, rather than being usable with <code>std::clog</code> or to a file stream, for example.  And the other, private <code>display()</code> is used only in one place, so perhaps it should be inlined within the streaming operator.</p>
    </div>