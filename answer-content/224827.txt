<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Add a <a href="//stackoverflow.com/q/419163"><code>__name__ == "__main__"</code> guard</a>, and move the logic into a function separate from the I/O:</p>
<pre><code>def triangle_type(a, b, c):
    '''Return a string indicating the type of triangle
       (Equilateral, Isosceles, Scalene, Impossible)
    '''
    # implementation here...

def main():
    getcontext().prec = 3
    getcontext().rounding = ROUND_HALF_UP

    #Needs to be divided to re-set decimal place I think
    a = Decimal(input("Length of side a = ")) / 1
    b = Decimal(input("Length of side b = ")) / 1
    c = Decimal(input("Length of side c = ")) / 1

    print(f"This is a {triangle_type(a, b, c)} triangle")

if __name__ == "__main__":
    main()
</code></pre>
<p>In the implementation, we can save a lot of "or" tests by sorting the lengths before we start:</p>
<pre><code>a, b, c = sorted([a, b, c])

if a + b &lt;= c:
    # N.B. automatically catches a &lt; 0, since b &lt;= c
    return 'Impossible'
if a != b != c:
    return 'Scalene'
elif a == c:
    return 'Equilateral'
else:
    return 'Isosceles'
</code></pre>
<hr>
<h1>Modified code</h1>
<pre><code>def triangle_type(a, b, c):
    '''
    Return a string indicating the type of triangle
    (Equilateral, Isosceles, Scalene, Impossible)
    '''

    a, b, c = sorted([a, b, c])

    if a + b &lt;= c:
        return 'Impossible'
    if a != b != c:
        return 'Scalene'
    if a == c:
        return 'Equilateral'
    return 'Isosceles'
    
def main():
    a = input("Length of side a: ")
    b = input("Length of side b: ")
    c = input("Length of side c: ")
    print(f"({a}, {b}, {c}) is a {triangle_type(a, b, c)} triangle")

if __name__ == "__main__":
    main()
</code></pre>
<hr>
<h1>Further improvement</h1>
<p>Use the <a href="https://docs.python.org/3/library/doctest.html" rel="nofollow noreferrer"><code>doctest</code></a> module to write the tests:</p>
<pre><code>def triangle_type(a, b, c):
    '''
    Return a string indicating the type of triangle
    (Equilateral, Isosceles, Scalene, Impossible)

    &gt;&gt;&gt; triangle_type(1, 1, 2)
    'Impossible'
    &gt;&gt;&gt; triangle_type(-1, -1, -1)
    'Impossible'
    &gt;&gt;&gt; triangle_type(1, 1.0, 1)
    'Equilateral'
    &gt;&gt;&gt; triangle_type(1, 2, 2)
    'Isosceles'
    &gt;&gt;&gt; triangle_type(2, 3, 2)
    'Isosceles'
    &gt;&gt;&gt; triangle_type(2, 3, 4)
    'Scalene'
    '''

    a, b, c = sorted([a, b, c])

    if a + b &lt;= c:
        return 'Impossible'
    if a != b != c:
        return 'Scalene'
    if a == c:
        return 'Equilateral'
    return 'Isosceles'

if __name__ == "__main__":
    import doctest
    doctest.testmod()
</code></pre>
    </div>