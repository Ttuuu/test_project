<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are a few <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a> issues:</p>

<ul>
<li>In Python3, class definitions have been overhauled a bit, and one can simply do <code>class Node:</code> instead of <code>class Node(object):</code>.  </li>
<li>The spacing is a bit all over the place: there should be two blank lines between class definitions, and I find the spacing within <code>def bfs(self, start_node)</code> difficult.</li>
<li>The naming convention is to be snake_cased.</li>
</ul>

<p>To address this type of issues, have a look at <a href="http://flake8.pycqa.org/en/latest/index.html#quickstart" rel="nofollow noreferrer">flake8</a> or <a href="https://black.readthedocs.io/en/stable/" rel="nofollow noreferrer">black</a></p>

<p><code>Node.visited</code> is problematic.<br>
First, if the node is in several trees, you may not visit it if it's already been  visited in another tree, or even in the same tree when doing a second search.</p>

<p>The fact that you have visited a node is part of the algorithm, and not so much a property of a <code>Node</code>. </p>

<p>With a few tweaks you can rely on <code>queue</code> only, or have a second list of visited:</p>

<pre class="lang-py prettyprint-override"><code>visited = []
for node in current_node.adjacency_list:
   if not node in visited:
        visited.append(node)
</code></pre>

<p>The comment <code>#BFS -&gt; queue</code> is not very telling.</p>

<p>Lastly, this is iterating through the tree, and not doing actual search. Where's the exit condition? What's returned? What should I get when searching for <code>node4</code> from <code>node1</code>? <code>node4</code> from <code>node3</code>? <code>node3</code> from <code>node2</code>?</p>

<p>It's not quite done...</p>
    </div>