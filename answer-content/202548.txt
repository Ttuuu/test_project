<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>point playerPos = player.get_position();
point moveTilePos;

moveTilePos.setX(playerPos.getX());
moveTilePos.setY(playerPos.getY()-1);
processPlayerMove(player, moveTilePos);
</code></pre>

<p>Well, of course you shouldn't do <em>that</em>. Declaring an "uninitialized" variable to be initialized later via mutation is one of the cardinal sins of modern C++ programming. One reasonable way to write this code would be</p>

<pre><code>point playerPos = player.get_position();
processPlayerMove(
    Point(playerPos.getX(), playerPos.getY() - 1)
);
</code></pre>

<p>But if you find yourself writing <code>Point(p.getX(), p.getY()-1)</code> often enough, then you should factor it out into a function:</p>

<pre><code>point playerPos = player.get_position();
processPlayerMove(playerPos.upward(1));
</code></pre>

<p>And then you can eliminate that pesky helper variable:</p>

<pre><code>processPlayerMove(player.get_position().upward(1));
</code></pre>

<p>There, that looks clean enough!</p>

<hr>

<p>Next, look at your switch statement and refactor <em>it</em> to be clearer.</p>

<pre><code>switch (input) {
    case MOVE_UP:
        processPlayerMove(player.get_position().upward(1));
        break;
    case MOVE_DOWN:
        processPlayerMove(player.get_position().downward(1));
        break;
    case MOVE_LEFT:
        processPlayerMove(player.get_position().leftward(1));
        break;
    case MOVE_RIGHT:
        processPlayerMove(player.get_position().rightward(1));
        break;
}
</code></pre>

<p>Can you think of a similar way to simplify this code? What would it look like?</p>
    </div>