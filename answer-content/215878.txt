<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not a 100% convinced that you should put effort in supporting C++98/03. Especially since you can upgrade your code with <a href="https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html" rel="nofollow noreferrer">Clang tidy modernize</a> However, I see the arguments on moving slowly.</p>

<p>That said, your code looks good. However, I do have some remarks.</p>

<p>#ifdef is used a lot. So often, that one can wonder whether it makes sense to use a single ifdef with separate class definitions. It might improve the readability.</p>

<p>I really like the deleted methods and the shadow private variants. It can help a lot in ensuring the compatibility.</p>

<p>Looking at the stored unique_ptr, you use a helper function to delete the stored instance. WHY? This is what the default already does with a better implementation. (No extra memory needed) I don't see a compatibility argument as you don't use it with the auto_ptr.</p>

<p>I see the templated constructor, however, I don't see the point of having it as a template. Instead you could just use <code>T*</code> directly in the wrapper?</p>

<p>The thing I find the strangest is your <code>operator-&gt;</code> which doesn't return a raw pointer. Instead you expose the underlying storage in that signature.</p>
    </div>