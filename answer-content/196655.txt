<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your changes to the query are good changes.</p>

<p>Just because the both <code>adm_app</code> and <code>quals_data</code> have the same child relationship to the <code>personal_data</code> table does not mean you have to include the <code>personal_data</code> table in a join if there's no relevant data on it.</p>

<p>You should run both of your queries with the query-plan <a href="https://dev.mysql.com/doc/refman/5.5/en/using-explain.html" rel="nofollow noreferrer">EXPLAIN</a> to show the difference in the queries. Avoiding the join will make for a simpler query with better performance.</p>

<p>Having said that, what about the rest of your query, are there improvements that can be made? Nothing big, really. I am not a big fan of <code>snake_case</code> for table and column names, but it is more important that you are consistent, and neat with the concept.</p>

<p>If I were to have any complaints, it would just be two really small things:</p>

<ul>
<li>a spelling error.... I know, it's seriously pedantic, but in my "real job" I would point out the error soon because it is the sort of thing that is hard to correct later... <code>convertion</code> should be spelled <code>conversion</code></li>
<li>abbreviations should be consistent in names. Since you have <code>personal_data</code> and fully named columns like <code>convertion_marks</code>, then it follows that you should not have abbreviations for <code>adm_app</code> and <code>quals_data</code>. Those should be full names.</li>
</ul>

<p>As you can tell, the only issues I can see are really trivial.</p>
    </div>