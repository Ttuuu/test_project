<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Animal.java</strong></p>

<ul>
<li>I do not know which version of Java you are using, but consider version 8 as it is pretty much the industry standard now and use <code>LocalDate</code> instead of <code>Date</code></li>
<li><code>species</code> seems like it should be an <code>Enum</code>, not a <code>String</code></li>
</ul>

<p><strong>InputValidator.java</strong></p>

<ul>
<li>Keep your scopes to smallest possible, why is <code>Scanner</code> an instance field?</li>
<li>Do not forget to <code>close</code> your <code>Scanner</code></li>
</ul>

<pre><code>public class InputValidator {
    public int readInt() {
        Scanner sc = new Scanner(System.in);
        int input = 0;
        boolean gotCorrect = false;
        while (!gotCorrect) {
            try {
                input = Integer.parseInt(sc.nextLine());
                gotCorrect = true;
            } catch (Exception e) {
                System.out.println("Please enter a valid number");
            }
        }
        sc.close();
        return input;
    }
}
</code></pre>

<ul>
<li>With all this said, I am not super convinced this should be a class, lets get back to this later</li>
</ul>

<p><strong>FileHandler.java</strong></p>

<ul>
<li>I will omit <code>save</code> and make comments on <code>load</code></li>
<li>Again we are using <code>LocalDate</code> and keeping our scopes small</li>
<li>Inform the user when an Animal can not be loaded, do not add it with just wrong date of birth</li>
<li>Do not forget to close your <code>Closable</code>s</li>
</ul>

<pre><code>public class FileHandler {

    private DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    public List&lt;Animal&gt; load(String filePath) {
        try (Scanner scanner = new Scanner(new File(filePath))) {
            List&lt;Animal&gt; contents = new ArrayList&lt;&gt;();
            while (scanner.hasNextLine()) {
                String[] parts = scanner.nextLine().split(":");
                try {
                    LocalDate dateOfBirth = LocalDate.parse((parts[4]), dateFormatter);
                    contents.add(new Animal(parts[0], Integer.parseInt(parts[1]), parts[2], parts[3], dateOfBirth));
                } catch (Exception e) {
                    System.out.println("Animal: " + parts[0] + " could not be read!");
                    System.out.println(e.getMessage());
                }
            }
            return contents;
        } catch (FileNotFoundException e) {
            e.printStackTrace();
            return new ArrayList&lt;&gt;();
        }
    }
}
</code></pre>
    </div>