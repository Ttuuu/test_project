<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I reduced the example data, for easier viewing</p>

<pre><code># new example data:
mydata &lt;- data.frame(ta = 1:13)
mydata[2:3, 1] &lt;- 1L
mydata[6:12, 1] &lt;- 2L

n &lt;- 3 # how many equal values we need

require(data.table)
setDT(mydata) # convert to data.table
mydata
mydata[, mathcPrev := fifelse((ta - shift(ta, 1)) == 0L, T, F, F)]
mydata[, g := cumsum(!mathcPrev)] # grouping value, if value has changed
mydata[, count := cumsum(mathcPrev), by = g]
mydata[, qc2 := fifelse(count &gt;= n, 1L, 0L)]
mydata
#     ta mathcPrev g count qc2
#  1:  1     FALSE 1     0   0
#  2:  1      TRUE 1     1   0
#  3:  1      TRUE 1     2   0
#  4:  4     FALSE 2     0   0
#  5:  5     FALSE 3     0   0
#  6:  2     FALSE 4     0   0
#  7:  2      TRUE 4     1   0
#  8:  2      TRUE 4     2   0
#  9:  2      TRUE 4     3   1
# 10:  2      TRUE 4     4   1
# 11:  2      TRUE 4     5   1
# 12:  2      TRUE 4     6   1
# 13: 13     FALSE 5     0   0
</code></pre>

<p>So, the idea is to create index <code>mathcPrev</code>, that shows if this value matches previous, and then we can count how many equal values we have in a row.</p>
    </div>