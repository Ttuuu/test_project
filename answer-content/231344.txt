<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I can't run this unfortunately. <code>curses</code> seems to have issues on Windows. I'll just focus mainly on style and design.</p>

<p>There's a few notable things about this chunk:</p>

<pre><code># I also exit the loop if one of the following conditions if verified
if ((ch == curses.KEY_UP and j &gt; 0)
or (ch == curses.KEY_DOWN and kcell == False)
or (ch == curses.KEY_LEFT and (i != 0 or k != 0) and kcell == False)
or (ch == curses.KEY_RIGHT and (i != 1 or k != 1) and kcell == False)
or (ch in [ord("s"), ord("S")])
or (ch in [ord("q"), ord("Q")])):
    break
</code></pre>

<ul>
<li><code>== False</code> should really just be <code>not</code> instead</li>
<li>You need more indentation. It's confusing to see the <code>or</code>s aligned with the <code>if</code>s. I'd indent it at least all the way up to align with the opening brace.</li>
<li>Those two <code>ch in</code> checks at the bottom could be cleaned up.</li>
</ul>

<p>I'd write this closer to:</p>

<pre><code>if ((ch == curses.KEY_UP and j &gt; 0)
        or (ch == curses.KEY_DOWN and not kcell)
        or (ch == curses.KEY_LEFT and (i != 0 or k != 0) and not kcell)
        or (ch == curses.KEY_RIGHT and (i != 1 or k != 1) and not kcell)
        or (chr(ch).lower() in {"s", "q"})):
    break
</code></pre>

<p>I think you could probably factor out the <code>not kcell</code> check too, but my tired brain can't think of a good way at the moment.</p>

<p>There is another approach though that lets you skip all the <code>or</code>s: <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a>. <code>any</code> is like a function version of <code>or</code> (and <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a> is like <code>and</code>). You could change this to:</p>

<pre><code>if any([ch == curses.KEY_UP and j &gt; 0,
        ch == curses.KEY_LEFT and (i != 0 or k != 0) and not kcell,
        ch == curses.KEY_RIGHT and (i != 1 or k != 1) and not kcell,
        chr(ch).lower() in {"s", "q"}]):
    break
</code></pre>

<p>Normally, I'd say that this is an abuse of <code>any</code>, but chaining <code>or</code>s over multiple lines like you had isn't ideal either.</p>

<hr>

<p>In terms of design decisions, does this really need to be a class? Honestly, I'd probably store the necessary state using a <code>dataclass</code> or <code>NamedTuple</code> (or a couple distinct states), then just pass around and alter state(s) as needed. Making <code>self</code> a grab-bag of everything you may need seem messy to me.</p>

<p>For example, <code>winwidth</code> and <code>winheight</code> appear to be constants. They never change throughout your program, so they should treated as constants. I'd have them outside at the top as:</p>

<pre><code>WINDOW_WIDTH = 120
WINDOW_HEIGHT = 29
</code></pre>

<p>And do <code>ciside</code>, <code>cicol</code> and <code>cirow</code> need to be attributes of the class as well? It seems like they're only used in <code>inputMeasures</code>, so why aren't they just variables local to that function? By having them "global" within the object, you're forcing your reader to keep them in the back of their mind in case those states are needed elsewhere in the object.</p>

<hr>

<p>Finally, in terms of naming, you're violating PEP8. Variable and function names should be in <a href="https://www.python.org/dev/peps/pep-0008/#function-and-variable-names" rel="nofollow noreferrer">snake_case unless you have a good reason</a>, and class names should be <a href="https://www.python.org/dev/peps/pep-0008/#class-names" rel="nofollow noreferrer">UpperCamelCase</a>.</p>
    </div>