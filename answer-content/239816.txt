<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here are some things that may help you improve your program.</p>

<h2>Use standard library calls where appropriate</h2>

<p>Instead of your <code>for</code> loop, I would recommend using <code>memcmp()</code> to accomplish the same thing, but likely more efficiently since the library version typically compares more than one byte at a time.</p>

<h2>Define variables where they are declared</h2>

<p>The <code>addr1</code> and <code>addr2</code> variables are only used within the <code>else</code> clause, so instead of having them at the top (and uninitialized), it's probably better to declare and initialize the variable at the same time:</p>

<pre><code>char *addr1 = mmap(NULL, fileSize1+ 1, PROT_READ,MAP_PRIVATE, fd1, 0);
</code></pre>

<h2>Eliminate "magic numbers"</h2>

<p>Things like the <code>0</code> in the code line quoted above are OK, because programmers reading this will know what that code is doing.  However, when you write <code>exit(-3);</code> it's not at all obvious whether -3 is the correct value, or exactly what it represents.  Better would be to use a named <code>const</code> value there such as <code>const int ERROR_FILE_OPEN = -3;</code></p>

<h2>Consider explicitly releasing all resources</h2>

<p>It's true that an <code>mmap</code> will automatically be released when the program terminates, but you may wish to explicitly call <code>mmunmap</code> explicitly before closiing the files.  Note that just closing the files does not release the memory.</p>

<h2>Be aware of possible race conditions</h2>

<p>It's admittedly unlikely, but it's possible that a file could be modified between your call to <code>stat</code> and the <code>open</code> call.  If it were, for example, a log file, the actual file would be longer than the <code>mmap</code> region.  You may find it an acceptable risk, but it's worth knowing about this potential problem.</p>
    </div>