<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The following are a few suggestions on how I'd write the stored procedure.</p>

<p><strong>Source Control</strong> </p>

<p>If you don't already have a <a href="https://docs.microsoft.com/en-us/previous-versions/sql/sql-server-data-tools/hh272677(v=vs.103)" rel="nofollow noreferrer">database project</a>, create one in <a href="https://visualstudio.microsoft.com/" rel="nofollow noreferrer">Visual Studio</a>. Then check it in to source control. <a href="https://azure.microsoft.com/en-au/services/devops/" rel="nofollow noreferrer">Microsoft Azure DevOps Services</a> is free &amp; private for teams of 5 or less (this is per project, so 5 developers per project). Then you'll be able to track changes you make to your stored procedures, views, tables, etc.</p>

<p><strong>Formatting</strong></p>

<p>I would download the following tool for SSMS and Visual Studio, <a href="https://marketplace.visualstudio.com/items?itemName=TaoKlerks.PoorMansT-SqlFormatterSSMSVSExtension" rel="nofollow noreferrer">Poor Man's T-Sql Formatter</a> and on <a href="https://github.com/TaoK/PoorMansTSqlFormatter" rel="nofollow noreferrer">GitHub</a>. I use it when I have to edit other developer's code. It's a great way to standardize your SQL. I find it does most of the formatting for me, but I'll still make a few changes after.</p>

<p>Here are the settings I used:</p>

<p><a href="https://i.stack.imgur.com/aBD8y.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/aBD8y.png" alt="screenshot"></a></p>

<p><strong>Copy &amp; Paste</strong></p>

<p>If you find yourself copying and pasting the same string or number over and over in your query, then you should define it as a variable. <a href="https://en.wikipedia.org/wiki/David_Parnas" rel="nofollow noreferrer"><em>Copy and paste is a design error ~ David Parnas</em></a></p>

<p>e.g. <code>...when -1561783295 then 1 when -1561783296...</code></p>

<p><strong>Commas</strong></p>

<p>I would put the commas in front to clearly define new columns. Versus code wrapped in multiple lines. It also makes trouble-shooting code easier. The only exception in your procedure is that you may want to show the Min and Max for the same Customer Spec field on the same line to edit it a bit easier. </p>

<p>e.g. <code>, SCS.[MnMax], SCS.[MnMin]</code></p>

<p><strong>Where Clause</strong></p>

<p>If you put <code>1=1</code> at the top of a <code>WHERE</code> condition, it enables you to freely change the rest of the conditions when debugging a query. The SQL query engine will end up ignoring the <code>1=1</code> so it should have no performance impact. <a href="https://stackoverflow.com/q/242822/9059424">Reference</a></p>

<p><strong>Common Table Expressions (CTE)</strong></p>

<p><a href="https://docs.microsoft.com/en-us/sql/t-sql/queries/with-common-table-expression-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">CTE's</a> in your SQL help with documentation. The expression name can then let other developers know why you used that expression e.g. <code>current_suppliers</code> or <code>active_projects</code>.</p>

<p><strong>Schema Names</strong></p>

<p>Always reference the schema when selecting an object e.g. <code>[dbo].[SalesTable]</code>.</p>

<p><strong>Estimated Execution Plan</strong></p>

<p>It's a good idea to check the <a href="https://docs.microsoft.com/en-us/sql/relational-databases/performance/display-the-estimated-execution-plan?view=sql-server-2017" rel="nofollow noreferrer">Estimated Execution Plan</a>. The shortcut in Microsoft SQL Server Management Studio (SSMS) is <kbd>Ctrl</kbd> + <kbd>L</kbd>. You can even run 2 queries in the same tab to compare the plans.</p>

<p><strong>Keywords</strong></p>

<p>Avoid using keywords as object names. <a href="https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">Microsoft Reference</a></p>

<ul>
<li>Also check out the book <a href="https://rads.stackoverflow.com/amzn/click/0132350882" rel="nofollow noreferrer"><em>Clean Code</em></a>. It will change the way you think about naming conventions.</li>
</ul>

<hr>

<p><strong>Revised SQL</strong></p>

<p>Without table definitions and sample records I was unable to test this, but it should give you a good start.</p>

<pre><code>CREATE PROCEDURE [dbo].[Create_Certificate] 
(
      @PackingSlipId VARCHAR(25) = '' -- I would default this to NULL; Also, I would rename it since it references more than one column. e.g. @ReferenceId or @Id
    , @PackSales INT = 0  -- A better naming convention would be @CertificateType and pass in the values either 'Packing' or 'Sales'. Then it becomes self documenting.
)
AS
BEGIN

    BEGIN TRY

        SET NOCOUNT ON; --Stops the message that shows the count of the number of rows affected

        DECLARE @ShowTrue AS INT = -1561783295; --I'm guessing at what column definition is, so you might need to change the data type
        DECLARE @ShowFalse AS INT = -1561783296;

        WITH
        max_sdiProductionChemistry
        AS
        (
            SELECT 
                  [ProductionId]
                , [Id] = MAX([Id])
            FROM 
                [dbo].[sdiProductionChemistry] --I'm guessing at the schema name here
            GROUP BY 
                [ProductionId]
        )
        SELECT DISTINCT
              P.[Id]
            , [CoilId] = ID.[InventBatchId]
            , [DlvDate] = IT.[DatePhysical]
            , [SalesOrderId] =  CASE WHEN @PackSales = 1 THEN @PackingSlipId ELSE IT.[TransRefId] END 
            , [PackingSlipId] = CASE WHEN @PackSales = 1 THEN IT.[PackingSlipId] ELSE @PackingSlipId END 
            , [Diameter] = CASE WHEN NOT SI.[Diameter] IS NULL THEN SI.[Diameter] ELSE xSI.[Diameter] END  
            , SI.[Leco]
            , SI.[Tensilestrength]
            , [E200] = 
                CASE 
                    WHEN NOT SI.[E200] IS NULL AND SI.[E200] &gt; 0 THEN CONVERT(VARCHAR, CONVERT(NUMERIC(10, 1), SI.[E200]))
                    WHEN NOT xSI.[Elongation] IS NULL AND xSI.[Elongation] &gt; 0 THEN CONVERT(VARCHAR, CONVERT(NUMERIC(10,1), xSI.[Elongation]))
                    ELSE '&gt; 35'
                END
            , [HeatNumber] = CASE WHEN NOT P.[HeatNumber] IS NULL THEN P.[HeatNumber] ELSE xSI.[BreakDownId] END  
            --, [SpectroHeatNumber] = xSA.[Heatnumber]
            , [NetWeight] = CASE WHEN NOT SI.[NetWeight] IS NULL THEN SI.[NetWeight] ELSE xSI.[GrossWeight] - xSI.[TareWeight] END 
            , [IACS] = CASE WHEN SI.[CertConductivity] = 0 THEN SI.[IACS_REAL] WHEN SI.[CertConductivity] &gt; 0 THEN SI.[CertConductivity] END 
            , [CUAG] = (SPC.[CU] + (SPC.[AG] / 10000))  
            , ST.[SalesName]
            , [CustomerPO] = ST.[PurchOrderFormNum]
            , xSI.[Grm]
            -- Customer Spec Min/Max Fields
            , SCS.[CUAGMin] 
            , SCS.[CUAGMax]
            , SCS.[DiameterMin]
            , SCS.[DiameterMax]
            , SCS.[ElongMin]
            , SCS.[ElongMax]
            , SCS.[StrengthMin]
            , SCS.[StrengthMax]
            , SCS.[OxygenMin]
            , SCS.[OxygenMax]
            , SCS.[ConductivityMin]
            , SCS.[ConductivityMax]
            , SCS.[GrmMin]
            , SCS.[GrmMax]
            , [OxideMin] = SCS.[PopMin]
            , [OxideMax] = SCS.[PopMax]
            , SCS.[ZnMax], SCS.[ZnMin]
            , SCS.[PbMax], SCS.[PbMin]
            , SCS.[SnMax], SCS.[SnMin]
            , SCS.[PMax], SCS.[PMin]
            , SCS.[MnMax], SCS.[MnMin]
            , SCS.[FeMax], SCS.[FeMin]
            , SCS.[NiMax], SCS.[NiMin]
            , SCS.[SiMax], SCS.[SiMin]
            , SCS.[MgMax], SCS.[MgMin]
            , SCS.[CrMax], SCS.[CrMin]
            , SCS.[TeMax], SCS.[TeMin]
            , SCS.[AsMax], SCS.[AsMin]
            , SCS.[SeMax], SCS.[SeMin]
            , SCS.[SbMax], SCS.[SbMin]
            , SCS.[CdMax], SCS.[CdMin]
            , SCS.[BiMax], SCS.[BiMin]
            , SCS.[AgMax], SCS.[AgMin]
            , SCS.[CoMax], SCS.[CoMin]
            , SCS.[AlMax], SCS.[AlMin]
            , SCS.[SMax], SCS.[SMin]
            , SCS.[BeMax], SCS.[BeMin]
            , SCS.[HRFMax], SCS.[HRFMin]
            , I.[ItemName]
            -- Element values to show
            , [Zn] = CASE WHEN SCSS.[ZnShow] = @ShowTrue THEN xSA.[Zn] ELSE 0 END
            , [Pb] = CASE WHEN SCSS.[PbShow] = @ShowTrue THEN xSA.[Pb] ELSE 0 END
            , [Sn] = CASE WHEN SCSS.[SnShow] = @ShowTrue THEN xSA.[Sn] ELSE 0 END
            , [P] = CASE WHEN SCSS.[PShow] = @ShowTrue THEN xSA.[P] ELSE 0 END
            , [Mn] = CASE WHEN SCSS.[MnShow] = @ShowTrue THEN xSA.[Mn] ELSE 0 END
            , [Fe] = CASE WHEN SCSS.[FeShow] = @ShowTrue THEN xSA.[Fe] ELSE 0 END
            , [Ni] = CASE WHEN SCSS.[NiShow] = @ShowTrue THEN xSA.[Ni] ELSE 0 END
            , [Si] = CASE WHEN SCSS.[SiShow] = @ShowTrue THEN xSA.[Si] ELSE 0 END
            , [Mg] = CASE WHEN SCSS.[MgShow] = @ShowTrue THEN xSA.[Mg] ELSE 0 END
            , [Cr] = CASE WHEN SCSS.[CrShow] = @ShowTrue THEN xSA.[Cr] ELSE 0 END
            , [Te] = CASE WHEN SCSS.[TeShow] = @ShowTrue THEN xSA.[Te] ELSE 0 END
            , [As] = CASE WHEN SCSS.[AsShow] = @ShowTrue THEN xSA.[As] ELSE 0 END
            , [Se] = CASE WHEN SCSS.[SeShow] = @ShowTrue THEN xSA.[Se] ELSE 0 END
            , [Sb] = CASE WHEN SCSS.[SbShow] = @ShowTrue THEN xSA.[Sb] ELSE 0 END
            , [Cd] = CASE WHEN SCSS.[CdShow] = @ShowTrue THEN xSA.[Cd] ELSE 0 END
            , [Bi] = CASE WHEN SCSS.[BiShow] = @ShowTrue THEN xSA.[Bi] ELSE 0 END
            , [Ag] = CASE WHEN SCSS.[AgShow] = @ShowTrue THEN xSA.[Ag] ELSE 0 END
            , [Co] = CASE WHEN SCSS.[CoShow] = @ShowTrue THEN xSA.[Co] ELSE 0 END
            , [Al] = CASE WHEN SCSS.[AlShow] = @ShowTrue THEN xSA.[Al] ELSE 0 END
            , [S] = CASE WHEN SCSS.[SShow] = @ShowTrue THEN xSA.[S] ELSE 0 END
            , [Be] = CASE WHEN SCSS.[BeShow] = @ShowTrue THEN xSA.[Be] ELSE 0 END
            , [HRF] = CASE WHEN SCSS.[HRFShow] = @ShowTrue THEN 0 ELSE 0 END
            , [SurfaceOxide] = CASE WHEN SCSS.[OxideShow] = @ShowTrue THEN 
                                    CASE 
                                        WHEN SI.[POP_EXTERNAL] &lt; SI.[POP_INTERNAL] THEN SI.[POP_EXTERNAL]
                                        WHEN SI.[POP_INTERNAL] &lt; SI.[POP_EXTERNAL] THEN SI.[POP_INTERNAL]
                                        ELSE 0 
                                    END
                                ELSE 0 END
            -- What to show
            , [ZnShow] = CASE SCSS.[ZnShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [PbShow] = CASE SCSS.[PbShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [SnShow] = CASE SCSS.[SnShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [PShow] = CASE SCSS.[PShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [MnShow] = CASE SCSS.[MnShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [FeShow] = CASE SCSS.[FeShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [NiShow] = CASE SCSS.[NiShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [SiShow] = CASE SCSS.[SiShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [MgShow] = CASE SCSS.[MgShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [CrShow] = CASE SCSS.[CrShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [TeShow] = CASE SCSS.[TeShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [AsShow] = CASE SCSS.[AsShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [SeShow] = CASE SCSS.[SeShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [SbShow] = CASE SCSS.[SbShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [CdShow] = CASE SCSS.[CdShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [BiShow] = CASE SCSS.[BiShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [AgShow] = CASE SCSS.[AgShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [CoShow] = CASE SCSS.[CoShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [AlShow] = CASE SCSS.[AlShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [SShow] = CASE SCSS.[SShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [BeShow] = CASE SCSS.[BeShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [HRFShow] = CASE SCSS.[HRFShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [OxideShow] = CASE SCSS.[OxideShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [CuAgShow] = CASE SCSS.[CuAgShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END 
            , [DiameterShow] = CASE SCSS.[DiameterShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [ElongationShow] = CASE SCSS.[ElongationShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [StrengthShow] = CASE SCSS.[StrengthShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [OxygenShow] = CASE SCSS.[OxygenShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [ConductivityShow] = CASE SCSS.[ConductivityShow]WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
            , [GRMShow] = CASE SCSS.[GRMShow] WHEN @ShowTrue THEN 1 WHEN @ShowFalse THEN 0 ELSE 0 END
        FROM 
            [dbo].[InventTrans] AS IT
            LEFT JOIN [dbo].[InventTable] AS I ON IT.[ItemId] = I.[ItemId]
            LEFT JOIN [dbo].[InventDim] AS ID ON IT.[INVENTDIMID] = ID.[InventDimId]
            LEFT JOIN [dbo].[SalesTable] AS ST ON IT.[TransRefId] = ST.[SalesId]
            LEFT JOIN [dbo].[SDICustomerSpecs] AS SCS ON ST.[CustAccount] = SCS.[CustomerId] AND IT.[ItemId] = SCS.[ItemId]
            LEFT JOIN [dbo].[SDIInventory] AS SI ON ID.[InventBatchId] = SI.[BatchId]
            LEFT JOIN [dbo].[SDICustomerSpecSheets] AS SCSS ON SCSS.[CustomerName] = ST.[SalesName]
            LEFT JOIN [LAFARGA].[LaFargaProd].[dbo].[BreakdownItem] AS xSI  ON ID.[InventBatchId] = xSI.[BatchId]
            LEFT JOIN max_sdiProductionChemistry AS mSPC ON P.[Id] = mSPC.[ProductionId] --Should this be an INNER JOIN?
            LEFT JOIN [dbo].[SDIProduction] AS P ON SI.[ProductionId] = P.[Id]
            LEFT JOIN [dbo].[sdiProductionChemistry] AS SPC ON T.[PRODUCTIONID] = SPC.[ProductionId] AND SPC.[Id] = T.[Id]
            LEFT JOIN [LAFARGA].[LaFargaProd].[dbo].[vSpectroAssays] AS xSA  ON xSA.[BatchID] = ID.[InventBatchId]
        WHERE 
            1=1
            AND 
            (
                (@PackSales = 0 AND IT.[PackingSlipId] = @PackingSlipId)
                OR
                (@PackSales = 1 AND IT.[TransRefId] = @PackingSlipId)
            )
        ORDER BY 
            ID.[InventBatchId]

    END TRY
    BEGIN CATCH
        SELECT 
              [ErrorNumber] = ERROR_NUMBER()
            , [ErrorSeverity] = ERROR_SEVERITY()
            , [ErrorState] = ERROR_STATE()
            , [ErrorProcedure] = ERROR_PROCEDURE()
            , [ErrorLine] = ERROR_LINE()
            , [ErrorMessage] = ERROR_MESSAGE();
    END CATCH

END
</code></pre>
    </div>