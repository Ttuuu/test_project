<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Anonymous types are going to be your friend here.  You don't need to have list or dictionary at all.   </p>

<p>First you don't need to call ToList() from your repository.</p>

<p>Now we can just project out the properties you want like so</p>

<pre><code>wards.Select(w =&gt; new
{
     ward_id = w.ward_id.ToString(),
     w.ward_name
})
</code></pre>

<p>JsonConvert will serialize an IEnumerable as an array.  this will get your square bracket around the "Wards" and have the two properties you would like and having the Id converted to a string. </p>

<p>Now you just need the "data" object to contain the IEnumerable.  Again making an anonymous type.</p>

<pre><code>var data = new
{
    data = wards.Select(w =&gt; new
    {
        ward_id = w.ward_id.ToString(),
        w.ward_name
    })
};

var json = JsonConvert.SerializeObject(data);
</code></pre>

<p>That's it.  That should get you what you want.</p>
    </div>