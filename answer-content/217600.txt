<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I expect you made a typo.  You don't want <code>(i%35)==0</code>, you want <code>(i%5)==0</code>.</p>

<hr>

<p>The <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP-8</a> style guide for Python requires 1 space before and after operators, and after commas.  Use PyLint or equivalent tool to ensure you follow all of the PEP-8 guidelines.</p>

<hr>

<p><code>check_sum</code> is unused, and can be omitted.</p>

<hr>

<p>The brackets around the <code>if( ... ):</code> condition are unnecessary.  This is Python, not C, C++ or Java:</p>

<pre><code>    if (i % 3) == 0 or (i % 5) == 0: #divisor condition
</code></pre>

<hr>

<p>There is no need to create a list just to add up all the numbers after the fact.  You are only using each value once, so you could simply add the numbers up as you find them:</p>

<pre><code>def prob_1():

    sum_of_multiples = 0

    for i in range(1, 1000):  # Take numbers up to but not including 1000
        if (i % 3) == 0 or (i % 5) == 0: #divisor condition
            sum_of_multiples += i

    return sum_of_multiples
</code></pre>

<hr>

<p>You should add <code>"""doc_strings"""</code> to your functions:</p>

<pre><code>def prob_1():
    """
    Compute the sum of all the multiples of 3 or 5 below 1000.

    Returns:
        The sum of the multiples of 3 or 5, below 1000.
    """

    sum_of_multiples = 0

    for i in range(1, 1000):  # Take numbers up to but not including 1000
        if (i % 3) == 0 or (i % 5) == 0: #divisor condition
            sum_of_multiples += i

    return sum_of_multiples
</code></pre>

<hr>

<p>You can use <s>list comprehension</s> a generator expression (thanks @Graipher) and the <code>sum(...)</code> function to compute the result, without ever creating the list in memory:</p>

<pre><code>def prob_1():
    """
    Compute the sum of all the multiples of 3 or 5 below 1000.

    Returns:
        The sum of the multiples of 3 or 5, below 1000.
    """

    return sum(i for i in range(1000) if i % 3 == 0 or i % 5 == 0)
</code></pre>

<hr>

<p>You can also solve this problem by hand with a pen, a sheet of paper, a calculator and about 1 minute of your time.  A program is entirely unnecessary.</p>
    </div>