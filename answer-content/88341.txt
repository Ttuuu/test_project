<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://docs.angularjs.org/api/ng/service/%24interval" rel="nofollow"><code>$interval</code></a> is a wrapper for <a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval" rel="nofollow"><code>window.setInterval()</code></a>, and <code>window.setInterval()</code> does not provide an accurate tick.  As stated in the Mozilla documentation for that and the related <a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout#Notes" rel="nofollow"><code>window.setTimeout()</code></a>,</p>

<ul>
<li>The timeout can fire later when the page (or the OS/browser itself) is busy with other tasks.</li>
<li>Timeouts are clamped to firing no more than once a second in inactive tabs.  Indeed, on Safari in OS X, I see that your timer runs at about half speed if I let it run in a background tab.  See also <a href="//stackoverflow.com/q/16579042/1157100" rel="nofollow">this complaint</a>.</li>
<li>If the entire computer (or virtual machine) is suspended, it will obviously miss ticks.</li>
</ul>

<p>Therefore, you cannot just increment a counter for your clock.  The right thing to do is to record the start time, and on each callback, report the difference between the current time and the start time as the elapsed time.</p>
    </div>