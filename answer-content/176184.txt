<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm rather new to Rust myself and must admit the indexless function Shepmaster alludes to is not obvious. If it does occur to me I'll post again.</p>

<p>smac89 and Shepmaster covered everything but didn't post any code.</p>

<p>My solution (just the function) is as follows:</p>

<pre><code>pub fn merge(s1: &amp;[i32], s2: &amp;[i32]) -&gt; Vec&lt;i32&gt; {
    let mut merged = Vec::&lt;i32&gt;::new();
    let (end1, end2) = (s1.len(), s2.len());
    let (mut i1, mut i2) = (0usize, 0usize);
    while i1 &lt; end1 &amp;&amp; i2 &lt; end2 {
        let (x1, x2) = (s1[i1], s2[i2]);
        merged.push( if x1 &lt; x2 { i1+=1; x1 } else { i2+=1; x2 } );
    }
    merged.extend( if i1 &lt; end1 { &amp;s1[i1..] } else { &amp;s2[i2..] } );
    merged
}
</code></pre>

<p>Assignment via tuples is nice for related variables but at some point is gets too crowded and hard to read. You could expand it out if you like.</p>

<p>For a short function like this I see no harm in abbreviated variable names. I used mostly two-character names here, but would never do that were more variables in use.</p>
    </div>