<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2><code>__members</code></h2>

<p>Adding a double underscore prefix (with at most one trailing underscore) to class/instance members has special meaning.  It causes the interpreter to use <a href="https://docs.python.org/3/tutorial/classes.html#private-variables" rel="nofollow noreferrer">name-mangling</a> to avoid name clashes in subclasses.</p>

<p>If <code>PreprocessNumber</code> is not subclassed, there is no need to invoke name mangling.</p>

<p>→ Simply use a single leading underscore for private/protected members, not a double underscore.</p>

<h2>Docstrings</h2>

<p>Listing all the methods of a class in the docstring of the class is redundant.  Executing <code>help(PreprocessNumber)</code> will generate help text from the class’s docstring <strong>and</strong> the docstrings of all public members in the class.  If the class docstring includes information on the public members, it then appears twice in the output!</p>

<p>Providing docstrings for non-public members of a class is usually not useful, as that documentation will not normally be emitted by the help system.</p>

<p>Providing docstrings for name-mangled members is <em>hilarious</em>, as the members are not accessible unless one also knows the mangled name.</p>

<p>→ Provide docstrings for public classes and methods only; comments are generally sufficient for private/protected members.</p>

<h2>Class Constants</h2>

<p>Instead of creating an extra member on each and every instance of a class, create constants directly on the class:</p>

<pre><code>class PreprocessNumber:
    """..."""

    NOT_BLACK_THRESHOLD = 20

    def __init__(self, image):
        ...
</code></pre>

<p>The class attribute can still be accessed using <code>self.NOT_BLACK_THRESHOLD</code> in member functions.</p>

<p>Note: Assigning to <code>self.NOT_BLACK_THRESHOLD</code> will create a instance member with the new value; it will not change the class’s attribute value.  Assigning to <code>PreprocessNumber.NOT_BLACK_THRESHOLD</code> will change the class attribute “constant” seen by all instances.</p>

<h2>Integer Division</h2>

<p>Python has an integer division operator (<code>//</code>), so instead of this:</p>

<pre><code>center_row = int(self.dimension[0] / 2)
</code></pre>

<p>you can write:</p>

<pre><code>center_row = self.dimension[0] // 2
</code></pre>

<p>avoiding the conversions to floating point and then back to an integer.</p>
    </div>