<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Solomon has made some excellent review comments.  I won’t duplicate those. </p>

<p>If you want it to work for any number up to 10^1000 in under 1 second, you are going to have to get rid of testing every number in <code>range(1,k+1)</code>, and the <code>count += 1</code> counting of each number. </p>

<p>Consider a sum of digits that has to be a multiple of <code>d=7</code>.   The first number that satisfies that is <code>7</code>.    To maintain the sum of 7, if we subtract 1 from the digit 7, we have to add one to another digit, such as a leading zero. <code>0+1,7-1</code> or <code>16</code>.  If we repeat that, we get <code>25</code>.  Adding 1 to the tens digit and subtracting 1 from the ones digit is the equivalent of simply adding 9.  So we can quickly generate a few more values: 34, 43, 52, 61, and 70.   Adding 9 again results in 79, who’s digit sum of 16, so we have to stop at 70.  Still, that generated a few numbers.  Specifically <code>(70-7)/9+1=8</code> numbers.</p>

<p>14 is the next multiple of 7, and the smallest number with that digit sum is 59.  Again, subtracting 1 from the ones digit, and adding 1 to the tens digit is simply adding 9, so we can generate 68, 77, 86, and 95.  The next value is 104, who’s digit sum is only 5, so we have to stop at 95.</p>

<p>Can you figure out a way to generate the first number in each series?  Can you identify a stopping criteria?  If so, you can directly count the number of numbers in that series with:</p>

<pre><code> count += (last - first) / inc + 1
</code></pre>

<p>What about 3 digit numbers?  106 has a digit sum of 7, and 149 has a digit sum of 14.  </p>

<p>What other values of <code>inc</code> do you need?  Can you add 1 to the hundreds digit and subtract 1 from the ones?  How about adding 1 to the hundreds and subtracting 1 from the tens?  Any others?</p>

<hr>

<p>The above will speed up the counting by computing series of numbers, and exploiting commonality.  But it is getting way to complicated, as you have to break the series into groups by numbers of digits, and you can have up to 10000 digits.</p>

<p>Perhaps a different approach is needed to determine all of the permutations of digits that result in the required sums.</p>

<blockquote class="spoiler">
  <p> Emphasis on permutations.</p>
</blockquote>
    </div>