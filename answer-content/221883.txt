<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://cppdepend.com/blog/?p=79" rel="nofollow noreferrer">Wrap your code into a namespace</a></p>

<hr>

<blockquote>
<pre><code>// this can be used to create a calendar! 
class TimePeriodGrouping
</code></pre>
</blockquote>

<p>Why not name the class something like CustomCalendar to indicate that it is a calendar but not a conventional one? </p>

<hr>

<p>Order your interface from public to private.</p>

<hr>

<p>Naming your member variable <code>period</code> when your surrounding struct is named <code>Period</code> seems like a poor choice. <code>count</code> and <code>name</code> are more bad naming choices. What does this count? What does it name? I'm not sure about <code>indexBase</code> either. Things get even worse later on with things like <code>a_name</code>.<br>
In short, work on your naming.</p>

<hr>

<p>Your comments are more confusing than helping. E.g.</p>

<blockquote>
<pre><code>// if the period has more than one period
</code></pre>
</blockquote>

<p>which in part simply stems from your poor naming choices.</p>

<hr>

<p><code>AMPMDividend</code> is unused.</p>

<hr>

<p><code>getcount</code> does not do what its name implies. It either returns <code>count</code> mod 12 or 12 (which is a magic number and should be made into a named constant). From your question it becomes clear it's actually supposed to convert between 24h and AM/PM style. Again, <em>naming</em>.</p>

<hr>

<p><a href="https://softwareengineering.stackexchange.com/questions/59880/avoid-postfix-increment-operator">Prefer prefix over postfix</a></p>

<hr>

<p>Missing <code>&lt;cstddef&gt;</code> and <code>std::</code> for <code>size_t</code>.</p>

<hr>

<p>When looping with a ranged for loop add <code>const</code> unless you plan to modify the loop variable in the body.</p>

<hr>

<p>Something like this would profit from having unit tests. Maybe even do <a href="https://en.wikipedia.org/wiki/Test-driven_development" rel="nofollow noreferrer">TDD</a> where you develop the tests first and then write code to pass those tests.</p>

<hr>

<p>You never clearly state a use case. You briefly mention video games but never make clear if this is intended for one (yours or video game developers in general).</p>

<hr>

<p>It would also be nice if you could create a functional calendar from the constructor instead of having to repeatedly call functions.</p>

<hr>

<blockquote>
  <p>[...]it feels very messy and insecure[...]</p>
</blockquote>

<p>This is a good summary of the code. </p>

<p>Date related code, much like crypto, is <a href="https://www.youtube.com/watch?v=-5wpm-gesOY" rel="nofollow noreferrer">notoriously hard to get right</a>. Maybe you should take a look at existing solutions (like <em>Boost</em>) and see if you can modify them to suit your use case.</p>
    </div>