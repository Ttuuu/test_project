<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The main problem is that <code>elem</code> traverses list and that is slow. It is better to use <a href="http://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Set.html" rel="nofollow noreferrer"><code>Data.Set</code></a> or <a href="http://hackage.haskell.org/package/unordered-containers-0.2.9.0/docs/Data-HashMap-Strict.html" rel="nofollow noreferrer"><code>HashMap</code></a> as this data structures allow sub-linear membership checking.</p>

<pre class="lang-hs prettyprint-override"><code>import qualified Data.Set as Set

hamx :: [Integer] -&gt; [Integer] -&gt; [Integer]
hamx ls = reverse . Set.toList . loop (Set.fromList ls)
  where
    loop res [] = res
    loop res (x:xs)
     | even x        &amp;&amp; Set.member (div x 2) res = loop (Set.insert x res) xs
     | mod  x 3 == 0 &amp;&amp; Set.member (div x 3) res = loop (Set.insert x res) xs
     | mod  x 5 == 0 &amp;&amp; Set.member (div x 5) res = loop (Set.insert x res) xs
     | otherwise = loop res xs
</code></pre>

<p>Or a bit shorter (but less readable) version:</p>

<pre><code>import Data.List (foldl')
import qualified Data.Set as Set

hamx :: [Integer] -&gt; [Integer] -&gt; [Integer]
hamx ls = reverse . Set.toList . loop (Set.fromList ls)
  where
    loop = foldl' (\res x -&gt; if predicate res x then Set.insert x res else res)
    predicate res x = any (\y -&gt; mod x y == 0 &amp;&amp; Set.member (div x y) res) [2, 3, 5]
</code></pre>

<hr>

<p>Using <a href="http://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-IntSet.html" rel="nofollow noreferrer"><code>IntSet</code></a> instead of <code>Set</code> is several times faster, but <a href="https://stackoverflow.com/a/12482407/147057">Daniel Fischer's solution</a> is still several orders of magnitude faster.</p>

<p>I put a project with <a href="http://hackage.haskell.org/package/criterion" rel="nofollow noreferrer">criterion</a> benchmark <a href="https://github.com/jorpic/playground/tree/master/hamming-numbers" rel="nofollow noreferrer">here</a>.</p>
    </div>