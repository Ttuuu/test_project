<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>If you really want to stick to strings you could use <code>Integer.toBinaryString(...)</code>:</p>

<blockquote>
  <p>Returns a string representation of the integer argument as an unsigned integer in base 2.</p>
</blockquote></li>
<li><p>But you also could use <a href="http://docs.oracle.com/javase/8/docs/api/java/util/BitSet.html" rel="nofollow noreferrer">BitSet</a> with its <code>valueOf(long[] longs)</code>, <code>cardinality()</code> and <code>length()</code> methods instead of <code>String binary</code> to get <code>oneCount</code> and <code>zeroCount</code>. It also handles negative numbers implicitely.</p></li>
<li><p>If you use <code>System.out</code> a lot you could use:</p>

<pre><code>import static java.lang.System.out;
</code></pre>

<p>and then just:</p>

<pre><code>out.print[f|ln](...);
</code></pre></li>
<li><p>Instead of <code>println()</code> and string concatenation within I'd use <a href="http://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html#printf-java.lang.String-java.lang.Object...-" rel="nofollow noreferrer"><code>printf(...)</code></a>, e.g.:</p>

<pre><code>out.printf("The binary representation of your integer has %d ones.", oneCount);
</code></pre></li>
<li><p>I'd use:</p>

<pre><code>out.print("Enter a positive integer: ");
</code></pre>

<p>(for input on the same line) but that might be personal taste.</p></li>
<li>Limiting to positive numbers is, well, a limitation. Mathematically spoken, also negative numbers can be represented by a binary number.</li>
</ul>
    </div>