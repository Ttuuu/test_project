<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>ClientController</h3>

<ul>
<li>I don't see a purpose for this class. I would move <code>AllClients</code>, <code>AddNewClient</code>, <code>RemoveClient</code> to <code>Listener</code> and <code>AddClientRequest</code> to <code>Client</code>.</li>
<li>These operations should be made thread-safe.</li>
</ul>

<h3>Client</h3>

<ul>
<li>Don't start an async operation int the constructor. Create a method <code>Initialise()</code> and let this method call <code>Receive.StartReceiving()</code>.</li>
</ul>

<h3>ClientReceiver</h3>

<ul>
<li><p><code>ReceiveCallback</code> expects <code>_receiveSocket.Receive</code> to contain one message only and the full message. This should not be asserted. The underying socket is optimized to use a buffer for sending data. You should be able to deal with parts of messages and multiple messages. Accomodating this adds some complexity though, you should:</p>

<ul>
<li>Use a raw buffer queue per client</li>
<li>Create a lexer/parser per client to determine when a full message is available in the queue</li>
</ul></li>
</ul>

<hr>

<h3>Common Guidelines</h3>

<ul>
<li><p>Use camelCase for arguments</p>

<blockquote>
  <p><code>public Listener(IPAddress ServerIp, int ServerPort)</code></p>
</blockquote>

<p><code>public Listener(IPAddress serverIp, int serverPort)</code></p></li>
<li><p>Guard arguments</p>

<blockquote>
<pre><code> public Listener(IPAddress serverIp, int serverPort)
 {
   // ..
 }
</code></pre>
</blockquote>

<p><code>public Listener(IPAddress serverIp, int serverPort)
 {
   if (serverIp == null) throw new ArgumentNullException(nameof(serverIp));
   // ..
 }</code></p></li>
</ul>
    </div>