<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you not only need adjacent values but also the number of adjacent cells, I do not think that there's a way to work around conditions that cover the corner cases. However, you can make a case differentiation between border cells and inner cells and use two seperate code paths for it. One with and the other without <code>if</code> conditions.</p>

<p>If accuracy at the borders is less important, you could take the grid indexes modulo width and height respectively, effectively calculating the blur over a torus. This will eliminate the <code>if</code> conditions.</p>

<p>If performance is an issue I would consider using preallocated one-dimensional <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" rel="noreferrer">TypedArrays</a> for input and output. The resulting average should then be calculated directly from the input array and written to the output array without using intermediate lists, <code>concat</code> or fancy <code>reduce</code> functions.</p>
    </div>