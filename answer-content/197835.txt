<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is not the Vue-way to do it. Vue does not recommend the use of <code>$refs</code>. And in this case, you can also avoid it.</p>

<p>Your current code is:</p>

<pre><code>&lt;select name="screw[type]" ref="screw_type_select" v-model="form.screw.type"&gt;
   &lt;option value="My value" data-value=""&gt;&lt;/option&gt;
</code></pre>

<p>I would recommend using <code>v-for</code> to loop through your options, and keep all your options in your <code>data</code>.</p>

<p>So for example: (This is how it is done in <a href="https://vuejs.org/v2/guide/forms.html#Select" rel="nofollow noreferrer">the Vue JS official documentation</a>)</p>

<pre><code>data() {
    return {
        options: [
             {
                 text: "&lt;?php _e('My value', 'context'); ?&gt;",
                 value: "My value"
             },
             ...
        ]
    }
}
</code></pre>

<p>And then:</p>

<pre><code>&lt;select name="screw[type]" v-model="form.screw.type"&gt;
  &lt;option v-for="option in options" v-bind:value="option.value"&gt;
    {{ option.text }}
  &lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>Instead of using the <code>watch</code>, you can use a <em>computed property</em>.</p>

<pre><code>computed: {
    selectedScrewType() {
        return this.options[this.form.screw.type].text;
    }
}
</code></pre>

<p>Then you can use <code>{{ selectedScrewType }}</code> in your template.</p>
    </div>