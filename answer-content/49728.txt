<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code looks pretty good. There are a few improvements that I can see. </p>

<p>Firstly, when following <a href="http://legacy.python.org/dev/peps/pep-0008/#blank-lines" rel="nofollow noreferrer">PEP8</a> (the official Python style convention guide) we want to avoid using multiple statements per line:</p>

<pre><code># Avoid this style.
if i == len(digits): return bits

# Use this style.
if i == len(digits):
    return bits
</code></pre>

<p>Because of your use of multiple statements per line, your code looks like it has an extraneous amount of blank lines (another no-no as defined by PEP8). Fixing the statements will also help mitigate the feeling that your code has too many blank lines.</p>

<hr>

<p>Secondly, I typically try to avoid declaring functions inside of functions (unless I'm doing something REALLY funky: think async plus decorators plus magic). As many of the answers say <a href="https://stackoverflow.com/questions/4831680/function-inside-function">here</a>, functions inside functions are useful for creating closures and decorators, both of which are not really needed here in your implementation.</p>

<hr>

<p>Thirdly, in your <code>for</code> loop within <code>encode()</code> you <a href="http://en.wikibooks.org/wiki/Python_Programming/Tuples#Packing_and_Unpacking" rel="nofollow noreferrer">unpack</a> the tuple returned from <code>zip</code> then take those unpacked elements and put them into a list to extend <code>bits</code>:</p>

<pre><code># Unpack into `b` and `w`
for b, w in zip(byte(i), byte(i+1)):
    # 'Re-pack' back into list
    bits.extend([b, w])
</code></pre>

<p>Instead, you can just take the tuple itself and pass that to <code>extend()</code>:</p>

<pre><code>for tup in zip(byte(i), byte(i+1)):
    bits.extend(tup)
</code></pre>

<hr>

<p>Finally, your variable names are a tad ambiguous. They can be guessed (if you know ITF format) but we don't want to necessarily assume others know ITF format or <strong>require</strong> them to have guess what each of our variables are for.</p>
    </div>