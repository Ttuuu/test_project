<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can try something like this, note that it is untested:</p>

<pre><code>&lt;?php
function createControls($parentView) {
    $newArr = $parentView;
    foreach ($parentView as $k =&gt; $v) {
        $newArr[$k] = ['type' =&gt; 'control'];
        if (isset($v['childViews'])) {
            $v = createControls($v['childViews']);
        }
        $newArr[$k]['childViews'] = $v;
    }
    return $newArr;
}
?&gt;
</code></pre>

<p>This function uses reccursion to do the same as your code above. It takes one array of Key Value pairs and reassigns the values to wrap the old values into an array with the following format:</p>

<pre><code>array ( 'type' =&gt; 'control', 'childViews' =&gt; $oldValue );
</code></pre>

<p>Basically, instead of nesting a new loop each time the depth of your input array changes like in your function above this function will just pass the old childValues back into itself and assign the result as the new childValues array.</p>
    </div>