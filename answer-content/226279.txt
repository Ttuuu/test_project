<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are not sorting in place - that is: the input array is untouched by the operation and you return a new sorted array. I would expect the input array to be sorted when the function returns. Javascript's <code>Array.sort()</code> behaves this way.</p>

<hr>

<blockquote>
<pre><code>listA.push(Infinity)
listB.push(Infinity)
</code></pre>
</blockquote>

<p>I you encounter a problem where you are tempted to do this, you should definitely reconsider your approach. </p>

<p>Instead you could do:</p>

<pre><code>function merge(listA, listB) {
  let list = []
  let i = 0
  let j = 0

  while (i &lt; listA.length &amp;&amp; j &lt; listB.length) {
    if (listA[i] &lt; listB[j]) {
      list.push(listA[i])
      i++
    } else {
      list.push(listB[j])
      j++
    }
  }

  while (i &lt; listA.length)
    list.push(listA[i++]);
  while (j &lt; listB.length)
    list.push(listB[j++]);

  return list;
}
</code></pre>

<p>or:</p>

<pre><code>function merge(listA, listB) {
  let list = []

  let i = 0
  let j = 0

  while (i &lt; listA.length || j &lt; listB.length) {
    if (i &lt; listA.length &amp;&amp; (listA[i] &lt; listB[j] || j &gt;= listB.length)) {
      list.push(listA[i])
      i++
    } else {
      list.push(listB[j])
      j++
    }
  }

  return list;
}
</code></pre>
    </div>