<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you let me to be frank, this is not a class but rather a ratatouille - that is a random collection of functions. </p>

<p>I do understand your idea and a chain of thoughts and in a way you are trying to do the right thing - to achieve the main goal of every programmer - to reduce the amount of code written. And it's for the good you started with OOP.</p>

<p>However, there are common pitfalls on this road, and you didn't miss any of them.</p>

<p>Ironically, the most natural part of OOP - inheritance - should be avoided as much as possible. It's a very dangerous practice that will lead to spaghetti code despite being OOP. </p>

<p>Instead, the first OOP rule you should learn and implement is the Single responsibility principle. As soon as you grasp it, you will see that your lass is an Irish stew consisting of every task your program is about to perform. This is not OOP.</p>

<p>Although I understand your intention to have helper methods in all your classes, it is not an excuse for having such a mess. But there is a solution called "composition over inheritance". If you need some service, it has to be <em>injected</em> in your class, not inherited from a parent.</p>

<p>So, now I can tell that you started to move into the right direction. But still such a decomposition you did already is not enough:</p>

<ul>
<li>There are functions related to processing the user input - they should go into a distinct class</li>
<li>There are functions related to user user authorization - they should go into a distinct class</li>
<li>There are functions related to HTML/JSON output - they should go into a distinct class</li>
</ul>

<p>In the end there will be no Base class but several other classes each related to its particular niche. </p>
    </div>