<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>changing mutable object</h1>

<p>Since you are changing the original array, this code run twice can provide strange results. In general I try to avoid changing the arguments passed into a function I write, unless it's explicitly stated, or expected (like <code>list.sort</code>)</p>

<h1><code>accumulate</code></h1>

<p>What you are looking for is the largest difference between tha cumulative sum where the minimum comes before the maximum. Calculating the cumulative sum can be done with <code>itertools.accumulate</code>. Then you just have to keep track of the minimum of this running sum and the difference with the running minimum</p>

<pre><code>def best_sum_accum(array):
    running_min = 0
    max_difference = 0
    for cumsum in accumulate(array):
        if cumsum &gt; running_min:
            max_difference = max(max_difference,  cumsum - running_min)
        running_min = min(running_min, cumsum)
    return max_difference
</code></pre>
    </div>