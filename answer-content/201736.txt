<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your list flattening is overly complicated. A nice short way to do it is to use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a>:</p>

<pre><code>import itertools

def flatten(x):
    """Flatten a list of lists.
    &gt;&gt;&gt; flatten([[1, 2], [3], [4, 5, 6]])
    [1, 2, 3, 4, 5, 6]
    """
    return list(itertools.chain(*x))
</code></pre>

<p>This assumes that there is only one level of nestedness in your list of lists (and exactly one, so it is a bit less general).</p>

<p>It makes up for the loss of generality by being significantly faster:</p>

<p><a href="https://i.stack.imgur.com/ublCZ.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/ublCZ.png" alt="enter image description here"></a></p>

<p>It has the added benefit, that <code>lift_list</code> crashes when the lists get too large (it worked for <code>len(dc[0]) + len(dc[1]) = 3000</code> and crashed when trying to go up to <code>4000</code>).</p>
    </div>