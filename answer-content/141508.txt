<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You obviously implemented the <a href="https://en.wikipedia.org/wiki/Observer_pattern" rel="nofollow">Observer pattern</a> here.</p>

<p>So let's improve the naming and the overall design so that the pupose of each class and method is clear to the user.</p>

<p>First instead of just <code>Value</code> the class should be called <code>ObservableValue</code> and consequently the interface should be:</p>

<pre><code>public interface IObservableValue&lt;T&gt;
{
    void Subscribe(IObserver&lt;T&gt; observer);
    void Unsubscribe(IObserver&lt;T&gt; observer);
}
</code></pre>

<p>the <code>IValueListener</code> interface becomes <code>IObserver</code>:</p>

<pre><code>public interface IObserver&lt;T&gt;
{
    void Notify(T value);
}
</code></pre>

<p>Then the <em>new</em> class would look like this:</p>

<pre><code>[Serializable]
public class ObservableValue&lt;T&gt; : IObservableValue&lt;T&gt;
{
    private T _value;

    [NonSerialized]
    private List&lt;IObserver&lt;T&gt;&gt; _observers = new List&lt;IObserver&lt;T&gt;&gt;();

    public ObservableValue(T value)
    {
        _value = value;
    }

    public T Get()
    {
        return _value;
    }

    public void Set(T value)
    {
        if (!_value.Equals(value))
        {
            _value = value;
            NotifyObservers();
        }
    }

    public void Subscribe(IObserver&lt;T&gt; observer)
    {
        _observers.Add(observer);
    }

    public void Unsubscribe(IObserver&lt;T&gt; observer)
    {
        _observers.Remove(observer);
    }

    private void NotifyObservers()
    {
        foreach (var observer in _observers)
        {
            observer.Notify(_value);
        }
    }
}
</code></pre>

<p>I used the <code>T</code> as a parameter for the <code>Notify</code> method but if you really need it to be the <code>IObservableValue</code> that it's a minor adjustment.</p>
    </div>