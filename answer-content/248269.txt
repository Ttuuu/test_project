<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can use <code>Unsafe</code> class and make it generic.</p>
<p>Here is the code:</p>
<pre><code>using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;

namespace Test
{
    public abstract class PacketWriter
    {
        private readonly List&lt;byte&gt; _buffer;

        internal PacketWriter()
        {
            _buffer = new List&lt;byte&gt;();
        }

        public byte[] GetBytes()
        {
            GenerateBufferContent();
            byte[] bytes = _buffer.ToArray();
            _buffer.Clear();
            return bytes;
        }

        protected abstract void GenerateBufferContent();

        // Edited, Added Encoding Parameter
        protected void Write(string value, Encoding encoding)
        {
            var bytes = encoding.GetBytes(value);

            _buffer.AddRange(bytes);
        }

        protected void Write&lt;T&gt;(T value) where T : unmanaged
        {
            var bytes = GetBytes(value);

            _buffer.AddRange(bytes);
        }

        // Edited, Added Encoding Parameter
        protected void Insert(string value, Encoding encoding)
        {
            var bytes = encoding.GetBytes(value);

            _buffer.InsertRange(0, bytes);
        }

        protected void Insert&lt;T&gt;(T value) where T : unmanaged
        {
            var bytes = GetBytes(value);

            _buffer.InsertRange(0, bytes);
        }

        private byte[] GetBytes&lt;T&gt;(T value) where T : unmanaged
        {
            var bytes = new byte[Unsafe.SizeOf&lt;T&gt;()];

            Unsafe.As&lt;byte, T&gt;(ref bytes[0]) = value;

            return bytes;
        }
    }
}
</code></pre>
<p>Important note here is you can't use <code>String</code> with this generic method. You have to use <code>Encoding.UTF8.GetBytes</code> or <code>Encoding.ASCII.GetBytes</code>.</p>
<p>I believe we must add a <code>where T : struct</code> or <code>where T : unmanaged</code> constraint to prevent someone from using <code>Unsafe.SizeOf&lt;T&gt;()</code> and <code>Unsafe.As&lt;TFrom, TTo&gt;(ref byte source)</code> with a managed reference type.</p>
    </div>