<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p><code>pr</code> means the number we'll be working on<br>
  <code>dl</code> is a dictionary that contains our the dividend and the reaminder<br>
  <code>x</code> is the dividend<br>
  <code>e</code> is a list that contains all remainders</p>
</blockquote>

<p>These variable names are very short and don't have a lot of meaning.
You can save a lot of comments by naming your variables: <code>number_to_check</code>, <code>remainders</code>, <code>dividend</code>, <code>remainder_list</code>.</p>

<p>Not all variable names need to be that explicit, but if you feel the need to explain them in a comment, there is probably room for improvement.</p>

<blockquote>
  <p>and what the program does as you might have guessed already
  it makes a list of all remainders of the division of our number by every integer before it
  and checks for the number 0
  if it finds it then the number is not prime
  and if it doesn't then it's prime</p>
</blockquote>

<p>This part of the comment you can also make redundant by using method names:</p>

<pre><code>def isPrime(our_number):
    remainders = make_list_of_all_remainders(our_number)
    if any( item == 0 for item in remainders ):
        return False
    else:
        return True
</code></pre>

<p>If you read the method names, it basically narrates the same as your description of the algorithm does.</p>
    </div>