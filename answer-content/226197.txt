<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>May try the modified code using Arrays to Compare. Tested with 250000  rows X 26 columns of random data and every 5th cells have value difference (Total 130000 differences). It takes around 18 secs to compare and another 22 secs to completes report generation with total 40 seconds only.</p>

<pre><code>Sub Compare2WorkSheets(ws1 As Worksheet, ws2 As Worksheet)
  Dim ws1row As Long, ws2row As Long, ws1col As Integer, ws2col As Integer
  Dim maxrow As Long, maxcol As Integer, colval1 As String, colval2 As String
  Dim Report As Workbook, difference As Long
  Dim row As Long, col As Integer
  Dim Arr1 As Variant, Arr2 As Variant, Arr3 As Variant, Rng As Range
  Dim tm As Double
  tm = Timer

  'Application.ScreenUpdating = False
  'Application.Calculation = xlCalculationManual
  'Application.EnableEvents = False


  With ws1.UsedRange
    ws1row = .Rows.Count
    ws1col = .Columns.Count
  End With

  With ws2.UsedRange
    ws2row = .Rows.Count
    ws2col = .Columns.Count
  End With

  maxrow = ws1row
  maxcol = ws1col
  If maxrow &lt; ws2row Then maxrow = ws2row
  If maxcol &lt; ws2col Then maxcol = ws2col

  Debug.Print maxrow, maxcol
  Arr1 = ws1.Range(ws1.Cells(1, 1), ws1.Cells(maxrow, maxcol)).Formula
  Arr2 = ws2.Range(ws2.Cells(1, 1), ws2.Cells(maxrow, maxcol)).Formula
  ReDim Arr3(1 To UBound(Arr1, 1), 1 To UBound(Arr1, 2))

  difference = 0

  For col = 1 To maxcol
    For row = 1 To maxrow
      If Arr1(row, col) &lt;&gt; Arr2(row, col) Then
      difference = difference + 1
      Arr3(row, col) = Arr1(row, col) &amp; "&lt;&gt; " &amp; Arr2(row, col)
      Else
      Arr3(row, col) = ""
      End If
    Next row
  Next col

  Debug.Print " Calc secs " &amp; Timer - tm
  If difference &gt; 0 Then
  Set Report = Workbooks.Add

  With Report.ActiveSheet
  .Range("A1").Resize(UBound(Arr3, 1), UBound(Arr3, 2)).Value = Arr3
  .Columns("A:B").ColumnWidth = 25
  Set Rng = .Range(Report.ActiveSheet.Cells(1, 1), Report.ActiveSheet.Cells(UBound(Arr3, 1), UBound(Arr3, 2)))
  End With

  With Rng
  .FormatConditions.Add Type:=xlCellValue, Operator:=xlGreater, Formula1:="=""""" '""""""""
  .FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
   With .FormatConditions(1)
        .Interior.Color = 255
        .Font.Bold = True
        .Font.ColorIndex = 2
    End With
   End With

  Debug.Print "Report Generated secs " &amp; Timer - tm
  End If
 'Set Report = Nothing
  'Application.ScreenUpdating = True
  'Application.Calculation = xlCalculationAutomatic
  'Application.EnableEvents = True

  MsgBox difference &amp; " cells contain different data! ", vbInformation, "Comparing Two       Worksheets"
End Sub
</code></pre>

<p>Since I personally don't prefer to keep calculations, event processing and screen updating off (in normal cases) i haven't used that standard lines. However you may use these standard techniques, depending on the working file condition.</p>
    </div>