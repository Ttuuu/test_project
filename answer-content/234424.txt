<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Perhaps the templates can be generated by a function.  Pass in a list of the attribute names, and it returns a template string.  Or pass in the table name, and query the column names to make the template.  Then use <code>render_template_string()</code> instead of <code>render_template()</code>.</p>

<p>This code is rough and untested, but outlines what I'm thinking:</p>

<pre><code>def column_headers(attrs):
    headers = (f'&lt;th scope="col"&gt;{attr.replace("_"," ").titlecase()}&lt;/th&gt;' 
               for attr in attrs)
    return '\n'.join(headers)

def columns(attrs):
    column_refs = (f'&lt;td&gt;{{record.{attr}}}&lt;/td&gt;' for attr in attrs)
    return '\n'.join(column_refs)

def make_template(attrs):
    template_string = ["""
        {% extends "records.html"%}
        {%block recordcontent%}
        &lt;table class="table table-striped"&gt;
            &lt;thead&gt;
                &lt;tr&gt;
                """,
                column_headers(attrs),
                """
            &lt;/thead&gt;
            &lt;tbody&gt;
                {% for record in user_records.items %}
                &lt;tr&gt;
                    &lt;th scope="col"&gt;{{ loop.index }}&lt;/th&gt;
                    """,
                    columns(attrs),
                    """
                &lt;/tr&gt;
                {% endfor %}
            &lt;/tbody&gt;
        &lt;/table&gt;
        {% endblock%}
        """]
        return '\n'.join(template_string)

FridgeFreezerTemplate = make_template("""
                                      unit_type
                                      temperature
                                      employee_name
                                      comment
                                      date_submitted
                                      """.strip().split())

@app.route("/unit_temp_records/&lt;int:page_number&gt;")
def unit_records(page_number):
    """
    records = pagiantion object
    page number = the current page

    """
    records = FridgeFreezerTempTable.query.filter_by(user=current_user).paginate(per_page=5,                             
             page=page_number, error_out=True)
    return render_template_string(FridgeFreezerTemplate, user_records=records, table=table)
</code></pre>
    </div>