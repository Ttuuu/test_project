<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Based on the nearly the same idea from Celko's book I came up with another version without arrays&amp;rows but still using common table expression.</p>

<pre><code>WITH RECURSIVE DocumentGraph AS
(
    SELECT DISTINCT
        document1_id document2_id,
        0 depth,
        '/2856' path

    FROM DocumentCyclicDependency

    WHERE
        document1_id = 2856

    UNION ALL

    SELECT
        document_dependency.document2_id,
        document_graph.depth + 1,
        document_graph.path || '/' || document_dependency.document2_id

    FROM
        DocumentCyclicDependency AS document_dependency,
        DocumentGraph AS document_graph

    WHERE
        document_graph.document2_id = document_dependency.document1_id
        AND
        document_graph.path NOT LIKE '%' || document_dependency.document2_id || '%'
)

SELECT document2_id, depth, path
FROM DocumentGraph
</code></pre>

<p>DocumentCyclicDependency is actually a tricky view: </p>

<pre><code>CREATE VIEW DocumentCyclicDependency(document1_id, document2_id) AS

    SELECT descendant_id, predecessor_id FROM DocumentDependency

    UNION ALL

    SELECT predecessor_id, descendant_id FROM DocumentDependency;
</code></pre>
    </div>