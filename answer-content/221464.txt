<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Most of questions you are asking are not fit for this site and your code <strong>does not</strong> work as intended but this is an interesting case to review</p>
<h1>The grave mistake</h1>
<p>Adding anything to your code just in case there would be some imaginary "error of some kind" is <strong>the worst thing a programmer could do ever</strong>. You effectively ruined your code with adding that <code>|| $_SERVER['PHP_URL_PATH']</code> stuff:</p>
<ul>
<li>there is no such thing <code>$_SERVER['PHP_URL_PATH']</code> for starter: such a variable just <strong>doesn't exist</strong></li>
<li>of course <code>['PHP_URL_PATH']</code> without the <code>$_SERVER</code> part makes no sense</li>
<li>neither the whole condition returns anything sensible due to PHP syntax rules you are yet to learn.</li>
</ul>
<p>Yet this code works somehow, albeit not the way you expect.</p>
<h1>The operator precedence</h1>
<p>The way this code executes is a very interesting matter, once I wrote an article that explains it in detail, <a href="https://phpdelusions.net/articles/or_die" rel="noreferrer">Operator precedence or how does 'or die()' work</a>. Given you only started learning it could be too complex for you for the moment to wrap your head around, but in time you will find it very interesting to read.</p>
<p><code>$_SERVER['PHP_SELF'] || $_SERVER['PHP_URL_PATH']  === "/mainHubV8.1.php"</code> doesn't mean "if either PHP_SELF or PHP_URL_PATH equal to /mainHubV8.1.php". It means "if PHP_SELF contains any value OR PHP_URL_PATH is equal to /mainHubV8.1.php".</p>
<p>In short, an expression <code>$_SERVER['PHP_SELF'] || $_SERVER['PHP_URL_PATH']  === "/mainHubV8.1.php"</code> evaluates to <code>true</code> when <code>$_SERVER['PHP_SELF']</code> contains <em>any</em> value. Which means <strong>always</strong>.</p>
<p>Given PHP already has it's answer, it <em>ceases to execute the further condition</em>. This is why you can write either <code>$_SERVER['PHP_URL_PATH']</code> or <code>['PHP_URL_PATH']</code> or don't even get a notice for the non-existent array index - this code is just never executed.</p>
<p>As a result, this code will always output just <code>"Loading Styles for MainHubV8.1.php"</code> no matter which page it is called on.</p>
<h1>The right way</h1>
<p>To elaborate on the Neoan's answer, given you have 3 styles to load, here is the proposed array structure</p>
<pre><code>$stylesheets = [
    '/mainHubV8.1.php' =&gt; [
        'style1.css',
        'style2.css',
        'style3.css',
    ],
    '/advSearchV8.1.php' =&gt; [
        'style4.css',
        'style5.css',
        'style6.css',
    ],
    // and so on
];
</code></pre>
<p>given this structure, you will be able to get the correct styles right from <code>$_SERVER['PHP_SELF']</code>:</p>
<pre><code>foreach($stylesheets[$_SERVER['PHP_SELF']] as $file) {
    echo "&lt;link rel='stylesheet' type='text/css' href='$file'&gt;\n";
}
</code></pre>
    </div>