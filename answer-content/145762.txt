<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>common_suffix</code> can be written as <code>return common_prefix(string[::-1])[::-1]</code> because the operations are just the simmetric of one another, and this way will prevent duplication.</p>

<p>Also I think you should not handle max or min inside the <code>common_prefix</code> function because it feels like the function has double responsabilty: finding prefixes + length interval check.</p>

<p>Why are you limiting yourself to strings? Python allows general functions very easily.</p>

<p>Why do you build all the result and then return it? You should <code>yield</code> the result item by item:</p>

<p>Why do you write so much yourself? Using the <code>itertools</code> module is much more efficient and simple:</p>

<pre><code>def common_prefix(its):
    yield from itertools.takewhile(all_equal, zip(*its))
</code></pre>

<p>PS: <code>common_suffix</code> will now need to use <code>reversed(list</code> instead of <code>[::-1]</code></p>
    </div>