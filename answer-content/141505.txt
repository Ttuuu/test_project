<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think you shouldn't build a new string there because it's a new responsibility. The method should only split the text and return its parts with the specified length.</p>

<p>The user should decide what to do with the results next. Maybe he does not want to use the <code>Environment.NewLine</code> but some other <em>new-line</em>? </p>

<p>I prefer it to be a split-only method:</p>

<pre><code>public static IEnumerable&lt;string&gt; Split(this string text, int partLength)
{
    if (text == null) { throw new ArgumentNullException("singleLineString"); }

    if (partLength &lt; 1) { throw new ArgumentException("'columns' must be greater than 0."); }

    var partCount = Math.Ceiling((double)text.Length / partLength);
    if (partCount &lt; 2)
    {
        yield return text;
    }

    for (int i = 0; i &lt; partCount; i++)
    {
        var index = i * partLength;
        var lengthLeft = Math.Min(partLength, text.Length - index);
        var line = text.Substring(index, lengthLeft);
        yield return line;
    }
}
</code></pre>

<p>I need to complain about the missing <code>{}</code> but I guess you probably know that ;-)</p>

<p>The names of the variables could also be a little bit clearer.</p>

<p>Technically you don't need this <code>if</code>:</p>

<blockquote>
<pre><code>    if (partCount &lt; 2)
    {
        yield return text;
    }
</code></pre>
</blockquote>

<p>The result will be the same with out it because the <code>for</code> would execute only once .</p>
    </div>