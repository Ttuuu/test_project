<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>In <code>randrange</code>, you initialize the random device, the engine, and the distribution on every call. So this is not suitable for every situation, i.e., when performance matters.</p></li>
<li><p>In <code>serialize_http_args</code> and in general, <strong>never</strong> query the size of a container when you want to determine whether it is empty or not. For that, you should use <code>empty()</code>. This is idiomatic and saves you from costly surprises like with container implementations where <code>empty()</code> is a constant time method while <code>size()</code> needs linear time.</p></li>
<li><p>At least for both <code>serialize_http_args</code> and <code>serialize_http_headers</code>, you might consider first checking whether <code>_args.empty()</code> (or <code>_headers.empty()</code>), and then returing an empty string, i.e.,:</p>

<pre><code>std::string serialize_http_args(std::map&lt;std::string, std::string&gt; _args) 
{
    if (_args.empty())
        return "";

    size_t counter = 1;
    std::string args_str = "";
    for (auto const&amp; arg : _args) 
    {
        args_str += arg.first + "=" + arg.second;
        if (counter &lt; _args.size())
            args_str += "&amp;";
        counter++;
    }

    return args_str;
}
</code></pre>

<p>I find this cleaner and easier to read, especially if the functions were any longer.</p></li>
<li><p>You don't need your own <code>int2str</code> anymore, you can just use <a href="https://en.cppreference.com/w/cpp/string/basic_string/to_string" rel="noreferrer"><code>std::to_string</code></a>.</p></li>
</ul>
    </div>