<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Should I do away with the #defines and use functions instead?</p>
</blockquote>

<p>Probably.</p>

<blockquote>
  <p>Speed is everything. No functions. Just #defines.</p>
</blockquote>

<p>Are you so sure? Have you tested the speed of your application when using regular functions? Optimizing C compilers are pretty good. They'll be able to inline away the functions that you write. Defaulting to writing <code>#define</code> macros based on the belief that it will make things faster is classic premature optimization. The macros might even <em>be</em> faster, but you haven't proven so, and they aren't the first thing you should reach for. Instead, you should first make your program correct; then you should profile your application to find bottlenecks. It's going to be unlikely that you'll find a bottleneck caused by writing functions, and using macros comes at a heavy cost of legibility and maintainability.</p>
    </div>