<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is another inprovement using a dictionary. Currently all of your data is hardcoded and distributed somewhere in the code. If you wanted to add another fish, you would have to add a variable <code>f</code>, extend <code>random.randint</code> (so the chance for nothing does not decrease) and finally add it to the <code>if</code> conditions and the printing.</p>

<p>That is a lot of work just to add one more fish. Instead I would propose to use a dictionary of possible fishing outcomes and their chance of being caught. You can then use this with <a href="https://docs.python.org/3/library/random.html#random.choices" rel="nofollow noreferrer"><code>random.choices</code></a>, which takes a <code>weights</code> argument detailing the probabilities.</p>

<pre><code>pond = {'cod': 1, 'salmon': 1, 'shark': 1, 'wildfish': 1, 'nothing': 2}
</code></pre>

<p>The probabilities are here just relative to each other, <code>random.choices</code> normalizes them for you. All fish have the same probability and getting nothing has double the probability of any single fish.</p>

<p>Your loop also does not need the <code>fishing</code> variable at all, just <code>break</code> it when the user is done fishing.</p>

<p>Whenever you need to count something, using <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> is probably a good idea. It basically works like a dictionary and has the nice feature that it assumes all elements have a count of zero.</p>

<p>In Python 3.6 a new way to format strings was introduced, the <a href="https://realpython.com/python-f-strings/" rel="nofollow noreferrer"><code>f-string</code></a>.</p>

<pre><code>from collections import Counter
from random import choices
from time import sleep

POND = {'cod': 1, 'salmon': 1, 'shark': 1, 'wildfish': 1, 'nothing': 2}

name = input("What is your name fisherman? ")

caught = Counter()
while True:
    keep_fishing = input("Throw out your line, or go home? ")
    if keep_fishing == "go home":
        break
    sleep(1)
    result = choices(list(POND), weights=POND.values(), k=1)[0]
    print(f"You caught: {result}")
    caught[result] += 1

print(f"\nThanks for playing, {name}!")
print("You caught:")
for fish, n in caught.most_common():
    if fish != "nothing":
        print(n, fish)
</code></pre>
    </div>