<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You might easily do this job by a very simple tail call optimized recursive function or by <code>Array.prototype.reduce()</code> functor.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function lis(a, r = [a[0]]){
  if(!a.length) return r;
  a.splice(0,1);
  r[r.length-1] &lt; a[0] &amp;&amp; r.push(a[0]);
  return lis(a,r);
}  
var arr = [-7, -10, 6, 22, 9, 33, 21, 50, 41, 60, 80 ];
console.log(lis(arr));</code></pre>
</div>
</div>


<p>Or like</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>var arr = [-7, -10, 6, 22, 9, 33, 21, 50, 41, 60, 80 ],
    lis = arr.reduce((p,c,i) =&gt; i ? p[p.length-1] &lt; c ? p.concat(c)
                                                      : p
                                  : [c] ,[]);
console.log(lis);</code></pre>
</div>
</div>

    </div>