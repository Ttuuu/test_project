<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For the first loop, there is a neat little function called <code>enumerate()</code> which allows you to iterate through an object and access both the element and the iteration number.</p>

<p>You can also remove various parenthesis, for the <code>return</code>ed value and also for the <code>while</code> loop (although for big conditions it's handy to keep the parenthesis sometimes).</p>

<pre><code>def get_pos(format, letter, number):
    it_number = 0
    # it_pos = 0 &lt;--- not needed anymore because of the
    for it_pos, char in enumerate(format): # &lt;--- enumerate
        if char == letter:
            it_number += 1
            if it_number == number:
                return it_pos
        # it_pos += 1 &lt;--- same thing here
    return -1
</code></pre>

<p>For the second function I would suggest to use <code>while True</code> and <code>break</code> so that you don't have to declare <code>pos=-2</code> beforehand.    </p>

<pre><code>def format_loop(string, old_format, letter):
    new = ''
    # pos = -2 &lt;--- replaced by a break
    it = 1
    while True:
        pos = get_pos(old_format, letter, it)
        if pos == -1:
            break
        elif pos &gt;= 0:
            new += string[pos]
        it += 1
    return new
</code></pre>

<p>Also, I don't know if there is an official recommendation on that, but I like to use very explicit return values for special cases, for example the string <code>"not found"</code> instead of <code>-1</code>. That makes the code more English than Python when you read <code>if pos=="not found": break</code> and I rather like that. </p>
    </div>