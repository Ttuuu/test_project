<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In addition to what @K.H. already mentioned:</p>

<h2>Comments to the code</h2>

<ul>
<li>Things will get simplified if you represent the <code>Board</code> as a set of numbers</li>
</ul>

<pre><code>Board = set([1,2,3,4,5,6,7,8,9])
</code></pre>

<p>Then <code>Board.remove(z)</code> would look better than doing manipulations with indices and assigning an empty list (<code>Board[z-1] = []</code>)</p>

<ul>
<li>The condition below is not really used:</li>
</ul>

<pre><code>while len(PlayerO) &lt; 9:
</code></pre>

<p>Can the length of <code>Player0</code> ever be more or equal to 9?</p>

<ul>
<li>You can simplify <code>if w is True:</code> -&gt; <code>if w:</code></li>
</ul>

<h2>General comment about variable naming</h2>

<p>I would like also to pay your attention to variable naming. It might seem insignificant for a small program like yours, but it is important. After some time you are going to forget which information variables like <code>w</code> or <code>Board</code> actually hold, and those who read your program won't be able to understand it right away either. So it will take more time to understand your code.</p>

<p>For example, you could rename your variables as follows:</p>

<p><code>Board</code> -&gt; <code>free_places_on_board</code></p>

<p><code>Player0</code> -&gt; <code>player_0_selected_places</code></p>

<p><code>w</code> -&gt; <code>tie</code></p>

<p><code>z</code> -&gt; <code>selected_place</code></p>

<p>Although these names are longer (shouldn't be a problem since all modern IDEs provide code completion), but they give much more information, and the code reads much easier, just like the English language:</p>

<pre><code>selected_place = int(input("Player O: Select a place (1-9)\n"))
if selected_place in free_places_on_board:
    player_0_selected_places.append(selected_place)
</code></pre>

<p>A big advantage of this is that if there's a bug somewhere in your code, it will become obvious:</p>

<pre><code>if not w:         # not obvious
    print("Tie")
</code></pre>

<pre><code>if not tie:       # now the statement does not make sense -&gt; the bug becomes obvious 
    print("Tie")
</code></pre>
    </div>