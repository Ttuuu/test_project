<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Overall this feels like a lot of code thrown together. It isn't totally unorganized but feels like a lot to process when reading it. I do notice that most every <code>try</code>/<code>catch</code> block has the same exception handlers.</p>

<p>One improvement might be to make a controller class that can accept POST data and then have methods like <code>subscribeUserToApp()</code>, <code>getAccessToken()</code>, <code>getAccounts()</code> and then <code>getNLPConfigs()</code>. And each method could utilize a common method for making the request and catching the exceptions. Then those methods could be called from the page (<em>facebookpages.php</em>?) in series unless one throws an exception.</p>

<p>The controller could also store the constants (e.g. <code>FB_APP_ID</code>) for use in its methods.</p>

<hr>

<p>Let's look at this loop:</p>

<blockquote>
<pre><code>foreach ($_POST['data'] as $pageData) {
    $pageToken = $pageData["access_token"];

    $request = $fb-&gt;request('POST', '/me/subscribed_apps');//subscribe the user to you app
</code></pre>
</blockquote>

<p>Does the call to <code>$fb-&gt;request()</code> really need to be inside the <code>foreach</code> loop? If that can be called once before the loop, then it would not be called once for each item in the data list (though it isn't clear what that list looks like - perhaps it only has one item). But I understand that maybe calling that request and then calling <code>setAccessToken()</code> multiple times (in the <code>foreach</code> loop) would not succeed when it should.</p>
    </div>