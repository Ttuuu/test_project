<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <a href="https://docs.scipy.org/doc/numpy/reference/index.html" rel="noreferrer">NumPy Reference</a> should be the first place you look when you have a problem like this. The operations you need are nearly always in there somewhere. And functions that you find while browsing the reference are sure to come in useful later in your NumPy career.</p>

<p>For the first row, you could use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.arange.html" rel="noreferrer"><code>numpy.arange</code></a> and <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.repeat.html" rel="noreferrer"><code>numpy.repeat</code></a>:</p>

<pre><code>&gt;&gt;&gt; np.repeat(np.arange(4), 4)
array([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3])
</code></pre>

<p>For the second row, you could use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.tile.html" rel="noreferrer"><code>numpy.tile</code></a>:</p>

<pre><code>&gt;&gt;&gt; np.tile(np.arange(4), 4)
array([0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3])
</code></pre>

<p>For the third row, you could use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.ones.html" rel="noreferrer"><code>numpy.ones</code></a>:</p>

<pre><code>&gt;&gt;&gt; np.ones(4 * 4, dtype=int)
array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
</code></pre>

<p>Putting that together (using <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.ones_like.html" rel="noreferrer"><code>numpy.ones_like</code></a> for <code>row3</code> so that it has the same shape and data type as <code>row2</code>):</p>

<pre><code>row1 = np.repeat(np.arange(row), col)
row2 = np.tile(np.arange(col), row)
row3 = np.ones_like(row2)
output = np.vstack([row1, row2, row3])
</code></pre>

<p>This is about 100 times as fast as the code in the post.</p>

<p>But you can do better than that! There is a hint in the documentation for <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.tile.html" rel="noreferrer"><code>numpy.tile</code></a>:</p>

<blockquote>
  <p>Note: Although tile may be used for broadcasting, it is strongly recommended to use numpyâ€™s broadcasting operations and functions.</p>
</blockquote>

<p><a href="https://docs.scipy.org/doc/numpy/reference/ufuncs.html#broadcasting" rel="noreferrer"><em>Broadcasting</em></a> is the way that NumPy adapts the inputs to an operation so that they match in shape. Using this we can write the whole function using array indexing and reshaping operations, like this:</p>

<pre><code>output = np.zeros((3, row, col), dtype=int)
output[0] = np.arange(row).reshape(-1, 1)
output[1] = np.arange(col).reshape(1, -1)
output[2] = 1
output = output.reshape(3, -1)
</code></pre>

<p>This is about 160 times as fast as that code in the post.</p>

<p>A slightly clearer way to write this is to use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.meshgrid.html" rel="noreferrer"><code>numpy.meshgrid</code></a> to generate the coordinate arrays:</p>

<pre><code>output = np.zeros((3, row, col), dtype=int)
i, j = np.meshgrid(np.arange(row), np.arange(col), indexing='ij', sparse=True)
output[0] = i
output[1] = j
output[2] = 1
output = output.reshape(3, -1)
</code></pre>

<p>This isn't any faster than the previous version but the use of <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.meshgrid.html" rel="noreferrer"><code>numpy.meshgrid</code></a> gives more of a clue to the reader as to what is happening.</p>

<p>(You might be able to do even better than that. Do you really need to construct the whole matrix? Could you combine <a href="https://docs.scipy.org/doc/numpy/reference/ufuncs.html#broadcasting" rel="noreferrer">broadcasting</a> and <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.meshgrid.html" rel="noreferrer"><code>numpy.meshgrid</code></a> to get the results you want instead? I can't answer this since you didn't explain what you are going to use this code for. But maybe you can ask another question showing us more of your program.)</p>
    </div>