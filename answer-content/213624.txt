<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Congratulations on getting a react app to work.  That is no small feat.  Also nice use of static state and using a function to change state.</p>

<p>I recommend you read 
<a href="https://reactjs.org/docs/thinking-in-react.html" rel="nofollow noreferrer">thinking in react</a>.</p>

<p>Controls are the basic building blocks of a react application.  I recommend creating many small controls and composing them into a larger control.  You have one monolithic control that is difficult to change and reason about.  </p>

<p>Here is your code with some sub-components:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const HeaderTypeographyRoot = ({ children, classes }) =&gt; (
  &lt;Typography
    className={classes["list-container__headertxt"]}
    variant="subtitle2"
    gutterBottom
  &gt;
    {children}
  &lt;/Typography&gt;
);
const HeaderTypeography = withStyles(styles)(HeaderTypeographyRoot);

const mapLinks = (navigationObj, className) =&gt; linkName =&gt; (
  &lt;Link key={linkName} href={navigationObj[linkName]}&gt;
    &lt;ListItem button className={className}&gt;
      &lt;HeaderTypeography&gt;{linkName}&lt;/HeaderTypeography&gt;
    &lt;/ListItem&gt;
  &lt;/Link&gt;
);
const Links = ({ navigationObj, className }) =&gt; {
  const links = Object.keys(navigationObj).map(
    mapLinks(navigationObj, className)
  );
  return &lt;React.Fragment&gt;{links}&lt;/React.Fragment&gt;;
};
// put in seperate file
const SubheaderRoot = ({ classes }) =&gt; (
  &lt;ListSubheader
    className={classes["list-container__subheader"]}
    component="div"
  &gt;
    &lt;div className={classes["list-container__arrow-container"]}&gt;
      &lt;IconButton
        className={classes["list-container__arrowicon"]}
        aria-label="arrow"
      /&gt;
    &lt;/div&gt;
    &lt;Button
      className={classes["list-container__button"]}
      variant="contained"
      size="large"
      style={{
        color: "#2ec3d2"
      }}
    &gt;
      Download
    &lt;/Button&gt;
  &lt;/ListSubheader&gt;
);
const Subheader = withStyles(styles)(SubheaderRoot);

class ToggleColapse extends React.Component {
  state = {
    open: false
  };

  handleClick = () =&gt; {
    this.setState(state =&gt; ({ open: !state.open }));
  };

  render() {
    const { open } = this.state;
    const { children, name } = this.props;
    const icon = open ? "-" : "+";
    return (
      &lt;React.Fragment&gt;
        &lt;ListItem button onClick={this.handleClick}&gt;
          &lt;HeaderTypeography&gt;{name}&lt;/HeaderTypeography&gt;
          {icon}
        &lt;/ListItem&gt;
        &lt;Collapse in={open} timeout="auto" unmountOnExit&gt;
          &lt;List component="div" disablePadding&gt;
            {children}
          &lt;/List&gt;
        &lt;/Collapse&gt;
      &lt;/React.Fragment&gt;
    );
  }
}

class NavigationList extends React.Component {
  render() {
    const { classes } = this.props;
    return (
      &lt;div className={classes["list-container"]}&gt;
        &lt;List component="nav" subheader={&lt;Subheader /&gt;}&gt;
          &lt;Links
            navigationObj={{
              HOME: "/",
              "EXISTING CUSTOMER LOGIN": "https://somelink/",
              "ABOUT Us": "/aboutus",
              CAREERS: "/careers"
            }}
          /&gt;
          &lt;ToggleColapse name="Products"&gt;
            &lt;Links
              className={classes["list-container__nested"]}
              navigationObj={{
                "INSTANT CASH": "/",
                "SHOP ON AMAZON": "https://somelink/",
                "SHOP AT BIG BAZAAR": "/bigbazaar",
                "SCHOOL FEES ": "https://somelink/"
              }}
            /&gt;
          &lt;/ToggleColapse&gt;
          &lt;Links
            navigationObj={{
              BLOGS: "https://somelink/",
              NEWS: "https://somelink",
              FAQS: "/faqs",
              "START YOUR APPLICATION": "https://somelink/"
            }}
          /&gt;
        &lt;/List&gt;
      &lt;/div&gt;
    );
  }
}
NavigationList.propTypes = {
  classes: PropTypes.object.isRequired
};
export default withStyles(styles)(NavigationList);</code></pre>
</div>
</div>


<p><a href="https://codesandbox.io/s/48pvr41l39" rel="nofollow noreferrer"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit navigation-drawer-code-review"></a></p>

<p>Notice a few things:</p>

<p>I make use of the withStyles higher order function so you don't have to pass so many className parameters around.</p>

<p>getNestedLinks  and getNaviationLinks are almost the same thing 
I made them into one reusable control (Links).  Nested links are the same but are indented.  This is done by passing in a className property.</p>

<p>Step 4 in thinking in react is: Identify Where Your State Should Live
I think it would be better for the is open state to live in the new 'ToggleColapse' control.  That way if you wanted a second collapse / nested menu item, you can simply reuse this control.   </p>

<p>Next you need to ask, how likely are the links to change, if they are static, favor using static content and don't loop over (getNavigationLinks).</p>

<p>If they are likely to change, separate the values (navigationObj) out of your control.  This will make your control easier to understand and if you need to change them, you won't have to hunt through your code.</p>

<p>If you get stuck on this, please ask.   </p>
    </div>