<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can make a separate function, which takes a string and returns the two new strings. This simplifies the code by getting rid of nested loops, 2d arrays, and resetting temporary variables.</p>

<pre><code>function processData(input) {
  let words = input.split('\n').slice(1).map(splitString);
  //This just prints the result in the specified format
  words.forEach(e =&gt; console.log(e.join(' ')));
}
</code></pre>

<p>The new <code>splitString</code> function can also be simplified. You can just use <code>else</code> instead of <code>if else</code>, since it's always true when the first condition is false. There is also no reason to check for the end of the array, since the loop will end when this happens. You don't even have to split the string into an array, since characters in a string for be accessed like array indexes and the both have the <code>.length</code> property.</p>

<pre><code>function splitString(str) {
  let even = '';
  let odd = '';

  for(let i = 0; i &lt; str.length; i++) {
    if(i%2 === 0) {
        even += str[i];
    }
    else {
        odd += str[i];
    }
  }

  return [even, odd];
}
</code></pre>

<p>You can make this function even shorter if you use some of the built-in array functions, like <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" rel="nofollow noreferrer">filter</a> or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce" rel="nofollow noreferrer">reduce</a>.</p>
    </div>