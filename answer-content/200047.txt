<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>The approach, algorithm</h3>

<p>To find if an object exists in a list, you need to perform a linear search,
potentially visiting every single element, in \$O(n)\$ time.
More efficient data structures exist:</p>

<ul>
<li><p>Use an <em>ordered</em> data structure: if the values are sorted, then you can find if an element exists using binary search, in \$O(\log n)\$ time.</p></li>
<li><p>Use a <em>hashset</em>: you can find if an element is in the set in constant time, \$O(1)\$</p></li>
</ul>

<p>To be to search efficiently, use a hashset instead of a list.
However, to be able to use a hashset efficiently,
it is required that the objects you put in it have appropriate implementation of <code>hashCode</code> and <code>equals</code> methods.</p>

<p>See the <a href="https://docs.oracle.com/javase/tutorial/java/IandI/objectclass.html" rel="nofollow noreferrer">official tutorial on the <code>Object</code> class</a>,
especially the sections on the <code>equals</code> and <code>hashCode</code> methods.
Note that IDEs like IntelliJ and Eclipse can generate these methods for you easily (they are boring to write by hand, and usually there's little reason to do so).</p>

<p>With correct implementation of the <code>equals</code> and <code>hashCode</code> methods,
for example as in the other <a href="https://codereview.stackexchange.com/a/199990/12390">answer</a> by @Teddy,
your main program could be reduced to this:</p>

<pre><code>public static void main(String[] args) {

    Set&lt;Person&gt; originalPeople = new HashSet&lt;&gt;();
    Set&lt;Person&gt; newPeople = new HashSet&lt;&gt;();

    originalPeople.add(new Person("William", "Tyndale"));
    originalPeople.add(new Person("Jonathan", "Edwards"));
    originalPeople.add(new Person("Martin", "Luther"));

    newPeople.add(new Person("Jonathan", "Edwards"));
    newPeople.add(new Person("James", "Tyndale"));
    newPeople.add(new Person("Roger", "Moore"));

    for (Person original : originalPeople) {
        if (!newPeople.contains(original)) {
            System.out.printf("%s %s is not in the new list!%n",
                    original.getFirstName(), original.getLastName());
        }
    }
}
</code></pre>
    </div>