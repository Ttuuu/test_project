<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Everything looks quite neat. Here are a few comments.</p>

<pre><code>    query = "SELECT "
    l = len(keys) - 1
    for i, key in enumerate(keys):
        query += "`"+key+"`"
        if i &lt; l:
            query += ","
    query += " FROM %s" % table
</code></pre>

<p>can be rewritten :</p>

<pre><code>query =  "SELECT `" + "`,`".join(keys) + "` FROM " + table
</code></pre>

<p>(I know that string concatenation might not be the best but it's just to join how you could use join to do what you want to do). The same kind of argument would hold for <code>update</code>.</p>

<p>In <code>select</code> and in <code>call_store_procedure</code>, is this :</p>

<pre><code>    for result in self.__session.stored_results():
        result = result.fetchall()
</code></pre>

<p>any better than :</p>

<pre><code>    for result in self.__session.stored_results():
        result.fetchall()
</code></pre>

<p>?</p>

<p>Also, just some food for thought as I haven't studied the issue in depth : how do you handle parameters that don't need to be in quotes such as numbers ?</p>
    </div>