<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>After encountering a huge memory leak (14GB of memory usage after 24 hrs of new <code>ISession</code>, each one created once the WS was called) with this approach we came to an extended answer to this, the thing is this is due to our <code>UnitOfWork</code> and <code>Repository</code> implementation we used to open the session once the object was created, with this new approach we rely on a singleton <code>IUnitOfWork</code> and open the session by request. </p>

<p><strong>Startup.cs</strong></p>

<pre><code> services.AddSingleton&lt;IUnitOfWork, UnitOfWorkV&gt;(x =&gt; { return new UnitOfWorkV(Configuration.GetSection("ConnectionStrings:ConexionV").Value); });
</code></pre>

<p>We changed <code>.AddScoped()</code> to <code>.AddSingleton()</code></p>

<p><strong>UnitOfWorkV.cs</strong></p>

<pre><code>public UnitOfWorkVentas(string conexion)
        {
            // SE CREA EL SESSION FACTORY DE LA UNIDAD DE TRABAJO...
            _sessionFactory = Fluently.Configure()
                //Obtenemos la cadena de conexion del IConfiguration
                .Database(MsSqlConfiguration.MsSql2008.ConnectionString(conexion))
                .ExposeConfiguration(ConfigureNhibernateValidator)
                .Mappings(m =&gt;
                {
                    m.FluentMappings.AddFromAssembly(Assembly.GetExecutingAssembly());
                    m.HbmMappings.AddFromAssemblyOf&lt;JobQueue&gt;();
                })
                .BuildSessionFactory();
            //Creamos la Session

        }
</code></pre>

<p>Create a session from a connection string received in the constructor (Thanks for the recommendation of @Nkosi ).</p>

<pre><code>public void OpenSession()
{
    Session = _sessionFactory.OpenSession();
    Session.FlushMode = FlushMode.Auto;
}
</code></pre>

<p>Create an <code>OpenSession()</code> method in our <code>UnitOfWork</code> class</p>

<p><strong>RepositoryV.cs</strong></p>

<pre><code>public RepositoryVentas(IUnitOfWork unitOfWork)
{
    _unitOfWork = (UnitOfWorkVentas)unitOfWork;
    _unitOfWork.AbrirSesion();
}
</code></pre>

<p>Open the Session in the Repository constructor</p>
    </div>