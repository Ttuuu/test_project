<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1><code>self</code></h1>

<p>Why put this method on a class? the lack of use of <code>self</code> in the method should act as a flag</p>

<h1>string result</h1>

<p>you format the mismatch as a string (<code>f"df1:{val}, df2: {df2.dtypes[key]}"</code>). This way you can not do anything about it any more. Better would be to use a tuple or dict here</p>

<h1>generator</h1>

<p>generally, when I see</p>

<pre><code>def method():
    result = {}
    for key in ...:
        result[key] = ...
    return key
</code></pre>

<p>it is more clear to work with a generator</p>

<pre><code>def method():
    for key in ...:
        yield key, ...
</code></pre>

<p>If the user of the method needs a <code>dict</code>, he can do <code>dict(method())</code>. If he wants to iterate over the items, there is no need to instantiate the dict</p>

<h1>alternative approach</h1>

<p>you can use <code>set</code>s to see which types are different:</p>

<pre><code>def get_mismatched_dtypes(df1, df2):
    df1_types = set(df1.dtypes.items())
    df2_types = set(df2.dtypes.items())
    for column_name, df1_type in df1_types - df2_types:
        yield column_name, (df1_type, df2.dtypes[column_name])



df1 = pd.DataFrame({"col1": [1, 2, 3], "col2": [4, 5, 6]}, index=list(range(3)))
df2 = pd.DataFrame({"col1": list("abc"), "col2": [4, 5, 6]}, index=list(range(3,6)))
dict(get_mismatched_dtypes(df1, df2))
</code></pre>

<blockquote>
<pre><code>{'col1': (dtype('int64'), dtype('O'))}
</code></pre>
</blockquote>

<p>for clarification: <code>df1_types - df2_types</code> is <code>{('col1', dtype('int64'))}</code></p>

<p>If you want it formatted like in your code:</p>

<pre><code>{
    column_name: f"df1: {df1_type}, df2: {df2_type}"
    for column_name, (df1_type, df2_type) in get_mismatched_dtypes(df1, df2)
}
</code></pre>

<blockquote>
<pre><code>{'col1': 'df1: int64, df2: object'}
</code></pre>
</blockquote>
    </div>