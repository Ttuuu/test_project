<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You don't really mention what are the values used for. You'll always have a tradeoff between speed and memory (in this case memory amounts to how many digits you have).</p>

<p>Some issues with your code:</p>

<p>1) You're casting your <code>decimal.Decimal(line[0])</code> as <code>float</code>, that should negate the advantage of using <code>Decimal</code>. And this might be a reason why you see the unexpected inconsistency. You have two options (in my opinion), you drop the use of numpy in favor of <code>array</code> from the standard library or you drop the pretense of using <code>Decimal</code> and use a pure numpy solution. But this will depend on what exactly you're doing.</p>

<p>2) Looping over the CSV Reader is a way to read out the data, but numpy implements better ways to load a csv. See the last example in the documentation <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.loadtxt.html#numpy.loadtxt" rel="nofollow noreferrer">here</a>.</p>

<p>Thus, in the end the question back is, what for do you want the numbers to be a accurate as possible? Keep in mind that the values in the file are already "wrong" as they most likely come already from a float type, so in my opinion, you don't gain anything by using <code>Decimal</code> in this case. A different scenario would be if the values are integers and then in your program you're doing some divisions or multiplications, in that case, you have from the beginning control of the floating-point values and then using <code>Decimal</code> might be what you want to do.</p>

<p>Keep in mind, that highly sophisticated scientific research and their calculations use 64-bit floats and they do just fine.</p>
    </div>