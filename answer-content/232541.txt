<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A big inefficiency of the initial approach is that for each <code>person</code> (which is actually a <em>person's name</em>) <code>messages</code> collection will be traversed <strong>4</strong> times.</p>

<p>To significantly optimize the traversal algorithm the current one is substituted with a <strong><em>single</em></strong> loop with multiple conditions per iteration.<br>
All the needed specific <em>counts</em> are declared beforehand and used as <em>accumulators</em>.<br>The <em>Consolidate conditional expression</em> technique is applied based on a common condition <code>m.sender_name === personName</code>.</p>

<p>The final optimized version:</p>

<pre><code>people.forEach((personName) =&gt; {
    let stat = {'name': personName, 'messageCount': 0, 'photoMessageCount': 0, 
               'videoGifMessageCount': 0, 'audioMessageCount': 0};
    messages.forEach((m) =&gt; {
        if (m.sender_name === personName) { 
            stat.messageCount++;
            if (m.photos) stat.photoMessageCount++;
            if (m.gifs || m.videos) stat.videoGifMessageCount++;
            if (m.audio_files) stat.audioMessageCount++;
        }
    });
    stat.richContentMessageCount = stat.photoMessageCount + stat.videoGifMessageCount 
                                   + stat.audioMessageCount;
    stats.push(stat);
});
</code></pre>

<hr>

<p>In case if your <code>stats</code> array is intended to be used only for accumulating statistics from <code>people.forEach(...)</code> iterated once - prefer <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" rel="nofollow noreferrer"><code>Array.map</code></a> approach to create <code>stats</code> array with the results at once:</p>

<pre><code>let stats = people.map((personName) =&gt; {
    let stat = {'name': personName, 'messageCount': 0, 'photoMessageCount': 0, 
               'videoGifMessageCount': 0, 'audioMessageCount': 0};
    // all the logic here
    // ...
    return stat;
});
</code></pre>
    </div>