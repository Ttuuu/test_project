<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>While I wouldn't say your code is inefficiently styled, you can definitely improve the performance of your components.</p>

<p>React performs in a tree format, when a component updates, all their children will attempt to update and potentially re-render. This is part of what React calls the <a href="https://reactjs.org/docs/reconciliation.html" rel="nofollow noreferrer">Reconciliation process</a>.</p>

<p>There is a function you can add to your component classes called <code>componentShouldUpdate</code>, which comes with parameters <code>(nextProps, nextState)</code>. The idea of this function is to decide whether the component needs to re-render.  You can find some more information on this property <a href="https://reactjs.org/docs/react-component.html#shouldcomponentupdate" rel="nofollow noreferrer">here</a>.</p>

<p>For example, if you were to hover and change the colour of one of the markers, the entire list of markers rerenders, but, you can make a check to see whether the specific marker is the one you want to color and so needs to be updated.</p>

<p>These kinds of stops on rerendering means as high as possible in your render trees means you can get the most performance gains.</p>

<pre><code>shouldComponentUpdate(nextProps) { // inside MapMarker.js
    const { props } = this;
    return props.hoveredCardId !== nextProps.hoveredCardId
      || nextProps.hoveredCardId !== props.pageid;
}
</code></pre>
    </div>