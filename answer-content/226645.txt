<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I find you should keep the library code in the model and only parts that are relevant to views inside them.</p>

<hr>

<p>In your case there is actually a third option. Let <code>OnGet</code> only handle the file. Remove <code>OrderBy</code> as this is a view's matter how it's displayed. Additionally initialize <code>itemListReportages</code> to an empty list if a file was empty. It'll save you the trouble of <code>null</code> checks later.</p>

<pre><code>public void OnGet()
{
    PageSettings = (PagesSettings)HttpContext.Items["pagesettings"];

    if (PageSettings == null)
    {
        return;
    }

    var fileContent = _fileService.GetFileContentCached(PageSettings.DataFile);

    itemListReportages = 
        fileContent?.Length &gt; 0
            ? JsonConvert.DeserializeObject&lt;List&lt;Reportage&gt;&gt;(fileContent).Where(l =&gt; l.Published).ToList()
            : new List&lt;Reportage&gt;();
}
</code></pre>

<p>We don't see whether you initialize <code>itemListReportages</code> but this view could crash because you don't use the null propagation operator here: <code>?.Count</code></p>

<blockquote>
<pre><code>@for (var i = 0; i &lt; Model.itemListReportages.Count; i++)
{
    &lt;div class="item"&gt;
        &lt;div class="itembkg" style="background-image: url('@Model.itemListReportages[i].BkgImage');"&gt;&lt;/div&gt;
        &lt;div class="itemtxt"&gt;
            &lt;span&gt;@Model.itemListReportages[i].Text&lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;
}
</code></pre>
</blockquote>

<p>With a non-null list you can turn this into a <code>foreach</code> loop and put <code>OrderBy</code> here. It'll make the code shorter too as you now have an <code>item</code> variable and no longer have to acces them by index like <code>Model.itemListReportages[i]</code>:</p>

<pre><code>@foreach (var item in Model.itemListReportages.OrderBy(x =&gt; x.Name))
{
    &lt;div class="item"&gt;
        &lt;div class="itembkg" style="background-image: url('@item.BkgImage');"&gt;&lt;/div&gt;
        &lt;div class="itemtxt"&gt;
            &lt;span&gt;@item.Text&lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;
}
</code></pre>
    </div>