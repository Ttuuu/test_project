<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I gave it a quick glance the one thing that stood out is:</p>

<pre><code>LPCSTR GetFortniteConfiguration() {
    char *path;
    size_t length;
    _dupenv_s(&amp;path, &amp;length, "LOCALAPPDATA");
    std::string fortnite = "\\FortniteGame\\Saved\\Config\\WindowsClient\\GameUserSettings.ini";
    std::string fullpath = path + fortnite;
    free(path);

    return fullpath.c_str();
}
</code></pre>

<p>The variable <code>fullpath</code> is destroyed and the memory released when you leave the function, so the pointer you return is dangling and points to freed memory. It only works because that memory is not overwritten in the short time your program lives. Of course this is random and may result in "random crashes".</p>
    </div>