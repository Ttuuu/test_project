<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Lots of good code comments already given. I'll focus on non-code aspects.</p>

<p>Take this from a DevOps engineer that regularly troubleshoots complex, unfamiliar systems from logs under time pressure.</p>

<p>You want all logs to always be consistently formatted and to have timestamp and location (source file and line) by default, it looks like you request the date with format specifiers. You want context if it is available (e.g. request id). You want to easily print non-pod types as well and it looks like that is not possible with your design relying on <code>to_string()</code> which only accepts pods. Typically you'd use a design based on something that inherits from <code>std::ostream</code> so that your regular <code>operator&lt;&lt;(ostream&amp;, const T&amp;)</code> will work.</p>

<p>When I did this AGES ago, I used a custom buffer class that <em>tee'd</em> to a file and <code>cout</code> that I injected into <code>std::clog</code> using <a href="https://en.cppreference.com/w/cpp/io/basic_ios/rdbuf" rel="noreferrer">rdbuf(...)</a>and then created a set of macros to print location and time like: </p>

<pre><code> #define ERROR std::clog&lt;&lt;date_time_now()&lt;&lt;", status=ERROR ("&lt;&lt;__FILE__&lt;&lt;":"&lt;&lt;__LINE__&lt;&lt;"): "

 ERROR &lt;&lt; "Honey, I shrunk the kids! " &lt;&lt; m_kids &lt;&lt; std::endl;
</code></pre>

<p>Macros are the devil but also the only way of getting line number and file name automatically into the log line. Unless there is some new hotness in c++17/2x i don't know off.</p>

<p>Please excuse the brevity and lack of formatting, I'm typing this on a phone.</p>
    </div>