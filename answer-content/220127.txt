<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Not linked directly to your question but here are some things I would change:</p>

<p>I'd name my tables slightly different: <code>Author</code>, <code>Book</code> and then <code>AuthorsBooks</code>. And the ID column of each of the two main tables would be <code>AuthorId</code> and <code>BookId</code>. </p>

<p>Please note that this is highly debatable and perhaps even just a matter of personal prefference, if you do a search here and stackoverflow you'll see what I mean.</p>

<p>From my point of view a datatable represents a definition of a single entity (Author), the rows inside then represent many of those entities.</p>

<p>ID column naming <code>AuthorId</code> and <code>BookId</code> is more of a DB thing where SQL statements become more readable in JOIN scenarios, if you do a join on these two tables then you must alias the columns in results (<code>Author.Id As AuthorId</code> and <code>Book.Id As BookId</code>) because SQL doesn't allow column results with same names in complex statements.</p>

<p>The many-to-many table doesn't need an ID column. You generally need and ID column if you plan on deleting/updating or referencing rows. In a many-to-many link table you're suppose to have only one combination of AuthorId and BookId so there's no need for deletions and updates also referencing by row ID is not needed in this table.</p>
    </div>