<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This code is very clean, and I believe that it is a very useful tool for any JavaScript developer.</p>

<hr>

<p>This is not very efficient:</p>

<pre><code>&lt;body onload="document.getElementById('refreshButton').click()"&gt;
</code></pre>

<p>Why? Well, think about what your code has to do:</p>

<ol>
<li><p>Locate <code>refreshButton</code>.</p></li>
<li><p>Wait for <code>refreshButton</code> to load.</p></li>
<li><p>Find its <code>onclick</code> method and call it.</p></li>
</ol>

<p>Sure, this isn't terribly inefficient, but it can be made simpler.</p>

<p>I see what you are trying to do by not having the HTML code memorize anything; everything is handled in references which all boils down to a few elements.</p>

<p>While this is nice, it would be much more efficient if you called <code>refreshButton'</code>s <code>onclick</code> method itself. So, you would just call <code>loadScript</code>:</p>

<pre><code>&lt;body onload="loadScript('sandbox.js')"&gt;
</code></pre>

<hr>

<p>This:</p>

<pre><code>if(js !== null)
</code></pre>

<p>Can be reduced to this:</p>

<pre><code>if(js)
</code></pre>

<p>I think the way I wrote it is better, because the way I read your code is like this:</p>

<blockquote>
  <p>If the functions that JS is loaded with returned null...</p>
</blockquote>

<p>And I read what I wrote as:</p>

<blockquote>
  <p>If JS exists...</p>
</blockquote>

<p>This may just be me, however.</p>

<p>The reason why you can make this change is because, in JavaScript, <code>null</code> is a falsey value and therefore can be treated as though it were false.</p>

<hr>

<p>Be careful with that <code>runButton</code> button. If the user acts too fast by quickly reloading the script and then trying to run it, there could be some problems; what if the script has not loaded yet?</p>

<p>Rather than silently failing and leaving a non-technically inclined user dumbfounded, it would be better to notify the user of problem (and prevent failing due to an attempt at trying to run a currently non-existent function).</p>

<p>Read <a href="//stackoverflow.com/q/9521298/3424096">this StackOverflow post</a> for some ways you could check if the script has loaded.</p>

<p>In your case, you already have your work laid out for you: the <code>sandbox.js</code> source file creates a global <code>sandbox</code> function that you try to call.</p>

<p>Therefore, you can write this to make sure that the script has loaded:</p>

<pre><code>if(typeof sandbox !== "undefined") {
    sandbox();
} else {
    window.alert("The script has not been loaded yet!");
}
</code></pre>

<hr>

<p>In response to this comment:</p>

<blockquote>
  <p>"append the newly-created script element to the head": I'm following
  the JS book I'm studying from (I'm a neophyte at JS and the DOM,
  coming from C++). In fact, JS may not necessarily be best in head.
  (//stackoverflow.com/q/10994335)</p>
</blockquote>

<p><em>This is a different response to that comment.</em></p>

<p>It doesn't matter where you put the scripts now that the browser has already fully loaded. The browser is not going to stop again and load the code (even if it did, that would be good (referencing to my response comment)).</p>
    </div>