<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Few observations:</p>

<ul>
<li><p>Long comments stating mostly obvious but completely ommits for example information about the <code>hashtable_insert_entry</code> takes ownership of the <code>value</code>, but it makes it's own copy of the <code>key</code>. And you've got memory leak in your test program because of it.
It's noted for <code>ft_entry_create</code>, but it's little bit hidden. <br><br>
Making the copy of key is fine, it can be local string, or even some internal static buffer (many standard functions without reentrancy support has it), or constant. None of those should be freed.<br><br>
Freeing the <code>value</code> poointer, that is the question. For example in the C++ none of the STL containers are releasing raw pointers. 
<br></p></li>
<li><p>Those comments should be in header file. Usual scenario is you'll get header and precompiled library (if it's not the open source).</p></li>
<li><p>Reimplementing wheel? Why do you need the own dup, strlen and so on? </p></li>
<li><p>The prime number computation - so many "optimizations" and then you are using that weird condition inside loop with the <code>result</code>. You can bet the <code>int nb</code> never will be more than that constant, therefore you cant get i*i biger than that (well, you can, but it'll never get into the loop, as it fails condition <code>i*i &lt; nb</code>). Not to mention something like INT_MAX would be much better than magically loking <code>2147483647</code>.</p></li>
<li><p>Dependency on <code>HASHCODE</code> macro? But nothing about it's dependency on <code>hash</code> function. </p></li>
</ul>
    </div>