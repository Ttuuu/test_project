<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Code Beautification is suggestive. This is how I would write your code. There is also a possible performance optimization by only calling <code>super.getItemCount()</code> once.</p>

<ul>
<li>be consistent with parentheses (I'm using a different rule for methods and conditions, but feel free to use your own preference as long as you are consistent)</li>
<li>create one variable to store the item count</li>
<li>get the item count you would like to return from the base class</li>
<li>determine predicate from the perspective of either

<ul>
<li>(A) the edge case value of item count, when <code>itemCount == 0</code>; an inner condition is used to determine the new value</li>
<li>(B) the combined condition that yields a different result <code>itemCount == 0 &amp;&amp; data != null</code></li>
</ul></li>
</ul>

<p>snippet A</p>

<pre><code>@Override
    public int getItemCount() {
        int itemCount = super.getItemCount();
        if (itemCount == 0) 
        {
            itemCount = data != null ? 1 : 0;
        }
        return itemCount;
    }
</code></pre>

<p>snippet B  </p>

<pre><code>@Override
    public int getItemCount() {
        int itemCount = super.getItemCount();
        if (itemCount == 0 &amp;&amp; data != null) 
        {
            itemCount = 1;
        }
        return itemCount;
    }
</code></pre>
    </div>