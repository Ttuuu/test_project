<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Manually listing the numbers from 0 to 7 is a bad sign; I would definitely consider your first method more readable.</p>

<p>Have you considered using an array(-like) of booleans instead of a set, though?</p>

<pre><code>// given array&lt;bool, 8&gt; used;
auto const it = std::find(used.cbegin() + col, used.cend(), false);

if (it == used.cend())
    return false;

col = std::distance(used.cbegin(), it);
</code></pre>

<p>It should be faster, too, with no downside that I can think of (since your set and array capacity will be the same).</p>

<p>Then there’s the possibility that the overall code can be structured so you only need an iterator and never an index (except to produce results)…</p>

<p>Alternatively, it still makes the first method simpler.</p>

<pre><code>for (; col &lt; 8; ++col)
    if (!used[col])
        break;

if (col == 8)
    return false;
</code></pre>

<p>or</p>

<pre><code>while (used[col])
    if (++col == 8)
        return false;
</code></pre>
    </div>