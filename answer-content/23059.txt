<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A better exercise/code snippet to demonstrate the usefulness of an interface would be something like:</p>

<pre><code>static void PrintAnimal(IAnimal animal)
{
    Console.WriteLine(animal.Cry());
}

static void Main(string[] args)
{
    IAnimal dog = new Dog();
    IAnimal cat = new Cat();
    PrintAnimal(dog);
    PrintAnimal(cat);

    Console.ReadKey();
}
</code></pre>

<p>The client expecting the interface (<code>IAnimal</code>) only cares about that interface and not the specific implementation (<code>Dog</code>, <code>Cat</code>, etc). Therefore you could have the <code>PrintAnimal</code> method (maybe class at some point) handle any kind of animal you may happen to want in the future.  Your example would work whether you had an interface or not.</p>
    </div>