<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This code is broken.</p>

<p>Imagine an <code>Account</code> with $100, two threads, one depositing $1, the other withdrawing $50.</p>

<p>Thread one acquired <code>lock1</code>, and begins executing:</p>

<pre><code>this.balance = getBalance() + amount;
</code></pre>

<p>and reads $100 ...</p>

<p>Thread two acquired <code>lock2</code>, reads the balance (still $100), subtracts $50, stores the new balance ($50) and releases <code>lock2</code>.</p>

<p>... (back to thread one) ... adds $1, for a total of $101, which it stores in <code>balance</code>.</p>

<p>Free money!  The withdrawal of $50 was forgotten. </p>

<p>You must lock all read-modify-write operations of an object's member with the same lock.  </p>
    </div>