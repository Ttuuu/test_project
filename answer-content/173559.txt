<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Gathering statistics</h3>

<p>The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/DoubleSummaryStatistics.html" rel="nofollow noreferrer"><code>DoubleSummaryStatisticsClass</code></a> class will be a perfect replacement for your bespoke <code>Statistics</code> class, seeing how it has everything you need. That beats having to <code>stream()</code> multiple times.</p>

<h3>Using more method references</h3>

<p>You have demonstrated good usage of some method references already, but I can't help but feel you missed out one more, to use <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-" rel="nofollow noreferrer"><code>Comparator.comparing(Function)</code></a>:</p>

<pre><code>// Comparator&lt;Transaction&gt; comparator = new TransactionTimestampComparator();
Comparator&lt;Transaction&gt; comparator = Comparator.comparing(Transaction::getTimestamp);
</code></pre>

<h3><code>boolean</code> logic</h3>

<p>In <code>PastValidator.isValid(Long, ConstraintValidatorContext)</code>, you can just short-circuit the <code>return</code> statement:</p>

<pre><code>@Override
public boolean isValid(Long value, ConstraintValidatorContext context) {
    return value == null || value &lt; currentTimeMillis();
}
</code></pre>
    </div>