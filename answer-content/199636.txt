<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Wouldn't it be easier to just use:</p>
<pre class="lang-java prettyprint-override"><code>public static class IntArrayProcessor {

    private Integer[] arr;

    public IntArrayProcessor(Integer[] arr) {
        this.arr = arr;
    }

    public Integer[] unique() {
        final Set&lt;Integer&gt; uniqueSet = new HashSet&lt;Integer&gt;(Arrays.asList(this.arr));
        return uniqueSet.toArray(new Integer[uniqueSet.size()]);
    }
}
</code></pre>
<p>I changed the method name from <code>getSet()</code> to the more descriptive <code>unique()</code>.</p>
<p>This simply generates a hash set, which contains only the unique values of the array. The hash set (<code>uniqueSet</code>) is then converted from <code>Set</code> to <code>Integer[]</code>, and returned.</p>
<p>Given that this is using built-in methods and objects, it would likely be faster than most custom implementations.</p>
<p>Notice that <code>HashSet</code>:</p>
<blockquote>
<p>makes no guarantees as to the insertion order of the set; in particular it does not guarantee that the order will remain constant over time.</p>
<p>â€” <a href="https://docs.oracle.com/javase/10/docs/api/index.html?java/util/HashSet.html" rel="nofollow noreferrer"><em><code>HashSet</code> documentation</em></a></p>
</blockquote>
<p>If you need to keep insertion order, use <code>LinkedHashSet</code> as suggested in @mrblewog's comment. If you want to have the internal <code>Set</code> sorted, use <code>SortedSet</code> or <code>TreeSet</code>.</p>
<p>I also changed <code>int[]</code> to <code>Integer[]</code> so that it can be used with generics (generics do not support primitive types).</p>
    </div>