<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't see anything wrong so just a few shots in the dark:</p>

<p>Are there any "hidden" data-driven automations like worksheet_change or whatever?</p>

<p>You may disable event handling and a few more time comsuming services for the course of processing. Take a look at this: <a href="https://codereview.stackexchange.com/questions/234904/changing-the-formatting-of-sheets/235074?noredirect=1#comment459911_235074">Speed up App</a></p>

<p>I would not apply copying validations and formats and whatever on all the 16K cells in the entire row. It's OK to manage a dynamically changing number of columns but I'd rather maximize the number of columns with calculating the exact number of used columns (more hassle) or simply setting it to say 100 if you'd never have more than 80 (quick and dirty). </p>

<p>Checking a string for zero length it is somewhat faster to use</p>

<pre><code>If LenB(AddTask.Controls(Ctrl).Value) &lt;&gt; 0 ...
</code></pre>

<p>instead of </p>

<pre><code>If AddTask.Controls(Ctrl).Value &lt;&gt; "" ...
</code></pre>

<p>for it does not invoke string comparision function but checks a single byte in the string header. </p>

<p>+1: For manipulating formulas run-time I prefer using <code>.Cells</code> this way</p>

<pre><code>subtaskws.FormulaLocal="=sum(" &amp; Range(CElls(newrow, "AF"), Cells(newrow, lastcollet)).Address &amp; ")"
</code></pre>

<p>for it is more handy than bothering with string concatenations to make cell references. 
See also <code>.FormulaLocal</code> and <code>.Address(False, False)</code></p>
    </div>