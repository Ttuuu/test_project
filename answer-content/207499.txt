<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Presuming that the format will be consistent, you could remove one <code>foreach</code> loop and extract the domain to use as the key of the merged array, and also only either set the sub array (with keys <code>X1</code>, <code>Y1</code> and <code>Y2</code>) or add to the sub array items. </p>

<pre class="lang-php prettyprint-override"><code>foreach($array as $subArray) {
    if (isset($subArray['INFO']) &amp;&amp; isset($subArray['INFO']['DOMAIN'])) {
        $domainKey = $subArray['INFO']['DOMAIN'];
        if (!isset($merged[$domainKey])) {
            $merged[$domainKey] = $subArray;
        }
        else { // could add conditionals to ensure X1 is set on $subArray
            foreach($subArray['X1'] as $key =&gt; $value) {
                $merged[$domainKey]['X1'][$key] += $value;
            }
        }
    }
}
</code></pre>

<p><a href="https://www.tehplayground.com/kl3Knb5V4kDawhMD" rel="nofollow noreferrer">See it in action in this playground example</a>.</p>

<p>A functional approach could also be employed by using <a href="http://php.net/array_reduce" rel="nofollow noreferrer"><code>array_reduce()</code></a>:</p>

<pre class="lang-php prettyprint-override"><code>$merged = array_reduce($array, function($cumulative, $subArray) {
    if (isset($subArray['INFO']) &amp;&amp; isset($subArray['INFO']['DOMAIN'])) {
        $domainKey = $subArray['INFO']['DOMAIN'];
        if (!isset($cumulative[$domainKey])) {
            $cumulative[$domainKey] = $subArray;
        }
        else { // could add conditionals to ensure X1 is set on $subArray
            foreach($subArray['X1'] as $key =&gt; $value) {
                $cumulative[$domainKey]['X1'][$key] += $value;
            }
        }
    }
    return $cumulative;
}, []);
</code></pre>

<p><a href="https://www.tehplayground.com/PPyy4h1EL8KEv6Ro" rel="nofollow noreferrer">See it in action in this playground example</a></p>
    </div>