<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring" rel="nofollow noreferrer">Document your code. In the code</a>: while<br>
 <code>quick_sort(arr)</code> is telling to an extent (<em>sort into (ascending "natural") order (between pairs of <code>arr</code>'s elements), additional space no worse than proportional to input size, processing time no worse than proportional to its square</em>),<br>
 <code>arr</code> isn't: what, in Python, is an array? The way <code>arr</code> is used, any <a href="https://docs.python.org/3/glossary.html#term-sequence" rel="nofollow noreferrer">sequence</a> would do nicely -<br>
  for lack of a useful docstring, I'd have to inspect the code to find out.<br>
And does <code>quick_sort(arr)</code> keep the relative order of <em>equal</em> items?<br>
Does it return something useful? What, exactly?<br>
Does it sort <em>in place</em>? (Modify <code>arr</code> (if not ordered) (most implementations of <em>quicksort</em> do), use additional space negligible compared to <code>arr</code>'s size)  </p>

<ul>
<li><strong><em>Keep promises</em></strong>, explicit or implied<br>
For all I can see, your code uses additional space proportional to the square of <code>length</code>, worst case: <em>not tolerable</em> for a "production" implementation</li>
</ul>

<p>While it is feasible to prevent disadvantageous splits via pivot choice, it is much simpler to <a href="https://en.m.wikipedia.org/wiki/Quicksort#Optimizations" rel="nofollow noreferrer">reduce ill effects on space requirements using recursion for the non-larger partition, only, and iterating on the non-smaller one</a>.</p>
    </div>