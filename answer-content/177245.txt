<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The biggest thing you can do is to use string formatting to remove redundancy. Now instead of having to repeatedly type <code>"1 for Coke 2 for Tango Cherry 3 for Dr Pepper:</code>, you factor out the common parts, put the foods in a list, and use that list to populate the string. I also removed your first assignment to item, (ie <code>item = "Gum"</code>) for each, because they immediately get removed. Finally, all three circumstances can be combined by indexing into a list of lists.</p>

<pre><code>format_string = "1 for {0} 2 for {1} 3 for {2}:"

items = [["Diary Milk", "Maltesars", "Kit kat"],
         ["Airwaves","Extra Pepermint","Wriggley's Summer fruit"],
         ["Coke", "Tango Cherry", "Dr Pepper"]]

print(format_string.format(*items[selection - 1]))
new_selection = int(input("Please enter your option:"))
item = items[selection - 1][new_selection - 1]
itemValue += 1
</code></pre>

<p>Taken together, this reduces your code from 50 lines, to 10.</p>
    </div>