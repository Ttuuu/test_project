<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Separate responsibilities cleanly</h3>

<p>Which function's responsibility is it to parse the input?
In the posted code this is shared by <code>main</code> and <code>printNextNumber</code>.
<code>main</code> parses the number of test cases and loops over them,
and lets <code>printNextNumber</code> parse the individual test cases.</p>

<p>It's confusing when a clear responsibility is split among multiple functions,
each doing only part of it.
Why? These functions share objects and state (<code>scanner</code>),
therefore while working on any of these functions,
you have to keep in mind what impact the changes may have on the other.
This is really too much of a mental burden,
it would be a lot easier if you could focus your attention on function, without worrying about another.</p>

<p>The parsing of the input would have been better all in <code>main</code>.
Especially when I look at a function named <code>printNextNumber</code>,
I don't expect any parsing to happen there, only printing.</p>

<h3>Adding reversed numbers</h3>

<p>Why are the numbers reversed? What's the point?
Is the goal really to reverse numbers so you could add them and then reverse the result? Maybe it is, but I doubt it.</p>

<p>Imagine if you had to add arbitrary large integers, so large that they don't fit in <code>int</code>, neither a <code>long</code>, for example <code>12345678901234567890</code> and <code>99999999999999999999999999</code>. How would you go about adding them?
How would you do it without a computer, only pen and paper?
You would start from the end, and work backwards.</p>

<p>In a program, if the numbers are given reversed as string, and you have to return them in reverse and as string, then it's actually quite convenient for performing the addition digit by digit, appending the added digits to a <code>StringBuilder</code>.
A solution is possible without reversing digits, and supporting arbitrarily large numbers. I suggest to try that way, as an exercise.
That is, implement this function:</p>

<pre><code>private static String addReversedNumbers(String firstNumber, String secondNumber) {
    // TODO
}
</code></pre>

<p>Which can be used by <code>main</code> as such:</p>

<pre><code>public static void main(String[] args) {
    try (final Scanner sc = new Scanner(System.in)) {
        final int numberOfCases = sc.nextInt();
        for (int i = 0; i &lt; numberOfCases; i++) {
            final String firstNumber = sc.next();
            final String secondNumber = sc.next();
            System.out.println(addReversedNumbers(firstNumber, secondNumber));
        }
    }
}
</code></pre>
    </div>