<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are 2 more ways to do this using <code>css</code> without the calculation. They are:</p>

<ul>
<li><h1><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning" rel="nofollow noreferrer">css positioning</a></h1>

Make the <em>position</em> of parent relative and child absolute. Now, using the slots value, left and right properties can be easily calculated for child div which will place it properly. The entire logic is reduces to the following without adding any additional elements:</li>
</ul>

<pre><code>const DivColoring = props =&gt; {
  let parentDivWidth = props.parentDivWidth;
  let totalSlots = props.totalSlots;
  let startSlot = props.startSlot;
  let endSlot = props.endSlot;
  return (
    &lt;div style={{ ...parentDivStyle, width: parentDivWidth + "px" }}&gt;
      &lt;div
        style={{
          ...childDivStyle,
          position: "absolute",
          left: `${((startSlot - 1) * 100) / totalSlots}%`,
          right: `${((totalSlots - endSlot) * 100) / totalSlots}%`
        }}
      /&gt;
    &lt;/div&gt;
  );
};
</code></pre>

<p>The entire code can be found here: <a href="https://stackblitz.com/edit/react-qj3xsp" rel="nofollow noreferrer">https://stackblitz.com/edit/react-qj3xsp</a></p>

<ul>
<li><h1><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex" rel="nofollow noreferrer">css flex</a></h1>

The <code>DivColoring</code> component can contain 3 child divs instead of one and you can use flex property to define relative width of the divs. The relative width can be easily calculated using totalSlots, startSlot and endSlot. The basic logic can be written as:</li>
</ul>

<pre><code>const DivColoring = props =&gt; {
  let totalSlots = props.totalSlots;
  let startSlot = props.startSlot;
  let endSlot = props.endSlot;
  let div3 = totalSlots - endSlot;
  let div2 = endSlot - startSlot + 1;
  let div1 = startSlot - 1;
  return (
    &lt;div style={{ ...parentDivStyle, width: props.parentDivWidth + "px" }}&gt;
      &lt;div id="" style={{ flex: div1 }} /&gt;
      &lt;div id="" style={{ ...childDivStyle, flex: div2 }} /&gt;
      &lt;div id="" style={{ flex: div3 }} /&gt;
    &lt;/div&gt;
  );
};
</code></pre>

<p>The complete code can be found here: <a href="https://stackblitz.com/edit/react-4mgl4c" rel="nofollow noreferrer">https://stackblitz.com/edit/react-4mgl4c</a>.<br>
You also need to apply some extra css. Pros are calculation is reduced but con is that DOM will become heavy. Instead of 1, now there are 3 divs for each block.</p>

<p>The recommended approach will be using <strong>css positioning</strong>.</p>

<p>Hope it helps. Revert for any doubts/clarifications.</p>
    </div>