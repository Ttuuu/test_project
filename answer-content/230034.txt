<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Variable Names</h1>

<p>Variables should be lower-cased and snake-case, meaning that multiple words should look like <code>some_variable</code>, not <code>someVariable</code> or <code>SomeVariable</code>. I think the name you've chosen for your regex is good and expresses exactly what it is:</p>

<pre class="lang-py prettyprint-override"><code>protocol_regex = re.compile(...)
</code></pre>

<h1>Checking length of a list/container data structure</h1>

<p>It is not considered pythonic to check the emptiness of a container in python by using <code>if len(container) == 0</code>, most* containers have a <code>__bool__</code> method built-in that allows you to do <code>if not container</code> for an empty one and <code>if container</code> for non-empty:</p>

<pre class="lang-py prettyprint-override"><code>from collections import deque

if not {}:
    print("empty dict")
empty dict

if not []:
    print("empty list")
empty list

if not '':
    print("empty string")
empty string

if not deque():
    print("empty deque")
empty deque

if ['result1']:
    print('non-empty list')
non-empty list
</code></pre>

<p>One of the few that does <em>not</em> behave this way is <a href="https://docs.python.org/3/library/queue.html" rel="nofollow noreferrer"><code>queue.Queue</code></a>, which I've included to give context to the <em>most</em> comment.</p>

<p>With this in mind, change your <code>match</code> check to:</p>

<pre class="lang-py prettyprint-override"><code>if matches:
    # rest of code
else:
    # else code here
</code></pre>
    </div>