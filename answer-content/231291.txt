<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Validation</h2>

<pre><code># validate params
window_size = int(round(window_size))
req_angles = int(round(req_angles))
window_step = int(round(window_size * (1 - overlap)))
</code></pre>

<p>This does... some validation, but not a lot. It will validate that the arguments are numeric, but nothing else. If you cared about validation, you should probably also check ranges, especially that the window size and step are non-negative, etc.</p>

<h2>Numpy vectorized conditionals</h2>

<p>This:</p>

<pre><code>    for idx, val in enumerate(flattened):
        if val &lt; lower_b:
            valley_inds.append(idx + ind)
        elif val &gt; upper_b:
            peak_inds.append(idx + ind)
</code></pre>

<p>should not use a loop. Read about vectorized conditionals here:
<a href="https://stackoverflow.com/questions/45768262/numpy-equivalent-of-if-else-without-loop#45768290">https://stackoverflow.com/questions/45768262/numpy-equivalent-of-if-else-without-loop#45768290</a></p>

<h2>Stricter events</h2>

<pre><code>    curr_event = 'peak'
</code></pre>

<p>shouldn't use a string. Use <code>enum.Enum</code> instead and include event values for <code>PEAK</code> and <code>VALLEY</code>.</p>

<h2>Direct booleans</h2>

<pre><code>    if x in pk_inds:
        is_peak = True
    else:
        is_peak = False
</code></pre>

<p>should be</p>

<pre><code>is_peak = x in pk_inds
</code></pre>
    </div>