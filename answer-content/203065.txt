<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code looks pretty good to me. A few notes:</p>

<hr>

<p>You have a bug here:</p>

<pre><code>$userID=$env:UserName

$SourceRoot      = "C:\Users\$User"
</code></pre>

<p>You are referring to <code>$User</code>, which hasn't been set. I always put this at the top of my scripts to catch such bugs:</p>

<pre><code>Set-StrictMode -Version Latest
</code></pre>

<p>Why introduce a new variable, by the way? Why not just use it directly?:</p>

<pre><code>$SourceRoot      = "C:\Users\$env:UserName"
</code></pre>

<hr>

<p>This line can be simplified for the sake of readability:</p>

<pre><code>$Source      = Join-Path -Path $SourceRoot -ChildPath $Folder
</code></pre>

<p>To this:</p>

<pre><code>$Source      = Join-Path $SourceRoot $Folder
</code></pre>

<hr>

<p>This code would be cleaner using the pipeline:</p>

<pre><code>$mappedDrives = @()

foreach ($drive in $drives) {
    if ($drive.DisplayRoot) {
        $mappedDrives += Select-Object Name,DisplayRoot -InputObject $drive
    }
}
</code></pre>

<p>Like this:</p>

<pre><code>$mappedDrives = $drives | ? $drive.DisplayRoot | Select-Object Name, DisplayRoot
</code></pre>

<p>(Not tested because I don't have any mapped drives, but I believe it is correct.)</p>

<p>You can format it like this if you like:</p>

<pre><code>$mappedDrives = $drives |
    ? $drive.DisplayRoot | 
    Select-Object Name, DisplayRoot
</code></pre>

<hr>

<p>This comment is misleading:</p>

<pre><code>#####################################
###  Backup user's mapped drives  ###
#####################################
</code></pre>

<p>You aren't backing up the drives. You are recording the drive mappings.</p>
    </div>