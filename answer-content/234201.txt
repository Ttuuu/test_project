<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>here are some recommendations for your code.</p>

<p>1) Extract the <code>ObjectMapper</code> into a constant, since the instance can be reused.</p>

<pre class="lang-java prettyprint-override"><code>//[...]
   public static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();
//[...]
   private boolean isEventsOverlapping(String events, List&lt;EventSubscription&gt; eventSubscriptions)throws IOException {
//[...]
   }
//[...]
</code></pre>

<p>2) You can use the <code>com.fasterxml.jackson.databind.type.CollectionType</code> instead of passing the raw class to <code>com.fasterxml.jackson.databind.ObjectMapper#readValue()</code>, since you can specify the list subtype.</p>

<pre class="lang-java prettyprint-override"><code>   private static final CollectionType STRING_LIST_TYPE;

   static {
      TypeFactory typeFactory = TypeFactory.defaultInstance();
      STRING_LIST_TYPE = typeFactory.constructCollectionType(List.class, String.class);
   }

    private boolean isEventsOverlapping(String events, List&lt;EventSubscription&gt; eventSubscriptions) throws IOException {

        final List&lt;String&gt; strings = OBJECT_MAPPER.readValue(events, STRING_LIST_TYPE);

        for (String event : strings) {
            for (EventSubscription eventSubscription : eventSubscriptions) {

                final List&lt;String&gt; list = OBJECT_MAPPER.readValue(eventSubscription.getEventTypes(), STRING_LIST_TYPE);

                if (list.contains(event)) {
                    return true;
                }
            }
        }

        return false;
    }
<span class="math-container">```</span>
</code></pre>
    </div>