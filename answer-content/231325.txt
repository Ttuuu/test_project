<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would set the execute permissions on the <code>entrypoint.sh</code> before building the <code>docker</code> image - <a href="https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#minimize-the-number-of-layers" rel="nofollow noreferrer">RUN, COPY and ADD create layers</a> - <code>COPY</code> preserves the file permissions so you can remove the <code>RUN chmod +x /entrypoint.sh</code> (a layer from your final image).</p>

<pre><code>FROM alpine:3.10

ARG BUILD_DATE

LABEL maintainer="MyNameGoesHere" \
      org.label-schema.schema-version="1.0" \
      org.label-schema.name="postfixrelay" \
      org.label-schema.build-date=$BUILD_DATE

EXPOSE 25

VOLUME [ "/var/spool/postfix" ]

COPY ./entrypoint.sh /

RUN apk add --no-cache --update \
        bash \
        ca-certificates \
        cyrus-sasl-login \
        postfix \
        rsyslog \
        tzdata &amp;&amp; \
    rm -rf /var/cache/apk/*

ENTRYPOINT ["/entrypoint.sh"]
</code></pre>

<p>... moved the <code>EXPOSE</code>, <code>VOLUME</code> and <code>COPY</code> instructions above the <code>RUN</code> - the <code>VOLUME</code> and <code>EXPOSE</code> are not likely to change and the build cache for the <code>COPY</code> will only be invalidated if the contents of the file changes as explained in the <a href="https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy" rel="nofollow noreferrer"><code>ADD</code> or <code>COPY</code></a> best practices. Finally, split the packages being added on multiple lines to make it clearer at a glance in i.e. a <code>git diff</code> when something changes.</p>

<p>Concerning the <code>entrypoint.sh</code> I'd suggest taking a look at the <a href="https://docs.docker.com/engine/reference/builder/#exec-form-entrypoint-example" rel="nofollow noreferrer">Exec form <code>ENTRYPOINT</code> example</a> to ensure that your process is receiving the Unix signals.</p>

<p>For the <code>docker-compose</code> I'd pass the <code>PASS</code> environment variable from the hosts environment and name the <code>default</code> network explicitly:</p>

<pre><code>version: '3'
services:
  postfixrelay:
    container_name: postfixrelay
    restart: unless-stopped
    environment:
      ...
      - PASS=${PASS}
...
networks:
  default:
    name: postfixrelay
...
</code></pre>

<p>If you want to <code>docker-compose up --scale postfixrelay=3</code> you'd need to stop using <code>container_name</code>, trying to start multiple containers with the same name will conflict. You'd also need to stop publishing the ports to the host, will have port conflicts - would need to set up a <code>tcp</code> load balancer (i.e. <code>nginx</code>, <code>traefik</code>, ...) and proxy the connections to your upstream services.</p>

<p>Then there is <code>docker swarm</code> and <code>kubernetes</code> (or other) as proper orchestration managers for your service(s).</p>
    </div>