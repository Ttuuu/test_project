<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Well you're right to be concerned.</p>
<p>Your example is essentially this</p>
<pre><code>function wrapCheck(check) {
      return {
            check,
            largeArr: Array(1000000)
                  .fill(0)
                  .map((_, i) =&gt; i),
            makeNew: function (pred) {
                  return wrapCheck(() =&gt; check(this).filter(pred));
            }
      };
}

const check = (o) =&gt; o.largeArr.slice(0, 10);

let s = wrapCheck(check);
while (true) {
      s = s.makeNew((x) =&gt; x % 2 === 0);
}
</code></pre>
<p>Which yes is a memory leak (takes about 20 secs to run out of memory for me).</p>
<p>I'll confess I haven't fully appreciated your code, but what prevents you from making a new WatchableCollection with just initial, and adding the check on afterwards, now using the reference to your newly made object?</p>
    </div>