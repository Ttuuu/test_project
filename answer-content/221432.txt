<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You basically always need to use brute force here. There is no other way. However, you can do it a bit more efficiently.</p>

<p>You're redoing the whole summation in every step of the loop. You don't need to. You can compute the total with one subtraction and one addition in each step of the loop. Like this:</p>

<pre><code>static int birthday(List&lt;int&gt; s, int d, int m) {
    int n = 0;
    int t = s.Take(m).Sum();
    for(int i = 1; i &lt; s.Count - m; i++) {
        if (t == d) n++;
        t = t - s[i - 1] + s[i + m];
    }
    return n;
}
</code></pre>

<p>I hope this makes sense, I never write C#. I got here because of your 'javascript' tag. The code might not work correctly, <em>it is untested</em>, but I hope you understand the intention.</p>

<p>However, I do think there's <strong>a bug</strong> in your code. You loop over the whole list, all the way to the end, where you cannot take <code>m</code> squares anymore. The <code>sum()</code> there might result in unexpected matches.</p>
    </div>