<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'd just go with @Roman's suggestion. You should just leave it up to the language to decide what is and isn't valid.</p>

<p>I'd make two further suggestions though:</p>

<p>I don't think the parameter to <code>is_numeric</code> should be <code>Optional</code>; either conceptually, or to comply with the challenge. <code>None</code> will never be a valid number, so why even check it? I don't think dealing with invalid data should be that function's responsibility. Make it take just a <code>str</code>, then deal with <code>None</code>s externally. I also don't really think it's <code>is_numeric</code>'s responsibility to be dealing with trimming either; and that isn't even required:</p>

<pre><code>print(float(" 0.1 "))  # prints 0.1
</code></pre>

<p>I'd also <code>return True</code> from within the <code>try</code>. The behavior will be the same, but I find it makes it clearer the intent of the <code>try</code>.</p>

<p>After the minor changes, I'd go with:</p>

<pre><code>def is_numeric(input_string: str) -&gt; bool:
    """
    Returns True for valid numbers. Acceptable types of items: str or None
    """
    try:
        parsed = float(input_string)
        return True

    except ValueError:
        return False

if string is not None and is_numeric(string):
    print(f'{GREEN_APPLE} Test {count}: `{string}` is a valid number.')
else:
    print(f'{RED_APPLE} Test {count}: `{string}` is not a valid number.')
</code></pre>
    </div>