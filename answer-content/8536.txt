<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One minor thing in addition to the other answers, there's a bug in your mid point calculation:</p>

<pre><code>int mid = (start + end)/2;
</code></pre>

<blockquote>
  <p>it fails if the sum of low and high is greater than the maximum positive int value (2^31 - 1). The sum overflows to a negative value, and the value stays negative when divided by two. In C this causes an array index out of bounds with unpredictable results. In Java, it throws ArrayIndexOutOfBoundsException.</p>
</blockquote>

<p>from <a href="http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html">Nearly All Binary Searches and Mergesorts are Broken</a></p>

<p>To prevent it from flowing over maximum int range replace it with:</p>

<pre><code>int mid = low + ((high - low) / 2);
</code></pre>

<p>A very minor thing, that will only occur on arrays with a very high number of items. But since you asked for improvements of your code ...</p>
    </div>