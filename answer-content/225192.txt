<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can simplify <code>GetOrCreateAsync()</code> a bit, because <code>IMemoryCache</code> has an extension called <code>Microsoft.Extensions.Caching.Memory.GetOrCreateAsync()</code>:</p>

<pre><code>public async Task&lt;T&gt; GetOrCreateAsync&lt;T&gt;(object key, Func&lt;ICacheEntry, Task&lt;T&gt;&gt; create)
{
  await Locker.WaitAsync();
  try
  {
    return await _cache.GetOrCreateAsync(key, create);
  }
  finally
  {
    Locker.Release();
  }
}
</code></pre>

<p>or:</p>

<pre><code>public async Task&lt;T&gt; GetOrCreateAsync&lt;T&gt;(object key, Func&lt;Task&lt;T&gt;&gt; create)
{
  await Locker.WaitAsync();
  try
  {
    return await _cache.GetOrCreateAsync(key, ice =&gt; {
      ice.AbsoluteExpirationRelativeToNow = TimeSpan.FromMinutes(17);
      return create();
    });
  }
  finally
  {
    Locker.Release();
  }
}
</code></pre>

<p>if you want to control the expiration as in your original.</p>
    </div>