<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>From a short review;</p>
<ul>
<li><code>locationIsUnoccupied</code> and <code>createGameInfoWindow</code> are mysterious, where are they defined?</li>
<li><code>newMarker ? gameMarkers.push(newMarker) : null;</code> should trigger jshint, I would just go for the <code>if</code> statement</li>
<li>I would structure all the code and functions in to MVC (model view controller)
<ul>
<li>So <code>GAME_ICON_URL</code> becomes <code>model.GAME_ICON_URL</code></li>
<li>So <code>createGameInfoWindow</code> becomes <code>ui.createGameInfoWindow</code></li>
<li>So <code>locationIsUnoccupied</code> becomes <code>model.locationIsUnoccupied</code></li>
</ul>
</li>
</ul>
<p>This could make your code look like;</p>
<pre><code>// Initialising map and markers
export function handleApiLoaded(model, ui, controller){
  ui.infoWindow = new google.maps.InfoWindow({});

  model.gameMarkers = [];
  for (const game of games) {
    addGameMarker(game, model, ui, controller);
  }

  //Not sure the below would still make sense?
  model.setGameMarkers(gameMarkers);
  ui.setInfoWindow(ui.infoWindow);
};


// Create marker object for game
export function addGameMarker(game, model, ui, controller){

  const [lat, lng] = [parseFloat(game.latitude), parseFloat(game.longitude)];

  if (model.locationIsUnoccupied(lat, lng, model.gameMarkers)) {
    var icon = {
      url: model.GAME_ICON_URL,
      //Why 30 and 45, a comment would be good here
      scaledSize: new google.maps.Size(30, 45),
    };

    var marker = new google.maps.Marker({
      position: {
        lat: lat,
        lng: lng,
      },
      icon: icon,
      map: model.map,
    });

    marker.addListener("click", () =&gt; {
      ui.infoWindow.close();
      //Maybe `map` should be part of `ui`, deep thoughts to be had..
      model.map.panTo(marker.getPosition());
      ui.handleMarkerClick(marker, map);
      ui.infoWindow.setContent(createGameInfoWindow(game));
      ui.infoWindow.open(map, marker);
    });

    model.gameMarkers.push(marker);
  }
};
</code></pre>
    </div>