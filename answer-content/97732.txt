<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Trivial</h2>

<p>Use <a href="http://clhs.lisp.se/Body/f_1pl_1_.htm"><code>1-</code></a> instead of <code>(- ... 1)</code>.</p>

<p>Avoid very long lines (Emacs will indent for you).</p>

<p>Do not use <a href="http://clhs.lisp.se/Body/m_cond.htm"><code>cond</code></a> when a single <a href="http://clhs.lisp.se/Body/s_if.htm"><code>if</code></a> without <a href="http://clhs.lisp.se/Body/s_progn.htm"><code>progn</code></a> would do.</p>

<h2>Memory</h2>

<p>Use <a href="http://clhs.lisp.se/Body/f_nconc.htm"><code>nconc</code></a> instead of
<a href="http://clhs.lisp.se/Body/f_append.htm"><code>append</code></a> when possible to avoid
unnecessary consing (in your case, <code>splice</code> allocates a fresh list, so
its result can be passed to <code>nconc</code>).</p>

<h2>Catastrophic</h2>

<p>Whenever you use <a href="http://clhs.lisp.se/Body/f_nth.htm"><code>nth</code></a>, you are
using the wrong algorithm.</p>

<p>Optimal search is linearithmic: <code>O(n*log(n))</code>.</p>

<p>Insert search is quadratic: <code>O(n^2)</code>.</p>

<p>Your implementation is <code>O(n^3)</code>:</p>

<ol>
<li><code>nth</code> is <code>O(n)</code></li>
<li><code>slice</code> is <code>O(n^2)</code> (calls <code>nth</code> * recursion).</li>
<li><code>splice</code> and <code>move</code> are also <code>O(n^2)</code> (call <code>slice</code>).</li>
<li><code>find-ordered-index</code> is <code>O(n)</code>.</li>
<li><code>insertion-sort</code> is <code>O(n^3)</code> (calls <code>move</code> * recursion).</li>
</ol>
    </div>