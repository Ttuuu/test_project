<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The function you call <code>Encode</code> really seems to be your block encryption function, I would name it something more suggestive of that.  As noted in the comments, it would be great it you offered modes other than ECB, it would be a good exercise to design that well.  My main complaint is that it's oriented around byte arrays, when a <code>Stream</code>-based implementation would be more useful.  Either:</p>

<pre><code>void Encrypt(Stream input, Stream output)
</code></pre>

<p>or something more like an adapter pattern:</p>

<pre><code>class XTeaEncryptor : Stream
{
    XTeaEncryptor(Stream outputStream){}
}
</code></pre>

<p>It's much easier to use a class designed for <code>Stream</code>s to encrypt a byte array than vice versa, especially when you get into other modes.</p>

<p>Your use of <code>TrimOutputData</code> results in you allocating an array almost as big as the input, you could avoid this by using an index.</p>
    </div>