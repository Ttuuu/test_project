<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As was already mentioned, the code mixes a lot of jQuery methods with plain vanilla DOM access JS methods. If you are going to use jQuery then why not use other jQuery methods? I was initially thinking <a href="https://api.jquery.com/toggleClass" rel="nofollow noreferrer"><code>.toggleClass()</code></a> would work to simplify the logic on adding/removing class names, but because they are each somewhat unique that doesn't appear to work.</p>

<p>It is wise to store DOM lookups in a variable and then reference the variable instead of repeatedly querying the DOM. For instance, <code>$('.canvas_btn')</code> can be stored once the DOM is ready (using <a href="https://api.jquery.com/jQuery/#jQuery3" rel="nofollow noreferrer"><code>$(function() {...}</code></a> (formerly <a href="https://api.jquery.com/ready" rel="nofollow noreferrer"><code>.ready()</code></a>):</p>

<pre><code>$(function() { //DOM ready callback
  var canvasBtns = $('.canvas_btn');
</code></pre>

<p>Then use that variable instead of <code>$('.canvas_btn')</code>:</p>

<pre><code>canvasBtns.click(function() { //click handler
  canvasBtns.each(function() { //iterate over canvas buttons
</code></pre>

<p>And as that last code snippet alludes to, use <a href="https://api.jquery.com/each" rel="nofollow noreferrer"><code>.each()</code></a> (similar to <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/foreach" rel="nofollow noreferrer"><code>Array.prototype.forEach()</code></a> but for jQuery collections) to iterate over the buttons.</p>

<p>As far as updating the class name for each button, what you really want to do is remove <code>-outline</code> if the id matches the button that was clicked, or add it if it doesn't already have that. So in the rewritten code below, the id of the button that was clicked is stored in a variable, and then that is passed to the <code>.each</code> handler, which uses a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind#Partially_applied_functions" rel="nofollow noreferrer">partially applied function</a> with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind#Partially_applied_functions" rel="nofollow noreferrer"><code>Function.bind()</code></a>.</p>

<pre><code>canvasBtns.click(function() {
  var clickedId = $(this).attr('id');
  canvasBtns.each(toggleOutlineClass.bind(null, clickedId));
});
</code></pre>

<p>Then that function <code>toggleOutlineClass</code> will accept first <code>clickedId</code>, followed by the other arguments passed by <a href="https://api.jquery.com/each" rel="nofollow noreferrer"><code>.each()</code></a>: </p>

<blockquote>
<pre><code>Integer index, Element element
</code></pre>
</blockquote>

<p>Then that function can either remove the <code>-outline</code> string if it is the item clicked (based on whether <code>clickedId</code> matches <code>$(btn).attr('id')</code>) or add that string if the class name doesn't already have it.</p>

<pre><code>function toggleOutlineClass(clickedId, index, btn) {
  var className = $(btn).attr('class');
  if (clickedId === $(btn).attr('id')) {
    $(btn).attr('class', className.replace('btn-outline-', 'btn-'));
  } else if (className.indexOf('btn-outline-') &lt; 0) {
    $(btn).attr('class', className.replace('btn-', 'btn-outline-'));
  }
}
</code></pre>

<p>A lot of the tips above are based on information in <a href="https://ilikekillnerds.com/2015/02/stop-writing-slow-javascript/" rel="nofollow noreferrer">this article</a>. I suggest reading that for more tips.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="false" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>$(function() { //DOM ready callback
  var canvasBtns = $('.canvas_btn');
  canvasBtns.click(function() {
    var clickedId = $(this).attr('id');
    canvasBtns.each(toggleOutlineClass.bind(null, clickedId));
  });

  function toggleOutlineClass(clickedId, index, btn) {
    var className = $(btn).attr('class');
    if (clickedId === $(btn).attr('id')) {
      $(btn).attr('class', className.replace('btn-outline-', 'btn-'));
    } else if (className.indexOf('btn-outline-') &lt; 0) {
      $(btn).attr('class', className.replace('btn-', 'btn-outline-'));
    }
  }
});</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" rel="stylesheet" /&gt;
&lt;script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;button class="btn btn-outline-info 	  	canvas_btn" align="left" id="new_text_btn"&gt;Text&lt;/button&gt;
&lt;button class="btn btn-outline-secondary  canvas_btn" align="left" id="new_audio_btn"&gt;Audio&lt;/button&gt;
&lt;button class="btn btn-outline-success 		canvas_btn" align="left" id="new_image_btn"&gt;Image&lt;/button&gt;
&lt;button class="btn btn-outline-danger 		canvas_btn" align="left" id="new_video_btn"&gt;Video&lt;/button&gt;
&lt;button class="btn btn-outline-warning 		canvas_btn" align="left" id="new_input_btn"&gt;Input&lt;/button&gt;</code></pre>
</div>
</div>

    </div>