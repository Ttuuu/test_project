<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Remove the Passes and Arrêt parameters and declare them as Global Constants in a public Module.</p>
<blockquote>
<pre><code>Public Const nombrelignezonecomposant As Long = 25 'Number of lines available for document entry
Public Const ligneinitzonecomposant As Long = 18       'First part number entry line
Public Const nocolonnetype As Long = 22                          'No of the column in which the types of stop are found
Public Const nocolonneminute As Long = 21                      'No. of the column in which the minutes of stoppages are located
Public Const ligneinitzonenoemploye As Long = 5         'First line of operator number entry
Public Const nombrelignenoemploye As Long = 4             'Number of operator number entry lines
Public Const nocolnoemploye As Long = 3                         'Operator no. Column no.
Rem Position of the "Total loss" box
Public Const colperte  As Long = 13
Public Const ignetotperte  As Long = 43
Rem Position of the "Passes" box
Public Const colpasse  As Long = 3
Public Const lignepasse  As Long = 10
</code></pre>
</blockquote>
<pre><code>Dim w, q, Z As Integer 
</code></pre>
<p>Variables must be Typed individually.  There is no advantage to using <code>Integer</code> use <code>Long</code> instead.</p>
<blockquote>
<pre><code>Dim w As Long, q As Long, Z As Long
</code></pre>
</blockquote>
<p><code>Bi, Ci, Di, Ei, Fi, Gi</code> are unnecessary.  Use <code>B, C, D, E, F, G</code> as counters and don't reset them at the beginning of each iteration.</p>
<p>When each clause of a <code>If ElseIf ElseIf</code> block is handling variation of a single value, you should consider using a <code>Select Case</code> statement.</p>
<blockquote>
<pre><code>Select Case Cells(k, nocolonnetype).Text
    Case "B"
        B = B + Cells(k, nocolonneminute).Value
    Case "C"
        C = C + Cells(k, nocolonneminute).Value
    Case "D"
        D = D + Cells(k, nocolonneminute).Value
    Case "E"
        E = E + Cells(k, nocolonneminute).Value
    Case "F"
        F = F + Cells(k, nocolonneminute).Value
    Case "G"
        G = G + Cells(k, nocolonneminute).Value
End Select
</code></pre>
</blockquote>
<p>Avoid Selecting and Activating Objects unless absolutely necessary. Watch: [Excel VBA Introduction Part 5 - Selecting Cells (Range, Cells, Activecell, End, Offset)]</p>
<h2>Workbook_SheetChange</h2>
<p>Calling <code>tritroughsheets</code>, which even refactored could take 200ms or more, doesn't seem like a good User Experience for me.  Consider using <code>Worksheets("Vendredi jour")</code>'s <code>Worksheet_Activate</code> event instead.</p>
<h2>Refactored Code</h2>
<p><code>Passes</code> is not included. Too hard to refactor as I don't know French.</p>
<h2>Public Module</h2>
<pre><code>Option Explicit
Public Const nombrelignezonecomposant As Long = 25 'Number of lines available for document entry
Public Const ligneinitzonecomposant As Long = 18       'First part number entry line
Public Const nocolonnetype As Long = 22                          'No of the column in which the types of stop are found
Public Const nocolonneminute As Long = 21                      'No. of the column in which the minutes of stoppages are located
Public Const ligneinitzonenoemploye As Long = 5         'First line of operator number entry
Public Const nombrelignenoemploye As Long = 4             'Number of operator number entry lines
Public Const nocolnoemploye As Long = 3                         'Operator no. Column no.
Rem Position of the "Total loss" box
Public Const colperte  As Long = 13
Public Const ignetotperte  As Long = 43
Rem Position of the "Passes" box
Public Const colpasse  As Long = 3
Public Const lignepasse  As Long = 10

Sub tritroughsheets()
'Classification code and counting of downtime and allocation of passes according to operators
'The code calls the Pass and Stop functions which respectively classify the passes and stops in the summary table of the week

Application.ScreenUpdating = False

        Call Passes
        Dim Data As Variant
        Data = GetWeeklySummaryData
        UpdateWeelkSummary Data
Application.ScreenUpdating = True

End Sub

Private Function GetWeeklySummaryData() ' Arret Part 1

    'Sub classification and recording of downtime
    'The code loops through the Downtime and Downtime type columns
    'It compares the type of stop and adds the minutes to the counter linked to the type
    Dim i As Long                              ' Incrémenteur

    Dim xSh As Worksheet
    Dim Data As Variant
    Dim Results(0 To 5) As Variant

    For Each xSh In Worksheets                  'Loop that goes on all shifts (sheets)
        If xSh.Visible Then                     'Condition if leaf visible (avoid hidden leaf (schedule)
            Rem Assign Shifts to Data Note: Data is a 2D Base 1 array
            Data = xSh.Cells(ligneinitzonecomposant, nocolonneminute).Resize(nombrelignezonecomposant).Value
            
            For i = 1 To UBound(Data)
                If Data(i, 1).Value &lt;&gt; 0 Then 'If the time value is non-null
                
                    Dim C As Long 'Position of value in Results
                    Select Case Data(i, 2).Text
                        Case "B": C = 0
                        Case "C": C = 1
                        Case "D": C = 2
                        Case "E": C = 3
                        Case "F": C = 4
                        Case "G": C = 5
                    End Select
                    Results(C) = Results(C) + Data(i, 1)
                    
                End If
            Next
        End If
    Next
End Function

Private Sub UpdateWeelkSummary(ByRef Data As Variant)
       With Worksheets("Vendredi jour")
        .Unprotect
        .Cells(15, 38).Resize(ColumnSize:=UBound(Results) + 1).Value = Results
        .Protect
    End With
End Sub
</code></pre>
<h2>Vendredi jour Code Module</h2>
<pre><code>Private Sub Worksheet_Activate()
    Call tritroughsheets
End Sub
</code></pre>
<hr>
    </div>