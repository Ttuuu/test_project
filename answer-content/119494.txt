<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I propose a different method!<br>
If you generate the center, and the size of the shape you can do the entire thing easily with <a href="https://docs.python.org/2/library/string.html#formatstrings" rel="nofollow"><code>str.format</code></a>.</p>

<pre><code>&gt;&gt;&gt; '{0:-^16}'.format('yo')
'-------yo-------'
</code></pre>

<p>Simple.</p>

<p>The biggest problem is getting the diamond shape.
But this can be done with ease.<br>
For the amount of different letters you want per line it goes:</p>

<pre><code>1, 2, 3, 4, 3, 2, 1
</code></pre>

<p>Where the character you want goes:</p>

<pre><code>3, 2, 1, 0, 1, 2, 3
</code></pre>

<p>If you make a range that goes like the first, you can change it to the second by subtracting from 4 each time.</p>

<p>I'll define this range as:</p>

<pre><code>def piramid_range(size):
    return range(1, size) + range(size, 0, -1)
</code></pre>

<p>A quick run of size 4 gives us the correct output.
And subtracting from 4 each time gives us the correct output too.</p>

<pre><code>&gt;&gt;&gt; piramid_range(4)
[1, 2, 3, 4, 3, 2, 1]
&gt;&gt;&gt; [4 - i for i in piramid_range(4)]
[3, 2, 1, 0, 1, 2, 3]
</code></pre>

<p>and so adding this all together, with two comprehensions makes for a nice small function:</p>

<pre><code>def draw(size):
    fmt = '{{0:-^{size}}}'.format(size=4 * size - 3)
    return '\n'.join(
        fmt.format('-'.join([alphabet[size - s] for s in piramid_range(inner_size)]))
        for inner_size in piramid_range(size)
    )
</code></pre>

<p>And finally, as I think your separator character is quite ugly, I think adding the ability to change it would be nice. This is just replacing its two occurrences.</p>

<pre><code>def draw(size, char='-'):
    fmt = '{{0:{char}^{size}}}'.format(char=char, size=4 * size - 3)
    return '\n'.join(
        fmt.format(char.join([alphabet[size - s] for s in piramid_range(inner_size)]))
        for inner_size in piramid_range(size)
    )

print draw(4)
print
print draw(4, char=' ')
</code></pre>

<p>Which would have the following output:</p>



<blockquote>
<pre class="lang-none prettyprint-override"><code>------d------
----d-c-d----
--d-c-b-c-d--
d-c-b-a-b-c-d
--d-c-b-c-d--
----d-c-d----
------d------

      d
    d c d
  d c b c d
d c b a b c d
  d c b c d
    d c d
      d
</code></pre>
</blockquote>
    </div>