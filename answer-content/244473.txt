<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just in my opinion, take this with grain of salt.
You don't need that at all:</p>
<pre><code>$return = [
  "email" =&gt; "",
  "password" =&gt; "",
  "error" =&gt; false
];
</code></pre>
<p>Ajax response data type could be just a text, one of these: [bad credentials, error, success], you should validate if email or password is empty before even sending a request, on server side simply check if either of them is empty and if so just print "error" (because if that happen, someone is bypassing your script and sending custom data, therefore you don't have to bother to sending back appropriate error). It's a good practice to not show if an email is registered on your website, so email not present in your database or bad password should be merged to "bad credentials".</p>
<p>Ad to mickmackusa 1) Ajax login is good if you redirect page after successfully login, which you do with: <code>$(location).attr("href", "index.php");</code> that clear the xhr from developer tools.</p>
<p>So your code could look like this:</p>
<pre><code>if(isset($_POST["userLoginSubmit"]) &amp;&amp; !isset($_SESSION["userID"])){
   userLogin($_POST["email"], $_POST["password"]);
}

function userLogin($email, $password){
    if(empty($email) || empty($password)
        || !filter_var($email, FILTER_VALIDATE_EMAIL) // server side email validation
    ){
        exit("error"); // custom data, script bypass
    }

    $dbConnect = new DbConnect;
    $dbDoConnect = $dbConnect-&gt;doConnectFromOutside();
    // if(!$dbDoConnect) { exit("connection") } // if you wanna check for connection should be something like that
    $data = $dbDoConnect-&gt;prepare("SELECT * FROM users WHERE email = :email"); //  LIMIT 1 not needed because email is unique key 
    $data-&gt;bindValue(":email", $email, PDO::PARAM_STR);
    if(!$data-&gt;execute()){
        exit("error"); // internal error (bad query)
    }
    
    $selectedData = $data-&gt;fetch(PDO::FETCH_ASSOC);
    if(!$selectedData || !password_verify($password, $selectedData["password"])){
        exit("bad-credentials");
    }

    $_SESSION = [
        "userID" =&gt; $selectedData["userID"],
        "firstName" =&gt; $selectedData["firstName"],
        "lastName" =&gt; $selectedData["lastName"],
        "email" =&gt; $selectedData["email"],
    ];

    exit("success");
}


$("#userLogin").submit(function(event){
    event.preventDefault();
    var email = $("#userLoginEmail").val(),
    password = $("#userLoginPassword").val();
    if(!email){ // if it's actually email is done by: input type='email'
        $("#userLoginEmailLabel").addClass("error").html("nevyplněný email");
    }
    if(!password){
        $("#userLoginPasswordLabel").addClass("error").html("nevyplněné heslo");
    }
    if(!email || !password) return;
    $("#userLoginSubmit").html("&lt;i class='fas fa-sync'&gt;&lt;/i&gt;");

    $.ajax({
      method: "POST",
      url: "accountPopupFunctions.php",
      data: {
        email: email,
        password: password,
        userLoginSubmit: true
      },
      dataType: "text",
      success: function(loginResult){
        $("#userLoginPasswordLabel, #userLoginEmailLabel, #userLoginMessage").removeClass("error").html("");
        $("#userLoginPassword").val(""); // btw you don't have to clear password, that's advantage of using ajax login
        $("#userLoginSubmit").html("PŘIHLÁSIT SE");

        if(loginResult == "error") $("#userLoginMessage").addClass("error").html("Něco se pokazilo (#003).");
        if(loginResult == "bad-credentials") $("#userLoginMessage").addClass("error").html("Spatný email nebo heslo.");
        if(loginResult == "success"){
          localStorage.setItem('logged', true);
          localStorage.removeItem('loggedOut'); // these seem not necessary, check for the above instead
          localStorage.removeItem('loggedPopup');
          localStorage.removeItem('unlogedPopup');
          $(location).attr("href", "index.php");
        }

      },
      error: function(){
        $("#userLoginMessage").addClass("error").html("Něco se pokazilo (#003).");
        $("#userLoginSubmit").html("PŘIHLÁSIT SE");
      }

    });
});
</code></pre>
<p>Much simpler isn't it ?</p>
<p>You can do it without ajax if you want to, by just printing script that shows the popup on page load (with the error messages).</p>
<p>Use sanitizing whenever you printing user input on your pages (XSS attack), you don't have to sanitize the inputs from post because that's done already by prepared statement (only for SQL !).</p>
<p>By the way, instead: <code>&lt;a href='#' class='changeForm preventDefault'&gt;CHCI HO VYTVOŘIT&lt;/a&gt;</code> you can do this: <code>&lt;a href='javascript:;' class='changeForm'&gt;CHCI HO VYTVOŘIT&lt;/a&gt;</code></p>
    </div>