<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>useToken</h2>

<p>I don't really get your expected behavior from this method. You only retry when expired, what if an exception occured while not yet expired? Nothing happens, not even a log. The same with exceptions that occur when <code>retryWhenTokenExpired</code> is not set, the exception gets swallowed without any trace. </p>

<blockquote>
<pre><code>  catch (Exception e) {
    if (retryWhenTokenExpired &amp;&amp; tokenExpired(e.getMessage())) {
        System.out.println("token expired, retry");
        resetToken();
        useToken(tokenConsumer, false);
    }
  }
</code></pre>
</blockquote>

<p>I would make sure the following constraint is true: either a retry is performed or an exception is propagated up the stack. In addition, on expiration, reset the token when requested so. <code>log</code> is an abstraction of your <code>System.out.println</code>.</p>

<pre><code>  catch (Exception e) {
    log("error using token: " + e.getMessage());
    if (!retryWhenTokenExpired) {
        throw e;
    }
    final boolean expired = tokenExpired(e.getMessage());
    if (expired) {
        log("token expired, retry");
        resetToken();
    }
    useToken(tokenConsumer, !expired);
  }
</code></pre>
    </div>