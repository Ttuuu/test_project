<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your querying practices look secure to me.  Your are using a prepared statement with bound parameters and using <code>password_hash()</code> and <code>password_verify()</code>.  It really can be as simple as doing those basic/essential things.</p>
<p>As for other refinements, I recommend writing the failure branches before successful ones, doing early <code>exit()</code>s, and only passing back an empty or populated <code>reason</code> to reduce the data structure to its vital value.</p>
<ul>
<li>I will assume/hope that the <code>username</code> is a UNIQUE table column, so <code>LIMIT 1</code> provides no value.</li>
<li>If you want the result set / row to be an object, just tell pdo that that is what you want -- <code>fetch(PDO::FETCH_OBJ)</code>.</li>
<li>The result set will either be an object or <code>false</code>, so just check for a falsey result set.  For this reason, you can remove <code>id</code> from the <code>SELECT</code>.</li>
<li>I don't like to give too much specificity when giving failed login responses.  I would tell the user that the credentials generally failed without spelling out which field was the problem.</li>
</ul>
<p>Recommendation:</p>
<pre><code>public function login(Request $request)
{
    $this-&gt;middleware('json_response', $request);
    $this-&gt;middleware('xauth_protected', $request);
    
    if(!$request-&gt;has('username') || !$request-&gt;has('password')) {
        exit(json_encode(['reason' =&gt; 'Please fill in the required fields']);
    }
    
    $stmt = Database::getInstance()-&gt;Prepare(
        "SELECT hash, session FROM _users WHERE username = ?"
    );
    $stmt-&gt;execute([$request-&gt;username]);
    $rowObject = $stmt-&gt;fetch(PDO::FETCH_OBJ);
    
    if (!$rowObject || !password_verify($request-&gt;password, $rowObject-&gt;hash)) {
        exit(json_encode(['reason' =&gt; 'Invalid credentials']));
    }

    $request-&gt;setSession('oauth', $rowObject-&gt;session);
    exit(json_encode(['reason' =&gt; null]));
}
</code></pre>
<p>Then in your js, you can use this:</p>
<pre><code>.then(data =&gt; {
    if (data.reason) {
        document.getElementById('login-error').innerHTML = data.reason;
    } else {
        window.location.href = App.__viewFactory.dashboard.view;
    }
})
</code></pre>
    </div>