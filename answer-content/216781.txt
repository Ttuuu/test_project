<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Global Variables</strong></p>

<p>Most of the variables are declared globally, they are not used globally. The general rule to declaring variables is to declare them as you need them and limit the scope of the variable. The reason for this is that it makes the code easier to read and much easier to code and debug. This program is already passing variables as parameters so there really is no need for global variables. The variable <code>NumCorrect</code> should be passed by reference into the function <code>CheckAnswer</code>.</p>

<p>An example, the variables <code>ThreeDigNum</code> and <code>TwoDigNum</code> should be declared in the for loop currently in main:</p>

<pre><code>    for (int i = 0; i&lt;TotalProbs ;i++)
    {
        int ThreeDigNum = (rand() % 999);
        int TwoDigNum = (rand() % 99) + 1;

        ...
    }
</code></pre>

<p>This might solve your problem with random numbers.</p>

<p><strong>DRY Code</strong>  </p>

<p>One software development principle is <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow noreferrer">Don't Repeat Yourself principle</a>.</p>

<p>There is a number of places in the program where code is repeated. In switch statement in the main for loop 3 function calls are repeated 4 times. A variation of the switch statement itself is repeated within one of the function calls. It might be better if the switch statement in the main for loop was removed and have the function <code>FindAns</code> call <code>AddProbScript</code>, <code>SubProbScript</code>, <code>MultProbScript</code> or <code>DivProbScript</code>.</p>

<pre><code>    for (int i = 0; i&lt;TotalProbs ;i++)
    {
        int ThreeDigNum = (rand() % 999);
        int TwoDigNum = (rand() % 99) + 1;
        printf("\nEnter what operation you want to practice (+,-,x,/):");
        char C = getch();
        printf("%c\n", C);

        Answer = FindAns(C, TwoDigNum, ThreeDigNum);
        MakeAnswers(Answer);
        CheckAnswer(AnswerLoc, &amp;NumCorrect);
    }
</code></pre>

<p>This would help reduce the complexity of main as well.</p>

<p><strong>Reduce Complexity</strong>  </p>

<p><a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">The Single Responsibility Principle</a> states that every module, class, or function should have responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by the class (in this case function).</p>

<p>The function main is overly complex. As your C programs get larger the function main should just be a controller that loads the program, calls a function to execute the program and cleans up when the program is complete. The function main currently contains code that should be in at least 2 sub functions. One function might be RunQuiz(int TotalProbs) and the other function might be DoStatistics(time start, time end, int NumCorrect, int TotalProbs).</p>

<p><strong>Use Standard Constants to Make the Code More Readable</strong></p>

<p>The code already includes the stdlib.h header file, rather than using <code>exit(0);</code> it might be better to use <code>exit(EXIT_SUCCESS);</code> or <code>exit(EXIT_FAILURE);</code>. These are more portable.</p>
    </div>