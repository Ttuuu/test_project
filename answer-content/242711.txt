<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
 

<p>I would propose rearranging and simplifying the code down to this:</p>

<pre class="lang-vb prettyprint-override"><code>Sub LaunchTMAP()
    '' let user know the workbook is downloading so they dont think Outlook froze
    Dim infoBox As New UserForm2
    Call infoBox.Show


    ''  open excel, open the workbook, run the subroutine, then close excel
    Dim xl As New Excel.Application
    Dim wb As Excel.Workbook
    Set wb = ExApp.Workbooks.Open("Z/TMAPAddIn.xlam", ReadOnly:=True) 'Z is a network drive
    Call xl.Run("Module1.example")
    Call xl.Quit

    ''  hide the userform
    Call infoBox.Hide
End Sub
</code></pre>

<p>This should not make your code run any faster, but it should make it feel more responsive. By moving the infoBox dim and show to before the new excel window is openned, you make the infoBox appear earlier. This is because the 5 second delay comes from opening excel. I've added a quit call to make sure that you are closing out the excel window when oyu are done with it. I've also gone switched you away from having the <code>CreateObject</code> call, as you appear to already be using the <em>"Microsoft Excel XX.0 Object Library"</em> reference. I also used <code>Dim ... As New ..</code> notation where posible to reduce the number of lines.</p>
    </div>