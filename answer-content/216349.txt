<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The for-loop solutions miss "succeed fast" the opportunity to stop when the absolute minimum is reached. You're always calculating N differences. This one stops potentially in the middle of the array:</p>

<pre><code>const solution = (A) =&gt; {
  const len = A.length;
  if (len === 2) {
    return Math.abs((A[0] - A[1]));
  }
  const reducer = (total, amount) =&gt; total + amount;
  let rightSum = 0;
  let leftSum = A.reduce(reducer, 0);
  let minDiff = 100000 * 1000; // worst case. expect to be replaced
  let i = len - 1;
  while(minDiff &gt; 0 &amp;&amp; i &gt; 0) {
    const el = A[i];
    leftSum -= el;
    rightSum += el;
    minDiff = Math.min(minDiff, Math.abs(leftSum - rightSum));
    i -= 1;
  }
  return minDiff;
};
</code></pre>
    </div>