<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>By PEP8, your classes <code>sockets</code>, <code>factory</code>, etc. should be capitalized. You also need newlines between your class methods. These can all be fixed fairly easily with the use of a stand-alone or IDE-builtin linter.</p>

<p>This comment:</p>

<pre><code># Dynamic socket factory
# https://python-3-patterns-idioms-test.readthedocs.io/en/latest/Factory.html
</code></pre>

<p>should be moved to a docstring on the inside of the class:</p>

<pre><code>class Factory:
    """Dynamic socket factory
    https://python-3-patterns-idioms-test.readthedocs.io/en/latest/Factory.html
    """
</code></pre>

<p>So far as I can tell, <code>socket</code> is an abstract base class. You can pull in <code>abc</code> if you want to, but at the very least, you should explicitly show <code>execute</code> as being a "pure virtual" (in C++ parlance) method:</p>

<pre><code>def execute(self, query, fail_on_empty, fail_on_zero):
    raise NotImplementedError()
</code></pre>

<p>This code:</p>

<pre><code>        if /*Permitted Error Behavior*/:
            raise PermittedSocketError("[msg] ")
        else:
            raise
</code></pre>

<p>can lose the <code>else</code>, because the previous block has already <code>raise</code>d.</p>

<p>I'm not sure what's happened here - whether it's a redaction, or what - but it doesn't look syntactically valid:</p>

<pre><code>        if fail_on_empty and /*Check if Empty*/:
            raise PermittedSocketError("Empty return detected.")
        if fail_on_zero and /*Check if Zero*/:
            raise PermittedSocketError("Zero return detected.")
</code></pre>

<p>Your <code>except PermittedSocketError:</code> and its accompanying comment <code>Permitted errors are re-raised</code> are a little odd. If the error is permitted, and you're doing nothing but re-raising, why have the <code>try</code> block in the first place?</p>

<p>This:</p>

<pre><code>    else:
        return super(mquery_lite, cls).__new__(cls)
</code></pre>

<p>doesn't need an <code>else</code>, for the same reason as that <code>raise</code> I've described above.</p>

<p>The series of list comprehensions seen after <code>### Socket Library</code> really needs to have most or all of those broken up onto multiple lines, especially when you have multiple <code>for</code>.</p>

<p><code>self.socket_library</code> is a dictionary, but I'm unclear on your usage. You have this:</p>

<pre><code>                if j in self.socket_library:
                    socket_precedence.append(j)
                else:
                    socket_precedence.append(self.default_socket)
</code></pre>

<p>Is your intention to look through the keys of <code>socket_library</code>, ignore the values, and add present keys to <code>socket_precedence</code>? If you want to use its values, this needs to change.</p>
    </div>