<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The main contribution of this answer is to use <code>toLowerCase()</code> before the regex, so the regex does less work.  Note that I don't know if that would benefit performance at all - profile it if you are curious.</p>

<pre><code>// private implementation - separated for ease of testing
const _isPalindrome = x =&gt; x===[...x].reverse().join('');
const _alphanum = x =&gt; x.toLowerCase().replace(/[^a-z\s]/g, '');

// public interface - combined for ease of use
const isPalindrome = x =&gt; _isPalindrome(_alphanum(x));
</code></pre>

<p>This may be unpopular, but I prefer terse/abstract argument names <code>x</code> and <code>y</code> over longer, more specific names.  It's similar to using <code>i</code> as a loop variable - it makes it easier to see the structure of the code.</p>
    </div>