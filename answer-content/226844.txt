<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with most of the points in the answer by sbk201 - especially about the <code>placeholder</code> attributes. Given that those are mostly values that would fit for the <code>&lt;input&gt;</code> elements, it would be fitting just to use the <code>value</code> attribute to set initial values instead of using placeholders.</p>

<p>Did you consider using an <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output" rel="nofollow noreferrer"><code>&lt;output&gt;</code> element</a> for the display of the result? <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output#Browser_compatibility" rel="nofollow noreferrer">Most browsers except IE support it</a>.</p>

<hr>

<p>The code in <code>setEventHandler()</code> could be simplified from this:</p>

<blockquote>
<pre><code>const _this = this,
      button = this.getDom.buttonResult;

button.addEventListener('click', function() { 
    _this.showResult();
}, false);
</code></pre>
</blockquote>

<p>To a single line that uses a function reference:</p>

<pre><code>this.getDom.buttonResult.addEventListener('click', this.showResult, false);
</code></pre>

<p>If you needed to have multiple lines in that anonymous function, then an arrow function would eliminate the need for <code>_this</code> because there is no separate <code>this</code> context. Alternatively, if you wanted to use the traditional function statement syntax, you could also utilize <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind" rel="nofollow noreferrer"><code>Function.bind()</code></a> to bind the context to <code>this</code> instead of assigning <code>_this</code> to <code>this</code> beforehand.</p>
    </div>