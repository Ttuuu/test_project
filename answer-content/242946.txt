<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Pity no one has tried to help out a beginner.  While I know little of Unity, I can offer some C# comments.</p>

<p>Let me start with that overall your code looks nice.  It has good indentation and variable names are meaningful, i.e. not cryptic or abbreviated.  Use of braces is very good.</p>

<p>Actually, I don't see any properties in your class, but that might be a Unity requirement that objects are to be fields rather than properties.</p>

<p>I personally want to see access modifiers (public, private, or internal) where possible. Yes, there are defaults, but especially when dealing with beginners I want to see them explicitly specify the access modifier.</p>

<p>For naming conventions, classes, methods, and properties using Pascal casing.  See:</p>

<p><a href="https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/?redirectedfrom=MSDN" rel="nofollow noreferrer">.NET Design Guidelines</a></p>

<p><a href="https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/naming-guidelines" rel="nofollow noreferrer">Naming Guidelines</a></p>

<p><a href="https://www.dofactory.com/reference/csharp-coding-standards" rel="nofollow noreferrer">C# Coding Standards</a></p>

<p>You have a lot of comments.  Some are good, some not so good.  There is no need for a comment that tells us what you are doing, because what the code is doing should be self evident. Comments are better if they tell us why you are doing something a certain way.</p>

<p>Finally the <code>Range</code> method could have a better name.  On the surface, if I see <code>Range</code>, I am thinking it should be a property.  For a method, I suggest a naming pattern of [Action Verb] + [Noun].  Something like <code>GetRange</code> follows that pattern.  But in your case, I think <code>ClampRange</code> would be the more meaningful name, in that the name clearly denotes to the reader the intent of the method.</p>
    </div>