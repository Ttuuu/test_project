<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>EDIT:</strong> While accepted by the site, this solution doesn't meet the memory requirement.</p>

<p>This looks like an opportunity to use a <code>set</code>. By keeping the numbers in a set instead of a list, you can look up successive values of <code>n</code> directly, no element-by-element searching required. So, make a set, put <code>n</code> at 1, then see how far you can increase <code>n</code> before it's no longer contained in the set:</p>

<pre><code>def firstMissingPositive(nums):
    n = 1
    s = set(nums)
    while n in s:
        n += 1
    return n
</code></pre>
    </div>