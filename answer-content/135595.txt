<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Current year</h1>

<p>If you don't want the current year to be hardcoded, you could use the method <code>today()</code> from <a href="https://docs.python.org/2/library/datetime.html#available-types" rel="noreferrer"><code>datetime.date</code></a>.</p>

<pre><code>from datetime import date
current_year = date.today().year
</code></pre>

<h1>User input</h1>

<p>You should always put your user input request in a <a href="http://www.ibiblio.org/g2swap/byteofpython/read/try-except.html" rel="noreferrer"><code>try</code>/<code>except</code> block</a>, because you never knows what the user will think and do. I'd go with:</p>

<pre><code>def ask_for_birth_year():
    while True:
        try:
            return int(raw_input('Enter Year Of Birth: '))
        except ValueError:
            print('This is not a number, try again.')
</code></pre>

<p>This way it will keep asking until the user enters a proper number.</p>

<p><strong>UPDATE (following comment) :</strong></p>

<p>If you need some restriction on the input number, you could try this kind of structure :</p>

<pre><code>def ask_for_birth_year():
    while True:
        try:
            nb = int(raw_input('Enter Year Of Birth: '))
            if nb &lt; 0:  # can be any condition you want, to say 'nb' is invalid
                print('Invalid year')
            else:  # if we arrive here, 'nb' is a positive number, we can stop asking
                break
        except ValueError:
            print('This is not a number, try again.')
    return nb
</code></pre>

<h1>Other remarks</h1>

<p>Since <code>age</code> is an integer, you'll prefer using <code>%d</code> instead of <code>%s</code> (strings) in your print call.</p>

<pre><code>mytext = 'You are %d years old.'
</code></pre>

<p>It is also recommended that you put all <em>level-0</em> code under a <code>__name__ == '__main__'</code> condition, to avoid having it launched later when you import this module. This is a good habit to take, you can read about it in the brand new StackOverflow Documentation <a href="https://stackoverflow.com/documentation/python/1223/the-name-special-variable/4003/name-main#t=201607221246002740877">here</a>.</p>

<pre><code>if __name__ == '__main__':
    # do stuff
</code></pre>

<p>Finally, the limit age (18), is what we call a <a href="https://stackoverflow.com/q/47882/5018771">magic number</a>. It should be avoided, if you plan on making your code grow, and replaced by a meaningful constant.</p>

<pre><code>#at the beginning
LIMIT_AGE = 18

#your 'if' statement
if age &lt; LIMIT_AGE:
    ...
</code></pre>

<h1>Altogether</h1>

<pre><code>from datetime import date


LIMIT_AGE = 18    


def ask_for_birth_year():
    while True:
        try:
            nb = int(raw_input('Enter Year Of Birth: '))
            if nb &lt; 0:
                print('Invalid year')
            else:
                break
        except ValueError:
            print('This is not a number, try again.')
    return nb


def print_message(age):
    mytext = 'You are %d years old.'
    print(mytext % age)
    if age &lt; LIMIT_AGE:
        print('YOU SHALL NOT PASS!')
    else:
        print('Welcome To The Portal.')


if __name__ == '__main__':
    year_of_birth = ask_for_birth_year()
    current_year = date.today().year
    age = current_year - year_of_birth
    print_message(age)
</code></pre>
    </div>