<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>var minify = require('html-minifier').minify;
const fs = require('fs');
var dir = './minifiedHTML';
</code></pre>

<p>Try consistently using <code>const</code>, <code>let</code> or <code>var</code> when declaring variables. Also, try using <code>const</code> first. That way, you're ensured that you are always dealing with the same thing through that variable throughout the lifetime of the app, and that any attempts to replace it would warn you. Use <code>let</code> if the value needs replacing (i.e. a counter) and <code>var</code> if the variable has to be function-scoped.</p>

<pre><code>fs.writeFile('minifiedHTML/minified.html', result, (err) =&gt; {  
  // throws an error, you could also catch it here
  if (err) throw err;

  // success case, the file was saved
  console.log('HTML file saved!');
});
</code></pre>

<p>You're using synchronous APIs for everything except when writing to the file. I recommend also using the synchronous version of writing to a file, <code>fs.writeFileSync()</code> to keep it consistent. Your script is simple, and it's not blocking anything else, so making everything synchronous should be fine.</p>

<p>I'm making a big guess. You're trying to embed this HTML in JSON or JavaScript, and you're escaping the quotes so that it won't terminate the script mid-string. If possible, don't embed HTML (or any arbitrary string really). Just have it carry data, and let the receiving page do the rendering instead. Or you could encode the data in base64 so that it doesn't have quotes at all.</p>

<hr>

<p>My initial guess was not that far from the intended goal. Building JSON with HTML content IS NOT an issue if you're building the JSON correctly. <code>JSON.stringify()</code> will correctly escape content that would otherwise break the resulting JSON (i.e. it will escape quotes). The only time escaping becomes an issue is when you're building the JSON <em>manually</em>.</p>

<p>Do NOT do the following:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const title = 'your title'
const subject = 'your subject'
const html = '&lt;html lang="en"&gt;&lt;body class="has-content"&gt;Hello, World!&lt;/body&gt;&lt;/html&gt;'
const json = `{ "title": "${title}", "subject": "${subject}", "html": "${html}" }`

console.log('Invalid JSON:', json)

// This will blow up
console.log('Test parse', JSON.parse(json))</code></pre>
</div>
</div>


<p>Instead, use <code>JSON.stringify()</code>:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const title = 'your title'
const subject = 'your subject'
const html = '&lt;html lang="en"&gt;&lt;body class="has-content"&gt;Hello, World!&lt;/body&gt;&lt;/html&gt;'
const json = JSON.stringify({ title, subject, html })

console.log('Valid JSON:', json)
console.log('Test parse', JSON.parse(json))</code></pre>
</div>
</div>

    </div>