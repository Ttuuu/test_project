<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Thanks to @Peilonrayz for the original answer, but I figure it's worth including a more complete version of the working function:</p>
<pre class="lang-py prettyprint-override"><code>from types import LambdaType

def get_module_methods(module):
    output = {}
    for name in dir(module):
        obj = getattr(module, name)
        obj_name = getattr(obj, '__name__', '')
        if ((str(obj).startswith('&lt;function')
             and isinstance(obj, LambdaType)) # is a function
            and module.__name__ == getattr(obj, '__module__', '')  # same module
            and name in str(getattr(obj, '__code__', ''))  # not a duplicate
            and "__%s__" % obj_name.strip('__') != obj_name  # not a magic method
            and '&lt;lambda&gt;' not in str(getattr(obj, '__code__'))  # not a lambda
        ):
            output[name] = obj
    return output
</code></pre>
<p>Lambda detection taken from <a href="https://stackoverflow.com/questions/56451020/is-there-any-way-to-tell-if-a-function-object-was-a-lambda-or-a-def">this Q&amp;A</a>. Note that we can omit the <code>isinstance(obj, LambdaType)</code> typecheck, but with caveats:</p>
<ul>
<li><code>str(obj).startswith('&lt;function')</code> is insufficient to tell whether <code>obj</code> is a function, since we can define a class whose <code>__str__</code> returns <code>'&lt;function'</code> (as pointed by Peilonrayz). However, <code>__str__</code> is effective on a class <em>instance</em>, which fails the <code># not a duplicate</code> check - so we can "luck out". This is unlikely in practice, but here's where a typecheck may be necessary:</li>
</ul>
<pre class="lang-py prettyprint-override"><code>class Dog():
    def __init__(self):
        self.__name__ = 'd'
d = Dog()
</code></pre>
<hr>
<p><strong>Edit</strong>: changed <code># not a duplicate</code> check, which would falsely exclude <code>not_lambda</code>.</p>
    </div>