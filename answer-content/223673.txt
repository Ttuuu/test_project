<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>And here is an example of approaching it from the "other" side.
Algorithm here would be:</p>

<p>Input: binary numbers: [1, 0], [1, 1, 1]</p>

<p>Output: Sum of inputs as binary number: [1, 0, 1]</p>

<p>Algorithm:</p>

<ol>
<li>Convert binary to base 10 digit, ex: [1, 1, 1] -&gt; 7, [1, 0] -&gt; 2</li>
<li>Add them: 7 + 2 -&gt; 9</li>
<li>Convert to binary: [1, 0, 0, 1] </li>
</ol>

<p>Implementation:</p>

<pre><code>  def binary_sum(*numbers):
      stringify = lambda digits: ''.join(map(str, digits))  
      numbers = [stringify(n) for n in numbers] 

      to_base10 = lambda digits: int(digits, 2)
      to_base2 = lambda number: [int(d) for d in bin(number)[2:]] # bin(9) -&gt; '0b1001', thus cut first two chars

      base10_sum = sum([to_base10(n) for n in numbers]) # 1 + 2 step
      return to_base2(base10_sum) # 3 step
</code></pre>
    </div>