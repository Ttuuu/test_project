<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, welcome to CodeReview!</p>

<p><em>I'd like to know what the common best practices are when working on a project</em></p>

<ol>
<li><p><strong>naming</strong></p>

<p>It has been mentioned in the comments by @mast, naming is a very important part of coding. Would you still understand this code after a hiatus of a few months? I have a hard time understanding the code as is. I would have been able to give a better review if your code was more readable. <em>Good</em> code should be readable at first glance, the below variables have no meaning for me...</p>

<blockquote>
<pre><code>bsd = 1
bx = W/2
by = H/2
bw = W/65
bxv = H/60
bxv = -bxv
byv = 0
</code></pre>
</blockquote></li>
<li><p>Divide code into more <strong>functions/classes</strong>!</p>

<p>You say you want to make it run by an AI... as is, your code would require a heck of a rewrite. But if you would have divided your code into more functions,  the AI can reuse a lot of the functions you created for a single player game, and thus making your code easier to maintain, or add functionality.</p>

<p>What functions/classes should a game of pong have?</p>

<ul>
<li><p>a Player (class) &lt;-- This player class can be used by both Players.</p>

<pre><code>class Player:
    """A player class
       name: a string of the Players name
       paddle_x: an int of the players paddle x position
       paddle_y: an int of the players paddle y position
       score: The score of the player
       movement_keys: list of Keys used to move the player [pygame.K_DOWN, ...]"""
    def __init__(self, name, paddle_x, paddle_y, score, movement_keys):
        pass

    def move(self, dy):
        pass

    def draw_paddle(self):
        pass
</code></pre></li>
<li><p>a Pong enviroment (class)</p>

<pre><code>class Pong:
    def __init__(self, players):
        pass

    def start_game(self):
        pass

    def reset_game(self):
        pass
</code></pre></li>
</ul>

<p>Using a structure like this will improve the code alot, and adding an AI (or other improvements will be easier after this)</p></li>
<li><p>Avoid working in the global namespace</p>

<p>This point is interwoven with <em>dividing the code into functions/classes</em>, see <a href="http://wiki.c2.com/?GlobalVariablesAreBad" rel="noreferrer">this link</a> as to WHY working in the global namespace is considered bad.</p></li>
<li><p>Wrap up your code into a <code>if __name__ == "__main__":</code> guard. </p>

<p>This will make your code be runnable from the command line, while also be able to be imported into other scripts</p></li>
</ol>
    </div>