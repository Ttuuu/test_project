<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In this code:</p>

<pre><code>def __init__(self, guessed_word, guess_count, used_letters):
    self.guess_count = guess_count
    self.guessed_word = guessed_word
    self.used_letters = used_letters
</code></pre>

<p><code>used_letters</code> should not be passed as an argument, nor should it be constructed as a <code>list</code> in <code>game_init</code>. Just construct it in <code>__init__</code>. Also, it should be a <code>set</code> instead of a <code>list</code> for efficiency.</p>

<p>Similarly, rather than <code>guessed_word</code> being initialized in <code>game_init</code>, it should be initialized in <code>Player.__init__</code>. You can pass <code>game_word</code> to <code>__init__</code>, and then in there, you can write</p>

<pre><code>guessed_word = '-' * len(game_word)
</code></pre>

<p>As for <code>guess_count</code>, the name is a little confusing, because it isn't strictly "guess count", but rather "remaining guesses".</p>

<p>This:</p>

<pre><code>if choice == "y":
    return True
return False
</code></pre>

<p>can be abbreviated to</p>

<pre><code>return choice == 'y'
</code></pre>

<p>but you should also convert <code>choice</code> to lowercase before doing that comparison.</p>

<p>This loop:</p>

<pre><code>    while True:
        game_round(game, player)  # player makes a guess
        if not end_condition(game, player):  # if game not over, player makes another guess
            continue
        break
</code></pre>

<p>can be abbreviated to</p>

<pre><code>while not end_condition(game, player):
    game_round(game, player)
</code></pre>

<p>These lines:</p>

<pre><code>print("".join(player.guessed_word))
print("Letters used: " + " ".join(player.used_letters))
print("Number of tries left: " + str(player.guess_count))
</code></pre>

<p>should be moved to a method of <code>Player</code>, perhaps called <code>print_round</code>.</p>

<p>This:</p>

<pre><code>word_file = open("words.txt")
game_word = random.choice(word_file.readlines())
game_word = game_word.strip().lower()
word_file.close()
</code></pre>

<p>should have <code>word_file</code> in a <code>with</code> statement, rather than an explicit close.</p>

<p>More generally, you're using <code>Game</code> and <code>Player</code> as C struct-like objects with no methods. You should make an attempt to convert them to true classes with methods on the objects, rather than global methods that operate on the class member variables.</p>
    </div>