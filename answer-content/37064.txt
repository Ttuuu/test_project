<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, thumbs up for solving this problem in a function rather than in <code>main()</code>.  I would declare this as a <code>static</code> function, though, since it is a pure function that does not rely on any instance variables in an object.</p>

<p>I see two main problems:</p>

<ol>
<li>If <code>str</code> has fewer than two characters, you'll get an <code>IndexOutOfBoundsException</code>.</li>
<li>Your strategy doesn't "scale" well, since you are attempting to enumerate all possible combinations of how the string can begin.   If you also took into consideration the possibility of <code>str</code> having fewer than two characters, you would end up with a combinatorial explosion.</li>
</ol>

<p>I recommend a different approach, which mimics the problem description more closely.  As you analyze <code>str</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html" rel="noreferrer">build</a> the string that you want to return.  For example, if the string length exceeds 0 and the first character is <code>'a'</code>, then append <code>'a'</code> to your result.</p>

<p>Instead of extracting substrings of length 1, I suggest fetching a character by calling <code>string.charAt(index)</code>.</p>
    </div>