<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;memory&gt;
#include &lt;utility&gt;
#include &lt;stdexcept&gt;
#include &lt;iosfwd&gt;
#include &lt;type_traits&gt;
#include &lt;ostream&gt;
#include "SingleLinkedList.h"
#include "DoubleLinkedList.h"
</code></pre>

<p>Why is all of that in your main.cpp file? You have no includes in your header file. I looked back at your previous implementations and you don't seem to have includes in any of those header files either. I'm guessing here but I believe you are relying on inclusion dependency for your implementation to work. Move your user defined header to the top of the include list and it will break functionality. Header files should be self-contained such that if I want to use your class it won't matter what order I declare it and I won't have to declare it's dependencies.</p>

<p>Your solution should be twofold. </p>

<ol>
<li>Move all the required includes into your header file.</li>
<li>Order your includes from local to global scale.</li>
</ol>

<p>What I mean by 2 is this:</p>

<blockquote>
  <ol>
  <li>h file corresponding to this cpp file (if applicable)</li>
  <li>headers from the same component,</li>
  <li>headers from other components,</li>
  <li>system headers.</li>
  </ol>
</blockquote>

<p>Taken verbatim from this <a href="https://stackoverflow.com/a/2762596/5416291">answer</a>.</p>

<p>It is also often recommended to sort headers alphabetically within each category.</p>

<p>*You also don't need <code>"SingleLinkedList.h"</code> in your Double linked list example usage file.</p>
    </div>