<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here's a more functional approach you might like:</p>

<pre><code>function trappedWater(heights) {
  const maxSoFar = arr =&gt; arr.reduce((m, x) =&gt; m.concat(Math.max(...m, x)), [])
  const leftWall = arr =&gt; [0, ...maxSoFar(arr).slice(0, -1)]
  const l = leftWall(heights)
  const r = leftWall(heights.reverse()).reverse()
  return heights.reduce((m, h, i) =&gt; m + Math.max(0, Math.min(l[i], r[i]) - h), 0)
}
</code></pre>

<p><a href="https://tio.run/##fVCxTsQwDN3zFR5jkYtamGFkY2K4oeoQtb5rUJpUbno6CfHtxe1BKyRgiGP5@b28lzd3cWPDfsiHmFqa59MUm@xThMxuGKg9ukysO/LnLo8I7wqgSXHM0Lvra3p2DI/gWOrTclmmdmpI697AFZdhb2W9cVm/uNxZIWlr7YqigarGTS/QKR9dCLteVRhYlr8e0jJGOwYv@oIcSqx3srC@BTazG8q/oOL0QjySRtxbYTDliSPsW1uezoC/RYI72NKIk1vvow6Vrw2wVIQDdBKwQPWhlI/DlMWDBCpNYe7XWpqHtZNTK7UYTYFsSGf94@dXLuLfC/KH/6HFAs/zJw" rel="nofollow noreferrer" title="JavaScript (Node.js) â€“ Try It Online">Try it online!</a></p>

<p>The main difference is that we first calculate the left "wall" height and the right "wall" height for every index, using the same <code>leftWall</code> function, which itself uses a   "scan sum" utility function, and noticing that the <code>rightWall</code> values can be calculated using the <code>leftWall</code> function, by applying <code>reverse</code> to both the input and the output.</p>

<p>The amount of water at any index is then the minimum of the left and right wall heights minus the height at the point, or zero if that quantity is negative.  Then we just sum all of those.  </p>
    </div>