<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I tried several different approaches and the problem is - string manipulation is just slower than arithmetic.</p>

<p>Note: I refactored the check into a function because it is good practice in that it creates smaller pieces of code whose functions are then more easily understood.</p>

<pre><code>import java.sql.Date;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;

public class FirstChallenge {

    private static int lastNumberFound;

    public static void main(String[] args) 
    {
        long inicio = System.currentTimeMillis();

        int removedNumbers = 0;
        int numberQuantity = 10000000;

        int cont;
        for (cont = 1; removedNumbers &lt;= numberQuantity; cont++) {
            if (go(cont)) {
                removedNumbers++;
                if(removedNumbers == numberQuantity){ // can not find numbers (3, 4, 7)
                    lastNumberFound = cont; 
                }
            }
        }       

        DecimalFormat dfmt = new DecimalFormat("0");

        System.out.println(dfmt.format(lastNumberFound));

        long fim  = System.currentTimeMillis();
        System.out.println(new SimpleDateFormat("ss.SSS").format(new Date(fim - inicio)));
    }

    private static boolean go(int i) {
        int j = i;
        while (j &gt; 0) {
            int d = j % 10;
            if (d == 3 || d == 4 || d == 7) return false;
            j = j / 10;
        }
        return true;
    }
}
</code></pre>

<p>The result I got:</p>

<pre><code>180999565
01.134
</code></pre>

<p>Notice that the time is less than 1/5th the time of the other algorithm.</p>
    </div>