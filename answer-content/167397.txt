<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The first important rule of thumb is always: If possible use libraries that deal with your problem. Probably there is a calendar library, or you can use whitespace CSV printing to print column wise oriented text.</p>

<p>Under the assumption that you want to implement it without libraries there are some improvements. Some of them are very general, some are python specific.</p>

<ol>
<li>Formatting (python specific)</li>
</ol>

<p>Read the <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">pep 8 style guide</a> and format your code appropiately.</p>

<ol start="2">
<li>Separate functionality</li>
</ol>

<p>It is always a good idea to have separate functions for separate operations like reading input, calculating, outputting results...</p>

<ol start="3">
<li>Less global state</li>
</ol>

<p>If you use functions write them in a way, that you don't need global variables.</p>

<ol start="4">
<li>Use list comprehensions (python specific)</li>
</ol>

<p>Just like dictionaries in the answer of Ludisposed list comprehensions are bread and butter in python. It helps to get familiar with them early.</p>

<ol start="5">
<li>Self documenting code + better variable names</li>
</ol>

<p>There is a simple rule: avoid comments!</p>

<p>If you have a line like the following:</p>

<pre><code>n = int(input('Enter number of days in a month: ))#days in a month
</code></pre>

<p>The user won't know, if it is the number of days in a week or in a month, because the user should not be forced to look into your source code.</p>

<p>If you write instead:</p>

<pre><code>n = int(input('Enter number of days in a month:))
</code></pre>

<p>You don't need comments in the source code and the user knows what to type.
One could argue that this should be even extended:</p>

<pre><code>n_days_in_month = int(input('Enter number of days in a month:))
</code></pre>

<p>Then you definitely won't need a comment even lateron.</p>

<p>Taking everything into account you can rewrite it like this:</p>

<pre><code>days = ['Su','M','T','W','Th','F','Sa']

def get_user_input():
    while True:
        message = 'Enter number of days in a month (has to be between 1 and 31): '
        n_days_in_month = int(input(message))
        if 1 &lt;= n_days_in_month &lt;= 31:
            break
    while True:
        message = "The first day of the week (has to be one of the following {}): ".format(days)
        first_day = input(message)
        if first_day in days:
            break
    return n_days_in_month, first_day

def reshape(n_days_in_month, first_day):
    i = days.index(first_day)
    n_weeks = (n_days_in_month // 7) + 1 + i
    rows_of_days = []
    rows_of_days.append(['' for _ in range(i)] + list(range(1, 7 - i + 1)))
    last = 7 - i + 1
    for week in range(1, n_weeks):
        rows_of_days.append(range(last, min(last + 7, n_days_in_month + 1)))
        last += 7 
    return rows_of_days

def output_calendar(rows_of_days):
    print(*['{:&gt;3}'.format(x) for x in days])
    for row in rows_of_days:
        print(*['{:&gt;3}'.format(x) for x in row])

n_days_in_month, first_day = get_user_input()

output_calendar(reshape(n_days_in_month, first_day))
</code></pre>
    </div>