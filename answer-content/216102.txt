<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are inconsistent with your brace and indentation style. If in doubt, pick an auto-formatter and work with that. Most IDEs come with one, just use that for the beginning.</p>

<hr>

<pre><code>public class StacksForTwo
</code></pre>

<p>That's a bad name for the class. A "pair" is a better word to use.</p>

<hr>

<pre><code>int size;
int[] stack;
int top1;
int top2;
</code></pre>

<p>Why are these variables package-private?</p>

<hr>

<pre><code>public StacksForTwo(int arraysize)
</code></pre>

<p><code>arraysize</code> is an incorrect name for this variable, <code>size</code> would be correct as that an array is being used is only an implementation detail and should not be shown through the API.</p>

<pre><code>public StacksForTwo(int size) {
    this.size = size;
    ...
</code></pre>

<p>Also it should be made clear that the size is the size for <em>all</em> items.</p>

<hr>

<pre><code>public void push1(int x)
</code></pre>

<p><code>x</code> is a bad name for this variable, it should rather be <code>item</code> or <code>value</code>.</p>

<hr>

<pre><code>System.out.println("stackoverflow");
</code></pre>

<p>It would be better to throw an exception in this case.</p>

<hr>

<pre><code>public void pop1()
...
    System.out.println("The popped out number is"+" "+stack[top1+1]);
</code></pre>

<p>This method should return the popped number and leave the printing to the outside code.</p>

<hr>

<pre><code>top1--;
System.out.println("The popped out number is"+" "+stack[top1+1]);
</code></pre>

<p>For easier reading, you can roll that into one operation:</p>

<pre><code>return stack[top1--];
</code></pre>

<hr>

<pre><code>System.out.println("stack underflow");
</code></pre>

<p>This should also be an exception.</p>

<hr>

<pre><code>public void display()
{
    System.out.println(Arrays.toString(stack));
}
</code></pre>

<p>That should be the overridden <code>toString</code> method.</p>

<hr>

<pre><code>public static void main(String[] args)
</code></pre>

<p>Ideally, your main class is a different one.</p>

<hr>

<pre><code>StacksForTwo sft = new StacksForTwo(10);
</code></pre>

<p>Please don't go fancy with names, always pick the stupid and simple ones, like <code>stacksForTwo</code> or <code>stacks</code>. Down in a 1000+ line method, having to work with shortened names and/or acronyms as names is a nightmare you don't want to find yourself, because you constantly have to map the names to something that makes sense for you.</p>
    </div>