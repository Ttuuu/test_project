<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>// a.compareTo(b) returns 0 if a == b
</code></pre>

<p>That's a JavaDoc description, so put it between <code>/**</code> and <code>*/</code> and before the method. We never document anything on the next line. Preferably comments are before a code line, and sometimes behind it.</p>

<pre><code>class TreeNode { // This is the separate class for node
</code></pre>

<p>The class should probably be a <code>static class</code> within the <code>Table</code> class instead. We try and only use one class per file in Java (and only one <code>public</code> class is actually allowed). You are using <code>public</code> fields, but that's not a good idea; you can give them package access level (no modifier) as long as you don't expose such an implementation class.</p>

<pre><code>public Sortable _data; // this is the data variable
</code></pre>

<p>In Java we never start any data, including fields, with an underscore. Besides that, it is no different than <code>left</code> and <code>right</code>.</p>

<pre><code>private TreeNode _root = null; // This is the table class with only data member head
</code></pre>

<p>Wrong place to document <code>Table</code>, again, JavaDoc. Fields are assigned <code>0</code>, <code>0.0</code> or indeed <code>null</code> by default, so there is no reason to do that explicitly.</p>

<p>int compare = 0;</p>

<p>This is a common mistake. The first thing you do with the variable is to assign it a value. In that case there is absolutely no need to assign it zero - and it might even hide errors later on.</p>

<pre><code>if (compare == 0)
    return;
</code></pre>

<p>Always put code blocks between braces. Put an empty between the <code>if</code> and the next if so they don't look part of the same branching instruction.</p>

<pre><code>TreeNode add = new TreeNode();
</code></pre>

<p><code>add</code> is not a good name for a variable. First of all, it's a verb, and variables are not actions. Try <code>nodeForItem</code>.</p>

<pre><code>add.left = add.right = null;
</code></pre>

<p>A maximum of one assignment per line should be used.</p>
    </div>