<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Don't </p>

<pre><code>using namespace std;
</code></pre>

<p>This doesn't do what you want (only first one works):</p>

<pre><code>    //Whitelist
    Whitelist = "Fred267s", "Seb4572s", "Popp4593s";

    //Check if username is on whitelist
    if (Username == Whitelist){

</code></pre>

<p>[It's also a VERY dodgy access control mechanism!]</p>

<p>I don't like asking user for a string describing the "Formula". How does the user know they should type "Wolt"? What if they type "wolt" instead? I think it would be more reasonable to show 3 choices:</p>

<pre><code>1 - Wolt    2 - Amp    3 - Ohm

Please Enter (1-3): 
</code></pre>

<p>And then clean the user input checking if it is a valid integer between 1-3 and then represent the choice internally using a <a href="https://en.cppreference.com/w/cpp/language/enum" rel="noreferrer">Class enum</a> in your code. </p>

<p>This will open up a range of oppotunities to <strong>use functions</strong> in your code. </p>

<pre><code>
enum class Formula ( wolt = 1, amp = 2, ohm = 3 );

...

Formula prompt_formula() {
  // code to read from std::cin clean input and cast to enum class
}
</code></pre>

<p>Then try to find a way to add even more structure to your program rather than one huge if/elseif/else statement. I am not going to give you the code, because that would defeat the purpose, but your <code>main</code> function should be more like this:</p>

<pre><code>int main() {
  explain_usage();
  Formular form = prompt_formular();
  auto [label, answer] = compute(form);
  print_answer(label, answer);
}
</code></pre>

<p>I could go on, but that's probably plenty to get on with for now.</p>
    </div>