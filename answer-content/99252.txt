<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Everybody is talking about your algorithm, but everybody does the same mistake.</p>

<p>Repeated code! Yeah, you have repeated code.</p>

<p>Look at the following lines:</p>

<pre><code>var str1 = this.word1.toLowerCase().split('').sort().join('').trim();
var str2 = this.word2.toLowerCase().split('').sort().join('').trim();
</code></pre>

<p>Just look how long that is! And repeated! Move that to a new function:</p>

<pre><code>var regularize = function(str) {
    return str.toLowerCase().split('').sort().join('').trim();
}
</code></pre>

<p>And now you can do like this:</p>

<pre><code>var str1 = regularize(this.word1);
var str2 = regularize(this.word2);
</code></pre>

<p>But you have this a few lines below:</p>

<pre><code>if (str1 === str2) {
    this.isAnagram = true;
} else {
    this.isAnagram = false;
}
</code></pre>

<p>So, you don't need those variables or anything... Cleaning up, you can just do:</p>

<pre><code>this.isAnagram = regularize(this.word1) == regularize(this.word2);
</code></pre>

<hr>

<p>As suggested many times before, you can do some cleanup to the string. Regular expressions come to my mind. Based on <a href="https://codereview.stackexchange.com/a/99248/53773">@Tushar's answer</a>, I came up with this:</p>

<pre><code>var regularize = function(str) {
    return str.toLowerCase().replace(/[^a-z\d]/g,'').split('').sort().join('');
}
</code></pre>

<hr>

<p>All assembled together:</p>

<pre><code>var regularize = function(str) {
    return str.toLowerCase().replace(/[^a-z\d]/g,'').split('').sort().join('');
}
this.isAnagram = regularize(this.word1) == regularize(this.word2);
</code></pre>

<p>Pretty short, isn't it?</p>
    </div>