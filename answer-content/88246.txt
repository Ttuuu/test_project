<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here is one way to make it more portable and robust:</p>

<pre><code>add2path() {
  if ! echo "$PATH" | PATH=$(getconf PATH) grep -Eq '(^|:)'"${1:?missing argument}"'(:|\$)' ; then # Use the POSIX grep implementation
    if [ -d "$1" ]; then # Don't add a non existing directory to the PATH
      if [ "$2" = front ]; then # Use a standard shell test
        PATH="$1:$PATH"
      else
        PATH="$PATH:$1"
      fi
      export PATH
    fi
  fi
}
</code></pre>

<p>I have added a test to quit the function with an error should no argument be passed.</p>

<p><code>PATH=$(getconf PATH)</code> is the portable way to have the POSIX commands first in the PATH. This is solving the issue you had with Solaris where, not to break existing Solaris scripts portability, the first <code>grep</code> command found in the PATH is not POSIX compliant.</p>

<p>Using <code>[[</code> is not specified by POSIX so it is better to stick with <code>[</code> to do tests.</p>

<p><code>$2</code> should then be quoted to avoid clashes with <code>[</code> operands.</p>

<p><code>front</code>, being a constant string, need not be quoted.</p>

<p>Excluding non directories to be added looks to me a reasonable approach but is of course an optional extension which you might remove.</p>
    </div>