<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Easiest thing you can do is properly name your variables and add comments.</p>

<p>Seeing things like this is very frustrating:</p>

<pre><code>aIndex.push(k);
vMatched = k;
</code></pre>

<p>It's completely meaningless except to the developer who wrote it. It's a form of hungarian notation, except nothing is preventing you from making <code>aIndex</code> a String instead of an Array or <code>vMatched</code> and array instead of a var. (I'm assuming <code>v</code> is for var, which is also a hint this naming style isn't going to work here).</p>

<p>I'd expect for-loops to start using <code>i</code> not <code>k</code>. No need to declare it at the top either. You should always declare variables in the most local scope.</p>

<p>Here you're adding the numbers <code>0-a</code> onto a list. You don't need to do that since you already have <code>a</code>. If you need to store the length at that time, you can.</p>

<pre><code>for (var a = 0; a &lt; this.getView().byId("monTable").getItems().length; a++) {
    aIndex.push(a);
}
</code></pre>

<p>In your nested loops it looks like you are getting the indexes that match based on a criteria. You should really do this in a method, hopefully with comments to make it easier to read. You can use lambdas expressions if you're comfortable with them. However without better context I cannot provide a concrete alternative.</p>

<p>You should use a method for getting the min/max amounts from an array. Methods make everything easier to read &amp; easier to refactor.</p>

<p>You can use <code>Arrays.sort()</code> then take the first / last item of the array to get the min/max.</p>
    </div>