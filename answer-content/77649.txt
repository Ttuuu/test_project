<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't see much reason to worry about this method's length. At least not right now - if you add more event handling, yeah, it might become a little cumbersome. But for what it does now, there's no pressing need to do anything.</p>

<p>I would recommend more whitespace, though. There's no reason to compress,every,line,that,has,commas,in,it. Just makes it harder to read.</p>

<p>I'm also fairly sure that the <code>:finished</code> event is actually called <code>:finish</code></p>

<p>Structurally, just for the sake of it, you could do something like:</p>

<pre><code>class Uploader
  attr_reader :host, :user, :password

  def initialize(host, user, password)
    @host = host
    @user = user
    @password = password
  end

  def upload(local_file_path, remote_file_path)
    Net::SFTP.start(host, user, password: password) do |sftp|
      sftp.upload!(local_file_path, remote_file_path) do |event, uploader, *args|
        send(event, uploader, *args) if respond_to?(event, true)
      end
    end
  end

  private

  def open(uploader, *args)
    Rails.logger("Starting upload...")
  end

  def close(uploader, *args)
    Rails.logger("Upload complete")
  end

  def finish(uploader, *args)
    Rails.logger("All done")
  end
end
</code></pre>

<p>Basically, we're handling events with methods instead of a <code>case</code> block. I've added the <code>close</code> method/event handler as an example.</p>
    </div>