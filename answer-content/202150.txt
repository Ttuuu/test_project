<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I concur with <a href="https://codereview.stackexchange.com/users/177797/adam">@adam</a> - in <a href="https://codereview.stackexchange.com/a/202147/120114">his answer</a> the main point is correct: there is a lot of redundancy and the D.R.Y. principle should be respected. Not only does it apply to the JavaScript but also the PHP &amp; SQL code. </p>

<p>I would suggest doing one single query at the start of the script to get all records of countries along with Region, ordering by Region:</p>

<pre><code>$sql = "SELECT DISTINCT Region, Country
FROM DATABASE
WHERE Display='Y'
ORDER BY Region ASC, Country  ASC";
</code></pre>

<p>Then group the data by Region:</p>

<pre><code>$dataByRegion = array();

if (($result = sqlsrv_query(true, $sql)) !== false)
{
    while ($obj = sqlsrv_fetch_object($result)) 
    {
        $dataByRegion[$obj-&gt;Region][] = $obj;
    }    
}
</code></pre>

<p>That way when creating table cells, you can check if each region has country records to display using <a href="http://php.net/array_key_exists" rel="nofollow noreferrer"><code>array_key_exists()</code></a> and <a href="http://php.net/count" rel="nofollow noreferrer"><code>count()</code></a>:</p>

<pre><code>&lt;?php
foreach(array('EMEA', 'APAC', 'CALA') as $region) //could also use array_keys($dataByRegion)
{
    if (array_key_exists($region, $dataByRegion) &amp;&amp; count($dataByRegion[$region])) 
    {
?&gt;    
 &lt;td  width="20%" valign="Top" align="Left"&gt;
     &lt;p id="text&lt;?=$region?&gt;" class="region &lt;?=$region?&gt;" style="display:none"&gt;
     &lt;input type="checkbox" class="checkAll"&gt; &lt;?=$region?&gt; All / None&lt;br&gt;&lt;br&gt;
     &lt;?php   
       foreach ($dataByRegion[$region] as $obj)
       {
         $Country = ($obj-&gt;Country);
         echo '&lt;input type="checkbox" class="CouCheck '.$region.'"  name="country[]" value="'.$Country.'" &gt;'.$Country.'&lt;br&gt;';
       } //end foreach obj
     } //end if array_key_exists &amp;&amp; count
     ?&gt;
   &lt;/p&gt;
 &lt;/td&gt; 
&lt;?php
}
</code></pre>

<p>Then in the Javascript code:</p>

<ol>
<li><p>Wait for the DOM to be ready - use <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener" rel="nofollow noreferrer"><code>document.addEventListener()</code></a> to wait for the <a href="https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded" rel="nofollow noreferrer"><code>DOMContentLoaded</code></a> event:</p>

<pre><code>document.addEventListener('DOMContentLoaded', function() {
    //add event delegate
});
</code></pre></li>
<li>Take out code from HTML e.g. <code>onclick</code> and add event handlers in Javascript  - e.g. <code>document.body.addEventListener('click', function(event) {  } );</code>. That way if a function name and/or signature changes, only other Javascript code will need to be updated (hopefully in one spot), instead of needing to update a bunch of elements in the HTML.</li>
<li>Use <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes" rel="nofollow noreferrer">data attributes</a> or class names to add the region names and bind those on the checkboxes for the countries.</li>
<li><p>Instead of using <code>document.querySelectorAll()</code> just to get elements by class name, as in</p>

<blockquote>
<pre><code>var allCB = document.querySelectorAll("input[class='CouCheckAPAC']");
</code></pre>
</blockquote>

<p>one could use <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName" rel="nofollow noreferrer"><code>document.getElementsByClassName()</code></a> which would be quicker. But instead of querying the DOM, one could also utilize the form property <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/forms" rel="nofollow noreferrer"><code>document.forms</code></a> at index <code>0</code> (unless there are multiple forms- then use whatever index is necessary or a name) and then the <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements" rel="nofollow noreferrer"><code>.elements</code></a> property. I would suggest selecting all country checkboxes at the start of the Javascript and then when needed, filtering to the checkboxes necessary. For that, use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from" rel="nofollow noreferrer"><code>Array.from()</code></a> to get an array from <code>document.forms[0].elements['country[]']</code></p>

<pre><code>var countryCheckboxes = Array.from(document.forms[0].elements['country[]']);
</code></pre></li>
<li><p>Eliminate other repeated code- e.g.:</p>

<blockquote>
<pre><code>if (AllEMEAChecked.checked == true){
  for(var i=0; i&lt; allCB.length; i++){
    allCB[i].checked=true;
  }
}
else{
  for(var i=0; i&lt; allCB.length; i++){
    allCB[i].checked=false;
  }
 }
</code></pre>
</blockquote>

<p>Utilize <code>AllEMEAChecked.checked</code> inside the loop and just use one loop:</p>

<pre><code>for(var i=0; i&lt; allCB.length; i++){
  allCB[i].checked=AllEMEAChecked.checked;
}
</code></pre></li>
</ol>

<p>See <a href="https://www.tehplayground.com/FI5kpU0jz949NICq" rel="nofollow noreferrer">This PHP playground example</a> for a starter rewrite - the select all checkboxes above each region aren't working but that can be an exercise to the reader.</p>
    </div>