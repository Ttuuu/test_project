<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not sure why the script is slow... One might need to do some debugging to narrow down the timing to individual requests. Because this is the Code Review site, I will provide feedback and offer suggestions below.</p>

<h2>SQL injection</h2>

<p>The code is open to SQL injection, given that the SQL statements are executed with values coming straight from the super global <code>$_GET</code> without any filtering. While it is good that mysqli is used instead of the deprecated mysql library, PDO may be better as it may streamline the execution of statements. But nevertheless, it is recommended that you use bound parameters (e.g. with <a href="https://www.php.net/manual/en/mysqli-stmt.bind-param.php" rel="nofollow noreferrer"><code>bind_param()</code></a>) for the values instead of inserting them straight into the queries.</p>

<h3>Multiple versions of jQuery added</h3>

<p>I see 5 <code>&lt;script&gt;</code> tags and 4 of them appear to be different versions of jQuery</p>

<blockquote>
<pre><code>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.2.1.min.js"&gt;&lt;/script&gt;
&lt;script src="https://code.jquery.com/jquery-1.12.4.js"&gt;&lt;/script&gt;
&lt;script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"&gt;&lt;/script&gt;
&lt;script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"&gt;&lt;/script&gt;
</code></pre>
</blockquote>

<p>You should be able to remove the older versions to reduce loading time/size for users of your page.     </p>

<h2>jQuery DOM ready syntax</h2>

<p><code>$(document).ready(function() {</code> can be changed to <code>$(function() {</code> because <a href="http://api.jquery.com/ready/" rel="nofollow noreferrer">the documentation for <code>.ready()</code></a> states:</p>

<blockquote>
  <p>jQuery offers several ways to attach a function that will run when the DOM is ready. All of the following syntaxes are equivalent:</p>
  
  <ul>
  <li><code>$( handler )</code></li>
  <li><code>$( document ).ready( handler )</code></li>
  <li><code>$( "document" ).ready( handler )</code></li>
  <li><code>$( "img" ).ready( handler )</code></li>
  <li><code>$().ready( handler )</code></li>
  </ul>
  
  <p>As of jQuery 3.0, only the first syntax is recommended; the other syntaxes still work but are deprecated.<sup><a href="http://api.jquery.com/ready/" rel="nofollow noreferrer">1</a></sup></p>
</blockquote>

<h2>Repeated JS variable</h2>

<p>I see the following line twice:</p>

<blockquote>
<pre><code>var clock;
</code></pre>
</blockquote>

<p>The first one appears to be inside the function <code>clock1</code>, and the second one is outside that function. There isn't much need to re-declare that inside the function.</p>

<h2>JS Selector for clock element</h2>

<p>I see that <code>$('.clock')</code> is used to select the clock element, but there appears to only be one element with that class name:</p>

<blockquote>
<pre><code> &lt;div id="w20" class="clock"  style="position: fixed; top: 20px; left: 60%;"&gt;&lt;/div&gt;
</code></pre>
</blockquote>

<p>You could instead use the id selector for that element: <code>$('#w20;')</code> instead of the class selector... </p>

<h2>code as string passed to setTimeout</h2>

<p>I see this line at the end of the JavaScript function <code>bookSave()</code>:</p>

<blockquote>
<pre><code> setTimeout("self.close()", 2000 ) // after 5 seconds
</code></pre>
</blockquote>

<p>According to <a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout" rel="nofollow noreferrer">the MDN documentation for <code>setTimeout()</code></a>:</p>

<blockquote>
  <p><strong><code>code</code></strong><br>
  An alternative syntax that allows you to include a string instead of a function, which is compiled and executed when the timer expires. This syntax is <strong>not recommended</strong> for the same reasons that make using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval" rel="nofollow noreferrer"><code>eval()</code></a> a security risk.<sup><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Parameters" rel="nofollow noreferrer">2</a></sup></p>
</blockquote>

<p>it would be better to use a function reference, like below:</p>

<pre><code>setTimeout(self.close, 20000 ) //after 5 seconds
</code></pre>

<p>Notice that the function is not invoked (i.e. the parentheses are not added) when passed as a parameter here, lest it be called when the line is executed.</p>

<p><sup>1</sup><sub><a href="http://api.jquery.com/ready/" rel="nofollow noreferrer">http://api.jquery.com/ready/</a></sub></p>

<p><sup>2</sup><sub><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Parameters" rel="nofollow noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Parameters</a></sub></p>
    </div>