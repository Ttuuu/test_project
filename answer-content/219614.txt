<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't see a great deal to refine with this snippet -- good work.</p>

<ul>
<li><p><code>$ticker_stats["quote"],</code> can be safely omitted from the <code>isset()</code> call because the subsequent checks on its subarrays will do the necessary work.  Good work supplying multiple parameters to a single <code>isset()</code> call.</p></li>
<li><p>I may be able to refine the following section, but would need realistic sample input to be sure.</p>

<pre><code>foreach ($raw_sector_array as $ticker =&gt; $ticker_stats) {
    if (isset($sector_mover["selected_tickers"][$ticker], $ticker_stats["quote"], $ticker_stats["quote"]["extendedChangePercent"], $ticker_stats["quote"]["changePercent"], $ticker_stats["quote"]["ytdChange"])) {

        $change_amount = ($ticker_stats["quote"]["extendedChangePercent"] + $ticker_stats["quote"]["changePercent"] + $ticker_stats["quote"]["ytdChange"]) / 200;
        $index_value += $sector_mover["sector_weight"] * $sector_mover["selected_tickers"][$ticker] * $change_amount;
    }
}

$index_data[$sector_mover["sector"]] = array("sector_weight" =&gt; $sector_mover["sector_weight"], "sector_coefficient" =&gt; $sector_mover["sector_coefficient"], "sector_value" =&gt; $index_value);
$index_data["Overall"]["sector_value"] += $index_data[$sector_mover["sector"]]["sector_value"];
</code></pre></li>
<li><p>Rather than performing iterated "guess &amp; check" arithmetic operations to determine the <code>$index_factor</code>, I think a non-iterative string check should be more direct/efficient.  You might write an implementation of Barmar's solution: <a href="https://stackoverflow.com/a/19801446/2943403">PHP - Find the number of zeros in a decimal number</a> or a regex based approach: (though I'll admit it is a little challenging to interpret at a glance)</p>

<pre><code>$float = abs($float);
$factor = pow(10, preg_match_all('~(?:^0?\.|\G(?!^))0~', $float)))
</code></pre>

<p><a href="https://regex101.com/r/SmlRp5/3" rel="nofollow noreferrer">https://regex101.com/r/SmlRp5/3</a></p>

<p>If the above doesn't work for all of your cases (like <code>$float = 0</code>) you can write a earlier condition to shortcut a precise <code>0</code> to not receive a factor - but I reckon that this is not an expected case.</p>

<p></p><h2>Hmm, on second thought, there's greater stability to be had from using pure arithmetic. String-based processes are vulnerable to challenges dealing with scientific notation.</h2> I have added <a href="https://stackoverflow.com/a/55968143/2943403">a new answer</a> to the earlier mentioned StackOverflow page that Barmar answered.</li>
<li><p>For consistency, write all <code>if</code> blocks over multiple lines.  The reduction in lines is not worth the reduction in readability.</p></li>
</ul>

<hr>

<p>Some late advice...</p>

<pre><code>$index_data["Overall"]["sector_value"] += $index_data[$sector_mover["sector"]]["sector_value"];
</code></pre>

<p>Is easier to read as:</p>

<pre><code>$index_data["Overall"]["sector_value"] += $index_value;
</code></pre>
    </div>