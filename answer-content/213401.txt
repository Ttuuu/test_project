<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>When you run Solution 1 with the following parameters:</p>

<pre><code>getRandNotInList(4, [0,1,2,3])
</code></pre>

<p>you quickly get an error, at least in Google Chrome.</p>

<blockquote>
  <p>Uncaught RangeError: Maximum call stack size exceeded</p>
</blockquote>

<p>This is because JavaScript engines typically don't implement tail recursion.</p>

<p>Therefore I prefer Solution 2 over Solution 1, which just leads to an endless loop.</p>

<p>(Note to myself: Don't try endless loops in the browser. Google Chrome will just freeze completely.)</p>

<p>Therefore a proper solution should not end in an endless loop. Just check whether <code>list.length &gt;= n</code> and throw an exception in such a case. If the list should ever contain duplicates that's the problem of the caller.</p>

<pre><code>const getRandNotInList3 = (n, list) =&gt; {
  if (list.length &gt;= n) throw "blacklist must not forbid all possible elements";
  let rand;
  do { rand = Math.floor(Math.random() * n); }
  while(list.includes(rand));
  return rand;
};
</code></pre>
    </div>