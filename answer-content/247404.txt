<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>It will be better practice to url encoding the query string of your <code>$activation_link</code> in case the <code>$fname</code> is not url-compliant.  I recommend <code>http_build_query()</code> -- <a href="https://joomla.stackexchange.com/q/26632/12352">here's a post about the delimiting ampersands</a>.  I will also recommend that you not generate this string until you determine that it is actually needed down script.</p>
</li>
<li><p>It is good that you are properly implementing prepared statements, but your unique email query is fetching more data than you intend to use.  Instead of <code>SELECT *</code> use <code>COUNT(1)</code> or <code>COUNT(*)</code>, and <a href="https://phpdelusions.net/pdo#:%7E:text=%24count,fetchColumn();" rel="noreferrer">fetch that one particular column of the single-row result set</a>.</p>
<pre><code>if ($email_query-&gt;fetchColumn()) {
    $errors[] = "Your email address is associated with another account.";
}
</code></pre>
</li>
<li><p>There is no benefit to re-declaring the email value to the new variable <code>$to</code>, just keep using <code>$email</code> when passing arguments to your <code>mail()</code> function.</p>
</li>
<li><p>I generally advise against declaring "single-use variables".  It can be a good idea when the variable name helps to describe the data, but then if your script needs this kind of meta-detail, then perhaps just use a comment.  In my own project, I'd probably not declare the single-use variables like <code>$hashed_password</code>, <code>$to</code>, <code>$from</code>, <code>$subject</code>, and <code>$body</code>.</p>
</li>
<li><p>You are not <a href="https://stackoverflow.com/q/3186725/2943403">checking for a <code>true</code> response from <code>mail()</code></a>, you may like to check this instead of assuming.  Then again, in all of my projects, I rely upon PHPMailer to do all my mailing functionality -- it is just a better / more robust class to work with.  In the meantime, you might rewrite your <code>mail()</code> call like this:</p>
<pre><code>if (
    !mail(
        $email,
        "Activate your account",
        sprintf(
            'Thank you for creating your account, %1$s.'
            . ' Please click on the following link to activate your account: &lt;a href="%2$s"&gt;%2$s&lt;/a&gt;',
            $fname,
            'https://www.example.com/activate?' . http_build_query(['name' =&gt; $fname, 'id' =&gt; $activation_key], '', '&amp;amp;')
        ),
        "From:no-reply@example.com"
    )
) {
    $errors[] = "Failed to mail activation email";
} else {
    session_start();  // I advise that this line be unconditionally written at the start of page -- ideally in a config file which is called first by every page

    $_SESSION["loggedin"] = true;  // I don't think I'd bother with this element
    $_SESSION["email"] = $email; 
    header("Location: /dashboard.php");
    exit;
}
</code></pre>
<p>If you find this to be "uglier", then there won't be any harm in declaring the extra variables.</p>
</li>
</ul>
    </div>