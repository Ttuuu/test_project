<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I’m not sure if you still maintain this code but if so, you could consider using a <a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData" rel="nofollow noreferrer"><code>FormData</code></a> object. I see it has been <a href="http://web.archive.org/web/20150505013312/https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData" rel="nofollow noreferrer">documented on MDN since 2015</a> and the link to the specification points to <a href="https://xhr.spec.whatwg.org/#interface-formdata" rel="nofollow noreferrer">whatwg.org</a>, which has been <a href="http://web.archive.org/web/20120916201527/http://xhr.spec.whatwg.org:80/#interface-formdata" rel="nofollow noreferrer">archived since 2012</a>. I found <a href="https://stackoverflow.com/questions/6974684/how-to-send-formdata-objects-with-ajax-requests-in-jquery">a post on SO from 2011</a> that uses it. That way you wouldn’t have to manually query the DOM for inputs (I.e. <code>var form = $(':input').not(':submit,:button,:image,:radio,:checkbox'); $.merge(form, $(':checked').not('option'));</code>)- you could just iterate over a newly created FormData object. You would still need to alter input names to remove the brackets when multiple values are allowed.</p>

<p>You might be able to remove jQuery as a dependency, unless there are specific plugins used on the page. For more information, check out <a href="http://youmightnotneedjquery.com/" rel="nofollow noreferrer">youmightnotneedjquery.com/</a>.</p>

<hr>

<p>I see places where bracket notation is used to alter properties of objects, like below: </p>

<blockquote>
<pre><code>input['name'] = name;
</code></pre>
</blockquote>

<p>and</p>

<blockquote>
<pre><code>input['value'] = files[files.length - 1];
</code></pre>
</blockquote>

<p>However <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors#Dot_notation" rel="nofollow noreferrer">dot notation</a> could be used instead, just as it is used to check the type of the object being iterated over (i.e. <code>if(obj.type==='file'){</code>). It is <a href="https://stackoverflow.com/a/4968448/1575353">"<em>faster to write and clearer to read</em>"</a><sup><a href="https://stackoverflow.com/a/4968448/1575353">1</a></sup></p>

<p><sup>1</sup><sub><a href="https://stackoverflow.com/a/4968448/1575353">https://stackoverflow.com/a/4968448/1575353</a></sub></p>
    </div>