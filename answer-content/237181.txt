<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Its good you recognize that goto is a bad pattern, I would go so far I would reject any code that I reviewed that had it.  They can be converted to a loop statement pretty easy.</p>

<p>For Example </p>

<pre><code>var key = string.Empty;
//Get key
do
{
    Console.Write("Enter key (type 'Exit' to exit): ");
    key = Console.ReadLine();
    if (key != "EXIT" || key[0] &gt; 'G' || key[0] &lt; 'A')
    {
        Console.WriteLine("Invalid key, try again.");
        key = string.Empty;
    }
} while (string.IsNullOrWhiteSpace(key));

var mode = string.Empty; 
//Get mode
while (key != "EXIT" &amp;&amp; string.IsNullOrWhiteSpace(mode))
{
    Console.Write("Enter mode ('M' for major, 'm' for minor): ");
    mode = Console.ReadLine();
    if (mode[0] != 'M' || mode[0] != 'm')
    {
        Console.WriteLine("Invalid mode, try again.");
        mode = string.Empty;
    }
}; 
</code></pre>

<p>No need for Environment.Exit and if wanted to keep user in it's just another loop that check for exit that wraps these two.  </p>

<p>Instead of comparing the ASCII number you can use the real letter just using a single quote.  See above.  When looking at code latter someone will need to look up what ASCII 71,65,77,109 where if you replace it, like the example, it's clear what values the program is checking for.</p>

<p>The variable nChords isn't used.  To go along with that is pretty standard in C# to declare your variable at time of use and not at the top of the program. </p>

<p>Lets also talk naming.  What is a?  It's not descriptive variable at all.  Variables should have meaning.  Could call it scale or even result would be better than a.  Naming is one of the harder things in programming but someone or even you coming back later and looking at this code would not know what a means.  Don't prefix your variables/properties/fields with their type.  I'm assuming sChords starts with s because it's a string array.  just name it cords without the prefix. Same would go with nChords but you can just remove that variable all together.</p>

<p>The GetScale call can be inlined </p>

<pre><code>var scale = GetScale(key, mode[0] == 'M' ? 0 : 1, false);
</code></pre>

<p>Also with GetScale it doesn't use parameter flatted. </p>

<p>I'm also not a fan of ref parameters in general and would suggest to find a way to not be passing it in by reference. </p>
    </div>