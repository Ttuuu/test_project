<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can use <code>collections.Counter</code> to solve this problem with a time complexity of O(N) and a space complexity of also O(N).</p>
<pre class="lang-py prettyprint-override"><code>from collections import Counter

my_array = [1, 1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4]
my_counter = Counter(my_array)

# Thanks to @AlexeyBurdin and @Graipher for improving this part.
print(next(k for k, v in my_counter.items() if v % 2))
</code></pre>
<p>This will print out the first element which occurs an odd number of times.</p>
<p>You can read more about <code>collections.Counter</code> <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="noreferrer">here</a>.</p>
<p>This is the simplest and fastest solution I can think of.</p>
    </div>