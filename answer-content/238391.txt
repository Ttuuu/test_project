<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have some suggestions for you.</p>

<ol>
<li><p>Instead of using list, I suggest that you use <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/language/varargs.html" rel="nofollow noreferrer"><code>varargs</code></a>; this will remove the need to put the item in list and pass them to the method.</p></li>
<li><p>Instead of using <code>String</code>, you can use the <code>Character</code> to reduce, by a bit, the memory footprint.</p></li>
<li><p>In the <code>for</code> loop, I highly suggest that you use the <code>if-else-if</code> pattern or a <code>switch</code> instead of the <code>if-if</code> since you can only have one choice each time. </p></li>
</ol>

<p><strong>Before</strong></p>

<pre class="lang-java prettyprint-override"><code>for (char letter : letters) {
   if (letter == 'A') {
      iA = 1;
   }
   if (letter == 'B') {
      iB = 1;
   }
}
</code></pre>

<p><strong>After</strong></p>

<pre class="lang-java prettyprint-override"><code>for (char letter : letters) {
   if (letter == 'A') {
      iA = 1;
   } else if (letter == 'B') {
      iB = 1;
   }
}
</code></pre>

<p><em>or</em></p>

<pre class="lang-java prettyprint-override"><code>for (char letter : letters) {
   switch (letter) {
   case 'A':
      iA = 1;
      break;
   case 'B':
      iB = 1;
      break;
   }
}
</code></pre>

<ol start="4">
<li>When printing arrays, you can use the <code>java.util.Arrays#toString</code> method.</li>
</ol>

<h3>Refactored Code</h3>

<pre class="lang-java prettyprint-override"><code>public static void main(String[] args) {
   checkForABPair('B', 'A', 'C');
   checkForABPair('A', 'A', 'C');
   checkForABPair('M', 'S', 'C');
}

public static void checkForABPair(char... letters) {
   int iA = 0;
   int iB = 0;

   for (char letter : letters) {
      switch (letter) {
      case 'A':
         iA = 1;
         break;
      case 'B':
         iB = 1;
         break;
      }
   }

   if ((1 == iA || 1 == iB) &amp;&amp; (1 != iA || 1 != iB)) {
      System.out.println(Arrays.toString(letters) + " - ERROR! The pair of letters [A - B] must be present at least once, or not at all!");
   } else {
      System.out.println(Arrays.toString(letters) + " - Everything fine!");
   }
}
</code></pre>
    </div>