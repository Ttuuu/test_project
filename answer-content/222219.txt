<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>// const fs = require('fs');
// const folder = "../api/";
const regex = /^v[0-9](\.[0-9]{1,2})?(\.[0-9])?$/;

// let files = fs.readdirSync(folder);
let pattern = "v5.2"; // let pattern = req.params.v;

var arr = ['v1.0.0', 'v5.2.4', 'v5.2.9', 'v5.20.4', 'v6.4.0']; // var arr = [];

/** Function **/
/*
function naturalSort(a, b) {
    var ax = [],
        bx = [];

    a.replace(/(\d+)|(\D+)/g, function (_, $1, $2) {
        ax.push([$1 || Infinity, $2 || ""])
    });
    b.replace(/(\d+)|(\D+)/g, function (_, $1, $2) {
        bx.push([$1 || Infinity, $2 || ""])
    });

    while (ax.length &amp;&amp; bx.length) {
        var an = ax.shift();
        var bn = bx.shift();
        var nn = (an[0] - bn[0]) || an[1].localeCompare(bn[1]);
        if (nn) return nn;
    }

    return ax.length - bx.length;
}

files.forEach(file =&gt; {
    let dirStat = fs.statSync(folder + '/' + file).isDirectory();
    if (dirStat) {
        arr.push(file);
    }
});

arr.sort(naturalSort);
*/
/**/

if (regex.test(pattern)) {

    pattern = (function () {
        let patternRegexMatches = pattern.match(regex);

        if (patternRegexMatches[1] === undefined) {
            console.log('major version');
            console.log(pattern);
        } else if (patternRegexMatches[2] === undefined) {
            console.log('minor version');
            console.log(pattern);
            pattern = pattern + '.';
        } else {
            console.log('patch version');
            console.log(pattern);
        }

        return pattern;
    })();

    let matches = arr.filter(s =&gt; s.includes(pattern));

    if (matches.length != 0) {
        console.log(matches[matches.length - 1]);
    } else {
        console.log('Specify correct API version!');
    }

} else {
    console.log('Specify correct API version!');
}
</code></pre>

<p>Thanks to the review, I updated my code with the following improvements:</p>

<ol>
<li>let patternRegexMatches = pattern.match(regex);
Only match 1x and only if there is a pattern submitted</li>
<li>pattern = (function() ...
return pattern</li>
<li>Only 1x arr.filter(s =&gt; s.includes(pattern));</li>
</ol>

<p>Additionally, in javascript the folder structure is not "naturally sorted" as with ls -v on linux, so I added an additional function to make sure the version folders are sorted correctly.</p>
    </div>