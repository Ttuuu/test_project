<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is one big issue in your setup, which reduces the usability, readability and quality of your code.</p>

<h2>Single Responsibility Principle</h2>

<p>Your function does both (1) parsing and evaluation, and (2) printing results.</p>

<blockquote>
<pre><code>public static String evaluate(String expression) 
{
    // .. parse expression
    // .. evaluate the expression tree
    // .. print the result as string
}
</code></pre>
</blockquote>

<p>You have even managed to combine the evaluation and printing.</p>

<blockquote>
<pre><code>public static String eval(String a, String operator, String b) 
{
    // evaluate operation
    // format the result to string
}
</code></pre>
</blockquote>

<p>You should refactor your code.</p>

<p>Parsing and evaluation:</p>

<pre><code>public static Double evaluate(String expression) 
{
    // .. parse expression
    // .. evaluate the expression tree
}

public static Double eval(Double a, Operators operator, Double b) 
{
    // .. evaluate operation
}

public enum Operators { Add, Subtract, Multiply, Divide }
</code></pre>

<p>Printing</p>

<pre><code>public static String print(Double value) 
{
    // .. print value
}
</code></pre>

<hr>

<p>And there's that infamous <a href="https://stackoverflow.com/questions/14137989/java-division-by-zero-doesnt-throw-an-arithmeticexception-why">division by zero</a> amongst other possible edge cases you should think about:</p>

<blockquote>
  <p><code>r += Double.parseDouble(a) / Double.parseDouble(b);</code></p>
</blockquote>
    </div>