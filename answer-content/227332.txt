<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Formatting</strong><br>
This may be a copy and paste error, but generally <code>int main()</code> will start in the first column like the #include does. Other the rest of the indentation needs to be based on that. This was correctly done in your earlier question.</p>

<pre><code>#include &lt;stdio.h&gt;

int main()
{
    int T;
    scanf("%d", &amp;T);

    ...

}
</code></pre>

<p><strong>Functions</strong><br>
You may not have run into difficult problems yet, but as the programs get more complex the best way to solve them will be to break it up into smaller pieces where each particular task is easy to solve. In this case the outer for loop would make a good function. Perhaps the inner loop would make a second good function.</p>

<p><strong>Variable Names</strong><br>
Variable names should be meaningful to make the code more readable, easier to understand and maintainable.</p>

<p>The problem statement gives you the variable names <code>T</code>, <code>N</code>, <code>M</code> and <code>K</code> which are currently being used in the code, however, it also gives you what the variables are used for. It might be better to use names such as <code>testCount</code> for <code>T</code>, <code>maxPrice</code> for <code>N</code>, <code>minPrice</code> for <code>M</code> and <code>itemCount</code> for <code>K</code>.</p>

<p>The variable name <code>halfPrice</code> could be misleading be it won't always be half of the maximum price.</p>

<p><strong>Mixing Types in Comparisons</strong><br>
There is the possibility of <a href="https://en.wikipedia.org/wiki/Floating_point_error_mitigation" rel="nofollow noreferrer">Floating Point Error</a> in the code because of this comparison: </p>

<pre><code>            halfPrice = (halfPrice &lt; M) ? M : halfPrice;
</code></pre>

<p>While the minimum price is input as an <code>integer</code> it might be better to convert it to a <code>float</code> and use that in the comparison. This conversion should only be done once per test case.</p>

<p>In many cases banks work around this by keeping amounts in 2 integer values, one for dollars and one for cents (units are USA, units may differ based on location).</p>
    </div>