<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here's a solution i was able to implement by looking at the algorithm in pseudocode more closely. It uses start and stop indexes instead of array slicing to get half the list.</p>

<pre><code>def peakfinder_so(arr, i, j):
    """
    Optimized solution.
    """

    mid = (i + j) // 2

    if arr[mid - 1] &lt;= arr[mid] &gt;= arr[mid + 1]:
        print 'Final value: %s is bigger than %s on the left and %s on the right.' % (arr[mid], arr[mid-1], arr[mid+1])
        return mid

    elif arr[mid - 1] &gt; arr[mid]:
       # Go left.
       return peakfinder_so(arr, i, mid - 1)

    elif arr[mid] &lt; arr[mid + 1]:
       # Go right.
       return peakfinder_so(arr, mid + 1, j)
</code></pre>
    </div>