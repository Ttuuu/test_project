<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Missing-value logic</h2>

<p>This:</p>

<pre><code>try:
    counts[space] += count
except:
    counts[space] = count
</code></pre>

<p>has a few problems:</p>

<ul>
<li>A bare <code>except</code> is ill-advised; you probably want to be catching <code>KeyError</code></li>
<li>Avoid logic-by-exception; for instance:</li>
</ul>

<pre><code>if space in counts:
    counts[space] += count
else:
    counts[space] = count
</code></pre>

<p>Do one better by calling <code>setdefault</code>:</p>

<pre><code>counts.setdefault(space, 0)
counts[space] += count
</code></pre>

<p>Do even better by using a defaultdict:</p>

<pre><code>counts = defaultdict(int)
# ... then unconditionally:
counts[space] += count
</code></pre>

<p>The last two options you might not be able to meaningfully use if you really need the <code>if left</code> stuff to execute only on the addition of a new key. So this might work:</p>

<pre><code>if not counts.setdefault(space, 0):
    if left:
        q.appendleft(space)
    else:
        q.append(space)
counts[space] += count
</code></pre>

<h2>Returning a list</h2>

<p>This:</p>

<pre><code>return [int((space - 1)/2), int((space - 1)/2)]
</code></pre>

<p>should probably drop the brackets, so that you return an implicit 2-tuple:</p>

<pre><code>return int((space - 1)/2), int((space - 1)/2)
</code></pre>

<h2>Input</h2>

<p>Probably better off to have the user input two numbers on separate lines than one line with space separation; and avoid <code>map</code> in this case because it's a little clunky:</p>

<pre><code>stalls, ppl = (int(input()) for _ in range(2))
</code></pre>

<h2>Formatting</h2>

<pre><code>print("Case #%d: %s" % (case + 1, result))
</code></pre>

<p>can become</p>

<pre><code>print(f'Case #{case + 1}: {result}')
</code></pre>
    </div>