<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could also write</p>

<pre><code>int lastYear = Meeting.Max(m =&gt; m.Year);
if (lastYear &lt; aDate.Year) {
    aDate = DateTime.Now.AddYears(-1);
}
</code></pre>

<p>And if you want to automatically make the date be the last year in your data set</p>

<pre><code>DateTime aDate = DateTime.Now;
int lastYear = Meeting.Max(m =&gt; m.Year);
aDate = new DateTime(lastYear, aDate.Month, aDate.Day);
</code></pre>

<p>But since you are only using the <code>Year</code> part of the date, there is no point in using a <code>DateTime</code> variable. You can simply write:</p>

<pre><code>int y = DateTime.Now.Year;
int lastYear = Meeting.Max(m =&gt; m.Year);
if (y &gt; lastYear) {
    y--;
}

for (int year = y; year &gt; y - totalYearCount; year--) {
    ...
}
</code></pre>

<p>or simply use the last year (my favourite solution):</p>

<pre><code>int lastYear = Meeting.Max(m =&gt; m.Year);
for (int year = lastYear; year &gt; lastYear - totalYearCount; year--) {
    ...
}
</code></pre>

<hr>

<p>You can simplify the initialization of the list with a collection initializer:</p>

<pre><code>List&lt;Meeting&gt; Meeting = new List&lt;Meeting&gt; {
    new Meeting { Name = "a", Year = 2019 },
    new Meeting { Name = "b", Year = 2019 },
    new Meeting { Name = "c", Year = 2019 },
    new Meeting { Name = "d", Year = 2018 },
    new Meeting { Name = "e", Year = 2018 },
    new Meeting { Name = "f", Year = 2017 },
    new Meeting { Name = "g", Year = 2016 },
    new Meeting { Name = "h", Year = 2015 }
};
</code></pre>
    </div>