<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>To limit the problem of memory consumption with list comprehension, you can use <code>lists:foreach/2</code> (note that you cannot accumulate a result with foreach/2, if necessary you can use foldl/3):</p>

<pre><code>lists:foreach(
    fun(X) -&gt; lists:foreach(
                  fun(Y) -&gt; io:format("~p,~p~n",[X,Y]) end,
                  lists:seq(1,5)) end,
    lists:seq(20,25)).
</code></pre>

<p>or this version without prepared list, and the logic defined outside (works only since R17)</p>

<pre><code>1&gt; MyLogic = fun (init,init,init) -&gt; []; (X,Y,R) -&gt; [{X,Y}|R] end.
#Fun&lt;erl_eval.18.106461118&gt;
2&gt; F = fun(X1,X2,Y1,Y2,Logic) -&gt; 
           F1 = fun F1(X,R) when X == X2+1 -&gt; R;
                    F1(X,R) -&gt; F2 = fun F2(Y,Ry) when Y == Y2+1 -&gt; Ry;
                                        F2(Y,Ry) -&gt; 
                                            %% your logic here, for example
                                            NR = Logic(X,Y,Ry), 
                                            F2(Y+1,NR)
                               end, 
                               F1(X+1,F2(Y1,R))
           end, 
           F1(X1,Logic(init,init,init))
       end.
#Fun&lt;erl_eval.11.106461118&gt;
3&gt; F(1,3,21,22,MyLogic).
[{3,22},{3,21},{2,22},{2,21},{1,22},{1,21}]
4&gt;
</code></pre>
    </div>