<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>While you seem to be on a good way, your code still hast a <code>global</code> variable it does not need. You can simplify that code a lot by using something like this:</p>

<pre><code>OFFSETS = {"w": (0, -1), "Up": (0, -1),   # weird coordinate system...
           "a": (-1, 0), "Left": (-1, 0),
           "s": (0, 1), "Down": (0, 1),
           "d": (1, 0), "Right": (1, 0)}

def get_offsets():
    for key, offset in OFFSETS.items():
        if keyboard.is_pressed(key):
            return offset
    return 0, 0
</code></pre>

<p>This just returns a tuple of changes for each defined key, and zero otherwise.</p>

<p>You should do as little as possible inside your loop (since that affects performance). You can set the graphic options once before the loop if you afterward continue modifying the object(s) in place. With the <code>Rectangle</code> that is easy, since you can just overwrite the <code>p1</code> and <code>p2</code> attributes. The two <code>Point</code> objects have an internal <code>_move</code> method that you can use (or you code it yourself):</p>

<pre><code>class Point:
    ...
    def _move(self, dx, dy):
        self.x += dx
        self.y += dy
</code></pre>

<p>Another small performance optimization is to do nothing if the rectangle does not move. I would also add a <a href="http://stackoverflow.com/questions/419163/what-does-if-name-main-do"><code>if __name__ == "__main__":</code></a> guard to allow importing from this module without running the game and follow Python's official style-guide, <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a>, which recommend adding spaces around operators. It also recommends putting imports from different modules on separate lines and not using unnecessary parenthesis.</p>

<p>With these changes you get this for your <code>main</code>:</p>

<pre><code>def main():
    x = 0
    y = 0
    radius = 10
    speed = 20
    lower_left = Point((width / 2) - radius, (height / 2) - radius)
    upper_right = Point((width / 2) + radius, (height / 2) + radius)
    player = Rectangle(lower_left, upper_right)
    player.setFill("green")
    player.setWidth(2)
    player.draw(win)

    while True:
        dx, dy = get_offsets()
        if dx != 0 or dy != 0:
            player.undraw()
            dx, dy = dx * speed, dy * speed
            lower_left._move(dx, dy)
            upper_right._move(dx, dy)
            player.p1, player.p2 = lower_left, upper_right
            player.draw(win)
        update(10)

if __name__ == "__main__":
    main()
</code></pre>

<p>In addition, you might want to look for a different keyboard event handler, the <code>keyboard</code> module requires administrator rights (at least on UNIX). I know I certainly wouldn't just run a game that needs that. In other words, I would at least read the whole source code to make there is no exploit hidden in it (which was still possible with the code you have so far), but probably stay on the safe side and not play it at all.</p>
    </div>