<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would do <code>org.country.states.where(time_zone: time_zone).empty?</code> instead of not + map/pluck + include?, there's no need to get an array of time zones.</p>

<p>And I'd move the condition to a helper private method for readabilty.</p>

<pre><code>def validate_time_zone
  errors.add(:time_zone, :invalid) if time_zone_not_in_country?
end

private
def time_zone_not_in_country?
  time_zone.present? and org.present? and org.country.states.where(time_zone: time_zone).empty?
end
</code></pre>

<p>You could even move that ugly <code>org.country.states....</code> chain to a method on the Org model like <code>incluedes_time_zone?(time_zone)</code> (read about the Law of Demeter)</p>

<pre><code>def time_zone_not_in_country?
  time_zone.present? and !org.try(:includes_time_zone?, time_zone) #using `try` to skip that `org.present?` call too
end
</code></pre>

<p>and on Org.rb</p>

<pre><code>def includes_time_zone?(tz)
  country.states.where(time_zone: tz).any?
end
</code></pre>
    </div>