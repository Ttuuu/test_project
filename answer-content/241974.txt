<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The validation part that throws could be placed in its own method - maybe.</p>

<p><code>AccountType</code> and <code>AccountStatus</code> seems enums, or might be due to implement as enums. Then <code>==</code> / <code>!=</code> can be used.</p>

<p><em>Donnot-Repeat-Yourself</em> and introducing variables makes for a more compact notation.</p>

<pre><code>PrimecastAccount account = null;
if (user.getAccount() != null) {
    account = primecastAccountRepository.findOneBySystem(user.getAccount())
        .orElseThrow(PrimecastAccountNotFoundException::new);
}
if (!user.getActivated()) {
     throw new UserNotActivatedException("User " + lowercaseLogin + " was not activated");
}
if (account != null) {
    AccountType type = account.getAccountType();
    AccountStatus status = account.getStatus();
    if (type == AccountType.INTERNAL &amp;&amp; status != AccountStatus.ACTIVE)
            || (type != AccountType.INTERNAL &amp;&amp; status != AccountStatus.DISABLED) {
        throw new DisabledException("User " + lowercaseLogin + " account not ACTIVE");
    }
}
</code></pre>

<p>This focuses on giving only different exceptions. For the same behavior unfortunately you would still do something to only call <code>findOneBySystem</code> once.</p>
    </div>