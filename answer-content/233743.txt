<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Overall, it looks good to me.  Just a couple observations.  They aren't necessarily better or more pythonic, but you may see them in peoples code.  Use whichever you find more readable:</p>

<p>The first rule turns the digits to ints to compare them, but the ascii for the digits compares the same as the integer digits ('0' &lt; '1' ... &lt; '9').  So the <code>int()</code> isn't needed.  Also, a common idiom for comparing adjacent items in a list is to use <code>zip(seq, seq[1:])</code>.  The first two rules could be coded as:</p>

<pre><code># Digits are never decreasing
lambda s: all(a &lt;= b for a,b in zip(s, s[1:])),

# Two adjacent digits are equal.
lambda s: any(a == b for a,b in zip(s, s[1:])),
</code></pre>

<p>In a numeric context, True and False are converted to 1 and 0, respectively. So, solve can be coded as:</p>

<pre><code>def solve(bounds, rules):
    return sum(test(i, rules) for i in range(bounds[0], bounds[1]+1))
</code></pre>
    </div>