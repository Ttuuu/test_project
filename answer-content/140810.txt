<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Yes, <a href="//stackoverflow.com/q/1115313/1157100"><code>len(str)</code> should be O(1) in Python</a>.  (Good question!)  Each of your <code>for</code> loops is O(<em>n</em>), so your whole function is O(<em>n</em>).</p>

<hr>

<p>Your counting loops could be written more compactly as</p>

<pre><code>for char in first_string:
    count_first[char] = 1 + count_first.get(char, 0)
</code></pre>

<p>The epilogue could be <a href="//stackoverflow.com/a/4527957/1157100">simplified</a> to</p>

<pre><code>return count_first == count_other
</code></pre>

<hr>

<p>It pays to get familiar with the standard Python library, though.  Your entire function could be more simply implemented as</p>

<pre><code>from collections import Counter

def is_permutation(a, b):
    return len(a) == len(b) and Counter(a) == Counter(b)
</code></pre>

<p>â€¦ where <code>len(a) == len(b)</code> is an optional optimization.  Writing less code simplifies maintenance and tends to create fewer opportunities for introducing bugs (as in Rev 2 of your question).</p>
    </div>