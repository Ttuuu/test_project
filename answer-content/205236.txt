<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Magic Values</h2>

<p>I took a look on your source code. It is quite good, and I like the way you define constants for values, but there are still some magic values, such as <strong>"maxAttempts"</strong>.</p>

<h2>Exceptions</h2>

<p>In side the method <strong>GuessThatNumberGame(int maxAttempts)</strong>, you throw an <strong>ArgumentOutOfRangeException</strong>. I think you can add more detail in the error message then it is easier to understand the problem exactly. Maybe:</p>

<pre><code>throw new ArgumentOutOfRangeException("maxAttempts must be more than 0");
</code></pre>

<p>And I don't see where do you handle the exception. As an user, I expected that I will receive some error message when I enter an invalid value instead of the app crash.</p>

<h2>UX:</h2>

<p>Let see this function:</p>

<blockquote>
<pre><code>private static int GetNumberFromPlayer(string prompt)
        {
            var number = 0;
            do
            {
                Console.Write(prompt);
            } while (Int32.TryParse(Console.ReadLine(), out number) == false);
            return number;
        }
</code></pre>
</blockquote>

<p>It look good, but when user input invalid numbers( ex: a string) then nothing show to the console, user can not understand what is their next step. I think you can check the input there, and ask user enter a number:</p>

<pre><code>private static int GetNumberFromPlayer(string prompt)
{
    var number = 0;
    Console.Write(prompt);

    do
    {           
        If(Int32.TryParse(Console.ReadLine(), out number))
        {
            break;  
        }
        else
        {
            Console.Write("please enter a number");   
        }
    } while (true);
    return number;
}
</code></pre>

<p>Regard!</p>
    </div>