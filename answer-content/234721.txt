<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Nice code overall, doesnt feel like beginner. A few points:</p>

<ul>
<li><p>case for single argument in your <code>normalizeArgs</code> switch can be covered by <code>default</code> branch</p></li>
<li><p>I don't like your main game loop conditions. Basically first half compares number of remaining tries, that effectively means asking if game is lost. Second half asks if game is won. Then can change to checking for joined  win/loss conditions, but you can put it one step further and make boolean method in Game, that will tell you, if game still runs/continues and use that as your loop condition.</p></li>
<li><p>feels like Strings for <code>displayProgress</code> and <code>displayOutcome</code> should be in class <code>Game</code>. Create something like <code>progressMessage</code> and <code>outcomeMessage</code> methods there, that will return <code>String</code>. <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#format(java.util.Locale,%20java.lang.String,%20java.lang.Object...)" rel="nofollow noreferrer">String.format</a> has same functionality as <code>printf</code>. Then you are more flexible and correct class has the responsibility. You just print messages in <code>Prompt</code> class.</p></li>
<li><p>Not sure about using <code>System.err</code> that one time, while not using it to display exception messages. But I cant really say if its good or bad.</p></li>
<li><p>Too many public methods in <code>Game</code> class. I'd leave only single method for <code>applyGuess</code> - the one that accepts char. It describes more what you want - single character and is cleaner API. Other one also accepts strings longer than one char and imho that functionality shouldn't be here, but in prompter - it is input checking. Extracting that loop condition (mentioned above) also allows more methods to be possibly private.</p></li>
<li><p>max tries could be constructor parameter to add more flexibility.</p></li>
<li>Excellent exception usage imho.</li>
</ul>
    </div>