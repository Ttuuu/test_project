<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This implementation is quite simple. I compared it with some others in PHP as well as other languages like C++, Java and JavaScript. Some use a node class to store a key and value separately (e.g. <a href="https://github.com/rogeriopvl/php-lrucache/blob/master/src/LRUCache/LRUCache.php" rel="nofollow noreferrer">this PHP implementation</a>) but for a simple implementation your approach seems fine. </p>

<p>I noticed that the method <code>isFull()</code> only explicitly returns a value when <code>true</code> is returned. While it works because the conditional that calls that method would this implicitly evaluate the empty return to a <em>false</em>-y  value, some would argue that methods that return a value should do so in every case, for the sake of readability. That could be achieved by simply returning the conditional:</p>

<pre><code>private function isFull()
{
    return count($this-&gt;cache) &gt;= $this-&gt;size);
}
</code></pre>

<p>And one other simplification would be to set the property/instance variable <code>$cache</code> to an empty array when it is declared, since it can be evaluated at compile time and does not depend on any run-time information to be evaluated, instead of inside the constructor:</p>

<pre><code>private $cache = [];
</code></pre>
    </div>