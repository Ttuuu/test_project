<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2><code>&lt;stdbool.h&gt;</code></h2>

<p>Unless you need compatibility with C89 for some reason, I would use <code>bool</code> for the return type of the function and <code>true</code> and <code>false</code> as the possible values.</p>

<p>It helps readability.</p>

<hr>

<h2><code>sscanf()</code></h2>

<p>This one depends on your performance needs.  A solution using <code>sscanf()</code> will be much easier to understand with a simple look and also shorter in code, but may also be much slower (a benchmark would be appropriate).</p>

<p>Update: I would discard <code>sscanf()</code> because it would accept spaces before the numbers; better use <code>inet_pton()</code> as @vnp suggested.</p>

<hr>

<h2><code>&lt;stdint.h&gt;</code></h2>

<p>Same as with <code>bool</code>: <code>segs</code> seems at first glance to be some string, but after some time I realized it's just an array of 8-bit unsigned integers.  You should use <code>uint8_t</code> for that.</p>

<p>In case of <code>&lt;stdint.h&gt;</code> I would say that if you don't have it, you should do the <code>typedef</code>s yourself (enclosed in some <code>#if</code>) anyway.  Don't do that with <code>bool</code>, however, which is very dangerous.</p>

<hr>

<h2>Unneeded cast</h2>

<pre><code>unsigned char *p;
int i;

...
*p = (unsigned char)i;
</code></pre>

<p>This cast is not needed.</p>

<p>Usually casts are very dangerous: they can hide bugs that otherwise the compiler would catch easily.  Don't ever cast, unless you know a very good reason to.</p>

<hr>

<h2>BUG! (No, I was wrong)</h2>

<pre><code>// Check numeric.
if (*str &lt; '0' || *str &gt; '9')
        return 0;
</code></pre>

<p>This line returns 0 at the first dot it finds.  The function doesn't work!</p>

<p>This if that comes later is always false due to that:</p>

<pre><code>// Segment changeover.
if (*str == '.') {
        /// Unreachable code!!!
}
</code></pre>

<hr>

<h2><code>&lt;ctype.h&gt;</code></h2>

<p>There are some functions in <code>&lt;ctype.h&gt;</code> that you should use:</p>

<pre><code>// Check numeric.
if (*str &lt; '0' || *str &gt; '9')
        return 0;
</code></pre>

<p>That code above can be simplified to this one (and the comment is now even more obvious and therefore removed ;-):</p>

<pre><code>if (!isdigit((unsigned char)*str))
        return 0;
</code></pre>

<blockquote>
  <p>NOTES: The standards require that the argument <code>c</code> for these functions is either <code>EOF</code> or a value that is representable in the type <code>unsigned char</code>.  If the argument <code>c</code> is of type <code>char</code>, it must be cast to <code>unsigned char</code>.</p>
  
  <p>This is necessary because <code>char</code> may be the equivalent of <code>signed char</code>, in which case a byte where the top bit is set would be sign extended when converting to <code>int</code>, yielding a value that is outside the range of <code>unsigned char</code>.</p>
</blockquote>

<p>See <a href="http://man7.org/linux/man-pages/man3/isdigit.3.html" rel="nofollow noreferrer"><code>man isdigit</code></a>.</p>

<p>If you're going to use these functions, I would create an <code>unsigned char</code> pointer to alias the <code>char *</code> parameter, so that you don't need to cast all the time.</p>
    </div>