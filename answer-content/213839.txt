<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think that you should be more explicit about the source language instead of relying exclusively on auto-detection, in both your <code>Translate</code> constructor and when you call <code>translator.translate()</code>.  Japanese is easy enough to detect unambiguously in most cases.  However, phrases in other languages could easily be interpreted as several possible languages.</p>

<p>Recursion is rarely the most idiomatic solution in Python.  Rather, <a href="https://docs.python.org/3/tutorial/classes.html#generators" rel="nofollow noreferrer">generators</a> are often a better idea.  Here's a generator that will translate back and forth between two languages as many times as you want:</p>

<pre><code>from googletrans import Translator

def chained_translations(phrase, target_language='en', source_language=None):
    translator = Translator()
    source_language = source_language or translator.detect(phrase).lang
    while True:
        phrase = translator.translate(phrase, src=source_language, dest=target_language).text
        yield phrase
        source_language, target_language = target_language, source_language
</code></pre>

<p>This solution is much simpler, because the state is kept in the execution flow of the generator code itself.</p>

<p>Example usage:</p>

<pre><code>&gt;&gt;&gt; test = chained_translations('は忙しい。彼は多忙な人間だ。勉強をしたい')
&gt;&gt;&gt; print(next(test))
'I am busy. He is a busy man. I want to learn'
&gt;&gt;&gt; print(next(test))
'私は忙しいです。彼は忙しい人だ。学びたい'
&gt;&gt;&gt; from itertools import islice
&gt;&gt;&gt; print(list(islice(test, 3)))
['I am busy. He is a busy man. I want to learn', '私は忙しいです。彼は忙しい人だ。学びたい', 'I am busy. He is a busy man. I want to learn']
</code></pre>
    </div>