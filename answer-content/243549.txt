<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>data attribute</h1>

<p>It's a bit unconventional to use a data attribute to select the affected elements. A class would be the more conventional approach.</p>

<h1>Use of template strings</h1>

<p>You have two places where you unnecessarily use template strings with backticks (<code>`</code>).</p>

<h1>Code</h1>

<p>I like the code overall very much. Nice break down into functions. Nice use of modern JS features. </p>

<p>Only one small thing: The <code>return</code> in <code>equalizeHeights</code> is unnecessary.</p>

<h1>Timing</h1>

<p>The problem with the need for the wait may be due to contents of the divs. If they contain images or use external fonts, then they may lead to resizing of the divs while these are loading. Some points to look out for:</p>

<ul>
<li>Use the <code>load</code> event instead or additionally to <code>DOMContentLoaded</code>.</li>
<li>Make sure images have a size assigned to them, either in the HTML (<code>height</code> and <code>width</code> attributes) or the CSS.</li>
<li>There a ways to make sure that the text content isn't rendered until the fonts are loaded, but this is not really my area of expertise.</li>
</ul>

<h1>Possible bug/misfeature</h1>

<p>There is one problem with the script: It never allows the divs to shrink if the content becomes shorter, for example due to a window resize.</p>

<p>I can think of two possible solutions:</p>

<ul>
<li>Before checking the size of the divs, remove the <code>min-height</code>s and <code>wait()</code> to allow a re-render.</li>
</ul>

<p>Or</p>

<ul>
<li>add a second, inner div inside the equalize divs and use the inner divs client height to determine the largest div.</li>
</ul>
    </div>