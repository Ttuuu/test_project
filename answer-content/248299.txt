<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Is there any place in <code>factor_quadratic_equation</code> where the return value of <code>flip_sign_if_negative(x,sign)</code> is something other than the absolute value of <code>x</code>?
If not, I would recommend using absolute value, since that's a familiar function already.</p>
<p>Why <code>a/-1</code> rather than <code>-a</code>?</p>
<p>The simple parts are well documented (though most of them would be easy to understand even without documentation), but then there are complicated parts with little or no explanation. And I'm not convinced that you've given much thought to what you really want <code>factor_quadratic_equation</code> to do.</p>
<p>You've written a fairly complicated algorithm here. Have you tested it to see whether the results are what you expected?</p>
<p>I copied your functions into in Python 3.8.3 and tried some examples of my own.</p>
<p><code>factor_quadratic_equation(1,4,3)</code> returned '(x+1)(x+3)'.
That's good.</p>
<p><code>factor_quadratic_equation(0.5,2,1.5)</code> returned '0.5(x+1)(x+3)'.
Also good.</p>
<p><code>factor_quadratic_equation(0.125,0.5,0.375)</code> returned
'(x+2)^2 - 1'. <strong>What?</strong>
Why isn't the answer '0.125(x+1)(x+3)'?
How is '(x+2)^2 - 1' even considered the same polynomial as
(1/8)x^2+(1/2)x+(3/8), let alone being considered a <strong>factorization</strong> of that polynomial?</p>
<p>I can understand that when a real quadratic has no zeros, and hence literally <strong>cannot</strong> be factored into real monomials, you might fall back to the vertex representation as a useful explanation, but this function seems all too eager to fall back to that representation for quadratics with zeros.</p>
<p><code>factor_quadratic_equation(1.33,1.2,0)</code> returns<br>
'1.1102230246251565e-15x(1197957500880552x+1080863910568919)'.<br>
I suppose this has something to do with the inexact representations of 1.33 and 1.2 in IEEE 754, but it seems bizarre.</p>
<p><code>factor_quadratic_equation(133,120,0)</code> produced a traceback, at the bottom of which was</p>
<blockquote>
<p>ValueError: invalid literal for int() with base 10: ''</p>
</blockquote>
<p>And yet <code>factor_quadratic_equation(133/2,120/2,0)</code> returns '0.5x(133x+120)', as one might expect.</p>
<p><code>factor_quadratic_equation(6,5,0)</code> also produced a traceback.</p>
<p>What do you think the results <strong>should</strong> be in all these cases?
I still have some questions about coding style, but I think correct behavior is an even higher priority.</p>
    </div>