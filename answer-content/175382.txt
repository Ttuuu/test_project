<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If you don't mind <code>STDOUT</code> and <code>STDERR</code> being logged under the same logging level, you can do something like this:</p>

<pre><code>import logging
import subprocess

logger = logging.getLogger(__name__)


def execute(system_command, **kwargs):
    """Execute a system command, passing STDOUT and STDERR to logger.

    Source: https://stackoverflow.com/a/4417735/2063031
    """
    logger.info("system_command: '%s'", system_command)
    popen = subprocess.Popen(
        shlex.split(system_command),
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
        universal_newlines=True,
        **kwargs)
    for stdout_line in iter(popen.stdout.readline, ""):
        logger.debug(stdout_line.strip())
    popen.stdout.close()
    return_code = popen.wait()
    if return_code:
        raise subprocess.CalledProcessError(return_code, system_command)
</code></pre>

<p>This way you don't have to mess around with threads.</p>
    </div>