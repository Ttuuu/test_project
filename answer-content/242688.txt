<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A response to the answerers on here so far: if you want best performance, use a C extension. If you want readability, use this:</p>

<pre class="lang-py prettyprint-override"><code>def balanced(lst):
    num_even = sum(item % 2 == 0 for item in lst)
    num_odd = sum(item % 2 == 1 for item in lst)
    return num_even == num_odd
</code></pre>

<p>This is <em>readable</em> AND compact AND probably decently fast. The only thing that might be hard-to-understand, especially for new Python programmers, is the <code>sum(&lt;generator&gt;)</code> construct. You can also expand that construct for better accessibility for new programmers:</p>

<pre class="lang-py prettyprint-override"><code>def balanced(lst):
    num_even = 0
    num_odd = 0
    for number in lst:
        if number % 2 == 0: # even
            num_even += 1
        else: # odd
            num_odd += 1
    return num_even == num_odd
</code></pre>

<p>These code snippets are very concise and clear, in contrast to the currently most-upvoted answers:</p>

<p>The top answer right now uses a special <code>tilt</code> variable. That seems to me like a cryptic trick just for the purpose of using one less variable. Why? We have lots of variables to spare. It's hard-to-understand AND not compact AND probably not even faster than the naive solution.</p>

<p>The second top answer right now uses mathematical tricks to prove that you only need to count half of the numbers to do the checking. That person is probably a great mathematician. Please don't code like that, though. At least not without commenting your hard-to-understand intent.</p>

<p>The most important metric to keep in mind while coding, especially in a language like Python, is readability. Like 99% of your codebase won't ever be a performance issue - and if performance is not an issue, the top priority is readability (after correctness, of course).</p>
    </div>