<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>getPoolBasedOnLevel()</code> is the oddity here. There are three arrow functions doing similar jobs. Using one function with a lookup should clean things up. Effectively, each of them is doing this:</p>
<pre><code>const sum = list=&gt;list.reduce((a,b)=&gt;a+b,0)

function poolTotal(champ_pool,min_cost,max_cost) {
    const champs_for_level = champ_pool.filter(champ=&gt;
        champ.getCost()&gt;=min_cost &amp;&amp;
        champ.getCost()&lt;=max_cost
    );
    const pools = champs_for_level.map(
        champ=&gt;champ.getPool()
    )
    return sum(pools);
}
</code></pre>
<p>That function also implicitly determines the min and maxchampion cost for each level. It would benefit readability to state this is explcitly.</p>
<pre><code>function costsForLevel(level) {
    if (level===2) return {min:1,max:1}
    if (level===3 || level===4) return {min:1,max:3}
    if (level===5 || level===6) return {min:1,max:4}
    return {min:0,max:Number.MAX_VALUE}
}
</code></pre>
<p>With both of these functions defined, then <code>getPoolBasedOnLevel()</code> can be written as so</p>
<pre><code>getPoolBasedOnLevel(summonerLevel) {
    const {min,max} = costForLevel(summonerLevel);
    return poolTotal(this.champPool,min,max);
}
</code></pre>
    </div>