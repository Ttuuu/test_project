<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>something in addition:</p>

<ul>
<li>stick with code style guides. (e.g. I prefer: <a href="https://google.github.io/styleguide/javaguide.html" rel="nofollow noreferrer">https://google.github.io/styleguide/javaguide.html</a> .Something got in my eye: <code>public class caesar</code>, <code>shift_String</code>)</li>
<li>validate users input and notify if something is wrong (it would more user friendly and safe)</li>
<li>assign 'magic' numbers to a constants (in encrypt/decrypt methods, will add more readability to the code)</li>
<li>avoid code duplication (encrypt/decrypt and decision bodies)</li>
</ul>

<p>an example of how main could look like:</p>

<pre><code>public static void main(String[] args) {
    String inputText = JOptionPane.showInputDialog("Please enter text:");
    String normalizedInput = normalizeText(inputText);

    int shiftBy = getIntFromInput("Please enter shift to the right:");
    int option = getIntFromInput("Encrypt (1) or decrypt (2):"); // todo for options i'd recommend to use Enum

    // todo arg validation example
    String resultMessage;
    switch (option) {
        case 1:
            resultMessage = encrypt(normalizedInput, shiftBy);
            break;
        case 2:
            resultMessage = decrypt(normalizedInput, shiftBy);
            break;
        default:
            resultMessage = "Unsupported option: " + option;
    }
    showDialogWithMessage(resultMessage);
}

private static String normalizeText(String inputText) {
    return inputText
            .replaceAll("[^a-zA-Z]+", "")
            .toUpperCase();
}

private static int getIntFromInput(String message) {
    return Integer.parseInt(JOptionPane.showInputDialog(message));
}

private static void showDialogWithMessage(String message) {
    JTextArea msg = new JTextArea(message);
    msg.setLineWrap(true);
    msg.setWrapStyleWord(true);
    JScrollPane scrollPane = new JScrollPane(msg);
    scrollPane.setPreferredSize(new Dimension(300, 300));
    JOptionPane.showMessageDialog(null, scrollPane);
}
</code></pre>
    </div>