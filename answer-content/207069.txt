<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is a very daunting piece of code, with a lot of places for improvement. I wouldn't even start with speeding up the scraping process untill the readability of the code is fixed.</p>

<h1>separate</h1>

<p>Separate the different tasks the code needs to do into different pieces of code, or methods.</p>

<p>Your code :</p>

<ol>
<li>downloads a file</li>
<li>parses it</li>
<li>saves the result to a csv file</li>
<li>starts again with the next file</li>
</ol>

<p>If needed, each of those parts can be split even further (the different transaction types for example)</p>

<p>If you separate the program like this, it is also easier to work on the pieces that take the longest. Finding out whether it is the downloading, writing or parsing that slows everything down is impossible at this moment. If you separate it in a good way, you can even start parallelizing things.</p>

<p>Another advantage is that you can test individual pieces. You can for example save a file on your pc and parse that instead of downloading it each time, to test whether the program acts as expected</p>

<h1>Code quality</h1>

<p>Apart from that, there are a lot of other things to improve</p>

<ul>
<li>open files with a <code>with</code> block</li>
<li>never use a blanck <code>except:</code>, always be more specific in what kind of exception you want to catch</li>
<li>try to limit the line length to 80-120 characters. Putting pieces of code in methods will help tremendously here</li>
<li>don't handcode the URL, but let requests <a href="http://docs.python-requests.org/en/master/user/quickstart/#passing-parameters-in-urls" rel="nofollow noreferrer">do that for you</a></li>
<li>why all those conversions to <code>str</code>?</li>
</ul>

<p>If you can start with adressing these first issues, you can start working on the performance</p>
    </div>