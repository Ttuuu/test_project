<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>While I have not reviewed the private methods closely, I wanted to provide some feedback on several of the public methods.</p>

<pre><code>$dbStatement = new dbStatement($mysqliDb, 'SELECT * FROM users');
echo $dbStatement-&gt;numRows(); // false
$users = $dbStatement-&gt;getAll(); // Users array
echo $dbStatement-&gt;numRows(); // Some int
</code></pre>

<ol>
<li><p>There seems to be some inconsistency how some methods work.  Some methods will trigger the execution of the statement while others will not.  As a result, I believe this will result in some unexpected behavior.  See above for code example.</p></li>
<li><p>You may have good reason for this however I am also curious why numRows() is defaulted to false, while affectedRows() and lastInsertId() are not.</p></li>
<li><p>I also noticed that getLastExecutedQuery() returns the query that was passed in to the class regardless of whether or not it was executed.  It is prepared in the constructor, but is not executed until the private _execute() method.</p></li>
</ol>

<blockquote>
  <p>The class takes for granted that the passed in mysqli object is already connected to a database.</p>
</blockquote>

<p>Lastly, I would recommend ensuring that the class throws an exception or gracefully handles this another way if the mysqli object is not connected to a database.</p>
    </div>