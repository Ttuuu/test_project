<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would write this as an extension to the Sizzle engine rather than a jQuery plugin; I've made a few other minor changes as well:</p>

<pre><code>function hasScroll(el, index, match) {
    var $el = $(el),
        sX = $el.css('overflow-x'),
        sY = $el.css('overflow-y'),
        hidden = 'hidden', // minifiers would like this better
        visible = 'visible',
        scroll = 'scroll',
        axis = match[3]; // regex for filter -&gt; 3 == args to selector

    if (!axis) { // better check than undefined
        //Check both x and y declarations
        if (sX === sY &amp;&amp; (sY === hidden || sY === visible)) { //same check but shorter syntax
            return false;
        }
        if (sX === scroll || sY === scroll) { return true; }
    } else if (axis === 'x') { // don't mix ifs and switches on the same variable
        if (sX === hidden || sX === visible) { return false; }
        if (sX === scroll) { return true; }
    } else if (axis === 'y') {
        if (sY === hidden || sY === visible) { return false; }
        if (sY === scroll) { return true };
    }

    //Compare client and scroll dimensions to see if a scrollbar is needed

    return $el.innerHeight() &lt; el.scrollHeight || //make use of potential short circuit
        $el.innerWidth() &lt; el.scrollWidth; //innerHeight is the one you want
}
$.expr[':'].hasScroll = hasScroll;
</code></pre>

<p>You can then use this in any jQuery selector, such as:</p>

<pre><code>$('div:hasScroll') //all divs that have scrollbars
$('div').filter(':hasScroll') //same but better
$(this).closest(':hasScroll(y)') //find the parent with the vert scrollbar
$list.is(':hasScroll(x)') //are there any horizontal scrollbars in the list?
</code></pre>

<p>If you must have an instance method to do this check then you could write this to keep your semantics:</p>

<pre><code>$.fn.hasScroll = function(axis) {
    var el = this[0];
    if (!el) { return false; }
    return hasScroll(el, 0, [0, 0, 0, axis]);
};
</code></pre>

<p><a href="http://jsfiddle.net/u69dU/1/">Updated JsFiddle</a></p>
    </div>