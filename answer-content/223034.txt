<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This solution actually has a data race on <code>count</code>. <code>count</code> is accessed outside the mutex from both threads:</p>

<pre class="lang-c prettyprint-override"><code>while(count &lt;= 10)
</code></pre>

<p>Compile the program with the thread sanitizer (or the corresponding tool in Visual Studio) and it should throw a warning.</p>

<p>The program doesn't necessarily exit. When I run it, <code>thread1</code> hangs forever at the call to <code>pthread_cond_wait()</code>.</p>

<p>It looks like <code>thread1</code> is blocked at <code>pthread_mutex_lock()</code> while <code>thread2</code> increments <code>count</code> to 11. After <code>thread2</code> unlocks the mutex, it exits because <code>count &lt;= 10</code> is false. <code>thread1</code>, on the other hand, moves on to <code>pthread_cond_wait()</code> and waits forever because <code>thread2</code> isn't around to send a signal to wake it.</p>
    </div>