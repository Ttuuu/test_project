<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First off I think your code can be adjusted:</p>
<p>Booleans to keep track of even or odd size of matrix and even or odd numbered rows allows you to use one set of loops and simply change which set of numbers are printed.</p>
<p>To test for odd or even I like <code>(num &amp; 1)</code> if the result is 0 it's even, 1 it's odd.  I think using modulus for this is inefficient.</p>
<p>Changing the code to using one loop could look something like this:</p>
<pre><code>static void solution(InputStream sIn, PrintStream sOut) throws IOException {
    Scanner sc = new Scanner(sIn);
    int cases = sc.nextInt();
    for (int c = 0; c &lt; cases; ++c) {
        int size = sc.nextInt();
        boolean evenM = (size &amp; 1) == 0;
        for (int row = 0; row &lt; size; ++row) {
            boolean oddR = (row &amp; 1) == 1;
            for (int col = 0; col &lt; size; ++col) {
                boolean last = col == size - 1;
                int num = (row * size) + col + 1;
                if (evenM &amp;&amp; oddR) {
                    num = (num - col) + (size - col) - 1;
                    if (last) {
                        sOut.print(num);
                    } else {
                        sOut.printf("%d ", num);
                    }
                } else if (last) {
                    sOut.print(num);
                } else {
                    sOut.printf("%d ", num);
                }
            }
            sOut.println();
        }
    }
}
</code></pre>
<p>All that being said, I think your main problem is Java itself, or the implementation that CodeChef is using.  When I port this code to c++ it works just fine and can be submitted successfully.</p>
    </div>