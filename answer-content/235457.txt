<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have some suggestions for your code.</p>

<p>1) The <code>input</code> variable is unused.</p>

<p>2) Since the tees variables are hard-coded and have two values, I suggest that you use an <code>Enum</code> to hold the values. It will make the code easier to read and remove the variables from the method.</p>

<p><strong>Tees.java</strong></p>

<pre class="lang-java prettyprint-override"><code>public enum Tees {
    BLACK(146, 74.6F),
    BLUE(139, 72.4F),
    WHITE(129, 70.0F),
    GOLD(133, 71.3F);

    private final int slope;
    private final float rating;

    Tees(int slope, float rating) {
        this.slope = slope;
        this.rating = rating;
    }

    public int getSlope() {
        return slope;
    }

    public float getRating() {
        return rating;
    }
}

</code></pre>

<p><strong>Main.java</strong></p>

<pre class="lang-java prettyprint-override"><code>
//[...]
double handicapDifferential = (userScore - Tees.BLACK.getRating()) * 113 / Tees.BLACK.getSlope();
//[...]

</code></pre>

<p>3) Since there are multiple instances of <code>java.util.Scanner</code>, I suggest that you create a constant for it; so you can use it everywhere.</p>

<pre class="lang-java prettyprint-override"><code>    public static final Scanner SCANNER = new Scanner(System.in);
</code></pre>

<p>4) For the method <code>readNumber</code>, I suggest that you rename it to <code>readAnswersAsNumber</code>; since this method to more than read. </p>

<p>5) In the same idea of the method <code>readNumber</code>, I suggest that you make a new method to read <code>java.lang.String</code> answers. This will save 2 lines per questions / answers.</p>

<p><strong>Before</strong></p>

<pre class="lang-java prettyprint-override"><code>System.out.print("Please type your Name: ");
String name = SCANNER.nextLine().trim();
</code></pre>

<p><strong>After</strong></p>

<pre class="lang-java prettyprint-override"><code>public static void main(String[] args) {
        //[...]
    String name = readAnswersAsString("Please type your Name: ");
        //[...]
}

private static String readAnswersAsString(String question) {
    System.out.print(question);
    return SCANNER.nextLine().trim();
}
</code></pre>

<p>6) Instead of concatenating a string in the <code>java.io.PrintStream#println</code>, you can use the <code>java.io.PrintStream#printf</code> and use the java string templates. But, the only downside, it has the same effect as the <code>java.io.PrintStream#print</code> method, it doesn't add a new line, so you have to add it to the template ('\n' or '%n').</p>

<p>'\n' vs '%n' on <a href="https://stackoverflow.com/questions/1883345/whats-up-with-javas-n-in-printf/">stackoverflow</a></p>

<pre class="lang-java prettyprint-override"><code>System.out.printf("Thank you %s. Did you play the White, Blue or Black tees?%n", name);
</code></pre>

<p>7) When checking the color of the tees, since we used an <code>Enum</code> earlier, we can use it instead of the string.</p>

<pre class="lang-java prettyprint-override"><code>String teesPlayed = readAnswersAsString("Tees Played: ").toUpperCase();

if(Tees.BLACK.name().equals(teesPlayed)) {
    //[...]
}
</code></pre>

<p>8) Instead of using only <code>if</code>, I suggest that you use the <code>if-else-if</code>, since there's only one color each time.</p>

<pre class="lang-java prettyprint-override"><code>
if (Tees.BLACK.name().equals(teesPlayed)) {
    //[...]
} else if(Tees.BLUE.name().equals(teesPlayed)) {
    //[...]
}

</code></pre>

<p>9) Since the score logic is similar in all colors, I suggest that you extract it in a method.</p>

<pre class="lang-java prettyprint-override"><code>public static void main(String[] args) {
    if (Tees.BLACK.name().equals(teesPlayed)) {
        handleScore(name, "Please enter your black tee round score: ", Tees.BLACK);
        break;
    } else if (Tees.BLUE.name().equals(teesPlayed)) {
        handleScore(name, "Please enter your blue tee round score: ", Tees.BLUE);
        break;
    } else if (Tees.WHITE.name().equals(teesPlayed)) {
        handleScore(name, "Please enter your white tee round score: ", Tees.WHITE);
        break;
    } else if (Tees.GOLD.name().equals("gold")) {
        handleScore(name, "Please enter your gold tee round score: ", Tees.GOLD);
        break;
    }
}

private static void handleScore(String name, String question, Tees tees) {
    short userScore = (short) readAnswersAsNumber(question, 55, 300);

    double handicapDifferential = (userScore - tees.getRating()) * 113 / tees.getSlope();
    double rounded = Math.round(handicapDifferential * 10.0) / 10.0;

    System.out.printf("%n%s, Your Handicap Differential for this round is: %.02f. This rounds to %.2f!", name, handicapDifferential, rounded);
}
</code></pre>

<h2>Refactored code</h2>

<pre class="lang-java prettyprint-override"><code>public static final Scanner SCANNER = new Scanner(System.in);

public static void main(String[] args) {
    System.out.println("Welcome to Medford Village CC Single Round Handicap Calculator!");
    String name = readAnswersAsString("Please type your Name: ");
    System.out.printf("Thank you %s. Did you play the White, Blue or Black tees?%n", name);

    while (true) {
        String teesPlayed = readAnswersAsString("Tees Played: ").toUpperCase();

        if (Tees.BLACK.name().equals(teesPlayed)) {
            handleScore(name, "Please enter your black tee round score: ", Tees.BLACK);
            break;
        } else if (Tees.BLUE.name().equals(teesPlayed)) {
            handleScore(name, "Please enter your blue tee round score: ", Tees.BLUE);
            break;
        } else if (Tees.WHITE.name().equals(teesPlayed)) {
            handleScore(name, "Please enter your white tee round score: ", Tees.WHITE);
            break;
        } else if (Tees.GOLD.name().equals(teesPlayed)) {
            handleScore(name, "Please enter your gold tee round score: ", Tees.GOLD);
            break;
        }

        System.out.println("Please Enter Black, Blue, Gold or White.");
    }

    System.out.println();
    System.out.println("Thank you, Goodbye!");
}

private static void handleScore(String name, String question, Tees tees) {
    short userScore = (short) readAnswersAsNumber(question, 55, 300);

    double handicapDifferential = (userScore - tees.getRating()) * 113 / tees.getSlope();
    double rounded = Math.round(handicapDifferential * 10.0) / 10.0;

    System.out.printf("%n%s, Your Handicap Differential for this round is: %.02f. This rounds to %.2f!", name, handicapDifferential, rounded);
}

private static String readAnswersAsString(String question) {
    System.out.print(question);
    return SCANNER.nextLine().trim();
}

public static double readAnswersAsNumber(String prompt, int min, int max) {
    short value;
    while (true) {
        System.out.print(prompt);
        value = SCANNER.nextShort();
        if (value &gt;= min &amp;&amp; value &lt;= max)
            break;
        System.out.println("Please enter an amount between " + min + " and " + max + ".");
    }
    return value;
}
</code></pre>

<hr>

<h2>Edit - Method to fetch the tee color directly</h2>

<p>I suggest that you create a method that return directly the <code>Tees</code> enum.</p>

<pre class="lang-java prettyprint-override"><code>private static Tees readTeeColor() {
    while (true) {
        String teeColor = readAnswersAsString("Tees Played: ").toUpperCase();

        try {
            return Tees.valueOf(teeColor);
        } catch (IllegalArgumentException ex) {
            System.out.println("Please Enter Black, Blue, Gold or White.");
        }
    }
}
</code></pre>

<p>With this modification, you need to change the condition and remove the while loop, since the <code>readTeeColor</code> will now handle the invalid choice by looping indefinitely.</p>

<pre class="lang-java prettyprint-override"><code>System.out.printf("Thank you %s. Did you play the White, Blue or Black tees?%n", name);

Tees teesPlayed = readTeeColor();

if (Tees.BLACK.equals(teesPlayed)) {
    handleScore(name, Tees.BLACK);
} else if (Tees.BLUE.equals(teesPlayed)) {
    handleScore(name, Tees.BLUE);
} else if (Tees.WHITE.equals(teesPlayed)) {
    handleScore(name, Tees.WHITE);
} else if (Tees.GOLD.equals(teesPlayed)) {
    handleScore(name, Tees.GOLD);
}

System.out.println();
</code></pre>

<hr>

<h2>Edit - Code clean-up</h2>

<p>Has @roland-illig suggested in the comment, you can remove the similar message very easily.</p>

<p>1) Remove the parameter <code>question</code> of the method <code>handleScore</code>.</p>

<pre class="lang-java prettyprint-override"><code>private static void handleScore(String name, Tees tees) {
    //[...]
}
</code></pre>

<p>2) Use the template in the method <code>handleScore</code>.</p>

<pre class="lang-java prettyprint-override"><code>private static void handleScore(String name, Tees tees) {
        //[...]
    short userScore = (short) readAnswersAsNumber(String.format("Please enter your %s tee round score: ", tees.name().toLowerCase()), 55, 300);
        //[...]
}
</code></pre>

<p>3) Since the <code>handleScore</code> is now generic, you donâ€™t need the <code>if-else</code> checks anymore.</p>

<p><strong>Redacted Code</strong></p>

<pre class="lang-java prettyprint-override"><code>public static final Scanner SCANNER = new Scanner(System.in);

public static void main(String[] args) {
    System.out.println("Welcome to Medford Village CC Single Round Handicap Calculator!");
    String name = readAnswersAsString("Please type your Name: ");
    System.out.printf("Thank you %s. Did you play the White, Blue or Black tees?%n", name);

    handleScore(name, readTeeColor());

    System.out.println();
    System.out.println("Thank you, Goodbye!");
}

private static void handleScore(String name, Tees tees) {
    short userScore = (short) readAnswersAsNumber(String.format("Please enter your %s tee round score: ", tees.name().toLowerCase()), 55, 300);

    double handicapDifferential = (userScore - tees.getRating()) * 113 / tees.getSlope();
    double rounded = Math.round(handicapDifferential * 10.0) / 10.0;

    System.out.printf("%n%s, Your Handicap Differential for this round is: %.02f. This rounds to %.2f!", name, handicapDifferential, rounded);
}


private static Tees readTeeColor() {
    while (true) {
        String teeColor = readAnswersAsString("Tees Played: ").toUpperCase();

        try {
            return Tees.valueOf(teeColor);
        } catch (IllegalArgumentException ex) {
            System.out.println("Please Enter Black, Blue, Gold or White.");
        }
    }
}

private static String readAnswersAsString(String question) {
    System.out.print(question);
    return SCANNER.nextLine().trim();
}

public static double readAnswersAsNumber(String prompt, int min, int max) {
    short value;
    while (true) {
        System.out.print(prompt);
        value = SCANNER.nextShort();
        if (value &gt;= min &amp;&amp; value &lt;= max)
            break;
        System.out.println("Please enter an amount between " + min + " and " + max + ".");
    }
    return value;
}
<span class="math-container">```</span>
</code></pre>
    </div>