<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A couple of small pointers. I'm skipping over larger architecture issues because it seems that this code is not the complete example of working code.</p>

<ol>
<li>Local variables are usually started with lower case letter, so I would suggest renaming <code>DoubleProgressBar</code> to <code>doubleProgressBar</code></li>
<li>You are iterating over <code>files</code> with this <code>for (var i = files.GetLowerBound(0); i &lt;= files.GetUpperBound(0); i++)</code>. Why not just use ordinary <code>for (var i = 0; i &lt; files.Length; i++)</code>?</li>
<li>You are using some string in switch cases. I would suggest using Enums, because those are safer to change, even if they are not as expressive as a string can be. Also, with enums you get a better support from tools.</li>
<li>In <code>Main</code> you seem to be using regular string concat ("a" + "b" + "c"). Consider using string interpolation or string.Format()</li>
<li>In <code>Main</code> you are settings <code>files = null</code> and then passing it as a <code>ref</code> parameter. When you are initializing a value inside method ("multiple return values"), you should use <code>out</code> (see <code>Int32.TryParse</code>-for example). You could also use tuples to avoid <code>out</code> and <code>ref</code> (C# 7 onwards?). </li>
</ol>

<p>On general note, I would avoid methods that do multiple things. Method <code>ModelIsSetUpBasedOnArgumentsOrUI</code> does answer to that question, but it also initializes the files. If possible, those should be done in separate methods to make to code easier to understand.</p>
    </div>