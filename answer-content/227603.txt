<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Note:</strong> a module is actually a directory located in some "wp-content/plugins" directories.</p>

<p>The main issue with your algorithm is the <code>-exec</code> primary. Contrary to what you think, the primary executes its argument for each corresponding file.</p>

<pre><code>for i in $(find . -type d -name 'plugins' | grep 'wp-content/plugins$'); do
   find $i -maxdepth 1 -type d -exec basename -- '{}' \;
done | sort -u
</code></pre>

<p>Otherwise, the algorithm is correct but we have an issue about the performance. A good knowledge of utilities makes the difference.</p>

<p>For instance, your shell command operation looks like this:</p>

<pre class="lang-none prettyprint-override"><code>&gt; find &lt;dir&gt;
  &gt;&gt; find &lt;dir A&gt; &lt;sub_dirs&gt;
    &gt;&gt;&gt; basename &lt;dir 1&gt;        
    &gt;&gt;&gt; basename &lt;dir 2&gt;
    ...
  &gt;&gt; find &lt;dir B&gt; &lt;sub_dirs&gt;
    &gt;&gt;&gt; basename &lt;dir 1&gt;
    &gt;&gt;&gt; basename &lt;dir 2&gt;
    ...
  &gt;&gt; find ...
    &gt;&gt;&gt; basename ...
    ...
&gt; sort the output
</code></pre>

<p>Your may use <code>find</code> using the "AND" operator <code>-a</code> to filter the directory names.</p>

<pre><code>find . -type d -path "*/wp-contents/plugins/*" -a \
    ! -path "*/wp-contents/plugins/*/*" -exec basename '{}' \; |
 sort -u
</code></pre>
    </div>