<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Recursion is probably your main problem, as <a href="https://codereview.stackexchange.com/questions/200916/binary-tree-longest-consecutive-sequence#comment386998_200916">Graipher</a> mentioned in the comments.</p>

<p>You could refactor it to be iterative:</p>

<pre><code>def lcs(root):
    if root is None:
        return 0
    longest_sequence = 0
    nodes = dict()
    nodes[root] = 1
    while True:
        new_nodes = dict()
        for node, length in nodes.items():
            for subnode in (node.left, node.right):
                if subnode:
                    if subnode.val - node.val == 1:
                        new_nodes[subnode] = length + 1
                    else:
                        new_nodes[subnode] = 1
            longest_sequence = max(longest_sequence, length)
        nodes = new_nodes
        if not nodes:
            break
    return longest_sequence
</code></pre>
    </div>