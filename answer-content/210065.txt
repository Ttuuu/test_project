<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>password = 'admin'
</code></pre>

<p>You may have guessed this already, but this is not a secure way to store a password. It should be hashed, and stored in a file that has restrictive permissions. This is only a start - you can do more advanced things like using the OS keychain, etc.</p>

<pre><code>while (loginTrust is False):
</code></pre>

<p>can be</p>

<pre><code>while not loginTrust:
</code></pre>

<p>The same applies to <code>while petTyCheck == False</code>.</p>

<p>This:</p>

<pre><code>if (petType.lower() == 'dog' or petType.lower() == 'cat' or petType.lower() == 'bird' or petType.lower() == 'rodent'):
</code></pre>

<p>can be:</p>

<pre><code>if petType.lower() in ('dog', 'cat', 'bird', 'rodent'):
</code></pre>

<p>Even better, if you de-pluralize your key names in <code>roomRates</code>, you can write:</p>

<pre><code>if petType.lower() in roomRates.keys():
</code></pre>

<p>When you write this:</p>

<pre><code>           petType= input("\n'Dog', 'Cat', 'Bird', 'Rodent'\n Enter pet type: ")
</code></pre>

<p>You shouldn't hard-code those pet names. Instead, use a variable you already have, such as <code>roomRates</code>:</p>

<pre><code>print(', '.join(roomRates.keys()))
input('Enter pet type: ')
</code></pre>

<p>This:</p>

<pre><code>bookingID = str(cIdString[0:4] + cIdString[5:7] + cIdString[8:10] + cIdString[11:13] + cIdString[14:16] + cIdString[17:19])
</code></pre>

<p>should not be done this way. As far as I can tell, you're using a custom date format. Read about using <code>strftime</code> for this purpose.</p>

<p>This:</p>

<pre><code>print("\nRules when assigning rooms: \nFor dogs: 'D' + any numbers \nFor cats: 'C' + any numbers \nFor birds: 'B' + any numbers \nFor rodents: 'R' + any numbers")
</code></pre>

<p>should have you iterating over the list of pet type names, taking the first character and capitalizing it. Similarly, any other time that you've hard-coded a pet type name, you should attempt to get it from an existing variable.</p>

<p>This:</p>

<pre><code>if (len(cBidLenC) &gt; 14):
    print("Invalid booking ID")
    cObid = str(input("Please enter booking ID: "))
elif (len(cBidLenC) &lt; 14):
    print("Invalid booking ID")
    cObid = str(input("Please enter booking ID: "))
elif (len(cBidLenC) == 14): 
    print("Correct booking ID: ")
</code></pre>

<p>should be:</p>

<pre><code>if len(cBidLenC) != 14:
    print('Invalid booking ID')
else:
    print('Valid booking ID.')
</code></pre>

<p>Also, that logic needs to be adjusted so that you loop until the ID is valid.</p>

<p>These:</p>

<pre><code>checkInDay = int(e[3][8:10])
checkOutDay = int(cOdString[8:10])
</code></pre>

<p>should not be using string extraction for date components. You should be using actual date objects and getting the day field from them.</p>

<p>This:</p>

<pre><code>count = count + 1
</code></pre>

<p>should be</p>

<pre><code>count += 1
</code></pre>

<p>You should also consider writing a <code>main</code> function rather than having global code.</p>
    </div>