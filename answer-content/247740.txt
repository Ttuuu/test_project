<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<p>But what do you think, did I use polymorphism in <code>Accounts</code>, <code>CurrentAccount</code>, <code>SavingAccount</code> and also between <code>Person</code>, <code>Customer</code>, <code>Manager</code> classes or not?</p>
</blockquote>
<p>No, you didn't use polymorphism anywhere in your program. You only work with concrete classes of <code>CurrentAccount</code>, <code>SavingAccount</code>, <code>Customer</code> and <code>Manager</code>.</p>
<p>Polymorphism means, that you call the concrete classes functions via a reference or pointer to their base class. E.g.:</p>
<pre><code>class Bank
{
    Customer customers;
    Accounts* accountsC;
    Accounts* accountsS;
    // ...
};

Bank::Bank()
{
    accountsC = new CurrentAccount();
    accountsS = new SavingAccount();
    cout &lt;&lt; "\nThe program is in the bank class\n";
}
//Current Account
void Bank::Add_Current_Account(int AID, string AT, int CID, int AB)
{
    accountsC-&gt;Deposit(AID, AT, CID, AB);
}

// ...
Bank::~Bank()
{
    delete accountsC;
    delete accountsS;
    cout &lt;&lt; "\nThe Bank class ended \n";
   
}
</code></pre>
<hr>
<p>Also the whole program structure and class hierarchy seems a bit suspect to me:</p>
<ul>
<li>Shouldn't a <code>Bank</code> instance have many <code>CustomerAccount</code>s?</li>
<li>A <code>Customer</code> instance could have more than one account at the same <code>Bank</code>, no?</li>
<li>What's the actual role of a <code>Manager</code> instance? Could they do something to manipulate a <code>Customer</code>s accounts?</li>
<li>I don't fully understand what <code>accountsS</code> (<code>SavingAccount</code>) is for. Are you sure that you need it at all?</li>
</ul>
    </div>