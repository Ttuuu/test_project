<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If it works as expected, there's nothing wrong with it.
However to improve the readability, I'd separate the <code>setState</code> call from actual sorting. Also be careful when you change the <code>order</code> state variable and when you use that variable to determine the sort order.</p>

<pre><code>orderUsers() {
  if (this.state.order) {
    return this.state.users.sort((a, b) =&gt; {
      if (a.name &lt; b.name) return -1;
      if (a.name &gt; b.name) return 1;
      return 0;
    });
  }

  return this.state.users.reverse((a, b) =&gt; {
    if (a.name &lt; b.name) return 1;
    if (a.name &gt; b.name) return -1;
    return 0;
  });
}

onSortChange = () =&gt; {
  const orderedUsers = this.orderUsers();

  this.setState({
    users: orderedUsers,
    order: !this.state.order,
  });
}
</code></pre>

<p>Also as others have suggested, you could just sort it in <code>render()</code>. Keep in mind that you should not mutate state objects. The <code>Array.sort()</code> and <code>Array.reverse()</code> mutate the array in place. You could get unexpected results as a result of this.</p>
    </div>