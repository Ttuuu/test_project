<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Building on top of <a href="https://codereview.stackexchange.com/users/11245/louis-dionne">Louisse Dionne's</a> solution and simplifying <code>for_each</code> slightly by using <code>index_sequence_for</code> we could arrive at this:</p>

<pre><code>#include &lt;cstddef&gt;
#include &lt;tuple&gt;
#include &lt;utility&gt;

template &lt;typename Tuple, typename F, std::size_t ...Indices&gt;
void for_each_impl(Tuple&amp;&amp; tuple, F&amp;&amp; f, std::index_sequence&lt;Indices...&gt;) {
    using swallow = int[];
    (void)swallow{1,
        (f(std::get&lt;Indices&gt;(std::forward&lt;Tuple&gt;(tuple))), void(), int{})...
    };
}

template&lt;typename F, typename... Args&gt;
void for_each(const std::tuple&lt;Args...&gt;&amp; tuple, F&amp;&amp; f)
{
    for_each_impl(tuple, std::forward&lt;F&gt;(f), std::index_sequence_for&lt;Args...&gt;{});
}
</code></pre>
    </div>