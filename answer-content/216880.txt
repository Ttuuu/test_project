<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I invite you to review <a href="https://codereview.stackexchange.com/a/216863/8999">@DeadMG's answer</a>.</p>

<p>Rewriting following (most of) his advice, you'd get something like:</p>

<pre><code>#include &lt;cassert&gt;
#include &lt;algorithm&gt;
#include &lt;vector&gt;

std::vector&lt;T&gt; intersection(std::vector&lt;T&gt; const&amp; left_vector, std::vector&lt;T&gt; const&amp; right_vector) {
    auto left = left_vector.begin();
    auto left_end = left_vector.end();
    auto right = right_vector.begin();
    auto right_end = right_vector.end();

    assert(std::is_sorted(left, left_end));
    assert(std::is_sorted(right, right_end));

    std::vector&lt;T&gt; result;

    while (left != left_end &amp;&amp; right != right_end) {
        if (*left == *right) {
            result.push_back(*left);
            ++left;
            ++right;
            continue;
        }

        if (*left &lt; *right) {
            ++left;
            continue;
        }

        assert(*left &gt; *right);
        ++right;
    }

    return result;
}
</code></pre>

<p>I've always found taking pairs of iterators awkward, so I would not recommend such an interface. Instead, you could take simply take any "iterable", they need not even have the same value type, so long as they are comparable:</p>

<pre><code>template &lt;typename Left, typename Right&gt;
std::vector&lt;typename Left::value_type&gt; intersection(Left const&amp; left_c, Right const&amp; right_c);
</code></pre>

<p>Also, note that I've included some <code>assert</code> to validate the pre-conditions of the methods (the collections must be sorted) as well as internal invariants (if <code>*left</code> is neither equal nor strictly less than <code>*right</code> then it must be strictly greater).</p>

<p>I encourage you to use <code>assert</code> liberally:</p>

<ul>
<li>They document intentions: pre-conditions, invariants, etc...</li>
<li>They check that those intentions hold.</li>
</ul>

<p>Documentation &amp; Bug detection rolled in one, with no run-time (Release) cost.</p>
    </div>