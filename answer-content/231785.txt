<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>[I am writing this a separate answer as I have tested it now.]</p>

<p>I compiled your code and run the same test, with the same result. After some trying around, the problem seems to be that <em>the four threads all access the same counting vector</em> of struct (<code>std::vector&lt;Counters&gt; MyCounters(4);</code>).<br>
I replaced the counter with a simple variable (<code>unsigned long long int My1Counter;</code>), and I get now a factor of 3.8 improvement for the multi-threaded run (this is still inside the dev environment, and the remaining .2 is probably the dev env eating a bit).</p>

<p>My guess is that <em>the vector class is 'thread-safe'</em>, and therefore locks each time you access it from one of the threads, so the other three have to wait.<br>
You can try a simple C-array to verify that, as it would not be implicitly thread-safe</p>
    </div>