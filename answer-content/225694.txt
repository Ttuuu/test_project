<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here is what we start with.</p>

<pre class="lang-py prettyprint-override"><code>In [16]: df1
Out[16]:
  name  year
0  ram  1873
1  rob  1900

In [17]: df2
Out[17]:
  name                     text
0  ram               A good kid
1  ram      He was born on 1873
2  rob               He is tall
3  rob         He is 12 yrs old
4  rob  His father died at 1900
</code></pre>

<p>What you probably want to do is merge your two DataFrames.  If you're familiar with SQL, this is just like a table join.  The <code>pd.merge</code> step essentially "adds" the columns from <code>df1</code> to <code>df2</code> by checking where the two DataFrames match on the column "name".  Then, once you have the columns you want ("year" and "text") matching according to the "name" column, we apply the function <code>lambda x: str(x.year) in x.text</code> (which checks if the year is present in the text) across the rows (<code>axis=1</code>).</p>

<pre class="lang-py prettyprint-override"><code>In [18]: cond = pd.merge(
    ...:     left=df2,
    ...:     right=df1,
    ...:     how="left",
    ...:     left_on="name",
    ...:     right_on="name",
    ...: ).apply(lambda x: str(x.year) in x.text, axis=1)
</code></pre>

<p>This gives us a Series which has the same index as your second DataFrame, and contains boolean values telling you if your desired condition is met or not.</p>

<pre class="lang-py prettyprint-override"><code>In [19]: cond
Out[19]:
0    False
1     True
2    False
3    False
4     True
dtype: bool
</code></pre>

<p>Then, we filter your Series to where the condition is true, and give the index, optionally converting it to a list.</p>

<pre class="lang-py prettyprint-override"><code>In [20]: cond[cond].index
Out[20]: Int64Index([1, 4], dtype='int64')
In [21]: cond[cond].index.tolist()
Out[21]: [1, 4]
</code></pre>

<p>If all you need later on is to iterate over the indices you've gotten, <code>In [18]</code> and <code>In [20]</code> will suffice.</p>
    </div>