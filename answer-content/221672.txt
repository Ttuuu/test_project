<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are a lot of good comments here already, overall good work ...  </p>

<p>The <code>resize</code> function is not threadsafe, especially since you are using a singleton you don't know where this will be called from, not making this threadsafe leaves you open to race conditions. </p>

<p>You're not unlocking <code>JobQueue</code> before the call to notify, that seems strange, the thread that gets woken up would at least have to wait for the push call to release the lock. </p>

<p>While the number of cores is definitely a factor that should be taken under consideration, it's really the runtime behavior of the threads that determines the best size of the threadpool, by creating the artificial limit you're limiting the use of your pool. I'd use the <code>std::thread::hardware_concurrency()</code> as a default value for the constructor but not to limit the size of the pool. Anybody playing around with the pool size can now determine the optimal size for their use case.</p>

<p>I have to put in my two cents with regards to singletons, I use singletons in some places in my code but I have not found a good reason to limit construction of singleton objects, by allowing singleton access or new construction of the object you create opportunities for varied use, it makes testing easier, and sometimes lets you get rid of the singleton access. Just make the constructor public anybody looking at your class can see ah i can use the singleton, or i can create one and pass it around. </p>
    </div>