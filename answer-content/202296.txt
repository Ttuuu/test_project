<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>IMO you code is very clear and therefore easy to understand.</p>

<p>You're comparing the Java code to a Python code which is shorter. But the Python code is using two methods: <code>diff</code> and <code>shift</code>. They provide functionality which you wrote in Java by yourself.</p>

<p>If you're aiming to have a shorter <code>getSpeedS</code> function you can also define a <code>diff</code> function in Java:</p>

<pre><code>protected double diff(List&lt;Double&gt; simTime, List&lt;Double&gt; roadS, int idx) {
    return (roadS.get(idx) - roadS.get(idx - 1)) / (simTime.get(idx) - simTime.get(idx - 1));
}
</code></pre>

<p>Using the Stream-API you can implement <code>getSpeedS</code> like this:</p>

<pre><code>public List&lt;Double&gt; getSpeedS(List&lt;Double&gt; simTime, List&lt;Double&gt; roadS) {
    return IntStream.range(0, simTime.size())
            .mapToDouble(idx -&gt; diff(simTime, roadS, idx))
            .boxed()
            .collect(Collectors.toList());
}
</code></pre>

<p>And if you write it all in one line ...</p>

<pre><code>public List&lt;Double&gt; getSpeedS(List&lt;Double&gt; simTime, List&lt;Double&gt; roadS) {
    return IntStream.range(0, simTime.size()).mapToDouble(idx -&gt; diff(simTime, roadS, idx)).boxed().collect(Collectors.toList());
</code></pre>

<p>}</p>

<p>it's not much longer than the Python code. But writing it all in one line is harder to debug. Therefore I prefer the previous version.</p>

<p>Otherwise you could also implement a <code>DoubleList</code> which provides like the Python collection a <code>diff</code> and a <code>shift</code> function.</p>
    </div>