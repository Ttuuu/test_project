<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Got it using promises:</p>

<pre><code>//Finds if project_contact email has permission to upload
    function findProjectContacts() {
        return new Promise((resolve, reject) =&gt; {
            ProjectContacts.findAll({ where: { can_upload_files: 1, email_address: email }, attributes: ['email_address', 'project_id', 'can_upload_files'] })
                .then(projectContacts =&gt; {
                    if (projectContacts.length &gt; 0) {
                        return resolve(true);
                    }
                    else {
                        const error = createError(`${email} does not have permission to upload!`, 401);
                        return reject(error);
                    }
                })
                .catch(err =&gt; {
                    const error = createError(`${email} does not have permission to upload!`, 401, err);
                    return reject(error)
                })
        })
    }

    //Checks if file exists in SharePoint
    function findFile() {
        return new Promise((resolve, reject) =&gt; {
            doesFileExistSp(creds, spSite, siteUrl, spFile).then(exists =&gt; {
                if (!exists) {
                    const error = createError(`${filename} does not exist in ${spFolder}`, 404);
                    return reject(error);
                } else {
                    return resolve(true);
                }
            }).catch(err =&gt; {
                const error = createError(`${filename} does not exist in ${spFolder} `, 404, err);
                return reject(error);
            });
        });
    }

    //Pulls file from SharePoint to download into specified filepath
    function pullFile() {
        return new Promise((resolve, reject) =&gt; {
            const sppullContext = {
                siteUrl: siteUrl, //SharePoint URL
                creds: creds
            };
            const sppullOptions = {
                spRootFolder: spFolder,      // The folder path for the file in SharePoint
                dlRootFolder: downloadPath,  // Where the file is saved locally
                strictObjects: [filename],  // Only download the filename specified as a query parameter
                muteConsole: true
            };
            pullFromSharePoint(sppullContext, sppullOptions)      //Pull file with filename from SharePoint
                .then(filepath =&gt; {
                    if (!fs.existsSync(filepath)) {
                        const error = createError(`${filepath} does not exist`, 404);
                        return reject(error);
                    }
                    else {
                        logger.info(`FILE NOW IN PATH: ${filepath}`);
                        const s3UploadFolder = path.join(downloadPath, uploadFolderName);
                        makeDirs(s3UploadFolder);

                    }
                    return resolve(true);
                });
        });
    }

    findProjectContacts()
        .then(permission =&gt; {
            if (permission === true)
                return findFile();
        })
        .then(fileFound =&gt; {
            if (fileFound === true)
                return pullFile();
        }).then(fileCopied =&gt; {
            if (fileCopied === true)
                logger.info(`${filename} has been uploaded`);
            return res.status(200).json({
                message: `${filename} has been uploaded`
            });
        }).catch(errorObj =&gt; {
            return next(errorObj);
        })
}
</code></pre>
    </div>