<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Currying?</h3>
<p><img src="https://images.unsplash.com/photo-1541095441899-5d96a6da10b8?ixlib=rb-0.3.5&amp;s=2732d91db1e857951085714318f7df30&amp;auto=format&amp;fit=crop&amp;w=140&amp;h=200&amp;q=60&amp;ch=dpr" alt="1"></p>
<p><a href="https://unsplash.com/@moniqa?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge" rel="nofollow noreferrer">Photo hosted via unsplash, taken by Monika Grabkowska</a></p>
<p>Yes you used <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind" rel="nofollow noreferrer"><code>Function.bind()</code></a> to fix the callback function as the first argument to the private function, and this is a good approach to avoid excess functions and reduce the number of lines. While the concept is similar, what this code uses is actually <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Partially_applied_functions" rel="nofollow noreferrer"><strong>Partial Application</strong></a>. Read more about the differences in <a href="https://codeburst.io/javascript-currying-vs-partial-application-4db5b2442be8#169e" rel="nofollow noreferrer">this article</a>.</p>
<hr>
<p>The first couple functions appear to catch errors, but <code>fetchMessage()</code> doesn't appear to. Maybe you have updated it since you posted it but if not, I would suggest adding error handling there too.</p>
<hr>
<p>You could consider using <code>async</code> and <code>await</code> to reduce the <code>.then()</code> callbacks.</p>
    </div>