<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I am only discovering this question after attending to this associated question from the OP: <a href="https://stackoverflow.com/q/55203392/2943403">Writing and Updating ~8K-10K Iterations of URLs Strings on a Text File (PHP, Performance, CRON)</a></p>

<ol>
<li><p>I go to great lengths to avoid the use of "large-battery" <code>if</code> blocks and <code>switch</code> blocks in my code because they are so verbose.   You have some predictable/static exchange codes so you can craft a single lookup array at the start of your class and leverage that for all subsequent processes.  Having a single lookup array in an easy-to-find location will make your code more manageable for you and other developers.  Once you have your lookup array (I'll call it <code>const EXCHANGE_CODES</code>), you can initiate an array to store the running tally for each market code encountered (I'll call it <code>$exchange_counts</code>); this array should be declared one time before the loop is started.  Inside the loop, you can use <code>strpos()</code> and <code>substr()</code> to extract the targeted substrings that you posted in your question.  Then simply check if the substring exists as a key in <code>EXCHANGE_CODES</code>, declare the found associated value, and increment the respective exchange count.</p></li>
<li><p>I see that you are using very few characters in your variable declarations.  This requires you to write comments at the end of each line to remind you and other developers what data is held in the variable.  This is needlessly inconvenient.  Better practice would be to assign meaningful names to your variables.</p></li>
<li><p>When preparing the sector slug value, you are passing single-element arrays to <code>str_replace()</code> this is unnecessary -- just pass as single strings.</p></li>
<li><p>Use a single space after commas when writing function parameters, as well as on either side of all <code>=</code>.</p></li>
<li><p>I don't know if <code>$s</code> and <code>$arr</code> are the same incoming array and it is a typo while posting or if they are separate incoming arrays.  Either way, the variable names should be more informative.  If your script is always accessing the <code>quote</code> subarray, then you might like to declare <code>$quote = $array['quote'];</code> early in your script to allow for the simpler use of <code>$quote</code>.  This isn't a big deal, just something to consider.</p></li>
<li><p>Changing your current working directory to the new directory will spare you needing to add the variable to the <code>glob()</code> parameter AND it will shorten the strings that are being filtered -- meaning less work for php.</p></li>
<li><p>You can put <code>glob()</code>'s excellent filtering feature to good use and avoid calling your static method entirely.</p></li>
</ol>

<p>Finally, as I said in your SO question, you should try to consolidate and minimize total file writes if possible.</p>

<p>Here's some untested code to reflect my advice:</p>

<pre><code>// this can be declared with your other class constants (array declaration available from php5.6+):
const EXCHANGE_CODES = [
    "nasdaq"   =&gt; "nasdaq-us",
    "nyse"     =&gt; "nyse-us",
    "new york" =&gt; "nyse-us",
    "cboe"     =&gt; "cboe-us"
];

// initialize assoc array of counts prior to your loop
$exchange_counts = array_fill_keys(self::EXCHANGE_CODES + ["others"], 0);
/* makes:
 * array (
 *   'nasdaq-us' =&gt; 0,
 *   'nyse-us' =&gt; 0,
 *   'cboe-us' =&gt; 0,
 *   'others' =&gt; 0,
 * )
 */

// start actual processing
$company_slug = strtolower(UpdateStocks::slugCompany($s["quote"]["companyName"]));

$exchange_market = strtolower($arr["quote"]["primaryExchange"]);

// lookup market_code using company_name truncated after first encountered space after 4th character
$leading_text = substr($exchange_market, 0, strpos($exchange_market, ' ', 4));
$market_code = $exchange_codes[$leading_text] ?? 'others';  // null coalescing operator from php7+)
++$exchange_counts[$market_code];

$sector_slug = str_replace(' ', '-', strtolower($s["quote"]["sector"]));

$random_string = UpdateStocks::getEnc($symb, $symb, $symb, self::START_POINT_URL_ENCRYPTION_APPEND, self::LENGTH_URL_ENCRYPTION_APPEND);

$dir = __DIR__ . self::DIR_FRONT_SYMBOLS_MD_FILES; // symbols front directory

$equity_symbol = strtolower($equity_symbol);
$slug_start = $company_slug === $equity_symbol ? $company_slug : $equity_symbol;

if (!is_dir($dir)) {
    mkdir($dir, 0755, true); // creates price targets directory if not exist (recursively)
} else {
    chdir($dir);  // change current working directory
    $preexisting_files = glob("{$slug_start}-*");  // separate static method call is avoided entirely (not sure why you are reversing)
    // if you want to eradicate near duplicate files, okay, but tread carefully -- it's permanent.
}

$new_slug = $slug_start . '-' . $sector_slug . '-' . $market_code . '-' . $random_string;

$new_md_filename = preg_replace('/-{2,}/', '-', $dir . self::SLASH . $new_slug . self::EXTENSION_MD);

if (empty($preexisting_files)) {
    // I don't advise the iterated opening,writing an empty file,closing 10,000x
}
</code></pre>
    </div>