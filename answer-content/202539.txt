<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Bug: buffer overflow</h3>

<p>You only ever allocate <code>buf</code> once, with size <code>1024</code>, here:</p>

<blockquote>
<pre><code>int bufsize = 1024; //Start at 1024 bytes
char* buf = (char*) malloc(bufsize*sizeof(char));
</code></pre>
</blockquote>

<p>But later, you double <code>bufsize</code> on every iteration through the loop, without also doubling the allocation of <code>buf</code>.</p>

<p>Therefore, on the second iteration of the loop, when you run this line:</p>

<blockquote>
<pre><code>    fgets(buf, bufsize, stream);
</code></pre>
</blockquote>

<p>you will overflow your buffer, because <code>buf</code> has <code>1024</code> bytes, but <code>bufsize</code> will be <code>2048</code>.  As user vnp mentioned, you don't really even need the <code>buf</code> variable if you just read to the end of <code>*rtr</code> and keep track of the number of bytes read so far.</p>

<h3>Shlemiel the painter</h3>

<p>There is a <a href="https://www.joelonsoftware.com/2001/12/11/back-to-basics/" rel="nofollow noreferrer">funny story</a> about a painter who paints slower and slower every day.  The punchline:</p>

<blockquote>
  <p>"I can't help it," says Shlemiel. "Every day I get farther and farther
  away from the paint can!"</p>
</blockquote>

<p>This story is actually about concatenating strings.  In your loop, there are the following operations:</p>

<pre><code>strlen(buf) x2
strlen(*rtr)
strncat(*rtr)
</code></pre>

<p>You can't avoid one call to <code>strlen(buf)</code> but the calls involving <code>rtr</code> can be avoided by simply tracking the length of <code>rtr</code> in some variable.</p>
    </div>