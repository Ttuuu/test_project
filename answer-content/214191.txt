<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would do most of this in a single loop:</p>

<pre><code>//if length of the input is &lt; 2, just return it
int[] input = /* our input array with ANY numbers or amount of them  */
int j = input.length - 2;
int last = input[input.length - 1]; //the number after ours index-wise
//i is for search, j is for replacement
for (int i = input.length - 2; i &gt;= 0; i--) {
    int current = input[i]; //the number we're comparing
    if (current != last) { //if it's unique
        j--; //move the area we'll zero-fill over one
        continue; //next loop iteration, last is the same
    //below this point assumes the number is a duplicate
    } else if (i &gt; 0) { //if i is 0, the j-loop will handle it
        //rather than search the array for the next number, we'll just shift here
        input[i] = input[i - 1]; //grab the proceeding number and fill it in
    }
    last = current; //update our comparison with the old number that was possibly replaced
}
for (; j &gt;= 0; j--) {
    input[j] = 0; //zero out the area outside our unique numbers
}
</code></pre>

<p>There's certainly room for a little improvement, but for phone-typing I'm hoping I got the point across. Let me know if you've got any questions, like the funky j-loop for instance.</p>
    </div>