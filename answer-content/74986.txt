<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Yours is an \$O(n^2)\$ solution with extra space. Here are some solutions you could try:</p>

<ul>
<li>Sort both the arrays (\$O(n \log n)\$) and do a linear traversal (\$O(n)\$)index by index, wherever <code>word[i]!=jumbledLetters[i]</code>, you have a mismatch.</li>
<li><p>Use an array which maps the number of occurrence of each letter in the array. Traverse word and record the number of occurrences of the characters say, </p>

<ul>
<li>For "potato", it would be a=1 b=0 c=0.....o=2,p=1 q=0...t=1...z=0 - \$O(n)\$.</li>
<li>Traverse jumbled letters and subtract each occurrence of the letter from the array. - \$O(n)\$)</li>
<li>We return <code>false</code> if we see the array index is 0 when we have an occurrence for that character.</li>
</ul></li>
</ul>

<p>Considering your code, here's a few input:</p>

<ul>
<li><code>isSameLength</code> (what does it denote)? Either add comments or exclude it to the caller function where you are computing this variable.</li>
<li>Formatting. It makes the code readable with no extra effort on the eyes.</li>
<li><p>Are you handling duplicates i.e if a character is repeated in a word.</p>

<pre><code>// Consider the word to be aba and jumbled letters baa
if(word[i] === jumbledLetters[j] &amp;&amp; j !== uniquePosition[j])
    uniquePosition[j] = j; // here the letter's position gets overwrited.
// Check your code if word = `aab` and jumbled = `bab`.
</code></pre></li>
</ul>
    </div>