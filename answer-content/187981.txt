<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Improve your file handling:</p>

<ul>
<li>Don't use a hard coded file name for temporary files.</li>
<li>Don't spew temporary files into the current directory.</li>
<li>Make sure you clean up temporary files even on error.</li>
</ul>

<p>The first two can be addressed by leveraging <a href="https://unix.stackexchange.com/a/174818/84908"><code>mktemp</code></a>. The last can be addressed with a <a href="https://stackoverflow.com/a/687023/1394393"><code>trap</code></a>.</p>

<pre><code>branchesfile=$(mktemp)
trap "{ rm -f $branchesfile; }" EXIT
</code></pre>

<p>You should also honor the user's choice of default editor, rather than <em>require</em> nano. You can get the user's editor preference with <code>git var GIT_EDITOR</code>:</p>

<pre><code>$(git var GIT_EDITOR) $branchesfile
</code></pre>

<p>Git tools typically honor the exit code of the editor. If the editor exited with error, this should stop the script:</p>

<pre><code>if [ $? -ne 0 ]; then
    exit 1
fi
</code></pre>

<p>This allows the user to cancel the operation if they spot a problem they don't want to fix at the moment.</p>

<p>Putting this all together:</p>

<pre><code>#!/usr/bin/env bash
branchesfile=$(mktemp)
trap "{ rm -f $branchesfile; }" EXIT

# Remove references to remote branches that no longer exist.
git remote prune origin
# Create a file containing list of all merged branches.
git branch --merged &gt; $branchesfile

$(git var GIT_EDITOR) $branchesfile
if [ $? -ne 0 ]; then
    exit 1
fi

# Trim trailing and leading whitespace etc.
sed 's/^[ \t]*//;s/[ \t]*$//' &lt; $branchesfile
# Soft delete all branches left in the file and then remove tmp file.
xargs git branch -d &lt; $branchesfile
</code></pre>

<p>There's one other issue: your script will try to keep going if any <em>other</em> commands error out. <a href="https://stackoverflow.com/q/2870992/1394393"><code>set -e</code></a> is one option to solve this, but there are caveats to using it. If you choose to use <code>set -e</code>, you'll need to revise the exit code checking of the editor, since bash will exit before it gets to the <code>if</code>.</p>
    </div>