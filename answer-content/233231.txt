<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>'Card' could be an ENUM.</strong>
This should also be a static final class variable, for example:</p>

<pre><code>private static final Card[] CARDS = new Card[]{Card.ACE, Card.KING, Card.QUEEN, Card.JACK, Card.JOKER};
</code></pre>

<p><strong>Avoid magic numbers</strong>, the '3' here should be declared, same for the starting balance</p>

<pre><code>private static final int NUMBER_OF_CARDS_DRAWN = 3;
private static final int STARTING_BALANCE = 100;
</code></pre>

<p>Here you use the magic number '3' again, which should be changed to variable</p>

<pre><code>// Changed '3' to 'NUMBER_OF_CARDS_DRAWN'
drawnCards = new String[NUMBER_OF_CARDS_DRAWN];
...
for (int i = 0; i &lt; NUMBER_OF_CARDS_DRAWN; i++) {
</code></pre>

<p>This does not make sense. Count is never decremented so the second if statement will never be reached. You can remove it.</p>

<pre><code>if (count &gt; 1) {
    return count + " jokers: you lose " + (25 * count) + " points";
}
// You can remove this.
if (count != 0) {
    return count + " joker: you lose " + (25 * count) + " points";
}
</code></pre>

<p>Remove magic numbers '25, '50', '20'. <strong>Use static variables</strong></p>

<p><strong>Avoid having game logic inside your UI.</strong></p>

<p>The number of cards should be retrieved from the GameLogic, then add that number of cards.</p>

<pre><code>// Needs to be refactored into a for-loop, given the NumberOfCards is a variable.
lowerLeftFrame.add(card1);
lowerLeftFrame.add(card2);
lowerLeftFrame.add(card3);
</code></pre>

<p>Same here, if you have an  ArrayList of labels, you'll need to refactor this into a for-loop.</p>

<pre><code>// Needs to be refactored into a for-loop, given the NumberOfCards is a variable.
card1Label.setText(gamelogic.getDrawnCardAtX(0));
card2Label.setText(gamelogic.getDrawnCardAtX(1));
card3Label.setText(gamelogic.getDrawnCardAtX(2));
</code></pre>

<p>This should not be in the UI. It's definetly GameLogic. Consider moving to constructor of GameLogic</p>

<pre><code>// Doesn't belong in UI. Consider putting it in the constructor of GameLogic
gamelogic.setBalance(100);
reset.setEnabled(false);
spin.setEnabled(true);
</code></pre>

<p>This is very much GameLogic and does not belong in the UI</p>

<pre><code>// This is very much GameLogic, doesn't belong in UI
if (gamelogic.getBalance() &lt; 0) {
    winLose.setText("You lose!");
    reset.setEnabled(true);
    spin.setEnabled(false);
}
if (gamelogic.getBalance() &gt; 150) {
    winLose.setText("You win!");
    reset.setEnabled(true);
    spin.setEnabled(false);
}
</code></pre>
    </div>