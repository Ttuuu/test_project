<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>No need for a hack or nonlocal variable, return the maximum average:</p>

<pre><code>class Solution:
    def maximumAverageSubtree(self, root: TreeNode) -&gt; float:

        def helper(node):
            if not node:
                return 0, 0, 0

            left_max_avg, left_sum, left_count = helper(node.left)
            right_max_avg, right_sum, right_count = helper(node.right)

            this_sum = left_sum + right_sum + node.val
            this_count = left_count + right_count + 1
            this_avg = this_sum / this_count

            this_max_avg = max(left_max_avg, this_max_avg, right_max_avg )

            return this_max_avg, this_sum , this_count

        max_avg, _, _ = helper(root)

        return max_avg
</code></pre>

<p>Or, in this case you could use a class instance variable:</p>

<pre><code>class Solution:
    def maximumAverageSubtree(self, root: TreeNode) -&gt; float:

        def helper(node):
            if not node:
                return 0, 0

            left_sum, left_count = helper(node.left)
            right_sum, right_count = helper(node.right)
            this_sum = left_sum + right_sum + node.val
            this_count = left_count + right_count + 1

            self.ans = max(self.ans, this_sum / this_count)

            return this_sum , this_count

        self.ans = 0
        helper(root)
        return self.ans
</code></pre>
    </div>