<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I need to implement an ISO-mode encryption/decryption library in C# using BouncyCastle.</p>
</blockquote>

<p>I don't see anything that I can call ISO mode. Are you talking about light intensity maybe? ISO without specifying a specific standard is useless (and it's ISO/IEC for most standards, thank you).</p>

<blockquote>
  <p>In this mode, users only need to exchange their RSA public keys to securely communicate.</p>
</blockquote>

<p>No, they need to trust each other's keys in order to communicate. And they probably want to perform some signing as well to do so, or they may receive data from anybody knowing the <strong>public</strong> key. Generally for that we use sign-then-encrypt.</p>

<hr>

<p>About the protocol:</p>

<ul>
<li>You're using a deprecated mode, PKCS#1 v1.5 padding instead of OAEP for encryption, PKCS#1 v1.5 is possibly not secure with regards to padding oracle attacks.</li>
<li>You're using a static key size of 1024 bits, which is considered too small nowadays and in 2017, use at least 3072 bit RSA keys.</li>
<li>The 64 byte random key followed by SHA-3 doesn't make any sense, just use 16 random bytes. The padding of RSA is already randomized, so your randomization doesn't have any security benefits.</li>
<li>The inclusion of a random nonce and random <code>payload</code> (what does that even mean?) is completely unnecessary as the key is already randomized.</li>
<li>The GCM nonce is 16 bytes, which is not efficient, it should be 12 bytes / 96 bits for this specific mode.</li>
<li>Generating a new key pair in the class doesn't make any sense - these keys should be static keys.</li>
</ul>
    </div>