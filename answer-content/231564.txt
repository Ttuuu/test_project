<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In your case a better way is using a predefined mapping (as <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map" rel="nofollow noreferrer"><code>Map</code></a>) holding the relations between <em>zoom</em> limits and respective <em>jobs</em>.<br>Then, just iterate through the mapping and perform add/remove operation:</p>

<pre><code>const zoomJobsMap = new Map([
  [6, job],
  [7, job2],
  [8, job3],
  ...
]);

map.on('zoomend', function() {
    let zoom = map.getZoom();   # get zoom value at once
    for (var [zoomLimit, jobObj] of zoomJobsMap) {
        (zoom &lt; zoomLimit)? map.removeLayer(jobObj) : map.addLayer(jobObj);

    }
}
</code></pre>
    </div>