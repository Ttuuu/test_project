<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code would do just fine, in terms of functionality.</p>

<p>However, note that such design holds as long as everybody knows that they should acquire the lock before performing any process on the person object.</p>

<p>Perhaps you should consider re-design your data objects (such as the person class) so that there's an explicit method for any update process. Perhaps something like <code>BeginEdit</code> and <code>EndEdit</code>, or, even better, a method that returns an <code>IDisposable</code> object that acquires the lock and releases it in its <code>Dispose</code> implementation. Example:</p>

<pre><code>public class Person {
    public IDisposable AcquireLock() {
        // ...
    }

    // ...
}

// usage:
var aPerson = GetPerson(1234);
using (aPerson.AcquireLock()) {
    aPerson.LastName = "abcd";
    SavePerson(aPerson);
    // ...
}
</code></pre>

<p>This way the locking is made more explicit.</p>

<p>Just a suggestion, though...</p>
    </div>