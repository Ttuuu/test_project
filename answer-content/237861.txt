<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Approach 2</strong> does not work because <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#Description" rel="nofollow noreferrer">accoring to MDN</a>:</p>

<pre><code>import '/modules/my-module.js';
</code></pre>

<p>Is how you <code>import</code> a module for <strong>Import a module for its side effects only</strong></p>

<blockquote>
  <p>Import an entire module for side effects only, without importing anything. This runs the module's global code, but doesn't actually import any values.</p>
</blockquote>

<p>So, <code>await import('/path/to/my-module.js');</code> won't actually import your <code>myfunction1</code> and <code>myFunction2</code> for you to use them, however, if you put an IIFE in there, it will be called.</p>

<p>If you don't want to use long names to call your function, you can destructure them :</p>

<pre><code>(async () =&gt; {

  const { myFunction1, myFunction2 } = await import('/path/to/my-module.js');

  myFunction1();
  myFunction2();

})();
</code></pre>

<p>Or, call them in <code>my-module.js</code> and just import it and they will get called.</p>

<p>See the answers here for <a href="https://stackoverflow.com/questions/41127479/es6-import-for-side-effects-meaning">es6 import for side effects meaning</a>.</p>
    </div>