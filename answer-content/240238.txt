<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I've found your script to be very useful in the time that I've used it (since shortly after you originally posted this question). I have made a few modifications though. Mainly, my version does not copy the original tarball to <code>/opt</code> (that's unnecessary I/O, especially since it's deleted immediately after it's extracted); instead, it uses <code>tar</code>'s <code>--one-top-level</code> argument to extract the tarball from its original location to <code>/opt</code> without copying it or changing the working directory. Also, mine doesn't actually delete existing installs and symlinks; it just overwrites them where necessary.</p>

<pre><code>#!/bin/bash

# firefox-upgrade - program to upgrade firefox quantum

error_exit() {
    echo "$1" 1&gt;&amp;2
    exit 1
}

# parsing path and filename
if [ "$#" -ne 1 ]; then
    error_exit "$0: usage: $0 firefox_quantum_path"
fi
firefox_path="$1"

# checking if input is a file
if [ ! -f "$firefox_path" ]; then
    error_exit "Not a file! Aborting."
fi

# unpacking the tar
if tar --overwrite --one-top-level=/opt -jxvf "$firefox_path"; then
    # if unpack was successful create symlinks if they don't
    # already exist or don't point to the right target
    if [ "$(readlink /usr/bin/firefox 2&gt; /dev/null)" != /opt/firefox/firefox ]; then
        ln -fs /opt/firefox/firefox /usr/bin/firefox
    fi
    if [ "$(readlink /usr/bin/firefox-quantum 2&gt; /dev/null)" != /opt/firefox/firefox ]; then
        ln -fs /opt/firefox/firefox /usr/bin/firefox-quantum
    fi
else
    error_exit "Could not extract file! Aborting."
fi
exit 0
</code></pre>

<p>In addition, I've adapted the script for use with Thunderbird as well:</p>

<pre><code>#!/bin/bash

# thunderbird-upgrade - program to upgrade thunderbird

error_exit() {
    echo "$1" 1&gt;&amp;2
    exit 1
}

# parsing path and filename
if [ "$#" -ne 1 ]; then
    error_exit "$0: usage: $0 thunderbird_path"
fi
thunderbird_path="$1"

# checking if input is a file
if [ ! -f "$thunderbird_path" ]; then
    error_exit "Not a file! Aborting."
fi

# unpacking the tar
if tar --overwrite --one-top-level=/opt -jxvf "$thunderbird_path"; then
    # if unpack was successful create symlinks if they don't
    # already exist or don't point to the right target
    if [ "$(readlink /usr/bin/thunderbird 2&gt; /dev/null)" != /opt/thunderbird/thunderbird ]; then
        ln -fs /opt/thunderbird/thunderbird /usr/bin/thunderbird
    fi
else
    error_exit "Could not extract file! Aborting."
fi
exit 0
</code></pre>
    </div>