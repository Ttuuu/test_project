<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As noted by Toby Speight in the comments, there is no need to use <code>Windows.h</code>. SDL provides <a href="https://wiki.libsdl.org/SDL_GetTicks" rel="nofollow noreferrer"><code>SDL_GetTicks()</code></a> for timing, and <a href="https://wiki.libsdl.org/SDL_Delay" rel="nofollow noreferrer"><code>SDL_Delay()</code></a> for waiting on the current thread.</p>

<hr>

<p>The SDL cleanup code should be outside the main loop. There will probably be other reasons to exit (e.g. pressing the escape key or clicking on a quit button), and we don't want to duplicate that code.</p>

<hr>

<p>Limiting the frame rate:</p>

<ul>
<li><p>For limiting the rate of physics in a game, standard practice is to use an accumulator and a fixed update time-step, as in the <a href="https://gafferongames.com/post/fix_your_timestep/" rel="nofollow noreferrer">penultimate code listing in this article</a>.</p></li>
<li><p>For limiting the rate of rendering, we can make sure <a href="https://wiki.libsdl.org/SDL_GL_SetSwapInterval" rel="nofollow noreferrer">vsync is turned on</a>.</p></li>
<li><p>For limiting the overall frame-rate to prevent excessive CPU consumption (and the rate at which we poll events) there is no clear consensus. For my own opinion, see below.</p></li>
<li><p>Note that <code>timeBeginPeriod()</code> has some serious disadvantages, <a href="https://docs.microsoft.com/en-us/windows/desktop/api/timeapi/nf-timeapi-timebeginperiod" rel="nofollow noreferrer">as mentioned in the MSDN docs</a>:</p>

<blockquote>
  <p>Setting a higher resolution can improve the accuracy of time-out
  intervals in wait functions. However, it can also reduce overall
  system performance, because the thread scheduler switches tasks more
  often. High resolutions can also prevent the CPU power management
  system from entering power-saving modes.</p>
</blockquote>

<p>Creating issues like these for the entire system is arguably worse than consuming a little extra CPU.</p></li>
</ul>

<hr>

<p><em>opinion:</em></p>

<p>For a PC game, don't limit the frame rate while the user's attention is on the game. Generally we expect games to run smoothly and respond immediately to user input, and since they occupy the user's full attention, consumption of resources isn't an issue.</p>

<p>If the user minimizes or unfocuses the game window, they want to use resources for something else, so we should use <code>Sleep</code> or <code>SDL_Delay</code> to consume less CPU. It doesn't matter if we wake up slightly late and have a choppy frame rate, because the user isn't paying attention, so there's no reason to call <code>timeBeginPeriod</code>. (The physics will still behave properly if we've <a href="https://gafferongames.com/post/fix_your_timestep/" rel="nofollow noreferrer">fixed the time step</a>, and we may even have paused the game so there's not much to update anyway).</p>
    </div>