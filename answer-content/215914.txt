<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Cohesion &amp; the Single Responsibility Principle</h1>

<p>From Robert C. Martins book <a href="https://books.google.de/books?id=_i6bDeoCQzsC&amp;pg=PA140#v=onepage&amp;q&amp;f=false" rel="nofollow noreferrer">Clean Code, Chapter 10, Cohesion</a></p>

<blockquote>
  <p>Classes should have a small number of instance variables. Each of the methods of a class should manipulate one or more of those variables. In general the more variables a method manipulates the more cohesive that method is to its class. A class in which each variable is used by each method is maximally cohesive. </p>
</blockquote>

<p>How Robert C. Martin <a href="https://blog.cleancoder.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html" rel="nofollow noreferrer">describes the Single Responsibility Principle</a>   </p>

<blockquote>
  <p>Another wording for the Single Responsibility Principle is:</p>
  
  <blockquote>
    <p>Gather together the things that change for the same reasons. Separate those things that change for different reasons.</p>
  </blockquote>
  
  <p>If you think about this youâ€™ll realize that this is just another way to define cohesion and coupling. We want to increase the cohesion between things that change for the same reasons, and we want to decrease the coupling between those things that change for different reasons.</p>
</blockquote>

<h1>Analise the Cohesion of <code>Input</code></h1>

<blockquote>
  <p>A class in which each variable is used by each method is maximally cohesive. </p>
</blockquote>

<p>We can find no method with this property. Let's observe why:</p>

<blockquote>
  <pre class="lang-java prettyprint-override"><code>private boolean isCtrlPressed = false;
private boolean isShiftPressed = false;
private boolean isAltPressed = false;
private boolean isEscapePressed = false;
</code></pre>
</blockquote>

<p>All these instance variables gets used together in the methods <code>keyPressed</code> and <code>keyReleased</code>. This means the belong some how together.</p>

<blockquote>
  <pre class="lang-java prettyprint-override"><code>private boolean isWheelClicked = false;
private boolean isRightClicked = false;
private boolean isLeftClicked = false;
</code></pre>
</blockquote>

<p>These instance variables have the same property and gets used in the methods <code>mousePressed</code> and <code>mouseReleased</code>.</p>

<p>These two instance variable groups do not interact together this means they have a low cohesion - this is a logical cohesion. You can read on <a href="https://en.wikipedia.org/wiki/Cohesion_(computer_science)" rel="nofollow noreferrer">Wikipedia about Logical Cohesion</a>:</p>

<blockquote>
  <p>Logical cohesion is when parts of a module are grouped because they are logically categorized to do the same thing even though they are different by nature (e.g. grouping all mouse and keyboard input handling routines).</p>
</blockquote>
    </div>