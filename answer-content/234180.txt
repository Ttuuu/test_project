<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One aspect that you are missing here is that most likely, the functionality of <code>Connector</code> will depend on whether it was passed a <code>oneTimePwd</code> or an <code>accessKey</code>. It could even have been passed both. What would happen then?</p>

<p>Imus' answer provides some good insights for the builder side of the code, but you can also leverage the other side. By turning <code>Connector</code> into an abstract class that defines its interface, you can create two separated implementations of that abstract class, depending on the type of key that was passed. One of the strengths of the builder pattern is that you can easily return either of those two types, without having to bother the user of the class with the choice between them:</p>

<pre><code>    public Connector Build() {
        if (accessKey != null) {
            return new AccessKeyConnector(this);
        } else if (oneTimePwd != null) {
            return new OneTimePasswordConnector(this);
        } else {
            // log.error("Either Access key or One time password must be specified.")
        }
        return null;
    }
</code></pre>
    </div>