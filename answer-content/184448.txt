<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Reduce Complexity, Follow SRP</strong><br>
The <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">Single Responsibility Principle</a> states that every module or class should have responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by the class. All its services should be narrowly aligned with that responsibility.</p>

<blockquote>
  <p>Robert C. Martin expresses the principle as follows:
          <code>A class should have only one reason to change.</code></p>
</blockquote>

<p>While this is primarily targeted at classes in object oriented languages it applies to functions and subroutines well.</p>

<p>The <code>public function message(Request $request, $id)</code> function could be broken up into at multiple functions, especially the contents of the <code>if($user_id == $message_to_id)</code> block.</p>

<p>The more separate functions there are the easier it is to understand or read the code. This also makes it easier for any programmer to maintain or debug the code.</p>

<p><strong>Don't Repeat Yourself</strong>  </p>

<p>In software engineering, <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow noreferrer">don't repeat yourself (DRY)</a> is a principle of software development aimed at reducing repetition of software patterns, replacing them with abstractions; and several copies of the same data, using data normalization to avoid redundancy.</p>

<p>Generally when there is repeating code in a software module it indicates that a function should be written to contain that code or a loop should be written to perform the repetition.</p>

<p>When code repeats in different functions it becomes a maintenance problem. Someone can fix the code in one location and miss it in another location. The solution to this is to write a function for the code that repeats.</p>
    </div>