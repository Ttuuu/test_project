<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your first variant is unnecessary detailed and hard to read:</p>

<ul>
<li>an IPv4 address consists of exactly 4 digit groups</li>
<li>4 is a small number, maybe it's worth to inline the <code>for</code> loop</li>
<li>the <code>for</code> loop treats the case <code>k == 0</code> specially</li>
<li>the <code>+=</code> operator for strings allocates a new string each time</li>
<li>the code is much longer than the description in the task "join the four numbers with dots"</li>
</ul>

<p>Your second variant is short, easy to grasp and probably efficient enough for all practical cases.</p>

<pre><code>func (ip IPAddr) String() string {
    return fmt.Sprintf("%v.%v.%v.%v", ip[0], ip[1], ip[2], ip[3])
}
</code></pre>

<p>You can replace the <code>%v</code> with <code>%d</code> to make it more specific, since the arguments are integer values.</p>

<p>The main reason for choosing this variant is readability. The format string shows at a glance how the formatted string will look like.</p>

<p>If you want to write the fastest possible code, you should probably allocate a byte array of size 3+1+3+1+3+1+3 and append each number and dot individually, without using a loop at all.</p>
    </div>