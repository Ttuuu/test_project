<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In larger programs, lots of "compiler switches" (#ifdefs) make the code very hard to read, "clunky" if you will. It's not an issue in a tiny program such as this, but for larger programs you should consider a more "polymorphic" approach.</p>
<p>Like for example having a generic "epoch.h" as the platform-independent API. Link this with with a corresponding "epoch_unix.c" or "epoch_windows.c" file, where the C file contains everything OS-specific. Manage which one that gets linked using different builds and/or version control.</p>
<hr>
<p>Some minor details:</p>
<ul>
<li><p>You forgot <code>#include &lt;stdint.h&gt;</code>.</p>
</li>
<li><p><code>lnm_current_time.tv_sec*1000000+lnm_current_time.tv_usec</code>. Make a habit of always declaring integer constants with a large enough type, no matter where they happen to be in an expression.</p>
<p>That is, <code>1000000ULL</code>, or if you prefer <code>UINT64_C(1000000)</code>, the former giving type <code>unsigned long long</code> and the latter giving type <code>uint_least64_t</code>. The latter is ever so slightly more portable, but a bit harder to read.</p>
</li>
</ul>
    </div>