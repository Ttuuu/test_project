<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Towards better functionality and data structures</h3>

<ul>
<li><p>prefer <code>f-string</code> formatting over multiple strings <code>+</code>- concatenation:</p>

<pre><code>f'_nl{EXT}', f'_en{EXT}', f'_de{EXT}'
</code></pre></li>
<li><p>define constants <code>WHITELIST</code> and <code>SUPPLIERS</code> as immutable data structures to avoid potential/accidental compromising by subsequent callers. <br><strong>Furthermore</strong>, making <code>WHITELIST</code> a tuple helps solving the mentioned issue "<code>filename[-7:] in WHITELIST</code>" (see next points below)</p>

<pre><code>WHITELIST = (f'_nl{EXT}', f'_en{EXT}', f'_de{EXT}')
SUPPLIERS = ('Siemens', 'IFM')
</code></pre></li>
<li><p>consistent naming <code>Correct/Incorrect</code> or <code>Valid/Invalid</code> seems sound and perceivable. I would go with one of them</p></li>
</ul>

<hr>

<p><strong><code>classify_files</code></strong> function:</p>

<ul>
<li><p>instead of hard-coded slicing in <code>if not filename[-7:] in WHITELIST</code> - use convenient <a href="https://docs.python.org/3/library/stdtypes.html#str.endswith" rel="nofollow noreferrer"><code>str.endswith</code></a> approach since we've already prepared the appropriate <code>WHITELIST</code> tuple:</p>

<pre><code>...
if not filename.endswith(WHITELIST):
    report['Incorrect'].append(filename)
</code></pre></li>
<li><p>replace redundant <code>count = 0</code> and subsequent increment <code>count += 1</code> with <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> feature starting from <code>1</code>:</p>

<pre><code>for i, filename in enumerate(os.listdir(basedir), 1):
    ... 
</code></pre>

<p>After the loop has completed the variable (counter) <code>i</code> will contain the number of iterated/checked files and can be easily used/referenced in <em>return</em> statement <code>return report, i</code>.</p></li>
</ul>
    </div>