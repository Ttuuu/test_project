<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It seems changing the regex is not solution, my suggestions:</p>

<ul>
<li>get rid of the <code>r</code> variable, it is swelling the memory and makes slow the response time(of course, if value of the parameter <code>contenidoRespuesta</code> is not needed anymore).</li>
<li>we don't know the content of <code>html</code>/<code>json</code>/<code>js</code>, so next cases indicate assumptions.</li>
<li>i wondering in your <code>contenidoRespuesta</code> variable can matches with different regex patterns on the same data? if it is not or even there exists the posibility, i suggest you to use if statement seperately to reducing the response time.</li>
<li>if always one regex match exists, you can use if/else statement to reducing much more the response time.</li>
<li>i did some tests with lack of mock data which shows performance of if statement. <a href="https://dotnetfiddle.net/ooLrYH" rel="nofollow noreferrer">https://dotnetfiddle.net/ooLrYH</a></li>
</ul>

<pre class="lang-c# prettyprint-override"><code>    //string r = contenidoRespuesta; //decrease the responsee time after RegexReplace succeed
    string dominio = "example.com";
    int puertoHttp = 81, puertoHttps = 444;
        foreach (var p in grupo.Paginas.Where(p =&gt; p.Proxy))
        {
             Uri uri = new Uri(p.URL);
             string pattern1 = string.Format("(?&lt;=https://){0}(:(443)(?!\\d+))?(?!:)", uri.Host); //changing to static method with Regex.Replace may good
             string pattern2 = string.Format("(?&lt;=http://){0}(:(80)(?!\\d+))?(?!:)", uri.Host);  //changing to static method with Regex.Replace may good
             string pattern3 = string.Format("(?&lt;!%2F|\\.|http(s)?(://)){0}(:((80)|(443))(?!\\d+))?(?!:)", uri.Host);  //changing to static method with Regex.Replace may good


             //if (new Regex(pattern1).Match(contenidoRespuesta).Success)//positive effects a bit
              contenidoRespuesta= Regex.Replace(contenidoRespuesta, pattern1, uri.Host.Replace(".", string.Empty) + "." + dominio + ":" + puertoHttps, RegexOptions.IgnoreCase);// replace https://www.page.com for https://wwwpagecom.example.com
             //if (new Regex(pattern2).Match(contenidoRespuesta).Success)//positive effects a bit
              contenidoRespuesta= Regex.Replace(contenidoRespuesta, pattern2, uri.Host.Replace(".", string.Empty) + "." + dominio + ":" + puertoHttp, RegexOptions.IgnoreCase);// replace http://www.page.com for http://wwwpagecom.example.com
            // if (new Regex(pattern3).Match(contenidoRespuesta).Success)//positive effects a bit
              contenidoRespuesta= Regex.Replace(contenidoRespuesta, pattern3, uri.Host.Replace(".", string.Empty) + "." + dominio + ":" + (esquema == "https" ? puertoHttps.ToString() : puertoHttp.ToString()));// replace //www.page.com for https://wwwpagecom.example.com
        }
return contenidoRespuesta;
</code></pre>
    </div>