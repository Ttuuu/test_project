<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your biggest mistake is running the search for every query, a separate query phase almost always means you have to build an intermediate data structure, e.g. an array of height for this problem.</p>

<p>When building a spanning tree, or doing an equivalent operation, use DFS.
Do a depth first traversal, starting with node 1 and calculating relative heights as you go. Record these heights in an array. During the query phase look up heights from the array and return their difference.</p>

<p>DFS to BFS is like quicksort to mergesort, don't use BFS unless you have a reason to. Even when traversing infinite graphs DFS with iterative deepening provides better performance.</p>

<p>Note you should use a stack and not recursion for more than a few thousand (a few hundred really) nodes.</p>
    </div>