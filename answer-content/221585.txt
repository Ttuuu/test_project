<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Going even more functional, splitting out mapping functions, spicing with a bit of <a href="https://en.wikipedia.org/wiki/Currying" rel="nofollow noreferrer">curry</a>.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>// Curried initialization of the current max value
const maxSoFar = max =&gt; n =&gt; max = Math.max(max, n)
// The max previous value; like max current but shifted to the right with a zero first
const maxPrevious = arr =&gt; [0, ...(arr.map(maxSoFar(0)))].slice(0, -1)
// Note the [...arr] - .reverse() changes the original. Not very functional
const maxFollowing = arr =&gt; maxPrevious([...arr].reverse()).reverse()
// Function to get mapping function subtracting two arrays
const subtract = otherArr =&gt; (n, index) =&gt; n - otherArr[index]
// Like above, but taking the minimum value
// Non-currying to make the main function more readable
const min = (arr, other) =&gt; arr.map((n, index) =&gt; Math.min(n, other[index]))

const trappedWater = heights =&gt; min(maxPrevious(heights), maxFollowing(heights))
          .map(subtract(heights))
          .filter(n =&gt; n &gt; 0) // Positive only
          .reduce((a,b) =&gt; a + b, 0) // Sum the array

console.log(trappedWater([0,1,0,2,1,0,1,3,2,1,2,1]))
console.log(trappedWater([0,1,1,0]))</code></pre>
</div>
</div>

    </div>