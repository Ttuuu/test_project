<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Why not use doubling to get a logarithmic number of steps?</p>

<pre><code>    const str1 = 'A', str2 = 'B';
    let res = '';

    if (num &gt;= 1)
        res = str1;              // 'A'
    if (num &gt;= 2)
        res += str2;             // 'AB'

    while (2 * res.length &lt; num) { 
        res += res;              // 'ABAB', 'ABABABAB', ...
    }
    if (res.length &lt; num) {
        res += res.substring(0, num - res.length)
    }
    console.log(res)
</code></pre>

<p><strong>EDIT</strong></p>

<p>In the above code I try do create the resulting string of exactly the length required, which costs an additional conditional. We can also get rid of that at the cost of creating the string too long temporarily. The central part would then look like:</p>

<pre><code>    while (res.length &lt; num) { 
        res += res;              // 'ABAB', 'ABABABAB', ...
    }
    res = res.substring(0, num)
</code></pre>
    </div>