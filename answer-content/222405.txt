<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I am only looking for some feedback on my coding style.</p>
</blockquote>

<p>Formatting is good. I hope it is auto formatted.</p>

<p><strong>Respect the presentation width</strong></p>

<p>Rather than oblige a horizontal scroll bar, auto format to a narrower width to avoid that.</p>

<p><strong>Avoid dogma</strong></p>

<p>"to ONLY USE ONE return statement in functions and NOT to use things like break, continue or go-to." --&gt; This is a reasonable goal, but better to code for clarity.  Use <code>break, continue</code> and even sometimes <code>goto</code> when it provides cleaner code.</p>

<hr>

<blockquote>
  <p>How could I improve?</p>
</blockquote>

<p><strong>Use <code>short</code> to save space in arrays - not here</strong> </p>

<p><code>short jacobi(long a, long n)</code> returns 0,1,-1.  There is no space, code, performance savings expected with <code>short</code>.  Recommend returning <code>int</code> here. <code>int</code> is often the optimal type for an <em>integer</em>.</p>

<pre><code>// short result = 1;
int result = 1;
...
return result;
</code></pre>

<p><strong>Cryptography begs for unsigned types</strong></p>

<p>Instead of <code>long</code>, consider the widest <em>unsigned</em> type of <code>uintmax_t</code> or the widest fixed size type: <code>uint64_t</code>.</p>

<p><em>Unsigned</em> types will improve code performance.</p>

<p><code>long n ... n_mod8 = n % 8;</code> requires a division as <code>n % 8</code> has 15 different results [-7 ... 7].  With <code>unsigned long n</code>, <code>n % 8</code> is simply a mask operation.</p>

<p><strong>Consider <code>bool</code></strong></p>

<p>For clarity, use <code>bool</code>.</p>

<pre><code>//short condition = 1;
//while (condition == 1) {
bool condition = true;
while (condition) {
</code></pre>

<p><strong>Remove debug code</strong></p>

<p>e.g. <code>// printf("(%d|%d) and result = %d \n", a, n, result);</code>.</p>

<p><strong>Error messages: consider <code>stderr</code></strong></p>

<pre><code>// printf("Wrong input for the Jacobi Symbol:...
fprintf(stderr, "Wrong input for the Jacobi Symbol: ...
</code></pre>

<p><strong>Post expected test code results</strong></p>

<p>What should <code>printf("%d", jacobi(4852777,12408107));</code> print? </p>

<p>Consider a few more test cases.</p>

<p><strong>Post compilable code</strong></p>

<p>Trailing ``` breaks compilation.</p>

<p><strong>Minor</strong></p>

<pre><code>// The The if-condition below utilises the fact that (0|n) = 0.
to
// The if-condition below utilises the fact that (0|n) = 0.
</code></pre>

<hr>

<blockquote>
  <p>Is anything unclearly formulated?</p>
</blockquote>

<p>I'd add a reference for <a href="https://en.wikipedia.org/wiki/Jacobi_symbol" rel="noreferrer">Jacobi symbol</a>.</p>

<pre><code>// https://en.wikipedia.org/wiki/Jacobi_symbol
</code></pre>

<p><strong><code>n == 1</code>?</strong></p>

<p>Hmmm. <a href="https://en.wikipedia.org/wiki/Jacobi_symbol" rel="noreferrer">Jacobi symbol</a> allows <code>n==1</code>.  Code here does not.</p>
    </div>