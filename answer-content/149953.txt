<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Assumptions</h2>

<p>You made a lot of assumptions with this code, which you either did not mention during the interview or you incorrectly assumed to be true of the question. In other words, <strong>you were over thinking the problem</strong>.</p>

<pre><code>#check if input is a list
if not isinstance(int_arr, list):
    raise TypeError("Input shall be of type array.")
</code></pre>

<p>You should not care about the instance type. The type could easily have been a user defined type which behaves like a list or even another python built in. For example, python has both <a href="https://docs.python.org/3.5/library/collections.html#collections.deque" rel="nofollow noreferrer"><code>deque</code></a> and <a href="https://docs.python.org/3/library/array.html#module-array" rel="nofollow noreferrer"><code>array</code></a>, and they both behave like a list, supporting the same operations as a list.</p>

<pre><code># check all elements are of type int
if not all(isinstance(item, int) for item in int_arr) :
    raise ValueError("All elements in array shall be of type int.")
</code></pre>

<p>This is not necessarily true because lists or collections in general, in python can contain many different types. So insisting that the list contains only integers is just imposing a requirement which did not exist in the first place.</p>

<p>In closing, I would advice that you adhere to the <a href="https://en.wikipedia.org/wiki/KISS_principle" rel="nofollow noreferrer">KISS principle</a> in future interviews and to ask questions or state your assumptions before diving into the code. Even if it doesn't sound like an assumption to you, make sure they know what is going on in your head either as you're coding or before you write your code. It might sound silly to say "Ok I will also make sure that I have been given a list", but you will be saving yourself a lot of grief when they reply, "Don't worry about that, just assume it's a list".</p>

<hr>

<p><strong>Check if array contains the sequence (1,3,4)</strong></p>

<pre><code>def check_sequence(arr):
    return any((arr[i], arr[i + 1], arr[i + 2]) == (1,3,4) for i in range(len(arr) - 2))
</code></pre>
    </div>