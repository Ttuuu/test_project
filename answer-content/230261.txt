<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Small issue</h3>

<pre><code>    if (!map.containsKey(element)) {
        return false;
    }

    Node&lt;E, P&gt; node = map.get(element);
</code></pre>

<p>You can simply write <code>Node&lt;E, P&gt; node = map.get(element);</code> and check if <code>node</code> is null. This increases performance and atomicity.</p>

<h3>Design issue</h3>

<p>I think you could improve readability if you split the implementation to a Doubly-Linked-List ("DLL") inside the priority queue.</p>

<p>This way, you could have the following code encapsulated in your DLL</p>

<pre><code>    // Comparator operator &lt;= instead of &lt; guarantees stability:
    while (currentNode != null 
            &amp;&amp; currentNode.priority.compareTo(node.getPriority()) &lt;= 0) {
        currentNode = currentNode.getNextNode();
    }
</code></pre>

<p>You could gain a better separation of concerns. Tests could also improve this way.</p>

<h3>Small implementation issue</h3>

<p>As for your implementation of the DLL, perhaps you could consider using a sentinel rather than check for <code>null</code> for the head/tail operations.</p>
    </div>