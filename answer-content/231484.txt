<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would use a virtual view onto the underlying data.</p>

<p>A view simply converts the coordinates from the user specified value into actual data coordinates. No need to actually move any data.</p>

<pre><code>typedef vector&lt;vector&lt;int&gt;&gt; matrixT; 
class View
{
    public:
        virtual ~View();
        virtual int&amp; get(int x, int y) = 0
};

class IdentityView: public View
{
    matrixT&amp;    data;
    public:
        IdentityView(matrixT&amp; data): data(data) {}
        virtual int&amp; get(int x, int y) override {return data[x][y];}
};
class Rotation90ClockWise: public View
{
    View&amp;     parent;
    public:
        IdentityView(View&amp; data): data(data) {}
        virtual int&amp; get(int x, int y) override
        {
            int actualY = x;
            int actualX = maxX - y - 1;
            return view.get(actualX, actualY);
        }
};
// etc lots of transpositions like mirroring rotations can be defined.
// Apply multiple transitions without doing any moving. Once you have
// the correct transformation then copy to a destination
</code></pre>
    </div>