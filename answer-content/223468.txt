<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just one quick comment to add to the previous answers. You have static variables like this:</p>

<pre><code>static bool* triActive = NULL;
</code></pre>

<p>These are assigned the pointer to a memory block, and you need an at-exit function to free these memory blocks. In C++ it is considered good practice to avoid “naked pointers” like these. If you follow that advice, you won’t need the at-exit function any more.</p>

<p>For example, you could instead do:</p>

<pre><code>std::vector&lt;bool&gt; triActive;
</code></pre>

<p>Your <code>initialize</code> function then just needs to resize the array to the appropriate size:</p>

<pre><code>if(triActive.empty())
   triActive.resize(numTris, false);
</code></pre>

<p>Note that you also don’t need the <code>static</code> keyword here. In file scope, all variables are global, and will live for the duration of the program (since this is a DLL/SO, for the duration of it being loaded in memory). <code>static</code> here means to not make it visible outside the file.</p>

<p>Inside a function, the <code>static</code> keyword means to keep the variable alive in between function calls.</p>
    </div>