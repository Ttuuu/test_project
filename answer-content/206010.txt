<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would only make minor adjustments to your SQL.</p>

<ol>
<li><p>Refrain from using <a href="https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-2017" rel="nofollow noreferrer">KEYWORDS or RESERVED</a> words as column or table aliases. If you already have them as column names, enclose them in square brackets e.g. <code>[Name]</code>, <code>[Path]</code></p></li>
<li><p>I would put the commas in front to clearly define new columns. Versus code wrapped in multiple lines. It also makes trouble-shooting code easier. </p></li>
<li><p>If you put <code>1=1</code> at the top of a <code>WHERE</code> condition, it enables you to freely change the rest of the conditions when debugging a query. The SQL query engine will end up ignoring the <code>1=1</code> so it should have no performance impact. </p></li>
<li><p>I find it more convenient to see column alias's referenced from the left side 
e.g. <br>
<code>, [Path] = CAST(pfdr.[Path] + fdr.[Name] + '/' AS NVARCHAR(4000))</code></p></li>
<li><p>Use a table expression instead of a correlated sub-query. It makes the select statement a bit more readable.</p></li>
<li><p>Check the <a href="https://docs.microsoft.com/en-us/sql/relational-databases/performance/display-the-estimated-execution-plan?view=sql-server-2017" rel="nofollow noreferrer">Estimated Execution Plan</a> <kbd>Ctrl</kbd> + <kbd>L</kbd> in Microsoft SQL Server Management Studio (SSMS) to check the performance of the query by pasting both SQL statements in a query window. </p></li>
</ol>

<p>Here's an example.</p>

<p><a href="https://i.stack.imgur.com/6ImLg.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/6ImLg.png" alt="screenshot"></a></p>

<h3>Revised SQL</h3>

<hr>

<pre><code>WITH 
folder_paths
AS 
(
    SELECT 
          fdr.[Id]
        , fdr.[Name]
        , fdr.[AccountId]
        , f.[ParentFolderId]
        , [Path] = CAST('/' + fdr.[Name] + '/' AS NVARCHAR(4000))
    FROM 
        dbo.[Folders] AS fdr
    WHERE 
        1=1
        AND (fdr.[ParentFolderId] IS NULL)
    UNION ALL
    SELECT 
          fdr.[Id]
        , fdr.[Name]
        , fdr.[AccountId]
        , fdr.[ParentFolderId]
        , [Path] = CAST(pfdr.[Path] + fdr.[Name] + '/' AS NVARCHAR(4000))
    FROM 
        dbo.[Folders] AS fdr
        INNER JOIN folder_paths AS pfdr ON fdr.[ParentFolderId] = pfdr.[parent.Id]
)
,
user_folder_permissions
AS
(
    SELECT 
          fprm.[UserId]
        , fdr.[Path]
        , fdr.[AccountId]
    FROM 
        folder_paths AS fdr
        INNER JOIN dbo.[UserFolderPermissions] AS fprm ON fdr.[Id] = fprm.[FolderId]

)
SELECT 
      [FileId] = fs.[Id]
    , fdr.[AccountId]
    , [FolderId] = fdr.[Id]
    , [Path] = fdr.[Path]
    , [AuthorizedUserId] = fprm.[UserId]
FROM 
    folder_paths AS fdr
    LEFT JOIN dbo.Files AS fs ON fs.[FolderId] = fdr.[Id]
    LEFT JOIN user_folder_permissions AS fprm ON fdr.[AccountId] = fprm.[AccountId] AND fdr.[Path] LIKE fprm.[Path] + '%'
</code></pre>
    </div>