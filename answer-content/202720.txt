<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One thing you might do to the shell script is to swap the commands in your <code>while</code>:</p>



<pre class="lang-sh prettyprint-override"><code>#!/bin/sh
while arecord --device=hw:1,0 --format S16_LE --rate 44100 -d 2 \
              /dev/shm/tmp_rec.wav \
   &amp;&amp; sox -t .wav /dev/shm/tmp_rec.wav -n stat 2&gt;&amp;1 \
      | grep "RMS     amplitude" | tail -c 9
do true
done
</code></pre>

<p>That means that you don't have to set a trap (interrupting the commands gives a false status that will exit the <code>while</code>).  Note that because we're not using any Bash extensions, we can run it with plain <code>/bin/sh</code>, which often has a smaller footprint than Bash.</p>

<p>There's no need for a temporary file - both <code>arecord</code> and <code>sox</code> will use standard in/out streams if not given a file name, so we can pipe them together.  This reduces fragility and may also reduce latency (as we can start processing the audio before we've finished recording it):</p>

<pre class="lang-sh prettyprint-override"><code># untested
while arecord --device=hw:1,0 --format S16_LE --rate 44100 -d 2 \
      | sox -t .wav - -n stat 2&gt;&amp;1 \
      | grep "RMS     amplitude" | tail -c 9
</code></pre>

<p>You might also be able to use a smaller audio format - <code>8U</code> should be sufficient for simple amplitude measurement, and the rate can be more in the speech range (the <code>arecord</code> default of 8kHz should be fine).</p>

<p>I believe that <code>sox</code> or <code>rec</code> ought to be able to read directly from the microphone, and to do the silence-detection itself using the <code>silence</code> effect.  I'm not a frequent user of <code>sox</code> so you should consult the manpage yourself for the details.</p>
    </div>