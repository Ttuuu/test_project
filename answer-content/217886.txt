<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>if the syntax for my pointers looks correct</p>
</blockquote>

<p>The syntax for the pointers is correct in all the function parameters, however, the pointer syntax is incorrect or unnecessary in the two scanf statements. The two output variables passed into <code>temperature(float *, float*)</code> are already addresses of variables so in this case the proper code would be</p>

<pre><code>    scanf("%f", ptrTc);
    scanf("%f", ptrTh);
</code></pre>

<p>You would only need <code>&amp;</code> if this was in the main program and Tc and Th were being read directly.</p>

<pre><code>    float Tc;
    scanf("%f", &amp;Tc);
</code></pre>

<blockquote>
  <p>if there's a more efficient way of writing my code</p>
</blockquote>

<p>All four of the variables are related, it might be better to use a <code>struct</code> to contain them. That way if the program needed to be modified to loop through data it would be easier to build an array of all the values. Using a struct would also decrease the number of parameters for each function to one.</p>

<p><strong>Error Checking</strong><br>
A best practice is to check all input data as it comes in and report any errors, especially for user input. Users can make errors such as entering characters rather than numbers. The <code>temperature(float *, float*)</code> function could return an integer the indicated success or failure.</p>

<p><strong>Separate and Initialize in Variable Declarations</strong><br>
There are 2 things that can be improved in the following code:</p>

<pre><code>    float Tc, //cold reservoir; user input
        Th, //hot reservoir; user input
        Rcp, //refrigeration cycle coefficient of performance
        Hcp; // Heat pump coefficient of performance
</code></pre>

<p>This code is hard to maintain because it is hard to add a variable to the list. </p>

<p>Not initializing variables can lead to hard to debug problems later, this is especially true of the C programming language because it does not automatically initialize variables to a zero or null value as some other languages do. Of the two problems this is actually the more serious one, the other might be considered style.</p>

<p>An possible example of an improved declaration is:</p>

<pre><code>    float Tc = 0.0;  //cold reservoir; user input
    float Th = 0.0;  //hot reservoir; user input
    float Rcp = 0.0; //refrigeration cycle coefficient of performance
    float Hcp = 0.0; // Heat pump coefficient of performance
</code></pre>

<p><strong>Spacing, Both Vertical and Horizontal</strong><br>
Within expressions is it common to put spaces between operators and operands, this makes the code more readable.</p>

<p>Vertical separation of one line between functions might make the code more readable as well.</p>
    </div>