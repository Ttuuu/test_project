<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Don't over use <code>set</code>. It is faster when the items are discrete, but slower when the items are continuous. Although, the difference is very small in your case.</p>

<p>The problem here is that you use <code>delete</code> repeatedly. Each call moves (copies) a potentially large chuck of characters. This is inefficient because many characters are moved multiple times. For example, <code>5</code> in string <code>1 2 3 4 5</code> is moved 4 times.</p>

<p>Given that <code>string</code> in Delphi is mutable, it is better to copy individual characters:</p>

<pre><code>function CleanNumber(s: String): Int64;
Var
  z, l: Cardinal;
begin
  l := 1;
  for z := 1 to length(s) do
    if (s[z] &gt;= '0') and (s[z] &lt;= '9') then
    begin
      s[l] := s[z];
      inc(l);
    end;
  SetLength(s, l - 1);

  if s = '' then
    Result := 0 else
    Result := StrToInt64(s);
end;
</code></pre>

<p>It can be further improved:</p>

<pre><code>function CleanNumber(s: String): Int64;
Var
  z, l: Cardinal;
begin
  l := 1;
  while (l &lt;= length(s)) and (s[l] &gt;= '0') and (s[l] &lt;= '9') do
    inc(l);       // Scan for the first non-numeric char

  for z := l + 1 to length(s) do  // Start from l + 1
    if (s[z] &gt;= '0') and (s[z] &lt;= '9') then
    begin
      s[l] := s[z];
      inc(l);
    end;

  if l = 1 then Result := 0 else
  begin
    SetLength(s, l - 1);
    Result := StrToInt64(s);
  end;
end;
</code></pre>

<p>Note: code not tested.</p>
    </div>