<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I don't have the time at the moment for a full answer but...</p>

<p>In <code>View.checkBoardForWin()</code>, I would split this out into other methods. Store each win combination (e.g., top row, middle row, bottom row etc) in a <code>LinkedList</code> of buttons. For each element in each <code>LinkedList</code>, if X, increment an integer, if Y, decrement. </p>

<p>If <code>variable =3</code>, X wins, if <code>var =-3</code>, O wins. Have each method only check one <code>LinkedList</code> of potential winning combinations, and pass the <code>LinkedList</code> as a parameter.</p>

<p>I'd also abstract the game logic from the GUI, which would help reduce the number of lines per class, but would increase the number of classes. Advantage here is that you can plug your game into another GUI whenever appropriate.</p>
    </div>