<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Note, using Sets, is the way to go. My answer is based upon the assumption that you didn't learn about Sets and you can only use arrays.</p>
<h1>duplicated values</h1>
<pre><code>A1 A2 A3
A4 A5 A6
A7 A8 A9
</code></pre>
<p>your loop:</p>
<pre><code>for (int i = 0; i &lt; length; i++){
    for (int j = 0; j &lt; length; j++){
        int x = square[i][j];
        for (int a = 0; a &lt; length; a++){
             for (int b = 0; b &lt; length; b++){
                 if (a == i &amp;&amp; b == j) continue;
                 if (x == square[a][b]) return false;
             }
        }
    }
}
</code></pre>
<p>In this loop, you will check everything twice...<br>
For example:<br>
<code>square[i][j]</code> will point to <code>A9</code> and <code>square[a][b]</code> will point to <code>A1</code>.<br>
but, also reversed: <code>square[a][b]</code> will point to <code>A9</code> and <code>square[i][j]</code> will point to <code>A1</code>.<br>
Therefor, you check <code>A1</code> with <code>A9</code> twice (and every other combination as well).</p>
<h1>diagonals</h1>
<p>You can use one variable instead of both <code>x</code> and <code>y</code></p>
<h1>Answer</h1>
<ol>
<li>for every coordinate (2 loops) you want to check the other coordinates (2 loops). This means you need 4 loops.<br>
You could store the fields in a 1 dimensional array first, but to my knowledge, this wouldn't be any quicker.</li>
<li>after rewriting using 1 variable, you can answer this question yourself.</li>
</ol>
    </div>