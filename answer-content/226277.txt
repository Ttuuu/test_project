<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Reserved identifiers</h2>

<p>Identifiers starting with a single underscore followed by a capital letter are reserved by the Standard.  You can't create any new name of that form at all in your code.  (As you didn't post any headers I can't know, but I guess things like <code>_GETCURSOR</code> are yours, and not from some library).</p>

<p>C17::7.1.3:</p>

<blockquote>
  <p>7.1.3 Reserved identifiers</p>
  
  <p>1 Each header declares or defines all identifiers listed in its associated subclause, and optionally
  declares or defines identifiers listed in its associated future
  library directions subclause and identifiers which are always reserved
  either for any use or for use as file scope identifiers.</p>
  
  <p>— All identifiers that begin with an underscore and either an uppercase
  letter or another underscore are always reserved for any use, except
  those identifiers which are lexically identical to keywords.187)</p>
  
  <p>— All identifiers that begin with an underscore are always reserved for use
  as identifiers with file scope in both the ordinary and tag name
  spaces.</p>
  
  <p>— Each macro name in any of the following subclauses
  (including the future library directions) is reserved for use as
  specified if any of its associated headers is included; unless
  explicitly stated otherwise (see 7.1.4).</p>
  
  <p>— All identifiers with
  external linkage in any of the following subclauses (including the
  future library directions) and <code>errno</code> are always reserved for use as
  identifiers with external linkage.188)</p>
  
  <p>— Each identifier with file
  scope listed in any of the following subclauses (including the future
  library directions) is reserved for use as a macro name and as an
  identifier with file scope in the same name space if any of its
  associated headers is included.</p>
</blockquote>

<p>So you should maybe name it <code>GETCURSOR</code> or <code>GET_CURSOR</code> or <code>GETCURSOR_</code> or <code>GETCURSOR__</code>.</p>

<hr>

<h2><code>stderr</code></h2>

<p>Error messages should be printed to <code>stderr</code> instead of <code>stdout</code> (which is where <code>printf()</code> prints). To do that, one uses <code>fprintf(stderr, "...", ...);</code>.</p>

<hr>

<h2>curses</h2>

<p>Maybe you would like some very nice menus instead of just printing lines on the screen like messages.  The curses libraries do that.  There are various options you can use (all are more or less compatible, at least on the basics): pdcurses and ncurses are the two I've used, and they are relatively easy to learn (the basics at least).</p>

<p>As a bonus, curses is compatible with POSIX, so your program will not only run on Windows.</p>
    </div>