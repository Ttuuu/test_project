<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Parallel computing and asynchonous computing are two separate things. While they might be similar in some cases, the two terms have two very distinct meanings in C#-land:</p>

<ol>
<li>Asynchronous computing is used for the <code>async</code>/<code>await</code> and <code>Task&lt;T&gt;</code> idioms.</li>
<li>Parallel computing is what you are doing here, using <code>plinq</code>: processing streams of data in different threads in parallel.</li>
</ol>

<p>With that said, you're not using the features of Plinq to the fullest. Instead of passing the (incorrectly named) <code>asynchronous</code> to each of the methods, <code>count.MakeIntArray().AsParallel()</code> would have sufficed to make the entire thing parallel.</p>

<hr>

<p>I think you went a bit overboard with the amount of extension methods you created, while gaining little for it in return. What if a new request would come to say something new on every number modulo 10? Now you have to make changes in 4 methods (or more accurately, create 4 more methods) to account for these changes!</p>

<p>Instead you could have made the <code>Fizz</code> and <code>Buzz</code> methods two versions of a more generic <code>Substitute</code> method:</p>

<pre><code>public string Substitute(int number, Func&lt;int, bool&gt; when, string with);
</code></pre>
    </div>