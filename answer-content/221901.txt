<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Code downloads a text file from a website, saves it to local disk, and then loads it into a list for further processing - Version 2.0</p>

<p>In my new version of this code I have separated my code into 3 modules (my start at a 12 factor app):</p>

<p><code>download.py</code> for handling downloading the text file from the website and saving it as a file to local storage;</p>

<p><code>config.py</code> for specifying the URI of the website and the filename for local storage;</p>

<p><code>moby.py</code> is the actual code that reads the words in the text file, 1 per line, into a list.  For now all it does is prints out the words from the file, one per line.</p>

<p>The review my code received provided valuable suggestions on how it could be made more Pythonic, more modular, and more efficient.</p>

<p>Motivated by <a href="https://codereview.stackexchange.com/users/190512/hans-martin-mosner">Hans-Martin Mosner</a> to separate the file download code here is that module.  Also made the chunk_size a parameter to the save_webpagecontent() function based on as suggested by <a href="https://codereview.stackexchange.com/users/42401/peilonrayz">Peilonrayz</a></p>

<p><strong>download.py</strong></p>

<pre><code>import requests
from typing import List

Response = requests.Response

def get_webpage(uri) -&gt; Response:
    return requests.get(uri)


def save_webpagecontent(r: Response, filename: str, chunk_size=8388608) -&gt; None:
    """
    This function saves the page retrieved by get_webpage.
    r is the response from the call to requests.get.
    filename is where we want to save the file to in the filesystem.
    chunk_size is the number of bytes to write to disk in each chunk
    """

    with open(filename, 'wb') as fd:
        for chunk in r.iter_content(chunk_size):
            fd.write(chunk)
</code></pre>

<p><strong>config.py</strong></p>

<pre><code>uri = 'https://ia802308.us.archive.org/7/items/mobywordlists03201gut/CROSSWD.TXT'
filename = 'wordlist.txt'
</code></pre>

<p>I feel I made the most gains in my Python profiency as a result of implementing the changes suggested by <a href="https://codereview.stackexchange.com/users/42401/peilonrayz">Peilonrayz</a> where I did away with intermediate function calls and variables and by working on the suggestion by <a href="https://codereview.stackexchange.com/users/92133/brucewayne">BruceWayne</a> to add an event for failing to open the file.  The file opening code turned out to be the most challenging.  I wasn't able to get `opened_w_error() working exactly based on the example from <a href="https://www.python.org/dev/peps/pep-0343/" rel="nofollow noreferrer">PEP343</a>.  Figuring it out was very rewarding.</p>

<p><strong>moby.py</strong></p>

<pre><code>import download_file as df
import config as cfg
from contextlib import contextmanager
from typing import List

filename = cfg.filename
uri = cfg.uri

@contextmanager
def opened_w_error(filename, mode="r"):
    try:
        f = open(filename, mode)
    except OSError as err:
        yield None, err
    else:
        try:
            yield f, None
        finally:
            f.close()


def read_wordlist(filename: str) -&gt; List[str]:
    with opened_w_error(filename, 'r') as (fd, err):
        if type(err) == FileNotFoundError:
            df.save_webpagecontent(df.get_webpage(uri), filename) #since it failed the first time we need to actually download it
            with opened_w_error(filename, 'r') as (fd, err): # if it fails again abort
                if err:
                    print("OSError:", err)
                else:
                    return fd.readlines()
        else:
            return fd.readlines()


def print_mylist(wordlist: List[str]) -&gt; None:
    print('\n'.join(word.strip() for word in wordlist))


print_mylist(read_wordlist(filename)[:50])
</code></pre>

<p>Thank you to everyone, especially <a href="https://codereview.stackexchange.com/users/6499/roland-illig">Roland Illig</a>, <a href="https://codereview.stackexchange.com/users/190512/hans-martin-mosner">Hans-Martin Mosner</a>, and <a href="https://codereview.stackexchange.com/users/52915/mast">Mast</a> for all your help and encouragement and a safe place to learn!</p>
    </div>