<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Beyond the SOLID principles, think about your classes and methods. Classes/objects are things that exist, methods are things they do. So when naming them, class names should be nouns, methods should be verbs. If you find yourself naming your classes after verbs, it indicates that you aren't thinking through what those classes are actually for.</p>

<p>As such, I have trouble with your CreateGame, DeleteGame, and GameOver classes. Creating and deleting is something you do with the Game object, not things that can exist by themselves. Whatever these do should be methods in the Game class, not classes unto themselves. Reading the code, I'm having trouble following what you are trying to do in instantiating CreateGame and DeleteGame objects. I think if you rethink these classes into methods you perform on the Game class you will also find your code to become simpler. Taken further, a method called Create probably isn't necessary for the Game class. Creating an instance of the class is what the constructor is for.</p>

<p>GameOver is a little different in that the name doesn't really describe a noun or a verb, but rather a state of the Game (that is, the state of a game that has ended). Consider rewriting this as a method on the Game class called End, or, since it appears all this is doing is deleting the game if I am reading your code right, just incorporate its logic into the Game.Delete method. Your ResetGame method you have in GamOver is, again, an action you are performing on Game, and should be part of the Game class.</p>

<p>Good general rule:</p>

<p>Class = noun (something that IS)</p>

<p>Method = verb (something a class DOES)</p>

<p>Another trick you can use is say to yourself what you are trying to accomplish with a sentence like "I need to {method} the {class/object}" (e.g. "I need to Start the Game" or "I need to Remove the SnakePart"). Then you know if that is a method that needs to be on that class. Similarly, you can apply this to code you have already written to see if it makes sense. If you end up with sentences that don't make sense like "I need to ResetGame the GameOver", it is likely something went askew and it is a good time to revise what you were trying to do there.</p>
    </div>