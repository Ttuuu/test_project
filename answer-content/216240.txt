<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This will cover performance, as well as Python style.</p>

<h2>Save constants in one place</h2>

<p>You currently have the magic numbers 2000 and 3000, the resolution of your image. Save these to variables perhaps named <code>X</code>, <code>Y</code> or <code>W</code>, <code>H</code>.</p>

<h2>Mention your requirements</h2>

<p>You don't just rely on Python 3 and Jupyter - you rely on numpy and pillow. These should go in a requirements.txt if you don't already have one.</p>

<h2>Don't save your complex grid</h2>

<p>At all. <code>complex_number</code> should be formed dynamically in the loop based on <code>range</code> expressions.</p>

<p>Disclaimer: if you're vectorizing (which you should do), then the opposite applies - you would keep your complex grid, and lose some loops.</p>

<h2>Don't use <code>index</code> lookups</h2>

<p>You're using <code>index</code> to get your coordinates. Don't do this - form the coordinates in your loops, as well.</p>

<h2>Mandelbrot is symmetrical</h2>

<p>Notice that it's mirror-imaged. This means you can halve your computation time and save every pixel to the top and bottom half.</p>

<p><s>In a bit I'll show some example code accommodating all of the suggestions above.</s> Just do (nearly) what @Alex says and I'd gotten halfway through implementing, with one difference: accommodate the symmetry optimization I described.</p>
    </div>