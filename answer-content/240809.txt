<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Docstrings</h2>

<pre><code>def interpolation_grouped_data(grouped_data, cumulative_frequencies, position): # responsible for using linear interpolation to find the lower quartile, median, and upper quartile of grouped data
</code></pre>

<p>by standard should be written as</p>

<pre><code>def interpolation_grouped_data(grouped_data, cumulative_frequencies, position):
    """
    responsible for using linear interpolation to find the lower quartile, median, and upper quartile of grouped data
    """
</code></pre>

<h2>Unpacking</h2>

<p>If <code>grouped_data</code>'s second dimension only has two entries, then</p>

<pre><code>lower_bound = grouped_data[interval_index][0]
higher_bound = grouped_data[interval_index][1]
</code></pre>

<p>can be</p>

<pre><code>lower_bound, higher_bound = grouped_data[interval_index]
</code></pre>

<h2>Multi-line expressions</h2>

<p>I would find this:</p>

<pre><code>result = lower_bound + ( ( (mid_cu_freq - mn_cu_freq)/(mx_cu_freq - mn_cu_freq) ) * (higher_bound - lower_bound) )
</code></pre>

<p>more easily legible as</p>

<pre><code>result = lower_bound + (
    (
        (mid_cu_freq - mn_cu_freq)/(mx_cu_freq - mn_cu_freq)
    ) * (higher_bound - lower_bound)
)
</code></pre>

<h2>Edge cases</h2>

<p><code>listed_data_stats</code> does not take into account the edge case of an empty <code>listed_data</code>, which will produce a divide-by-zero.</p>

<h2>Inner lists</h2>

<pre><code>sum([i**2 for i in listed_data])
</code></pre>

<p>should be</p>

<pre><code>sum(i**2 for i in listed_data)
</code></pre>

<p>Similarly for both of these:</p>

<pre><code>m = max([listed_data.count(value) for value in listed_data])
mode = set([str(x) for x in listed_data if listed_data.count(x) == m]) if m&gt;1 else None
</code></pre>

<h2>Parens</h2>

<pre><code>variance = (sum_squared_listed_data / number_of_data) - (mean)**2
</code></pre>

<p>does not need parentheses around <code>mean</code>.</p>

<h2>Equality</h2>

<pre><code>if grouped_data[1][0] - grouped_data[0][1] != 0:
</code></pre>

<p>can simply be</p>

<pre><code>if grouped_data[1][0] != grouped_data[0][1]:
</code></pre>

<h2>Formatting for <code>print</code></h2>

<pre><code>    print("", "Sum_x = " + results[0], "Sum_x^2 = " + results[1], "n = " + results[2], "Mean = " + results[3], "Variance = " + results[4],
    "Standard Deviation = " + results[5], "Lower Quartile = " + results[6], "Median = " + results[7], "Upper Quartile = " + results[8],
     "IQR = " + results[9], sep="\n")
</code></pre>

<p>is somewhat of a mess. First of all, your call to <code>grouped_data_stats</code> should not dump its results into a <code>results</code> list. Instead, unpack them; something like</p>

<pre><code>xsum, xsum2, n, mean, var, stdev, qlow, med, qhi, iqr = grouped_data_stats(grouped_data)
</code></pre>

<p>Then for your <code>print</code>, consider separating out your expression onto multiple lines for legibility.</p>
    </div>