<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If it is important to execute the reversing in place, here is an example code (which  implements the algorithm mentioned in <a href="https://codereview.stackexchange.com/a/224037">https://codereview.stackexchange.com/a/224037</a>):</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;ctype.h&gt;


static void reverse_chars(char *s, int n)
{
  int n2 = n / 2;
  for (int i = 0; i &lt; n2; i++)
  {
    char tmp = s[i];
    s[i] = s[n - i - 1];
    s[n - i - 1] = tmp;
  }
}

static char *get_next_word(char *s, int *wlen)
{
  while (*s &amp;&amp; isspace(*s))
    s++;
  if (*s == '\0')
    return nullptr;
  char *p = s;  
  while (*p &amp;&amp; !isspace(*p)) 
    p++;
  *wlen = (p - s);
  return s;
}

static void reverse_words(char *s, int n)
{
  reverse_chars(s, n);
  int wlen;
  char *w;
  while ((w = get_next_word(s, &amp;wlen)) != nullptr)
  {
    reverse_chars(w, wlen);
    s += wlen;
  }
}

int main(int argc, char **argv)
{
  if (argc &lt; 2)
  {
    fprintf(stderr, "Please, specify the string.\n");
    return 1;
  }
  printf("Original string: [%s]\n", argv[1]);
  reverse_words(argv[1], strlen(argv[1]));
  printf("Words reversed:  [%s]\n", argv[1]);
  return 0;
}
</code></pre>
    </div>