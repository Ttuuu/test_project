<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There isn't much to review. <code>InOrder()</code> is merely a depth-first-search, so maybe I would call it that.</p>

<p>You could though optimize a bit, if you created the new "tree" as you traverse the old one:</p>

<pre><code>  public class InOrderForEach
  {
    TreeNode newRoot = new TreeNode(0);
    TreeNode current = null;

    public TreeNode IncreasingBST(TreeNode root)
    {
      if (root == null)
      {
        return null;
      }
      current = newRoot;
      InOrder(root);
      return newRoot.right;
    }

    private void InOrder(TreeNode root)
    {
      if (root == null)
      {
        return;
      }
      InOrder(root.left);
      current = current.right = new TreeNode(root.val);
      InOrder(root.right);
    }

  }
</code></pre>
    </div>