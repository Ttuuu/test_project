<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could use this one-liner to generate groups of consecutive integers in a list:</p>

<pre><code>from itertools import groupby, count

groupby(numberlist, lambda n, c=count(): n-next(c))
</code></pre>

<p>Then to finish it off, generate the string from the groups.</p>

<pre><code>def as_range(iterable): # not sure how to do this part elegantly
    l = list(iterable)
    if len(l) &gt; 1:
        return '{0}-{1}'.format(l[0], l[-1])
    else:
        return '{0}'.format(l[0])

','.join(as_range(g) for _, g in groupby(numberlist, key=lambda n, c=count(): n-next(c)))
# '1-3,6-7,10'
</code></pre>

<p>This assumes they are in sorted order and there are no duplicates.  If not sorted, add a <code>sorted()</code> call on <code>numberlist</code> beforehand.  If there's duplicates, make it a <code>set</code> beforehand.</p>
    </div>