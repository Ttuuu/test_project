<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><strong>Confusing names:</strong> the function <code>largest_number()</code> has a <code>string</code> parameter it's generally not a good practice to name parameters by their types and their is a type hint in your code indicating what that is so you can call the parameter <code>digits</code>.
Inside <code>largest_num()</code> there is <code>string = list(string)</code> where string is not a string(a list). This is super confusing when I'm looking at this part <code>string[string.index(largest_num)] = -1</code> which I mistook for some line that should produce an error (because you can't assign values to string indexes) and then I realized that string is a list. Don't use such confusing names. </li>
<li><strong>Adding to strings:</strong> <code>largest += largest_num</code> This form is inefficient, a string is immutable in Python and each time you're adding to <code>largest</code> a new string is created and assigned to the new value. Whenever you find a similar situation, use list comprehension and join it using the <code>str.join()</code> method.</li>
<li><p><strong>A better approach:</strong>
As 'coderodde' indicated in the comments, this is an <span class="math-container">\$O(N^2)\$</span> solution which can be simplified into the following by just sorting the string:</p>

<pre><code>def maximize_number(digits: str) -&gt; str:
    """Return the maximum number that can be formed using the digits."""
    return ''.join(sorted(digits, reverse=True))
</code></pre></li>
</ul>
    </div>