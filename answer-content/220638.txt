<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Two suggestions for improvement. First, there's no need to keep track of all those possible words in a list <code>list_possible</code>. You could create and check them on the fly instead, saving memory and a bunch of append calls:</p>

<pre><code>for item in perm_words:
    word = "".join(item).lower()
    if dictionary.check(word):
        if word not in list_words_print: 
            list_words_print.append(word)
</code></pre>

<p><strong>EDIT</strong> There's a sneaky bug preventing this, as pointed out by OP. Due to <code>perm_words</code> generating the combinations with a length as determined by <code>range(3, len(word))</code>, <code>word</code> is not a variable that should be overwritten in this loop. Or, rename the user input.</p>

<hr>

<p>Second, having a list to keep the dictionary words in is unnecessarily slow. For every new word found, it's being compared to each word in that list. A faster option would be to store them in a set. Sets can't contain duplicates, so you could simply add each word without having to worry if you've seen it before:</p>

<pre><code>found_words = set()
for item in perm_words:
    word = "".join(item).lower()
    if dictionary.check(word):
        found_words.add(word)
</code></pre>
    </div>