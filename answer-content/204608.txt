<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Not withstanding what other have mentioned.</p>

<pre><code>$array =  explode(",",$data-&gt;items); // string here is 39,40,41
$items = implode("','",$array);  // string here is 39','40','41
</code></pre>

<p>You can simply replace the comas with <code>','</code>, Like this</p>

<pre><code>$items = str_replace(',', "','", $data-&gt;items);
</code></pre>

<p>One thing to note is you should never concatenate data into SQL, because it opens the possibility of SqlInjection.  There is maybe 3 points that you are open to that. Even if you think the data is safe, you should still be using prepared statements.  You never know when code will need to be changed and by not doing it, later you may change where this data comes from and allow user input into those variables.  Sometimes, even, this data could be set in a place far removed from your query.</p>

<p>Just my thoughts.</p>
    </div>