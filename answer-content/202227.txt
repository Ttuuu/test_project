<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>OOP</h2>
<ol>
<li><p>Let's start with : <code>private static bool checkOperator(Object operatorChar)</code>. You shouldn't use <code>Object</code> if you expect a <code>char</code>. If you want a <code>char</code> , demand a <code>char</code>. Also, <code>checkOperator</code> doesn't really mean anything. Your method is used to check if a character is an operator so, I would rename it <code>isOperator</code>.</p>
<p>public char Operand { get; set; } // operator sometimes;
public Node Left;
public Node Right;</p>
</li>
<li><p>You sometimes use <code>{ get; set}</code>, sometimes not. Use it <em>all. the. time.</em> Fine, it's not <em>always</em> necessary, but it doesn't cost more than not using it and, especially in interview questions regarding OOP, you're better to encapsulate than not.</p>
</li>
</ol>
<h2>Comments</h2>
<pre><code>public char Operand { get; set; } // operator sometimes;
</code></pre>
<p>Okay but, when is it an operator, when is it not? Why is it named operand if it's sometimes an operator. This comment introduces much more confusion that it clarifies things. This is mostly a symptom of a problem with the name of your property.</p>
<p>Your XML comments aren't what they should be. They should be used for documentation, not space/time complexity or history.</p>
<h2>Constraints</h2>
<p>Your code doesn't support :</p>
<ol>
<li>Numbers higher than 9</li>
<li>((1)+2)</li>
</ol>
    </div>