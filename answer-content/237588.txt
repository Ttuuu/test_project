<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The code in componentDidUpdate looks a little odd to me. </p>

<blockquote>
  <p><code>if(this.state.deck.length === 0){</code></p>
</blockquote>

<p>You are checking if there aren't any cards, then drawing some cards. This works because you are initialising the deck within getPlayerCard. What I would do is put the deck initialisation within the startNewGame method instead. </p>

<p>getDealerCard and getPlayerCard are doing a bit too much; you could move the victory conditions to separate methods.</p>

<p>In componentDidMount, <code>this.getRandomCards(4);</code> takes in a parameter but the method doesn't use any parameters.</p>

<p>You have 3 variables in state which represent the victory state; playerWin, dealerWin, draw. These all cannot be true at the same time. It would be better to have one variable for the victory state; an option would be like an Enum in Typescript</p>

<p>Looking at the code in your repository, there's a bug in DealersHand.js. You are rendering the second card twice; once in the map function, then again when you make the decision to render it face-down or face-up. Instead, you just need to conditionally render it when the dealer has only 1 card.</p>

<pre><code>{
    cards.length == 1
    &amp;&amp;
    &lt;Card
    key="5"
    className={ "cards card-back" }
    /&gt;
}
</code></pre>

<p>The link on your ReadMe is also wrong. I used the link you provided in the question. I liked the game, but the lack of cards 2-8 took some adapting.</p>
    </div>