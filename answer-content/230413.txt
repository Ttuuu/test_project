<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Nice little snippet! A couple of minor points:</p>

<ul>
<li><p>It's usually better to put the shorter block first in an <code>if</code> <code>else</code>. This stops the <code>else</code> statement being far from the <code>if</code>, making it clearer how the logic flows. </p></li>
<li><p>When comparing to <code>None</code>, check <code>if func is None</code> or similar, rather than comparing to <code>True</code>/<code>False</code>.</p></li>
<li><p>Although this is just a toy example, docstrings should always be used to show what the code does and returns.</p></li>
<li><p>PEP8 spacing between imports, functions and code.</p></li>
<li><p>Argument names could be better but without knowing the application it's hard to say what they should be.</p></li>
</ul>

<pre class="lang-py prettyprint-override"><code>from functools import partial, wraps


def decorator(func=None, **kwargs):
    """
    Decorator which optionally takes an argument sayhi (True or False).
    prints 'hi' if True, function is then returned as normal
    """
    if func is None:
        return partial(decorator, **kwargs)
    else:
        @wraps(func)
        def decorated(*func_args, **func_kwargs):
            if kwargs.get('sayhi'):
                print('hi')
            return func(*func_args, **func_kwargs)
        return decorated
</code></pre>
    </div>