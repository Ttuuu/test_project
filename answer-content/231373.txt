<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>1. Error handling</h3>

<p>Since <code>0</code> could also be a valid result for the input (e.g. <code>6 10 5</code>), I'd prefer to indicate invalid input via exceptions rather than the return value:</p>

<pre><code>int count_n(int l, int r, int n) {
    if (r &lt;= l) {
        throw std::invalid_argument("Right limit must greater then left limit");
    }

    if (l &lt; 0) {
        throw std::invalid_argument("Only positive integers");
    }

    // ...
}
</code></pre>

<p>Thus the caller of the function can distinguish invalid input parameters from valid results by putting the call of <code>count_n()</code> into a <code>try / catch</code> block.</p>

<h3>2. Function and parameter naming</h3>

<p>Naming the function <code>count_n()</code> and the parameter for the digit to count <code>n</code> is a bit unclear.<br>
You should rather use the signature </p>

<pre><code> int count_digit(int min_left, int max_right, int digit);
</code></pre>

<p>to make the intend of that function clearer.</p>
    </div>