<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I see you removed the calls to <code>$('#loadingDiv').show();</code> from the many conditional blocks and moved that before the call to the AJAX call - I was going to suggest that.</p>
<p>I see the <a href="/questions/tagged/ecmascript-6" class="post-tag" title="show questions tagged 'ecmascript-6'" rel="tag">ecmascript-6</a> features like the Class syntax are used, so other ES-6 features could be used - like the short-hand syntax - i.e. on this line:</p>
<blockquote>
<pre><code> $.post('process/editUser.php', {uobj:uobj}, function(data)
</code></pre>
</blockquote>
<p>The second argument can be simplified:</p>
<pre><code>$.post('process/editUser.php', {uobj}, function(data)
</code></pre>
<p>There is no need to use the <code>else</code> keyword since all previous conditional blocks have a <code>return</code> statement.</p>
<p>The callback to the AJAX call has a variable <code>modal</code>:</p>
<blockquote>
<pre><code>var modal = "#addUserModal";
</code></pre>
</blockquote>
<p>The variable is only used one time so the value can be used in the call to <code>dataCheck</code> and the variable eliminated. Additionally, unless there is a good reason like needing a global variable, don't use <code>var</code>. Use <code>const</code> and then if you determine re-assignment is necessary use <code>let</code>.</p>
<p>Instead of using <code>.indexOf()</code> to determine if a string does or does not contain a substring, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes" rel="nofollow noreferrer">String.prototype.includes()</a> could be used unless <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Browser_compatibility" rel="nofollow noreferrer">browser compatibility is an issue</a>.</p>
<p>I know that the PHP PSRs recommend having opening braces on a new line but this is less common in JavaScript.</p>
    </div>