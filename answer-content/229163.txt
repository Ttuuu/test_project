<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Simplify the code</h3>

<p>The <code>guard</code> statement and the following <code>if let</code> can be combined into a single statement:</p>

<pre><code>let key = "Signature"
let signatures = iconURL.matches(for: "\(key)[^&amp;]+")
if let firstSignature = signatures.first,
    let range = firstSignature.range(of: "\(key)=") {
    let signature = String(firstSignature[range.upperBound...])
    print(signature)
}
</code></pre>

<h3>Improve the regex pattern</h3>

<p>Your method is fragile because the key "Signature" may occur in the host part of the URL. Here is an example where it fails:</p>

<pre><code>let iconURL = "http://Signature.com/?a=b&amp;Signature=sig&amp;c=d"
</code></pre>

<p>As mentioned in the comments, you can use a positive look-behind which includes the "=" character:</p>

<pre><code>let key = "Signature"
let signatures = iconURL.matches(for: "(?&lt;=\(key)=)[^&amp;]+")
if let signature = signatures.first {
    print(signature)
}
</code></pre>

<p>However, this would still fail for </p>

<pre><code>let iconURL = "http://foo.com/Signature=bar?a=b&amp;Signature=sig&amp;c=d"
</code></pre>

<p>because the "=" character <em>is</em> valid in the path part of an URL.</p>

<p>You also must ensure that the key does not contain any characters which have a special meaning in a regex pattern.</p>

<h3>And now for something completely different</h3>

<p>The Foundation framework has a dedicated <a href="https://developer.apple.com/documentation/foundation/urlcomponents" rel="nofollow noreferrer">URLComponents</a> type to parse URLs into their parts. It does exactly what you need here:</p>

<pre><code>let iconURL = "http://Signature.com/Signature=foo?a=b&amp;Signature=2BI%2BauSvy&amp;c=d"
let key = "Signature"

if let urlComponents = URLComponents(string: iconURL),
    let queryItems = urlComponents.queryItems {
    for queryItem in queryItems where queryItem.name == key {
        if let value = queryItem.value {
            print(value) // 2BI+auSvy
        }
    }
}
</code></pre>

<p>In addition, the value is already percent-decoded.</p>
    </div>