<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here is the rewritten code with @SamOnelaâ€™s suggestions applied, and many other little modifications.</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>document.addEventListener("DOMContentLoaded", _ =&gt; {
  //DOM references

  const calculator = document.forms[0]
  const total = calculator.elements.total
  const firstThreeCakeOptions = [...calculator.elements.cake].slice(0, 3)
  const size = calculator.elements.size
  const occasions = [...calculator.elements.occasion]
  const fieldset = [...document.getElementsByTagName("fieldset")]
  const extrasFieldset = fieldset[3]

  // Prices

  const occasionOptions = {
    party: 20,
    birthday: 25,
    anniversary: 50,
    wedding: 100
  }

  const sizeOptions = {
    six: 1,
    eight: 1.5,
    ten: 2,
    twelve: 2.5
  }

  const extrasOptions = {
    inscription: 10,
    decoration: 25,
    special: 50
  }

  // Calculator logic

  calculator.addEventListener("click", calculateTotal)

  function cakeMultiplier() {
    const size = calculator.elements.size
    const isChecked = checkbox =&gt; checkbox.checked

    let count = firstThreeCakeOptions.filter(isChecked).length
    if (count) {
      count = count * 0.5 + 0.5
    }
    if (raphael.checked) {
      count += 1
    }
    return count
  }

  function occasionCost() {
    const occasion = calculator.elements.occasion

    for (let i = 0; i &lt; occasion.length; i++) {
      if (occasion[i].checked) {
        return occasionOptions[occasion[i].id]
      }
    }
    return 0
  }

  function sizeCost() {
    for (let i = 0; i &lt; size.length; i++) {
      if (size[i].checked) {
        return sizeOptions[size[i].id]
      }
    }
    return 1
  }

  function extrasCost() {
    const extras = calculator.elements.extras
    let extrasCost = 0

    for (let i = 0; i &lt; extras.length; i++) {
      if (extras[i].checked) {
        extrasCost = extrasCost + extrasOptions[extras[i].id]
      }
    }
    return extrasCost
  }

  function calculateTotal() {
    const totalCost =
      cakeMultiplier() * occasionCost() * sizeCost() + extrasCost()
    total.value = "$" + totalCost.toLocaleString("en")
  }

  // Display "extras" fieldset when "wedding" occasion is selected

  extrasFieldset.style.display = "none"

  occasions.forEach(occasion =&gt; {
    occasion.addEventListener("click", () =&gt; {
      if (occasion.id == "wedding") {
        extrasFieldset.style.setProperty("display", "inherit")
      } else {
        extrasFieldset.style.setProperty("display", "none")
      }
    })
  })

  // Display cost after size has been selected

  total.style.display = "none"

  size.forEach(i =&gt; {
    i.addEventListener("click", function(e) {
      if (this.checked) {
        total.style.setProperty("display", "inherit")
      }
    })
  })

  // Disable all fieldsets except the first one

  function disableFieldsets() {
    const disabledFieldsets = document.querySelectorAll(
      "fieldset:not(:first-of-type)"
    )

    for (let i = 0; i &lt; disabledFieldsets.length; i++) {
      disabledFieldsets[i].disabled = true
    }
  }

  disableFieldsets()

  // Enable fieldsets sequentially on selection

  document.querySelectorAll("fieldset").forEach(fieldset =&gt; {
    fieldset.addEventListener("change", function() {
      let nextFieldset = this.nextElementSibling

      while (nextFieldset &amp;&amp; !nextFieldset.disabled) {
        nextFieldset = nextFieldset.nextElementSibling
      }

      if (nextFieldset) {
        nextFieldset.disabled = false
      }
    })
  })

  // Reset form after all inputs in the first fieldset are deselected

  let isChecked = false

  document
    .querySelectorAll("fieldset:first-of-type input[type=checkbox]")
    .forEach(function(cakeOption) {
      cakeOption.addEventListener("click", function(e) {
        if (this.checked) {
          isChecked = true
        } else {
          if (
            isChecked &amp;&amp;
            !document.querySelectorAll(
              "fieldset:first-of-type input[type=checkbox]:checked"
            ).length
          ) {
            calculator.reset()
            disableFieldsets()
            extrasFieldset.style.setProperty("display", "none")
            total.style.setProperty("display", "none")
          }
        }
      })
    })
})</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;form&gt;
&lt;fieldset&gt;
&lt;legend&gt;Select Cakes&lt;/legend&gt;
  &lt;input type=checkbox name=cake id=leonardo&gt;
  &lt;label for=leonardo&gt;Leonardo&lt;/label&gt;
  
  &lt;input type=checkbox name=cake id=donatello&gt;
  &lt;label for=donatello&gt;Donatello&lt;/label&gt;
  
  &lt;input type=checkbox name=cake id=michelangelo&gt;
  &lt;label for=michelangelo&gt;Michelangelo&lt;/label&gt;
  
  &lt;input type=checkbox name=cake id=raphael&gt;
  &lt;label for=raphael&gt;Raphael&lt;/label&gt;
  
  &lt;p&gt;If you select more than one cake, the other cakes are discounted 50%.
  &lt;p&gt;&lt;small&gt;Does not apply to Raphael.&lt;/small&gt;
&lt;/fieldset&gt; 

&lt;fieldset&gt;
&lt;legend&gt;Choose Occasion&lt;/legend&gt;
  &lt;input type=radio name=occasion id=party required&gt;
  &lt;label for=party&gt;Party&lt;/label&gt;
  
  &lt;input type=radio name=occasion id=birthday&gt;
  &lt;label for=birthday&gt;Birthday&lt;/label&gt;
  
  &lt;input type=radio name=occasion id=anniversary&gt;
  &lt;label for=anniversary&gt;Anniversary&lt;/label&gt;
  
  &lt;input type=radio name=occasion id=wedding&gt;
  &lt;label for=wedding&gt;Wedding&lt;/label&gt;
&lt;/fieldset&gt;

&lt;fieldset&gt;
&lt;legend&gt;Choose Size&lt;/legend&gt;
  &lt;input type=radio name=size id=six required&gt;
  &lt;label for=six&gt;6-inch&lt;/label&gt;
  
  &lt;input type=radio name=size id=eight&gt;
  &lt;label for=eight&gt;8-inch&lt;/label&gt;
  
  &lt;input type=radio name=size id=ten&gt;
  &lt;label for=ten&gt;10-inch&lt;/label&gt;
  
  &lt;input type=radio name=size id=twelve&gt;
  &lt;label for=twelve&gt;12-inch&lt;/label&gt;
&lt;/fieldset&gt;

&lt;fieldset&gt;
&lt;legend&gt;Select Extras&lt;/legend&gt;
  &lt;input type=checkbox name=extras id=inscription&gt;
  &lt;label for=inscription&gt;Inscription&lt;/label&gt;
  
  &lt;input type=checkbox name=extras id=decoration&gt;
  &lt;label for=decoration&gt;Decoration&lt;/label&gt;
  
  &lt;input type=checkbox name=extras id=special&gt;
  &lt;label for=special&gt;Special Frosting &amp; Icing&lt;/label&gt;
&lt;/fieldset&gt;

&lt;input type=text name=total readonly&gt;
&lt;input type=submit value=Submit&gt;
&lt;/form&gt;</code></pre>
</div>
</div>

    </div>