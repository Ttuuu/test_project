<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Have you actually read or at least skimmed PEP8 regarding the aspects mentioned by the style checking tool?</p>

<p>The first error (E711) basically wants you to write <code>if nums is None or ...</code> instead of ``. You can find this at section <a href="https://www.python.org/dev/peps/pep-0008/#programming-recommendations" rel="nofollow noreferrer">Programming Recommendations</a>.</p>

<p>The second one (E702) tells you that you are using a semicolon to cram multiple lines into a single one. Simple searching your code for <code>;</code> will bring up <code>j += 1; k -= 1</code>. It is not recommended to have multiple instructions per line, so each of them should be on its own line. This can be found in the section titled <a href="https://www.python.org/dev/peps/pep-0008/#other-recommendations" rel="nofollow noreferrer">Other Recommendations</a>.</p>

<p>As you know, Python can be a bit picky when it comes to whitespace. The explanation why trailing whitespace is frowned upon may also be found under <em>Other Recommendations</em> in PEP8 (see previous link).</p>

<p>As for the missing newline at the end of the file: there is no Python specific reason why you <em>have</em> to do this. It's just that most people <em>tend to</em> do this. pylint's <a href="http://pylint-messages.wikidot.com/messages:c0304" rel="nofollow noreferrer">help page on that message</a> tells you more about it:</p>

<blockquote>
  <p>While Python interpreters typically do not require line end character(s) on the last line, other programs processing Python source files may do, and it is simply good practice to have it. This is confirmed in <a href="https://docs.python.org/3/reference/lexical_analysis.html#line-structure" rel="nofollow noreferrer">Python docs: Line Structure</a> which states that a physical line is ended by the respective line end character(s) of the platform.</p>
</blockquote>

<p>Which brings us to other tools that can be use to check your code style. Python has a lot of them, e.g. <a href="https://pylint.org/" rel="nofollow noreferrer">pylint</a> (mentioned above - also with a static code checker), <a href="http://flake8.pycqa.org/en/latest/" rel="nofollow noreferrer">flake8</a>, <a href="http://pycodestyle.pycqa.org/en/latest/" rel="nofollow noreferrer">pycodestyle</a> (formerly pep8), and <a href="https://pypi.org/project/bandit/" rel="nofollow noreferrer">bandit</a> to name a few. There is a Visual Studio Code <a href="https://code.visualstudio.com/docs/python/linting#_specific-linters" rel="nofollow noreferrer">help page</a> about which linters are supported by that specific IDE with a few more of them. Just pick an code editor (Visual Studio Code, Atom, vim, emacs, ...) or IDE (Eclipse with Python plugin, PyCharm, Spyder, ...) of your choice, type its name into Google search, add "python linter"/"python stylecheck" to your query and you are more than likely to find something that either describes how to use built-in tools or integrations to do just that.</p>
    </div>