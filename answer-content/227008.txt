<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Indeed, you could use <code>GroupBy</code> but I think it's easier to solve with the query syntax because we also need the <code>item</code> from the first list to sort by its <code>Id</code>. Without it, we would need to do additional lookups like you do.</p>

<pre><code>var result =     
    from item in items // from + from = SelectMany
    from child in item.Children
    orderby item.Id // sort in ascending order
    group item.Id by child into g // group by child
    select (Child: g.Key, MinId: g.First()); // the first item in each group is the min-id
</code></pre>

<p>If you use <code>select g</code> instead, you'll get <code>IGrouping&lt;char, int&gt;</code> which you can easily turn into a dictionary or a lookup.</p>
    </div>