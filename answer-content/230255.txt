<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The best case would be if your inventory is always a <code>collections.Counter</code>. Then you could just use the <a href="https://docs.python.org/3/library/collections.html#collections.Counter.update" rel="nofollow noreferrer"><code>update</code></a> method, which takes either a dictionary-like object, or an iterable (like the constructor). This way you don't need to do <code>added_items.count(i)</code> all the time, which takes away almost all of the benefits of using <code>Counter</code> in the first place.</p>

<pre><code>from collections import Counter

def print_inventory(inventory):
    """prints the players inventory
    and reports the total number of items."""
    print("Inventory:")
    item_total = 0
    for k, v in inventory.items():
        print(f"{v} {k}")
        item_total += v
    print(f"\nTotal number of items: {item_total}")


def add_to_inventory(inventory, added_items):
    """Add all items from `added_items` to `inventory`.

    `inventory` is assumed to be a `collection.Counter` instance.
    """
    inventory.update(added_items)

if __name__ == "__main__":
    # players current inventory before killing dragon
    inv = Counter({'rope': 1, 'torch': 6, 'gold coin': 42,
                   'dagger': 1, 'arrow': 12})
    # items from the slain dragon
    dragon_loot = ['gold coin', 'dagger', 'gold coin',
                   'gold coin', 'ruby']
    add_to_inventory(inv, dragon_loot)
    # inv.update(dragon_loot)  # could also just inline it...
    print_inventory(inv)
</code></pre>

<p>Of course, this strays a bit away from the specifications, but since this is mostly about learning how to program (or automate stuff), I think this is acceptable.</p>

<p>Note that I also added proper <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer">docstrings</a>, added a <a href="http://stackoverflow.com/questions/419163/what-does-if-name-main-do"><code>if __name__ == "__main__"</code> guard</a>, used consistent indentation (of 4 spaces) and <code>lower_case</code> as required by <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8, Python's official style-guide</a>, used <a href="https://realpython.com/python-f-strings/" rel="nofollow noreferrer">f-strings</a> where applicable and used in-place addition for the total.</p>
    </div>