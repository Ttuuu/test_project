<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to Code Review. I'm starting from this declaration:</p>

<blockquote>
<pre><code>ArrayList&lt;Integer&gt; glassesAsList = new ArrayList&lt;Integer&gt;();
</code></pre>
</blockquote>

<p>Better use declare it as a <code>List</code> and not <code>ArrayList</code>:</p>

<pre><code>List&lt;Integer&gt; glassesAsList = new ArrayList&lt;Integer&gt;();
</code></pre>

<p>Here the main problem of your code:</p>

<pre><code>for (int x=0;x&lt;glassesAsList.size()-2;++x){
    if(glassesAsList.get(x) == glassesAsList.get(x+1) &amp;&amp; glassesAsList.get(x) ==    glassesAsList.get(x+2)){
        glassesAsList.remove(x);
        glassesAsList.remove(x);
        glassesAsList.remove(x);
        counter++;
        x=-1;
     }
     if(glassesAsList.isEmpty())
          break;
}
</code></pre>

<p>You're iterating over a list and the operation is generally safe unless as in your case the loop contains a <code>remove</code> operation, because when you remove an element from a list all the elements at the right of it will be shifted and then all their indexes are changed by 1. One option to avoid the problem is use an iterator like below:</p>

<pre><code>while (it.hasNext()) {
       Integer i = it.next();
       it.remove();
       //other instructions, I saved the value of the list element in the variable i
}
</code></pre>

<p>Due to the task, for me one list is not enough to solve it, you have to create another <code>helper</code> list where to store elements for comparisons with the current element <code>i</code> in the original list, below the full code of the class:</p>

<pre><code>public class Rounds {

    public static int brothersInTheBar(int[] glasses) {
        if (glasses.length &lt; 3) {
            return 0;
        }
        int rounds = 0;
        List&lt;Integer&gt; helper = new ArrayList&lt;Integer&gt;();
        List&lt;Integer&gt; glassesAsList = new ArrayList&lt;Integer&gt;();
        Arrays.stream(glasses).forEach(i -&gt; glassesAsList.add(i));
        Iterator&lt;Integer&gt; it = glassesAsList.iterator();
        while (it.hasNext()) {
            Integer i = it.next();
            it.remove();
            int size = helper.size();
            if (size &gt;= 2 &amp;&amp; helper.get(size - 1) == i &amp;&amp; helper.get(size - 2) == i) {
                helper.remove(size - 1);
                helper.remove(size - 2);
                ++rounds;
            } else { 
                helper.add(i);
            }
        }

        return rounds;
    }

    public static void main(String[] args) {
        System.out.println(brothersInTheBar(new int[] {1, 1, 2, 3, 3, 3, 2, 2, 1, 1}));
        System.out.println(brothersInTheBar(new int[] {1, 1, 2, 1, 2, 2, 1, 1}));

    }

}
</code></pre>

<p>The comparison will be between the last two elements of <code>helper</code> list and your element <code>i</code> in the loop, if all three are equals the last two elements will be deleted and rounds will be increment by 1, otherwise you will add the element <code>i</code> in the <code>helper</code> list. </p>

<p>Note : probably it is possible a solution that uses a list iterator (or perhaps a couple) and combinating it or them with the list, checks the two elements before the current and delete them together without an helper list.</p>
    </div>