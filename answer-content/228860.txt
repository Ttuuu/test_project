<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Review</h2>

<p>You have a bit too many variables to my taste, but that's not much of a problem.</p>

<blockquote>
<pre><code>let lengthOfString = str.length; // is a variable that useful here?
</code></pre>
</blockquote>

<p>I would use <code>const</code> instead of <code>let</code> because the variables are only set once.</p>

<p>The if-statements could be written with much less overhead.</p>

<p>First,</p>

<blockquote>
<pre><code>str.includes(target) === true
</code></pre>
</blockquote>

<p>could be written as</p>

<pre><code>str.includes(target)
</code></pre>

<p>But even better is to leave it out entirely, since the index would be -1 when not included anyway, which would never match <code>str.length - target.length</code>. Matti Virkkunen found an edge case that escaped my attention. I would still leave this check out, but add a guard that the last index should be &gt; -1.</p>

<p>Further, the <em>false</em> branches are completely redundant. You should return the result of the condition rather than creating unnecessary branches yielding true or false based on the condition.</p>

<hr>

<h3>Simplified Solution</h3>

<p>The function could be shortened to:</p>

<pre><code>function confirmEnding(str, target) {
  const subtractLengths = str.length - target.length;
  const lastIndexOfString = str.lastIndexOf(target);
  return lastIndexOfString === subtractLengths &amp;&amp; lastIndexOfString &gt; -1;
}
</code></pre>

<p>Since the challenge description and test cases don't mention null and undefined values, I didn't include any checks for these edge cases.</p>
    </div>