<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>Your codes looks pretty good, even though (?:I'm not really a code reviewer])*.</p>
</blockquote>

<p>If you wish to use regular expressions though for validations, there are several strategies that you can follow up, given that validations with regular expressions are a bit difficult to do and it'd be good to know some details of the boundaries and limitations. </p>

<p>My guesswork is that maybe here we would start with some expression similar to:</p>

<pre><code>^((?:https?:\/\/)(?:w{3}\.)?my-site\.com(?:\/[a-z0-9]{1,64}){2}\/)[a-z0-9]{1,64}(\/[a-z0-9]{1,64}\/)[a-z0-9]{1,64}(\/?)$
</code></pre>

<h3><a href="https://regex101.com/r/vCY51o/1/" rel="nofollow noreferrer">Demo</a></h3>

<p>which has some quantifiers to just limit the sizes, if that'd be desired, and since we'd be replacing the third and fifth topics, then we'd define our replacement similar to,</p>

<pre><code>$1some_other_topic_3$2some_other_topic_5$3
</code></pre>

<p>for instance. </p>

<hr>

<p>There would be many other options that you could modify your expression with, such as, </p>

<pre><code>^((?:https?:\/\/)(?:w{3}\.)?my-site\.com(?:\/[^\/\r\n]+){2}\/)[^\/\r\n]+(\/[^\/\r\n]+\/)[^\/\r\n]+(\/?)$
</code></pre>

<p>which would depend on how you'd like to validate the URLs. </p>

<h3><a href="https://regex101.com/r/Cd29vB/1/" rel="nofollow noreferrer">Demo 2</a></h3>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const regex = /^((?:https?:\/\/)(?:w{3}\.)?my-site\.com(?:\/[^\/\r\n]+){2}\/)[^\/\r\n]+(\/[^\/\r\n]+\/)[^\/\r\n]+(\/?)$/gmi;
const str = `http://www.my-site.com/topic1/topic2/topic3/topic4/topic5
https://www.my-site.com/topic1/topic2/topic3/topic4/topic5
http://my-site.com/topic1/topic2/topic3/topic4/topic5
https://my-site.com/topic1/topic2/topic3/topic4/topic5
http://www.my-site.com/topic1/topic2/topic3/topic4/topic5/
https://www.my-site.com/topic1/topic2/topic3/topic4/topic5/
http://my-site.com/topic1/topic2/topic3/topic4/topic5/
https://my-site.com/topic1/topic2/topic3/topic4/topic5/
https://notmy-site.com/topic1/topic2/topic3/topic4/topic5/`;
const subst = `$1some_other_topic_3$2some_other_topic_5$3`;


const result = str.replace(regex, subst);

console.log(result);</code></pre>
</div>
</div>


<hr>

<p>If you wish to simplify/modify/explore the expression, it's been explained on the top right panel of <a href="https://regex101.com/r/vCY51o/1/" rel="nofollow noreferrer">regex101.com</a>. If you'd like, you can also watch in <a href="https://regex101.com/r/vCY51o/1/debugger" rel="nofollow noreferrer">this link</a>, how it would match against some sample inputs.</p>

<hr>

<h3>RegEx Circuit</h3>

<p><a href="https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24" rel="nofollow noreferrer">jex.im</a> visualizes regular expressions: </p>

<p><a href="https://i.stack.imgur.com/XUV2v.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/XUV2v.png" alt="enter image description here"></a></p>
    </div>