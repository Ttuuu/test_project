<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your conditions testing for victory have a bug, due to your choice of data structure.</p>

<p>In the array <code>arr</code>, a number from 0 to 8 represents an empty space, and a number 10 or 11 represents "X" or "O". (This is what I infer from your code; it would have been helpful to document it using a comment where the array is declared.)</p>

<p>It follows that the condition <code>arr[6] + arr[7] + arr[8] == 3*10</code> is true when the first player has played in cells 6, 7 and 8. However, because 11 + 11 + 8 = 30, it is <em>also</em> true when the second player has played in cells 6 and 7, and cell 8 remains empty. The same applies for other win conditions involving cell 8.</p>

<p>This bug could be fixed by using different numbers to represent the players' moves. I would suggest using 1, -1 and 0 to represent "X", "O" and "empty" respectively. There is no need for different empty cells to be represented in the data structure by different numbers; if you want to <em>print</em> the board with numbers in the empty cells, then the code to achieve that belongs in the function which prints the board.</p>
    </div>