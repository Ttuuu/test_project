<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Assuming you have a handler for the click event of the button(<code>filter</code>) to apply the filters.  You can get all the checked boxes from each panel into separate collections.  A LINQ query can then apply the filters against each user:</p>

<pre><code>private void filter_Click(object sender, EventArgs e)
{
    var checkedNumbers = numbers.Controls.OfType&lt;CheckBox&gt;().Where(x =&gt; x.Checked == true);
    var checkedColors = colors.Controls.OfType&lt;CheckBox&gt;().Where(x =&gt; x.Checked == true);
    dataGridView1.DataSource = (from user in users
                                where (checkedNumbers.Count() == 0 ? true : checkedNumbers.Any(x =&gt; x.Text == user.number))
                                        &amp;&amp; (checkedColors.Count() == 0 ? true : checkedColors.Any(x =&gt; x.Text == user.color))
                                select user).ToList();
}
</code></pre>

<p>For each filter set, if the count is 0 it returns true, or you could say unfiltered, otherwise it checks if the users complies with the filter(s).  This follows the requirements you've stipulated.</p>

<p>While the above will work for this specific case, having different properties that you want to filter by, could be problematic.  Using the <code>group</code> clause it's fairly easy to get all the checked boxes grouped by the panel name.  If the panel names are exactly like the property names in the <code>SomeUser</code> class and the checkboxes text's are exactly like the values for those properties, one can use some simple reflection to compare the values:</p>

<pre><code>private void filter_Click(object sender, EventArgs e)
{
    var checkedBoxes = (from panel in Controls.OfType&lt;Panel&gt;()
                        from CheckBox cb in panel.Controls.OfType&lt;CheckBox&gt;()
                        where cb.Checked == true
                        group cb by panel.Name);
    dataGridView1.DataSource = (from SomeUser user in users
                                where checkedBoxes.Count() == 0 ? true : checkedBoxes.All
                                (grp =&gt; grp.Any
                                (cb =&gt; cb.Text == $"{user.GetType().GetProperty(grp.Key).GetValue(user)}"))
                                select user).ToList();
}
</code></pre>
    </div>