<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>While working on my answer, <a href="https://codereview.stackexchange.com/users/98493/">@Graipher</a> already introduced the idea of a generator.</p>

<p>This generator variant does not rely on an external library, but should still be robust enough:</p>

<pre><code>import itertools
import datetime
from typing import Iterator


FRIDAY = 4

def friday_13_generator(start_date: datetime.date) -&gt; datetime.date:
    year = start_date.year
    month = start_date.month

    def increment_month(year, month):
        """Helper function to increase the year on month 'overflow'"""
        month += 1
        if month &gt; 12:
            month = 1
            year += 1
        return year, month

    if start_date.day &gt;= 13:
        year, month = increment_month(year, month)

    while True:
        candidate = datetime.date(year, month, 13)
        if candidate.weekday() == FRIDAY:
            yield candidate

        year, month = increment_month(year, month)


def next_friday_13(start_date: datetime.date) -&gt; datetime.date:
    '''Get the next Friday 13th after the specified start_date.

    Args:
        start_date (datetime.date)

    Returns:
        datetime.date: The first Friday 13th after the start_date.
    '''
    return next(friday_13_generator(start_date))
</code></pre>

<p><code>if candidate.weekday() == FRIDAY:</code> could also be moved out of <code>candidate_generator</code> using <a href="https://docs.python.org/3/library/itertools.html#itertools.dropwhile" rel="nofollow noreferrer"><code>itertools.dropwhile</code></a> as presented by @Graipher.</p>

<p>Edit: Thanks to <a href="https://codereview.stackexchange.com/users/123200/">Maarten Fabré</a> for spotting an error when <code>start_date</code> was after or on Dec 13.</p>

<p>You can check the correctness of this implementation using the tests provided by <a href="https://codereview.stackexchange.com/users/123200/">Maarten Fabré</a> in his <a href="https://codereview.stackexchange.com/a/237052/">answer</a>. <s><a href="https://codereview.stackexchange.com/users/171983/">gazoh</a> also outlined an additional test case in his <a href="https://codereview.stackexchange.com/a/237059/">answer</a> that you should take care of.</s></p>
    </div>