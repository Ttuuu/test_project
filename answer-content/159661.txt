<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>As for the jQuery/function usage, there is definitely room for improvement but it would be helpful to see an example HTML element that contains the article <code>img</code>, <code>title</code>, and <code>url</code> to understand the page structure a bit.</li>
<li>I think your variable names are clear, but could be simplified. Also, it is common practice to use Camel Case with the first letter lowercase for Node/Javascript instead of underscores between words.

<ul>
<li>For example, replace <code>number_of_articles_beforehand</code> with <code>numArticlesBefore</code></li>
</ul></li>
<li>Here is an article I found helpful regarding <code>var</code>, <code>let</code>, <code>const</code> 

<ul>
<li><a href="https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75" rel="noreferrer">https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75</a></li>
<li>Javascript allows variable hoisting (click <a href="https://www.w3schools.com/js/js_hoisting.asp" rel="noreferrer">here</a> for more info) with the keyword <code>var</code> whereas variables/identifiers declared as <code>let</code> or <code>const</code> do not hoist.</li>
<li>Personally, I have stopped using <code>var</code> altogether to help improve code readability as mentioned in the article above. Also, it is common practice to use <code>const</code> for the Node package require statements instead of var.</li>
<li>Remove the <code>var title, url, image;</code> line because you are only using those variables within their respective functions.</li>
<li>Lastly, I would encourage you to replace <code>i = i + 1;</code> with <code>i++;</code>. It does the same thing and is easier to read. (FYI, <code>i--;</code> would decrement <code>i</code> by 1). </li>
</ul></li>
</ol>
    </div>