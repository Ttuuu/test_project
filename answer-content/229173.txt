<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Positive Changes</h2>

<ul>
<li><code>getReader()</code> is only called once, while called multiple times before.</li>
<li>There are more early exits as before, which results in less nested and lesser deepened nested statements.</li>
<li>Method <code>getPdfStreamUf</code> hides the fallback method away from the main method, this functionality deserves its own method.</li>
</ul>

<h3>Negative Changes</h3>

<ul>
<li>I agree with the developer that methods as <code>readerIsEncrypted</code>, <code>collectionIsNotViewHidden</code> and <code>fileSpecObjectIsNoDictionary</code> reduce readability. These methods are just glorified wrappers for other methods with a null check included.</li>
<li>You still keep some conditions in that could have exited early <code>if (fileSpec != null)</code> and <code>if (stream != null)</code>; you could reduce nested statements further if you'd return null inverted here also.</li>
</ul>

<h3>Other Observations</h3>

<ul>
<li><code>getCatalog()</code> is still called multiple times. Call it once and cache it in a local variable.</li>
<li>Make variables that don't change after being instantiated <code>final</code>.</li>
<li>All in all I would prefer readability and consistency over some complexity metric, although this metric could be an indication to refactor the code. If you split up methods, make sure each method adheres to the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">Single Responsibility Principle</a> (though this could be interpreted any way you want :)</li>
</ul>
    </div>