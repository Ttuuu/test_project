<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Your question</h2>

<blockquote>
  <p>I am using the find class but then I need to use checked[0] is there a better way to do this?</p>
</blockquote>

<p>As was already answered, the <a href="https://api.jquery.com/val" rel="nofollow noreferrer"><code>val()</code></a> method can be used to get the value of the first element matched in the collection. Additionally <a href="https://api.jquery.com/eq/" rel="nofollow noreferrer"><code>.eq()</code></a> could be used to get a reference to the first element if necessary.</p>

<p>The <a href="https://stackoverflow.com/a/18043478/1575353">accepted answer to <em>In jQuery, how do I get the value of a radio button when they all have the same name?</em></a> mentions both the jQuery <code>.val()</code> method, as well as a vanilla Javascript technique. </p>

<blockquote>
  <p>Because this answer keeps getting a lot of attention, I'll also include a vanilla JavaScript snippet.</p>
</blockquote>

<p>It is wise to consider whether you really need jQuery on your page. Take a look at <a href="http://youmightnotneedjquery.com/" rel="nofollow noreferrer">youmightnotneedjquery.com/</a> (and also <a href="https://ilikekillnerds.com/2015/02/stop-writing-slow-javascript/" rel="nofollow noreferrer">this article</a>). If you decide to eliminate it, you could just access the form elements via <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements" rel="nofollow noreferrer"><code>HtmlFormElement.elements</code></a> and the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/forms" rel="nofollow noreferrer"><code>forms</code> property</a>.</p>

<pre><code>const label = document.getElementById('label1');
document.forms[0].addEventListener('submit', event =&gt; {
  event.preventDefault();
  label.innerHTML = document.forms[0].elements.RegimenReferences.value;
});
</code></pre>

<p>With the approach above there are no function calls to query the DOM for the elements in the form submission callback handler. This may not be much faster but would require fewer function calls.</p>

<h2>Other review points</h2>

<ul>
<li><strong>Indentation</strong> is inconsistent - the first line in the callback function is indented with three spaces, then the next line is indented with a tab and a space and then subsequent lines appear to be indented with twelve spaces. It is best to use consistent indentation for the sake of readability. </li>
<li><strong>DOM lookups aren't cheap</strong> so it is wise to store those in variables - e.g. <code>const label</code> as defined in the snippet above.</li>
<li>There is an <strong>Unused Variable</strong>:  <code>sortOrder</code> (other than being logged to the console)</li>
<li><p>It is wise to use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators#Identity" rel="nofollow noreferrer"><strong>strict equality</strong> comparisons</a> unless there is a chance one operand might not have the same type. For example  - instead of:</p>

<blockquote>
<pre><code>if (checkedRegRef.length == 1) {
</code></pre>
</blockquote>

<p>use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators#Identity" rel="nofollow noreferrer"><code>===</code></a></p>

<pre><code>if (checkedRegRef.length === 1) {
</code></pre></li>
</ul>
    </div>