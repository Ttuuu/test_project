<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Coalesce abuse</h2>
<p>There's no reason for this to use <code>??</code>, since the value of the second half of the expression isn't actually used:</p>
<pre><code>_localPath = localPath ?? throw new ArgumentNullException(nameof(localPath));
    
</code></pre>
<p>Just use <code>if (localPath == null)</code>.</p>
<h2>Anonymous lambda</h2>
<p>Try replacing this:</p>
<pre><code>_ =&gt; ConfigChanged()
</code></pre>
<p>with <code>ConfigChanged</code> (no parens). This should bind to the function itself rather than wrapping it in a lambda. Under certain circumstances I seem to remember this needing a cast and I'm not sure whether that's needed here.</p>
<h2>Log the error</h2>
<pre><code>    catch (Exception ex)
    {
        // log error
    }
</code></pre>
<p>Okay? But you didn't log it. That needs to happen.</p>
<h2>For-each</h2>
<pre><code>    for (int i = 0; i &lt; recordPaths.Count; i++)
    {
        var configPath = recordPaths[i];
</code></pre>
<p>should use a simple <code>foreach</code>.</p>
<h2>IDisposable</h2>
<p>This:</p>
<pre><code>        TarArchive tarArchive = TarArchive.CreateInputTarArchive(gzipStream);
        tarArchive.ExtractContents(directory);
        tarArchive.Close();
</code></pre>
<p>should be checked for inheritance from <code>IDisposable</code>. If that is the case, remove your explicit <code>Close</code> and use a <code>using</code> statement. <code>using</code> should also be used for the two <code>Stream</code>s in that method.</p>
<p>See <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-statement" rel="nofollow noreferrer">https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-statement</a> for more details.</p>
<p>Read <a href="https://icsharpcode.github.io/SharpZipLib/help/api/ICSharpCode.SharpZipLib.Tar.TarArchive.html" rel="nofollow noreferrer">your library's documentation</a>:</p>
<blockquote>
<p>Implements</p>
<p>System.IDisposable</p>
</blockquote>
<p>So it can be used as <code>using (TarArchive tarArchive = TarArchive.CreateInputTarArchive(gzipStream)) { ... }</code></p>
    </div>