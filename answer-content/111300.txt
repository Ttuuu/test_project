<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>"spefic" changed to "specific" everywhere</p>

<pre><code>specific_date = specific_date.split('/')
birth_date = birth_date.split('/')

# This line assigns specific year's, month's and day's values.
specific_year, specific_month, specific_day = int(specific_date[2]), int(specific_date[1]), int(specific_date[0])
# This line specifies birth year's, month's and day's values.
birth_year, birth_month, birth_day = int(birth_date[2]), int(birth_date[1]), int(birth_date[0])
</code></pre>

<p>You could use <code>map</code> to convert each of the date values to an integer:</p>

<pre><code>specific_date = map(int, specific_date.split('/'))
birth_date = map(int, birth_date.split('/'))

# This line assigns specific year's, month's and day's values.
specific_year, specific_month, specific_day = specific_date[2], specific_date[1], specific_date[0]
# This line specifies birth year's, month's and day's values.
birth_year, birth_month, birth_day = birth_date[2], birth_date[1], birth_date[0]
</code></pre>

<p>Also there's no need to index these date iterables to unpack them. You can simply unpack them directly because they are iterable:</p>

<pre><code>specific_date = map(int, specific_date.split('/'))
birth_date = map(int, birth_date.split('/'))
specific_year, specific_month, specific_day = specific_date
birth_year, birth_month, birth_day = birth_date
</code></pre>

<p>I think the <code>specific_</code> and <code>birth_</code> prefixes make it a little difficult to see what is going on in the code. I would use shorter variable names that make it easier to line up like values.</p>

<pre><code>year1, month1, day1 = map(int, birth_date.split('/'))
year2, month2, day2 = map(int, specific_date.split('/'))
</code></pre>

<p>Even better would be to use a <code>namedtuple</code> (thanks @holroy for the suggestion).</p>

<p>You'll need to import <code>namedtuple</code> first:</p>

<pre><code>from collections import namedtuple
</code></pre>

<p>Change to:</p>

<pre><code>Date = namedtuple('Date', 'year month day')
birthday = Date(*map(int, birth_date.split('/')))
today = Date(*map(int, specific_date.split('/')))
</code></pre>

<p>I'm not certain the arithmetic in your code is correct.</p>

<p>As for the strings that are printed. I would use string formatting instead of concatenation and I would avoid <code>replace</code>.</p>

<pre><code>year_word = 'year' if today.year - birthday.year &lt; 2 else 'years'
month_word = 'month' if today.month - birthday.month &lt; 2 else 'months'
day_word = 'day' if today.day - birthday.day &lt; 2 else 'days'
age = '{years} {year_word}, {months} {month_word} and {days} {day_word}. '.format(
    years=(today.year - birthday.year),
    month=(today.month - birthday.month),
    day=(today.day - birthday.day),
    year_word=year_word,
    month_word=month_word,
    day_word=day_word,
)
print('Your age is: {age}'.format(age=age))
print('--------------------------------------------------------------------')
</code></pre>
    </div>