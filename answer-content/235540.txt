<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Old style declaration</h1>

<pre><code>class Limiter(object):
    ...
</code></pre>

<p>Using <code>object</code> as a base class is no longer necessary.  Simply write:</p>

<pre><code>class Limiter:
    ...
</code></pre>

<p>Same for the other classes</p>

<h1>Wrong receiver type-hint</h1>

<pre><code>    def __init__(self: object) -&gt; None:
        ...
</code></pre>

<p><code>self</code> is not any <code>object</code>; it must be a <code>Limiter</code> (or class derived from <code>Limiter</code>).  The proper type-hint to use would be <code>Limiter</code>, but that type is still being defined so you can’t use it directly.  The type-hint <code>”Limiter”</code> would be possible to use.  However, any type-checker knows that the <code>self</code> argument must be of the type of the class.  It should be left implicit:</p>

<pre><code>    def __init__(self) -&gt; None:
        ...
</code></pre>

<p>Same for the other methods.</p>

<h1>Synchronous Async method</h1>

<pre><code>    async def increment(self: object) -&gt; bool:
        ...
</code></pre>

<p>This method doesn’t await any results.  It does not need to be <code>async</code>.</p>

<pre><code>    def increment(self) -&gt; bool:
        ...
</code></pre>

<h1>PEP-8</h1>

<pre><code>    if (some_condition):
        ...
</code></pre>

<p>Conditionals do not need to be enclosed in <code>(...)</code>’s.</p>

<p>Methods which are for internal usage only should be marked as “private” (leading underscore).  These include <code>schedule_tasks</code>, <code>reset_counter</code>, <code>display</code>, and <code>make_call</code>.</p>

<p>Similarly, non-public data members should have an leading underscore: <code>limiter</code>, <code>loop</code>, <code>limit</code> and <code>count</code>.</p>
    </div>