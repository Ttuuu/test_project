<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>rather than writing all the loops by hand, can I suggest you use a different data structure?  (I'm a C# programmer, hopefully my code will be easy to translate into Java.)</p>

<p>If the output order doesn't matter and you aren't interested in duplicates, you could get away with something like this:</p>

<pre><code>var arr = new [] {5, 25, 3, 25, 4, 2, 25};
var set = new HashSet&lt;int&gt;(arr);
var roots = arr.Where(x =&gt; set.Contains(x * x));
foreach (var root in roots) Console.WriteLine($"{root}, {root * root}");
</code></pre>

<p>The set construction cost is <span class="math-container">\$O(n \log n)\$</span>, which dominates the running time here (compare this to the nested loops approach which will cost <span class="math-container">\$O(n^2)\$</span>).  Also, as @AJNeufeld points out, you definitely want to avoid calculating square roots when you can get away with simple integer multiplication.</p>
    </div>