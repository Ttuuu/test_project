<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Besides what <a href="https://codereview.stackexchange.com/a/176415/21444">Janos wrote in his answer</a> already, a few thoughts from me:</p>

<h3>Inconsistent use of <code>var</code></h3>

<p>Some variables are declared using the <code>var</code> keyword, but others aren't:</p>

<blockquote>
<pre><code>var canvas = document.getElementById('canvas');
ctx = canvas.getContext('2d');
</code></pre>
</blockquote>

<p><strong>Note:</strong> You can use a <code>,</code> to separate multiple declarations, like:</p>

<pre><code>var canvas = document.getElementById('canvas'),
    ctx = canvas.getContext('2d');
</code></pre>

<h3>Configuration</h3>

<p>I found it a bit hard to follow, which keys were used for what action and you often re-use color values.</p>

<p>To improve readability of your code and to make it more DRY you can create some sort of configuration.</p>

<p>Another advantage is that you can change the whole appearance and control of  the game now. You can even expose this configuration to the user, making it possible to create own game settings.</p>

<h2>Color and control configuration</h2>

<pre><code>var theme = {
    control: {
        up: 39,
        down: 40,
        left: 37,
        right: 38        
    },

    colors = {
        canvas: {
            background: 'darkGreen',
            gameOverBackground: 'red'
        },
        meal: {
            background: 'red'
        }
    }
}
</code></pre>

<p>Simply access the values where needed:</p>

<pre><code>ctx.fillStyle = theme.colors.meal.background;

if (key === theme.control.left) {}
</code></pre>

<p>It is clear which key or color you're referring to and there's only one place to change it.</p>
    </div>