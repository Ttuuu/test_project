<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Overall</h2>
<p>This code is fairly well-structured and very well-documented. Excellent job.</p>
<h2>Type hints</h2>
<p>It's good that you specified types here:</p>
<pre><code>    L : int, float
        Length of the reactor/lamp [m]
    r_outer : int, float
        Outer radius [m]
    r_outer : int, float
</code></pre>
<p>Better would be to codify these in type hints:</p>
<pre><code>def reactor_volume(
    L: Union[int, float], 
    r_outer: Union[int, float], 
    r_inner: Union[int, float],
) -&gt; float:
</code></pre>
<p>Some alternatives to the union are explained here:</p>
<p><a href="https://stackoverflow.com/questions/50928592/mypy-type-hint-unionfloat-int-is-there-a-number-type">https://stackoverflow.com/questions/50928592/mypy-type-hint-unionfloat-int-is-there-a-number-type</a></p>
<h2>Order of operations</h2>
<pre><code>(sigma*N_A)/(1e4*np.log(10))
</code></pre>
<p>can be</p>
<pre><code>sigma * N_A * 1e-4 / np.log(10)
</code></pre>
<h2>Simplification</h2>
<p>The <code>exp</code> will cancel out the <code>log</code> here:</p>
<pre><code>np.exp(-np.log(10)*eps_air*C_air*r)
</code></pre>
<p>to become</p>
<pre><code>np.power(10, -eps_air*C_air*r)
</code></pre>
<h2>Boolean comparison</h2>
<p><code>if no_abs == True</code> should simply be <code>if no_abs</code>.</p>
<h2>Enums</h2>
<p><code>model</code> should capture <code>RAD</code>, <code>LSI</code> etc. in an <code>Enum</code>.</p>
<h2><code>set_reactor</code> return value</h2>
<p>You're forming a list, which is a little odd. Typically, multi-return values are implicit tuples, i.e.</p>
<pre><code>return stirred_reactor, reactor_network
</code></pre>
<h2>Spelling</h2>
<p><code>reasults</code> -&gt; <code>results</code></p>
<h2>Redundant return</h2>
<pre><code>return None
</code></pre>
<p>can be deleted; that's what happens by default.</p>
<h2>Dictionary update</h2>
<pre><code>plt.rcParams['axes.labelsize'] = 18
plt.rcParams['xtick.labelsize'] = 14
plt.rcParams['ytick.labelsize'] = 14
plt.rcParams['figure.autolayout'] = True
</code></pre>
<p>should use</p>
<pre><code>plt.rcParams.update({ ...
</code></pre>
<h2>Graph bounds</h2>
<p>The lower bound for your time axis should be 1e-3 or maybe 1e-2. Remove the long, flat part to focus on the interesting bits.</p>
    </div>