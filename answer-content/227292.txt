<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Globals</h2>

<p>As it is, there would be an advantage to <code>LOGO</code> being a local instead of a global - it's only used by <code>show_logo</code>, and moving it there would clean up the global namespace.</p>

<p>That said (and as others have pointed out), it's fairly common to see stuff like this at the top of Python files in global scope. However, the larger issue is that if you move it to local scope, you have to get clever with indentation. There are no great solutions to this - either you have to de-indent all but the first line, which is ugly; or you have to post-process the string to remove all whitespace at the beginning of each line. So this one is kind of a wash.</p>

<h2>Base URLs</h2>

<p>You correctly saved a base URL, but then didn't use it in the correct contexts. Particularly problematic:</p>

<pre><code>ARCHIVE = "https://www.xkcd.com/archive"
</code></pre>

<p>This ignores the <code>BASE_URL</code> entirely, when it shouldn't.</p>

<p><code>fetch_url</code> is currently useless - it doesn't add anything to <code>requests.get</code>. You could make it useful by making the argument a path relative to the base path.</p>

<pre><code>with requests.get("https:" + img
# ...
url = get_images_from_page(f"{BASE_URL}{page}/")
</code></pre>

<p>Naive string concatenation is not the right thing to do, here. Python has a full-featured <code>urllib</code> to deal with URL parsing and construction.</p>

<h2>show_time</h2>

<p><code>divmod</code> on a numeric time interval is not the right thing to do. Use <code>datetime.timedelta</code>.</p>
    </div>