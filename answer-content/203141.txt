<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>a bit late but anyway, there is my vision. Absolutely straightforward, stack-based approach. Comparing with other stack-based solutions this one is easy to read and understand. Possibly one would like to add checking for subject string without braces at all (using RegExp or other means) to avoid unnecessary iterating through input string. Not sure however if using RegExp will be faster than iterating</p>

<pre><code>function verify(txt)
{
    if (!txt) return 1;

    var stack = [];
    var n = txt.length;
    while (n--)
    {
        switch (txt.charAt(n))
        {
            case ')': stack.unshift(')'); break;
            case ']': stack.unshift(']'); break;
            case '&gt;': stack.unshift('&gt;'); break;
            case '&lt;':
                if (stack.shift() === '&gt;') break;
                return 0;
            case '[':
                if (stack.shift() === ']') break;
                return 0;
            case '(':
                if (stack.shift() === ')') break;
                return 0;
        }
    }
    return +(stack.length === 0);
}
</code></pre>

<p><strong>UPD</strong> This solution is focused on the being as simple and straightforward (also easy to read and understand) as possible. For the 'under hood' logic you can check Mike Brant's answer above (or Ctrl+F for 'At its heart, this is a stack problem')</p>

<p>Because of its simplicity we also getting runtime gain 30% (FF.61) to 70% (Chromium 68.0), see <a href="https://jsperf.com/braces-balance" rel="nofollow noreferrer">jsperf:braces-balance</a></p>
    </div>