<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You are not really extracting a substring, you are only printing a substring.</p>

<p>A string consists of single characters of type <code>char</code>. Create an array of chars and then convert it to string</p>

<pre><code>var characters = new char[numberOfLetters];
for (int i = 0; i &lt; numberOfLetters; i++) {
    characters[i] = word[i + start];
}
string output = new String(characters);
</code></pre>

<hr>

<p>You are doing a strange calculation</p>

<pre><code>int x = word.Length - numberOfLetters;
int end = word.Length - x;
</code></pre>

<p>If you insert the first expression for <code>x</code> into the second, you get:</p>

<pre><code>int end = word.Length - (word.Length - numberOfLetters);
</code></pre>

<p>which is equivalent to</p>

<pre><code>int end = word.Length - word.Length + numberOfLetters;
</code></pre>

<p>or</p>

<pre><code>int end = numberOfLetters;
</code></pre>

<p>which is not correct. Simply add <code>start</code> and <code>numberOfLetters</code> to get the exclusive upper bound. If printing the substring is a solution, then you can write:</p>

<pre><code>int max = start + numberOfLetters;
for (int i = start; i &lt; max; i++) {
    Console.Write(word[i]);
}
</code></pre>
    </div>