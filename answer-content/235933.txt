<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>PHP has a couple phonetic functions that seem as though they should be used. Either soundex() or metaphone() with a combination of similar_text() or levenshtein().</p>

<pre><code>soundex()
</code></pre>

<p>Soundex value of a string.
<a href="https://www.php.net/manual/en/function.soundex.php" rel="nofollow noreferrer">https://www.php.net/manual/en/function.soundex.php</a>
e.g.</p>

<pre><code>soundex("Euler")   == soundex("Ellery");    // E460
</code></pre>

<p>metaphone() ‚Äê metaphone of a string. Bases on english pronunciation rules, so more precision than the soundex() function but limited use with global sites.
<a href="https://www.php.net/manual/en/function.metaphone.php" rel="nofollow noreferrer">https://www.php.net/manual/en/function.metaphone.php</a>
e.g.</p>

<pre><code>var_dump(metaphone('programming'));
string(7) "PRKRMNK
</code></pre>

<p>For example you could use metaphone() with a levenshtein() function to compare words. The levenshtein function measures the  minimum number of charaters needed to replace, insert, or delete to transform a string into a string.
<a href="https://www.php.net/manual/en/function.levenshtein" rel="nofollow noreferrer">https://www.php.net/manual/en/function.levenshtein</a></p>

<p>With those functions you could make good function.</p>

<p>All that being said, the best solution would likely use machine learning to rank results and be written in another language such as Tensorflow or utlitizing a number of AWS, et al tools.</p>

<p>I hope this helps!</p>
    </div>