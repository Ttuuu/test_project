<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code is actually much better than the average. Congrats.</p>

<p>I would change <code>ICandidate</code> to <code>Candidate</code>. No one needs to know if this is an interface, abstract class, concrete class, etc. Don't break encapsulation.</p>

<p>Also, using types makes your code more readable and less error prone.</p>

<p>I wouldn't also use <code>getters</code> and <code>setters</code>. For instance:</p>

<pre class="lang-php prettyprint-override"><code>class Participant
{
    private string $name;
    private string $class;

    public function __construct(string $name, string $class)
    {
        $this-&gt;name = $name;
        $this-&gt;class = $class;
    }

    public function name(): string
    {
        return $this-&gt;name;
    }

    public function class(): string
    {
        return $this-&gt;class;
    }
}
</code></pre>

<p>But... do you really need the <code>Participant</code> class? From your example, it's not necessary.</p>

<p>In your <code>Tournament</code> class, <code>$participants</code> is an array of <code>Candidate</code>s. </p>

<p>Ah, I would also use namespaces so I would be able to implement autoloading (<a href="https://www.php-fig.org/psr/psr-4/" rel="nofollow noreferrer">https://www.php-fig.org/psr/psr-4/</a>)</p>
    </div>