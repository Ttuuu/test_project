<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I can't help too much as I don't have running code, but I can at least get rid of all <code>List</code> and <code>Array</code> conversions, that will make it run faster and reduce lot of memory garbage. I also removed all the optionals as immutability is our best friend :)</p>

<p>Is it ran once per stream and then it is closed or more than once per stream? There is no information about how stream is being handled and if it is closed properly. That can be issue.</p>

<pre><code>fun InputStream.cipherDecryptWithSessionPwd(password: String): String {
    val payloadArray: ByteArray = this.readBytes()
    val salt = payloadArray.sliceArray(0 until 32)
    val spec = Rfc2898DeriveBytes(password, salt, 50000)
    val realData = payloadArray.sliceArray(32 until payloadArray.size)

    val keyBytes = spec.getBytes(256 / 8)
    val ivBytes = spec.getBytes(128 / 8)

    val cipher = Cipher.getInstance("AES/CFB/PKCS7Padding")
    val secretKey: SecretKeySpec? = SecretKeySpec(keyBytes, "AES")
    val ivSpec: IvParameterSpec? = IvParameterSpec(ivBytes)
    cipher.init(Cipher.DECRYPT_MODE, secretKey, ivSpec)
    val byteArrayInputStream = ByteArrayInputStream(realData)
    val decipherStream = CipherInputStream(byteArrayInputStream, cipher)

    val d = BufferedReader(InputStreamReader(decipherStream, Charsets.UTF_8), 0xFFFF)
    return d.readLine()
}
</code></pre>

<p>Edit:</p>

<p>I was thinking what you could cache and only possible variable is I guess cipher:</p>

<p><code>val cipher = Cipher.getInstance("AES/CFB/PKCS7Padding")</code></p>

<p>It probably won't speed up performance as I expect it to be cached factory method, but you can try putting variable outside of function anyway :)</p>
    </div>