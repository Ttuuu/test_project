<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Just adding a couple of things to what has already been said:</p>

<ul>
<li><p>You may have already noticed that the key presses in the snippet actually make the window scroll. That's because you haven't prevented the default behavior, which can easily do if you add a <code>preventDefault()</code> for the keys that you handle:</p>

<pre><code>onkeydown=e=&gt;{
    //... the switch code

    if (e.keyCode &gt;= 37 &amp;&amp; e.keyCode &lt;= 40){
        e.preventDefault();
    }
}
</code></pre></li>
<li><p>The <code>arrayMatch</code> function:</p>

<pre><code>let arrayMatch=(array,item)=&gt;{
    for(let x of array) if(x.x==item.x&amp;&amp;x.y==item.y) return true;
}
</code></pre>

<p>Can be simplified using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some" rel="nofollow noreferrer"><code>Array.prototype.some()</code></a>:</p>

<pre><code>const arrayMatch=(array,item)=&gt; array.some(x =&gt; x.x==item.x&amp;&amp;x.y==item.y);
</code></pre>

<p>Which has a subtle benefit of returning <code>false</code> when it doesn't matching anything instead of returning <code>undefined</code>.</p></li>
<li><p>The <code>move</code> <code>switch</code> has an assignment that you can simplify for all cases, this one:</p>

<pre><code>switch(snake.dir.current){
    case "up":
        ...
        snake.dir.pre="up"; // &lt;--
        break;
    case "down":
        ...     
        snake.dir.pre="down"; // &lt;--
        break;
    case "left":
        ...
        snake.dir.pre="left"; // &lt;--
        break;
    case "right":
        ... 
        snake.dir.pre="right"; // &lt;--
        break;
    }
</code></pre>

<p>Since the new value is always equal to the <em>switched</em> value, you can take the assignment off the <code>switch</code> and do it afterwards:</p>

<pre><code>snake.dir.pre = snake.dir.current;
</code></pre>

<p>Also note that while your indentation is mostly consistent, the closing <code>brace</code> for this switch is mispositioned.</p></li>
<li><p><code>getBetweenInt</code> treats both <code>min</code> and <code>max</code> as floats by <em>ceiling</em> and <em>flooring</em> them:</p>

<pre><code>min = Math.ceil(min);
max = Math.floor(max);
</code></pre>

<p>But the values you pass in come from <code>canvas.offset.x</code>, <code>canvas.offset.y</code>, <code>canvas.width</code> and <code>canvas.height</code> which are always integer values. So there is no need to do that, you can simply use them directly. </p>

<p>Also the name is a bit odd for me, and i would rename it to <code>getIntBetween</code>.</p></li>
</ul>
    </div>