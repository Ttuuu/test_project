<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My general rule is that if I'm going to need to refer to something more than once, I give it a name, and if not, then I skip the syntactic sugar and just use the expression in place.  This usually makes the code more concise and reduces the burden on the reader of having to keep track of a bunch of different variable names.</p>

<p>Applying that principle to your first example, I'd get rid of not only <code>cel_to_far</code> but also <code>t</code> and <code>result</code>, which would give me:</p>

<pre><code>def temperature() -&gt; None:
    while True:
        try:
            user_in = float(input('Number to convert:&gt; '))
            print(
                'Input: {} degrees Celsius'.format(user_in),
                'is: {} degrees Fahrenheit'.format(9 * user_in / 5 + 32)
            )
            break
        except ValueError:
            print('Enter numbers only!')
</code></pre>

<p>IMO this is a lot more clear because you can see at a glance what's happening to the input without having to trace it through multiple assignments and function calls (maintaining multiple pieces of mental state to be able to execute the code in your head and figure out what it's doing).  </p>

<p>The new version of the <code>print</code> call also shows a preview within the code of exactly what the output will look like, rather than assembling it in reverse order (again, making the reader mentally execute the code in order to visualize the final result).</p>

<p>If you think you might have any other functions that would need to do the same conversion, then of course it makes sense to define a function for it, but you'd do it in the outer scope so that it's actually reusable.</p>
    </div>