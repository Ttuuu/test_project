<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Assuming the input is sorted in ascending order, if <code>a[i] &gt; i</code> then  <code>a[j] &gt; j</code> for any <code>j &gt;= i</code>, because the numbers in the input are supposed to be distinct.</p>
<p>There is also no reason to aggregate all values that satisfy the criterion to eventualy only return the first one. Just return the first one when encountered.</p>
<pre><code>function indexEqualsValue(input)
{
  const limit = input.length
  for (let i = 0; i &lt; limit; ++i) {
    if (input[i] === i) {
        return i
    }
    
    if (input[i] &gt; i) {
        return -1
    }
  }
  
  return -1
}

console.log(indexEqualsValue([0,1,2])) // 0
console.log(indexEqualsValue([1,2,3])) // -1
console.log(indexEqualsValue([-1,1,2])) // 1
</code></pre>
<p>A bit of complexity analysis:</p>
<p>Your solution is O(n) in time and O(k) in space, where n is size of input, and k is number of elements that satisfy the criterion <code>a[i]==i</code>, <code>k &lt;= n</code>.</p>
<p>My solution is O(b) in time, and O(1) in space, where b is number of elements that satisfy a similar criterion: <code>a[i] &lt; i</code>, in words, the number of elements that are less then their index, <code>b &lt;= n</code>. If input does not contain negative numbers, it is O(1) in time (thats actually because in that case the result must be zero, or -1).</p>
<p>PS: Next time, please, take your time to write a good quality question. Succint algorithm definition without any additional information makes up for a very poor question. You're lucky I'm in mood.</p>
    </div>