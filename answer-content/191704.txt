<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>You create a thread but you don't actually run any code on the thread. All or your code runs inside the <code>Platform.runLater</code>. This means all of your code is running on the <code>JavaFX</code> main thread.</p></li>
<li><p>Java developers have already designed for situations where a certain amount of time needs to pass before an action occurs. To do this use <a href="https://docs.oracle.com/javase/8/javafx/api/javafx/animation/PauseTransition.html" rel="nofollow noreferrer"><code>PauseTransition</code></a>.</p></li>
</ol>

<p>In my opinion, the best approach for a question like this is to use <a href="https://docs.oracle.com/javase/8/javafx/api/javafx/animation/PauseTransition.html" rel="nofollow noreferrer"><code>PauseTransition</code></a>. You can go <a href="https://stackoverflow.com/questions/9966136/javafx-periodic-background-task">here</a> to learn how to handle periodic background task in <code>JavaFX</code>. Below is a sample app this demos this approach.</p>

<pre><code>import javafx.animation.PauseTransition;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;
import javafx.util.Duration;

/**
 *
 * @author blj0011
 */
public class JavaFXApplication162 extends Application
{

    @Override
    public void start(Stage primaryStage)
    {
        Button btn = new Button();
        btn.setText("Say 'Hello World'");
        btn.setOnAction((ActionEvent event) -&gt; {
            //Show popup on button press
            btn.setDisable(true);
            StackPane stackPane = new StackPane(new Label("Popup!"));
            Scene popupScene = new Scene(stackPane, 50, 50);
            Stage popupStage = new Stage();
            popupStage.setScene(popupScene);
            popupStage.show();

            PauseTransition wait = new PauseTransition(Duration.seconds(3));
            wait.setOnFinished((e) -&gt; {
                /*YOUR METHOD*/
                popupStage.close();
                btn.setDisable(false);
                wait.playFromStart();
            });
            wait.play();
        });

        StackPane root = new StackPane();
        root.getChildren().add(btn);

        Scene scene = new Scene(root, 300, 250);

        primaryStage.setTitle("Hello World!");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args)
    {
        launch(args);
    }

}
</code></pre>
    </div>