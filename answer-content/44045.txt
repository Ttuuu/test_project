<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>For recursion, you can try adding an @memoize decorator to it, to speed it up. </p>

<pre><code>import functools

def memoize(f):
    cache= {}
    @functools.wraps(f)
    def memf(*x):
        if x not in cache:
            cache[x] = f(*x)
        return cache[x]
    return memf
</code></pre>

<p>Not sure if in your case it will speed up a lot, but if you try with fibonacci, you will see that it vastly speeds up the recursions, since it caches previous results. </p>

<p>This is something that speeds up recursion things in general. For your specific case, we need a bit more info, on what your functions are, and what you want to achieve to get a more specific answer.</p>
    </div>