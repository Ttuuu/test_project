<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The simplest refactoring is as follows:</p>

<pre><code>CONDITIONS = [
    ('WRK_RLTN_DSC', 'INDEPENDENT CONTRACTOR'), 
    ...
]
set2 = [s for s in set2 if s['LEAD_TIME'] &gt;= 0]
for key, excl in CONDITIONS:
    set2 = [s for s in set2 if s[key] != excl]
</code></pre>

<p>Note:</p>

<ol>
<li>You can assign straight back to <code>set2</code>, getting rid of the temporary <code>inScope</code> variable;</li>
<li>I have factored out the multiple checks into a simple loop over a list of keys and values; and</li>
<li>I have consistently used single quotes for string literals, rather than a mix of single and double.</li>
</ol>

<p>However, although neater than your current code, this is still relatively inefficient, as it builds multiple lists; you could instead try something like:</p>

<pre><code>set2 = [s for s in set2 if s['LEAD_TIME'] &gt;= 0 and 
        all(s[key] != excl for key, excl in conditions)]
</code></pre>

<p>which reduces it to a single list comprehension. An alternative would be to incorporate e.g.:</p>

<pre><code>INVALID_WRK = {
    'INDEPENDENT CONTRACTOR',
    ...
}

... s['WRK_RLTN_DSC'] not in INVALID_WRK ...
</code></pre>

<p>as you check that key multiple times.</p>
    </div>