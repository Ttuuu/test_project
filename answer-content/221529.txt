<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Like it was said in the comments, this code needs not a review but just some basic practices. That said, good basic practices are a rare specimen in the wild, so you cannot be blamed, given the number of awful tutorials out there. Luckily I am the renowned collector of good practices and here you are</p>

<h1>Connectivity</h1>

<p>There ate many things that could be improved in your connectivity file. To name a few</p>

<ul>
<li>the connection character set must be configured to avoid issues with characters</li>
<li>the proper error reporting mode for mysqli must be set</li>
<li>the connection error smust be not bluntly echoed out</li>
</ul>

<p>All these issues are covered in my article <a href="https://phpdelusions.net/mysqli/mysqli_connect" rel="nofollow noreferrer">How to connect properly using mysqli</a>: so let's take the code from there:</p>

<pre><code>$host = '127.0.0.1';
$db   = 'webchat_data';
$user = 'root';
$pass = '';
$charset = 'utf8mb4';

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
try {
    $conn = new mysqli($host, $user, $pass, $db);
    $conn-&gt;set_charset($charset);
} catch (\mysqli_sql_exception $e) {
     throw new \mysqli_sql_exception($e-&gt;getMessage(), $e-&gt;getCode());
}
</code></pre>

<h1>Password hashing</h1>

<p>In two words, never store passwords in plain text. Use password_hash() function instead. This topic is thoroughly explained in the question: <a href="https://stackoverflow.com/questions/1581610/how-can-i-store-my-users-passwords-safely">https://stackoverflow.com/questions/1581610/how-can-i-store-my-users-passwords-safely</a> </p>

<h1>Prepared statements</h1>

<p>Just never add a variable to SQL query directly, but mark its place with a question mark instead. Then bind the actual variable and finally call execute()</p>

<p>In detail this matter is explained in this question: <a href="https://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php">https://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php</a></p>

<p>So here is your signup code reviewed</p>

<pre><code>&lt;?php
include 'connectivity.php';

$uname = $_POST['uname'];
$email = $_POST['Email'];
$pass  = password_hash($_POST['Password'], PASSWORD_DEFAULT);

$sql = "INSERT INTO `sign-up`(USERNAME,EMAIL_ID,PASSWORD) VALUES(?,?,?)";
$stmt = $conn-&gt;prepare($sql);
$stmt-&gt;bind_param("sss", $uname,$email,$pass);
$stmt-&gt;execute();

header("Location:index.php");
</code></pre>
    </div>