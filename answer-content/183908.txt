<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A way to read a single line of integers without splitting it into strings:</p>

<pre><code>(defun read-line-of-integers (line &amp;aux (start 0) item (end (length line)))
  (loop while (&lt; start end)
        do (setf (values item start)
                 (parse-integer line :start start :junk-allowed t))
        when (integerp item)
        collect item))
</code></pre>

<p><code>PARSE-INTEGER</code> takes an argument where it should start to read in the string. It also returns two values: the number read and the end in the string where it stopped reading. We can use that in a loop to move forward in the string from one number to another.</p>

<pre><code>CL-USER 33 &gt; (read-line-of-integers " 2 10 3 11    ")
(2 10 3 11)
</code></pre>

<p>Not splitting a <em>line</em> into strings means that the garbage collector has less work.</p>

<p>Another thing to consider for production code: <code>read-line</code> is relatively slow, since it conses a new string for each line. For faster code one needs a version which reads a line directly into a pre-allocated buffer.</p>
    </div>