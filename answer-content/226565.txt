<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your element selectors should be unique. For example, both of these elements contain text 'Capacitor Unit'. Maybe choose an ID or class to select them by. Or match the exact text:</p>

<p>Your comments here is also wrong. It's not selected multiple products (<code>List&lt;WebElement&gt;</code>) it's selecting 1 each:</p>

<pre><code>// Web Element for chosen product(s) - Capacitor Unit
@FindBy(xpath = "//span[contains(text(),\"Capacitor Unit\")]")
WebElement productChoose1;

// Web Element for chosen product(s) - Capacitor Unit SC
@FindBy(xpath = "//span[contains(text(),\"Capacitor Unit SC\")]")
WebElement productChoose2;
</code></pre>

<p><code>TC01_newDesign</code> is a bad name. It only has meaning to you.</p>

<p>You seem to have your own naming styles for variables, classnames, methodnames. As a Java developer I am only use to seeing the standard lower camel case for variables, upper camel case for Classes and uppercase with underscores for static variables. It's very surprising to see any other style used for Java. I strongly suggest adapting standard naming conventions.</p>

<p>I'd be interested in seeing the actual tests. Methods such as <code>choose_productDropDown</code> make it difficult to actually test anything. Why bother logging an error in a test? Fail the test with a message instead (You may want to do it in the actual test, outside of this method, but since you don't return anything how could you?)</p>
    </div>