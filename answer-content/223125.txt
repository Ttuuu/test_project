<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I was about to write an answer almost <em>literally</em> the same as written by KIKO Software (even with the same hyperlinks), so I would only elaborate on it (and somewhat make an answer for the generic question from the question title). </p>

<p>Both <code>queryDatabase()</code> and <code>getResult()</code> functions from the other two answers are too specific. They cut off the PDO's great ability to <a href="https://phpdelusions.net/pdo/fetch_modes" rel="nofollow noreferrer">return the database result in <em>dozens</em> different formats</a>. So instead of returning just a single format, I would make it rather <a href="https://phpdelusions.net/pdo/pdo_wrapper#function" rel="nofollow noreferrer">a generic PDO query function</a> that returns a <code>PDOStatement</code> instance, from which the data could be extracted in any format supported by PDO, so it can be used not only with this particular query but with any query you can think of</p>

<pre><code>function pdo($pdo, $sql, $args = NULL)
{
    if (!$args)
    {
         return $pdo-&gt;query($sql);
    }
    $stmt = $pdo-&gt;prepare($sql);
    $stmt-&gt;execute($args);
    return $stmt;
}
</code></pre>

<p>Examples: </p>

<pre><code>$count = pdo($pdo, "SELECT count(*) FROM users")-&gt;fetchColumn();
$user = pdo($pdo, "SELECT * FROM users")-&gt;fetch(PDO::FETCH_OBJ);
$deleted = pdo($pdo, "DELETE FROM users WHERE id=?", [$id])-&gt;rowCount();
$indexed_by_id = pdo($pdo, "SELECT id, name FROM users")
     -&gt;fetchAll(PDO::FETCH_KEY_PAIR);
</code></pre>

<p>and so on. And of course it would work for your function as well:</p>

<pre><code>return pdo($query, $bindings)-&gt;fetchAll(PDO::FETCH_ASSOC);
</code></pre>

<p>Another issue is <code>global</code>. Using global keyword is considered rather bad practice and could be justified for only most primitive code. but if you want your code solid and maintainable, always pass a database connection as a function parameter into every function that needs a database interaction. It's little verbose, but will pay back in the future. </p>
    </div>