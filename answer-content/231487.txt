<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Optimization tips with <em>benchmark</em> demo tests:</p>

<p>Initial approach <em>"issues"</em>:</p>

<ul>
<li><code>for(let i = 1; res.length &lt; num; i++ )</code>. Instead of calculation the resulting array length <code>res.length</code> on each loop iteration, you can just replace it with <code>i &lt;= num</code></li>
<li><p><code>let res = []; ... res.push() ... res.join()</code>. While the final result should eventually be a string we can declare the result holder as string and perform simple concatenation: </p>

<pre><code>let res = '';
...
for (let i = 1; i &lt;= num; i++ ) { 
    res += (i % 2 ? str1 : str2);
}
</code></pre></li>
</ul>

<hr>

<p>The below approach is a bit more performant, in my opinion (as well as benchmarks shown that), using the mentioned improvements:</p>

<pre><code>function cycle(num) {
    const str1 = 'A', str2 = 'B';
    let res = '';

    for (let i=1; i &lt;= num; i++) { 
        res += (i % 2 ? str1 : str2);
    }
    console.log(res)
}
</code></pre>

<hr>

<p>In prepared benchmarks I've named</p>

<ul>
<li>the initial function (<code>for</code> loop + <code>res</code> array) as <code>cycle1</code></li>
<li>my approach - as <code>cycle2</code> </li>
<li>and the function from previous answer <code>alternateLetters</code> - named accordingly</li>
</ul>

<p>Shared link on <code>http://jsbench.github.io</code>: <a href="http://jsbench.github.io/#be710bc0a4b288e024d5bd67286b1c8c" rel="nofollow noreferrer">http://jsbench.github.io/#be710bc0a4b288e024d5bd67286b1c8c</a></p>

<p>Another benchmark were run on <a href="https://i.stack.imgur.com/cZI57.jpg" rel="nofollow noreferrer">https://jsbench.me/</a> and the results are as below:</p>

<p><a href="https://i.stack.imgur.com/cZI57.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/cZI57.jpg" alt="enter image description here"></a></p>
    </div>