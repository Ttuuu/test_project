<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><code>create_censor_file</code> should really be called <code>create_censored_file</code>.</li>
<li>I'd rename <code>source</code> to <code>source_file</code> for consistency and clarity.</li>
<li>You should use <code>with</code> for both files.</li>
<li>Why not use just <code>w</code> instead of <code>w+</code>?</li>
<li>This is probably one of the few things that regexes are actually useful for. You can just use <code>re.sub(r'(?&lt;=\b\w)\w{' + ','.join(map(lambda x: str(x-2), LENGTHS_TO_CENSOR)) + '}(?=\w\b)', lambda match: CENCOR_CHAR * len(match.group(0)), source.read())</code></li>
</ol>

<p>A couple other things:</p>

<ol>
<li>Good job with the <code>main</code> function and <code>if __name__ == '__main__'</code> check!</li>
<li>I have not yet tested this code.</li>
</ol>

<p>Result:</p>

<pre><code>LENGTHS_TO_CENSOR = {4, 5}
CENSOR_CHAR       = '*'
CENSOR_EXT        = "-censored"

def create_censor_file(filename):       
    with open(filename + CENSOR_EXT, "w") as output_file, open(filename) as source_file:
        output_file.write(
            re.sub(
                r'(?&lt;=\b\w)\w{'
                    + ','.join(map(lambda x: str(x-2), LENGTHS_TO_CENSOR))
                    + '}(?=\w\b)',
                lambda match: CENSOR_CHAR * len(match.group(0)),
                source_file.read()))

def main():
    filename = input("File to be censored: ")
    create_censor_file(filename)

if __name__ == "__main__":
    main()
</code></pre>
    </div>