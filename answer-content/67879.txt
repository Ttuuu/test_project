<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is by no means a full review, but I did notice something. The way you raise errors could use a little work if you're striving for maintainable code. </p>

<blockquote>
<pre><code>   Err.Raise vbObjectError + 1, "Matrix.Add", "Could not Add matrices: the Rows and Columns must be the same. The left matrix is (" &amp; Me.Rows &amp; ", " &amp; Me.Cols &amp; ") and the right matrix is (" &amp; m.Rows &amp; ", " &amp; m.Cols &amp; ")."
</code></pre>
</blockquote>

<p>So, first off, I like that you're correctly adding <code>vbObjectError</code> to the error number. What I don't like is if I want to add a new error, I have to manually look at the whole file to see if I'm reusing one. This is a great use of an <code>Enum</code>. </p>

<pre><code>Public Enum MatrixError
    AdditionError = vbObjectError + 1
    SomeOtherError
    ' ...
End Enum
</code></pre>

<p>The benefits are two fold. </p>

<ol>
<li>It becomes easier to add and use the error number. </li>
<li>The error numbers get exposed to the client code, so if an error gets raised, I can check the <code>Err.Number</code> and handle it appropriately. </li>
</ol>

<p>Something like this:</p>

<pre><code>ErrHandler:
    If Err.Number = AdditionError Then
        ' do something to handle the matrix error
    Else
        ' throw it upstream
        Err.Raise Err.Number
    End If
End Sub
</code></pre>
    </div>