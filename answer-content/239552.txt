<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Hellow <a href="https://codereview.stackexchange.com/users/214636/k-h">K.H.</a> thanks for the answer.
I rewrote the code using Dagger 2 for dependency injection and following your advice. Could you take a look at this code and answer a couple of questions:</p>

<ul>
<li>How to correctly pass name to JsonSharedPreferences (Make a
setter, make a module that will provide name).</li>
<li>Is it correct to select this code as a separate component or more
correctly add these modules to the application component(I use application component to provide context and application)</li>
</ul>

<p>JsonSharedPreferences:</p>

<pre><code>public class JsonSharedPreferences {
    private Gson gson;
    private SharedPreferences settings;

    public JsonSharedPreferences(@NonNull Context context, @NonNull String name, @NonNull Gson gson) {
        SharedPreferences settings = context.getSharedPreferences(name, Context.MODE_PRIVATE);
        this.settings = settings;
        this.gson = gson;
    }

    public &lt;T&gt; T loadObject(@NonNull String key, @NonNull Class&lt;T&gt; classType) {
        String json = settings.getString(key, null);
        return gson.fromJson(json, classType);
    }

    public &lt;T&gt; void saveObject(@NonNull String key, @NonNull T objective) {
        String json = gson.toJson(objective);
        settings.edit().putString(key, json).apply();
    }
}
</code></pre>

<p>JsonSharedPreferencesModule:</p>

<pre><code>@Module
public class JsonSharedPreferencesModule {

    @Provides
    JsonSharedPreferences provideJsonSharedPreferences(Context context, String name, Gson gson) {
        return new JsonSharedPreferences(context, name,gson);
    }

}
</code></pre>

<p>GsonModule:</p>

<pre><code>@Module
public class GsonModule {

    @Provides
    Gson provideGson() {
        return new Gson();
    }

}
</code></pre>
    </div>