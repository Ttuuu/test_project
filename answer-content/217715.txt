<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>parseContent()</code> calls both <code>re.finditer()</code> and <code>re.sub()</code>, which is inefficient, because the <code>re.sub()</code> has to find the insertion point that <code>re.finditer()</code> had already found. What you want is just <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub()</code></a>:</p>

<blockquote>
  <p><em>repl</em> can be a string or a functionâ€¦ If <em>repl</em> is a function, it is called for every non-overlapping occurrence of <em>pattern</em>. The function takes a single <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">match object</a> argument, and returns the replacement string.</p>
</blockquote>

<p>Going further, you should make just one substitution pass that handles both comments and includes. (You didn't show us the <code>removeComments()</code> code, so you'll have to adapt the regex yourself.)</p>

<p>The double-quotes in the regex have no special significance, and do not need to be escaped with backslashes. Also, the dot and the underscore characters do not need to be escaped within a character class.</p>

<pre><code>DIRECTIVE_RE = re.compile(r'(?P&lt;comment&gt;#.*)|(?P&lt;include&gt;(\s)*include+(\s*)"(\s*)(?P&lt;file&gt;[a-zA-Z0-9._/]*)")')

def process_content(self, rdb_file_path, content):
    def directive_handler(match):
        if match.group('comment'):
            return ''
        elif match.group('include'):
            path = os.path.join(rdb_file_path, match.group('file'))
            with open(path) as f:
                return self.process_content(rdb_file_path, f.read())
    return DIRECTIVE_RE.sub(directive_handler, content)
</code></pre>

<p><code>open()</code> should almost always be called using a <code>with</code> block to ensure that the filehandle gets closed automatically.</p>

<p>Note that I have used <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join()</code></a> as a portable alternative to <code>+ "/" +</code>.</p>
    </div>