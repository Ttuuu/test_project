<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Consider creating a type alias for the sizes</h1>
<p>You are writing <code>std::uint_fast16_t</code> everywhere, which is a bit long, and it is chosen only because the LeetCode problem limits the size of the input. If you want to make your algorithm work for larger inputs, you'd have to replace all instances of <code>std::uint_fast16_t</code>. You can create an alias in this case:</p>
<pre><code>using size_type = std::uint_fast16_t;
</code></pre>
<p>And then using that in all other places:</p>
<pre><code>class DisjointSet {
    std::vector&lt;size_type&gt; root;
    size_type size;
    ...
</code></pre>
<p>This way, if you ever want to change the type of size variables, you only have to change it in one place.</p>
<h1>Don't repeat the class name in member functions and variables</h1>
<p>You appended <code>Ds</code> to the names of all member functions in <code>DisjointSet</code>. This is not necessary at all. I recommed you remove it. You have to find some solution for <code>sizeDs()</code> though, because it would clash with the variable <code>size</code>. A common practice is to mark private member variables with the prefix <code>m_</code> or the suffix <code>_</code>, which then allows a public "getter" function with the same name but without the prefix/suffix to be added.</p>
    </div>