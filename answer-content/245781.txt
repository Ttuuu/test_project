<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Bug</strong>: <code>is_numeric("")</code> returns true.</p>
<p><strong>Bug</strong>: <code>is...(negative_values)</code> is UB.  (Aside from <code>is...(EOF)</code>).  Possible when <code>*str &lt; 0</code>.</p>
<p><strong>Bugs</strong>: as reported by <a href="https://codereview.stackexchange.com/a/245756/29485">user3629249</a></p>
<hr>
<ul>
<li><p>Consider allowing hex such as <code>"0xAbC"</code>.</p>
</li>
<li><p>Standard library <em>string</em> functions operate as if <code>char</code> is <em>unsigned</em>, even if <code>char</code> is <em>signed</em>.  Recommend to do the same here.</p>
</li>
</ul>
<blockquote>
<p>What do you think about my way of doing this?</p>
</blockquote>
<p>I like the idea of allowing  of trailing white-space when leading white-space allowed.</p>
<hr>
<pre><code>#include &lt;stdbool.h&gt;
#include &lt;ctype.h&gt;   // missing in OP code.

bool is_numeric_integer(const char *str) {
  const unsigned char *ustr = (const unsigned char *) str;
  while (isspace(*ustr)) {
    ustr++;
  }
    
  if (*ustr == '-' || *ustr == '+') {
    ustr++;
  }

  const unsigned char *begin = ustr;
  while (isdigit(*ustr)) {
    ustr++;
  }
  if (begin == ustr) {
    return false; // no digits.
  }

  // If you want to allow trailing white-space
  while (isspace(*ustr)) {
    ustr++;
  }

  return *ustr == '\0';  // fail with trailing junk
}
</code></pre>
    </div>