<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The simplest thing that comes into my mind is have a hashmap to cache sum of all the elements from position i to the end</p>

<p>for L = [1, 2, 3, 4, 5] the map would look like</p>

<pre><code>Index | sum till end
   0  | 15
   1  | 14
   2  | 12
   3  | 9
   4  | 5
</code></pre>

<p>once you have this you can do something like this</p>

<pre><code>public int sum(int i, int j) {
    return map.get(i) - map.get(j);
}
</code></pre>

<p>for example sum(1,3) is</p>

<pre><code>map.get(1) = 14
map.get(3) = 9
result = 5;
</code></pre>

<p>Here preprocessing reduces the runtime complexity to O(1)</p>
    </div>