<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>  using (SqlConnection sqlConnection = new SqlConnection("Data Source=;Initial Catalog=;Persist Security Info=True;User ID=sa;Password=P@ssw0rd;pooling=true"))
  {
      ...
      }
      finally
      {
          sqlConnection.Close();
      }
  }
</code></pre>
</blockquote>

<p>You're correctly using a <code>using</code> statement for the connection, which will both close and dispose the connection when its scope finishes. So no need to explicit call <code>Close()</code>.</p>

<p>Almost (if not) every database related object implements <code>IDisposable</code> - including <code>SqlCommand</code>, so you should encapsulate that in a <code>using</code> as well.</p>

<p>All in all, your method should look like something like this:</p>

<pre><code>public List&lt;Department&gt; FindAllDepartment()
{
  using (SqlConnection sqlConnection = new SqlConnection("Data Source=;Initial Catalog=;Persist Security Info=True;User ID=sa;Password=P@ssw0rd;pooling=true"))
  {
    sqlConnection.Open();

    using (SqlCommand command = new SqlCommand("SELECT * FROM Employees.dbo.Department", sqlConnection))
    using (SqlDataReader sqlDataReader = command.ExecuteReader())
    {
      List&lt;Department&gt; rows = new List&lt;Department&gt;();
      while (sqlDataReader.Read())
      {
        rows.Add(new Department(sqlDataReader.GetInt32(0), sqlDataReader.GetString(1)));
      }

      return rows;
    }
  }
}
</code></pre>

<p>where the <code>using</code> statements handle the clean up - even if an exception is thrown.</p>
    </div>