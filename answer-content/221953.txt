<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's no need to reinstate the initial value of <code>IFS</code> because there's nowhere for the new value to propogate.  When your script exits, the new value just ceases to exist.  Same goes for the signal handlers.</p>

<p>On that note, why set <code>IFS</code> at all?  I can't see any place that it has an effect.</p>

<p>Prefer <code>[[ … ]]</code> over <code>[ … ]</code> for tests (<a href="https://stackoverflow.com/a/3427931/2570502">detailed explanation</a>).  </p>

<p>When testing for zero, consider an arithmetic test <code>(( … ))</code>: it returns true for non-zero and false for zero, and doesn't require <code>$</code> in front of ordinary variable names (specials like <code>$*</code> or <code>$#</code> still need the dollar sign).</p>

<p>For example, <code>cleanup()</code> might be rewritten:</p>

<pre><code>cleanup() { 
  (( $# )) &amp;&amp; echo "Aborted by $1" &amp;&amp; return
  (( status )) &amp;&amp; echo "Failure (status $status)" &amp;&amp; return $status
  echo "Success"
}
</code></pre>

<hr>

<blockquote>
<pre><code>cd /home/kristjan/gitRepo_May2019/ || { echo "Failed to cd to /home/kristjan/gitRepo_May2019/!!!!!!!!"; exit 155; }
</code></pre>
</blockquote>

<p>This is a common pattern that can benefit from the use of a function:</p>

<pre><code> die()  { echo "$2"; exit $1; }

 cd $dir || die 155 "Failed to cd to $dir" 
</code></pre>

<p>Alternatively, the command's error output is usually good enough:</p>

<pre><code> cd $dir || exit 155 
</code></pre>

<p>Or, since you're checking basically everything for error exit, put  <code>set -e</code> at the top of the script to make any error fatal.</p>

<hr>

<blockquote>
<pre><code>if ! `grep -r up-to-date`
</code></pre>
</blockquote>

<p>Don't use backticks here, recursively grepping STDIN doesn't make any sense, and grep's <code>-w</code> switch is probably appropriate:</p>

<pre><code> if ! grep -w up-to-date
</code></pre>
    </div>