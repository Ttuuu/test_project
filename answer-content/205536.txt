<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The individual steps that you describe in the <em>Problem</em> section are each simple and easy to follow. Yet you write your code in basically a single line. To understand it I had to tear it apart like you did in your "explanation for humans":</p>

<pre><code>scaled = [
    int(int(str(bin), 2)/2.55)+50
        for bin in [
            int(''.join(map(str, num)))
                for num in [
                    l[i : i+8] for i in
                        range(0, len(l), 8)]]]
</code></pre>

<p>I have also reformatted the code to better see the underlying structure. Together with your explanation, this works for understanding it.</p>

<p>But since you chose to not include the explanation within your code, I would have no chance to understand it by reading it alone.</p>

<p>Therefore, I find it easier to understand when you name the intermediate steps:</p>

<pre><code>chunks = [l[i : i+8] for i in range(0, len(l), 8)]
binaries = [int(''.join(map(str, chunk))) for chunk in chunks]
numbers = [int(str(binary), 2) for binary in binaries]
scaled = [round(50 + (150 - 50) * number / (255 - 0)) for number in numbers]
</code></pre>

<p>There is a <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">pythonic shortcut</a> for step 1, and steps 2 and 3 can be combined into one:</p>

<pre><code>chunks = zip(*[iter(l)]*8)
numbers = [sum(bit &lt;&lt; shift for bit, shift in zip(chunk, reversed(range(8))) for chunk in chunks]
scaled = [round(50 + (150 - 50) * number / (255 - 0)) for number in numbers]
</code></pre>

<p>The aim of <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a> is to ensure readable code. Having too many different ideas in a single line of code does not count as readable to me. Therefore I prefer the form with the intermediate steps.</p>

<p>Sure, the broken down version of the code is longer, but the reader of your code can take a deep breath after each step and inspect the intermediate result, just as you did in your explanation. Therefore the code should look this way.</p>

<p>By the way, I replaced the very last <code>int</code> with <code>round</code> since I think it is more appropriate. Decide for yourself. I also replaced the magic number 2.55 with the numbers from your explanation. This makes the numbers less <a href="https://en.wikipedia.org/wiki/Magic_number_%28programming%29" rel="nofollow noreferrer">magic</a>.</p>
    </div>