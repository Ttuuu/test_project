<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As dariosicily said, the complexity can not be improved but there are some <em>really dirty tricks</em> you can do to improve performance by minimizing the number of objects being created... Keep in mind that this optimization is a bit useless if you only have a few thousand files with short names or if the number of files needing renaming is large compared to the total number of files.</p>

<p>Instead of listing all files and creating a File object to represent them and then going through the file names, you can create a <code>FileNameFilter</code> that does the renaming before creating any unnecessary objects.</p>

<pre><code>class RenamingFileNameFilter implements FilenameFilter {
    // Reuse the StringBuilder for each file.
    final StringBuilder newName = new StringBuilder(64);

    @Override
    public boolean accept(File dir, String name) {
        newName.setLength(0);

        // Boolean flag that keeps track if file name changed.
        // Do the replacing manually to avoid a second iteration over
        // the file name to see if renaming is actually needed.
        boolean renameNeeded = false;
        for (int i = 0; i &lt; name.length(); i++) {
            final char ch = name.charAt(i);
            if (ch == ' ') {
                renameNeeded = true;
                ch = '-';
            }
            newName.append(ch);
        }

        // Only create File objects if the file needs renaming.
        if (renameNeeded) {
            File oldFile = new File(dir, name);
            File newFile = new File(dir, newName.toString());
            oldFile.renameTo(newFile);
        }

        return false;
    }
}
</code></pre>

<p>Pass the filter to <code>File.list(FileNameFilter)</code> and the files are renamed. However, <strong>this abuses the FileNameFilter contract by introducing a major side effect to a component that is supposed to be "read only"</strong>, so it will confuse people who maintain the code, unless you document and name it really carefully.</p>

<p>Also, add error checking. :)</p>
    </div>