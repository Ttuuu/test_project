<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can improve the efficiency by reversing the numbers as integers instead of converting to strings and back.</p>

<p>Modifying the list and returning it is redundant since the list is passed by reference and your changes will persist to the original list.</p>

<p>Simplified your code could look like this:</p>

<pre><code>public static void ReverseIntegerList_Array(List&lt;int&gt; intList)
{
    if(intList == null)
    {
        return;
    }
    int limit = intList.Count;
    for(int i = 0; i &lt; limit;++i)
    {
        intList[i] = ReverseNum(intList[i]);
    }
}

public static int ReverseNum(int num)
{
    int retVal = 0;
    while(num &gt; 0)
    {
        retVal = (retVal * 10) + num % 10;
        num /= 10;
    }
    return retVal;
} 
</code></pre>
    </div>