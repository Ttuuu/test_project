<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I have just analyzed your code and here are my analysis-</p>

<p>It's always good to check the boundary condition (<code>x2</code>&gt;<code>x1</code>)or not? but if you read the constraint given in the problem statement
it's clearly defined that <code>x2</code> will be always greater than <code>x1</code>.</p>

<p>I can see you have used two <code>while</code> loops in your code but you can avoid this by using some mathematics.</p>

<p>If you just analyze closely you can see come up with a formula to solve this question directly which would be faster.</p>

<p>Here is the explanation to derive the formula from the problem statement.</p>

<p>As mentioned in the question both kangaroo will meet at the same location at the same time. So the distance covered by kangaroo 1 should be equal to the distance covered by kangaroo 2 which can be calculated as </p>

<pre><code>x1+v1*j=x2+v2*j (using distance =velocity *time (here time is nothing just a jump so using j)).
</code></pre>

<p>Now solve for <code>j</code>.</p>

<pre><code>x1- x2=j(v2-v1)
j=(x1-x2)/(v2-v1)
</code></pre>

<p>As both kangaroos should meet at the same time, the number of the jump should be the same by both of the kangaroo to achieve this. And we know jump will always be an integer value. It can never be a float like 1.2 jumps something like that.</p>

<p>So we have to make sure jump must be an integer value or we can say when we divide (<code>x1</code>-<code>x2</code>) by (<code>v2</code>-<code>v1</code>) it should give the quotient which is an integer value (which is possible only when the remainder is zero).</p>

<p>So calculating </p>

<p><code>remainder= (x1-x2)%(v2-v1)</code> </p>

<p>using the modulo operator instead of division and checking whether it's zero or not.</p>

<p>If it's zero, it means there is some integer number of jumps exist which will bring both kangaroos at the same location at the same time.</p>

<p>But you have to make sure <code>v1</code> which is the velocity of kangaroo 1 must be greater than <code>v2</code> otherwise kangaroo 1 will never be able to catch kangaroo 2. So this is the prerequisite.</p>

<p>Here is the solution -</p>

<pre><code>static String kangaroo(int x1, int v1, int x2, int v2) {

        if (v1 &gt; v2) {

            int remainder = (x1 - x2) % (v2 - v1);

            if (remainder == 0) {
                return "YES";
            }
        }
        return "NO";

    }
</code></pre>

<p>and the detail video explanation can be found <a href="https://youtu.be/52R2pLDjUBw" rel="nofollow noreferrer">here</a>.</p>
    </div>