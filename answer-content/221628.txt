<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>When I first saw the words "phrase scrambler", I thought you would split the phrase into words, not individual characters, and scramble these. I expected your code to solve interesting problems like:</p>

<ul>
<li>If the phrase starts with an uppercase letter and also contains lowercase letters, make sure that the scrambled phrase also starts with an uppercase letter, making the previously first character lowercase.</li>
<li>Do not rip emojis apart.</li>
<li>Split the phrase into words and scramble these.</li>
<li>Split the phrase into words, scramble each word individually, and then scramble the words. (It would be interesting whether it would still be possible for humans to guess the original phrase.)</li>
</ul>

<p>Your current code gets the job done efficiently and is easy to understand. To allow for the above improvements or experiments, you should extract the part that scrambles an array into its own function:</p>

<pre><code>function scramble(arr, rnd) {
    const scrambled = [];
    ...
    return scrambled;
}
</code></pre>

<p>Having this as a separate function means that you can easily test it. For that, you need a <a href="https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript">predictable random number generator</a>. You can then define:</p>

<pre><code>function predictable() {
    return ...; // From the Stack Overflow question linked above
}

function testScramble(str, expected) {
    const actual = scramble(str, predictable);
    if (actual !== expected) {
        console.log('scramble', str, 'is', actual, 'expected', expected);
    }
}

test('hello', 'ohlel');
// TODO: add more test cases
</code></pre>

<p>To make the <code>scramble</code> function faster, you need to know that <em>shuffle</em> is a common synonym, and the standard algorithm for shuffling an array is the <a href="https://en.m.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle" rel="nofollow noreferrer">Fisherâ€“Yates shuffle</a>, which is pretty simple.</p>
    </div>