<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Nice, well-presented code, apart from some spacing inconsistency following <code>for</code>, <code>if</code> etc.</p>

<hr>

<p>I think the <code>Cell</code> constructor should be <code>explicit</code>.  It's odd that it's missing initializers for the timers (I use <code>gcc -Weffc++</code>, so tend to include them even for types that won't end up uninitialized).</p>

<blockquote>
<pre><code>   constexpr auto intervall = 50;
</code></pre>
</blockquote>

<p>would be better named <code>interval</code>.</p>

<hr>

<blockquote>
<pre><code>void Cell::paintEvent(QPaintEvent *event)
{
    Q_UNUSED(event)
</code></pre>
</blockquote>

<p>We could simply leave the argument unnamed instead:</p>

<pre><code>void Cell::paintEvent(QPaintEvent*)
{
</code></pre>

<hr>

<p>Neither <code>cell.cpp</code> nor <code>cellinputhandler.cpp</code> needs <code>&lt;QDebug&gt;</code>.</p>

<hr>

<p>This looks suspect:</p>

<pre><code>auto mouseEvent = static_cast&lt;QMouseEvent*&gt;(event);
auto widget = QApplication::widgetAt(QCursor::pos());
</code></pre>

<p>Why are we not using the event's position here, as we do in <code>handleMouseMoveEvents()</code>?  I don't think we can rely on <code>QCursor::pos()</code> being race-free relative to event delivery.</p>

<hr>

<p>A bit of duplication here:</p>

<blockquote>
<pre><code>if(!(event-&gt;buttons().testFlag(Qt::LeftButton) ||
     event-&gt;buttons().testFlag(Qt::RightButton))) {
    return;
}

if(event-&gt;buttons().testFlag(Qt::LeftButton)) {
    mSingleMouseTimerLeft.start();
}
else if (event-&gt;buttons().testFlag(Qt::RightButton)){
    mSingleMouseTimerRight.start();
}
</code></pre>
</blockquote>

<p>We could combine those into a single conditional:</p>

<pre><code>if (event-&gt;buttons().testFlag(Qt::LeftButton)) {
    mSingleMouseTimerLeft.start();
}
else if (event-&gt;buttons().testFlag(Qt::RightButton)) {
    mSingleMouseTimerRight.start();
}
else {
    return;
}
</code></pre>

<hr>

<p><code>minefield.h</code> has no need to include <code>&lt;vector&gt;</code> (perhaps left over from an earlier version?).</p>
    </div>