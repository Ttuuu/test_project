<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>here is what i meant about the <code>-join</code> operator being the way to go. [<em>grin</em>] you DO need to filter out the blank/null items, but once that is done things work neatly. i included two filters ... the basic <code>$_</code> test just uses the way that "nothing" and "blank" are coerced to booleans. the other uses the builtin <code>[string]::IsNullOrEmpty()</code> static method.   </p>

<pre><code># build some string arays to test with
$1st = 'One', 'Two', 'Three'
$2nd = 'Wun', $Null, 'Tree'
$3rd = '', 'Too', ''
$4th = 'A', 'B', ''

$Separator = '-'

# the leading comma forces the arrays to remain individual arrays instead of merging into one
foreach ($Item in (,$1st + ,$2nd + ,$3rd + ,$4th))
    {
    'Original ...'
    $Item
    'Unfiltered [will glitch with empty items] ...'
    $Item -join $Separator
    'Filtered with basic ".Where()" test ...'
    $Item.Where({$_}) -join $Separator
    'Filtered with explicit test ...'
    $Item.Where({-not [string]::IsNullOrEmpty($_)}) -join $Separator
    '=' * 30
    }
</code></pre>

<p>output ...   </p>

<pre><code>Original ...
One
Two
Three
Unfiltered [will glitch with empty items] ...
One-Two-Three
Filtered with basic ".Where()" test ...
One-Two-Three
Filtered with explicit test ...
One-Two-Three
==============================
Original ...
Wun
Tree
Unfiltered [will glitch with empty items] ...
Wun--Tree
Filtered with basic ".Where()" test ...
Wun-Tree
Filtered with explicit test ...
Wun-Tree
==============================
Original ...

Too

Unfiltered [will glitch with empty items] ...
-Too-
Filtered with basic ".Where()" test ...
Too
Filtered with explicit test ...
Too
==============================
Original ...
A
B

Unfiltered [will glitch with empty items] ...
A-B-
Filtered with basic ".Where()" test ...
A-B
Filtered with explicit test ...
A-B
==============================
</code></pre>
    </div>