<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here are some ideas to try:</p>

<ol>
<li><p>You are not closing your <code>PreparedStatement</code>s.  There might possibly be some slow down due to resource consumption or deadlock.  Use the try-with-resources feature so it will automatically close.</p>

<pre><code>for (AgentUpdate update : updateList) {
    try (PreparedStatement ps = connection.prepareStatement(sql.toString())
    {
        // set parameters
        ps.executeUpdate();
    }
}
</code></pre></li>
<li><p>Alternatively, you are creating a custom query and creating a new <code>PreparedStatement</code> for each record.  Although you are optimizing individual queries by minimizing the number of fields you are updating, you are creating additional overhead by preparing a new statements for each record.  If you update every field for every row, you could re-use the same <code>PreparedStatement</code>, which may end up being more efficient (depending on the number of fields and length of data you are actually updating).  Just overwrite the values in the prepared statement and redo the <code>executeUpdate()</code> on it.</p>

<pre><code>try (PreparedStatement ps = connection.prepareStatement(sql.toString())) {
    for (AgentUpdate update : updateList) {
        // set parameters
        ps.executeUpdate();
    }
}
</code></pre></li>
</ol>
    </div>