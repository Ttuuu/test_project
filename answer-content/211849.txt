<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The most critical part is that this code is not a class. It's a function. A function just written in a form of a class method but it's a function all the same. Ok, it is using distinct methods to get the response and the code, but that's not enough to become a class. For this purpose you can make a function to return an array, like this</p>
<pre><code>return ['response' =&gt; $response, 'code' =&gt; $code];
</code></pre>
<p>and no class would be ever needed.</p>
<p>I even have a feeling that this class is a direct attempt to convert a function into a class. But you really have to decompose this function into different  methods.</p>
<h3>Duplicated code</h3>
<p>Suppose you are going to implement the GET method. Are you going to <strong>duplicate</strong> all this curl_init stuff in it? Come on, classes are written to reduce the duplication, not to multiply it. So you have to make a protected common execution method that would contain all the code common for all requests.</p>
<h3>Constructor</h3>
<p>Then remove from the function body that code to initialize curl, as it looks being a rudiment from the time when this class was a function, but now it looks alien here. This is <em>the</em> code that goes into constructor.</p>
<h3>Configuration</h3>
<p>Notice these 2 lines commented out</p>
<pre><code>    // curl_setopt($this-&gt;handle, CURLOPT_SSL_VERIFYPEER, true);
    // curl_setopt($this-&gt;handle, CURLOPT_SSL_VERIFYHOST, 0);
</code></pre>
<p>suppose you are going to comment and uncomment them when required. This is not how classes are used. Move these lines in a distinct method and call it when you have to bypass the SSL verification.</p>
<h3>Method chaining</h3>
<p>Given there could be several methods called in consequence, consider returning <code>$this</code> from methods. It will allow you to use the neat practice called "method chaining":</p>
<pre><code>$request = new HttpRequest();
$body = $request-&gt;setHeaders($headers)
    -&gt;setNoSSLverification()
    -&gt;post($url, $post_body)
    -&gt;getResponse();
</code></pre>
    </div>