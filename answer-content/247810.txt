<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You loop over the database when it isn't necessary:</p>
<pre><code>    if f'{enter_login}.txt' in database:
        for file in database:
            if f'{enter_login}.txt' == file:
                enter_password = input('Enter password: ')
                file = open(f"C:\\Users\\filip\\PycharmProjects\\database\\{file}", 'r')
                if enter_password == file.read():
                    print('WELCOME!')
                else:
                    print('Invalid password\n\n')
                    login_func()
    else:
        print('Invalid username\n\n')
        login_func()
</code></pre>
<p>can become:</p>
<pre><code>    if f'{enter_login}.txt' in database:
        enter_password = input('Enter password: ')
        file = open(f"C:\\Users\\filip\\PycharmProjects\\database\\{enter_login}.txt", 'r')
        if enter_password == file.read():
            print('WELCOME!')
        else:
            print('Invalid password\n\n')
            login_func()
    else:
        print('Invalid username\n\n')
        login_func()
</code></pre>
<p>The way you had it would probably only get slow if you have hundreds or thousands of users, but it's good to be aware of when you're doing unnecessary work.</p>
<p>I also recommend using <code>pathlib</code> instead of manually manipulating strings that represent file paths.</p>
<p>Here's what that would look like: (incorporating Carcigenicate's answer)</p>
<pre><code>from pathlib import Path
from getpass import getpass 

credentials = []
DATABASE_PATH = Path("C:\\Users\\filip\\PycharmProjects\\database")

def get_user_file(username):
    return DATABASE_PATH / f'{username}.txt'


def initialize():
    while True:
        choose_option = input('0. Exit\n1. Login\n2. Sign up\n\nOption: ')
        if choose_option == '1':
            login_func()
            return
        elif choose_option == '2':
            username = get_username()
            password = get_password()

            add_credentials_to_database(username, password)
        elif choose_option == '0':
            exit('Exiting...')
            return
        else:
            print("You should enter '0', '1', or '2'.")
        

def get_username():
    while True:
        username = input('Enter username: ')
        if get_user_file(username).exists():
            print('Username already exists')
        elif len(username) &gt;= 8:
            return username
        else:
            print('Username too short (min 8 characters)\n\n')


def get_password():
    while True:
        password = getpass('Enter password: ')
        if len(password) &gt;= 8:
            confirm_password = getpass('Confirm password: ')
            if password == confirm_password:
                return password
            else:
                print('Password does not match with confirmation\n\n')
        else:
            print('Password too short (min 8 characters)\n\n')
    

def add_credentials_to_database(username, password):
    get_user_file(username).write_text(password)
    print('Account created successfully\n\n')


def login_func():
    while True:
        login = get_user_file(input('Enter username: '))
        if login.exists():
            enter_password = getpass('Enter password: ')
            if enter_password == login.read_text():
                print('WELCOME!')
                return
            else:
                print('Invalid password\n\n')
        else:
            print('Invalid username\n\n')


if __name__ == '__main__':
    initialize()
</code></pre>
    </div>