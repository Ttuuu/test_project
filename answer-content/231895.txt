<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In my opinion/experience and research on Python documentation, I suggest improving the following approaches:</p>

<p><strong>First</strong>, <code>namedtuple</code> must be used with an uppercase name, like a class.</p>

<pre><code>Textual_Node = namedtuple('Textual_Node', ['id', 'label', 'type'])
</code></pre>

<p>This helps determine the operation of creating a new data class object. <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="noreferrer">namedtuple() Python doc</a></p>

<p><strong>Second</strong>, try to combine all related to one data functions into classes.</p>

<p>For example, all functions which use <code>root</code> in attrs can be combined to one, and after improvements uses self and them attr <code>root</code>. It can look like:</p>

<pre><code>class ClassName():
    def __init__(self, root):
        self.root

    def get_caption(self):
        do_somethink_with_root(self.root)
        ...
</code></pre>

<p><strong>Third</strong>, take a one-line indent for individual blocks of related code.</p>

<p><strong>Fourth</strong>, to save information about scripts execution use <a href="https://docs.python.org/3/library/logging.html" rel="noreferrer"><code>logging</code> module</a>.</p>

<p>P.S.: <em>Please, try to use linters for your code. For example, it may be a <code>pylint</code> or <code>flake8</code> for making more pythonic code style and <code>Pydocstyle</code> will do more <a href="https://www.python.org/dev/peps/pep-0008/" rel="noreferrer">understandable code</a> and <a href="https://www.python.org/dev/peps/pep-0257/" rel="noreferrer">docstrings</a>. As <a href="https://github.com/google/styleguide/blob/gh-pages/pyguide.md" rel="noreferrer">asks Google for the Python code style</a>, use only English in the documentation lines.</em></p>
    </div>