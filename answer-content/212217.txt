<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>PSR 2</h2>

<p>Psr2 is a code standard for php use it, most ides have good integration to auto-reformat your code <a href="https://www.php-fig.org/psr/psr-2/" rel="nofollow noreferrer">read about it here</a></p>

<h2>Generally</h2>

<p>Wrapping libraries for databases is a bad idea, how do I start a transaction in your class ? </p>

<p>@Yourcommonsense will im sure provide a link for his website demonstrating why this is a bad idea.</p>

<h2>Return early &amp;&amp; Use Constants</h2>

<p>There is no point having long statements that cause the indentation level to be excessive, </p>

<p>Use constants for random strings because they mean nothing to anybody but you, with a good name (my names probably aren't good because I dont know that mean) it can speak a million words,</p>

<p>For example </p>

<pre><code>private const INT_PARAM_STRING = "i";
private const FLOAT_PARAM_STRING = "d";
private const STRING_PARAM_STRING = "s";
private const DEFAULT_PARAM_STRING = "b";

private function buildStatement(string $sql, ...$params) : mysqli_stmt
{
    if (empty($params)) {
        throw new \Exception("Empty params", 1);
    }

    $statement = $this-&gt;connection-&gt;prepare($sql);

    if ($statement == false) {
        throw new mysqli_sql_exception('Failed to prepare mysqli_stmt: ' . $this-&gt;connection-&gt;error);
    }

    $types = '';

    foreach ($params as $param) {
        $types .= $this-&gt;getParamType($param);
    }

    $statement-&gt;bind_param($types, ...$params);

    return $statement;
}

private function getParamType($param) :string
{
    if (is_int($param)) {
        return MySQLiConnection::INT_PARAM_STRING;
    } elseif (is_float($param)) {
        return MySQLiConnection::FLOAT_PARAM_STRING;
    } elseif (is_string($param)) {
        return MySQLiConnection::STRING_PARAM_STRING;
    }

    return DEFAULT_PARAM_STRING;
}
</code></pre>
    </div>