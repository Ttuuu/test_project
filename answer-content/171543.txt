<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Firstly, "sub-string" is different than "word". I think "word" is more appropriate in this situation. (A substring can contain non-alphabetical characters).</p>

<pre><code>import sys
</code></pre>

<p>You never use this. Get rid of it.</p>

<pre><code>list1 = sentence.split()
</code></pre>

<p>This assignment is not terribly necessary.</p>

<p>Your algorithm can be simplified considerably. I think this should be left as an exercise, but here are some things you shouldn't have to do in the new algorithm:</p>

<ol>
<li>Don't make a copy of the list.</li>
<li>Have some sort of <code>best</code> variable and <code>best_count</code> integer that stores the longest even word found and the length of that word.</li>
<li>After looping through the sentnce, return <code>best</code>.</li>
</ol>

<p>Using this algorithm you only hit each word once instead of going through the even words again as you do in your algorithm.</p>

<p><a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">The PEP8 style guide</a> states that Python functions use <code>snake_case</code> instead of <code>camelCase</code> so: <code>longestEvenWord -&gt; longest_even_word</code>.</p>
    </div>