<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One option is to modify your <code>TemplateView</code> class to include the peak's name  as an instance attribute (say <code>peak_name</code>) and make the <code>get_context_data</code> method make use of it:</p>
<pre><code>class  TemplateView():
    # Class attributes

    def __init__(self, peak_name):
        # Instance attributes
        # ...
        self.peak_name = peak_name

    # Class methods

    # Modification of the get_context_data method
    def get_context_data(self, **kwargs):
        context['Peak'] = PeakForecast.objects.filter(
            name_of_peak=self.peak_name).order_by('date')  #&lt;- Modification here
        print(context['Peak'])
        return context
</code></pre>
<p>And then you can generate your peak views as instances of that class:</p>
<pre><code>krivan_view = TemplateView('Krivan')
krivan_view.get_context_data(arg1='arg1', arg2='arg2')
</code></pre>
    </div>