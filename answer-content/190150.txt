<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In the area of robustness - I would put your error handling into an <code>Enum</code> and have a <a href="https://github.com/RaymondWise/VBA-Custom-Error-Handler" rel="nofollow noreferrer">custom error</a> handling routine. Like this -</p>

<pre><code>Public Enum CustomError
    NotNumberOrRange = vbObjectError + 42
    CellEmpty = vbObjectError + 43
    NotNumeric = vbObjectError + 44
    MoreThanOneCell = vbObjectError + 45
    UnknownGetDouble = vbObjectError + 46
    NoneBelowCap = vbObjectError + 47
End Enum

Public Sub CustomErrorHandler(Err As Object)
    Select Case Err.Number
        Case CustomError.NotNumberOrRange
            MsgBox "Not a number or range", vbExclamation

        Case CustomError.CellEmpty
            MsgBox "Cell is empty", vbExclamation

        Case CustomError.NotNumeric
            MsgBox "Cell contains a non-numeric value", vbExclamation

        Case CustomError.MoreThanOneCell
            MsgBox "More than one cell", vbExclamation

        Case CustomError.UnknownGetDouble
            MsgBox "Unknown error in GetDoubleFromVariant", vbExclamation

        Case CustomError.NoneBelowCap
            MsgBox "No values below cap", vbExclamation

        Case Else
            MsgBox "Unexpected Error: " &amp; Err.Number &amp; "- " &amp; Err.Description, vbCritical
    End Select
End Sub
</code></pre>

<p>In this example, all the errors are message box errors, but that may not be completely applicable to your situation here.</p>

<p>Now you can move all the error handling out of the main functions</p>

<pre><code>On Error GoTo CleanFail:

If min &gt;= threshold Then Err.Raise CustomError.NoneBelowCap

CleanExit:
    Exit Sub

CleanFail:
    CustomErrorHandler Err
    Resume CleanExit
</code></pre>

<p>You can consolidate all those different error handlers into one main handler using your new error function and enum. And you won't need to remember what error number is what error.</p>

<hr>

<p>Your arguments being able to be brought up with <kbd>Ctrl</kbd> +<kbd>Shift</kbd>+ <kbd>a</kbd> is about the best you can do for tooltips, but a lot of users don't know about that AND it has to be erased. So that's totally up to you. I like the idea of closely matching default argument parameters when creating a UDF close to a built-in function.</p>
    </div>