<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you only modify a copy of the second string, the first one should be a <code>const</code> reference:</p>

<pre><code>bool IsAnagram(const std::string &amp;str1, std::string str2)
</code></pre>

<p>Also, <code>i</code> and <code>j</code> should be of type <code>size_t</code> to match what they're compared with.</p>

<p>However, I think I'd do it like this:</p>

<pre><code>bool IsAnagram2(std::string str1, std::string str2)
{
    std::sort(str1.begin(), str1.end());
    std::sort(str2.begin(), str2.end());
    return str1==str2;
}
</code></pre>

<h2>Test program:</h2>

<pre><code>#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;algorithm&gt;

#define SHOW(x) std::cout &lt;&lt; # x " = " &lt;&lt; x &lt;&lt; '\n'

int main()
{
    std::cout &lt;&lt; std::boolalpha;
    SHOW(IsAnagram("\0\0\0\0\0", "\0lehl")); 
    SHOW(IsAnagram("hello", "")); 
    SHOW(IsAnagram("\0\0\0\0\0", "olehl")); 
    SHOW(IsAnagram("hello", "ole")); 
    SHOW(IsAnagram("hello", "plehl")); 
    SHOW(IsAnagram("hello", "hello")); 
    SHOW(IsAnagram("hello", "12345")); 
    SHOW(IsAnagram("hello", "Hello"));
    SHOW(IsAnagram("hello", "oellh"));
    SHOW(IsAnagram("hello", "olelh"));
    SHOW(IsAnagram("hello", "elelh"));
}
</code></pre>

<h2>Program output</h2>

<pre><code>IsAnagram("\0\0\0\0\0", "\0lehl") = true
IsAnagram("hello", "") = false
IsAnagram("\0\0\0\0\0", "olehl") = false
IsAnagram("hello", "ole") = false
IsAnagram("hello", "plehl") = false
IsAnagram("hello", "hello") = true
IsAnagram("hello", "12345") = false
IsAnagram("hello", "Hello") = false
IsAnagram("hello", "oellh") = true
IsAnagram("hello", "olelh") = true
IsAnagram("hello", "elelh") = false
</code></pre>
    </div>