<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Make use of the standard library</h1>

<p>This looks like a job for <a href="https://en.cppreference.com/w/cpp/algorithm/transform" rel="nofollow noreferrer"><code>std::transform()</code></a>, which in many other languages would be the equivalent of the map function. It works on iterators, so it would help if your class provides <code>begin()</code> and <code>end()</code> functions, or if internally you store values in a <code>std::vector</code>. However, the <code>data</code> pointer can be used as well.</p>

<p>Then, it's possible to write your operators like so:</p>

<pre><code>#include &lt;algorithm&gt;

IntMatrix IntMatrix::operator&lt;(int num) const {
    IntMatrix result(width(), height()); // assuming this creates a matrix with the same dimensions
    const auto count = width() * height();
    std::transform(data, data + count, result.data,
                   [num](int value){return value &lt; num;});
    return result;
}
</code></pre>

<p>With this, there is no need to write your own <code>filter()</code> function.</p>
    </div>