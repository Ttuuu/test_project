<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Welcome to Code Review. A few basic pointers about programming in python:</p>

<ol>
<li>Go through the code style guide as documented <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">in PEP-8</a>.</li>
<li>Instead of putting comments, make use <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer">of docstrings</a>.</li>
<li>Use <a href="https://devdocs.io/python~3.6/library/unittest" rel="nofollow noreferrer">test framework</a> for writing a few tests, and use <code>assert</code>s instead of <code>print()</code> for checks and validations.</li>
</ol>

<hr>

<p>From the PEP-8 rules:</p>

<ul>
<li>Convert the comment about Luhn's algortihm into a docstring.</li>
<li>Variables and functions are named using <code>snake_case</code> convention.</li>
<li>No unnecessary blank lines are needed. Keep the code clean and concise.</li>
</ul>

<hr>

<p>Your <code>main</code> function can be broken further, into <code>get_provider</code>, <code>valid_card_number</code> and the one your already have <code>check_number</code>. It is completely your choice if you want to raise an exception in case of wrong inputs or whether the functions should return falsy values.</p>

<p>Instead of having an approximately 10 line of code inside if-statement, deal with the else clause first, and return early.</p>

<p>While you didn't actually write the <code>check_number</code> code, I'll just put my views about that as well here.</p>

<p>Using a list comprehension, with the help of <code>% 9</code> (\$ \mod 9 \$), you can make it quite pythonic. You can then have a <code>sum(&lt;list comprehension&gt;) % 10 == 0</code> as a one-liner.</p>

<pre><code>sum(digit * 2 % 9 if i % 2 else digit for i, digit in enumerate(map(int, cc_number[::-1]))) % 10 == 0
</code></pre>
    </div>