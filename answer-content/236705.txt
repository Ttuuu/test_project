<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>main</code>:</p>

<ul>
<li><p>If the program fails to run correctly, we should exit with an error code, instead of returning <code>0</code>. It might be nice to print a message saying what went wrong (to <code>std::cerr</code>). We can also avoid magic numbers and use <code>EXIT_FAILURE</code> and <code>EXIT_SUCCESS</code> from the <code>&lt;cstdlib&gt;</code> header.</p></li>
<li><p><code>node root = seedTree(input, output), child;</code> Please don't declare variables like this. It's much cleaner to put one variable declaration per line.</p></li>
<li><p>We should try to minimize variable scope. It looks like the <code>child</code> variable can be declared inside the inner while loop.</p></li>
<li><p><code>int value, nodes = root.height + 1;</code> Again, one variable declaration per line please.</p></li>
</ul>

<p><code>seedTree</code>:</p>

<ul>
<li><p>Is there a reason we need a separate function for the first two nodes? I feel like <code>insertValue</code> should probably be able to handle these as well.</p></li>
<li><p>We can avoid one level of extra indent and reduce the complexity by returning early if we fail to read a root value:  <code>if (!input) return root;</code></p></li>
</ul>

<p><code>insertValue</code>:</p>

<ul>
<li><p>The <code>if</code> branches inside the loop are almost identical. We should be able to factor them into a function.</p></li>
<li><p>It might be simpler to should call the rebalancing function from inside <code>insertValue</code>.</p></li>
</ul>

<p>rebalancing:</p>

<ul>
<li>You should be able to abstract out two functions: <code>leftRotate</code> and <code>rightRotate</code> that can be used to handle all the cases.</li>
</ul>

<p>performance:</p>

<ul>
<li>Since you're constructing the tree on disk (disk I/O is slow), and rebalancing with every inserted node (because it's an AVL) it's going to be slow. I wouldn't worry about it.</li>
</ul>
    </div>