<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The best method to solve this problem is to take XOR of every element in the array. This method does not require any additional space and the time complexity is O(N).</p>

<p>Edit : The solution works based on 2 XOR properties:</p>

<ol>
<li>a^a = 0 (XOR of 2 same number is always 0).</li>
<li>a^0 = a (XOR of a number with 0 is the number itself).</li>
</ol>

<p>So all the couples having same number will result 0 when applying XOR operator. This 0 when applied to the single number will output the single number.</p>

<p>In your solution, you have used extra space which can be avoided.</p>

<pre><code>    private static int getAloneNum (int[] arr) {
         int result = 0;
         for(int i = 0; i &lt; arr.length; ++i)
              result ^= arr[i];
         return result;
    }
</code></pre>
    </div>