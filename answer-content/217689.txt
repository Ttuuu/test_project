<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>not exhaustive but some feedback.
There are some big "No No"s in this code as well as some minor formatting things.</p>

<p>First the big "No No"s.  </p>

<p>1) Do not use list comprehension unless you plan do use the result:
<code>[links_to_map.append(i) for i in Page(base_url,url).links()]</code>
Do this in a normal <code>for</code> loop.</p>

<p>2) <strong>DO NOT</strong> change a list you are iterating over (i.e. <code>links_to_map</code> in your lest method).</p>

<p><strong>Other stuff:</strong><br>
<code>return</code> statements don't need <code>()</code>:</p>

<blockquote>
  <p><code>return (bs.BeautifulSoup(sauce,'lxml'))</code> </p>
</blockquote>

<p>Should just be:<br>
<code>return bs.BeautifulSoup(sauce,'lxml')</code></p>

<p>Avoid needless <code>()</code> as well:</p>

<blockquote>
  <p><code>(map_pages.update(Page(base_url,url).map_page())</code></p>
</blockquote>

<p>to:<br>
<code>map_pages.update(Page(base_url,url).map_page()</code></p>

<p>Empty lists are considered <code>False</code> so:</p>

<blockquote>
  <p><code>while links_to_map != []:</code></p>
</blockquote>

<p>can just be:<br>
<code>while links_to_map:</code></p>

<p>My last tip. Consider using a <code>set</code> for <code>links_to_map</code> instead of a <code>list</code> since the removing step will be significantly faster.</p>
    </div>