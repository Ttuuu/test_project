<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Adding to the other answers: These function declarations</p>

<pre><code>int foo();
int bar() { }
</code></pre>

<p>do <em>not</em> declare a prototype for foo respectively bar. In consequence, this is a legal implementation of foo:</p>

<pre><code>int foo(int a) { }
</code></pre>

<p>And this is a likely illegal call to bar, however the compiler can't warn:</p>

<pre><code>bar(42);
</code></pre>

<p>To provide a prototype, add void inside the parenthesis to make it a parameter-list (instead of the C89 identifier list) and all of the above would yield compile time errors:</p>

<pre><code>int foo(void);
int bar(void) {}
</code></pre>

<p>This is due to Cs history of K&amp;R style function declarations and definitions:</p>

<pre><code>int foo();

int foo(a)
int a;
{
   /* do something */
}
</code></pre>

<p>Compatibility is great, but I don't think you should go lower than C99 if not explicitly needed, especially if it lessens the likelihood of severe bugs ;)</p>
    </div>