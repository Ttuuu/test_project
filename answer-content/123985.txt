<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<pre><code>body { overflow: hidden; }
</code></pre>

<p>You should really never hide overflow on content-based elements. People with small browsers may not see the full content, rendering the site useless to them. <code>overflow: auto</code> is a much better alternative because scrollbars will only be shown if there is overflow. You can tune this even more with <code>overflow-X</code>, <code>overflow-Y</code>.</p>

<hr>

<p>Using purely <code>px</code> based sizing creates very small text when people have large displays. People who browse on a TV will likely find the page to have tiny text and large side margins.</p>

<pre><code>footer {
  position: absolute;
  bottom: 0;
  left: 0;
}
</code></pre>

<p>Using absolute positioning on block elements can cause portions of the content to get obscured. To counter this you can add <code>padding</code> or <code>margin</code> to the bottom of the body element.</p>

<hr>

<p>You have odd indentation throughout the entire code. It's better to set a set style for readability.</p>

<p>For instance, instead of this:</p>

<pre><code>h1 {
  line-height: 48px;
  margin: 24px 0;

  color: #fff;
  text-shadow: hsl(15, 84%, 10%) 1px 1px, hsl(15, 84%, 10%) 2px 2px, hsl(15,             84%, 10%) 3px 3px, hsl(15, 84%, 10%) 4px 4px;
    text-transform: uppercase;
    text-align: center;
    white-space: nowrap;
  }
</code></pre>

<p>This:</p>

<pre><code>h1 {
  line-height: 48px;
  margin: 24px 0;

  color: #fff;
  text-shadow: hsl(15, 84%, 10%) 1px 1px,
               hsl(15, 84%, 10%) 2px 2px,
               hsl(15, 84%, 10%) 3px 3px,
               hsl(15, 84%, 10%) 4px 4px;
  text-transform: uppercase;
  text-align: center;
  white-space: nowrap;
}
</code></pre>

<hr>

<blockquote>
  <p>I'm not sure whether my use of the units is correct.</p>
</blockquote>

<p>This looks pretty good. Here is information regarding use of units:</p>

<p><strong><code>px</code></strong> is the pixels relative to pixel density. The pixel density can affect the size of a pixel with</p>

<pre><code>&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
</code></pre>

<p>where initial scale is the amount that the pixel density affects the size of a pixel.</p>

<p><strong>Meta tags go in the head element.</strong></p>

<p><strong><code>em</code></strong> is the measure of one font size on the element, therefore if an element has <code>font-size: 16px</code> one <code>em</code> is 16px. <code>Em</code> is relative to the parent element as well so <code>font-size: 1.5em</code> is 1.5 times the parent's font size.</p>

<p><strong><code>rem</code></strong> is the measure of one <code>:root</code> element font size. If <code>:root { font-size: 16px }</code> then most elements will base their font size off of a 6px multiplier. Some people use <code>calc()</code> in their <code>:root</code> font size to create a scaling font. This can be done like:</p>

<pre><code>:root { font-size: calc(.5em + .5vw) }
</code></pre>

<p>which means that the root font size will be .5 of the browsers default font size plus .5% of the viewport width.</p>

<p><strong><code>em</code> and <code>rem</code> are usable on more than just the <code>font-size</code> property.</strong></p>

<p><strong><code>%</code></strong> is a percentage of that parent's measurement for the tag. If the parent has <code>width: 50px</code> and the child has width 50% the child's width will calculate to 25px.</p>

<hr>

<p>Other units you might need are <code>vw</code>, <code>vh</code>, <code>vmin</code>, <code>vmax</code>. These are scaling units, always relative to the viewport's size. These are helpful for scaling elements so that they always fit in the browser window. These values can be negative or greater than 100.</p>

<ul>
<li><p><strong><code>vw</code></strong> is 1% of the viewport's width. If the viewport is 500px wide then <code>1vw</code> is 5px, <code>2vw</code> is 10px and <code>7vw</code> is 35px.</p></li>
<li><p><strong><code>vh</code></strong> is 1% of the viewport's height. If the viewport is 243px then <code>1vh</code> is 2.43px.</p></li>
<li><p><strong><code>vmin</code></strong> is 1% of the smaller viewport side's length. If the viewport is 624px wide and 437px tall then <code>1vmin</code> is 4.73px.</p></li>
<li><p><strong><code>vmax</code></strong> is 1% of the larger viewport side's length. If the viewport is 1242px wide and 804px tall then <code>1vmax</code> is 12.42px.</p></li>
</ul>
    </div>