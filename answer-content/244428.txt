<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Instead of writing a nested <code>for</code> loop, directly write it as a list comprehension. In addition, you can start the second loop at the value of the outer variable in order to remove some double counting. This reduces the numbers to iterate over from 9801 to 4950, by a factor two, since you don't have both e.g. 2 * 6 and 6 * 2. However, some values still appear more than once (since e.g. 12 is 2 * 6, but also 3 * 4 and 1 * 12), so you still need a set comprehension:</p>
<pre><code>limit = 100
fact = {a * b for a in range(1, limit) for b in range(a, limit)
        if all(i % factor == 0 for factor in input_factors)}
</code></pre>
<p>Note that I directly used <code>i % factor</code> in the loop in <code>all</code>. No need to involve an addition list comprehension to iterate over.</p>
<p>You should also just count the results, don't append them to a list if you only care about its length:</p>
<pre><code>return sum(1 for f in fact if all(test % f == 0 for test in test_numbers))
</code></pre>
    </div>