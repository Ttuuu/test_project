<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>This is what I did:</p>

<pre><code>public static boolean isPrime(int n) {

        if((n &gt; 2 &amp;&amp; n % 2 == 0) || n == 1) {
            return false;
        }

        for (int i = 3; i &lt;= (int)Math.sqrt(n); i += 2) {

            if (n % i == 0) {
                return false;
            }
        }

        return true;
    }
</code></pre>

<p>In the first if test, I put the <code>(n &gt; 2 &amp;&amp; n % 2 == 0)</code>first, because I think that would short-circuit the <code>||</code> and that evaluation will come more often than <code>n == 1</code> so it should skip that and become true a little bit faster than doing it the other way around.</p>

<p>Also, like Tom pointed out in the accepted answer, you start countin at 3, in order to remove the addition of 1 to the square root, I had to use <code>i &lt;= (int)Math.sqrt(n)</code> otherwise it blows up, I don't know why.</p>

<p>I tested my code with the first 10 thousand primes and it seems ok as I get 104,729 as the 10,000th number, which is correct, it gets the result in 1.324 seconds, which I'm not sure if it's fast or not.</p>

<p>Note: </p>

<p>As ferhan pointed out, with the accepted answer it says that 1 is a prime number, which is not. But with the suggestion from LeTex, I get a weird result and not the correct answer.</p>
    </div>