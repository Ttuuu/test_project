<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I know that this was posted more than 2.5 years ago and you likely have learned a fair amount about JavaScript and/or jQuery in that time. Still this question hasn't had any answers (at the time of writing) so I would like to take out this <a href="https://codereview.meta.stackexchange.com/a/1511/120114">zombie</a>.</p>

<h2>Your Questions</h2>

<blockquote>
  <p>I used the defer attribute in my script tag and put it in the head. Is that acceptable? Is there a better way?</p>
</blockquote>

<p>I believe that is acceptable, however there are other ways to have the code executed after certain events have occurred. For example, one could use <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener" rel="nofollow noreferrer"><code>event.addEventListener()</code></a> to trigger a function call after events occur, like <a href="https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded" rel="nofollow noreferrer"><em>DOMContentLoaded</em></a>.</p>

<p>As walter memtioned in <a href="https://stackoverflow.com/a/196718/1575353">this SO answer</a> "-The Yahoo! Exceptional Performance team recommend <a href="http://developer.yahoo.com/performance/rules.html#js_bottom" rel="nofollow noreferrer">placing scripts at the bottom of your page</a> because of the way browsers download components._" so one can consider putting the <code>&lt;script&gt;</code> tag in the <code>&lt;body&gt;</code> tag instead of the <code>&lt;head&gt;</code>.</p>

<blockquote>
  <p>Setting intervals/timeouts still confounds me. How would you create a small interval between each number line printing, such that they print out sequentially and in an animated manner.</p>
</blockquote>

<p>Yes, using <code>setTimeout()</code> would be a good way to achieve such a feature. a function that calls that function, passing a function to execute after a set amount of time could call the outer function until all elements have been printed, or similarly with <code>setInterval()</code> and <code>clearInterval()</code>.</p>

<h2>Review feedback</h2>

<p>Overall I like the layout of the view. The code is organized well for the most part. There are a few recommendations I have, listed below.</p>

<hr>

<p>The collection of <code>&lt;div&gt;</code> elements with class name <code>number-container</code> is stored in <code>fizzContainer</code> at the start of the script: </p>

<blockquote>
<pre><code>var fizzContainer = $("div.number-container");
</code></pre>
</blockquote>

<p>This is great, because whenever that collection is needed later, it can be utilize by that variable name. Sadly, I don't see that name utilized anywhere after it is assigned, thus the assignment seems superfluous... You could utilize that to replace the line below, in the resize callback:</p>

<blockquote>
<pre><code>$(".number-container").replaceWith("&lt;div class='number-container'&gt;&lt;/div&gt;");
</code></pre>
</blockquote>

<p>With a call to <a href="https://api.jquery.com/html" rel="nofollow noreferrer"><code>.html()</code></a>:</p>

<pre><code>fizzContainer.html('');
</code></pre>

<p>Assigning DOM collections to variables in the beginning could minimize DOM lookups for other collections, e.g. <code>$('h1')</code>, <code>$(".number-container")</code>.</p>

<hr>

<p>In that resize function I see the following:</p>

<blockquote>
<pre><code>$(window).resize(function(){
  windowWidth = window.innerWidth;
  calculateHeading(windowWidth);
</code></pre>
</blockquote>

<p>It appears that <code>calculateHeading()</code> accepts the window width as a parameter, whereas all other functions just utilize the global variables. Why not use one tactic or the other?</p>

<p>I also noticed that in the codepen code three spaces are used for indentation in that resize callback function, while the code posted above uses two spaces.</p>

<hr>

<p>If performance was an issue, I would recommend adding the columns after the contents have been added, and potentially adding the columns after all have been generated, so as to minimize <a href="https://developers.google.com/speed/docs/insights/browser-reflow" rel="nofollow noreferrer">reflows</a>.</p>
    </div>