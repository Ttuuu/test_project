<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Remove the async method call from the constructor, and make the async method return the instance (<code>this</code>):</p>
<pre><code>class Player {
  constructor(user_id, socket, connection) {
    this.socket = socket;
    this.connection = connection;
  }

  async loadUser() {
    let _self = this;
    return new Promise((resolve, reject) =&gt; {
      _self.connection.query(`SELECT * FROM users WHERE id = ${this.user_id}`, (err, res) =&gt; {
        this.user = res[0];
        resolve(this)
      });
    })
  }
}
</code></pre>
<p>Then you can instantiate a <code>new Player</code> and wait for it to load the necessary data from the database, all in one line, like this:</p>
<pre><code>const player = await new Player(user_id, socket, connection).loadUser();
</code></pre>
<p>Or like this:</p>
<pre><code>new Player(user_id, socket, connection).loadUser().then(player =&gt; {

});
</code></pre>
    </div>