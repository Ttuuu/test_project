<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Feedback</h2>
<p>The code looks good so far. There appears to be good separation between the model, the view and the controller. I like how the model methods are concise - none more than 4 lines. The controller method <code>_save_data()</code> is a little on the lengthy side but hopefully the feedback below and in the answer by <a href="https://codereview.stackexchange.com/users/24464/tomanow">Tomanow</a> will allow you to improve that method.</p>
<h2>Suggestions</h2>
<h3>Regular expression</h3>
<p>I agree with <a href="https://codereview.stackexchange.com/a/131198/120114">Tomanow's answer</a> (except that you might not need to worry about stripping the pre-text, presuming that the pattern matching only matches country codes and names). A regular expression can be used in <code>_save_data()</code> to match each relevant row, and using a <a href="http://php.net/manual/en/function.preg-match.php#example-5685" rel="nofollow noreferrer">named sub-pattern</a>, the <em>code</em> and <em>name</em> of each country can be selected:</p>
<pre><code>$pattern = '/^'.                             //beginning of line
    '(?P&lt;country_code&gt;[A-Za-z]{2,4})'.       // named sub-pattern for code: 2-4 alpha chars
    '\s{3}'.                                 //3 whitespace characters
    '(?P&lt;country_name&gt;[A-Za-z()\s\.,\'-]+)'. // named sub-pattern for name
    '$/';                                    //end of line
</code></pre>
<p>If that pattern matches any rows, <code>$matches['code']</code> will have the country code and <code>$matches['name']</code> will have the country name. In theory, <code>$matches</code> could be sent to the <code>insert_entry()</code> model method, though that might be a weird design to accept the fields to insert directly (and the numeric indexes might need to be removed).</p>
<p>In theory the logic involving <code>$startLine</code> and <code>$endLine</code> can be removed by simply checking of the pattern matches.</p>
<pre><code>$lines = file('http://pastebin.com/raw.php?i=943PQQ0n');
$pattern = '/^(?P&lt;country_code&gt;[A-Za-z]{2,4})\s{3}(?P&lt;country_name&gt;[A-Za-z()\s\.,\'-]+)$/';

// Loop through our array, show HTML source as HTML source; and line numbers too.
foreach ($lines as $line_num =&gt; $line) {
    preg_match($pattern, $line, $matches);
    if (count($matches)) {
        $count = $this-&gt;country_model-&gt;count_by_code($matches['country_code']);
        if (!$count) {
            $this-&gt;country_model-&gt;insert_entry($matches['country_code'], $matches['country_name']);
        }
    }
}
</code></pre>
<p><a href="https://www.tehplayground.com/j5k3fZ0unjrXsJ2V" rel="nofollow noreferrer">See a demonstration of the matching here in this playground example</a>.</p>
<h3>Useless variable <code>$lineNo</code></h3>
<p>In your method <code>_save_data()</code> there is a variable <code>$lineNo</code> that gets incremented each time. If you needed the count of each line, the variable <code>$line_num</code> (from the <code>foreach</code> statement) could be used instead (and added 1 to)...</p>
<pre><code>foreach ($lines as $line_num =&gt; $line) {
    $lineNo++;
</code></pre>
    </div>