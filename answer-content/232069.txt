<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let's separate it by responsibilities into renderKids, renderName, traverseTree so that:</p>

<ol>
<li>the main function can start explicitly from where you want</li>
<li>functions become immutable, free of side-effects</li>
<li>less repeated code</li>
<li>a single <code>return</code> is used</li>
<li>hopefully, the intent and flow become more obvious</li>
</ol>

<pre><code>function renderTree(json) {

  function renderKids(kids) {
    const ul = document.createElement('ul');
    for (const kid of kids) {
      ul.appendChild(traverseTree(kid))
    }
    return ul;
  }

  function renderName(name) {
    const span = document.createElement('span');
    span.textContent = name;
    return span;
  }

  function traverseTree(node) {
    const li = document.createElement('li');
    if (node.kids) {
      li.appendChild(renderName(node.name));
      li.appendChild(renderKids(node.kids));
    } else {
      li.textContent = node.name;
    }
    return li;
  }

  return renderKids(json.kids || []);
}
</code></pre>

<p>Usage: <code>const output = renderTree(await readJson('./tree.json'))</code></p>

<p>Note, <code>traverseTree</code> is not asynchronous so there's no need for <code>async</code> keyword.</p>
    </div>