<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code>def validateIP(ip):
</code></pre>
</blockquote>

<p>I would expect a name starting <code>is</code> (a useful hint that it returns a Boolean rather than some more complex validation data structure) and explicitly mentioning IP v4 (since the current name is misleading). E.g. <code>is_valid_IPv4_address</code>.</p>

<hr>

<blockquote>
<pre><code>  #split them by '.' , and store them in an array
  #check the array if the length is 4 length
  arr = ip.split('.')
  if len(arr) != 4:
    return False
</code></pre>
</blockquote>

<p>The comments don't tell me anything which the code doesn't already. In general, good comments explain why, not what.</p>

<hr>

<blockquote>
<pre><code>  #0 check for special edge cases when non-digit
  #1. check if they are digit, 
  #2. check if check the integer is between 0 and 255

  for part in arr:
    .. various conditions which return False
  return True
</code></pre>
</blockquote>

<p>IMO it would be more Pythonic to use <code>all</code>: I would boil the whole function down to</p>

<pre><code>    parts = ip.split('.')
    return len(parts) == 4 and all(is_valid_IPv4_address_part(part) for part in parts)
</code></pre>

<hr>

<blockquote>
<pre><code>    if len(part) &gt; 1:
      if part[0] == '0':
        return False
</code></pre>
</blockquote>

<p>This isn't in the spec. It's a reasonable constraint, but you should check with the person who gave you the spec before writing the code, or at least put in a comment saying that you're making an assumption about the true intentions of the specifier.</p>

<hr>

<blockquote>
<pre><code>    if not part.isdigit():
      return False
</code></pre>
</blockquote>

<p>This is buggy. (Before testing I thought there was an issue which should be bounced back to the specifier. Upon testing, I found that some of my test cases caused <code>validateIP</code> to throw an exception).</p>

<p>What is the expected output for these test cases?</p>

<pre><code>¹.¹.¹.¹
١.١.١.١
𝟣.𝟣.𝟣.𝟣
①.①.①.①
</code></pre>
    </div>