<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can transpose the given list of lists using a single line:</p>
<pre><code>zip(*table_data)
</code></pre>
<p>That's it. Now, to find the longest word in each column, it would be another 1-liner:</p>
<pre><code>map(len, [max(_, key=len) for _ in table_data])
</code></pre>
<hr>
<p>You are calculating <code>len(table_data)</code> a lot of times. Better to store it as a variable? Although, another comprehension could be:</p>
<pre><code>for row in zip(*table_data):
    for index, cell in enumerate(row):
        print(cell.rjust(col_width[index]), end=" ")
</code></pre>
<hr>
<p>You whole function now becomes:</p>
<pre><code>from typing import List
def print_table(table_data: List):
    col_width = list(map(len, [max(_, key=len) for _ in table_data]))
    for row in zip(*table_data):
        for index, cell in enumerate(row):
            print(cell.rjust(col_width[index]), end=" ")
        print()
</code></pre>
    </div>