<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p><code>SizeType</code> looks like a misnomer. It feels more like <code>ValueType</code>. As a side note, consider making it a <code>template &lt;typename ValueType&gt; struct SkipList</code>.</p>
</li>
<li><p>Testing for <code>heads == nullptr</code> in <code>search</code> is redundant. The loop will take care of it immediately.</p>
</li>
<li><p>For DRY I recommend a helper method, akin to <code>std::lower_bound</code>, to be used in all interface methods (i.e. <code>search</code>, <code>add</code>, and <code>erase</code>). Yes it requires a very careful design of an iterator.</p>
</li>
<li><p><code>add</code> may benefit from <code>Node::Node(val, next, down)</code> constructor.</p>
</li>
<li><p>No naked loops, please.</p>
<p>The <code>for (SizeType layer = 0; layer &lt;= std::size(path); ++layer)</code> loop particularly deserves to be a method on its own. Its intention is to promote a freshly inserted node, so <code>promote_added_node</code> looks like a good name.</p>
</li>
</ul>
    </div>