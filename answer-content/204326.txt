<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Using a <code>StringBuffer</code> for building the new string is good,
but the variable name <code>str1</code> is non-descriptive.</p>

<p>The computation of the required array length can be shortened 
with the conditional operator:</p>

<pre><code>int n = len % 2 == 0 ? len : len - 1;
</code></pre>

<p>Instead of swapping the array elements you can append them to the
string buffer in opposite order:</p>

<pre><code>for (int i = 0; i &lt;= n - 2; i = i + 2) {
    str1 = str1.append(arr[i+1]).append(arr[i]);
}
</code></pre>

<p>(and the re-assignment to <code>str1</code> is not necessary).</p>

<p>And now one sees that the intermediate array is not needed at all: 
You can append the swapped characters directly from the original string:</p>

<pre><code>static String swapPairs(String str) {
    int len = str.length(); 
    StringBuffer swapped = new StringBuffer(len);
    for (int i = 0; i &lt; len - 1 ; i += 2) {
        swapped.append(str.charAt(i + 1));
        swapped.append(str.charAt(i));
    }
    if (len % 2 != 0) {
        swapped.append(str.charAt(len - 1));
    }
    return swapped.toString();
}
</code></pre>
    </div>