<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>It appears that you are allocating <code>BLOCK_SIZE</code> bytes for each item in the queue, whereas they can be at most <code>MAX_LEN</code> bytes long, am I reading this correctly? And MAX_LEN is 256, where BLOCK_SIZE is 1024, so you are only using at most 25% of the allocated memory.</p>

<p>Another thing is that malloc() has a minimum block size, which is <a href="http://prog21.dadgum.com/179.html" rel="nofollow noreferrer">32 bytes for dlmalloc</a>. Assuming you are on a 64 bit platform, your <code>queue_element_t</code> is <code>2*sizeof(void *) = 16</code> bytes. Therefore you are also loosing 16 bytes per element. You can avoid this by allocating the <code>queue_element_t</code> along with its buffer in one go:</p>

<pre><code>#define BLOCK_SIZE (256 - sizeof(void *))
typedef struct {
  void *next;
  char data[BLOCK_SIZE];
} queue_element_t;
</code></pre>

<p>Then queue_element_t will be nicely allocated to a 256 byte bloc and no memory will be wasted in overhead.</p>
    </div>