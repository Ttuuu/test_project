<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your test code may cover all the main code, but it has a huge drawback. It won't fail if you make a programming mistake in the main code.</p>

<p>Instead of printing the values from the list, you should rather <code>assert</code> that they are exactly what you expect.</p>

<p>Instead of writing the boring <code>if (status != GEN_LIST_NO_ERR)</code> each time again, you should extract that code into a separate function.</p>

<p>In the type <code>GenListError</code> you are mixing programming errors and runtime errors. I would rather fail fast on any programming mistake and <code>abort()</code> the program. This is the nicest variant of <em>undefined behavior</em> that you can give to the users of your code since it forces them to fix their mistakes early and well.</p>

<p>If you include programming mistakes in the API of your generic list, it will bloat the caller's code since it has to check whether the call succeeded, failed expectedly ("no match") or was aborted by a programming error. If the caller checks only for success or failure, programming errors might silently be interpreted as either of these, which would have unpredictable consequences.</p>
    </div>