<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your code looks very structured and nicely written, but to my understanding, your solution is not "clean architecture" (CA) as described by uncle bob. Your solution is an MVC solution.</p>

<p>In clean architecture you can (for example):</p>

<ul>
<li>easily replace express with another framework</li>
<li>easily replace mongo with another DB</li>
</ul>

<p>In your case the framework is embedded into your logic, you can see that the controller is using res to output the JSON outside. so replacing the framework will require a rewrite.</p>

<p>Another example is that you have no clear boundaries between all the application layers.
It can be easily seen that all your imports are from express =&gt; to logic =&gt; to database and back and that's not using dependency inversion. In CA you have entities layer which is the higher layer and all other layers import the entities as a dependency and it is the communication protocol between all layers.</p>

<p>Other things:</p>

<p>Where is the exception handling
Where is the validation handling
Where are the multiple ways to output your data (XML, JSON, CSV)</p>

<p>I think you managed to reach a working <strong>positive</strong> solution (which I think is not extensible for all future cases):</p>

<ol>
<li>Because you don't have all the required functionality in place (positive and negative).</li>
<li>You don't have unit tests to prove that you are testable</li>
<li>You didn't process your output, there are many HTTP Responses that your presenter needs to handle, but so far you created some basic functionality, so it works.</li>
<li>Where the complexity (as number of API will grow, and when the complexity of the logic will grow) you will start feeling the pain of extensibility.</li>
</ol>
    </div>