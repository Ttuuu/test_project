<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can make the usage of the <code>ReaderWriteLockSlim</code> a little bit nicer and get rid of the try/catch block with two disposable helpers:</p>

<pre><code>public class ReaderLockSlim : IDisposable
{
    private readonly ReaderWriterLockSlim _lockSlim;

    public ReaderLockSlim(ReaderWriterLockSlim lockSlim) 
    { 
        _lockSlim = lockSlim; 
        _lockSlim.EnterReadLock();
    }

    public void Dispose()
    {
        _lockSlim.ExitReadLock();
    }
}

public class WriterLockSlim : IDisposable
{
    private readonly ReaderWriterLockSlim _lockSlim;

    public WriterLockSlim(ReaderWriterLockSlim lockSlim)
    {
        _lockSlim = lockSlim;
        _lockSlim.EnterWriteLock();
    }

    public void Dispose()
    {
        _lockSlim.ExitWriteLock();
    }
}
</code></pre>

<hr>

<p><strong>Example</strong></p>

<p>before:</p>

<blockquote>
<pre><code>public IEnumerable&lt;T&gt; Latest()
{
    slimLock.EnterReadLock();
    try
    {
        return FetchItems().ToArray();
    }
    finally
    {
        slimLock.ExitReadLock();
    }
}
</code></pre>
</blockquote>

<p>after:</p>

<pre><code>public IEnumerable&lt;T&gt; Latest()
{
    using (new ReaderLockSlim(slimLock)) 
    {
        return FetchItems().ToArray();
    }
}
</code></pre>
    </div>