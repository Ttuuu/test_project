<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<pre><code> #!/bin/bash
</code></pre>
</blockquote>

<p>Why not plain <code>/bin/sh</code>?  I don't see any non-POSIX shell constructs in there.</p>

<blockquote>
<pre><code>sort | uniq
</code></pre>
</blockquote>

<p>We could replace with <code>sort -u</code> (that's a standard option).</p>

<blockquote>
<pre><code>     echo "Found pending blacklist on ${bad_gpu}"
     exit 1
</code></pre>
</blockquote>

<p>That message should go to standard error stream: <code>&gt;&amp;2</code>.  The same <em>may</em> be true of the other informational messages.</p>

<blockquote>
<pre><code> for bad_gpu in "{$bad_gpus}"; do
</code></pre>
</blockquote>

<p>Really?  <code>"{$bad_gpus}"</code> is a single token; I think you meant <code>$bad_gpus</code> there.  Especially as we then expand <code>$bad_gpu</code> unquoted in the next line.</p>

<blockquote>
<pre><code>grep Pending| grep Yes &gt; /dev/null 2&gt;&amp;1
</code></pre>
</blockquote>

<p>If <code>Pending</code> and <code>Yes</code> always occur in the same order, we could simplify to a single command (and we don't need the redirection):</p>

<pre><code>grep -q 'Pending.*Yes'
</code></pre>

<blockquote>
<pre><code>   if [ $? -eq 0 ]; then
</code></pre>
</blockquote>

<p>That's an antipattern - it's a sign that you need to move the preceding statement into the <code>if</code>:</p>

<pre><code>if nvidia-smi -i "$bad_gpu" ...
then
</code></pre>
    </div>