<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I agree with slallum that you ought to just use lists from the start, but I would also note that this is not how you test for a list:</p>

<pre><code>if type(self.table[val]) == list:
</code></pre>

<p>In general <code>type(var) == type</code> is discouraged, because it wont accept inheritance. The most obvious example is that a <code>DefaultDict</code> is a special type of dictionary. It has some extra functionality but mostly is the same as a regular dictionary. Yet if you tried this test, you would be told that they're different types. The way to compare type directly is to use the function <code>isinstance</code>. Which will test if a variable is an instance of a type, or any type that inherits from it:</p>

<pre><code>if isinstance(self.table[val], list):
</code></pre>

<p>But generally, it's more Pythonic to test something based on whether or not it can do what you need. For instance, you might want to attempt to append to the value, and if it cannot take an append then it must not be a list and you should instead create one. Like so:</p>

<pre><code>try:
    self.table[val].append(key)
except AttributeError:
    self.table[val] = [self.table[val], key]
</code></pre>

<p>This will attempt to append to the list, but if it cannot that means that it's not a list and will instantiate one there.</p>
    </div>