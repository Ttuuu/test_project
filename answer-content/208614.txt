<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Using string concatenation for creating file paths opens you up to a whole lot of headache. Should you use <code>/</code>, <code>//</code>, <code>\</code> or <code>\\</code>? The answer depends on the environment you are running in. Luckily, the <code>Path</code> class can do all this logic for us:</p>

<p>Instead of</p>

<pre><code>path + "//screenshot-" + fileCount + ".jpeg";
</code></pre>

<p>you could do</p>

<pre><code>Path.Combine(path, $"screenshot-{fileCount}.jpeg");
</code></pre>

<p>and instead of</p>

<pre><code>outputPath+"//video.avi"
Path.Combine(outputPath, "video.avi")
</code></pre>

<p>This way you don't have to worry about using the right fileseparator.</p>
    </div>