<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>If by functional mean arrow functions, then this is the solution i came up with</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;meta charset="UTF-8"/&gt;
&lt;input type="file" id="files" name="files" accept=".json"/&gt;
&lt;output id="list"&gt;&lt;/output&gt;
&lt;div id="traveler_num"&gt;&lt;/div&gt;
&lt;div id="first_name"&gt;&lt;/div&gt;

&lt;script&gt;
    (function () {
        const fileReader = new FileReader();
        const travelerNumElement = document.getElementById('traveler_num');
        const firstNameElement = document.getElementById('first_name');

        this.writeInfo = (data) =&gt; {
            travelerNumElement.innerHTML = 'Traveler: ' + data.traveler_num;
            firstNameElement.innerHTML = 'First Name: ' + data.first_name;
        }

        this.handleFileSelect = (event) =&gt; fileReader.readAsText(event.target.files[0]);

        fileReader.onload = (event) =&gt; this.writeInfo(JSON.parse(event.target.result));

        document.getElementById('files').addEventListener('change', handleFileSelect, false);
    })();
&lt;/script&gt;
</code></pre>

<p>Always wrap things in <code>(function() { //code here })</code> when you are using ES5, because it prevents the global scope of being bloated with unnecessary variables.</p>

<p>You can change the <code>const</code> to <code>this</code> and write <code>this</code> everywhere in the scope, but it gets a bit ugly, so that's why i didn't do it.</p>

<p>And lastly, don't use abbreviations, imagine if someone else has to read the code, and the person can't see where the variable is defined, then <code>fr</code> could just as well be <code>flightRadar</code></p>
    </div>