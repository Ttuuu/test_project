<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Personally, I would do this kind of thing line by line. I don't like the idea of putting my entire file into memory, then overwriting it. What if something goes wrong in between? Basically I don't trust myself to write good code!</p>

<p>So, looping through line by line, I would write to a new file with any changes. In Python, you can open two files at once, which is perfect for reading from one and writing to another. </p>

<p>Applying PEP8 for naming, you'd end up with something like this:</p>

<pre class="lang-py prettyprint-override"><code>def file_search_replace(open_file, search, replacement):

    with open(open_file, 'r') as read_file, open('new_file.txt', 'w+') as write_file:

        for line in read_file:
            write_file.write(line.replace(search, replacement))

</code></pre>

<p>I've changed a few of the names, notably <code>replace</code> to <code>replacement</code> so it's clear it's not the same as <code>replace()</code>.</p>

<p>Finally, if you're happy with the result, you can easily rename the file to something else. Personally I'd keep the old one just in case.</p>
    </div>