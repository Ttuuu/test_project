<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You can combine the tests that you've written with the documentation of your function by writing them in the form of code examples as part of the docstring. They can be automatically executed and evaluated by the <a href="https://docs.python.org/2/library/doctest.html" rel="nofollow">doctest</a> module.</p>

<p>So this</p>

<pre><code>def startsWithArticle(str):
    '''Return True if the first word of str is "The", "A" or "An"'''
    # implementation omitted

print('"A boy" returned', startsWithArticle("A boy"))
print('"An apple" returned', startsWithArticle("An apple"))
print('"The cat" returned', startsWithArticle("The cat"))
print('"Abyss" returned', startsWithArticle("Abyss"))
print('"There" returned', startsWithArticle("There"))
print('"Ant" returned', startsWithArticle("Ant"))
</code></pre>

<p>becomes</p>

<pre><code>def startsWithArticle(str):
    '''Return True if the first word of str is "The", "A" or "An"

    &gt;&gt;&gt; startsWithArticle("A boy")
    True
    &gt;&gt;&gt; startsWithArticle("An apple")
    True
    &gt;&gt;&gt; startsWithArticle("The cat")
    True
    &gt;&gt;&gt; startsWithArticle("Abyss")
    False
    &gt;&gt;&gt; startsWithArticle("There")
    False
    &gt;&gt;&gt; startsWithArticle("Ant")
    False
    '''
    # implementation omitted
</code></pre>

<p>To execute the tests, run the following from the command line:</p>

<pre><code>$ python -m doctest name_of_your_python_file.py
</code></pre>

<p>This technique has the benefit that a user of the function sees the code examples when invoking <code>help(startsWithArticle)</code>, and the desired behaviour gets verified automatically (in contrast to your original version, where you simply printed the results of different function calls and had to check <em>manually</em> whether they are correct).    </p>
    </div>