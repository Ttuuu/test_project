<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <a href="https://en.wikipedia.org/wiki/Euclidean_algorithm" rel="nofollow noreferrer">Euclidean algorithm</a> is a well-known
and efficient method to compute the greatest common divisor of two integers.</p>

<p>Compared to your approach, the Euclidean algorithm is faster, less code, and
does not require additional storage.</p>

<p>Using for example </p>

<pre><code>// https://rosettacode.org/wiki/Greatest_common_divisor#Iterative_Euclid.27s_Algorithm
public static int gcd(int a, int b) {
    while (b &gt; 0) {
        int c = a % b;
        a = b;
        b = c;
    }
    return a;
}
</code></pre>

<p>reducing the fraction simplifies to</p>

<pre><code>int degrees = Integer.parseInt(dRead.readLine());
int commonDivisor = gcd(degrees, 180);
int numerator = degrees / commonDivisor;
int denominator = 180 / commonDivisor;
</code></pre>
    </div>