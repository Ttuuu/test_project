<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>1) Code from <a href="https://repl.it/@sixxta/Award-Budget-Cuts" rel="nofollow noreferrer">https://repl.it/@sixxta/Award-Budget-Cuts</a> suggests you could sort array in descending order and keep decreasing maximum single grant until there is no overspending. I don't know if you version, starting with smallest value, works correctly.</p>

<p>2) for cases:  </p>

<pre><code>{14,15,16,17,18,19}, 97
{14,15,16,17,18,19}, 98
{14,15,16,17,18,19}, 99
</code></pre>

<p>your code returns:</p>

<pre><code>17.33
17.66
18.5
</code></pre>

<p>While the proper answer is:</p>

<pre><code>17
18
19
</code></pre>

<p>3) the algorithm is optimal in terms of time and space, unless the is some way to remove sorting that I am not aware of.</p>

<p>4) you are looking for exact solution, using floating point variables isn't a good idea</p>

<pre><code> if( avg == (int)newBudget)
    return (newBudget)/len;
</code></pre>

<p>This check doesn't make any sense. You probably wanted to compare with <code>newBudget/len</code> but even then you would return <code>2</code> for <code>{1,2,3},6</code> when right answer is <code>3</code>.</p>
    </div>