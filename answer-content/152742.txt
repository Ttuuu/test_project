<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strike>The multidimensional array might be the weakness of the C# implementation. Try using jagged arrays that are faster though not so easy to use.</strike></p>

<p>You can read more about it in <a href="https://stackoverflow.com/a/597790/235671">What are the differences between a multidimensional array and an array of arrays in C#?</a> on SO. This answer compares both array systems.</p>

<p>EDIT: I've tested it myself and the difference is barely measureable. It looks like they have fixed it already.</p>

<hr>

<blockquote>
<pre><code>var t1 = DateTime.Now;
var path = FindPath(start, end, CellFilter);
var t2 = DateTime.Now;
</code></pre>
</blockquote>

<p>You shouldn't measure the time with <code>DateTime</code>. Use the <code>Stopwatch</code></p>

<pre><code>var sw = Stopwatch.StartNew();
var path = FindPath(start, end, CellFilter);
sw.Stop();

Console.WriteLine($"path finding took {sw.Elapsed}");
</code></pre>

<p>Also make sure you run the test in realease mode and outside of Visual Studio if you want to achieve maximum performance.</p>

<hr>

<p>To find less <em>obvious</em> bottlenecks in the C# version you should use the profiler. </p>
    </div>