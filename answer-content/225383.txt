<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <a href="https://codereview.stackexchange.com/a/225137/120114">answer by suspectus</a> covers DI, type declarations and documentation well. There are a few other aspects I noticed, covered in the sections below.</p>

<h3>Avoiding <code>else</code> when possible</h3>

<p>Most of the methods aren't too long, though <code>user_register()</code> is a bit on the long side. There isn't really a need to have the <code>else</code> keyword, since the <code>if</code> block before it has a <code>return</code> statement. </p>

<p>In <a href="https://www.youtube.com/watch?v=GtB5DAfOWMQ" rel="nofollow noreferrer">this presentation about cleaning up code</a>  Rafael Dohms talks about limiting the indentation level to one per method and avoiding the <code>else</code> keyword. (<a href="https://www.slideshare.net/rdohms/bettercode-phpbenelux212alternate/11-OC_1Only_one_indentation_level" rel="nofollow noreferrer">see the slides here</a>). For instance, in the <code>user_login()</code> method, the <code>else</code> could be avoided if the logic to <code>return false</code> came first... something like:</p>

<pre><code>if ($rowCount &lt; 1) { 
    return false;
} //implicit else
$test = password_verify($password, $row['upass']);
if (password_verify($password, $row['upass'])) {
    $_SESSION['uid'] = $row['id'];
    $_SESSION['email'] = $row['uemail'];
    $_SESSION['fname'] = $row['fname'];
    $_SESSION['lname'] = $row['lname'];
    $_SESSION['logged_in'] = date("Y-m-d H:ia");
    header("Location: index.php");
}
</code></pre>

<hr>

<h3>Methods accessing instance variables/properties</h3>

<p>I noticed that the methods <code>get_fname()</code> and <code>get_lname()</code> utilize <code>$user_data</code> which is not a local variable but instead an instance variable. I believe that would work in Java but not PHP. It should utilize <code>$this-&gt;user_data</code> to work properly in PHP. </p>

<pre><code>//get first name
public function get_fname($uid)
{
    return $this-&gt;user_data['fname'];
}

public function get_lname($uid)
{
    return $this-&gt;user_data['lname'];
}
</code></pre>

<hr>

<h2>Simplifying boolean logic</h2>

<p>The method <code>check_login()</code> can be simplified from:</p>

<blockquote>
<pre><code>public function check_login()
{
    if (isset($_SESSION['logged_in'])) {
        return true;
    } else {
        return false;
    }
}
</code></pre>
</blockquote>

<p>To just return the condition:</p>

<pre><code>public function check_login()
{
    return isset($_SESSION['logged_in']);
}
</code></pre>

<p>This is because <a href="https://www.php.net/isset" rel="nofollow noreferrer"><code>isset()</code></a> returns a <a href="https://www.php.net/bool" rel="nofollow noreferrer"><code>bool</code></a></p>
    </div>