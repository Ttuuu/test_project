<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Some of these are not performance improvements but are improvements nonetheless.</p>

<h2>Brewery constructor</h2>

<pre><code>def __init__(self, _brewery, beer, distance=0, visited=False):
    self.beer = beer
    self.id = _brewery[0]
    self.name = _brewery[1]
    self.longitude = _brewery[2]
    self.latitude = _brewery[3]
    self.distance_to_home = distance
    self.visited = visited
...
    breweries_list.append(Brewery(breweries[i], beers[i]))
</code></pre>

<p>is problematic, particularly around the assumptions that <code>_brewery</code> makes. Unpack it elsewhere, i.e.</p>

<pre><code>def __init__(
    self, 
    brewery_id: int, 
    name: str,
    longitude: float,
    latitude: float,
    beers: Sequence[str],
    distance: float=0, 
    visited: bool=False,
):
    self.brewery_id, self.name, self.longitude, self.latitude, self.beers, self.distance, self.visited = (
        brewery_id, name, longitude, latitude, beers, distance, visited,
    )
...
    breweries_list.append(Brewery(
        *breweries[i],
        beers=beers[i],
    ))
</code></pre>

<p>Other things to note:</p>

<ul>
<li>Use type hints</li>
<li>Do not use <code>id</code> as that shadows a built-in</li>
<li>I'm unclear on why you don't just store <code>beers</code> as a tuple on <code>brewery</code>. You can do away with <code>merge_breweries_with_beers</code> altogether and just include the beer tuples in your main brewery database.</li>
</ul>

<h2>Database</h2>

<p>Store it in a JSON file, not hard-coded into the source.</p>
    </div>