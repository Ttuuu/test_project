<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few things to consider:</p>

<p>Since you're not doing anything special with the getters and setters of your properties, I would suggest using the simple version(<code>string Brand { get; set; }</code>).</p>

<p>To simplify your validation, I would suggest a class that holds a collection of CellPhone's.  Leveraging the underlying collection would allow you to fill a combobox with choices. Choose the brand, then fill the next combobox with the appropriate models.  Since the choices come from the collection they're automatically correct.  </p>

<p>If you make the underlying collection a <code>Dictionary&lt;string,Dictionary&lt;string,CellPhone&gt;&gt;</code> You can get near constant time lookups to search for a particular brand and model.</p>

<p>Such a class could look like this:</p>

<pre><code>private class CellPhones
{
    public class CellPhone
    {
        public string Brand { get; set; }
        public string Model { get; set; }
        public decimal Price { get; set; }

        public CellPhone() { }
        public CellPhone(string brand, string model, decimal price)
        {
            Brand = brand;
            Model = model;
            Price = price;
        }

    }
    Dictionary&lt;string,Dictionary&lt;string,CellPhone&gt;&gt; phones { get; set; }
    public CellPhones()
    {
        phones = new Dictionary&lt;string, Dictionary&lt;string, CellPhone&gt;&gt;();
    }
    public void AddUpdatePhone(string brand, string model, decimal price)
    {
        CellPhone newPhone = new CellPhone(brand, model, price);
        if(!phones.ContainsKey(brand))
        {
            phones.Add(brand, new Dictionary&lt;string, CellPhone&gt;());
        }
        if(!phones[brand].ContainsKey(model))
        {
            phones[brand].Add(model, newPhone);
            return;
        }
        if(phones[brand][model].Price != price)
        {
            phones[brand][model].Price = price;
        }
    }
    public List&lt;string&gt; GetBrands()
    {
        return phones.Keys.ToList();
    }
    public List&lt;string&gt; GetModels(string brand)
    {
        return phones[brand].Keys.ToList();
    }
}
</code></pre>
    </div>