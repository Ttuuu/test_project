<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'm not sure the functional solution below may contribute to better performance, but it's a way of dealing with the three conditional expressions all at once.</p>

<p>The maximum of two numbers A and B can expressed functionally as:</p>

<pre><code>(Abs(A + B) + Abs(A - B)) /2
</code></pre>

<p>and the minimum as:</p>

<pre><code>(Abs(A + B) - Abs(A - B)) /2
</code></pre>

<p>Noting that the boolean value True is evaluated to -1 and False to 0, thus the expression:</p>

<pre><code>- (1 + 2 * NeedMax)
</code></pre>

<p>is evaluated to 1 if NeedMax is True, and -1 otherwise.
Combining all the three preceding expressions yields the desired solution:</p>

<pre><code>Public Function SelValue(ValOne As Long, ValTwo As Long, _
                    Optional NeedMax As Boolean = True) As Long
    SelValue = (Abs(ValOne + ValTwo) - (1 + 2 * NeedMax) * Abs(ValOne - ValTwo)) / 2
End Function
</code></pre>

<p>This returns the maximum of the two values if NeedMax is True and and the minimum otherwise.
Checking wether both values are zero is redundant; the max and min would have the same value; namely Zero.
Checking wether both values are negative is left (as in your comment) to the calling procedure.</p>
    </div>