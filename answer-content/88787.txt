<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Use the <code>Random</code> class:</h3>

<pre><code>Random rand = new Random();
...
random = rand.nextInt(side * side);
</code></pre>

<h3><code>i</code> and <code>j</code>, what is row and what is column?</h3>

<pre><code>for(int i = 0; i&lt;side; i++){
    for(int j = 0; j&lt;side; j++){
         if(cells[i][j].getValue() != -1){
</code></pre>

<p>I have no clue by looking at these lines what is <code>x</code> and what is <code>y</code>. I strongly suggest you rename your variables to <code>x</code> and <code>y</code>, or <code>row</code> and <code>col</code> instead.</p>

<h3><code>getCell</code> is slow</h3>

<p>You are currently looping through the cells until you find one that matches the <code>id</code>. This is slow. As this is only called from <code>generateMinesLocation</code>, you can instead have <code>generateMinesLocation</code> return a <code>List&lt;Cell&gt;</code>. Or even better: <code>Set&lt;Cell&gt;</code> to make the <code>loc.contains</code> lookup much faster, because:</p>

<ul>
<li>The order doesn't matter</li>
<li>There should be no duplicates</li>
</ul>

<p>These two conditions makes it a perfect for <code>Set&lt;Cell&gt; loc = new HashSet&lt;&gt;();</code></p>

<p>This will eliminate the need for a <code>id</code> on a <code>Cell</code>.</p>

<h3><code>value == -1</code> means that it is a mine</h3>

<p>Once upon a time, I also used a special value to indicate that a cell was a mine. Later I realized my mistake. It is really much better to use an additional <code>boolean</code> for the property of whether or not it is a mine. And you should definitely include a <code>boolean isMine()</code> function.</p>

<p>Not only does this make the code cleaner, it also allows a future mode where a <code>Cell</code> can be both a number and a mine at the same time. (Trust me, the possibilities are endless!)</p>

<h3><code>notChecked</code></h3>

<pre><code>public boolean isNotChecked(){
    return notChecked;
}
</code></pre>

<p>Save yourself some trouble and rename this to <code>checked</code> and <code>isChecked()</code>. Or even better: <code>clicked</code> and <code>isClicked()</code>.</p>

<p>Writing <code>if (!cell.isClicked())</code> is much more preferable than <code>if (cell.isNotClicked())</code></p>
    </div>