<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In order to make the comment by <a href="https://codereview.stackexchange.com/users/40395/ieatbagels">@IEatBagels</a> made in <a href="https://codereview.stackexchange.com/a/231265/98493">their answer</a> more explicit, you can just do this:</p>

<pre><code>def start_add(file_name):
    db = UserDb()
    with open(file_name) as file:
        db.data.insert_many(
            ({"no": line.strip()} for line in file if line),
            ordered=False)
    print(file_name, "Done!")
</code></pre>

<p>Using the <code>ordered=False</code> option might actually already do what you want, which is let the server parallelize it if possible (taken from the <a href="https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.insert_many" rel="nofollow noreferrer">documentation</a>):</p>

<blockquote>
  <p><code>ordered</code> (optional): If <code>True</code> (the default) documents will be
  inserted on the server serially, in the order provided. If an error
  occurs all remaining inserts are aborted. If <code>False</code>, documents will
  be inserted on the server in arbitrary order, possibly in parallel,
  and all document inserts will be attempted.</p>
</blockquote>

<p>This means you can probably just have one file, or, if you insist on it running in parallel on the computer running the script, use at most #CPU threads (potentially times two if you CPU supports <a href="https://en.wikipedia.org/wiki/Hyper-threading" rel="nofollow noreferrer">hyper-threading</a>).</p>

<p>Note that I also followed Python's official style-guide, <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP8</a>, by using <code>lower_case</code> and used the fact that <code>"r"</code> is the default mode for opening files with <code>open</code>.</p>

<p>The argument I passed to the call is a <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generator</a>, which means that the file does not even need to fit into memory all at once (the file object returned by <code>open</code> is also a kind of generator). Unfortunately, <code>insert_many</code> itself <a href="https://stackoverflow.com/q/37293900/4042267">does just put them into a list</a>, although <a href="https://api.mongodb.com/python/current/examples/bulk.html?highlight=bulk%20insert#bulk-insert" rel="nofollow noreferrer">another page in the documentation</a> lead me to believe this is not the case:</p>

<blockquote>
  <p>PyMongo will automatically split the batch into smaller sub-batches
  based on the maximum message size accepted by MongoDB, supporting very
  large bulk insert operations</p>
</blockquote>

<p>As mentioned in the above link, you can do the chunking yourself, though (directly in Python, or via different files as you already did).</p>
    </div>