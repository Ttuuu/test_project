<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few suggestions</p>

<ul>
<li><p><a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="noreferrer"><code>collections.defaultdict</code></a></p>

<blockquote>
<pre><code>holidays = {}
for month in range(1, 13):
    holidays[month] = []
    ...
</code></pre>
</blockquote>

<p>There is a module for dictionaries starting with a basic datatype</p>

<pre><code>from collections import defaultdict
holidays = defaultdict(tuple)
</code></pre>

<p>Secondly you first init it as a list, and afterwards you make it a tuple this is odd. Pick one and stick with it</p></li>
<li><p>You don't have to calculate all the months only the specific month</p>

<p>Since you already know which month it is now, just calculate only the month you are interested in</p>

<p>To do this you would have to give the month as a second parameter</p>

<pre><code>def second_fourth_saturday(year, month):
    cal = calendar.monthcalendar(year, month)
    ...
</code></pre></li>
<li><p>Don't Repeat Yourself</p>

<blockquote>
<pre><code>if cal[0][calendar.SATURDAY]:
    holidays[month] = (
        cal[1][calendar.SATURDAY],
        cal[3][calendar.SATURDAY]
    )
else:
    holidays[month] = (
        cal[2][calendar.SATURDAY],
        cal[4][calendar.SATURDAY]
    )
</code></pre>
</blockquote>

<p>If you calculate the weeks beforehand you don't have to repeat yourself</p>

<pre><code>second_fourth_saturday = (1, 3) if cal[0][calendar.SATURDAY] else (2, 4)
</code></pre></li>
<li><p>Return what is asked</p>

<p>Instead of return a dict of month with second/fourth saturdays, I think it would be more clear if the function returns a boolean value if the day is a second or fourth saturday</p></li>
</ul>

<h1>Code</h1>

<pre><code>from calendar import monthcalendar, SATURDAY
from datetime import datetime

def second_fourth_saturday(date):
    month_calender = monthcalendar(date.year, date.month)
    second_fourth_saturday = (1, 3) if month_calender[0][SATURDAY] else (2, 4)
    return any(date.day == month_calender[i][SATURDAY] for i in second_fourth_saturday)

if __name__ == "__main__":
    is_second_fourth_saturday = second_fourth_saturday(datetime.today())
    print("Enjoy" if is_second_fourth_saturday else "Start working")
</code></pre>
    </div>