<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Alignment</h2>
<p>This will be an easy win - use <code>aligned_alloc</code> instead of <code>malloc</code>. This is only guaranteed to be available in the standard library as of C11, which you should be using anyway.</p>
<h2>Exponential reallocation</h2>
<p>This:</p>
<pre><code>        // gracefully extend buffer size
        nofs++;
        buf = realloc(buf, BUF_SIZE*nofs*sizeof(char));
</code></pre>
<p>reallocates with linear growth. Memory is cheap and CPU time is expensive, so reallocate with exponential growth instead. Choosing a growth factor is a little more involved, but growth factors of 1.5 or 2 are not uncommon.</p>
<h2>Inner assignment</h2>
<p>Remove the assignment-in-condition from this:</p>
<pre><code>while (isspace(cc=getchar())) ;
</code></pre>
<p>It does not make anything faster, and is a nasty bit of C syntax that makes code more difficult to read, maintain and debug.</p>
<h2>Use a <code>for</code></h2>
<pre><code>int i=1;
while (!isspace(cc=getchar())) {
    // ...
    i++;
}
</code></pre>
<p>can be</p>
<pre><code>for (int i = 1; !isspace(cc); i++) {
   // ...
   cc = getchar();
}
</code></pre>
<p>noting that an initial <code>getchar()</code> would need to precede this loop.</p>
    </div>