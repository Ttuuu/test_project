<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>It solves the problem, and that's good. Period.</h2>
<p>But you're presenting your code here to get advice how to improve your programming skills, so here are a few remarks. Take them as a hint where to go from here, as soon as you feel ready for the "next level".</p>
<h2>Separate user interaction from computation</h2>
<p>Your main method contains both aspects in one piece of code, even within the same line (e.g. <code>System.out.println(celsius * 1.8 + 32 + " \u2109 \n");</code>). Make it a habit to separate tasks that can be named individually into methods of their own:</p>
<ul>
<li>input a Celsius value (a method <code>double readCelsius()</code>)</li>
<li>input a Fahrenheit value (a method <code>double readFahrenheit()</code>)</li>
<li>convert from Celsius to Fahrenheit (a method <code>double toFahrenheit(double celsius)</code>)</li>
<li>convert from Fahrenheit to Celsius (a method <code>double toCelsius(double fahrenheit)</code>)</li>
<li>output a Fahrenheit value (a method <code>void printFahrenheit(double fahrenheit)</code>)</li>
<li>output a Celsius value (a method <code>void printCelsius(double celsius)</code>)</li>
</ul>
<p>With separate methods, it will be easier to later change your program to e.g. use a window system, or do bulk conversions of many values at once, etc.</p>
<h2>More flexible workflow</h2>
<p>Your current program always forces the user to do exactly one C-to-F and then one F-to-C conversion. This will rarely both be needed at the same time. I'd either ask the user at the beginning for the conversion he wants, or make it two different programs. By the way, doing so will be easier if the different tasks have been separated.</p>
<h2>Minor hints</h2>
<p>Combine variable declaration and value assignment. You wrote <code>double fahrenheit, celsius;</code> and later e.g. <code>celsius = input.nextDouble();</code>, I'd combine that to read <code>double celsius = input.nextDouble();</code>. This way, when reading your program (maybe half a year later), you immediately see at the same place that <code>celsius</code> is a <code>double</code> number coming from some input.</p>
<p>I'd avoid the special characters like <code>\u2109</code> and instead write two simple characters <code>Â°F</code>. Not all fonts on your computer will know how to show that <code>\u2109</code> Fahrenheit symbol, so this might end up as some ugly-looking question mark inside a rectangle or similar. Using two separate characters does the job in a more robust way.</p>
    </div>