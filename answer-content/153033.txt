<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Your function could be a generator (which were introduced in <a href="https://docs.python.org/3/whatsnew/2.2.html#pep-255-simple-generators">Python 2.2</a>). It should also expose the pattern for the filter as a parameter:</p>

<pre><code>import os
import fnmatch

def files_within(directory_path, pattern="*"):
    for dirpath, dirnames, filenames in os.walk(directory_path):
        for file_name in fnmatch.filter(filenames, pattern):
            yield os.path.join(dirpath, file_name)

if __name__ == "__main__":
    # You can simply iterate over the generator:
    for file_path in files_within("."):
        print file_path

    # If you absolutely need a list:
    file_list = list(files_within("../"))

    # Use the pattern parameter:
    text_files = list(files_within(".", "*.txt"))
</code></pre>

<p>I like to leave the names from <code>os.walk</code> the same as in the <a href="https://docs.python.org/2/library/os.html#os.walk">documentation</a>, but this is a personal choice.</p>

<p>What is not quite a personal choice is the number of tabs per indentation level. Python's official style-guide, <a href="https://www.python.org/dev/peps/pep-0008/">PEP8</a>, recommends using always 4 spaces.</p>

<p>I also changed the way of the imports. Here it already becomes obvious why importing them like this is better (as far as readability goes). It is obvious that <code>fnmatch.filter</code> is from the module <code>fnmatch</code> and not the built-in <code>filter</code>.</p>
    </div>