<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Error printing</h2>

<p>You do the right thing in some cases:</p>

<pre><code>if(fseek(fp, -2, SEEK_CUR) == -1)
    perror("fseek");
</code></pre>

<p>but not others:</p>

<pre><code>if(fgetpos(fp, &amp;pos) == -1)
    return -1;
</code></pre>

<p>Also, that particular check does not adhere to the <a href="https://pubs.opengroup.org/onlinepubs/9699919799/functions/fgetpos.html" rel="nofollow noreferrer">specification</a>, which says:</p>

<blockquote>
  <p>Upon successful completion, fgetpos() shall return 0; otherwise, it shall return a non-zero value and set errno to indicate the error.</p>
</blockquote>

<h2>C89/C99</h2>

<p>We've been over this a little bit in the comments, but unless there is a specific target you have in mind that requires C89, it's best to go with something more modern. I generally use C18 but C99 is also a safe bet.</p>

<p>Among other things, this will buy you the ability to declare and initialize variables much closer to where you actually use them in the code, something that I find helps with legibility and maintainability.</p>

<h2>Enum offsets</h2>

<p>This isn't a critique, but a compliment: I had forgotten (or maybe never knew?) that enum values can be computed against each other, like</p>

<pre><code>MISC = ENTRY + 0x34,
</code></pre>

<p>That's really cool. Keep doing that.</p>

<h2>Double-cast</h2>

<pre><code>(unsigned char)~(unsigned char)c;
</code></pre>

<p>The rightmost cast is not necessary. Whereas inversion does change the type of a term to <code>int</code> (TIL), it is safe to do the inversion on the character directly, and then cast it after.</p>

<h2>Gotos</h2>

<p>Sometimes I find that there's actually a valid application of <code>goto</code>; I have a few toes outside of the never-<code>goto</code> camp. But I don't think that's the case here. Your use of <code>goto</code> can be easily avoided by factoring out a function that does early-<code>return</code> on failure.</p>
    </div>