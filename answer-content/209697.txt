<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://docs.microsoft.com/en-us/powershell/module/sqlserver/invoke-sqlcmd?view=sqlserver-ps#outputs" rel="nofollow noreferrer">Output from <code>invoke-sqlcmd</code></a> is <em>Formatted table</em> i.e. something like <code>PSCustomObject[]</code> array (or collection). Hence, one could address its columns as <code>.FILE_NAME</code> properties and apply comparison operators <code>-in</code>, <code>-contains</code>, <code>-match</code> etc. (elaborated from <a href="https://codereview.stackexchange.com/questions/209567/quickly-check-whether-file-name-is-in-column-in-an-sql-table-and-move-to-new-fol?noredirect=1#comment405249_209567">my original comment</a>):</p>

<pre><code>param( 
    [string] $src,  
    [string] $dest, 
    [string] $table
    )

$sql_instance_name = 'db'
$db_name = 'DB2'
$sql_user = 'user'
$sql_user_pswd = 'password'

$query = "select * from $table"
$expcsvS = invoke-sqlcmd -Username $sql_user -PASSWORD $sql_user_pswd `
    -Database $db_name -Query $query -serverinstance $sql_instance_name

Get-ChildItem -Path $src -Recurse -File | ForEach-Object  {

    if ( $_.Name -in  $expcsvS.FILE_NAME )
    {
        $nextName = Join-Path -Path $dest -ChildPath $_.Name
        Write-Output $nextName
        $_ | Move-Item -Destination $nextName
    }
}
</code></pre>

<p>Note that I use <code>$_.Name</code> instead of <code>($_.BaseName + $_.Extension)</code> as for files, the following code snippet always returns <code>True</code>.</p>

<pre><code>(Get-ChildItem -Recurse -File | 
    Where-Object { $_.Name -ne ($_.BaseName + $_.Extension) }) -eq $null
</code></pre>

<p>Also note that <code>if ( $_.Name -in $expcsvS.FILE_NAME ) {}</code> is equivalent to any of (incomplete list):</p>

<pre><code>if ( $expcsvS.FILE_NAME -match "^$($_.Name)$") {}
if ( $expcsvS.FILE_NAME -contains $_.Name ) {}
</code></pre>
    </div>