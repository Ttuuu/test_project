<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Philosophy</h1>

<p>You seemed to worry about the usefulness of this a bit when you said "it might still be useful..."  It doesn't have to be useful!  Was it fun?  Did you learn something?  I love personal data collection 
<a href="http://jehiah.cz/one-three/" rel="nofollow noreferrer">projects</a> like this.  It is amazing what it can <a href="http://feltron.com/FAR14.html" rel="nofollow noreferrer">lead to</a>.</p>

<p>I also find it interesting to see the idea of "write as little bash as possible" in a <em>code review</em>.  While shell scripting isn't the oasis in a technology desert that it was thirty years ago it is still a good way to get a variety of things done.  I write python for my job but I often have bash wrapper scripts.  Each language has its strengths and the more you learn about each of them the better general programmer you will be.  And if you ignore what you <em>should be</em> doing in bash then it is amazing <a href="https://github.com/tablespoon/fun/blob/master/cli-clock" rel="nofollow noreferrer">what you can do</a>.</p>

<h1>Good Parts</h1>

<p>Yes, really, I'm going to review your code....  Starting with some things I like:</p>

<ul>
<li>good indentation</li>
<li>decent variable names</li>
<li>using <code>$(</code> for command substitution</li>
<li>quoting defensively</li>
</ul>

<h1>Suggestions</h1>

<ul>
<li>Using <code>[[</code> for conditionals is a
<a href="https://google.github.io/styleguide/shell.xml#Test,_%5B_and_%5B%5B" rel="nofollow noreferrer">best practice</a>
and will help you avoid some surprises.  "With double square brackets you donâ€™t need to escape parenthesis and unquoted variables work just fine even if they contain spaces (meaning no word splitting or glob expansion)." <a href="https://sap1ens.com/blog/2017/07/01/bash-scripting-best-practices/" rel="nofollow noreferrer">source</a></li>
<li>You don't need the inner square brackets in <code>if [ "$diff" -gt "$gap" ] &amp;&amp; [ "$diff2" -lt "$gap" ]; then</code> .  Combining that with the previous point would lead to <code>if [[ "$diff" -gt "$gap" &amp;&amp; "$diff2" -lt "$gap" ]]; then</code></li>
<li>Use a <a href="https://www.tldp.org/LDP/abs/html/here-docs.html" rel="nofollow noreferrer">heredoc</a> for your
usage print-out so it isn't one long line.  It will be much easier to maintain and expand your help info in a heredoc.</li>
<li><p>For the code</p>

<pre><code>if [ "$whole_hours" -eq "1" ];
then
</code></pre>

<p>you can put the <code>then</code> up next to the <code>;</code> or just drop the <code>;</code> since the line ending will end the <code>if</code> command.  Also, quoting the 1 is unnecessary, but harmless.</p></li>
<li>How about some comments?</li>
<li>Try <a href="https://www.shellcheck.net/" rel="nofollow noreferrer">shellcheck</a>.  It has excellent advice.</li>
<li>Using <code>#!/usr/bin/env bash</code> in your shebang line
<a href="https://unix.stackexchange.com/q/29608/79839">might be a good idea</a>.</li>
</ul>
    </div>