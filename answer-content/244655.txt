<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Firstly we can simply loop through <code>a</code> to get the values to check that are in <code>b</code>.
However we need to know the index so we can increment a value, <code>i</code>, whilst looping through <code>a</code>.</p>
<pre class="lang-py prettyprint-override"><code>i = 0
for value in a:
    if value in b:
        print(a[i + 1])
    i += 1
</code></pre>
<p>You should notice that this doesn't actually work. This is because on the last value of <code>a</code> we go out of bounds. To fix this we can simply use the modulo operator, <code>%</code>, to keep the value in bounds.</p>
<pre class="lang-py prettyprint-override"><code>i = 0
for value in a:
    if value in b:
        print(a[(i + 1) % len(a)])
    i += 1
</code></pre>
<p>From here we can use <code>enumerate</code> rather than increment <code>i</code> manually.
And we start <code>i</code> at 1 to remove the need for that <code>(i + 1)</code>.</p>
<pre class="lang-py prettyprint-override"><code>for i, value in enumerate(a, start=1):
    if value in b:
        print(a[i % len(a)])
</code></pre>
<p>From you have a couple of options.</p>
<ul>
<li>You can use <code>zip</code> with <code>itertools</code> to remove the need for <code>i % len(a)</code>. This isn't going to be nice to read but can be more performant.</li>
<li>Use a comprehension to reduce this to one line of code.</li>
</ul>
<p>However these are more advanced topics.</p>
    </div>