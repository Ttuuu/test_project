<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You don't need to convert the string to an array before passing it to a set. The <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/Set#Syntax" rel="nofollow noreferrer"><code>Set</code></a> constructor can take any <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol" rel="nofollow noreferrer">iterable</a> as an argument. So, you can directly pass the string to get all the unique characters:</p>
<pre><code>const set = new Set(str2)
</code></pre>
<p>In the code, you are converting a string to an array to a set to an array again. Even, inside the <code>every</code> callback you are doing <code>split</code> on both strings. Which means, you need to search through both strings <code>set.size</code> times, create an array and compare their length.</p>
<p>You can write it in such a way that <code>str1</code> is looped only once and <code>str2</code> is looped until it fails your condition.</p>
<ul>
<li>You can create a counter function which maps each character with the number of times it occurs in a string. Call the function on <code>str1</code></li>
<li>Loop through the second string and return <code>false</code> if
<ul>
<li>the counter doesn't have that character.</li>
<li>the value becomes negative once you account for the current character.</li>
</ul>
</li>
<li>If the loop is completed, the string can be scrambled.</li>
</ul>
<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function counter(str) {
  const counter = {};
  for (const c of str)
    counter[c] = counter[c] + 1 || 1;
  return counter
}

function scramble(str1, str2) {
  if (str1.length &lt; str2.length)
    return false;

  const count = counter(str1);

  for (const c of str2) {
    if (!count.hasOwnProperty(c) || --count[c] &lt; 0)
      return false
  }
  
  return true
}

console.log(
  scramble('rkqodlw', 'world'),
  scramble('cedewaraaossoqqyt', 'codewars'),
  scramble('katas', 'steak')
)</code></pre>
</div>
</div>

    </div>