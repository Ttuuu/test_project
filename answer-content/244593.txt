<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Check for failure</h2>
<pre><code>metals = requests.get('https://www.lme.com/').text
</code></pre>
<p>should be</p>
<pre><code>response = requests.get('https://www.lme.com/')
response.raise_for_status()
metals = response.text
</code></pre>
<h2>String literals don't need parens</h2>
<pre><code>date = datetime.datetime.now()
time = (f'{date.day}/{date.month}/{date.year} | {date.hour}:{date.minute}')
</code></pre>
<p>would only need parens if it spans multiple lines.</p>
<p>Also, <code>date</code> shouldn't be called <code>date</code> for a couple of reasons:</p>
<ul>
<li>it shadows <code>datetime.date</code>, and</li>
<li>it has a time, not just a date.</li>
</ul>
<p>Finally: try using <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime" rel="noreferrer"><code>strftime</code></a> rather than extracting the time's individual components to render a string.</p>
<h2>No intermediate dict</h2>
<pre><code>metal_data = dict(zip(names, prices))
for k, v in metal_data.items():
</code></pre>
<p>The only reason you'd want to do this is if you're deeply concerned that there are duplicates, which this would remove. If there are no duplicates, then simply</p>
<pre><code>for k, v in zip(names, prices):
</code></pre>
<h2>Combine format strings</h2>
<pre><code>    v = ("%.2f" % v)
    k = metal_translation[k]
    print(f'{k}: {v} $')
</code></pre>
<p>can be</p>
<pre><code>print(f'{metal_translation[k]}: {v:.2f}')
</code></pre>
    </div>