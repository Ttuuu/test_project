<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>A few things stood out to me:</p>
<ol>
<li><p>You can extract out the implementation details behind where the token exists. Not a huge deal, but personally I would do this:</p>
<pre><code>const setAuthToken = (token) =&gt; document.querySelector('meta[name=csrf-token]').setAttribute('content', token)
const getAuthToken = () =&gt;document.querySelector('meta[name=csrf-token]').getAttribute('content')
</code></pre>
</li>
<li><p>I don't think you should throw an error for a non-<code>ok</code> response. It's not a fatal error, so I don't think you should treat it as such.</p>
<pre><code>if (!response.ok) {
    console.error(response)
    // throw response
    return Promise.reject(response)
}
</code></pre>
</li>
<li><p>Be careful with the headers. The <code>fetch</code> api can also accept a <code>Headers</code> object and you can't merge it in with <code>Object.assign</code>. <code>Headers</code> is iterable, which is nice so you can use a <code>for...of</code> loop to manually extract the keys and set them into your object</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Headers" rel="nofollow noreferrer">Read more about the Headers interface of the Fetch API here</a></p>
</li>
</ol>
    </div>