<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><a href="https://regex101.com/r/sM7xT4/1" rel="nofollow">Regex101.com</a> seems to think you can simply combine <code>\s{2,}</code> and <code>[\t\n]</code> into <code>\s{2,}[\t\n]</code> and it should have the same effect:</p>

<blockquote>
<pre><code>$string = preg_replace(array('/\s{2,}/', '/[\t\n]/'), ' ', $string);
</code></pre>
</blockquote>

<p>into:</p>

<pre><code>$string = preg_replace('/\s{2,}[\t\n]/', ' ', $string);
</code></pre>

<hr>

<p>You should add whitespace between your binary operators in this line:</p>

<blockquote>
<pre><code>$string = iconv("Windows-1252","UTF-8",urldecode($string));
</code></pre>
</blockquote>

<p>into:</p>

<pre><code>$string = iconv("Windows-1252", "UTF-8", urldecode($string));
</code></pre>

<p>(<em>I'm not personally familiar with</em> <code>iconv</code>, <em>so I can't give too much of a review on your usage of the function.</em>)</p>

<hr>

<p>Your third regex could be slimmed down from <code>a-zA-Z</code> into <code>a-z</code> with an case <code>i</code>nsensitive search.</p>

<blockquote>
<pre><code>return preg_replace('/[^a-zA-Z0-9Ã§&amp;-©‚Âƒâ€˜\s]/', '', $string);
</code></pre>
</blockquote>

<pre><code>return preg_replace('/[^a-z0-9Ã§&amp;-©‚Âƒâ€˜\s]/i', '', $string);
</code></pre>

<hr>

<p>In the same way you use a <code>preg_replace</code> with an <code>array</code>, you combine the first pair, with the secondary statement into one line if you like.</p>
    </div>