<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I think extracting methods would help to make the method more readable and easier to understand. This also reduces the ABC size.</p>

<pre><code># frozen_string_literal: true

require "ostruct"
require "active_support"
require "active_support/core_ext"
require "minitest/autorun"

EVENT_TEXT = { edit_item: 'edited an item' }.freeze
REASON_TEXT = { pickup_date: 'a pickup date change' }.freeze

def comment_text(comment)
  text = append_event('', comment)
  text = append_reason(text, comment)
  append_comment_text(text, comment)
end

def append_event(text, comment)
  return text if comment.event.blank?

  text + EVENT_TEXT[comment.event.to_sym]
end

def append_reason(text, comment)
  return text if comment.reason.blank?

  text + ' due to ' + REASON_TEXT[comment.reason.to_sym]
end

def append_comment_text(text, comment)
  text + ': ' + comment.text if comment.text.present?
end

alias context describe

describe "comment_text" do
  context "when there is no text" do
    it "returns nil" do
      assert_nil comment_text(OpenStruct.new)
    end
  end

  context "when there is text but no event" do
    it "returns text" do
      assert_equal ": foo", comment_text(OpenStruct.new(text: "foo"))
    end
  end

  context "when the event is unknown" do
    it "blows up" do
      assert_raises do
        comment_text(OpenStruct.new(event: "foo"))
      end
    end
  end

  context "when there is no text and event is known" do
    it "returns nil" do
      assert_nil comment_text(OpenStruct.new(event: "edit_item"))
    end
  end

  context "when there is no text and event and reason is known" do
    it "returns nil" do
      assert_nil comment_text(OpenStruct.new(event: "edit_item", reason: "pickup_date"))
    end
  end

  context "when there is no text and event is known and reason is unknown" do
    it "blows up" do
      assert_raises do
        comment_text(OpenStruct.new(event: "edit_item", reason: "foo"))
      end
    end
  end

  context "when there is text and event is valid" do
    it "displays text" do
      assert_equal "edited an item: foo", comment_text(OpenStruct.new(event: "edit_item", text: "foo"))
    end
  end

  context "when there is text and event and reason are valid" do
    it "displays text with reason" do
      assert_equal "edited an item due to a pickup date change: foo", comment_text(OpenStruct.new(event: "edit_item", reason: "pickup_date", text: "foo"))
    end
  end
end
</code></pre>
    </div>