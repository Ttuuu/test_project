<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Use <a href="https://stackoverflow.com/q/8189416/1068283">symbols as keys</a> in your hashes. The script is inconsistent with its use of symbols or strings as hash keys, and using symbols saves both time and memory as Ruby symbols are immutable.</p>

<p>When processing a grub 1 configuration, first assume the kernel can be reached in either / or /boot, before trying to read the device.map file, because device.map is very frequently wrong due to post-installation hardware changes. This issue doesn't affect systems which boot with grub 2.</p>

<pre><code># Scan directories to find the one containing the given path
def locate_kernel(kernel)
  ["", "/boot"].each do |dir|
    STDERR.puts "Looking for #{dir}#{kernel}\n" if $verbose
    return dir if File.exists?("#{dir}#{kernel}")
  end
  raise Errno::ENOENT
end

# Load the available kernels from the given GRUB 1 configuration file
def grub1_kernel_entries(config)
  device_map = IO.read("/boot/grub/device.map")
  entries = Array.new
  config.scan(/title (.+?$).+?root \(([^\)]+)\).+?kernel ([^ ]+) (.+?)$.+?initrd (.+?$)/m).each do |entry|
    begin
      # Try hard-coded locations, works 99.9% of the time
      mount_point = locate_kernel(entry[2])
    rescue Errno::ENOENT
      # Fallback to reading grub1 device.map, which is often wrong
      mount_point = device_map_to_mount_point(entry[1], device_map)
    end
    #.....
</code></pre>
    </div>