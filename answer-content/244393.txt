<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Subprocess</h2>
<pre><code>out, _ = subprocess.Popen(['virsh', command, arg], stdout=subprocess.PIPE, stderr=subprocess.STDOUT).communicate()
</code></pre>
<p>is a little clunky; consider</p>
<pre><code>def virsh(*args):
    out = subprocess.check_output(('virsh', *args))
</code></pre>
<p>This will also:</p>
<ul>
<li>check for the error level after execution</li>
<li>allow for an arbitrary number of command-line arguments</li>
</ul>
<h2>Comprehensions</h2>
<p>Let's see if we can translate this:</p>
<pre><code>list(
    map(
        lambda line: list(
            map(
                lambda x: x.strip(), re.split('\\s{2,}', line)
            )
        ), 
        out
    )
)
</code></pre>
<p>from the old functional style to the new comprehension style. I also had to expand the above because it was a golfed nightmare.</p>
<pre><code>[
    [
        x.strip()
        for x in re.split(r'\s{2,}', line)
    ]
    for line in out
]
</code></pre>
<p>Also note the use of a raw string for your regex.</p>
<p>Similarly, this:</p>
<pre><code>sum(list(map(lambda col: col[1] + 1, cols)))
</code></pre>
<p>can be</p>
<pre><code>sum(col[1] + 1 for col in cols)
</code></pre>
<h2>Type hints</h2>
<p>This:</p>
<pre><code>def print_table(stdscr, head_color, sel_color, sel_i, x, y, cols, gray_sel, items):
</code></pre>
<p>could really benefit from them. For instance, maybe <code>x</code> and <code>y</code> are <code>x: int, y: int</code>.</p>
<h2>Enumerate</h2>
<pre><code>    i = 1
    for item in items:
        # ...
        i += 1
</code></pre>
<p>should be</p>
<pre><code>for i, item in enumerate(items):
</code></pre>
<h2>Implicit tuple unpack</h2>
<pre><code>for (name, minsize, gray) in cols:
</code></pre>
<p>does not need parens.</p>
<h2>Else-after-exit</h2>
<pre><code>        exit()
    elif c == ord('\t'):
</code></pre>
<p>does not need an <code>elif</code>; an <code>if</code> will suffice.</p>
    </div>