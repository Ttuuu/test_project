<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>keep your raw data</h1>

<p>You overwrite <code>props_x</code> with the normalized version. Better would be to make this a new variable</p>

<h1>data structures</h1>

<p>If you have more than 1 or 2 properties. Assigning them each to their own variable can become quite tedious. You need to gather them in a data structure. If they are all of the same length, a <code>numpy.array</code> or <code>pandas.DataFrame</code> can be the right structures. 
Otherwise a <code>dict</code> might be more appropriate</p>

<pre><code>data_raw = {
    "prop_1": list(np.random.rand(10) * 20),
    "prop_2": list(np.random.rand(10) * 10),
    "prop_3": list(np.random.rand(10) * 30),
}
</code></pre>

<h1>function</h1>

<p>Almost each time you write a comment in your code denoting a section, you can make the code itself clearer by putting that section in a data structure, function, class, ...</p>

<pre><code>def normalize(iterable: Iterable[Any]) -&gt; np.array:
    """Linearly scales the input to the interval [0, 1]"""
    my_array = np.array(list(iterable))
    lower, upper = my_array.min(), my_array.max()
    return (my_array - lower) / (upper - lower)
</code></pre>

<p>I even added a docstring explaining what the method does.</p>

<pre><code>data_normalized = {
    name: normalize(data)
    for name, data in data_raw.items()
}
</code></pre>

<h1>spacing</h1>

<p>For code formatting, I trust <a href="https://github.com/psf/black" rel="nofollow noreferrer"><code>black</code></a> to make the correct choices for me.So no more <code>prop_1    =</code>, but 1 space around the <code>=</code>, ...</p>

<p>The only coniguration I use there is maximum 79 character per line.</p>

<p>Black integrates wellwith most IDEs and jupyter lab notebooks (<a href="https://black.readthedocs.io/en/stable/editor_integration.html" rel="nofollow noreferrer">docs</a>)</p>
    </div>