<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><code>successor(node, targetValue)</code> does not necessarily return the in-order successor even if called with a node in a valid search tree and that node's value: what about search trees where a value can occur more than once?  </li>
<li>I notice no <a href="https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring" rel="nofollow noreferrer">docstrings</a>. <code>successor()</code> in a binary tree (I could guess that much from <code>left</code> and <code>right</code>) might be the <em>in-order</em> successor, <code>target_value</code> could clue me in the tree is a <em>search tree</em>, but <em>don't make me guess</em>.  </li>
<li>I have to second <a href="https://codereview.stackexchange.com/a/222120/93149">Peilonrayz</a> in rejecting the possibility to call <code>successor()</code> with parameters that make it return something else.  </li>
</ul>

<p>Trying to <code>reduce the amount of lines of code</code> while sticking to comparing <code>value</code>s seems to use more attribute accesses:</p>

<pre><code>def successor(node):
    '''Return the in-order successor of node in its search-tree.'''
    if node:
        if not node.right:
            target_value = node.value
            while node.parent and node.parent.value &lt; target_value:
                node = node.parent
            return node.parent
        node = node.right
        while node.left:
            node = node.left
    return node
</code></pre>
    </div>