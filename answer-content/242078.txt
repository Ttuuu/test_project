<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>On modern environments that support it (which is pretty much all of them except Safari), you can make it a bit nicer by using <code>matchAll</code> instead of <code>match</code>, and use capture groups to capture the digits immediately, rather than having to use an <code>.includes</code> check and <code>split</code> afterwards:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>function parse(string) {
    const numbers = [];
    for (const [, beginStr, endStr] of string.matchAll(/(\d+)(?:-(\d+))?/g)) {
        const [begin, end] = [beginStr, endStr].map(Number);
        numbers.push(begin);
        if (endStr !== undefined) {
            for (let num = begin + 1; num &lt;= end; num++) {
              numbers.push(num);
          }
        }
    }
    return numbers;
}

console.log(parse('11 14-16 18-20'));</code></pre>
</div>
</div>


<p>(For older environments, you'll need a <a href="https://github.com/ljharb/String.prototype.matchAll" rel="noreferrer">polyfill</a>)</p>

<p>Also note that you should always use <code>const</code> to declare variables whenever possible - only use <code>let</code> when you need to warn readers of the code that you may have to reassign the variable in the future.</p>
    </div>