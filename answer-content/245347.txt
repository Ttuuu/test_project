<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As @dariosicily said, hide the members of the <code>Ipv4Address</code> class; since it's a bad habit to expose internal values directly, since you will lose control over your own data when the object is <a href="https://docs.oracle.com/javase/tutorial/essential/concurrency/imstrat.html" rel="nofollow noreferrer">mutable</a>. In your <code>Ipv4Address</code> class, the list <code>connections</code> is mutable, and can be edited from anywhere; even if you create a getter / setter.</p>
<p>When dealing with <code>mutable</code> objects, it always a good practice to return a new instance in the getter. Luckily, with the Java collections, you can use the <code>java.util.Collections#unmodifiableList</code> to return a list that is not editable.</p>
<pre class="lang-java prettyprint-override"><code>    public List&lt;Ipv4Address&gt; getConnections() {
        return Collections.unmodifiableList(this.connections);
    }
</code></pre>
    </div>