<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Using streams to debug is a bad habit, and your error management is quite erroneous.
See this bug:</p>

<pre><code>Queue q{};
q.push(-1);
std::cout &lt;&lt; "pop: " &lt;&lt; q.pop() &lt;&lt; '\n'; // &lt;- will print "-1", the last int pushed
std::cout &lt;&lt; "pop: " &lt;&lt; q.pop() &lt;&lt; '\n'; // &lt;- will print "-1" too, cause the queue is empty
</code></pre>

<p>Instead, catch errors using exception handling, <code>std::optional{}</code> or <code>terminate()</code>.</p>

<p>And when this and the other problems raised above are corrected, an interesting development could be to set up a Growing Policy as optional parameter.</p>

<p>Optionally, as well as a <code>size()</code> method, it would be a good addition to implement <code>capacity()</code> and <code>reserve()</code> methods.</p>
    </div>