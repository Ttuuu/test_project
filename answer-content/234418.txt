<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Yes, this could use a refactoring</h2>

<p>I think your instincts are correct.  Those nested <code>if-else</code>s are hard to comprehend.  And the simplest way to break it apart is by creating helper functions.</p>

<p>Here I go through a step-by-step refactoring.  As with any refactoring, it involves a number of judgment calls.</p>

<h2>Assumptions</h2>

<p>First, I need to make clear one assumption, as not everything was spelled out in the question.  I'm assuming that the <code>data</code> properties of the <code>event</code>'s <code>container</code> and <code>previousContainer</code> nodes, as well as your <code>this</code> object's <code>userRole</code> and <code>userRoleCopy</code> nodes consist of arrays of objects of the form <code>{role: 'some string'}</code>.</p>

<h2>InitialCode</h2>

<p>We start with code that looks like this:</p>

<blockquote>
  <pre class="lang-js prettyprint-override"><code>  drop: function(event)  {
    if (event.container.id === "delete") {
      transferArrayItem(
        event.previousContainer.data,
        event.container.data,
        event.previousIndex,
        event.currentIndex
      );
      this.userRoleCopy = this.userRole.slice();
    } else {
      if (event.previousContainer === event.container) {
        moveItemInArray(
          event.container.data,
          event.previousIndex,
          event.currentIndex
        );
      } else {
        let lastRole = Object.values(
          event.previousContainer.data[event.previousIndex]
        );

        let parentRole = JSON.parse(JSON.stringify(event.container.data));

        let hasRole = parentRole.some(rola =&gt; {
          return rola.role === String(lastRole);
        });

        if (!hasRole) {
          transferArrayItem(
            event.previousContainer.data,
            event.container.data,
            event.previousIndex,
            event.currentIndex
          );
          let lastAddedRole = event.container.data[event.previousIndex];
          if (lastAddedRole !== undefined) {
            this.userRoleCopy.push(lastAddedRole.valueOf());
          }
          this.resetList();
        }
      }
    }
  },
</code></pre>
</blockquote>

<p>This code implies that there two helper functions available: <code>transferArrayItem</code> and <code>moveItemInArray</code>, and also that the <code>this</code> object also has the method <code>resetList</code> and the properties <code>userRole</code> and <code>userRoleCopy</code>.  I created dummies for these, with a wrapper I creatively (:-)) called "something".  You can see it in <a href="https://ramdajs.com/repl/#?const%20transferArrayItem%20%3D%20%28prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%0A%20%20console.log%28%7Baction%3A%20%27transfer%27%2C%20prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%7D%29%20%0A%0Aconst%20moveItemInArray%20%3D%20%28data%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%20%0A%20%20console.log%28%7Baction%3A%20%27move%27%2C%20data%2C%20prevIdx%2C%20currIdx%7D%29%0A%0Aconst%20something%20%3D%20%28userRole%29%20%3D%3E%20%28%7B%0A%20%20userRole%2C%0A%20%20userRoleCopy%3A%20%5B%5D%2C%0A%20%20resetList%3A%20%28%29%20%3D%3E%20console.log%28%7Baction%3A%20%27resetList%27%7D%29%2C%0A%20%20drop%3A%20function%28event%29%20%20%7B%0A%20%20%20%20if%20%28event.container.id%20%3D%3D%3D%20%22delete%22%29%20%7B%0A%20%20%20%20%20%20transferArrayItem%28%0A%20%20%20%20%20%20%20%20event.previousContainer.data%2C%0A%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20this.userRoleCopy%20%3D%20this.userRole.slice%28%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20if%20%28event.previousContainer%20%3D%3D%3D%20event.container%29%20%7B%0A%20%20%20%20%20%20%20%20moveItemInArray%28%0A%20%20%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20let%20lastRole%20%3D%20Object.values%28%0A%20%20%20%20%20%20%20%20%20%20event.previousContainer.data%5Bevent.previousIndex%5D%0A%20%20%20%20%20%20%20%20%29%3B%0A%0A%20%20%20%20%20%20%20%20let%20parentRole%20%3D%20JSON.parse%28JSON.stringify%28event.container.data%29%29%3B%0A%0A%20%20%20%20%20%20%20%20let%20hasRole%20%3D%20parentRole.some%28rola%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20rola.role%20%3D%3D%3D%20String%28lastRole%29%3B%0A%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20if%20%28%21hasRole%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20transferArrayItem%28%0A%20%20%20%20%20%20%20%20%20%20%20%20event.previousContainer.data%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%20%20%20%20let%20lastAddedRole%20%3D%20event.container.data%5Bevent.previousIndex%5D%3B%0A%20%20%20%20%20%20%20%20%20%20if%20%28lastAddedRole%20%21%3D%3D%20undefined%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.userRoleCopy.push%28lastAddedRole.valueOf%28%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20this.resetList%28%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%7D%29%0A%0A%2F%2F------------------------------------%0Aconst%20containers%20%3D%20%7B%0A%20%20a%3A%20%7Bid%3A%20%27a%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20b%3A%20%7Bid%3A%20%27b%27%2C%20data%3A%20%5B%7Brole%3A%20%27b1%27%7D%2C%20%7Brole%3A%20%27b2%27%7D%2C%20%7Brole%3A%20%27b3%27%7D%2C%20%7Brole%3A%20%27b4%27%7D%2C%20%7Brole%3A%20%27b5%27%7D%5D%7D%2C%0A%20%20c%3A%20%7Bid%3A%20%27c%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20d%3A%20%7Bid%3A%20%27delete%27%2C%20data%3A%20%5B%5D%7D%0A%7D%0Alet%20s%0Aconsole.clear%28%29%3B%0A%2F%2F------------------------------------%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.d%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.b%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.c%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0A%0A" rel="nofollow noreferrer">Step 0</a>.  I of course do not expect that these helper functions do anything like your original.  The goal here is to simply fix things up without changing the behavior.</p>

<h2>Removing unnecessary clone</h2>

<p>My first step was to remove an unnecessary clone made in this:</p>

<blockquote>
  <pre class="lang-js prettyprint-override"><code>        let parentRole = JSON.parse(JSON.stringify(event.container.data));

        let hasRole = parentRole.some(rola =&gt; {
          return rola.role === String(lastRole);
        });
</code></pre>
</blockquote>

<p>There is no advantage to cloning that parent role.  The call to <code>some</code> does not alter the data, so we can just use the original.</p>

<p>Thus we can just write:</p>

<pre class="lang-js prettyprint-override"><code>        let hasRole = event.container.data.some(rola =&gt; {
          return rola.role === String(lastRole);
        });
</code></pre>

<p>This minor change is available in <a href="https://ramdajs.com/repl/#?const%20transferArrayItem%20%3D%20%28prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%0A%20%20console.log%28%7Baction%3A%20%27transfer%27%2C%20prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%7D%29%20%0A%0Aconst%20moveItemInArray%20%3D%20%28data%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%20%0A%20%20console.log%28%7Baction%3A%20%27move%27%2C%20data%2C%20prevIdx%2C%20currIdx%7D%29%0A%0Aconst%20something%20%3D%20%28userRole%29%20%3D%3E%20%28%7B%0A%20%20userRole%2C%0A%20%20userRoleCopy%3A%20%5B%5D%2C%0A%20%20resetList%3A%20%28%29%20%3D%3E%20console.log%28%7Baction%3A%20%27resetList%27%7D%29%2C%0A%20%20drop%3A%20function%28event%29%20%20%7B%0A%20%20%20%20if%20%28event.container.id%20%3D%3D%3D%20%22delete%22%29%20%7B%0A%20%20%20%20%20%20transferArrayItem%28%0A%20%20%20%20%20%20%20%20event.previousContainer.data%2C%0A%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20this.userRoleCopy%20%3D%20this.userRole.slice%28%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20if%20%28event.previousContainer%20%3D%3D%3D%20event.container%29%20%7B%0A%20%20%20%20%20%20%20%20moveItemInArray%28%0A%20%20%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20let%20lastRole%20%3D%20Object.values%28%0A%20%20%20%20%20%20%20%20%20%20event.previousContainer.data%5Bevent.previousIndex%5D%0A%20%20%20%20%20%20%20%20%29%3B%0A%0A%20%20%20%20%20%20%20%20let%20parentRole%20%3D%20JSON.parse%28JSON.stringify%28event.container.data%29%29%3B%0A%0A%20%20%20%20%20%20%20%20let%20hasRole%20%3D%20parentRole.some%28rola%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20rola.role%20%3D%3D%3D%20String%28lastRole%29%3B%0A%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20if%20%28%21hasRole%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20transferArrayItem%28%0A%20%20%20%20%20%20%20%20%20%20%20%20event.previousContainer.data%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%20%20%20%20let%20lastAddedRole%20%3D%20event.container.data%5Bevent.previousIndex%5D%3B%0A%20%20%20%20%20%20%20%20%20%20if%20%28lastAddedRole%20%21%3D%3D%20undefined%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.userRoleCopy.push%28lastAddedRole.valueOf%28%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20this.resetList%28%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%7D%29%0A%0A%2F%2F------------------------------------%0Aconst%20containers%20%3D%20%7B%0A%20%20a%3A%20%7Bid%3A%20%27a%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20b%3A%20%7Bid%3A%20%27b%27%2C%20data%3A%20%5B%7Brole%3A%20%27b1%27%7D%2C%20%7Brole%3A%20%27b2%27%7D%2C%20%7Brole%3A%20%27b3%27%7D%2C%20%7Brole%3A%20%27b4%27%7D%2C%20%7Brole%3A%20%27b5%27%7D%5D%7D%2C%0A%20%20c%3A%20%7Bid%3A%20%27c%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20d%3A%20%7Bid%3A%20%27delete%27%2C%20data%3A%20%5B%5D%7D%0A%7D%0Alet%20s%0Aconsole.clear%28%29%3B%0A%2F%2F------------------------------------%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.d%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.b%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.c%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0A%0A" rel="nofollow noreferrer">Step 1</a>, and you can see just by switching tabs that the output remains the same.</p>

<h2>Tweaking the search</h2>

<p>This code seems odd:</p>

<blockquote>
  <pre class="lang-js prettyprint-override"><code>        let lastRole = Object.values(
          event.previousContainer.data[event.previousIndex]
        );

        let hasRole = event.container.data.some(rola =&gt; {
          return rola.role === String(lastRole);
        });
</code></pre>
</blockquote>

<p>Perhaps my initial assumption was wrong.  But if you're trying to see if that data object has an element whose <code>role</code> property matches the specified value, I believe it's much simpler.  This is available in <a href="https://ramdajs.com/repl/?v=0.26.1#?const%20transferArrayItem%20%3D%20%28prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%0A%20%20console.log%28%7Baction%3A%20%27transfer%27%2C%20prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%7D%29%20%0A%0Aconst%20moveItemInArray%20%3D%20%28data%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%20%0A%20%20console.log%28%7Baction%3A%20%27move%27%2C%20data%2C%20prevIdx%2C%20currIdx%7D%29%0A%0Aconst%20something%20%3D%20%28userRole%29%20%3D%3E%20%28%7B%0A%20%20userRole%2C%0A%20%20userRoleCopy%3A%20%5B%5D%2C%0A%20%20resetList%3A%20%28%29%20%3D%3E%20console.log%28%7Baction%3A%20%27resetList%27%7D%29%2C%0A%20%20drop%3A%20function%28event%29%20%20%7B%0A%20%20%20%20if%20%28event.container.id%20%3D%3D%3D%20%22delete%22%29%20%7B%0A%20%20%20%20%20%20transferArrayItem%28%0A%20%20%20%20%20%20%20%20event.previousContainer.data%2C%0A%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20this.userRoleCopy%20%3D%20this.userRole.slice%28%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20if%20%28event.previousContainer%20%3D%3D%3D%20event.container%29%20%7B%0A%20%20%20%20%20%20%20%20moveItemInArray%28%0A%20%20%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20let%20lastRole%20%3D%20event.previousContainer.data%5Bevent.previousIndex%5D.role%0A%0A%20%20%20%20%20%20%20%20let%20hasRole%20%3D%20event.container.data.some%28rola%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20rola.role%20%3D%3D%3D%20lastRole%3B%0A%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20if%20%28%21hasRole%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20transferArrayItem%28%0A%20%20%20%20%20%20%20%20%20%20%20%20event.previousContainer.data%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.container.data%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.previousIndex%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20event.currentIndex%0A%20%20%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%20%20%20%20let%20lastAddedRole%20%3D%20event.container.data%5Bevent.previousIndex%5D%3B%0A%20%20%20%20%20%20%20%20%20%20if%20%28lastAddedRole%20%21%3D%3D%20undefined%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.userRoleCopy.push%28lastAddedRole.valueOf%28%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20this.resetList%28%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%7D%29%0A%0A%2F%2F------------------------------------%0Aconst%20containers%20%3D%20%7B%0A%20%20a%3A%20%7Bid%3A%20%27a%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20b%3A%20%7Bid%3A%20%27b%27%2C%20data%3A%20%5B%7Brole%3A%20%27b1%27%7D%2C%20%7Brole%3A%20%27b2%27%7D%2C%20%7Brole%3A%20%27b3%27%7D%2C%20%7Brole%3A%20%27b4%27%7D%2C%20%7Brole%3A%20%27b5%27%7D%5D%7D%2C%0A%20%20c%3A%20%7Bid%3A%20%27c%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20d%3A%20%7Bid%3A%20%27delete%27%2C%20data%3A%20%5B%5D%7D%0A%7D%0Alet%20s%0Aconsole.clear%28%29%3B%0A%2F%2F------------------------------------%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.d%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.b%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.c%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0A%0A" rel="nofollow noreferrer">Step 2</a>.</p>

<pre class="lang-js prettyprint-override"><code>        let lastRole = event.previousContainer.data[event.previousIndex].role

        let hasRole = event.container.data.some(rola =&gt; {
          return rola.role === lastRole;
        });
</code></pre>

<h2>Stop repeating <code>event.x.y</code></h2>

<p>Repeating <code>event.something.somethingElse</code> all over the place makes the code both harder to read and harder to change.  We can capture values like <code>prevData</code> and <code>id</code> from the event, and the rest of the code will be simpler.  There are several ways we could do this, but I find the nicest one is with <a href="https://2ality.com/2015/01/es6-destructuring.html#parameter-handling" rel="nofollow noreferrer">destructuring parameters</a>.  Using that, we can simplify the code to version <a href="https://ramdajs.com/repl/?v=0.26.1#?const%20transferArrayItem%20%3D%20%28prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%0A%20%20console.log%28%7Baction%3A%20%27transfer%27%2C%20prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%7D%29%20%0A%0Aconst%20moveItemInArray%20%3D%20%28data%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%20%0A%20%20console.log%28%7Baction%3A%20%27move%27%2C%20data%2C%20prevIdx%2C%20currIdx%7D%29%0A%0Aconst%20something%20%3D%20%28userRole%29%20%3D%3E%20%28%7B%0A%20%20userRole%2C%0A%20%20userRoleCopy%3A%20%5B%5D%2C%0A%20%20resetList%3A%20%28%29%20%3D%3E%20console.log%28%7Baction%3A%20%27resetList%27%7D%29%2C%0A%20%20drop%3A%20function%20%28%0A%20%20%20%20event%2C%20%7B%0A%20%20%20%20%20%20container%2C%20container%3A%20%7Bid%2C%20data%7D%2C%0A%20%20%20%20%20%20previousContainer%2C%20previousContainer%3A%20%7Bdata%3A%20prevData%7D%2C%0A%20%20%20%20%20%20previousIndex%2C%0A%20%20%20%20%20%20currentIndex%0A%20%20%20%20%7D%20%3D%20event%0A%20%29%20%20%7B%0A%20%20%20%20if%20%28id%20%3D%3D%3D%20%22delete%22%29%20%7B%0A%20%20%20%20%20%20transferArrayItem%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20this.userRoleCopy%20%3D%20this.userRole.slice%28%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20if%20%28previousContainer%20%3D%3D%3D%20container%29%20%7B%0A%20%20%20%20%20%20%20%20moveItemInArray%28data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20let%20lastRole%20%3D%20prevData%5BpreviousIndex%5D.role%0A%0A%20%20%20%20%20%20%20%20let%20hasRole%20%3D%20data.some%28rola%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20rola.role%20%3D%3D%3D%20lastRole%3B%0A%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20if%20%28%21hasRole%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20transferArrayItem%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20%20%20%20%20let%20lastAddedRole%20%3D%20data%5BpreviousIndex%5D%3B%0A%20%20%20%20%20%20%20%20%20%20if%20%28lastAddedRole%20%21%3D%3D%20undefined%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.userRoleCopy.push%28lastAddedRole.valueOf%28%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20this.resetList%28%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%7D%29%0A%0A%2F%2F------------------------------------%0Aconst%20containers%20%3D%20%7B%0A%20%20a%3A%20%7Bid%3A%20%27a%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20b%3A%20%7Bid%3A%20%27b%27%2C%20data%3A%20%5B%7Brole%3A%20%27b1%27%7D%2C%20%7Brole%3A%20%27b2%27%7D%2C%20%7Brole%3A%20%27b3%27%7D%2C%20%7Brole%3A%20%27b4%27%7D%2C%20%7Brole%3A%20%27b5%27%7D%5D%7D%2C%0A%20%20c%3A%20%7Bid%3A%20%27c%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20d%3A%20%7Bid%3A%20%27delete%27%2C%20data%3A%20%5B%5D%7D%0A%7D%0Alet%20s%0Aconsole.clear%28%29%3B%0A%2F%2F------------------------------------%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.d%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.b%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.c%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0A" rel="nofollow noreferrer">Step 3</a>:</p>

<pre class="lang-js prettyprint-override"><code>  drop: function ({
    container, container: {id, data},
    previousContainer, previousContainer: {data: prevData},
    previousIndex,
    currentIndex
  }) {
    if (id === "delete") {
      transferArrayItem(prevData, data, previousIndex, currentIndex);
      this.userRoleCopy = this.userRole.slice();
    } else {
      if (previousContainer === container) {
        moveItemInArray(data, previousIndex, currentIndex);
      } else {
        let hasRole = pluck('role', data).includes(prevData[previousIndex].role)

        if (!hasRole) {
          transferArrayItem(prevData, data, previousIndex, currentIndex);
          let lastAddedRole = data[previousIndex];
          if (lastAddedRole !== undefined) {
            this.userRoleCopy.push({...lastAddedRole});
          }
          this.resetList();
        }
      }
    }
  }
</code></pre>

<h2>Using helper functions</h2>

<p>I'm still bothered by this bit:</p>

<blockquote>
  <pre class="lang-js prettyprint-override"><code>        let lastRole = prevData[previousIndex].role

        let hasRole = data.some(rola =&gt; {
          return rola.role === lastRole;
        });
</code></pre>
</blockquote>

<p>If we were working with <code>['role 1', 'role 2', 'role 3', ...]</code>, it would be very easy to search for our target role by just calling <code>includes</code>.  I happen to have handy a helper function that transforms <code>[{x: 'a', y: 1}, {x: 'b', y: 2}, {x: 'c', y: 3}...]</code> into <code>['a', 'b', 'c']</code>, a function called <code>pluck</code>.  In fact it's built into the <a href="https://ramdajs.com/" rel="nofollow noreferrer">Ramda</a> REPL I've been using, but we could write our own as easily as this:</p>

<pre class="lang-js prettyprint-override"><code>const pluck = (prop) =&gt; (xs) =&gt; xs.map(x =&gt; x[prop])
</code></pre>

<p>and use it as in <a href="https://ramdajs.com/repl/?v=0.26.1#?const%20transferArrayItem%20%3D%20%28prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%0A%20%20console.log%28%7Baction%3A%20%27transfer%27%2C%20prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%7D%29%20%0A%0Aconst%20moveItemInArray%20%3D%20%28data%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%20%0A%20%20console.log%28%7Baction%3A%20%27move%27%2C%20data%2C%20prevIdx%2C%20currIdx%7D%29%0A%0Aconst%20something%20%3D%20%28userRole%29%20%3D%3E%20%28%7B%0A%20%20userRole%2C%0A%20%20userRoleCopy%3A%20%5B%5D%2C%0A%20%20resetList%3A%20%28%29%20%3D%3E%20console.log%28%7Baction%3A%20%27resetList%27%7D%29%2C%0A%20%20drop%3A%20function%20%28%7B%0A%20%20%20%20container%2C%20container%3A%20%7Bid%2C%20data%7D%2C%0A%20%20%20%20previousContainer%2C%20previousContainer%3A%20%7Bdata%3A%20prevData%7D%2C%0A%20%20%20%20previousIndex%2C%0A%20%20%20%20currentIndex%0A%20%20%7D%29%20%7B%0A%20%20%20%20if%20%28id%20%3D%3D%3D%20%22delete%22%29%20%7B%0A%20%20%20%20%20%20transferArrayItem%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20this.userRoleCopy%20%3D%20this.userRole.slice%28%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20if%20%28previousContainer%20%3D%3D%3D%20container%29%20%7B%0A%20%20%20%20%20%20%20%20moveItemInArray%28data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20let%20hasRole%20%3D%20pluck%28%27role%27%2C%20data%29.includes%28prevData%5BpreviousIndex%5D.role%29%0A%0A%20%20%20%20%20%20%20%20if%20%28%21hasRole%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20transferArrayItem%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20%20%20%20%20let%20lastAddedRole%20%3D%20data%5BpreviousIndex%5D%3B%0A%20%20%20%20%20%20%20%20%20%20if%20%28lastAddedRole%20%21%3D%3D%20undefined%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.userRoleCopy.push%28%7B...lastAddedRole%7D%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20this.resetList%28%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%7D%29%0A%0A%2F%2F------------------------------------%0Aconst%20containers%20%3D%20%7B%0A%20%20a%3A%20%7Bid%3A%20%27a%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20b%3A%20%7Bid%3A%20%27b%27%2C%20data%3A%20%5B%7Brole%3A%20%27b1%27%7D%2C%20%7Brole%3A%20%27b2%27%7D%2C%20%7Brole%3A%20%27b3%27%7D%2C%20%7Brole%3A%20%27b4%27%7D%2C%20%7Brole%3A%20%27b5%27%7D%5D%7D%2C%0A%20%20c%3A%20%7Bid%3A%20%27c%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20d%3A%20%7Bid%3A%20%27delete%27%2C%20data%3A%20%5B%5D%7D%0A%7D%0Alet%20s%0Aconsole.clear%28%29%3B%0A%2F%2F------------------------------------%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.d%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.b%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.c%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0A" rel="nofollow noreferrer">Step 4</a>, like this:</p>

<pre class="lang-js prettyprint-override"><code>        let hasRole = pluck('role', data).includes(prevData[previousIndex].role)
</code></pre>

<p>And now that we can extract helpers, we can do a substantial clean-up of our main function by adding a few helper methods to our object:</p>

<pre class="lang-js prettyprint-override"><code>  deleteRole: function (prevData, data, previousIndex, currentIndex) {
    transferArrayItem(prevData, data, previousIndex, currentIndex);
    this.userRoleCopy = this.userRole.slice();
  },
  transferRole: function(prevData, data, previousIndex, currentIndex) {
    if (!pluck('role', data).includes(prevData[previousIndex].role)) {
      transferArrayItem(prevData, data, previousIndex, currentIndex);
      if (previousIndex in data) {
        this.userRoleCopy.push({...data[previousIndex]});
      }
      this.resetList();
    }
  },
  drop: function ({
    container, container: {id, data},
    previousContainer, previousContainer: {data: prevData},
    previousIndex,
    currentIndex
  }) {
    if (id === "delete") {
      this.deleteRole(prevData, data, previousIndex, currentIndex);
    } else {
      if (previousContainer === container) {
        moveItemInArray(data, previousIndex, currentIndex);
      } else {
        this.transferRole(prevData, data, previousIndex, currentIndex);
      }
    }
  }
</code></pre>

<p>(This is <a href="https://ramdajs.com/repl/?v=0.26.1#?const%20transferArrayItem%20%3D%20%28prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%0A%20%20console.log%28%7Baction%3A%20%27transfer%27%2C%20prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%7D%29%20%0A%0Aconst%20moveItemInArray%20%3D%20%28data%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%20%0A%20%20console.log%28%7Baction%3A%20%27move%27%2C%20data%2C%20prevIdx%2C%20currIdx%7D%29%0A%0Aconst%20something%20%3D%20%28userRole%29%20%3D%3E%20%28%7B%0A%20%20userRole%2C%0A%20%20userRoleCopy%3A%20%5B%5D%2C%0A%20%20resetList%3A%20%28%29%20%3D%3E%20console.log%28%7Baction%3A%20%27resetList%27%7D%29%2C%0A%20%20deleteRole%3A%20function%20%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%20%7B%0A%20%20%20%20transferArrayItem%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20this.userRoleCopy%20%3D%20this.userRole.slice%28%29%3B%0A%20%20%7D%2C%0A%20%20transferRole%3A%20function%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%20%7B%0A%20%20%20%20if%20%28%21pluck%28%27role%27%2C%20data%29.includes%28prevData%5BpreviousIndex%5D.role%29%29%20%7B%0A%20%20%20%20%20%20transferArrayItem%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20if%20%28previousIndex%20in%20data%29%20%7B%0A%20%20%20%20%20%20%20%20this.userRoleCopy.push%28%7B...data%5BpreviousIndex%5D%7D%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20this.resetList%28%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20drop%3A%20function%20%28%7B%0A%20%20%20%20container%2C%20container%3A%20%7Bid%2C%20data%7D%2C%0A%20%20%20%20previousContainer%2C%20previousContainer%3A%20%7Bdata%3A%20prevData%7D%2C%0A%20%20%20%20previousIndex%2C%0A%20%20%20%20currentIndex%0A%20%20%7D%29%20%7B%0A%20%20%20%20if%20%28id%20%3D%3D%3D%20%22delete%22%29%20%7B%0A%20%20%20%20%20%20this.deleteRole%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20if%20%28previousContainer%20%3D%3D%3D%20container%29%20%7B%0A%20%20%20%20%20%20%20%20moveItemInArray%28data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20this.transferRole%28prevData%2C%20data%2C%20previousIndex%2C%20currentIndex%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%7D%29%0A%0A%2F%2F------------------------------------%0Aconst%20containers%20%3D%20%7B%0A%20%20a%3A%20%7Bid%3A%20%27a%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20b%3A%20%7Bid%3A%20%27b%27%2C%20data%3A%20%5B%7Brole%3A%20%27b1%27%7D%2C%20%7Brole%3A%20%27b2%27%7D%2C%20%7Brole%3A%20%27b3%27%7D%2C%20%7Brole%3A%20%27b4%27%7D%2C%20%7Brole%3A%20%27b5%27%7D%5D%7D%2C%0A%20%20c%3A%20%7Bid%3A%20%27c%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20d%3A%20%7Bid%3A%20%27delete%27%2C%20data%3A%20%5B%5D%7D%0A%7D%0Alet%20s%0Aconsole.clear%28%29%3B%0A%2F%2F------------------------------------%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.d%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.b%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.c%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0A%0A%0A" rel="nofollow noreferrer">Step 5</a>.)</p>

<h2>Moving back to an <code>event</code> parameter</h2>

<p>As we've proceeded, it seems as though the decision to destructure our <code>event</code> parameter is actually complicating things.  Certainly the signature of our main function is not as nice as we'd like.  If we undo that, now that we've abstracted things a bit, using these property accesses doesn't seem so ugly.  </p>

<p>And this would let us move some of the helpers from object methods to plain functions, which are often more tractable.  There is a problem with the <code>this</code> property though, which would necessitate moving this line back into the main function:</p>

<pre class="lang-js prettyprint-override"><code>   this.userRoleCopy = this.userRole.slice();
</code></pre>

<p>With this the code now could look like <a href="https://ramdajs.com/repl/?v=0.26.1#?const%20transferArrayItem%20%3D%20%28prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%0A%20%20console.log%28%7Baction%3A%20%27transfer%27%2C%20prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%7D%29%20%0A%0Aconst%20moveItemInArray%20%3D%20%28data%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%20%0A%20%20console.log%28%7Baction%3A%20%27move%27%2C%20data%2C%20prevIdx%2C%20currIdx%7D%29%0A%0Aconst%20transferEvent%20%3D%20%28event%29%20%3D%3E%0A%20transferArrayItem%28event.previousContainer.data%2C%20event.container.data%2C%20event.previousIndex%2C%20event.currentIndex%29%3B%0A%0Aconst%20moveEvent%20%3D%20%28event%29%20%3D%3E%20%0A%20%20moveItemInArray%28event.container.data%2C%20event.previousIndex%2C%20event.currentIndex%29%0A%0Aconst%20something%20%3D%20%28userRole%29%20%3D%3E%20%28%7B%0A%20%20userRole%2C%0A%20%20userRoleCopy%3A%20%5B%5D%2C%0A%20%20resetList%3A%20%28%29%20%3D%3E%20console.log%28%7Baction%3A%20%27resetList%27%7D%29%2C%0A%0A%20%20transferRole%3A%20function%28event%29%20%7B%0A%20%20%20%20if%20%28%21pluck%28%27role%27%2C%20event.container.data%29.includes%28%0A%20%20%20%20%20%20event.previousContainer.data%5Bevent.previousIndex%5D.role%29%0A%20%20%20%20%20%29%20%7B%0A%20%20%20%20%20%20transferEvent%28event%29%3B%0A%20%20%20%20%20%20if%20%28event.previousIndex%20in%20event.container.data%29%20%7B%0A%20%20%20%20%20%20%20%20this.userRoleCopy.push%28%7B...event.container.data%5Bevent.previousIndex%5D%7D%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20this.resetList%28%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20drop%3A%20function%20%28event%29%20%7B%0A%20%20%20%20if%20%28event.container.id%20%3D%3D%3D%20%22delete%22%29%20%7B%0A%20%20%20%20%20%20transferEvent%28event%29%3B%0A%20%20%20%20%20%20this.userRoleCopy%20%3D%20this.userRole.slice%28%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20if%20%28event.previousContainer%20%3D%3D%3D%20event.container%29%20%7B%0A%20%20%20%20%20%20%20%20moveEvent%28event%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20this.transferRole%28event%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%7D%29%0A%0A%2F%2F------------------------------------%0Aconst%20containers%20%3D%20%7B%0A%20%20a%3A%20%7Bid%3A%20%27a%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20b%3A%20%7Bid%3A%20%27b%27%2C%20data%3A%20%5B%7Brole%3A%20%27b1%27%7D%2C%20%7Brole%3A%20%27b2%27%7D%2C%20%7Brole%3A%20%27b3%27%7D%2C%20%7Brole%3A%20%27b4%27%7D%2C%20%7Brole%3A%20%27b5%27%7D%5D%7D%2C%0A%20%20c%3A%20%7Bid%3A%20%27c%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20d%3A%20%7Bid%3A%20%27delete%27%2C%20data%3A%20%5B%5D%7D%0A%7D%0Alet%20s%0Aconsole.clear%28%29%3B%0A%2F%2F------------------------------------%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.d%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.b%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.c%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0A%0A%0A" rel="nofollow noreferrer">Step 6</a>:</p>

<pre class="lang-js prettyprint-override"><code>const pluck = (prop) =&gt; (xs) =&gt; xs.map(x =&gt; x[prop])

const transferEvent = (event) =&gt;
  transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);

const moveEvent = (event) =&gt; 
  moveItemInArray(event.container.data, event.previousIndex, event.currentIndex)

const something = (userRole) =&gt; ({
  // ...
  transferRole: function(event) {
    if (!pluck('role', event.container.data).includes(
      event.previousContainer.data[event.previousIndex].role)
     ) {
      transferEvent(event);
      if (event.previousIndex in event.container.data) {
        this.userRoleCopy.push({...event.container.data[event.previousIndex]});
      }
      this.resetList();
    }
  },
  drop: function (event) {
    if (event.container.id === "delete") {
      transferEvent(event);
      this.userRoleCopy = this.userRole.slice();
    } else {
      if (event.previousContainer === event.container) {
        moveEvent(event);
      } else {
        this.transferRole(event);
      }
    }
  }
})
</code></pre>

<h2>Making plain functions out of methods</h2>

<p>The reason we haven't been able to move <code>transferRole</code> into a plain function as well is that it makes reference to <code>this</code>.  So long as we need <code>this</code>, we're stuck with methods.  But it's quite easy to make it a function parameter.  When we do so we end up with a final cleaner codebase, <a href="https://ramdajs.com/repl/?v=0.26.1#?const%20transferArrayItem%20%3D%20%28prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%0A%20%20console.log%28%7Baction%3A%20%27transfer%27%2C%20prevData%2C%20currData%2C%20prevIdx%2C%20currIdx%7D%29%20%0A%0Aconst%20moveItemInArray%20%3D%20%28data%2C%20prevIdx%2C%20currIdx%29%20%3D%3E%20%0A%20%20console.log%28%7Baction%3A%20%27move%27%2C%20data%2C%20prevIdx%2C%20currIdx%7D%29%0A%0Aconst%20transferEvent%20%3D%20%28event%29%20%3D%3E%0A%20transferArrayItem%28event.previousContainer.data%2C%20event.container.data%2C%20event.previousIndex%2C%20event.currentIndex%29%3B%0A%0Aconst%20moveEvent%20%3D%20%28event%29%20%3D%3E%20%0A%20%20moveItemInArray%28event.container.data%2C%20event.previousIndex%2C%20event.currentIndex%29%0A%0Aconst%20transferRole%20%3D%20%28something%2C%20event%29%20%3D%3E%20%7B%0A%20%20if%20%28%21pluck%28%27role%27%2C%20event.container.data%29.includes%28%0A%20%20%20%20event.previousContainer.data%5Bevent.previousIndex%5D.role%29%0A%20%20%29%20%7B%0A%20%20%20%20transferEvent%28event%29%3B%0A%20%20%20%20if%20%28event.previousIndex%20in%20event.container.data%29%20%7B%0A%20%20%20%20%20%20something.userRoleCopy.push%28%7B...event.container.data%5Bevent.previousIndex%5D%7D%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20something.resetList%28%29%3B%0A%20%20%7D%0A%7D%3B%0A%0Aconst%20something%20%3D%20%28userRole%29%20%3D%3E%20%28%7B%0A%20%20userRole%2C%0A%20%20userRoleCopy%3A%20%5B%5D%2C%0A%20%20resetList%3A%20%28%29%20%3D%3E%20console.log%28%7Baction%3A%20%27resetList%27%7D%29%2C%0A%0A%20%20drop%3A%20function%20%28event%29%20%7B%0A%20%20%20%20if%20%28event.container.id%20%3D%3D%3D%20%22delete%22%29%20%7B%0A%20%20%20%20%20%20transferEvent%28event%29%3B%0A%20%20%20%20%20%20this.userRoleCopy%20%3D%20this.userRole.slice%28%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20if%20%28event.previousContainer%20%3D%3D%3D%20event.container%29%20%7B%0A%20%20%20%20%20%20%20%20moveEvent%28event%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20transferRole%28this%2C%20event%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%7D%29%0A%0A%2F%2F------------------------------------%0Aconst%20containers%20%3D%20%7B%0A%20%20a%3A%20%7Bid%3A%20%27a%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20b%3A%20%7Bid%3A%20%27b%27%2C%20data%3A%20%5B%7Brole%3A%20%27b1%27%7D%2C%20%7Brole%3A%20%27b2%27%7D%2C%20%7Brole%3A%20%27b3%27%7D%2C%20%7Brole%3A%20%27b4%27%7D%2C%20%7Brole%3A%20%27b5%27%7D%5D%7D%2C%0A%20%20c%3A%20%7Bid%3A%20%27c%27%2C%20data%3A%20%5B%7Brole%3A%20%27a1%27%7D%2C%20%7Brole%3A%20%27a2%27%7D%2C%20%7Brole%3A%20%27a3%27%7D%2C%20%7Brole%3A%20%27a4%27%7D%2C%20%7Brole%3A%20%27a5%27%7D%5D%7D%2C%0A%20%20d%3A%20%7Bid%3A%20%27delete%27%2C%20data%3A%20%5B%5D%7D%0A%7D%0Alet%20s%0Aconsole.clear%28%29%3B%0A%2F%2F------------------------------------%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.d%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.a%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.b%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0Aconsole.log%28%27%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%27%29%0As%20%3D%20something%20%28%5B%7Brole%3A%20%27x1%27%7D%2C%20%7Brole%3A%20%27x2%27%7D%5D%29%0As%20.drop%20%28%7B%0A%20%20container%3A%20containers.a%2C%0A%20%20previousContainer%3A%20containers.c%2C%0A%20%20previousIndex%3A%201%2C%0A%20%20currentIndex%3A%203%0A%7D%29%0Aconsole.log%28s%29%0A%0A%0A" rel="nofollow noreferrer">Step 7</a>:</p>

<pre class="lang-js prettyprint-override"><code>const pluck = (prop) =&gt; (xs) =&gt; xs.map(x =&gt; x[prop])

const transferEvent = (event) =&gt;
  transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);

const moveEvent = (event) =&gt; 
  moveItemInArray(event.container.data, event.previousIndex, event.currentIndex)

const transferRole = (something, event) =&gt; {
  if (!pluck('role', event.container.data).includes(
    event.previousContainer.data[event.previousIndex].role)
  ) {
    transferEvent(event);
    if (event.previousIndex in event.container.data) {
      something.userRoleCopy.push({...event.container.data[event.previousIndex]});
    }
    something.resetList();
  }
};

const something = (userRole) =&gt; ({tion: 'resetList'}),
  // ...
  drop: function (event) {
    if (event.container.id === "delete") {
      transferEvent(event);
      this.userRoleCopy = this.userRole.slice();
    } else {
      if (event.previousContainer === event.container) {
        moveEvent(event);
      } else {
        transferRole(this, event);
      }
    }
  },
})

</code></pre>

<h2>Lessons Learned</h2>

<p>I was going to write a few paragraphs about choices made during this refactoring, and about alternatives that might apply.  But I'm tired now, and want to finish up.  So I'll just say although there are many good reasons to refactor code -- including performance, compliance with conventions and standards, and others -- the most important reason is to make your code easier to read and to modify.</p>

<p>I believe the final version makes the branching much more clear.  I believe it is easier to read.  So I believe we have improved this code.</p>

<hr>

<p>Note: I'm seeing after writing all this up that we folded two separate changes into Step 5.  As well as pulling out helper functions, that step changed this:</p>

<pre class="lang-js prettyprint-override"><code>          let lastAddedRole = data[previousIndex];
          if (lastAddedRole !== undefined) {
            this.userRoleCopy.push({...lastAddedRole});
          }
</code></pre>

<p>to this:</p>

<pre class="lang-js prettyprint-override"><code>      if (previousIndex in data) {
        this.userRoleCopy.push({...data[previousIndex]});
      }
</code></pre>

<p>It does the same thing, but without introducing a temporary variable.  To me that's usually an improvement.</p>
    </div>