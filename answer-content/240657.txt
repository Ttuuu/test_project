<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>IMO good design is:</p>

<ol>
<li>It solves the purpose it sets out to solve.</li>
<li>It only solves the problem you set out to solve.</li>
<li>It doesn't add extra problems for the user.</li>
<li>It doesn't solve extra problems for the user, making it hard to maintain.</li>
</ol>

<p><code>MailCrypt</code></p>

<ol>
<li>❌ It is not clear what it solves.</li>
<li>-</li>
<li>❌ The code is more annoying to use than if the code were just functions.</li>
<li>❌ The code is more annoying to maintain than if it were just functions.</li>
</ol>

<p><code>PublicKey</code></p>

<ol>
<li>💚 It stores public keys.</li>
<li>💚</li>
<li><p>❌</p>

<ul>
<li>Save and load keys can be abstracted away.</li>
<li>If the program doesn't exit as expected all the new keys are gone.</li>
<li>Why can't I specify my own file location?</li>
</ul></li>
<li><p>💚</p></li>
</ol>

<p><code>PersonalKeys</code> and <code>CreateKeys</code></p>

<ol>
<li>🧡 <em>Together</em> they handle personal keys.</li>
<li>💚 They handle personal keys.</li>
<li><p>❌</p>

<ul>
<li>Why do I need two classes for public keys?</li>
<li>Why does <code>get_private</code> and <code>get_public</code> not give me what I asked for?</li>
<li>Why can I not specify my own file location?</li>
<li>Why does generating my keys not give them to me?</li>
<li>Why doesn't <code>my_public_key</code> update when I generate new keys?</li>
</ul>

<p><br>
Overall, why do I have to jump through loops to interact with my keys?</p>

<p>Please convert the following code to use your classes to see which is easier to use.</p>

<pre class="lang-py prettyprint-override"><code>personal = PersonalKeys(...)
public = personal.public
_, private = personal.generate()
p, _ = personal.generate(save=True)
assert personal.public == p
assert personal.public != public
assert personal.private != private
personal.save(public, private)
assert personal.public == public
assert personal.private == private
</code></pre></li>
<li><p>🧡 Why does <code>generate_keys</code> not call <code>generate_keys_test</code>?</p></li>
</ol>

<p><code>EmailSMTP</code> and <code>EmailIMAP</code></p>

<ol>
<li>❌ <em>Together</em> they handle emails (collection) and email (items).</li>
<li>❌ They are handling both the collection and the item.</li>
<li><p>❌ The interface is clunky. Contrast with usage of <a href="https://codereview.stackexchange.com/a/240350/42401">my previous answer</a>.</p>

<pre class="lang-py prettyprint-override"><code>mc = MailCrypt()
for email in mc.emails():
    try:
        data = email.read()
    except &lt;insert decrypt error&gt;:
        email.import_key()
        data = email.read()

    if 'delete' in data:
        email.delete()
</code></pre></li>
<li><p>❌ It's solving two things at once.</p></li>
</ol>

<hr>

<p>The CLI gives your code purpose and shows you the usability problems of your code, helping to find both 1 and 3.</p>
    </div>