<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>As AJD stated there is no need to recreate the array of values for each sheet. </p>

<p>I don't like <code>Sub getData()</code> because <code>Get</code> implies that a value is going to be returned.  <code>Sub setData()</code> isn't appropriate either because <code>Set</code> implies that a value is being set.  <code>UpdateData()</code> makes sense but not in a Public Module.  Using undescriptive names in Public Modules can lead to confusion down the road as a project grows. Using a name like  <code>Sub UpdateCompanyJSONInformation()</code> will make it clear exactly what the macro is meant to do.</p>

<p><code>ArrayLen()</code> is used in the code but never declared.  I imagine that it returns <code>Ubound(Array) + Lbound(Array)</code>.  I personally would throw <code>ArrayLen()</code> into the trash with <code>GetColumnLetter()</code> and similar helper functions that are floating around the internet.  IMO <code>ArrayLen()</code> is obfuscating the code by masking a simple coding pattern that we should easily recognize.  </p>

<p><code>i = 1: j = 0</code>  This was a little confusing for me.  At first it looked like the <code>i</code> dimension was 1 based and the <code>j</code> dimension was 0 based.  Not knowing exactly what <code>ArrayLen()</code> returned added to the confusion.  I had to look over the way the values were being written to the worksheet several times before I realized the the first row was empty.  You should fit the Array to your data.  I can guarantee that if you come back to this project in 1 to 2 years to make a simple modification, you will not remember that you the first row of data is empty. </p>

<h2>Refactored Code</h2>

<pre><code>Sub UpdateCompanyJSONInformation(Parsed As Object, company As String, headers As Variant, wb)
    Application.ScreenUpdating = False
'Parsed contains a collection of dictionaries parsed from a JSON input'

    Dim oSheet As Variant, Values As Variant
    For Each oSheet In ActiveWorkbook.Sheets
        With oSheet
            'Identify the sheet containing the name of the company'

            If InStr(1, oSheet.Name, company, vbTextCompare) Then
                If Not IsArray(Values) Then Values = getCompanyJSONInformation(Parsed, headers)

                .Cells.Clear 'Clearing the data in the company Sheet'
                .Range("A1").Resize(UBound(Values), UBound(Values, 2)).Value = Values
            End If
        End With
    Next oSheet

End Sub

Function getCompanyJSONInformation(Parsed As Object, headers As Variant) As Variant
    Dim key As Variant, Values As Variant
    Dim Value As Dictionary
    ReDim Values(1 To Parsed.Count + 1, LBound(headers) + 1 To UBound(headers) + 1 - LBound(headers))
    Dim r As Long, c As Long

    r = 1
    For Each key In headers
        c = c + 1
        Values(r, c) = key
    Next

    For Each Value In Parsed
        r = r + 1
        For c = 1 To UBound(Values, 2)
            key = Values(1, c)
            Values(r, c) = Value(key)
        Next
    Next
    getCompanyJSONInformation = Values
End Function
</code></pre>
    </div>