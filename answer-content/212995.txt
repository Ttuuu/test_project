<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You have a couple of compiler warnings:</p>

<pre><code>24: error: ISO C++ forbids initialization of member ‘pos’
24: error: making ‘pos’ static
24: error: ISO C++ forbids in-class initialization of non-const static member ‘pos’
24: error: local class ‘struct main()::minim’ shall not have static data member ‘long int main()::minim::pos’
25: error: ISO C++ forbids initialization of member ‘value’
25: error: making ‘value’ static
25: error: ISO C++ forbids in-class initialization of non-const static member ‘value’
25: error: local class ‘struct main()::minim’ shall not have static data member ‘long int main()::minim::value’
</code></pre>

<p>Not a valid header:</p>

<pre><code>#include &lt;bits/stdc++.h&gt;
</code></pre>

<p>This declaration is bad practice: See: <a href="https://stackoverflow.com/q/1452721/14065">https://stackoverflow.com/q/1452721/14065</a> second answer is the best.</p>

<pre><code>using namespace std;
</code></pre>

<p>One declaration per line please.</p>

<pre><code>    long long stock, cost;
</code></pre>

<p>You are making copies of the parameter here.</p>

<pre><code>bool compare (sorted_food lhs, sorted_food rhs)
</code></pre>

<p>Pass by const reference to avoid a copy.<br>
If you had written your types above properly you have spotted that it was more expensive to copy than passing a reference.</p>

<p>This looks completely garbage:</p>

<pre><code>    return (lhs.cost &lt; rhs.cost &amp;&amp; lhs.cost &amp;&amp; rhs.cost);
</code></pre>

<p>Let's have a Look:</p>

<pre><code>    A Cost  B Cost    A &lt; B    B &lt; A
       5      6         T        F           OK
       5      0         F        F           Hmmmm So they are equal?
       0      6         F        F           Hmmmm
       0      0         F        F           Hmmmm 
</code></pre>

<p>What on earth!!!</p>

<pre><code>    long long i,n,m,cost,d,j,k=1;
</code></pre>

<p>One variable per line. Only declare variables at the point you need them. This is not C89. You don't need to declare all the variables at the top. It gives you no speed benefit to declare them all at the top. It gives you no speed benefit to declare variables that are only 1 character lone give them a name so we can read the code.</p>

<p>If you can read the code you have a better chance of spotting better algorithms.  </p>

<p>This is a bit eccentric way of writing a loop!</p>

<pre><code>    for (i=1; i&lt;=m; i++)

    // Normally written like this:
    for (int i=0; i &lt; m; ++i)
</code></pre>

<p>Yep, as expected the rest is unreadable so I can't suggest a better algorithm.</p>
    </div>