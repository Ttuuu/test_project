<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My main issue is that the median function takes a C-style array. Generally C-style arrays are avoided in modern C++. It would be much better if it took an <code>std::array</code>, set or vector as its input. </p>

<p>Similarly, your make window function seems mostly unnecessary. It should only take one or two lines to get the window from the array.</p>

<p>In general there is very rarely a good reason to use use the <code>data()</code> functions on on STL containers; you should just use the container instead.</p>

<p>Other minor points:</p>

<p>There is some inconsistent formatting in number of spaces and <code>{}</code> positioning. Not a major issue but make things harder to read.</p>

<p><code>main()</code> doesn't strictly need a return statement and will return 0 by default if no value is given.</p>

<p>You've included <code>&lt;algorithm&gt;</code> but haven't used anything from it.</p>

<p>Given these changes, my version looks like:</p>

<pre><code>#include &lt;array&gt;
#include &lt;iostream&gt;
#include &lt;vector&gt;

int median( const std::vector&lt; int &gt;&amp; window )
{
    const size_t N = window.size();
    if ( N % 2 == 0 )
        return ( window[N / 2 - 1] + window[N / 2] ) / 2;
    return window[N / 2];
}

int main()
{
    const auto window_length = 3;
    std::vector&lt; int &gt; input{ -1, 5, 13, 8, 2, 3, 3, 1 };

    for ( auto it = input.begin(); it != input.end()-window_length+1; ++it )
    {
        std::vector&lt; int &gt; window( it, it + window_length );

        for ( const auto&amp; value : window )
        {
            std::cout &lt;&lt; value &lt;&lt; ' ';
        }

        std::sort( window.begin(), window.end() );
        int result = median( window );
        std::cout &lt;&lt; "\nmedian " &lt;&lt; result &lt;&lt; '\n';
        std::cout &lt;&lt; '\n';
    }
}
</code></pre>

<p>Another issue I haven't considered. If you take the median of 3, 4 I would expect 3.5, but your code does integer division and returns an <code>int</code> from <code>median()</code>, so will return 3. Not clear whether this is intentional or an oversight.</p>
    </div>