<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First, try not to declare all your types in the global namespace. Make your "own" space. This limits the exposure to other code you might integrate with.</p>

<p>Your <code>materials</code>, <code>weapons</code>, and <code>spells</code> seem to be <code>enum</code> candidates as they are used as values. So use them as enum-values and define there size explicitly. In this case I'm not recommending scoped enums since you want to do calculations easily on there values.</p>

<p>Added a constructor to your <code>character</code>.</p>

<p><code>characterCreation</code> function should take string by universal reference to avoid unnecessary copies.</p>

<p>Have you print method take and <code>ostream</code> so you easily can change to the any stream of your choosing.</p>

<pre><code>namespace YourNamespaceName {

enum materials : int {
    wood = 1, oak = 2, maple = 3, ash = 4, bronze = 2, iron = 3, steel = 4, mithril = 5, dragon = 6
};

enum weapons : int {
    dagger = 2, sword = 3, axe = 4, mace = 5, bow = 3, arrows = 2
};

enum spells : int {
    fire = 4, frost = 6, dark = 8, chaos = 10
};

struct character {
    explicit character(std::string &amp;&amp;name)
            : name(std::move(name)), strength(rand() % 5 + 5), stamina(rand() % 5 + 5), intellect(rand() % 5 + 5),
              weaponAttack(weapons::dagger * materials::bronze + 2 * strength),
              spellAttack(spells::fire + intellect * 2) {
        health += 2 * stamina;
        mana += 3 * intellect;
    }

    std::string name;
    int health = 100, mana = 100, strength, stamina, intellect, weaponAttack, spellAttack, souls = 0;
};

// Function Declaration
character characterCreation(std::string &amp;&amp;name);

std::ostream &amp;printInfo(std::ostream &amp;os, const character &amp;createChar);

}  // close YourNamespaceName namespace

// Main Function

int main() {
    std::string characterName;
    std::cout &lt;&lt; "Please input character name: ";
    std::cin &gt;&gt; characterName;

    std::srand(std::time(nullptr));
    auto player = YourNamespaceName::characterCreation(std::move(characterName));
    YourNamespaceName::printInfo(std::cout, player);

    system("pause");
    return 0;
}

namespace YourNamespaceName {

// Function Definition

character characterCreation(std::string &amp;&amp;name) {
    return character(std::move(name));
}

std::ostream &amp;printInfo(std::ostream &amp;os, const character &amp;createChar) {
    return os &lt;&lt; createChar.name &lt;&lt; '\n'
              &lt;&lt; createChar.health &lt;&lt; '\n'
              &lt;&lt; createChar.mana &lt;&lt; '\n'
              &lt;&lt; createChar.strength &lt;&lt; '\n'
              &lt;&lt; createChar.stamina &lt;&lt; '\n'
              &lt;&lt; createChar.intellect &lt;&lt; '\n'
              &lt;&lt; createChar.weaponAttack &lt;&lt; '\n'
              &lt;&lt; createChar.spellAttack &lt;&lt; '\n'
              &lt;&lt; createChar.souls &lt;&lt; '\n';
}

}  // close YourNamespaceName namespace
</code></pre>
    </div>