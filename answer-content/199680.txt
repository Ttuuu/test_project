<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>The <code>length()</code> function can be replaced using <code>strlen()</code> (you'll need to include <code>&lt;string.h&gt;</code>).  Note that <code>strlen()</code> doesn't consider the terminating NUL to be part of the string - but that will help fix the current bug that causes this code to print that NUL.</p>

<p>Don't measure the length repeatedly - instead, save it to a variable early on, and refer to that variable.</p>

<hr>

<p>Error messages should go to standard error stream, not standard output:</p>

<pre><code>if (argc &lt; 3) {
    fprintf(stderr, "Usage: %s input cols\n", argv[0]);
    return 1;
}
</code></pre>

<hr>

<p>Don't use uppercase names for variables - we reserve those for macros; the "SHOUTING" of the name warns us that they need special care.</p>

<p>Also, don't use <code>atof()</code> for converting integers - use <code>atoi()</code>, or better, <code>strtoul()</code>, which can tell you whether it succeeded:</p>

<pre><code>char *parse_end;
size_t col_bound = strtoul(argv[2], &amp;parse_end, 10);
if (parse_end == argv[2] || *parse_end) {
    fprintf(stderr, "Usage: %s input cols\n", argv[0]);
    return 1;
}
</code></pre>

<hr>

<p>Prefer one declaration per line, and initialise immediately:</p>

<pre><code>size_t startCol = 0;
size_t currentCut = 0;
size_t nextBound = 0;
size_t numOfCuts = 0;
</code></pre>

<hr>

<p>Be careful about off-by-one errors.  This inequality should be <code>&lt;</code>, not <code>&lt;=</code>:</p>

<pre><code>while ((nextBound = startCol + col_bound - 1) &lt; length) {
</code></pre>

<p>It's not the only one.</p>

<hr>

<p>Test more inputs.  I tried a very simple case and got unexpected output:</p>

<pre class="lang-sh prettyprint-override"><code>./194156 'a b c d e f' 3
</code></pre>

<pre class="lang-none prettyprint-override"><code>a b
c
d e
f
Original string split into 4 parts(bound was 3)
</code></pre>

<p>Why did it not split into 3 lines?</p>
    </div>