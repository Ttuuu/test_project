<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In theory, I think this is allowed because your Items are trivial types, but this is pretty ugly.</p>

<p>I think you can do better using <code>std::array</code>.</p>

<pre><code>struct _color { uint8_t r; uint8_t g; uint8_t b; uint8_t a;};
</code></pre>

<p>could be</p>

<pre><code>struct _color {
    auto&amp; r() { return data[0]; }
    // etc
    void randomize() { /* fill data with random stuff */ }
    private:
        std::array&lt;uint8_t, 4&gt; data;
};
</code></pre>

<hr>

<p>P.S. I think you will find that uniformly randomly setting r, g, b, and a doesn't look random to humans.</p>

<hr>

<p>P.P.S.  There is a <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1240r0.pdf" rel="nofollow noreferrer">proposal</a> to add something like this:</p>

<pre><code>_color color;
for... (auto&amp; component : std::meta::members(color)) {
    // do stuff with component
}
</code></pre>

<p>I haven't followed this proposal but it sounds like it would help here.</p>
    </div>