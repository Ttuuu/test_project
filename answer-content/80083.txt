<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>Correctness</strong></p>

<p>My first point is that the current date is accepted as a valid future date. That is odd, and it is certainly not according to : </p>

<blockquote>
  <p>Tests whether the date input represents  a real date in mm/dd/YYYY
  format that is after the current date.</p>
</blockquote>

<p><strong>Simplicity</strong></p>

<p>Secondly, assuming the current date should return false, the entire implementation can be as simple as : </p>

<pre><code>public static boolean isValidDate(String pDateString) throws ParseException {
        Date date = new SimpleDateFormat("MM/dd/yyyy").parse(pDateString);
        return new Date().before(date);
}
</code></pre>

<p><strong>Testable</strong></p>

<p>Lastly, this method is difficult to test. Does it work when now falls in a DST overlap period? Does it work on 29th of February? Does it work in the time zone <strong>"Australia/Darwin"</strong>?</p>

<p>While you may not use <strong>Java 8</strong>, you can certainly make a <a href="https://docs.oracle.com/javase/8/docs/api/java/time/Clock.html" rel="nofollow noreferrer"><code>Clock</code></a> abstraction of your own to get around this.</p>
    </div>