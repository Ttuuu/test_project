<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h3>Review</h3>

<p>I'm not a big fan of importing other libraries when a built-in alternative is available.</p>

<blockquote>
<pre><code>const R = require('ramda')
</code></pre>
</blockquote>

<p><code>R.keys</code> could be replaced by <code>Object.keys</code>:</p>

<pre><code>const associatedNumber = Object.keys(heightsMap)
  .filter(key =&gt; heightsMap[key]
  .includes(height))[0]
</code></pre>

<p>Two improvements can be made. First, you're using <code>filter</code> which iterates all elements. This is a pity, since you're only interested in the first item <code>[0]</code>. <code>Find</code> is the method you were looking for. Second, You're traversing keys to perform another lookup <code>heightsMap[key]</code>. This could be done in a single iteration using <code>Object.entries</code>.</p>

<h3>Proposed Rewrite</h3>

<pre><code>const associatedNumber = Object.entries(heightsMap)
  .find(([key, value]) =&gt; value.includes(height))[0];

console.log(associatedNumber);
</code></pre>

<p>Note that <code>[0]</code> in the refactored code gets the <code>key</code> of <code>[key, value]</code>.</p>
    </div>