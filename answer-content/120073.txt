<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Creating an <code>insert()</code> method is a good idea when working with DBI so you can reduce redundant code and standardize (or omit) your error handling.</p>

<h1>use arrays</h1>

<p>If you use arrays to store your fields and placeholders you can save yourself some trouble.  Your declaration can become:</p>

<pre><code>my(@sql_fields,@sql_values);
</code></pre>

<p>and the loop is simplified to:</p>

<pre><code>while (my ($field, $value) = each %$data) {
    push(@sql_fields,$field);
    push(@sql_values,$value);
}
</code></pre>

<p>and now we can <code>join</code> those back together:</p>

<pre><code>my $sql_fields = join(",", @sql_fields);
</code></pre>

<p>and since we have the same number of placeholders as fields we can create that without an extra array:</p>

<pre><code>my $sql_placeholders = join(",", map {"?"} @sql_fields);
</code></pre>

<p>which leads to a few tweaks on your prepare:</p>

<pre><code>$dbh-&gt;prepare("INSERT INTO $table ($sql_fields) VALUES ($sql_placeholders)")-&gt;execute(@sql_values);
</code></pre>

<h1>error checking</h1>

<p>I hope you also take some time to check for potential errors.  Maybe the disk is full.  Maybe a field gets renamed.  Providing useful diagnostics for those sorts of things would be a good idea.  Some errors could be handled without hitting the database, like avoiding invalid characters in field names.</p>
    </div>