<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Regular expressions make your life really easy when solving such exercises:</p>

<pre><code>public static String withoutString(String base, String remove) {
    return Pattern.compile(Pattern.quote(remove), Pattern.CASE_INSENSITIVE).matcher(base).replaceAll("");
}
</code></pre>

<p>I explain this code a little:</p>

<ol>
<li><code>Pattern.compile(Pattern.quote(remove), Pattern.CASE_INSENSITIVE)</code>: Creates a regular expression pattern containing the string you want to have removed. <code>Pattern.quote(remove)</code> takes care of special characters that may be interpreted as a regular expression (such as: <code>*, \, +, (), [] etc.</code>). The flag <code>Pattern.CASE_INSENSITIVE</code> makes sure, that the case of the characters don't matter.</li>
<li><code>.matcher(base)</code>: returns a <code>Matcher</code> that holds all matches of the regular expression in the string <code>base</code>.</li>
<li><code>.replaceAll("");</code>: replaces all matches that have been found with an empty string, effectively removing them.</li>
</ol>

<p>You may have noticed, that I made this method <code>static</code> because it does not access any fields or methods that are non-static. This is always advised unless it really needs to be non-static for some reason.</p>
    </div>