<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>Heslacher</code> and <code>Henrik Hansen</code> have given you good insights. In your case, <code>Replace</code> would be more appropriate to use as <code>Henrik Hansen</code> pointed out. The only addition that I would add is you can use <code>Linq</code> to do the same : </p>

<pre><code>var result = items.Select(item =&gt; string.Format("{0} Car", item.ChildName.Replace(item.Name, string.Empty).Trim())).ToList();
</code></pre>

<p>and also <code>string.Join()</code> if you want it to concatenating the results. 
Example : </p>

<pre><code>Console.WriteLine(string.Join("\n", result));
</code></pre>

<p>the <code>\n</code> means new line. you can use any separator such as comma or space if you like.</p>

<p>Also, while I liked the <code>AlsoAdd</code> extension (thank you for this, I've now a new Idea to be implemented ;) ), I don't know why you re-doing what is already shipped with .NET! As you can do this : </p>

<pre><code>List&lt;Item&gt; items = new List&lt;Item&gt;
{
    new Item { Id = 1, Name = "Audi", ChildName = "Audi A3 Premium Plus" },
    new Item { Id = 2, Name = "Audi", ChildName = "Audi A5 Premium Plus"},
    new Item { Id = 1, Name = "Audi", ChildName = "Audi A6 Premium Plus 55 TFSI quattro"},
    new Item { Id = 2, Name = "Audi", ChildName = "S5 Premium Plus 3.0 TFSI quattro"},
    new Item { Id = 2, Name = "Audi", ChildName = "S3 Premium Plus 3.0 TFSI quattro"}
};
</code></pre>

<p>which is a ready to use shortcut in .NET ! </p>

<p>Hope this would be helpful.</p>
    </div>