<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>As others have said the your function <code>palindrome</code> does not explain
what is does by its name nor by the non existing comments, this can
<em>partly</em> be overcome by splitting the function in multiple functions
with more descriptive names.</p></li>
<li><p>Instead of the <code>append</code> and <code>insert</code> methods of lists it might be
clearer to use list concatenations with the + operator.</p></li>
<li><p>Sometimes a loop for creating lists can be more clearer with a
list comprehension.</p></li>
</ul>

<p>Keeping those in mind, my rewrite of your code:</p>

<pre><code># a palindrome in this context is a list of lists of chars which is
# highly symetrical, for instance :
# [['b', 'b', 'b'], ['b', 'a', 'b'], ['b', 'b', 'b']]

def expand_palindrome(palindrome, ch):
    n = len(palindrome)
    top_and_bottom = [[ch] * (n + 2)]
    middle_part = [[ch] + row + [ch] for row in palindrome]
    return top_and_bottom + middle_part + top_and_bottom

def create_number_palindrome(n):
    assert(n &lt; 10)
    assert(n &gt; 0)
    palindrome = [['0']]
    for i in range(n):
        palindrome = expand_palindrome(palindrome, str(i+1))
    return palindrome

def palindrome_string(palindrome):
    return '\n'.join(''.join(row) for row in palindrome)

print(palindrome_string(create_number_palindrome(1)))
print(palindrome_string(create_number_palindrome(7)))
</code></pre>
    </div>