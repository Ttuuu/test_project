<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I'll make the following suggestions:</p>

<ul>
<li>Use <code>Scanner</code> for a slightly more convenient interface than <code>new BufferedReader(new InputStreamReader(…))</code>.</li>
<li>For readability, split up the work into
<ul>
<li>Input / output</li>
<li>Instantiating a cipher for parameter <em>K</em></li>
<li>Calculating how much to shift an individual letter</li>
<li>Applying the shift for an individual letter</li>
</ul></li>
<li>Use modulo arithmetic to eliminate special cases.</li>
<li>Print the result all at once as a <code>new String(…)</code>.</li>
<li>If you need to print an error message, print it to <code>System.err</code>, to avoid contaminating <code>System.out</code>, where it would be interpreted as legitimate output.</li>
</ul>

<h2>Suggested implementation</h2>

<pre><code>import java.util.Scanner;

public class BigBangCipher {
    private int k;

    public BigBangCipher(int k) {
        this.k = k;
    }

    /**
     * Shift for a character, given a 0-based index.
     */
    private int shift(int pos) {
        return 3 * (pos + 1) + this.k;
    }

    /**
     * Applies a Caesar cipher shift for an uppercase character.
     */
    private static char caesar(char c, int shift) {
        return (char)('A' + (c + shift - 'A' + 26) % 26);
    }

    public String decode(CharSequence cipherText) {
        char[] s = new char[cipherText.length()];
        for (int i = 0; i &lt; s.length; i++) {
            s[i] = caesar(cipherText.charAt(i), -this.shift(i));
        }
        return new String(s);
    }

    public static void main(String[] args) {
        try (Scanner in = new Scanner(System.in)) {
            int k = Integer.parseInt(in.nextLine());
            BigBangCipher cipher = new BigBangCipher(k);
            System.out.println(cipher.decode(in.nextLine()));
        }
    }
}
</code></pre>
    </div>