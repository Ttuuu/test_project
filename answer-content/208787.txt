<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>My solution arrives at the same and correct answer, but I think is easier to understand.</p>

<pre><code>public class SmallestMultiple {

public static void main(String [] args){

    boolean notFound = true;
    int base = 20, current = base;

    while(notFound){
        for(int i = base; i&gt;10; i--){
            if(current%i != 0){
                current=current+base;
                notFound = true;
                break;
            }else{
                notFound= false;
            }
        }           
    }
    System.out.println(current);    
}   
</code></pre>

<p>All you really are concerned with is 11 through the upper limit (in this case 20), as it is guaranteed that 2 through 10 are factors of some greater number (11 through 20), so there is no need to iterate over 2 through 10.</p>

<p>Also, the answer MUST be evenly divisible by the max (i.e. 20).. So, start iterating downward from there, AND the first iteration that fails, simply stop and increase the potential answer by adding the base value (i.e. 20) to it, as this is guaranteed to also be evenly divisible by the max (i.e. 20) and you can start the iteration process over again from there. Simply keep repeating this until all values 11 through 20 evenly divide into the current value, and that value will be your answer.</p>
    </div>