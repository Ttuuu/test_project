<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In addition to a lot of other answers, it's worth noting the bonus logic can be simplified. We don't have to strictly adhere to the written version if we can find a logical equivalent:</p>

<blockquote>
  <p>1000 pts for 3 ones</p>
  
  <p>100 pts for 1 one (not included in the upper rule)</p>
</blockquote>

<p>is equivalent to</p>

<blockquote>
  <p>100 pts per one</p>
  
  <p>700 pts if 3 or more ones</p>
</blockquote>

<p>Which means</p>

<pre><code>if (cnt[1] == 3)
    {
        ret += 1000;
    }
    if (cnt[1] == 2)
    {
        ret += 200;
    }
    if (cnt[1] == 1)
    {
        ret += 100;
    }
    if (cnt[1] == 4)
    {
        ret += 1100;
    }
    if (cnt[1] == 5)
    {
        ret += 1200;
    }
</code></pre>

<p>can be simplified to</p>

<pre><code>ret += 100 * cnt[1] + 700 * (cnt[1] / 3)  # Note this will not support more than 5 dice
</code></pre>

<p>Fives can likewise be simplified and for the other numbers, using integer division we can reduce our summation logic from 56 lines to 6, and it should be clearer what is happening to boot:</p>

<pre><code># sum score per number count - Note this will not support more than 5 dice
ret += 700 * (cnt[1] / 3) + 100 * cnt[1]  
ret += 200 * (cnt[2] / 3)
ret += 300 * (cnt[3] / 3)
ret += 400 * (cnt[4] / 3)
ret += 350 * (cnt[5] / 3) + 50 * cnt[5]
ret += 600 * (cnt[6] / 3)
</code></pre>

<p>Alternatively, we can recognize that the bonus we get is 100 * the die roll for every die except 1, and use that logic:</p>

<pre><code>ret += 900 * (cnt[1] / 3);  # Adjustment because 1s give 1000 pts, not 100

# For each value, if 3+ rolled add 100 * value
for (int i = 1; i &lt;= 6; i++){
  if (cnt[i] / 3){
    ret += 100 * i;
    cnt[i] -= 3;
  }
}

# Add individual die score
ret += cnt[1] * 100;
ret += cnt[5] * 50;
</code></pre>
    </div>