<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First I'll say that it's very impressive for you to have gotten this working and with mostly reasonable methods, given one weeks' experience.</p>

<h2>Range usage</h2>

<pre><code>ID=[0,1,2,3,4,5,6,7,8,9]
</code></pre>

<p>can be</p>

<pre><code>ID = list(range(10))
</code></pre>

<h2>No-op function</h2>

<p>Based on what you've shown us, <code>nothing</code> does, well... nothing. It can be deleted.</p>

<h2>Formatting</h2>

<p>There's a code formatting standard called PEP8 that attempts to make Python code more legible, mostly by defining spacing. Software such as PyCharm or the various linters will suggest that</p>

<ul>
<li>You should have spaces around <code>=</code> in assignments such as <code>mask=np.zeros_like(img)</code></li>
<li>Variable names like <code>channelcount</code> should be <code>channel_count</code></li>
<li>There should be a space after <code>#</code> in comment lines</li>
<li>etc.</li>
</ul>

<h2>Tuple unpacking</h2>

<pre><code>_,frameCap1=cap.read()
</code></pre>

<p>This is fine. If you don't want to unpack, and you don't want to use the <code>_</code>, you could also</p>

<pre><code>frameCap1 = cap.read()[1]
</code></pre>

<p>The same applies to your <code>threshold</code> calls.</p>

<h2>Boolean comparison</h2>

<pre><code>if check == False:
</code></pre>

<p>should be</p>

<pre><code>if not check:
</code></pre>

<p>Similarly,</p>

<pre><code>while cleaned==False:
</code></pre>

<p>should be</p>

<pre><code>while not cleaned:
</code></pre>

<p>This:</p>

<pre><code>if movement==True:
</code></pre>

<p>should be</p>

<pre><code>if movement:
</code></pre>

<h2>No-op continue</h2>

<p>This loop:</p>

<pre><code>for contour in contours:
    if cv2.contourArea(contour)&lt;1350 or cv2.contourArea(contour)&gt;3500:
        continue
    #cv2.rectangle(frame,(x,y), (x+w,y+h),(0,255,0),2)
    (x,y,w,h)=cv2.boundingRect(contour)
    moveBox.append([x,y,w,h])
    movement=True
    continue
</code></pre>

<p>does not need a <code>continue</code> at the end; you can delete that.</p>

<h2>Except-or-break</h2>

<p>This loop:</p>

<pre><code>#remove dead IDs
cleaned=False
while cleaned==False:
    try:
        TrackList.remove(None)
    except ValueError:
        cleaned=True
</code></pre>

<p>shouldn't use a termination flag. Instead:</p>

<pre><code>while True:
   try:
      TrackList.remove(None)
   except ValueError:
      break
</code></pre>

<h2>Magic numbers</h2>

<p>They abound in this program. Rather than writing literals like <code>3500</code>, you should assign them to named constants for legibility's sake, e.g.</p>

<pre><code>MAX_CONTOUR = 3500
</code></pre>
    </div>