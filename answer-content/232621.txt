<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>This is the improvement I ended up making for anyone interested.</h2>

<p><strong>Old code:</strong></p>

<pre><code>std::vector&lt;std::vector&lt;cv::Point&gt; &gt; contours;

int blobX; //Need to be int cannnot be Point2f
int blobY;

findContours( frame, contours, cv::RETR_TREE, cv::CHAIN_APPROX_SIMPLE, cv::Point(0, 0) );

// Get the moments
mu.reserve(contours.size());
for( int i = 0; i &lt; contours.size(); i++ )
{ mu[i] = moments( contours[i], false ); }

// Get the mass centers:
std::vector&lt;cv::Point2f&gt; mc( contours.size() );
for( int i = 0; i &lt; contours.size(); i++ )
{ mc[i] = cv::Point2f( mu[i].m10/mu[i].m00 , mu[i].m01/mu[i].m00 ); }

int largestContour = getMaxAreaContourId(contours, imageSize); //Finds largest contour
blobX = mc[largestContour].x;
blobY = mc[largestContour].y;
</code></pre>

<p><strong>New code:</strong></p>

<pre><code>std::vector&lt;std::vector&lt;cv::Point&gt; &gt; contours;

int blobX; //Need to be int cannnot be Point2f
int blobY;

findContours( frame, contours, cv::RETR_TREE, cv::CHAIN_APPROX_SIMPLE, cv::Point(0, 0) );

int largestContour = getMaxAreaContourId(contours, imageSize); //Finds largest contour
cv::Moments mu;
mu = moments( contours[largestContour], false );
blobX = mu.m10/mu.m00;
blolbY = mu.m01/mu.m00;
</code></pre>
    </div>