<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Since you want to return a dictionary, you can simplify things by putting the keys in an array.  Now the you can reduce the logic to one line of chained LINQ statements:</p>

<pre><code>Dictionary&lt;string, bool&gt; CheckNullsSectionsVisibility(Dictionary&lt;string, bool&gt; dictionary)
{
    var keys = new string[] { "Summary", "Backlog", "MoreDetails" };
    bool value = false;
    return keys.Select(x =&gt; new { key = x, value = dictionary
                                 .TryGetValue(x, out value) ? value : true })
                                 .ToDictionary(x =&gt; x.key, x =&gt; x.value);
}
</code></pre>

<p>If there is a possibility of using a different set of keys you can pass the string array in to the method:</p>

<pre><code>Dictionary&lt;string, bool&gt; CheckNullsSectionsVisibility(Dictionary&lt;string, bool&gt; dictionary, string[] keysToCheck)
{
    bool value = false;
    return keysToCheck.Select(x =&gt; new { key = x, value = dictionary
                                        .TryGetValue(x, out value) ? value : true })
                                        .ToDictionary(x =&gt; x.key, x =&gt; x.value);
}
</code></pre>
    </div>