<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One of things about the solutions presented so far, is they all require iterating over all the elements at least once.</p>
<p>Using an iterative approach allows you to short circuit the loop when the unique item is found.  something like this would work:</p>
<pre><code>def find_uniq(arr):
    for i in range(len(arr)-1):
        if arr[i] != arr[i+1]:
            if i == 0 and arr[i] != arr[i + 2]:
                return arr[i]
            return arr[i + 1]]
</code></pre>
<p>Did some thinking and came up with an optimization which improves the time considerably:</p>
<pre><code>def find_uniq(arr):
    for i in range(0,len(arr) - 1, 2):
        if arr[i] != arr[i+1]:
            if i == 0:
                if arr[i] != arr[i + 2]:
                    return arr[i]
                return arr[i + 1]
            else:
                if arr[i] != arr[i-1]:
                    return arr[i]
                return arr[i + 1]
    return arr[-1] 
</code></pre>
<p>The complexity of this in the worst case is O(n) the lengthy of the array - 1.</p>
    </div>