<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Changing comments to answer on OP request. I am not answering the direct question asked by OP but few comments about the overall architecture and design of there solution which may indirectly solve the issue OP is worried about, passing collections as parameters.</p>

<pre><code>IQuestionRepository questionService = Factory.CreateInstance&lt;QuestionRepository&gt;(); 
</code></pre>

<p>Light heartly, never ever create an object from repository and name it a service, it makes code confusing for people me like who following onion architecture as show below,</p>

<p><a href="https://i.stack.imgur.com/otnyn.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/otnyn.png" alt="enter image description here"></a></p>

<p>Also in C# usually objects are initialled together WHEN you are only initiating them for calling a single function or maybe 2 and there is no risk of memory leak, it also makes code more readable. Did you thought about using DI ? </p>

<pre><code>   IQuestionRepository questionService = Factory.CreateInstance&lt;QuestionRepository&gt;();
   IAnswerRepository answerService = Factory.CreateInstance&lt;AnswerRepository&gt;();
   IQuestionAnswerRepository questionAnswerRepository = Factory.CreateInstance&lt;QuestionAnswerRepository&gt;();
   ICountPlayerScoreBySum playerScores = Factory.CreateInstance&lt;CountPlayerScoreBySumService&gt;();

   var possibleAnswers = answerService.GetPossibleAnswers(questions);
   var questions = questionService.GetQuestions();
   var playerAnswers = GetPlayerAnswers(questions, possibleAnswers);
   var correctAnswers = questionAnswerRepository.GetCorrectAnswers(questions);
   var playerScore = playerScores.CountPlayerScoreBySum(playerAnswers, correctAnswers);

   var winScoreString = ConfigurationManager.AppSettings.Get("WinScore");
   int winScore = 0;
   int.TryParse(winScoreString, out winScore);
</code></pre>

<p>Also sometimes abstraction is not a good thing, especially if there is no scope of scalling program in future. Do you have any ERD for your this app ? Your quiz app doesn't seems relational when it could be a good candidate - here's an example ERD I picked up from internet,</p>

<p><a href="https://i.stack.imgur.com/qcSP6.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/qcSP6.jpg" alt="enter image description here"></a> </p>
    </div>