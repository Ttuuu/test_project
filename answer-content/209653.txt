<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here is my analysis:</p>
<ul>
<li>Well formatted</li>
<li>Both backwards and forwards compatible</li>
<li>Has both block and inline comments</li>
</ul>
<blockquote>
<p>The only thing would be wary of is the <code>margin: 0</code> on the <code>html, body</code> selector may not work as expected on newer iPhones to <a href="https://webkit.org/blog/7929/designing-websites-for-iphone-x/" rel="nofollow noreferrer">Safari's new behavior</a>:</p>
<p>Out of the box, Safari displays your existing websites beautifully on the edge-to-edge display of the new iPhone X. Content is automatically inset within the display’s safe area so it is not obscured by the rounded corners, or the device’s sensor housing.</p>
<p>The inset area is filled with the page's background-color (as specified on the <code>&lt;body&gt;</code> or <code>&lt;html&gt;</code> elements) to blend in with the rest of the page. For many websites, this is enough. If your page has only text and images above a solid background color, the default insets will look great.</p>
<p>The first new feature is an extension to the existing <code>viewport</code> meta tag called <code>viewport-fit</code>, which provides control over the insetting behavior. <code>viewport-fit</code> is available in iOS 11.</p>
<p>The default value of <code>viewport-fit</code> is <code>auto</code>, which results in the automatic insetting behavior seen above. In order to disable that behavior and cause the page to lay out to the full size of the screen, you can set <code>viewport-fit</code> to cover. After doing so, our <code>viewport</code> meta tag now looks like this:</p>
</blockquote>
<pre><code>&lt;meta name='viewport' content='initial-scale=1, viewport-fit=cover'&gt;
</code></pre>
    </div>