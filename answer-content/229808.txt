<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>You could use <a href="https://doc.rust-lang.org/rust-by-example/fn/closures/closure_examples/iter_any.html" rel="nofollow noreferrer">Iterator:any</a> to write this in a succinct way:</p>

<pre><code>fn string_ends_with_any(s: String, suffixes: Vec&lt;&amp;str&gt;) -&gt; bool {
    return suffixes.iter().any(|&amp;suffix| s.ends_with(suffix));
}
</code></pre>

<p>Because this pattern returns true on first match of the predicate:</p>

<blockquote>
<pre><code>for suffix in &amp;suffixes {
    if s.ends_with(suffix) {
        return true;
    }
}
false
</code></pre>
</blockquote>

<p>Whether this is <em>rustacious</em> remains to be seen. I'm by no means an expert in Rust.</p>
    </div>