<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><code>feilds</code> is spelled <code>fields</code>. IDEs like PyCharm will identify spelling mistakes in variables.</p>

<p>Why is there a <code>?</code> after the space in your regex? Currently I believe it will pass input looking like</p>

<pre><code>key,1key,2key,3
</code></pre>

<p>So you have to fix that edge case, probably by adding a final key-value pair with no space, and making the space in the first group mandatory.</p>

<p>This:</p>

<pre><code>vals = dict([feild.split(",") for feild in feilds.split(" ")])
for k, v in vals.items():
    vals[k] = int(v)
</code></pre>

<p>should be</p>

<pre><code>vals = {k: int(v)
        for field in fields.split(' ')
        for k, v in field.split(',')}
</code></pre>

<p>i.e. don't construct a list in memory only to throw it away.</p>

<p>This:</p>

<pre><code>spacing = int(width / len(vals.keys()))
</code></pre>

<p>can be</p>

<pre><code>spacing = width // len(vals)
</code></pre>

<p>This:</p>

<pre><code>for x in reversed(range(len(max(horizontal, key=len)))):
</code></pre>

<p>doesn't actually need an index at all, since you don't use it. Also, lumping everything into one line is confusing. Instead:</p>

<pre><code>longest_horz = max(len(h) for h in horz)
for v in val[longest_horz-1::-1]:
</code></pre>

<p>Then use <code>v</code> instead of <code>val[x]</code>.</p>
    </div>