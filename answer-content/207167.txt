<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Generally it looks really good to me. One thing that stuck out to me was that you have a lot of repeated code:</p>

<pre><code>for option in menu_options:
    option.draw()

    if option.rect.collidepoint(pygame.mouse.get_pos()):
        option.hovered = True

        if option == menu_options[0]:
            for event in ev:
                if event.type == pygame.MOUSEBUTTONUP:
                    selected_option = options['PLAY']
        elif option == menu_options[1]:
            for event in ev:
                if event.type == pygame.MOUSEBUTTONUP:
                    selected_option = options['BENCHMARK']
        elif option == menu_options[2]:
            for event in ev:
                if event.type == pygame.MOUSEBUTTONUP:
                    selected_option = options['LEADERBOARDS']
        elif option == menu_options[3]:
            for event in ev:
                if event.type == pygame.MOUSEBUTTONUP:
</code></pre>

<p>I would shorten it to:</p>

<pre><code> list_options = ['PLAY', 'BENCHMARK', 'LEADERBOARDS', 'QUIT']

 for i in range(len(menu_options)):
     option = menu_options[i]
     option.draw()

     if option.rect.collidepoint(pygame.mouse.get_pos()):
         option.hovered = True

         for event in ev:
             if event.type == pygame.MOUSEBUTTONUP:
                 selected_option = options[list_option[i]]
</code></pre>

<p>Personally I would also change the order so it only loops over the events once and breaking the loop once a new selected option has been found (assuming only one option can be selected at a time) to save time:</p>

<pre><code> mouse_up = False
 for event in ev:
      if event.type == pygame.MOUSEBUTTONUP:
           mouse_up = True
           break

 list_options = ['PLAY', 'BENCHMARK', 'LEADERBOARDS', 'QUIT']     

 for i in range(len(menu_options)):
      option = menu_options[i]
      option.draw()

     if option.rect.collidepoint(pygame.mouse.get_pos()):
         option.hovered = True
         if mouse_up:
             selected_option = options[list_option[i]]
             break
</code></pre>

<p>I see quite a number of pieces of code which are re-used which could be shortened, for instance by creating one function and calling it several times, or looping over a dictionary and calling it's variables. This should result in a lot less code.</p>
    </div>