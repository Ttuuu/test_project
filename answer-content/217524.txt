<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>One thing that stood out for me is that you’re doing multiple HTTP calls to the same end-point during the <code>constructFromApiResponse</code> when you could just do one, i.e.</p>

<pre><code>this.getSpecies().then(resp =&gt; new Pokemon({
  growthRate: resp.growth_rate.name
  , catchRate: resp.capture_rate.name
  , baseStats: resp.stats.reduce((acc, {base_stat, stat: {name}}) =&gt; {
    acc[name] = base_stat
    return acc
  }, {exp: resp.base_experience}) // just an example of property conversion
  , // etc.
})
</code></pre>

<p>One should always strive for minimizing the number of HTTP calls.</p>

<p>Also I would consider using the same constructor for both, from HTTP and local, and doing the property conversions for HTTP in there.</p>

<p>Speaking of properties, there are other options in case you’re interested. One is a method:</p>

<pre><code>// inside class definition
hp() { this.baseStats.hp * this.level }
</code></pre>

<p>and another is a getter:</p>

<pre><code>get hp() { this.baseStats.hp * this.level }
</code></pre>

<p>where the former needs to be executed (<code>poke.hp()</code>), while the latter acts more like a computed property (<code>poke.hp</code>). Though neither wouldn’t get serialized into JSON.</p>
    </div>