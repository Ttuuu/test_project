<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Because the question is about <strong>performance</strong> and <strong>efficiency</strong> that's why some sort of benchmarking would be essential to compare different implementations. I have found <a href="https://www.nuget.org/packages/BenchmarkDotNet/" rel="noreferrer">BenckmarkDotNet</a> really useful for these kind of experiments. </p>

<p>You can define the for loop version as your <strong>baseline</strong> and the tool will compare the other implementation against that. Here is my simplified example how to setup your environment for measurement:</p>

<pre><code>[HtmlExporter]
[MemoryDiagnoser]
[SimpleJob(BenchmarkDotNet.Engines.RunStrategy.ColdStart, targetCount: 100)]
public class IterationOptimalizationExperiment
{
    private static List&lt;Data&gt; target;
    private const string TheOne = "TheOne";

    [GlobalSetup]
    public void Setup()
    {
        target = Enumerable.Range(0, 10000)
            .Select(i =&gt; new Data { Id = i, Type = i % 7777 == 0 ? TheOne : "NotTheOne" })
            .ToList();
    }

    [Benchmark(Baseline = true)]
    public void WithFor()
    {
        bool hasFound = false;
        for (int i = 0; i &lt; target.Count; i++)
            if (string.Equals(target[i].Type, TheOne, StringComparison.OrdinalIgnoreCase))
            {
                hasFound = true;
                break;
            }

    }

    [Benchmark]
    public void WithForEach()
    {
        bool hasFound = false;
        foreach (var t in target)
            if (string.Equals(t.Type, TheOne, StringComparison.OrdinalIgnoreCase))
            {
                hasFound = true;
                break;
            }
    }

    [Benchmark]
    public void WithAny()
    {
        bool hasFound = target.Any(t =&gt; string.Equals(t.Type, TheOne, StringComparison.OrdinalIgnoreCase));
    }
}
</code></pre>

<p>And you should simply call the following command to start your experiment: <code>BenchmarkRunner.Run&lt;IterationOptimalizationExperiment&gt;();</code></p>

<p>When you run it in Release mode it will dump something like this:
<a href="https://i.stack.imgur.com/o6GnN.png" rel="noreferrer"><img src="https://i.stack.imgur.com/o6GnN.png" alt="enter image description here"></a></p>
    </div>