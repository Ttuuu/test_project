<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I do not endorse recursion when a clean and simple iterative iterative solution is readily available. You did the right thing.</p>

<p>The only problem I have is with <code>compareAndPick</code> implementation. First, <code>rightChild</code> is not tested against <code>capacity</code>, and may cause an out-of-bounds access. Second, testing <code>elements[rightChild]</code> against <code>null</code> looks too late (how does <code>compareTo(null)</code> behave?). Finally, there is really no need to test both an index against <code>capacity</code> and an object against nullness: <code>index &lt; size</code> guarantees both.</p>

<p>You may consider renaming <code>compareAndPick</code> to <code>selectSmallestChild</code> (and <code>choice</code> to <code>child</code>).</p>

<p>Also, I recommend to leave the children computation to <code>compareAndPick</code>, and have a terser version of <code>bubbleDown</code> loop:</p>

<pre><code>    while ((child = selectSmallestChild(parent)) != -1) {
        swap(child, parent);
        parent = child;
    }
</code></pre>
    </div>