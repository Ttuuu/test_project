<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Here are my comments:</p>

<h2>Apply the <a href="https://www.geeksforgeeks.org/visitor-design-pattern/" rel="nofollow noreferrer">Visitor Design Pattern</a></h2>

<p>There are several methods that perform similar process: recursively traverse the tree, and perform specific action on each node. (insert(), search(), write to file(), etc) this is a good fit for the visitor design pattern. In short, this pattern defines how you can implement the traversal of the tree in one place, and have it work with multiple operations on individual nodes. </p>

<h2>Observe the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">Single Responsibility Principle</a></h2>

<p><code>addContact()</code> in the Contact class is responsible for getting a contact from user input from the console, or read a contact from a file. it further carries some elaborate and fairly complex validation rules.  now what will happen when you want to read a contact from a database? or have a nice html form for user input? what if you wish to support foreign telephone numbers, where the placement of a dash can vary?</p>

<h2>Avoid literals (a.k.a <a href="https://stackoverflow.com/questions/47882/what-is-a-magic-number-and-why-is-it-bad">magic numbers</a>)</h2>

<p>while we are on the subject of telephone number validation: I do not know exactly why, but regex that validates telephone number is specified twice. now imagine that you find a bug in the regex. it is possible you will fix it in one place and forget to fix in the other. the principal also applies to user choice menu, what if you wish to add another choice? will you keep the ordering? what if you wish to change the choices from numbers to letters "a" through "f"?</p>

<h2><code>Comparable</code> and <code>Comparator</code></h2>

<p>When if you will want to store objects that are not <code>Comparable</code> in your spiffy binary tree? what if you will want to give the user an option of choosing whether the contacts will be sorted by number <em>first</em>, then by name? or perhaps the user wil have favorite contacts that will want to sort out first? for this wealth of options to be supported, you will want to have an overloaded insert() and search() that accept a comparator. this is analogous to the JDK <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#sort(java.util.List)" rel="nofollow noreferrer"><code>Collections.sort()</code></a> having an overloaded option that accepts a comparator.</p>

<p>lastly,</p>

<h2>Observe naming conventions</h2>

<p>The Java collections (your tree can be regarded as a collection) are parameterized with the generic <code>T</code> that is short for <code>Type</code>. The <code>Map</code> collection is parameterized with <code>K</code> and <code>V</code> . why did you choose <code>F</code> as the generic symbol? it is confusing for the programmer who is aware of the naming conventions. observing these conventions establishes a common language between Java developers and helps communication between them.</p>
    </div>