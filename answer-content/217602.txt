<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Interview questions are almost always meant to evaluate you by the clarifying questions you ask.</p>

<p>In this case, what data structures were you allowed to use beyond the arrays? Clearly something was allowed, since the requirement for queue and dequeue methods implicitly allow a class to be used. But was the Queue class allowed to contain auxiliary classes?</p>

<p>If not, the solution calls for the queue to be an <code>Object[5]</code> where the fifth element, when not null, is the next <code>Object[5]</code>.</p>

<ul>
<li>Requirement said arrays, not ArrayLists.</li>
<li>The requirement did not specify the type so a generic type should have been used instead of assuming integers are ok.</li>
<li>Use of primitive types and lack of exceptions means you're limited to positive numbers, as half of the valid value range has been used for errors.</li>
<li>You have copy-pasted the sub-array initialization code twice. That should have been a shared method.</li>
<li>When dequeueing, you leave the empty sub-arrays in the outer list, forcing you to perform an O(N) search to find the first element. Should have just removed the empty sub-arrays and gone for the O(1) operation of getting the first element from the first sub-array.</li>
<li>The check for <code>array.isEmpty()</code> in dequeue is redundant and adds a third exit point for that method.</li>
</ul>

<p>Edit: I was thrown off by the for-loop in the dequeue method. Fixed my answer.</p>
    </div>