<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In regards to security for yourself, I would be using <code>filter_var()</code> to sanitize any input strings. Mainly the name and text inputs; If its a major concern or for your own sanity you could go as far as adding a <code>preg_match($regex, $string)</code> condition to check for characters you just don't want in those inputs.  </p>

<p>For your passwords and user security I strongly recommend using <code>password_hash()</code> before sending them, and <code>password_verify()</code> to check them the user password against the hash you receive back. Its relatively simple to use and is pretty much the best way to handle passwords in php. </p>

<p>I wouldn't get too involved unless you REALLY know what you are doing with password hashes, I suggest just sticking with the <code>PASSWORD_DEFAULT</code> algorithm. Then for comparison you just receive the hash and compare it against the users password input inside the <code>password_verify()</code> function. You won't have to worry about escaping user input with these as far as I'm aware.</p>

<p>Just to be clear on the <code>password_hash()</code>, you only hash it one time before it gets sent to the database, you do not hash the password when you use the verify function, you just check the plain password input against the hash you received from the database. </p>

<p>In an absolute quick way to show you how here's an example; in the top we create the hash and then you store it however you want.  Then in the bottom example you get that hash and check it against a post of the password.</p>

<p><strong>Create a Password Hash</strong></p>

<pre><code>$password = password_hash($_POST['password'], PASSWORD_DEFAULT);

// Send $password
</code></pre>

<p><strong>Receive &amp; Verify the Hash</strong></p>

<pre><code>$password = $_POST['password'];
$hash = // Receive password hash from earlier

if(password_verify($password, $hash)){
 // TRUE
}else{
 // FALSE
}
</code></pre>
    </div>