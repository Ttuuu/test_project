<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In addition to the other answers, I'd add a couple of things:  </p>

<p>• <code>size</code> is only used in one place. You can just put the number there rather than the macro. It should also be considerably larger than 30. Consider that <code>find /home/user/Desktop/directory</code> is already too long, and that's not even considering long pipelines and loops.<br>
• In addition, you should perform checking that the command entered is not too long. As it is now, you run the apparent risk of <a href="https://en.wikipedia.org/wiki/Buffer_overflow" rel="nofollow noreferrer">buffer overflow</a>. Even if you protect against that by means of copying a maximum of <code>n</code> bytes, there is still a possible bug that can cause serious problems. If one were to enter <code>rm -Pdrf --no-preserve-root /tmp</code> into their terminal, it would overwrite and delete everything in <code>/tmp</code> as well as deleting <code>/tmp</code> itself. Great. But what if you only executed 30 bytes of that? You'd be left with <code>rm -Pdrf --no-preserve-root /</code> and a really bad day.<br>
• As a matter of personal preference, I would separate <code>if (pid == -1)</code> from the chain of <code>if - else if - else</code>. If you return -1, you're not executing any of the other code, so it can be rewritten as</p>

<pre><code>if (pid == -1)
    return -1;
if (pid == 0) //some say (!pid)
    ...
else
    ...
</code></pre>

<p>• Finally, I'd prefer to see command in <code>get_command()</code> be declared globally at the top of the file or, better, <code>malloc()</code>ed since you're returning the pointer anyway.</p>
    </div>