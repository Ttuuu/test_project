<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Without touching your HTML markup... The use of <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors" rel="nofollow noreferrer">attribute selector</a> would help achieve this.</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>$("[class^='remove-form-']").on("click", function() {
  $(this).parents("[id^='form']").hide();
});</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"&gt;&lt;/script&gt;

&lt;div id="form-0"&gt;
  &lt;a class="remove-form-0"&gt;X&lt;/a&gt; form 0
&lt;/div&gt;

&lt;div id="form-1"&gt;
  &lt;a class="remove-form-1"&gt;X&lt;/a&gt; form 1
&lt;/div&gt;

&lt;div id="form-2"&gt;
  &lt;a class="remove-form-2"&gt;X&lt;/a&gt; form 2
&lt;/div&gt;

&lt;div id="form-3"&gt;
  &lt;a class="remove-form-3"&gt;X&lt;/a&gt; form 3
&lt;/div&gt;</code></pre>
</div>
</div>


<p></p><hr>
<strong>Alternative:</strong>

<p>Instead of having a different class for each remove icon, I would use a single class... And same for the forms.</p>

<p>It is exactly the same result... But the way to lookup elements is different... And makes the code a bit more readable.</p>

<p>Notice that I left the original class/id there... In case it's already used elsewhere. The fun with classes is you can have many.</p>

<p>That would be:</p>

<p></p><div class="snippet" data-lang="js" data-hide="true" data-console="true" data-babel="false">
<div class="snippet-code snippet-currently-hidden">
<pre class="snippet-code-js lang-js prettyprint-override"><code>$(".remove").on("click", function() {
  $(this).parents(".form").hide();
});</code></pre>
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"&gt;&lt;/script&gt;

&lt;div id="form-0" class="form"&gt;
  &lt;a class="remove-form-0 remove"&gt;X&lt;/a&gt; form 0
&lt;/div&gt;

&lt;div id="form-1" class="form"&gt;
  &lt;a class="remove-form-1 remove"&gt;X&lt;/a&gt; form 1
&lt;/div&gt;

&lt;div id="form-2" class="form"&gt;
  &lt;a class="remove-form-2 remove"&gt;X&lt;/a&gt; form 2
&lt;/div&gt;

&lt;div id="form-3" class="form"&gt;
  &lt;a class="remove-form-3 remove"&gt;X&lt;/a&gt; form 3
&lt;/div&gt;</code></pre>
</div>
</div>


<p></p><hr>
<strong>In both cases</strong>

<p>Depending on your structure... To <em>traverse</em> the DOM elements from <code>$(this)</code>, you may prefer to use <a href="https://api.jquery.com/closest/" rel="nofollow noreferrer"><code>.closest()</code></a>, <a href="https://api.jquery.com/parent/" rel="nofollow noreferrer"><code>.parent</code></a> or <a href="https://api.jquery.com/parents/" rel="nofollow noreferrer"><code>parents</code></a>. Your choice.</p>
    </div>