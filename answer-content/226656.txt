<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li><p>I suggest you get a linter such as Prospector or flake8, this can tell if your code is un-Pythonic. Some people prefer hinters like black.</p>

<p>Your code doesn't conform to PEP 8 which is <em>the standard</em> when it comes to Python. Your comprehension is hard to read because it doesn't conform to best practices.</p></li>
<li><p>I'd recommend moving your code into a <code>main</code> function and use an <code>if __name__ == '__main__':</code> guard. This reduces global pollution and prevents your code from running accidentally.</p></li>
<li><p>When you see something like:</p>

<pre><code>if key in my_dict:
    my_dict[key] += value
else:
    my_dict[key] = default + value
</code></pre>

<p>Then you should probably use <code>dict.get</code> which can get the following code:</p>

<pre><code>my_dict[key] = my_dict.get(key, default) + value
</code></pre>

<p>In this case you can add more sugar by using <code>collections.defaultdict</code>, as it will default missing keys to 0.</p>

<pre><code>import collections

my_dict = collections.defaultdict(int)
my_dict[key] += 1
</code></pre></li>
<li><p>Don't use comprehensions with side effects, they're hard to understand and are better expressed as standard <code>for</code> loops. This is as the list you're making is absolutely pointless.</p></li>
<li>You can use <code>dict.items()</code> rather than your comprehension with <code>dict.keys()</code>.</li>
</ol>

<pre><code>import re
import collections


def main():
    with open('mailbox.txt') as mbox:
        ndict = collections.defaultdict(int)
        for line in mbox:
            domain = re.findall('From [^ ].*@([^ ]*)', line)
            if domain:
                ndict[domain[0]] += 1

        for item in sorted(ndict.items(), key=lambda x: x[1], reverse=True):
            print(item)


if __name__ == '__main__':
    main()
</code></pre>

<p>You can replace the majority of your code with <code>collections.Counter</code>.</p>

<pre><code>import re
import collections


def main():
    with open('mailbox.txt') as mbox:
        counts = collections.Counter(
            domain[0]
            for domain in re.findall('From [^ ].*@([^ ]*)', line)
            if domain
        )
        for item in counts.most_common():
            print(item)


if __name__ == '__main__':
    main()
</code></pre>
    </div>