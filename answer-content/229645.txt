<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>(It's me, once again, same review format)</p>
<h2>Readability</h2>
<ul>
<li>There are <strong>way too many</strong> comments in your code. Comments should explain why you do something when it's not already clear in the code. In my opinion, the less comments some code needs, the better it is. Also, considering your comments are formatted almost exactly as your code is, it is veerryyy confusing. So, you comments only when absolutely necessary. For example : If a variable declaration needs a comment, your variable isn't well named. <code>max</code> could be renamed <code>maxValueInCounters</code> or... something like that. You get the vibe.</li>
<li>Your variables should have better names. <code>index</code> doesn't mean much in this context. You could rename it <code>counterIndex</code>, for example.</li>
<li>I'm not a big fan of this format : <code>if ( blablabla )</code>, I think the standard is <code>if (blablabla)</code>. At least, you should try to be consistent in your style, because you sometimes have extra space sometimes not.</li>
</ul>
<h2>Algorithm</h2>
<ul>
<li>When can this happen <code>index &lt; N &amp;&amp; index &gt;= 0</code>? We already checked the scenario where <code>index == setAllCountersOp</code>, so in that case the <code>if</code> doesn't do anything.</li>
</ul>
<p>Apart from that, I think your algorithm is fine.</p>
<h1></h1>
<pre><code>public static int[] GetCountersAfterApplyingOperations(int N, int[] A)
{
    int[] countersArr = new int[N];
    int max = 0;
    int index;
    int setAllCountersOp = N ;
    int floor = 0;

    for (int i = 0; i &lt; A.Length; i++)
    {
        index = A[i] - 1;

        if (index == setAllCountersOp)
        {
            floor = max;
            continue;
        }

        if (countersArr[index] &lt; floor)
        {
            countersArr[index] = floor + 1;
        }
        else
        {
            ++countersArr[index];
        }

        if (countersArr[index] &gt; max)
        {
            ++max ;
        }
    }

    for (int i = 0; i &lt; countersArr.Length; i ++)
    {
        if (countersArr[i] &lt; floor)
        {
            countersArr[i] = floor;
        }
    }

    return countersArr;
}
</code></pre>
    </div>