<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ol>
<li>Regarding your <a href="https://en.cppreference.com/w/cpp/language/typeid" rel="nofollow noreferrer"><code>typeid</code></a>, you have to include the header <a href="https://en.cppreference.com/w/cpp/header/typeinfo" rel="nofollow noreferrer"><code>&lt;typeinfo&gt;</code></a> before being allowed to use it.</li>
<li>In your <code>any_big</code> and <code>any_small</code>: Why does the function <code>static void* Type&lt;T&gt;()</code> return a <code>void*</code>? You could return a <code>const std::type_info&amp;</code> instead</li>
<li><p>Your <code>any_big_obj</code> and <code>any_small_obj</code> are variables defined in the header-file. If you include your <code>any.h</code> in two cpp-files and instantiate the variable templates with the same type, you will get a linker error. Two avoid that, mark the variables as either const or inline (or both, which I suggest)</p>

<pre><code>inline const any_big any_big_obj = ...
</code></pre></li>
<li><p>In <code>any_small::Destroy</code>: The <code>if constexpr</code> check should be <code>!std::is_trivially_destructible_v&lt;T&gt;</code></p></li>
</ol>
    </div>