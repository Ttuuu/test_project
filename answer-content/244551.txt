<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
<p>Please check it if you can, and give your opinion!</p>
</blockquote>
<p><strong>Enable more warnings</strong></p>
<pre><code>warning: this statement may fall through [-Wimplicit-fallthrough=]

unused variables `int a, b, i;`
</code></pre>
<p><strong>Spell check</strong></p>
<p><em>funtion</em></p>
<p><strong>Do not re-enter <code>main()</code></strong></p>
<p>Yes, it is possible, yet makes code review and debug a <a href="https://www.macmillandictionary.com/us/dictionary/american/a-bear" rel="nofollow noreferrer">bear</a> and hard to spin this code off into its own <code>TicTacToe()</code> function.  Don't do that.</p>
<pre><code>if (c == 'Y' || c == 'y') {
  // main();
  alternative code
</code></pre>
<p><strong>Flush when you are done</strong></p>
<p>To insure output is seen when expected, usual a final <code>'\n'</code> is enough for <em>line buffered</em> <code>stdout</code>.</p>
<pre><code>// printf("\nThanks for Playing! :D");
printf("\nThanks for Playing! :D\n");
//                              ^^
</code></pre>
<p>Pedantically, could use <code>fflush(stdout);</code> instead.</p>
<pre><code>printf("\nThanks for Playing! :D");
fflush(stdout);
</code></pre>
<p>This advice applies to all the <code>printf()</code>s.</p>
<p><strong>Format</strong></p>
<p>Always a personal preference, yet at a minimum, add a blank line between functions.</p>
<p><strong>Why <code>float</code>?</strong></p>
<p>Use of floating point here makes little sense.</p>
<pre><code>// float condition;
// if((condition / 'X') == 3.0){

int condition;
if (condition == 3*'X') {
</code></pre>
<p>Further:</p>
<p>Accumulating with <code>condition += marks[i][j];</code> and testing with <code>(condition / 'X') == 3.0</code> or <code>condition == 3*'X'</code> could incorrectly be true under select character coding and alternative values for the "empty" squares.</p>
<p>Alternative:</p>
<pre><code>int32_t condition = 0;
...
condition = condition*256 + marks[i][j];
... 
if (condition == 'X'*(65536 + 256 + 1))) { 
</code></pre>
<p><strong>Test evil user input</strong></p>
<p>Robust code would check the return value of <code>scanf()</code> before using scanned results.</p>
<pre><code>//scanf(...
if (scanf(...) != Expected_Scan_Count) Handle_Error();
</code></pre>
    </div>