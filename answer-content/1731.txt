<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<blockquote>
  <p>I'm using the static member Depth to
  keep track of how deep the visitor has
  gone. Could it be problematic having
  state on my extension methods static
  class?</p>
</blockquote>

<p>Absolutely. The reason for this is simply that <code>static</code> methods should always be thread-safe, they are expected to be self-contained units-of-work, so to speak - currently your variable is not exclusively accessible to the current calling thread. This means that your method/s could have side-effects on execution, dependant on things once-removed from such. Stress testing might make issues become apparent, but without that it is simply a matter of usage and time before things get eerie.</p>

<blockquote>
  <p>Would the SurveyPart abstract class
  make more sense as an interface?</p>
</blockquote>

<p>That depends, do you intend to add any base functionality to this type? Expose any helpful reusable elements that could be contained there and utilised in the same fashion by all inheritors? If so, then yes, otherwise, if the only reason for this type is to constrain other types to a certain model (or adhere to patterns), then no. </p>

<blockquote>
  <p>Am I using Visitor and Composite in
  the right way, or am I borking them
  up?</p>
</blockquote>

<p>To be honest, I'm at work and don't really have time to analyse your patterns right now. Though, the composite pattern might dictate the use of interfaces to de-mark your known types, with levels of abstraction starting form this level.</p>
    </div>