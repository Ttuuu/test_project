<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Use brackets for one-liner blocks (opinionated, but pretty strong consensus for this) </li>
<li>Use shorthand object notation <code>{ val: val }</code> -&gt; <code>{ val }</code></li>
<li>Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters" rel="nofollow noreferrer">default value syntax</a></li>
<li>Prefer <code>const</code> to <code>let</code> (this goes for your test too)</li>
<li>Prefer ternary to if (not true if readability suffers)</li>
<li>Let <code>TreeNode</code> take <code>right</code> and <code>left</code> as parameters</li>
</ul>

<pre class="lang-js prettyprint-override"><code>module.exports = {
  deepestNode(node) {
    const search = (node, depth = 0) =&gt; {
      const { left, right } = node;

      if (!left &amp;&amp; !right) {
        return { node, depth };
      }

      const deepestLeft = left ? search(left, depth + 1) : { depth: -1 };
      const deepestRight = right ? search(right, depth + 1) : { depth: -1 };

      return deepestLeft.depth &gt; deepestRight.depth
        ? deepestLeft
        : deepestRight;
    };
    return search(node).node;
  },
  TreeNode: (val, left = null, right = null) =&gt; ({
    val,
    left,
    right
  })
};


</code></pre>

<p><strong>Update</strong>: fix return value. And typos...</p>

<p><strong>Update 2</strong>: adjusted to @ggorlen point on not mutating the parameter</p>

<p><strong>Update 3</strong>: fix return value (again)</p>
    </div>