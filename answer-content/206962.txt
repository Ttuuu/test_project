<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>I would use a const reference here:</p>

<pre><code>static constexpr auto npos = std::string::npos;

// I would do this.
static constexpr auto const&amp; npos = std::string::npos;
</code></pre>

<p>No point in duplicating storage.<br>
Also declaring global variables is a frowned upon. Especially if they are in the global namespace. At a minimum these should be inside your own namespace, but preferably they should be inside the function.</p>

<p>Dyslexia strikes.<br>
I read the next part to have <code>std::string</code> not <code>std::string_view</code>.<br>
<strike>Prefer to pass parameters (especially those that are not mutated) by const reference. This prevents a copy.</strike></p>

<pre><code>std::vector&lt;std::string&gt; split(std::string_view const&amp; str, std::string_view const&amp; sep = "", std::size_t maxsplit = std::numeric_limits&lt;std::size_t&gt;::max())

                                               ^^^^^^^^                     ^^^^^^^^
</code></pre>

<p></p>

<p>I don't like this:</p>

<pre><code>if (auto end = str.find_first_of(whitespace, start); end != npos &amp;&amp; splits &lt; maxsplit)
</code></pre>

<p>I did find that this is a C++17 extension. But it puts way too much information on one line. Personally I would split this across two lines.</p>

<pre><code>auto end = str.find_first_of(whitespace, start);
if (end != npos &amp;&amp; splits &lt; maxsplit)
</code></pre>

<p>As a side note splitting the line by white space can be written more simply as:</p>

<pre><code> std::stringstream  stream(str);
 return std::vector&lt;std::string&gt;(std::istream_iterator&lt;std::string&gt;(stream),
                                 std::istream_iterator&lt;std::string&gt;());
</code></pre>
    </div>