<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li><p>Using a symbolic constant (<code>INVALID_PARAMETER</code>) along with a literal <code>0</code> as a return value is not the cleanest solution. As a side note, a return value signifying an error is traditionally negative.</p></li>
<li><p>The best kept secret of insertion sort is the fact that the <code>j &gt; 0 &amp;&amp; arr[j - 1] &gt; key</code> termination condition of an inner loop is suboptimal. It tests two conditions in every iteration. It is possible to get away with only one test: check wether the <code>key &lt; arr[0]</code> first. Consider an inner loop along the lines of key </p>

<pre><code>    int j;
    if (key &lt; arr[0]) {
        // Now key shall for sure become leftmost. Don't bother testing values.
        for (j = i; j &gt; 0; j--) {
            arr[j] = arr[j - 1];
        }
    } else {
        // Now arr[0] is a natural sentinel. Don't bother testing indices.
        for (j = i; key &lt; arr[j - 1]; j--)
            arr[j] = arr[j - 1];
        }
    }
    arr[j] = key;
</code></pre></li>
<li><p>Otherwise, LGTM.</p></li>
</ul>
    </div>