<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There is absolutely <strong>no overhead</strong> as they both produce the exact same IL code once edited to use same comparison (<code>s.Date.Equals(selectedDate)</code>) and result type (<code>IEnumerable&lt;T&gt;</code>).</p>

<p><strong>Lambda expression</strong> (complete example)</p>

<pre><code>using System;
using System.Linq;

public class C {
    public void M() {
        DateTime selectedDate = DateTime.Now;
        S[] _surveyList = {};

        var list = _surveyList
            .Where(s =&gt; s.Date.Equals(selectedDate))
            .Select(s =&gt; s.Joint);
    }

    private class S{
        public DateTime Date {get;set;}
        public String Joint {get;set;}
    }
}
</code></pre>

<p><strong>Query expression</strong> (equivalent complete example)</p>

<pre><code>using System;
using System.Linq;

public class C {
    public void M() {
        DateTime selectedDate = DateTime.Now;
        S[] _surveyList = {};

        var list = from s in _surveyList
           where s.Date.Equals(selectedDate)
           select s.Joint;
    }

    private class S{
        public DateTime Date {get;set;}
        public String Joint {get;set;}
    }
}
</code></pre>

<p>You can generate the IL result using an online tool like <a href="http://sharplab.io" rel="nofollow noreferrer">sharplab.io</a> and then compare both using a file diff tool like <a href="https://www.diffnow.com/" rel="nofollow noreferrer">diffnow.com</a>.</p>

<p>So as @nickles80 mentionned, it's up to your preference regarding the readability</p>
    </div>