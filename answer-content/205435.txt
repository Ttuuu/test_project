<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>Let's start with the zipcode data imported from the CSV file. This should probably be contained in its own method:</p>

<pre><code>def get_zipcodes(zip_code_col_name, file_name="Downloads/test_order.csv"):
    excel_data = pd.read_csv(file_name, encoding='utf8')
    if zip_code_col_name not in excel_data.columns:
        raise ValueError("Missing zipcode column")
    return excel_data[zip_code_col_name].unique().tolist()
</code></pre>

<p>Note that <code>pandas.Series</code> objects have a <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.unique.html" rel="nofollow noreferrer"><code>unique</code></a> method that avoids your expensive loop (the <code>in</code> lookup is <span class="math-container">\$\mathcal{O}(n)\$</span> for lists). If that was not the case you could have used <code>set(excel_data[zip_code_col_name].tolist())</code>, instead. The <code>tolist</code> is not strictly needed, since a <code>pandas.Series</code> is also iterable (and that is all you do with it).</p>

<p>Your main code should also be in a function (called <code>main</code>, if you can think of nothing else):</p>

<pre><code>def main():
    # Putting max call to 49 for 1 hour
    get_geo_info_limited = RateLimiter(max_calls=49, period=3600, callback=limited)(get_geo_info)

    results = [get_geo_info_limited(zipcode, API_KEY, RETURN_FULL_RESULTS) for zipcode in zipcodes]
    df = pd.DataFrame(results)
    df.to_csv('Downloads/geo_info.csv', index=False)
</code></pre>

<p>Here I used the fact that <code>RateLimiter</code> can also be used as a decorator (which is usually done using the <code>@RateLimiter</code> syntax during function definition, but can also be done manually like here) and a list comprehension instead of a manual <code>for</code> loop.</p>

<p>You can then call this <code>main</code> function under a <a href="http://stackoverflow.com/questions/419163/what-does-if-name-main-do"><code>if __name__ == "__main__":</code> guard</a> to enable importing from this module from another script.</p>
    </div>