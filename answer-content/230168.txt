<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p><strong>A bug:</strong> the first set of nested loops in <code>verhorlist</code>, which is said to find columns but actually finds rows, tests <code>j == self.cols-1</code> but should test <code>i == self.cols-1</code>. </p>

<p>This is why for puzzle 3, the horizontal tile in the middle row is not found. As a secondary effect, a ton of broken solutions is printed for puzzle 3, because as we lack a tile, <code>len(blank_tiles) == 0</code> even though not all words have been assigned.</p>

<p><strong>The algorithm</strong>:</p>

<p>The algorithm can be switched from:</p>

<ul>
<li>For each tile

<ul>
<li>Try each fitting word</li>
</ul></li>
</ul>

<p>To:</p>

<ul>
<li>For each tile

<ul>
<li>Try <em>one</em> fitting word</li>
</ul></li>
</ul>

<p>This is also complete: every (fitting) combination of tile and word is tried, but by backtracking and then trying to put the same word somewhere else, not by every node in the recursion tree trying all combinations. The effect is that the branching factor of the recursion tree is dramatically reduced. </p>

<p>The time to solve a puzzle still depends dramatically on the search order, puzzle 3 can be solved on my PC in 2 ms or up to 240 ms (perhaps my PC is faster than the guidelines anticipate?), depending on the order of the word list. If "ABCDEFG" is put down first, everything just falls into place. If anything else is placed first, some trial-and-error likely results - but not an impossibly large number of tries.</p>

<p>Further improvement is possible, by intentionally using a good search order. "The order the words are in the file" is accidentally a good order for puzzle 3, but in general it may not be. The word that should go first is the word that has the fewest places it can go, this is an example of the Most Constraining Variable (MCV) heuristic for constraint satisfaction problem solvers. The other famous heuristic, LCV (least constraining value), is harder to give meaning in this modelling of the problem. Perhaps it is good to try to assign a word to a tile where it already crosses some other word, trying to eagerly cross words with each other when possible, so that the other place where the word also fits stays "unpolluted" for longer.</p>
    </div>