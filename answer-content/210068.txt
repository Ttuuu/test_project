<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There's a small bug in your code: a bill of $200.50 will be tipped at the wrong amount since you are testing for <code>cost &lt; 201</code>.</p>

<p>It's probably easier to just us <code>if</code>s that are sorted and return the tip from the function on the first one that passes. That avoids the need to test ranges like <code>cost &gt; 49 &amp;&amp; cost &lt; 201</code>. If there were lots of categories you could make a lookup table that would work like this: </p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const tiptable = [
    {min: 200, tip: .1},
    {min:  50, tip: .15},
    {min:   0, tip: .2} 
]

let cost = 51
let tip = tiptable.find(tip =&gt; cost &gt; tip.min).tip
console.log(tip)

`find()` will give you the first object that matches. But that only makes sense if there are enough categories that `if` statement get unwieldy.</code></pre>
</div>
</div>


<p><code>find()</code> will give you the first object that matches. But that only makes sense if there are enough categories that <code>if</code> statement get unwieldy.</p>

<p>Other parts of the code can be simplified with some of the nice functional tools javascript gives us. You can make a one-line sum using <code>reduce()</code> and you can make an array of tips using <code>map()</code> allowing you to make the arrays directly without <code>for</code> loops.</p>

<p>For example:</p>

<p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>const bills = [124, 48, 268];

function getTip(cost){
    if (cost &lt; 50) return .2
    if (cost &lt;= 200) return .15  // not clear whether this should be &lt; or  &lt;=
    return .1
}

let with_tip = bills.map(cost =&gt; cost + cost * getTip(cost) )
let sum = with_tip.reduce((total, n) =&gt; total + n)

console.log('Bills with tip: ', with_tip.map(t =&gt; t.toLocaleString("en-US", {style: 'currency', currency: 'USD'})))
console.log('Total:', sum.toLocaleString("en-US", {style: 'currency', currency: 'USD'}))</code></pre>
</div>
</div>


<p>Also, just as an example I added nicely-formatted currency strings with <code>toLocaleString</code>.</p>
    </div>