<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>There are no big issues with your method, but I noticed something that can be improved:</p>
<p><strong>Variable declaration</strong></p>
<p>In Java is not common to declare the variables at the beginning of the method:</p>
<pre class="lang-java prettyprint-override"><code>Uri uri;
Cursor cursor;
VideoAdapter videoAdapter;
int column_index_data,thum;

String absolutePathThumb;
</code></pre>
<p>Declare and initialize variables in the same place, it's easier to read and maintain.</p>
<p>By the way, <code>videoAdapter</code> is declared but never used, that's another reason why you should avoid doing this.</p>
<p><strong>Query results not used</strong></p>
<p>Here you configure the projection:</p>
<pre class="lang-java prettyprint-override"><code>String[] projection = {MediaStore.MediaColumns.DATA, MediaStore.Video.Media.BUCKET_DISPLAY_NAME, MediaStore.Video.Media._ID,MediaStore.Video.Thumbnails.DATA};
</code></pre>
<p>But after the query you never use the results for <code>MediaStore.Video.Media.BUCKET_DISPLAY_NAME</code> and <code>MediaStore.Video.Media._ID</code>.</p>
<p><strong>Close the resources</strong></p>
<p>The <code>Cursor</code> object which is returned from the query is a resouce that needs to be closed:</p>
<pre class="lang-java prettyprint-override"><code>cursor = getApplicationContext().getContentResolver().query(uri,projection,null,null,orderBy);
</code></pre>
<p>To close it automatically use the <code>try-with-resources</code> statement:</p>
<pre class="lang-java prettyprint-override"><code>try (Cursor cursor = getApplicationContext().getContentResolver().query(uri,projection,null,null,orderBy)) {                    
// ...
}
</code></pre>
<p><strong>Camelcase instead of underscore</strong></p>
<p>From the <a href="https://www.oracle.com/java/technologies/javase/codeconventions-namingconventions.html#367" rel="nofollow noreferrer">Java Naming Convention</a>:</p>
<blockquote>
<p>Methods should be verbs, in mixed case with the first letter
lowercase, with the first letter of each internal word capitalized.</p>
</blockquote>
<p>So instead of <code>videoModel.setVideo_uri()</code> use <code>videoModel.setVideoUri()</code> or even better <code>videoModel.setUri()</code>. Similarly for the other methods.</p>
<p><strong>Duplicated assignment</strong></p>
<p><code>videoModel.setDuration(duration)</code> is called three times. Compute the value of <code>duration</code> first and add it to <code>videoModel</code> only once.</p>
<p><strong>Ternary operator instead of if-else</strong></p>
<p>Sometime using the ternary operator is better for readability. For example instead of:</p>
<pre class="lang-java prettyprint-override"><code>if (extension!=null){
    videoModel.setVideo_extension(extension);
}else {
    videoModel.setVideo_extension("mp4");
}
</code></pre>
<p>You can get the same result with:</p>
<pre class="lang-java prettyprint-override"><code>String extension = extension != null ? extension : "mp4";
videoModel.setVideo_extension(extension);
</code></pre>
<p><strong>Documentation</strong></p>
<p>In the link you posted there is an <a href="https://developer.android.com/training/data-storage/shared/media#query-collection" rel="nofollow noreferrer">example</a> that is very similar to your use case. Most of my suggestions are already mentioned there, read it carefully.</p>
    </div>