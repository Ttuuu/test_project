<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<ul>
<li>Much as I like the presence of docstrings for the functions, I miss one for the module.  </li>
<li>several docstrings mention <code>int (in base 10)</code> - I hold <code>int</code>s to be without base, represented base 2 if any (â†’ Bitwise Operations) (and to have a default base to use in conversions from/to <code>str</code>)</li>
<li><code>letter_from_num(num)</code>/<code>digit_from_letter(letter)</code>:<br>
in my book, a digit is (an encoding of) a glyph in a string representation of a number:<br>
I'd choose <code>digit_for_num(num)</code> and <code>num_for_digit(digit)</code><br>
(and hide all "decimal digit special casing" here)<br>
- These functions are not as defensive as <code>decode()</code>/<code>encode()</code><br>
- the literal <code>97</code> seems uncalled for  </li>
<li>decode(digits, base):<br>
- the comment containing <code>helper function that handles hexadecimal</code> seems incorrect<br>
(&amp; your IDE or you seem to have missed a variable renamed in the next one)<br>
- after <code>remainder = number % base</code>, I'd be annoyed if 
    <code>remainder &gt;= 10 and base &lt;= 10</code><br>
- the <code>else:</code>-branch in "the non-final-digit handling" seems pointless<br>
- it is cleaner and conventional to just start digit handling with <code>result *= base</code> unconditionally, obsoleting the <code>enumerate</code></li>
<li><code>encode(number, base)</code><br>
- <code>helps me to make sure that we will work</code> just before digit handling is cryptic, at best<br>
- assigning <code>new_base_number = new_base_number[::-1]</code>to just return it looks clumsy</li>
<li><code>convert(digits, base1, base2)</code><br>
- none of the internal comments looks helpful<br>
- why special-case <code>base1 == 10</code>?<br>
- <code>decimal_digit</code> looks a misnomer - <em>value</em>? <em>number</em>, <em>integer</em>?</li>
</ul>

<p>I miss the (trivial) <code>Decode digits from hexadecimal (base 16).</code> part of the task quoted in the code with embedded documentation presented.</p>
    </div>