<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>IMHO, static <code>TryParse</code> method only makes sense for value types, when its impossible to mutate an existing instance and/or its hard to tell the difference between <code>default(T)</code> and successfully parsed value. For all other situations a constructor (for immutable types) or an instance method (for mutable types) will do a better job at keeping your code clean.</p>

<p>I am OK with this (for immutable objects):</p>

<pre><code>// you can throw exception if string should be valid, but it is not
var expression = new OrderExpression(str);
</code></pre>

<p>Or this (for mutable objects which need to be updated):</p>

<pre><code>var expression = new OrderExpression();
expression.TryParse(str);
//or 
//expression.TryUpdate(str);
</code></pre>

<p>Or this (good approach in general):</p>

<pre><code>//for invalid strings: return null or throw
OrderExpression expression = _parser.Parse(str);
</code></pre>

<p>But using static method in your case does not feel right to me.</p>
    </div>