<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h2>Use portable code as much as possible</h2>

<p>You should avoid </p>

<pre><code>#include &lt;Windows.h&gt;
</code></pre>

<p>when you can use portable c++ features (according the current c++ standard) instead:</p>

<pre><code>Sleep(1000);
</code></pre>

<p>should be </p>

<pre><code>std::this_thread::sleep_for(1s); // needs to #include &lt;thread&gt;
</code></pre>

<p>As you see that's much more readable, and will compile on other operating system environments as well.</p>

<h2>Use a better random number generator</h2>

<pre><code>letter = rand() % 27 + 64; 
</code></pre>

<p>Doesn't provide a good random number generator (besides you missed to initialize the seed with <code>srand()</code> and your program will produce the same sequence of random numbers with every run).</p>

<p>C++ provides easy to use and configurable (regarding the wanted number distribution requirements) random generators like listed <a href="http://en.cppreference.com/w/cpp/concept/RandomNumberDistribution" rel="nofollow noreferrer">here</a>.</p>

<h2>Do not use <code>system("pause");</code></h2>

<p>Besides that statement isn't portable again, it introduces security problems. If there's a program existent and accessible at the system called <code>pause</code> that doesn't do what's intended (but some malicious things instead), that one will be executed.</p>

<p>If you wan't to wait for some input rather use <code>std::cin &gt;&gt; dummy;</code> or such.</p>

<h2>Check the state of input operations</h2>

<pre><code> cin &gt;&gt; ph;
</code></pre>

<p>You never checked that the user inputted a valid number. If something like <code>xxxx</code> is entered, your loop will never stop.</p>

<p>Better do something like:</p>

<pre><code>bool stop = false;
do
{
    int ph;
    cout &lt;&lt; "Press 1 to continue or 2 to stop\n";
    if(cin &gt;&gt; ph) {
         if (ph == 1)
         {
             Points += act();
         }
         else if(ph == 2)
         {
             stop = true;
         }
    }
    else {
         cin.clear();
         std::string dummy;
         std::getline(cin,dummy); // Consume the invalid input
    }
} while(!stop);
</code></pre>

<hr>

<blockquote>
  <p>I would like to add a way to either check if a word is correct, or to suggest words but it would mean I need to connect it to a dictionary of some sort (which I don't know how to do).</p>
</blockquote>

<p>You can use <a href="http://en.cppreference.com/w/cpp/container/map" rel="nofollow noreferrer"><code>std::map</code></a> or <a href="http://en.cppreference.com/w/cpp/container/unordered_map" rel="nofollow noreferrer"><code>std::unordered_map</code></a> to create dictionaries.</p>

<p>I can't give you any sample code how to integrate these in your program, since it's unclear for me how you wan't to make use of these exactly.</p>
    </div>