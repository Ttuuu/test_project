<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>In your layout XML file, keep the <code>checked</code> value of all <code>RadioButton</code> to <code>false</code>.</p>

<pre><code>&lt;RadioButton
    android:id="@+id/rb_rad1"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_marginTop="@dimen/dp_10"
    android:checked="false"
    android:text="@string/text1"
    app:layout_constraintLeft_toLeftOf="parent"
    app:layout_constraintTop_toBottomOf="@+id/xyz" /&gt;
...
</code></pre>

<p>Inside onBindViewHolder() method, pass the clicked <code>RadioButton</code> to another method <code>customRadioButtonOnClick</code> where you'll check what value the passed <code>RadioButton</code> holds and based on that, set the <code>checked</code> values of that one or the other buttons to <code>true</code> or <code>false</code> as per your logic like this:</p>

<pre><code>        rb_rad1.setOnClickListener {
            customRadioButtonOnClick(rb_rad1)
        }
        rb_rad2.setOnClickListener {
            customRadioButtonOnClick(rb_rad2)
        }
        rb_rad3.setOnClickListener {
            customRadioButtonOnClick(rb_rad3)
        }
        rb_rad4.setOnClickListener {
            customRadioButtonOnClick(rb_rad4)
        }
</code></pre>

<p><code>customRadioButtonOnClick</code></p>

<pre><code>private fun customRadioButtonOnClick(radioButton: RadioButton) {
    when (radioButton) {
        rb_rad1 -&gt; rb_rad1.isChecked = true
        rb_rad2 -&gt; rb_rad2.isChecked = true
        rb_rad3 -&gt; rb_rad3.isChecked = true
        rb_rad4 -&gt; rb_rad4.isChecked = true
    }
}  
</code></pre>
    </div>