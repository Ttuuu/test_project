<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<h1>Use augmented assignments</h1>

<p>Because people do things like <code>var = var + updateValue</code> Python supports writing this as <code>var += updateValue</code>. This means you don't have to write the name of the variable twice.</p>

<p>What is even cooler, this works for <a href="https://docs.python.org/3/reference/simple_stmts.html#grammar-token-augmented-assignment-stmt" rel="noreferrer">lots of binary operations</a>, like <code>var *= multiplier</code> is the same as <code>var = var * multiplier</code> and <code>var %= mod</code> is the same as <code>var = var % mod</code>.</p>

<h1>If you are copying and pasting your code, something is wrong</h1>

<ul>
<li><p>If you have code that is too repetitive, you can probably do it in a smarter way.</p></li>
<li><p>If you have duplicate code, you can probably factor it in a function.</p></li>
</ul>

<p>I'm talking particularly about your <code>if</code> trains to update hand values. First of all, you should have a function that computes the value of a given hand and call it twice, instead of writing the trains of <code>if</code>s twice; this reduces the probability of making a mistake!</p>

<p>After factoring your <code>if</code>s into a function, you still have <em>way too many</em> if statements that are too similar... so there might be a better way to do it!</p>

<p>Some suggestions come to mind. Instead of checking if each card is in the hand, use a <code>for</code> loop to go over the cards in the hand:</p>

<pre class="lang-py prettyprint-override"><code>for card in hand:
  pass
</code></pre>

<p>then, we need to check the value of each card. Note that the suit doesn't count for the value, so you can ignore the suits and only focus on the first character:</p>

<pre class="lang-py prettyprint-override"><code>for card in hand:
  cardValue = card[0]
  # ...
</code></pre>

<p>and then check the value of the card in a smarter way. You could, for example, check if the card is a number or an ace; all the other cards are worth 10.</p>

<pre class="lang-py prettyprint-override"><code>handValue = 0
for card in hand:
  cardValue = card[0] # a 10 will be "1"
  if cardValue in "23456789":
    handValue += int(cardValue)
  elif cardValue == "A":
    handValue += 11
  else:
    handValue += 10

if handValue &gt; 21:
  # check if there are aces, etc
</code></pre>

<p>Probably in the first loop you can even count the aces, so that latter on it is easier to handle the case where the hand busts the 21 cap.</p>
    </div>