<div class="s-prose s-prose__disable-spoiler-hover js-post-body" itemprop="text">
<p>First of all, <a href="https://unix.stackexchange.com/q/310446/135943">prefer <code>-E</code> to <code>-r</code></a>; it's more portable.</p>

<p>However, since you're using the <code>\U</code> GNU extension in any case, this isn't that crucial.</p>

<p>Second, I assume <code>echo</code> is a stand-in for a more complex command.  If there is in fact no complex command, consider using a <a href="http://mywiki.wooledge.org/HereDocument" rel="nofollow noreferrer">Here String or a Here Doc</a> instead.</p>

<p>Crucially, you don't need to fire up two Sed processes just to run two Sed commands.  Sed is a complete programming language in itself.  Just separate the two commands with a semicolon: <code>sed 's/foo/bar/;s/frip/baz/'</code></p>

<p>However, in this case you don't even need that, because you only need a single substitution.</p>

<pre><code>sed -E 's/_([a-z])/\U\1/g' &lt;&lt;&lt; my_long_variable
</code></pre>

<hr>

<p>There is another aspect here.  You shouldn't often need to change case <em>in scripts</em> (and certainly not in Bash).  But if you're doing this in your editor, you should use <code>vi</code> rather than a Bash script for the editing.  <code>\U</code> and its relatives <em>are</em> standard features of <code>vi</code>, though not of Sed.</p>

<p>So within <code>vi</code>, on a line of text containing only the variable name, you can use:</p>

<pre><code>:s/_\([a-z]\)/\U\1/g
</code></pre>

<p>This is portable (<a href="http://pubs.opengroup.org/onlinepubs/9699919799/utilities/vi.html" rel="nofollow noreferrer">POSIX compliant</a>) and will work on <em>any</em> system that has <code>vi</code>, even the most minimal implementation.</p>
    </div>